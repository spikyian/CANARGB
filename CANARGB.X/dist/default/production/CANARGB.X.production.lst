

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Apr 23 15:01:24 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F27Q83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,space=0,delta=1
     6                           	psect	idataBANK5,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,space=0,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,space=0,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1,group=2
   104                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1,group=1
   131                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1,group=1
   132                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,space=0,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,space=0,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,space=0,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,space=0,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,space=0,delta=1,group=1
   139                           	psect	text120,global,reloc=2,class=CODE,space=0,delta=1,group=1
   140                           	psect	text121,global,reloc=2,class=CODE,space=0,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,space=0,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,space=0,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,space=0,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,space=0,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,space=0,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,space=0,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,space=0,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,space=0,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,space=0,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,space=0,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,space=0,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,space=0,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,space=0,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,space=0,delta=1
   155                           	psect	text136,global,reloc=2,class=CODE,space=0,delta=1
   156                           	psect	text137,global,reloc=2,class=CODE,space=0,delta=1
   157                           	psect	text138,global,reloc=2,class=CODE,space=0,delta=1
   158                           	psect	text139,global,reloc=2,class=CODE,space=0,delta=1
   159                           	psect	text140,global,reloc=2,class=CODE,space=0,delta=1
   160                           	psect	text141,global,reloc=2,class=CODE,space=0,delta=1
   161                           	psect	text142,global,reloc=2,class=CODE,space=0,delta=1
   162                           	psect	text143,global,reloc=2,class=CODE,space=0,delta=1
   163                           	psect	text144,global,reloc=2,class=CODE,space=0,delta=1
   164                           	psect	text145,global,reloc=4,class=CODE,space=0,delta=1
   165                           	psect	text146,global,reloc=4,class=CODE,space=0,delta=1
   166                           	psect	text147,global,reloc=4,class=CODE,space=0,delta=1
   167                           	psect	ivt0x900,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   168                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   169                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   170                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   171   000000                     
   172                           ; Generated 24/03/2025 GMT
   173                           ; 
   174                           ; Copyright © 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
   175                           ; All rights reserved.
   176                           ; 
   177                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   178                           ; 
   179                           ; Redistribution and use in source and binary forms, with or without modification, are
   180                           ; permitted provided that the following conditions are met:
   181                           ; 
   182                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   183                           ;        conditions and the following disclaimer.
   184                           ; 
   185                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   186                           ;        of conditions and the following disclaimer in the documentation and/or other
   187                           ;        materials provided with the distribution. Publication is not required when
   188                           ;        this file is used in an embedded application.
   189                           ; 
   190                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   191                           ;        software without specific prior written permission.
   192                           ; 
   193                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   194                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   195                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   196                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   197                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   198                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   199                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   200                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   201                           ; 
   202                           ; 
   203                           ; Code-generator required, PIC18F27Q83 Definitions
   204                           ; 
   205                           ; SFR Addresses
   206   0004E0                     bsr             equ	1248
   207   0004E9                     fsr0            equ	1257
   208   0004EA                     fsr0h           equ	1258
   209   0004E9                     fsr0l           equ	1257
   210   0004E1                     fsr1            equ	1249
   211   0004E2                     fsr1h           equ	1250
   212   0004E1                     fsr1l           equ	1249
   213   0004D9                     fsr2            equ	1241
   214   0004DA                     fsr2h           equ	1242
   215   0004D9                     fsr2l           equ	1241
   216   0004EF                     indf0           equ	1263
   217   0004E7                     indf1           equ	1255
   218   0004DF                     indf2           equ	1247
   219   0004D6                     intcon          equ	1238
   220   000041                     nvmcon          equ	65
   221   0004F9                     pcl             equ	1273
   222   0004FA                     pclath          equ	1274
   223   0004FB                     pclatu          equ	1275
   224   0004EB                     plusw0          equ	1259
   225   0004E3                     plusw1          equ	1251
   226   0004DB                     plusw2          equ	1243
   227   0004ED                     postdec0        equ	1261
   228   0004E5                     postdec1        equ	1253
   229   0004DD                     postdec2        equ	1245
   230   0004EE                     postinc0        equ	1262
   231   0004E6                     postinc1        equ	1254
   232   0004DE                     postinc2        equ	1246
   233   0004EC                     preinc0         equ	1260
   234   0004E4                     preinc1         equ	1252
   235   0004DC                     preinc2         equ	1244
   236   0004F3                     prod            equ	1267
   237   0004F4                     prodh           equ	1268
   238   0004F3                     prodl           equ	1267
   239   0004D8                     status          equ	1240
   240   0004F5                     tablat          equ	1269
   241   0004F6                     tblptr          equ	1270
   242   0004F7                     tblptrh         equ	1271
   243   0004F6                     tblptrl         equ	1270
   244   0004F8                     tblptru         equ	1272
   245   0004FD                     tosl            equ	1277
   246   0004E8                     wreg            equ	1256
   247   000038                     BOOTREG         equ	56	;# 
   248   000039                     CLKRCON         equ	57	;# 
   249   00003A                     CLKRCLK         equ	58	;# 
   250   000040                     NVMCON0         equ	64	;# 
   251   000041                     NVMCON1         equ	65	;# 
   252   000042                     NVMLOCK         equ	66	;# 
   253   000043                     NVMADR          equ	67	;# 
   254   000043                     NVMADRL         equ	67	;# 
   255   000044                     NVMADRH         equ	68	;# 
   256   000045                     NVMADRU         equ	69	;# 
   257   000046                     NVMDAT          equ	70	;# 
   258   000046                     NVMDATL         equ	70	;# 
   259   000047                     NVMDATH         equ	71	;# 
   260   000048                     VREGCON         equ	72	;# 
   261   000049                     BORCON          equ	73	;# 
   262   00004A                     HLVDCON0        equ	74	;# 
   263   00004B                     HLVDCON1        equ	75	;# 
   264   00004C                     ZCDCON          equ	76	;# 
   265   000060                     PMD0            equ	96	;# 
   266   000061                     PMD1            equ	97	;# 
   267   000062                     PMD2            equ	98	;# 
   268   000063                     PMD3            equ	99	;# 
   269   000064                     PMD4            equ	100	;# 
   270   000065                     PMD5            equ	101	;# 
   271   000066                     PMD6            equ	102	;# 
   272   000067                     PMD7            equ	103	;# 
   273   000068                     PMD8            equ	104	;# 
   274   00006A                     MD1CON0         equ	106	;# 
   275   00006B                     MD1CON1         equ	107	;# 
   276   00006C                     MD1SRC          equ	108	;# 
   277   00006D                     MD1CARL         equ	109	;# 
   278   00006E                     MD1CARH         equ	110	;# 
   279   00006F                     CMOUT           equ	111	;# 
   280   000070                     CM1CON0         equ	112	;# 
   281   000071                     CM1CON1         equ	113	;# 
   282   000072                     CM1NCH          equ	114	;# 
   283   000073                     CM1PCH          equ	115	;# 
   284   000074                     CM2CON0         equ	116	;# 
   285   000075                     CM2CON1         equ	117	;# 
   286   000076                     CM2NCH          equ	118	;# 
   287   000077                     CM2PCH          equ	119	;# 
   288   000078                     WDTCON0         equ	120	;# 
   289   000079                     WDTCON1         equ	121	;# 
   290   00007A                     WDTPSL          equ	122	;# 
   291   00007B                     WDTPSH          equ	123	;# 
   292   00007C                     WDTTMR          equ	124	;# 
   293   00007D                     DAC1DAT         equ	125	;# 
   294   00007D                     DAC1DATL        equ	125	;# 
   295   00007F                     DAC1CON         equ	127	;# 
   296   000080                     SPI1RXB         equ	128	;# 
   297   000081                     SPI1TXB         equ	129	;# 
   298   000082                     SPI1TCNT        equ	130	;# 
   299   000082                     SPI1TCNTL       equ	130	;# 
   300   000083                     SPI1TCNTH       equ	131	;# 
   301   000084                     SPI1CON0        equ	132	;# 
   302   000085                     SPI1CON1        equ	133	;# 
   303   000086                     SPI1CON2        equ	134	;# 
   304   000087                     SPI1STATUS      equ	135	;# 
   305   000088                     SPI1TWIDTH      equ	136	;# 
   306   000089                     SPI1BAUD        equ	137	;# 
   307   00008A                     SPI1INTF        equ	138	;# 
   308   00008B                     SPI1INTE        equ	139	;# 
   309   00008C                     SPI1CLK         equ	140	;# 
   310   00008D                     SPI2RXB         equ	141	;# 
   311   00008E                     SPI2TXB         equ	142	;# 
   312   00008F                     SPI2TCNT        equ	143	;# 
   313   00008F                     SPI2TCNTL       equ	143	;# 
   314   000090                     SPI2TCNTH       equ	144	;# 
   315   000091                     SPI2CON0        equ	145	;# 
   316   000092                     SPI2CON1        equ	146	;# 
   317   000093                     SPI2CON2        equ	147	;# 
   318   000094                     SPI2STATUS      equ	148	;# 
   319   000095                     SPI2TWIDTH      equ	149	;# 
   320   000096                     SPI2BAUD        equ	150	;# 
   321   000097                     SPI2INTF        equ	151	;# 
   322   000098                     SPI2INTE        equ	152	;# 
   323   000099                     SPI2CLK         equ	153	;# 
   324   0000AC                     ACTCON          equ	172	;# 
   325   0000AD                     OSCCON1         equ	173	;# 
   326   0000AE                     OSCCON2         equ	174	;# 
   327   0000AF                     OSCCON3         equ	175	;# 
   328   0000B0                     OSCTUNE         equ	176	;# 
   329   0000B1                     OSCFRQ          equ	177	;# 
   330   0000B1                     OSCFREQ         equ	177	;# 
   331   0000B2                     OSCSTAT         equ	178	;# 
   332   0000B2                     OSCSTAT1        equ	178	;# 
   333   0000B3                     OSCEN           equ	179	;# 
   334   0000B4                     PRLOCK          equ	180	;# 
   335   0000B5                     SCANPR          equ	181	;# 
   336   0000B6                     DMA1PR          equ	182	;# 
   337   0000B7                     DMA2PR          equ	183	;# 
   338   0000B8                     DMA3PR          equ	184	;# 
   339   0000B9                     DMA4PR          equ	185	;# 
   340   0000BA                     DMA5PR          equ	186	;# 
   341   0000BB                     DMA6PR          equ	187	;# 
   342   0000BC                     DMA7PR          equ	188	;# 
   343   0000BD                     DMA8PR          equ	189	;# 
   344   0000BE                     MAINPR          equ	190	;# 
   345   0000BF                     ISRPR           equ	191	;# 
   346   0000D4                     CLCDATA         equ	212	;# 
   347   0000D5                     CLCSELECT       equ	213	;# 
   348   0000D6                     CLCnCON         equ	214	;# 
   349   0000D7                     CLCnPOL         equ	215	;# 
   350   0000D8                     CLCnSEL0        equ	216	;# 
   351   0000D9                     CLCnSEL1        equ	217	;# 
   352   0000DA                     CLCnSEL2        equ	218	;# 
   353   0000DB                     CLCnSEL3        equ	219	;# 
   354   0000DC                     CLCnGLS0        equ	220	;# 
   355   0000DD                     CLCnGLS1        equ	221	;# 
   356   0000DE                     CLCnGLS2        equ	222	;# 
   357   0000DF                     CLCnGLS3        equ	223	;# 
   358   0000E8                     DMASELECT       equ	232	;# 
   359   0000E9                     DMAnBUF         equ	233	;# 
   360   0000EA                     DMAnDCNT        equ	234	;# 
   361   0000EA                     DMAnDCNTL       equ	234	;# 
   362   0000EB                     DMAnDCNTH       equ	235	;# 
   363   0000EC                     DMAnDPTR        equ	236	;# 
   364   0000EC                     DMAnDPTRL       equ	236	;# 
   365   0000ED                     DMAnDPTRH       equ	237	;# 
   366   0000EE                     DMAnDSZ         equ	238	;# 
   367   0000EE                     DMAnDSZL        equ	238	;# 
   368   0000EF                     DMAnDSZH        equ	239	;# 
   369   0000F0                     DMAnDSA         equ	240	;# 
   370   0000F0                     DMAnDSAL        equ	240	;# 
   371   0000F1                     DMAnDSAH        equ	241	;# 
   372   0000F2                     DMAnSCNT        equ	242	;# 
   373   0000F2                     DMAnSCNTL       equ	242	;# 
   374   0000F3                     DMAnSCNTH       equ	243	;# 
   375   0000F4                     DMAnSPTR        equ	244	;# 
   376   0000F4                     DMAnSPTRL       equ	244	;# 
   377   0000F5                     DMAnSPTRH       equ	245	;# 
   378   0000F6                     DMAnSPTRU       equ	246	;# 
   379   0000F7                     DMAnSSZ         equ	247	;# 
   380   0000F7                     DMAnSSZL        equ	247	;# 
   381   0000F8                     DMAnSSZH        equ	248	;# 
   382   0000F9                     DMAnSSA         equ	249	;# 
   383   0000F9                     DMAnSSAL        equ	249	;# 
   384   0000FA                     DMAnSSAH        equ	250	;# 
   385   0000FB                     DMAnSSAU        equ	251	;# 
   386   0000FC                     DMAnCON0        equ	252	;# 
   387   0000FD                     DMAnCON1        equ	253	;# 
   388   0000FE                     DMAnAIRQ        equ	254	;# 
   389   0000FF                     DMAnSIRQ        equ	255	;# 
   390   000100                     C1CONL          equ	256	;# 
   391   000101                     C1CONH          equ	257	;# 
   392   000102                     C1CONU          equ	258	;# 
   393   000103                     C1CONT          equ	259	;# 
   394   000104                     C1NBTCFGL       equ	260	;# 
   395   000105                     C1NBTCFGH       equ	261	;# 
   396   000106                     C1NBTCFGU       equ	262	;# 
   397   000107                     C1NBTCFGT       equ	263	;# 
   398   000108                     C1DBTCFGL       equ	264	;# 
   399   000109                     C1DBTCFGH       equ	265	;# 
   400   00010A                     C1DBTCFGU       equ	266	;# 
   401   00010B                     C1DBTCFGT       equ	267	;# 
   402   00010C                     C1TDCL          equ	268	;# 
   403   00010D                     C1TDCH          equ	269	;# 
   404   00010E                     C1TDCU          equ	270	;# 
   405   000110                     C1TBC           equ	272	;# 
   406   000110                     C1TBCL          equ	272	;# 
   407   000111                     C1TBCH          equ	273	;# 
   408   000112                     C1TBCU          equ	274	;# 
   409   000113                     C1TBCT          equ	275	;# 
   410   000114                     C1TSCONL        equ	276	;# 
   411   000115                     C1TSCONH        equ	277	;# 
   412   000116                     C1TSCONU        equ	278	;# 
   413   000117                     C1TSCONT        equ	279	;# 
   414   000118                     C1VECL          equ	280	;# 
   415   000119                     C1VECH          equ	281	;# 
   416   00011A                     C1VECU          equ	282	;# 
   417   00011B                     C1VECT          equ	283	;# 
   418   00011C                     C1INTL          equ	284	;# 
   419   00011D                     C1INTH          equ	285	;# 
   420   00011E                     C1INTU          equ	286	;# 
   421   00011F                     C1INTT          equ	287	;# 
   422   000120                     C1RXIF          equ	288	;# 
   423   000120                     C1RXIFL         equ	288	;# 
   424   000121                     C1RXIFH         equ	289	;# 
   425   000122                     C1RXIFU         equ	290	;# 
   426   000123                     C1RXIFT         equ	291	;# 
   427   000124                     C1TXIF          equ	292	;# 
   428   000124                     C1TXIFL         equ	292	;# 
   429   000125                     C1TXIFH         equ	293	;# 
   430   000126                     C1TXIFU         equ	294	;# 
   431   000127                     C1TXIFT         equ	295	;# 
   432   000128                     C1RXOVIF        equ	296	;# 
   433   000128                     C1RXOVIFL       equ	296	;# 
   434   000129                     C1RXOVIFH       equ	297	;# 
   435   00012A                     C1RXOVIFU       equ	298	;# 
   436   00012B                     C1RXOVIFT       equ	299	;# 
   437   00012C                     C1TXATIF        equ	300	;# 
   438   00012C                     C1TXATIFL       equ	300	;# 
   439   00012D                     C1TXATIFH       equ	301	;# 
   440   00012E                     C1TXATIFU       equ	302	;# 
   441   00012F                     C1TXATIFT       equ	303	;# 
   442   000130                     C1TXREQ         equ	304	;# 
   443   000130                     C1TXREQL        equ	304	;# 
   444   000131                     C1TXREQH        equ	305	;# 
   445   000132                     C1TXREQU        equ	306	;# 
   446   000133                     C1TXREQT        equ	307	;# 
   447   000134                     C1TRECL         equ	308	;# 
   448   000135                     C1TRECH         equ	309	;# 
   449   000136                     C1TRECU         equ	310	;# 
   450   000137                     C1TRECT         equ	311	;# 
   451   000138                     C1BDIAG0L       equ	312	;# 
   452   000139                     C1BDIAG0H       equ	313	;# 
   453   00013C                     C1BDIAG1L       equ	316	;# 
   454   00013D                     C1BDIAG1H       equ	317	;# 
   455   00013E                     C1BDIAG1U       equ	318	;# 
   456   00013F                     C1BDIAG1T       equ	319	;# 
   457   000140                     C1TEFCONL       equ	320	;# 
   458   000141                     C1TEFCONH       equ	321	;# 
   459   000142                     C1TEFCONU       equ	322	;# 
   460   000143                     C1TEFCONT       equ	323	;# 
   461   000144                     C1TEFSTAL       equ	324	;# 
   462   000145                     C1TEFSTAH       equ	325	;# 
   463   000146                     C1TEFSTAU       equ	326	;# 
   464   000147                     C1TEFSTAT       equ	327	;# 
   465   000148                     C1TEFUA         equ	328	;# 
   466   000148                     C1TEFUAL        equ	328	;# 
   467   000149                     C1TEFUAH        equ	329	;# 
   468   00014A                     C1TEFUAU        equ	330	;# 
   469   00014B                     C1TEFUAT        equ	331	;# 
   470   00014C                     C1FIFOBA        equ	332	;# 
   471   00014C                     C1FIFOBAL       equ	332	;# 
   472   00014D                     C1FIFOBAH       equ	333	;# 
   473   00014E                     C1FIFOBAU       equ	334	;# 
   474   00014F                     C1FIFOBAT       equ	335	;# 
   475   000150                     C1TXQCONL       equ	336	;# 
   476   000151                     C1TXQCONH       equ	337	;# 
   477   000152                     C1TXQCONU       equ	338	;# 
   478   000153                     C1TXQCONT       equ	339	;# 
   479   000154                     C1TXQSTAL       equ	340	;# 
   480   000155                     C1TXQSTAH       equ	341	;# 
   481   000156                     C1TXQSTAU       equ	342	;# 
   482   000157                     C1TXQSTAT       equ	343	;# 
   483   000158                     C1TXQUA         equ	344	;# 
   484   000158                     C1TXQUAL        equ	344	;# 
   485   000159                     C1TXQUAH        equ	345	;# 
   486   00015A                     C1TXQUAU        equ	346	;# 
   487   00015B                     C1TXQUAT        equ	347	;# 
   488   00015C                     C1FIFOCON1      equ	348	;# 
   489   00015C                     C1FIFOCON1L     equ	348	;# 
   490   00015D                     C1FIFOCON1H     equ	349	;# 
   491   00015E                     C1FIFOCON1U     equ	350	;# 
   492   00015F                     C1FIFOCON1T     equ	351	;# 
   493   000160                     C1FIFOSTA1      equ	352	;# 
   494   000160                     C1FIFOSTA1L     equ	352	;# 
   495   000161                     C1FIFOSTA1H     equ	353	;# 
   496   000162                     C1FIFOSTA1U     equ	354	;# 
   497   000163                     C1FIFOSTA1T     equ	355	;# 
   498   000164                     C1FIFOUA1       equ	356	;# 
   499   000164                     C1FIFOUA1L      equ	356	;# 
   500   000165                     C1FIFOUA1H      equ	357	;# 
   501   000166                     C1FIFOUA1U      equ	358	;# 
   502   000167                     C1FIFOUA1T      equ	359	;# 
   503   000168                     C1FIFOCON2      equ	360	;# 
   504   000168                     C1FIFOCON2L     equ	360	;# 
   505   000169                     C1FIFOCON2H     equ	361	;# 
   506   00016A                     C1FIFOCON2U     equ	362	;# 
   507   00016B                     C1FIFOCON2T     equ	363	;# 
   508   00016C                     C1FIFOSTA2      equ	364	;# 
   509   00016C                     C1FIFOSTA2L     equ	364	;# 
   510   00016D                     C1FIFOSTA2H     equ	365	;# 
   511   00016E                     C1FIFOSTA2U     equ	366	;# 
   512   00016F                     C1FIFOSTA2T     equ	367	;# 
   513   000170                     C1FIFOUA2       equ	368	;# 
   514   000170                     C1FIFOUA2L      equ	368	;# 
   515   000171                     C1FIFOUA2H      equ	369	;# 
   516   000172                     C1FIFOUA2U      equ	370	;# 
   517   000173                     C1FIFOUA2T      equ	371	;# 
   518   000174                     C1FIFOCON3      equ	372	;# 
   519   000174                     C1FIFOCON3L     equ	372	;# 
   520   000175                     C1FIFOCON3H     equ	373	;# 
   521   000176                     C1FIFOCON3U     equ	374	;# 
   522   000177                     C1FIFOCON3T     equ	375	;# 
   523   000178                     C1FIFOSTA3      equ	376	;# 
   524   000178                     C1FIFOSTA3L     equ	376	;# 
   525   000179                     C1FIFOSTA3H     equ	377	;# 
   526   00017A                     C1FIFOSTA3U     equ	378	;# 
   527   00017B                     C1FIFOSTA3T     equ	379	;# 
   528   00017C                     C1FIFOUA3       equ	380	;# 
   529   00017C                     C1FIFOUA3L      equ	380	;# 
   530   00017D                     C1FIFOUA3H      equ	381	;# 
   531   00017E                     C1FIFOUA3U      equ	382	;# 
   532   00017F                     C1FIFOUA3T      equ	383	;# 
   533   000180                     C1FLTCON0L      equ	384	;# 
   534   000181                     C1FLTCON0H      equ	385	;# 
   535   000182                     C1FLTCON0U      equ	386	;# 
   536   000183                     C1FLTCON0T      equ	387	;# 
   537   000184                     C1FLTCON1L      equ	388	;# 
   538   000185                     C1FLTCON1H      equ	389	;# 
   539   000186                     C1FLTCON1U      equ	390	;# 
   540   000187                     C1FLTCON1T      equ	391	;# 
   541   000188                     C1FLTCON2L      equ	392	;# 
   542   000189                     C1FLTCON2H      equ	393	;# 
   543   00018A                     C1FLTCON2U      equ	394	;# 
   544   00018B                     C1FLTCON2T      equ	395	;# 
   545   00018C                     C1FLTOBJ0       equ	396	;# 
   546   00018C                     C1FLTOBJ0L      equ	396	;# 
   547   00018D                     C1FLTOBJ0H      equ	397	;# 
   548   00018E                     C1FLTOBJ0U      equ	398	;# 
   549   00018F                     C1FLTOBJ0T      equ	399	;# 
   550   000190                     C1MASK0         equ	400	;# 
   551   000190                     C1MASK0L        equ	400	;# 
   552   000191                     C1MASK0H        equ	401	;# 
   553   000192                     C1MASK0U        equ	402	;# 
   554   000193                     C1MASK0T        equ	403	;# 
   555   000194                     C1FLTOBJ1       equ	404	;# 
   556   000194                     C1FLTOBJ1L      equ	404	;# 
   557   000195                     C1FLTOBJ1H      equ	405	;# 
   558   000196                     C1FLTOBJ1U      equ	406	;# 
   559   000197                     C1FLTOBJ1T      equ	407	;# 
   560   000198                     C1MASK1         equ	408	;# 
   561   000198                     C1MASK1L        equ	408	;# 
   562   000199                     C1MASK1H        equ	409	;# 
   563   00019A                     C1MASK1U        equ	410	;# 
   564   00019B                     C1MASK1T        equ	411	;# 
   565   00019C                     C1FLTOBJ2       equ	412	;# 
   566   00019C                     C1FLTOBJ2L      equ	412	;# 
   567   00019D                     C1FLTOBJ2H      equ	413	;# 
   568   00019E                     C1FLTOBJ2U      equ	414	;# 
   569   00019F                     C1FLTOBJ2T      equ	415	;# 
   570   0001A0                     C1MASK2         equ	416	;# 
   571   0001A0                     C1MASK2L        equ	416	;# 
   572   0001A1                     C1MASK2H        equ	417	;# 
   573   0001A2                     C1MASK2U        equ	418	;# 
   574   0001A3                     C1MASK2T        equ	419	;# 
   575   0001A4                     C1FLTOBJ3       equ	420	;# 
   576   0001A4                     C1FLTOBJ3L      equ	420	;# 
   577   0001A5                     C1FLTOBJ3H      equ	421	;# 
   578   0001A6                     C1FLTOBJ3U      equ	422	;# 
   579   0001A7                     C1FLTOBJ3T      equ	423	;# 
   580   0001A8                     C1MASK3         equ	424	;# 
   581   0001A8                     C1MASK3L        equ	424	;# 
   582   0001A9                     C1MASK3H        equ	425	;# 
   583   0001AA                     C1MASK3U        equ	426	;# 
   584   0001AB                     C1MASK3T        equ	427	;# 
   585   0001AC                     C1FLTOBJ4       equ	428	;# 
   586   0001AC                     C1FLTOBJ4L      equ	428	;# 
   587   0001AD                     C1FLTOBJ4H      equ	429	;# 
   588   0001AE                     C1FLTOBJ4U      equ	430	;# 
   589   0001AF                     C1FLTOBJ4T      equ	431	;# 
   590   0001B0                     C1MASK4         equ	432	;# 
   591   0001B0                     C1MASK4L        equ	432	;# 
   592   0001B1                     C1MASK4H        equ	433	;# 
   593   0001B2                     C1MASK4U        equ	434	;# 
   594   0001B3                     C1MASK4T        equ	435	;# 
   595   0001B4                     C1FLTOBJ5       equ	436	;# 
   596   0001B4                     C1FLTOBJ5L      equ	436	;# 
   597   0001B5                     C1FLTOBJ5H      equ	437	;# 
   598   0001B6                     C1FLTOBJ5U      equ	438	;# 
   599   0001B7                     C1FLTOBJ5T      equ	439	;# 
   600   0001B8                     C1MASK5         equ	440	;# 
   601   0001B8                     C1MASK5L        equ	440	;# 
   602   0001B9                     C1MASK5H        equ	441	;# 
   603   0001BA                     C1MASK5U        equ	442	;# 
   604   0001BB                     C1MASK5T        equ	443	;# 
   605   0001BC                     C1FLTOBJ6       equ	444	;# 
   606   0001BC                     C1FLTOBJ6L      equ	444	;# 
   607   0001BD                     C1FLTOBJ6H      equ	445	;# 
   608   0001BE                     C1FLTOBJ6U      equ	446	;# 
   609   0001BF                     C1FLTOBJ6T      equ	447	;# 
   610   0001C0                     C1MASK6         equ	448	;# 
   611   0001C0                     C1MASK6L        equ	448	;# 
   612   0001C1                     C1MASK6H        equ	449	;# 
   613   0001C2                     C1MASK6U        equ	450	;# 
   614   0001C3                     C1MASK6T        equ	451	;# 
   615   0001C4                     C1FLTOBJ7       equ	452	;# 
   616   0001C4                     C1FLTOBJ7L      equ	452	;# 
   617   0001C5                     C1FLTOBJ7H      equ	453	;# 
   618   0001C6                     C1FLTOBJ7U      equ	454	;# 
   619   0001C7                     C1FLTOBJ7T      equ	455	;# 
   620   0001C8                     C1MASK7         equ	456	;# 
   621   0001C8                     C1MASK7L        equ	456	;# 
   622   0001C9                     C1MASK7H        equ	457	;# 
   623   0001CA                     C1MASK7U        equ	458	;# 
   624   0001CB                     C1MASK7T        equ	459	;# 
   625   0001CC                     C1FLTOBJ8       equ	460	;# 
   626   0001CC                     C1FLTOBJ8L      equ	460	;# 
   627   0001CD                     C1FLTOBJ8H      equ	461	;# 
   628   0001CE                     C1FLTOBJ8U      equ	462	;# 
   629   0001CF                     C1FLTOBJ8T      equ	463	;# 
   630   0001D0                     C1MASK8         equ	464	;# 
   631   0001D0                     C1MASK8L        equ	464	;# 
   632   0001D1                     C1MASK8H        equ	465	;# 
   633   0001D2                     C1MASK8U        equ	466	;# 
   634   0001D3                     C1MASK8T        equ	467	;# 
   635   0001D4                     C1FLTOBJ9       equ	468	;# 
   636   0001D4                     C1FLTOBJ9L      equ	468	;# 
   637   0001D5                     C1FLTOBJ9H      equ	469	;# 
   638   0001D6                     C1FLTOBJ9U      equ	470	;# 
   639   0001D7                     C1FLTOBJ9T      equ	471	;# 
   640   0001D8                     C1MASK9         equ	472	;# 
   641   0001D8                     C1MASK9L        equ	472	;# 
   642   0001D9                     C1MASK9H        equ	473	;# 
   643   0001DA                     C1MASK9U        equ	474	;# 
   644   0001DB                     C1MASK9T        equ	475	;# 
   645   0001DC                     C1FLTOBJ10      equ	476	;# 
   646   0001DC                     C1FLTOBJ10L     equ	476	;# 
   647   0001DD                     C1FLTOBJ10H     equ	477	;# 
   648   0001DE                     C1FLTOBJ10U     equ	478	;# 
   649   0001DF                     C1FLTOBJ10T     equ	479	;# 
   650   0001E0                     C1MASK10        equ	480	;# 
   651   0001E0                     C1MASK10L       equ	480	;# 
   652   0001E1                     C1MASK10H       equ	481	;# 
   653   0001E2                     C1MASK10U       equ	482	;# 
   654   0001E3                     C1MASK10T       equ	483	;# 
   655   0001E4                     C1FLTOBJ11      equ	484	;# 
   656   0001E4                     C1FLTOBJ11L     equ	484	;# 
   657   0001E5                     C1FLTOBJ11H     equ	485	;# 
   658   0001E6                     C1FLTOBJ11U     equ	486	;# 
   659   0001E7                     C1FLTOBJ11T     equ	487	;# 
   660   0001E8                     C1MASK11        equ	488	;# 
   661   0001E8                     C1MASK11L       equ	488	;# 
   662   0001E9                     C1MASK11H       equ	489	;# 
   663   0001EA                     C1MASK11U       equ	490	;# 
   664   0001EB                     C1MASK11T       equ	491	;# 
   665   000200                     PPSLOCK         equ	512	;# 
   666   000201                     RA0PPS          equ	513	;# 
   667   000202                     RA1PPS          equ	514	;# 
   668   000203                     RA2PPS          equ	515	;# 
   669   000204                     RA3PPS          equ	516	;# 
   670   000205                     RA4PPS          equ	517	;# 
   671   000206                     RA5PPS          equ	518	;# 
   672   000207                     RA6PPS          equ	519	;# 
   673   000208                     RA7PPS          equ	520	;# 
   674   000209                     RB0PPS          equ	521	;# 
   675   00020A                     RB1PPS          equ	522	;# 
   676   00020B                     RB2PPS          equ	523	;# 
   677   00020C                     RB3PPS          equ	524	;# 
   678   00020D                     RB4PPS          equ	525	;# 
   679   00020E                     RB5PPS          equ	526	;# 
   680   00020F                     RB6PPS          equ	527	;# 
   681   000210                     RB7PPS          equ	528	;# 
   682   000211                     RC0PPS          equ	529	;# 
   683   000212                     RC1PPS          equ	530	;# 
   684   000213                     RC2PPS          equ	531	;# 
   685   000214                     RC3PPS          equ	532	;# 
   686   000215                     RC4PPS          equ	533	;# 
   687   000216                     RC5PPS          equ	534	;# 
   688   000217                     RC6PPS          equ	535	;# 
   689   000218                     RC7PPS          equ	536	;# 
   690   00023D                     CANRXPPS        equ	573	;# 
   691   00023E                     INT0PPS         equ	574	;# 
   692   00023F                     INT1PPS         equ	575	;# 
   693   000240                     INT2PPS         equ	576	;# 
   694   000241                     T0CKIPPS        equ	577	;# 
   695   000242                     T1CKIPPS        equ	578	;# 
   696   000243                     T1GPPS          equ	579	;# 
   697   000244                     T3CKIPPS        equ	580	;# 
   698   000245                     T3GPPS          equ	581	;# 
   699   000246                     T5CKIPPS        equ	582	;# 
   700   000247                     T5GPPS          equ	583	;# 
   701   000248                     T2INPPS         equ	584	;# 
   702   000249                     T4INPPS         equ	585	;# 
   703   00024A                     T6INPPS         equ	586	;# 
   704   00024B                     TUIN0PPS        equ	587	;# 
   705   00024C                     TUIN1PPS        equ	588	;# 
   706   00024F                     CCP1PPS         equ	591	;# 
   707   000250                     CCP2PPS         equ	592	;# 
   708   000251                     CCP3PPS         equ	593	;# 
   709   000253                     PWM1ERSPPS      equ	595	;# 
   710   000254                     PWM2ERSPPS      equ	596	;# 
   711   000255                     PWM3ERSPPS      equ	597	;# 
   712   000256                     PWM4ERSPPS      equ	598	;# 
   713   000257                     PWMIN0PPS       equ	599	;# 
   714   000258                     PWMIN1PPS       equ	600	;# 
   715   000259                     SMT1WINPPS      equ	601	;# 
   716   00025A                     SMT1SIGPPS      equ	602	;# 
   717   00025B                     CWG1PPS         equ	603	;# 
   718   00025B                     CWG1INPPS       equ	603	;# 
   719   00025C                     CWG2PPS         equ	604	;# 
   720   00025C                     CWG2INPPS       equ	604	;# 
   721   00025D                     CWG3PPS         equ	605	;# 
   722   00025D                     CWG3INPPS       equ	605	;# 
   723   00025E                     MD1CARLPPS      equ	606	;# 
   724   00025E                     MDCARLPPS       equ	606	;# 
   725   00025F                     MD1CARHPPS      equ	607	;# 
   726   00025F                     MDCARHPPS       equ	607	;# 
   727   000260                     MD1SRCPPS       equ	608	;# 
   728   000260                     MDSRCPPS        equ	608	;# 
   729   000261                     CLCIN0PPS       equ	609	;# 
   730   000262                     CLCIN1PPS       equ	610	;# 
   731   000263                     CLCIN2PPS       equ	611	;# 
   732   000264                     CLCIN3PPS       equ	612	;# 
   733   000265                     CLCIN4PPS       equ	613	;# 
   734   000266                     CLCIN5PPS       equ	614	;# 
   735   000267                     CLCIN6PPS       equ	615	;# 
   736   000268                     CLCIN7PPS       equ	616	;# 
   737   000269                     ADACTPPS        equ	617	;# 
   738   00026A                     SPI1SCKPPS      equ	618	;# 
   739   00026B                     SPI1SDIPPS      equ	619	;# 
   740   00026C                     SPI1SSPPS       equ	620	;# 
   741   00026D                     SPI2SCKPPS      equ	621	;# 
   742   00026E                     SPI2SDIPPS      equ	622	;# 
   743   00026F                     SPI2SSPPS       equ	623	;# 
   744   000270                     I2C1SDAPPS      equ	624	;# 
   745   000271                     I2C1SCLPPS      equ	625	;# 
   746   000272                     U1RXPPS         equ	626	;# 
   747   000273                     U1CTSPPS        equ	627	;# 
   748   000274                     U2RXPPS         equ	628	;# 
   749   000275                     U2CTSPPS        equ	629	;# 
   750   000276                     U3RXPPS         equ	630	;# 
   751   000277                     U3CTSPPS        equ	631	;# 
   752   000278                     U4RXPPS         equ	632	;# 
   753   000279                     U4CTSPPS        equ	633	;# 
   754   00027A                     U5RXPPS         equ	634	;# 
   755   00027B                     U5CTSPPS        equ	635	;# 
   756   000286                     RC4I2C          equ	646	;# 
   757   000287                     RC3I2C          equ	647	;# 
   758   000288                     RB2I2C          equ	648	;# 
   759   000289                     RB1I2C          equ	649	;# 
   760   00028A                     I2C1RXB         equ	650	;# 
   761   00028B                     I2C1TXB         equ	651	;# 
   762   00028C                     I2C1CNTL        equ	652	;# 
   763   00028D                     I2C1CNTH        equ	653	;# 
   764   00028E                     I2C1ADB0        equ	654	;# 
   765   00028F                     I2C1ADB1        equ	655	;# 
   766   000290                     I2C1ADR0        equ	656	;# 
   767   000291                     I2C1ADR1        equ	657	;# 
   768   000292                     I2C1ADR2        equ	658	;# 
   769   000293                     I2C1ADR3        equ	659	;# 
   770   000294                     I2C1CON0        equ	660	;# 
   771   000295                     I2C1CON1        equ	661	;# 
   772   000296                     I2C1CON2        equ	662	;# 
   773   000297                     I2C1ERR         equ	663	;# 
   774   000298                     I2C1STAT0       equ	664	;# 
   775   000299                     I2C1STAT1       equ	665	;# 
   776   00029A                     I2C1PIR         equ	666	;# 
   777   00029B                     I2C1PIE         equ	667	;# 
   778   00029C                     I2C1BTO         equ	668	;# 
   779   00029D                     I2C1BAUD        equ	669	;# 
   780   00029E                     I2C1CLK         equ	670	;# 
   781   00029F                     I2C1BTOC        equ	671	;# 
   782   0002A1                     U1RXB           equ	673	;# 
   783   0002A1                     U1RXBL          equ	673	;# 
   784   0002A2                     U1RXCHK         equ	674	;# 
   785   0002A3                     U1TXB           equ	675	;# 
   786   0002A3                     U1TXBL          equ	675	;# 
   787   0002A4                     U1TXCHK         equ	676	;# 
   788   0002A5                     U1P1            equ	677	;# 
   789   0002A5                     U1P1L           equ	677	;# 
   790   0002A6                     U1P1H           equ	678	;# 
   791   0002A7                     U1P2            equ	679	;# 
   792   0002A7                     U1P2L           equ	679	;# 
   793   0002A8                     U1P2H           equ	680	;# 
   794   0002A9                     U1P3            equ	681	;# 
   795   0002A9                     U1P3L           equ	681	;# 
   796   0002AA                     U1P3H           equ	682	;# 
   797   0002AB                     U1CON0          equ	683	;# 
   798   0002AC                     U1CON1          equ	684	;# 
   799   0002AD                     U1CON2          equ	685	;# 
   800   0002AE                     U1BRG           equ	686	;# 
   801   0002AE                     U1BRGL          equ	686	;# 
   802   0002AF                     U1BRGH          equ	687	;# 
   803   0002B0                     U1FIFO          equ	688	;# 
   804   0002B1                     U1UIR           equ	689	;# 
   805   0002B2                     U1ERRIR         equ	690	;# 
   806   0002B3                     U1ERRIE         equ	691	;# 
   807   0002B4                     U2RXB           equ	692	;# 
   808   0002B4                     U2RXBL          equ	692	;# 
   809   0002B5                     U2RXCHK         equ	693	;# 
   810   0002B6                     U2TXB           equ	694	;# 
   811   0002B6                     U2TXBL          equ	694	;# 
   812   0002B7                     U2TXCHK         equ	695	;# 
   813   0002B8                     U2P1            equ	696	;# 
   814   0002B8                     U2P1L           equ	696	;# 
   815   0002B9                     U2P1H           equ	697	;# 
   816   0002BA                     U2P2            equ	698	;# 
   817   0002BA                     U2P2L           equ	698	;# 
   818   0002BB                     U2P2H           equ	699	;# 
   819   0002BC                     U2P3            equ	700	;# 
   820   0002BC                     U2P3L           equ	700	;# 
   821   0002BD                     U2P3H           equ	701	;# 
   822   0002BE                     U2CON0          equ	702	;# 
   823   0002BF                     U2CON1          equ	703	;# 
   824   0002C0                     U2CON2          equ	704	;# 
   825   0002C1                     U2BRG           equ	705	;# 
   826   0002C1                     U2BRGL          equ	705	;# 
   827   0002C2                     U2BRGH          equ	706	;# 
   828   0002C3                     U2FIFO          equ	707	;# 
   829   0002C4                     U2UIR           equ	708	;# 
   830   0002C5                     U2ERRIR         equ	709	;# 
   831   0002C6                     U2ERRIE         equ	710	;# 
   832   0002C7                     U3RXB           equ	711	;# 
   833   0002C7                     U3RXBL          equ	711	;# 
   834   0002C9                     U3TXB           equ	713	;# 
   835   0002C9                     U3TXBL          equ	713	;# 
   836   0002CB                     U3P1            equ	715	;# 
   837   0002CB                     U3P1L           equ	715	;# 
   838   0002CD                     U3P2            equ	717	;# 
   839   0002CD                     U3P2L           equ	717	;# 
   840   0002CF                     U3P3            equ	719	;# 
   841   0002CF                     U3P3L           equ	719	;# 
   842   0002D1                     U3CON0          equ	721	;# 
   843   0002D2                     U3CON1          equ	722	;# 
   844   0002D3                     U3CON2          equ	723	;# 
   845   0002D4                     U3BRG           equ	724	;# 
   846   0002D4                     U3BRGL          equ	724	;# 
   847   0002D5                     U3BRGH          equ	725	;# 
   848   0002D6                     U3FIFO          equ	726	;# 
   849   0002D7                     U3UIR           equ	727	;# 
   850   0002D8                     U3ERRIR         equ	728	;# 
   851   0002D9                     U3ERRIE         equ	729	;# 
   852   0002DA                     U4RXB           equ	730	;# 
   853   0002DA                     U4RXBL          equ	730	;# 
   854   0002DC                     U4TXB           equ	732	;# 
   855   0002DC                     U4TXBL          equ	732	;# 
   856   0002DE                     U4P1            equ	734	;# 
   857   0002DE                     U4P1L           equ	734	;# 
   858   0002E0                     U4P2            equ	736	;# 
   859   0002E0                     U4P2L           equ	736	;# 
   860   0002E2                     U4P3            equ	738	;# 
   861   0002E2                     U4P3L           equ	738	;# 
   862   0002E4                     U4CON0          equ	740	;# 
   863   0002E5                     U4CON1          equ	741	;# 
   864   0002E6                     U4CON2          equ	742	;# 
   865   0002E7                     U4BRG           equ	743	;# 
   866   0002E7                     U4BRGL          equ	743	;# 
   867   0002E8                     U4BRGH          equ	744	;# 
   868   0002E9                     U4FIFO          equ	745	;# 
   869   0002EA                     U4UIR           equ	746	;# 
   870   0002EB                     U4ERRIR         equ	747	;# 
   871   0002EC                     U4ERRIE         equ	748	;# 
   872   0002ED                     U5RXB           equ	749	;# 
   873   0002ED                     U5RXBL          equ	749	;# 
   874   0002EF                     U5TXB           equ	751	;# 
   875   0002EF                     U5TXBL          equ	751	;# 
   876   0002F1                     U5P1            equ	753	;# 
   877   0002F1                     U5P1L           equ	753	;# 
   878   0002F3                     U5P2            equ	755	;# 
   879   0002F3                     U5P2L           equ	755	;# 
   880   0002F5                     U5P3            equ	757	;# 
   881   0002F5                     U5P3L           equ	757	;# 
   882   0002F7                     U5CON0          equ	759	;# 
   883   0002F8                     U5CON1          equ	760	;# 
   884   0002F9                     U5CON2          equ	761	;# 
   885   0002FA                     U5BRG           equ	762	;# 
   886   0002FA                     U5BRGL          equ	762	;# 
   887   0002FB                     U5BRGH          equ	763	;# 
   888   0002FC                     U5FIFO          equ	764	;# 
   889   0002FD                     U5UIR           equ	765	;# 
   890   0002FE                     U5ERRIR         equ	766	;# 
   891   0002FF                     U5ERRIE         equ	767	;# 
   892   000300                     SMT1TMR         equ	768	;# 
   893   000300                     SMT1TMRL        equ	768	;# 
   894   000301                     SMT1TMRH        equ	769	;# 
   895   000302                     SMT1TMRU        equ	770	;# 
   896   000303                     SMT1CPR         equ	771	;# 
   897   000303                     SMT1CPRL        equ	771	;# 
   898   000304                     SMT1CPRH        equ	772	;# 
   899   000305                     SMT1CPRU        equ	773	;# 
   900   000306                     SMT1CPW         equ	774	;# 
   901   000306                     SMT1CPWL        equ	774	;# 
   902   000307                     SMT1CPWH        equ	775	;# 
   903   000308                     SMT1CPWU        equ	776	;# 
   904   000309                     SMT1PR          equ	777	;# 
   905   000309                     SMT1PRL         equ	777	;# 
   906   00030A                     SMT1PRH         equ	778	;# 
   907   00030B                     SMT1PRU         equ	779	;# 
   908   00030C                     SMT1CON0        equ	780	;# 
   909   00030D                     SMT1CON1        equ	781	;# 
   910   00030E                     SMT1STAT        equ	782	;# 
   911   00030F                     SMT1CLK         equ	783	;# 
   912   000310                     SMT1SIG         equ	784	;# 
   913   000311                     SMT1WIN         equ	785	;# 
   914   000318                     TMR0L           equ	792	;# 
   915   000318                     TMR0            equ	792	;# 
   916   000319                     TMR0H           equ	793	;# 
   917   000319                     PR0             equ	793	;# 
   918   00031A                     T0CON0          equ	794	;# 
   919   00031B                     T0CON1          equ	795	;# 
   920   00031C                     TMR1            equ	796	;# 
   921   00031C                     TMR1L           equ	796	;# 
   922   00031D                     TMR1H           equ	797	;# 
   923   00031E                     T1CON           equ	798	;# 
   924   00031E                     TMR1CON         equ	798	;# 
   925   00031F                     T1GCON          equ	799	;# 
   926   00031F                     TMR1GCON        equ	799	;# 
   927   000320                     T1GATE          equ	800	;# 
   928   000320                     TMR1GATE        equ	800	;# 
   929   000321                     T1CLK           equ	801	;# 
   930   000321                     TMR1CLK         equ	801	;# 
   931   000321                     PR1             equ	801	;# 
   932   000322                     T2TMR           equ	802	;# 
   933   000322                     TMR2            equ	802	;# 
   934   000323                     T2PR            equ	803	;# 
   935   000323                     PR2             equ	803	;# 
   936   000324                     T2CON           equ	804	;# 
   937   000325                     T2HLT           equ	805	;# 
   938   000326                     T2CLKCON        equ	806	;# 
   939   000326                     T2CLK           equ	806	;# 
   940   000327                     T2RST           equ	807	;# 
   941   000328                     TMR3            equ	808	;# 
   942   000328                     TMR3L           equ	808	;# 
   943   000329                     TMR3H           equ	809	;# 
   944   00032A                     T3CON           equ	810	;# 
   945   00032A                     TMR3CON         equ	810	;# 
   946   00032B                     T3GCON          equ	811	;# 
   947   00032B                     TMR3GCON        equ	811	;# 
   948   00032C                     T3GATE          equ	812	;# 
   949   00032C                     TMR3GATE        equ	812	;# 
   950   00032D                     T3CLK           equ	813	;# 
   951   00032D                     TMR3CLK         equ	813	;# 
   952   00032D                     PR3             equ	813	;# 
   953   00032E                     T4TMR           equ	814	;# 
   954   00032E                     TMR4            equ	814	;# 
   955   00032F                     T4PR            equ	815	;# 
   956   00032F                     PR4             equ	815	;# 
   957   000330                     T4CON           equ	816	;# 
   958   000331                     T4HLT           equ	817	;# 
   959   000332                     T4CLKCON        equ	818	;# 
   960   000332                     T4CLK           equ	818	;# 
   961   000333                     T4RST           equ	819	;# 
   962   000334                     TMR5            equ	820	;# 
   963   000334                     TMR5L           equ	820	;# 
   964   000335                     TMR5H           equ	821	;# 
   965   000336                     T5CON           equ	822	;# 
   966   000336                     TMR5CON         equ	822	;# 
   967   000337                     T5GCON          equ	823	;# 
   968   000337                     TMR5GCON        equ	823	;# 
   969   000338                     T5GATE          equ	824	;# 
   970   000338                     TMR5GATE        equ	824	;# 
   971   000339                     T5CLK           equ	825	;# 
   972   000339                     TMR5CLK         equ	825	;# 
   973   000339                     PR5             equ	825	;# 
   974   00033A                     T6TMR           equ	826	;# 
   975   00033A                     TMR6            equ	826	;# 
   976   00033B                     T6PR            equ	827	;# 
   977   00033B                     PR6             equ	827	;# 
   978   00033C                     T6CON           equ	828	;# 
   979   00033D                     T6HLT           equ	829	;# 
   980   00033E                     T6CLKCON        equ	830	;# 
   981   00033E                     T6CLK           equ	830	;# 
   982   00033F                     T6RST           equ	831	;# 
   983   000340                     CCPR1           equ	832	;# 
   984   000340                     CCPR1L          equ	832	;# 
   985   000341                     CCPR1H          equ	833	;# 
   986   000342                     CCP1CON         equ	834	;# 
   987   000343                     CCP1CAP         equ	835	;# 
   988   000344                     CCPR2           equ	836	;# 
   989   000344                     CCPR2L          equ	836	;# 
   990   000345                     CCPR2H          equ	837	;# 
   991   000346                     CCP2CON         equ	838	;# 
   992   000347                     CCP2CAP         equ	839	;# 
   993   000348                     CCPR3           equ	840	;# 
   994   000348                     CCPR3L          equ	840	;# 
   995   000349                     CCPR3H          equ	841	;# 
   996   00034A                     CCP3CON         equ	842	;# 
   997   00034B                     CCP3CAP         equ	843	;# 
   998   00034C                     CCPTMRS0        equ	844	;# 
   999   00034F                     CRCDATA         equ	847	;# 
  1000   00034F                     CRCDATAL        equ	847	;# 
  1001   000350                     CRCDATAH        equ	848	;# 
  1002   000351                     CRCDATAU        equ	849	;# 
  1003   000352                     CRCDATAT        equ	850	;# 
  1004   000353                     CRCOUT          equ	851	;# 
  1005   000353                     CRCSHFT         equ	851	;# 
  1006   000353                     CRCXOR          equ	851	;# 
  1007   000353                     CRCOUTL         equ	851	;# 
  1008   000353                     CRCSHFTL        equ	851	;# 
  1009   000353                     CRCSHIFTL       equ	851	;# 
  1010   000353                     CRCXORL         equ	851	;# 
  1011   000354                     CRCOUTH         equ	852	;# 
  1012   000354                     CRCSHFTH        equ	852	;# 
  1013   000354                     CRCSHIFTH       equ	852	;# 
  1014   000354                     CRCXORH         equ	852	;# 
  1015   000355                     CRCOUTU         equ	853	;# 
  1016   000355                     CRCSHFTU        equ	853	;# 
  1017   000355                     CRCSHIFTU       equ	853	;# 
  1018   000355                     CRCXORU         equ	853	;# 
  1019   000356                     CRCOUTT         equ	854	;# 
  1020   000356                     CRCSHFTT        equ	854	;# 
  1021   000356                     CRCSHIFTT       equ	854	;# 
  1022   000356                     CRCXORT         equ	854	;# 
  1023   000357                     CRCCON0         equ	855	;# 
  1024   000358                     CRCCON1         equ	856	;# 
  1025   000359                     CRCCON2         equ	857	;# 
  1026   00035A                     SCANLADR        equ	858	;# 
  1027   00035A                     SCANLADRL       equ	858	;# 
  1028   00035B                     SCANLADRH       equ	859	;# 
  1029   00035C                     SCANLADRU       equ	860	;# 
  1030   00035D                     SCANHADR        equ	861	;# 
  1031   00035D                     SCANHADRL       equ	861	;# 
  1032   00035E                     SCANHADRH       equ	862	;# 
  1033   00035F                     SCANHADRU       equ	863	;# 
  1034   000360                     SCANCON0        equ	864	;# 
  1035   000361                     SCANTRIG        equ	865	;# 
  1036   000362                     IPR0            equ	866	;# 
  1037   000363                     IPR1            equ	867	;# 
  1038   000364                     IPR2            equ	868	;# 
  1039   000365                     IPR3            equ	869	;# 
  1040   000366                     IPR4            equ	870	;# 
  1041   000367                     IPR5            equ	871	;# 
  1042   000368                     IPR6            equ	872	;# 
  1043   000369                     IPR7            equ	873	;# 
  1044   00036A                     IPR8            equ	874	;# 
  1045   00036B                     IPR9            equ	875	;# 
  1046   00036C                     IPR10           equ	876	;# 
  1047   00036D                     IPR11           equ	877	;# 
  1048   00036E                     IPR12           equ	878	;# 
  1049   00036F                     IPR13           equ	879	;# 
  1050   000370                     IPR14           equ	880	;# 
  1051   000371                     IPR15           equ	881	;# 
  1052   000373                     STATUS_CSHAD    equ	883	;# 
  1053   000374                     WREG_CSHAD      equ	884	;# 
  1054   000375                     BSR_CSHAD       equ	885	;# 
  1055   000376                     SHADCON         equ	886	;# 
  1056   000377                     STATUS_SHAD     equ	887	;# 
  1057   000378                     WREG_SHAD       equ	888	;# 
  1058   000379                     BSR_SHAD        equ	889	;# 
  1059   00037A                     PCLATH_SHAD     equ	890	;# 
  1060   00037B                     PCLATU_SHAD     equ	891	;# 
  1061   00037C                     FSR0SH          equ	892	;# 
  1062   00037C                     FSR0L_SHAD      equ	892	;# 
  1063   00037D                     FSR0H_SHAD      equ	893	;# 
  1064   00037E                     FSR1SH          equ	894	;# 
  1065   00037E                     FSR1L_SHAD      equ	894	;# 
  1066   00037F                     FSR1H_SHAD      equ	895	;# 
  1067   000380                     FSR2SH          equ	896	;# 
  1068   000380                     FSR2L_SHAD      equ	896	;# 
  1069   000381                     FSR2H_SHAD      equ	897	;# 
  1070   000382                     PRODSH          equ	898	;# 
  1071   000382                     PRODL_SHAD      equ	898	;# 
  1072   000383                     PRODH_SHAD      equ	899	;# 
  1073   000387                     TU16ACON0       equ	903	;# 
  1074   000388                     TU16ACON1       equ	904	;# 
  1075   000389                     TU16AHLT        equ	905	;# 
  1076   00038A                     TU16APS         equ	906	;# 
  1077   00038B                     TU16ATMR        equ	907	;# 
  1078   00038B                     TU16ACR         equ	907	;# 
  1079   00038B                     TU16ATMRL       equ	907	;# 
  1080   00038B                     TU16ACRL        equ	907	;# 
  1081   00038C                     TU16ATMRH       equ	908	;# 
  1082   00038C                     TU16ACRH        equ	908	;# 
  1083   00038D                     TU16APR         equ	909	;# 
  1084   00038D                     TU16APRL        equ	909	;# 
  1085   00038E                     TU16APRH        equ	910	;# 
  1086   00038F                     TU16ACLK        equ	911	;# 
  1087   000390                     TU16AERS        equ	912	;# 
  1088   000393                     TU16BCON0       equ	915	;# 
  1089   000394                     TU16BCON1       equ	916	;# 
  1090   000395                     TU16BHLT        equ	917	;# 
  1091   000396                     TU16BPS         equ	918	;# 
  1092   000397                     TU16BTMR        equ	919	;# 
  1093   000397                     TU16BCR         equ	919	;# 
  1094   000397                     TU16BTMRL       equ	919	;# 
  1095   000397                     TU16BCRL        equ	919	;# 
  1096   000398                     TU16BTMRH       equ	920	;# 
  1097   000398                     TU16BCRH        equ	920	;# 
  1098   000399                     TU16BPR         equ	921	;# 
  1099   000399                     TU16BPRL        equ	921	;# 
  1100   00039A                     TU16BPRH        equ	922	;# 
  1101   00039B                     TU16BCLK        equ	923	;# 
  1102   00039C                     TU16BERS        equ	924	;# 
  1103   0003BB                     TUCHAIN         equ	955	;# 
  1104   0003BC                     CWG1CLK         equ	956	;# 
  1105   0003BC                     CWG1CLKCON      equ	956	;# 
  1106   0003BD                     CWG1ISM         equ	957	;# 
  1107   0003BE                     CWG1DBR         equ	958	;# 
  1108   0003BF                     CWG1DBF         equ	959	;# 
  1109   0003C0                     CWG1CON0        equ	960	;# 
  1110   0003C1                     CWG1CON1        equ	961	;# 
  1111   0003C2                     CWG1AS0         equ	962	;# 
  1112   0003C3                     CWG1AS1         equ	963	;# 
  1113   0003C4                     CWG1STR         equ	964	;# 
  1114   0003C5                     CWG2CLK         equ	965	;# 
  1115   0003C5                     CWG2CLKCON      equ	965	;# 
  1116   0003C6                     CWG2ISM         equ	966	;# 
  1117   0003C7                     CWG2DBR         equ	967	;# 
  1118   0003C8                     CWG2DBF         equ	968	;# 
  1119   0003C9                     CWG2CON0        equ	969	;# 
  1120   0003CA                     CWG2CON1        equ	970	;# 
  1121   0003CB                     CWG2AS0         equ	971	;# 
  1122   0003CC                     CWG2AS1         equ	972	;# 
  1123   0003CD                     CWG2STR         equ	973	;# 
  1124   0003CE                     CWG3CLK         equ	974	;# 
  1125   0003CE                     CWG3CLKCON      equ	974	;# 
  1126   0003CF                     CWG3ISM         equ	975	;# 
  1127   0003D0                     CWG3DBR         equ	976	;# 
  1128   0003D1                     CWG3DBF         equ	977	;# 
  1129   0003D2                     CWG3CON0        equ	978	;# 
  1130   0003D3                     CWG3CON1        equ	979	;# 
  1131   0003D4                     CWG3AS0         equ	980	;# 
  1132   0003D5                     CWG3AS1         equ	981	;# 
  1133   0003D6                     CWG3STR         equ	982	;# 
  1134   0003D7                     FVRCON          equ	983	;# 
  1135   0003D8                     ADCPCON         equ	984	;# 
  1136   0003D8                     ADCP            equ	984	;# 
  1137   0003D9                     ADLTH           equ	985	;# 
  1138   0003D9                     ADLTHL          equ	985	;# 
  1139   0003DA                     ADLTHH          equ	986	;# 
  1140   0003DB                     ADUTH           equ	987	;# 
  1141   0003DB                     ADUTHL          equ	987	;# 
  1142   0003DC                     ADUTHH          equ	988	;# 
  1143   0003DD                     ADERR           equ	989	;# 
  1144   0003DD                     ADERRL          equ	989	;# 
  1145   0003DE                     ADERRH          equ	990	;# 
  1146   0003DF                     ADSTPT          equ	991	;# 
  1147   0003DF                     ADSTPTL         equ	991	;# 
  1148   0003E0                     ADSTPTH         equ	992	;# 
  1149   0003E1                     ADFLTR          equ	993	;# 
  1150   0003E1                     ADFLTRL         equ	993	;# 
  1151   0003E2                     ADFLTRH         equ	994	;# 
  1152   0003E3                     ADACC           equ	995	;# 
  1153   0003E3                     ADACCL          equ	995	;# 
  1154   0003E4                     ADACCH          equ	996	;# 
  1155   0003E5                     ADACCU          equ	997	;# 
  1156   0003E6                     ADCNT           equ	998	;# 
  1157   0003E7                     ADRPT           equ	999	;# 
  1158   0003E8                     ADPREV          equ	1000	;# 
  1159   0003E8                     ADPREVL         equ	1000	;# 
  1160   0003E9                     ADPREVH         equ	1001	;# 
  1161   0003EA                     ADRES           equ	1002	;# 
  1162   0003EA                     ADRESL          equ	1002	;# 
  1163   0003EB                     ADRESH          equ	1003	;# 
  1164   0003EC                     ADPCH           equ	1004	;# 
  1165   0003EE                     ADACQ           equ	1006	;# 
  1166   0003EE                     ADACQL          equ	1006	;# 
  1167   0003EF                     ADACQH          equ	1007	;# 
  1168   0003F0                     ADCAP           equ	1008	;# 
  1169   0003F1                     ADPRE           equ	1009	;# 
  1170   0003F1                     ADPREL          equ	1009	;# 
  1171   0003F2                     ADPREH          equ	1010	;# 
  1172   0003F3                     ADCON0          equ	1011	;# 
  1173   0003F4                     ADCON1          equ	1012	;# 
  1174   0003F5                     ADCON2          equ	1013	;# 
  1175   0003F6                     ADCON3          equ	1014	;# 
  1176   0003F7                     ADSTAT          equ	1015	;# 
  1177   0003F8                     ADREF           equ	1016	;# 
  1178   0003F9                     ADACT           equ	1017	;# 
  1179   0003FA                     ADCLK           equ	1018	;# 
  1180   0003FB                     ADCTX           equ	1019	;# 
  1181   0003FC                     ADCSEL1         equ	1020	;# 
  1182   0003FD                     ADCSEL2         equ	1021	;# 
  1183   0003FE                     ADCSEL3         equ	1022	;# 
  1184   0003FF                     ADCSEL4         equ	1023	;# 
  1185   000400                     ANSELA          equ	1024	;# 
  1186   000401                     WPUA            equ	1025	;# 
  1187   000402                     ODCONA          equ	1026	;# 
  1188   000403                     SLRCONA         equ	1027	;# 
  1189   000404                     INLVLA          equ	1028	;# 
  1190   000405                     IOCAP           equ	1029	;# 
  1191   000406                     IOCAN           equ	1030	;# 
  1192   000407                     IOCAF           equ	1031	;# 
  1193   000408                     ANSELB          equ	1032	;# 
  1194   000409                     WPUB            equ	1033	;# 
  1195   00040A                     ODCONB          equ	1034	;# 
  1196   00040B                     SLRCONB         equ	1035	;# 
  1197   00040C                     INLVLB          equ	1036	;# 
  1198   00040D                     IOCBP           equ	1037	;# 
  1199   00040E                     IOCBN           equ	1038	;# 
  1200   00040F                     IOCBF           equ	1039	;# 
  1201   000410                     ANSELC          equ	1040	;# 
  1202   000411                     WPUC            equ	1041	;# 
  1203   000412                     ODCONC          equ	1042	;# 
  1204   000413                     SLRCONC         equ	1043	;# 
  1205   000414                     INLVLC          equ	1044	;# 
  1206   000415                     IOCCP           equ	1045	;# 
  1207   000416                     IOCCN           equ	1046	;# 
  1208   000417                     IOCCF           equ	1047	;# 
  1209   000421                     WPUE            equ	1057	;# 
  1210   000424                     INLVLE          equ	1060	;# 
  1211   000425                     IOCEP           equ	1061	;# 
  1212   000426                     IOCEN           equ	1062	;# 
  1213   000427                     IOCEF           equ	1063	;# 
  1214   000440                     NCO1ACC         equ	1088	;# 
  1215   000440                     NCO1ACCL        equ	1088	;# 
  1216   000441                     NCO1ACCH        equ	1089	;# 
  1217   000442                     NCO1ACCU        equ	1090	;# 
  1218   000443                     NCO1INC         equ	1091	;# 
  1219   000443                     NCO1INCL        equ	1091	;# 
  1220   000444                     NCO1INCH        equ	1092	;# 
  1221   000445                     NCO1INCU        equ	1093	;# 
  1222   000446                     NCO1CON         equ	1094	;# 
  1223   000447                     NCO1CLK         equ	1095	;# 
  1224   000448                     NCO2ACC         equ	1096	;# 
  1225   000448                     NCO2ACCL        equ	1096	;# 
  1226   000449                     NCO2ACCH        equ	1097	;# 
  1227   00044A                     NCO2ACCU        equ	1098	;# 
  1228   00044B                     NCO2INC         equ	1099	;# 
  1229   00044B                     NCO2INCL        equ	1099	;# 
  1230   00044C                     NCO2INCH        equ	1100	;# 
  1231   00044D                     NCO2INCU        equ	1101	;# 
  1232   00044E                     NCO2CON         equ	1102	;# 
  1233   00044F                     NCO2CLK         equ	1103	;# 
  1234   000450                     NCO3ACC         equ	1104	;# 
  1235   000450                     NCO3ACCL        equ	1104	;# 
  1236   000451                     NCO3ACCH        equ	1105	;# 
  1237   000452                     NCO3ACCU        equ	1106	;# 
  1238   000453                     NCO3INC         equ	1107	;# 
  1239   000453                     NCO3INCL        equ	1107	;# 
  1240   000454                     NCO3INCH        equ	1108	;# 
  1241   000455                     NCO3INCU        equ	1109	;# 
  1242   000456                     NCO3CON         equ	1110	;# 
  1243   000457                     NCO3CLK         equ	1111	;# 
  1244   000458                     FSCMCON         equ	1112	;# 
  1245   000459                     IVTLOCK         equ	1113	;# 
  1246   00045A                     IVTAD           equ	1114	;# 
  1247   00045A                     IVTADL          equ	1114	;# 
  1248   00045B                     IVTADH          equ	1115	;# 
  1249   00045C                     IVTADU          equ	1116	;# 
  1250   00045D                     IVTBASE         equ	1117	;# 
  1251   00045D                     IVTBASEL        equ	1117	;# 
  1252   00045E                     IVTBASEH        equ	1118	;# 
  1253   00045F                     IVTBASEU        equ	1119	;# 
  1254   000460                     PWM1ERS         equ	1120	;# 
  1255   000461                     PWM1CLK         equ	1121	;# 
  1256   000462                     PWM1LDS         equ	1122	;# 
  1257   000463                     PWM1PR          equ	1123	;# 
  1258   000463                     PWM1PRL         equ	1123	;# 
  1259   000464                     PWM1PRH         equ	1124	;# 
  1260   000465                     PWM1CPRE        equ	1125	;# 
  1261   000466                     PWM1PIPOS       equ	1126	;# 
  1262   000467                     PWM1GIR         equ	1127	;# 
  1263   000468                     PWM1GIE         equ	1128	;# 
  1264   000469                     PWM1CON         equ	1129	;# 
  1265   00046A                     PWM1S1CFG       equ	1130	;# 
  1266   00046B                     PWM1S1P1        equ	1131	;# 
  1267   00046B                     PWM1S1P1L       equ	1131	;# 
  1268   00046C                     PWM1S1P1H       equ	1132	;# 
  1269   00046D                     PWM1S1P2        equ	1133	;# 
  1270   00046D                     PWM1S1P2L       equ	1133	;# 
  1271   00046E                     PWM1S1P2H       equ	1134	;# 
  1272   00046F                     PWM2ERS         equ	1135	;# 
  1273   000470                     PWM2CLK         equ	1136	;# 
  1274   000471                     PWM2LDS         equ	1137	;# 
  1275   000472                     PWM2PR          equ	1138	;# 
  1276   000472                     PWM2PRL         equ	1138	;# 
  1277   000473                     PWM2PRH         equ	1139	;# 
  1278   000474                     PWM2CPRE        equ	1140	;# 
  1279   000475                     PWM2PIPOS       equ	1141	;# 
  1280   000476                     PWM2GIR         equ	1142	;# 
  1281   000477                     PWM2GIE         equ	1143	;# 
  1282   000478                     PWM2CON         equ	1144	;# 
  1283   000479                     PWM2S1CFG       equ	1145	;# 
  1284   00047A                     PWM2S1P1        equ	1146	;# 
  1285   00047A                     PWM2S1P1L       equ	1146	;# 
  1286   00047B                     PWM2S1P1H       equ	1147	;# 
  1287   00047C                     PWM2S1P2        equ	1148	;# 
  1288   00047C                     PWM2S1P2L       equ	1148	;# 
  1289   00047D                     PWM2S1P2H       equ	1149	;# 
  1290   00047E                     PWM3ERS         equ	1150	;# 
  1291   00047F                     PWM3CLK         equ	1151	;# 
  1292   000480                     PWM3LDS         equ	1152	;# 
  1293   000481                     PWM3PR          equ	1153	;# 
  1294   000481                     PWM3PRL         equ	1153	;# 
  1295   000482                     PWM3PRH         equ	1154	;# 
  1296   000483                     PWM3CPRE        equ	1155	;# 
  1297   000484                     PWM3PIPOS       equ	1156	;# 
  1298   000485                     PWM3GIR         equ	1157	;# 
  1299   000486                     PWM3GIE         equ	1158	;# 
  1300   000487                     PWM3CON         equ	1159	;# 
  1301   000488                     PWM3S1CFG       equ	1160	;# 
  1302   000489                     PWM3S1P1        equ	1161	;# 
  1303   000489                     PWM3S1P1L       equ	1161	;# 
  1304   00048A                     PWM3S1P1H       equ	1162	;# 
  1305   00048B                     PWM3S1P2        equ	1163	;# 
  1306   00048B                     PWM3S1P2L       equ	1163	;# 
  1307   00048C                     PWM3S1P2H       equ	1164	;# 
  1308   00048D                     PWM4ERS         equ	1165	;# 
  1309   00048E                     PWM4CLK         equ	1166	;# 
  1310   00048F                     PWM4LDS         equ	1167	;# 
  1311   000490                     PWM4PR          equ	1168	;# 
  1312   000490                     PWM4PRL         equ	1168	;# 
  1313   000491                     PWM4PRH         equ	1169	;# 
  1314   000492                     PWM4CPRE        equ	1170	;# 
  1315   000493                     PWM4PIPOS       equ	1171	;# 
  1316   000494                     PWM4GIR         equ	1172	;# 
  1317   000495                     PWM4GIE         equ	1173	;# 
  1318   000496                     PWM4CON         equ	1174	;# 
  1319   000497                     PWM4S1CFG       equ	1175	;# 
  1320   000498                     PWM4S1P1        equ	1176	;# 
  1321   000498                     PWM4S1P1L       equ	1176	;# 
  1322   000499                     PWM4S1P1H       equ	1177	;# 
  1323   00049A                     PWM4S1P2        equ	1178	;# 
  1324   00049A                     PWM4S1P2L       equ	1178	;# 
  1325   00049B                     PWM4S1P2H       equ	1179	;# 
  1326   00049C                     PWMLOAD         equ	1180	;# 
  1327   00049D                     PWMEN           equ	1181	;# 
  1328   00049E                     PIE0            equ	1182	;# 
  1329   00049F                     PIE1            equ	1183	;# 
  1330   0004A0                     PIE2            equ	1184	;# 
  1331   0004A1                     PIE3            equ	1185	;# 
  1332   0004A2                     PIE4            equ	1186	;# 
  1333   0004A3                     PIE5            equ	1187	;# 
  1334   0004A4                     PIE6            equ	1188	;# 
  1335   0004A5                     PIE7            equ	1189	;# 
  1336   0004A6                     PIE8            equ	1190	;# 
  1337   0004A7                     PIE9            equ	1191	;# 
  1338   0004A8                     PIE10           equ	1192	;# 
  1339   0004A9                     PIE11           equ	1193	;# 
  1340   0004AA                     PIE12           equ	1194	;# 
  1341   0004AB                     PIE13           equ	1195	;# 
  1342   0004AC                     PIE14           equ	1196	;# 
  1343   0004AD                     PIE15           equ	1197	;# 
  1344   0004AE                     PIR0            equ	1198	;# 
  1345   0004AF                     PIR1            equ	1199	;# 
  1346   0004B0                     PIR2            equ	1200	;# 
  1347   0004B1                     PIR3            equ	1201	;# 
  1348   0004B2                     PIR4            equ	1202	;# 
  1349   0004B3                     PIR5            equ	1203	;# 
  1350   0004B4                     PIR6            equ	1204	;# 
  1351   0004B5                     PIR7            equ	1205	;# 
  1352   0004B6                     PIR8            equ	1206	;# 
  1353   0004B7                     PIR9            equ	1207	;# 
  1354   0004B8                     PIR10           equ	1208	;# 
  1355   0004B9                     PIR11           equ	1209	;# 
  1356   0004BA                     PIR12           equ	1210	;# 
  1357   0004BB                     PIR13           equ	1211	;# 
  1358   0004BC                     PIR14           equ	1212	;# 
  1359   0004BD                     PIR15           equ	1213	;# 
  1360   0004BE                     LATA            equ	1214	;# 
  1361   0004BF                     LATB            equ	1215	;# 
  1362   0004C0                     LATC            equ	1216	;# 
  1363   0004C6                     TRISA           equ	1222	;# 
  1364   0004C7                     TRISB           equ	1223	;# 
  1365   0004C8                     TRISC           equ	1224	;# 
  1366   0004CA                     TRISE           equ	1226	;# 
  1367   0004CE                     PORTA           equ	1230	;# 
  1368   0004CF                     PORTB           equ	1231	;# 
  1369   0004D0                     PORTC           equ	1232	;# 
  1370   0004D2                     PORTE           equ	1234	;# 
  1371   0004D6                     INTCON0         equ	1238	;# 
  1372   0004D7                     INTCON1         equ	1239	;# 
  1373   0004D8                     STATUS          equ	1240	;# 
  1374   0004D9                     FSR2            equ	1241	;# 
  1375   0004D9                     FSR2L           equ	1241	;# 
  1376   0004DA                     FSR2H           equ	1242	;# 
  1377   0004DB                     PLUSW2          equ	1243	;# 
  1378   0004DC                     PREINC2         equ	1244	;# 
  1379   0004DD                     POSTDEC2        equ	1245	;# 
  1380   0004DE                     POSTINC2        equ	1246	;# 
  1381   0004DF                     INDF2           equ	1247	;# 
  1382   0004E0                     BSR             equ	1248	;# 
  1383   0004E1                     FSR1            equ	1249	;# 
  1384   0004E1                     FSR1L           equ	1249	;# 
  1385   0004E2                     FSR1H           equ	1250	;# 
  1386   0004E3                     PLUSW1          equ	1251	;# 
  1387   0004E4                     PREINC1         equ	1252	;# 
  1388   0004E5                     POSTDEC1        equ	1253	;# 
  1389   0004E6                     POSTINC1        equ	1254	;# 
  1390   0004E7                     INDF1           equ	1255	;# 
  1391   0004E8                     WREG            equ	1256	;# 
  1392   0004E9                     FSR0            equ	1257	;# 
  1393   0004E9                     FSR0L           equ	1257	;# 
  1394   0004EA                     FSR0H           equ	1258	;# 
  1395   0004EB                     PLUSW0          equ	1259	;# 
  1396   0004EC                     PREINC0         equ	1260	;# 
  1397   0004ED                     POSTDEC0        equ	1261	;# 
  1398   0004EE                     POSTINC0        equ	1262	;# 
  1399   0004EF                     INDF0           equ	1263	;# 
  1400   0004F0                     PCON0           equ	1264	;# 
  1401   0004F1                     PCON1           equ	1265	;# 
  1402   0004F2                     CPUDOZE         equ	1266	;# 
  1403   0004F3                     PROD            equ	1267	;# 
  1404   0004F3                     PRODL           equ	1267	;# 
  1405   0004F4                     PRODH           equ	1268	;# 
  1406   0004F5                     TABLAT          equ	1269	;# 
  1407   0004F6                     TBLPTR          equ	1270	;# 
  1408   0004F6                     TBLPTRL         equ	1270	;# 
  1409   0004F7                     TBLPTRH         equ	1271	;# 
  1410   0004F8                     TBLPTRU         equ	1272	;# 
  1411   0004F9                     PCLAT           equ	1273	;# 
  1412   0004F9                     PCL             equ	1273	;# 
  1413   0004FA                     PCLATH          equ	1274	;# 
  1414   0004FB                     PCLATU          equ	1275	;# 
  1415   0004FC                     STKPTR          equ	1276	;# 
  1416   0004FD                     TOS             equ	1277	;# 
  1417   0004FD                     TOSL            equ	1277	;# 
  1418   0004FE                     TOSH            equ	1278	;# 
  1419   0004FF                     TOSU            equ	1279	;# 
  1420   000038                     BOOTREG         equ	56	;# 
  1421   000039                     CLKRCON         equ	57	;# 
  1422   00003A                     CLKRCLK         equ	58	;# 
  1423   000040                     NVMCON0         equ	64	;# 
  1424   000041                     NVMCON1         equ	65	;# 
  1425   000042                     NVMLOCK         equ	66	;# 
  1426   000043                     NVMADR          equ	67	;# 
  1427   000043                     NVMADRL         equ	67	;# 
  1428   000044                     NVMADRH         equ	68	;# 
  1429   000045                     NVMADRU         equ	69	;# 
  1430   000046                     NVMDAT          equ	70	;# 
  1431   000046                     NVMDATL         equ	70	;# 
  1432   000047                     NVMDATH         equ	71	;# 
  1433   000048                     VREGCON         equ	72	;# 
  1434   000049                     BORCON          equ	73	;# 
  1435   00004A                     HLVDCON0        equ	74	;# 
  1436   00004B                     HLVDCON1        equ	75	;# 
  1437   00004C                     ZCDCON          equ	76	;# 
  1438   000060                     PMD0            equ	96	;# 
  1439   000061                     PMD1            equ	97	;# 
  1440   000062                     PMD2            equ	98	;# 
  1441   000063                     PMD3            equ	99	;# 
  1442   000064                     PMD4            equ	100	;# 
  1443   000065                     PMD5            equ	101	;# 
  1444   000066                     PMD6            equ	102	;# 
  1445   000067                     PMD7            equ	103	;# 
  1446   000068                     PMD8            equ	104	;# 
  1447   00006A                     MD1CON0         equ	106	;# 
  1448   00006B                     MD1CON1         equ	107	;# 
  1449   00006C                     MD1SRC          equ	108	;# 
  1450   00006D                     MD1CARL         equ	109	;# 
  1451   00006E                     MD1CARH         equ	110	;# 
  1452   00006F                     CMOUT           equ	111	;# 
  1453   000070                     CM1CON0         equ	112	;# 
  1454   000071                     CM1CON1         equ	113	;# 
  1455   000072                     CM1NCH          equ	114	;# 
  1456   000073                     CM1PCH          equ	115	;# 
  1457   000074                     CM2CON0         equ	116	;# 
  1458   000075                     CM2CON1         equ	117	;# 
  1459   000076                     CM2NCH          equ	118	;# 
  1460   000077                     CM2PCH          equ	119	;# 
  1461   000078                     WDTCON0         equ	120	;# 
  1462   000079                     WDTCON1         equ	121	;# 
  1463   00007A                     WDTPSL          equ	122	;# 
  1464   00007B                     WDTPSH          equ	123	;# 
  1465   00007C                     WDTTMR          equ	124	;# 
  1466   00007D                     DAC1DAT         equ	125	;# 
  1467   00007D                     DAC1DATL        equ	125	;# 
  1468   00007F                     DAC1CON         equ	127	;# 
  1469   000080                     SPI1RXB         equ	128	;# 
  1470   000081                     SPI1TXB         equ	129	;# 
  1471   000082                     SPI1TCNT        equ	130	;# 
  1472   000082                     SPI1TCNTL       equ	130	;# 
  1473   000083                     SPI1TCNTH       equ	131	;# 
  1474   000084                     SPI1CON0        equ	132	;# 
  1475   000085                     SPI1CON1        equ	133	;# 
  1476   000086                     SPI1CON2        equ	134	;# 
  1477   000087                     SPI1STATUS      equ	135	;# 
  1478   000088                     SPI1TWIDTH      equ	136	;# 
  1479   000089                     SPI1BAUD        equ	137	;# 
  1480   00008A                     SPI1INTF        equ	138	;# 
  1481   00008B                     SPI1INTE        equ	139	;# 
  1482   00008C                     SPI1CLK         equ	140	;# 
  1483   00008D                     SPI2RXB         equ	141	;# 
  1484   00008E                     SPI2TXB         equ	142	;# 
  1485   00008F                     SPI2TCNT        equ	143	;# 
  1486   00008F                     SPI2TCNTL       equ	143	;# 
  1487   000090                     SPI2TCNTH       equ	144	;# 
  1488   000091                     SPI2CON0        equ	145	;# 
  1489   000092                     SPI2CON1        equ	146	;# 
  1490   000093                     SPI2CON2        equ	147	;# 
  1491   000094                     SPI2STATUS      equ	148	;# 
  1492   000095                     SPI2TWIDTH      equ	149	;# 
  1493   000096                     SPI2BAUD        equ	150	;# 
  1494   000097                     SPI2INTF        equ	151	;# 
  1495   000098                     SPI2INTE        equ	152	;# 
  1496   000099                     SPI2CLK         equ	153	;# 
  1497   0000AC                     ACTCON          equ	172	;# 
  1498   0000AD                     OSCCON1         equ	173	;# 
  1499   0000AE                     OSCCON2         equ	174	;# 
  1500   0000AF                     OSCCON3         equ	175	;# 
  1501   0000B0                     OSCTUNE         equ	176	;# 
  1502   0000B1                     OSCFRQ          equ	177	;# 
  1503   0000B1                     OSCFREQ         equ	177	;# 
  1504   0000B2                     OSCSTAT         equ	178	;# 
  1505   0000B2                     OSCSTAT1        equ	178	;# 
  1506   0000B3                     OSCEN           equ	179	;# 
  1507   0000B4                     PRLOCK          equ	180	;# 
  1508   0000B5                     SCANPR          equ	181	;# 
  1509   0000B6                     DMA1PR          equ	182	;# 
  1510   0000B7                     DMA2PR          equ	183	;# 
  1511   0000B8                     DMA3PR          equ	184	;# 
  1512   0000B9                     DMA4PR          equ	185	;# 
  1513   0000BA                     DMA5PR          equ	186	;# 
  1514   0000BB                     DMA6PR          equ	187	;# 
  1515   0000BC                     DMA7PR          equ	188	;# 
  1516   0000BD                     DMA8PR          equ	189	;# 
  1517   0000BE                     MAINPR          equ	190	;# 
  1518   0000BF                     ISRPR           equ	191	;# 
  1519   0000D4                     CLCDATA         equ	212	;# 
  1520   0000D5                     CLCSELECT       equ	213	;# 
  1521   0000D6                     CLCnCON         equ	214	;# 
  1522   0000D7                     CLCnPOL         equ	215	;# 
  1523   0000D8                     CLCnSEL0        equ	216	;# 
  1524   0000D9                     CLCnSEL1        equ	217	;# 
  1525   0000DA                     CLCnSEL2        equ	218	;# 
  1526   0000DB                     CLCnSEL3        equ	219	;# 
  1527   0000DC                     CLCnGLS0        equ	220	;# 
  1528   0000DD                     CLCnGLS1        equ	221	;# 
  1529   0000DE                     CLCnGLS2        equ	222	;# 
  1530   0000DF                     CLCnGLS3        equ	223	;# 
  1531   0000E8                     DMASELECT       equ	232	;# 
  1532   0000E9                     DMAnBUF         equ	233	;# 
  1533   0000EA                     DMAnDCNT        equ	234	;# 
  1534   0000EA                     DMAnDCNTL       equ	234	;# 
  1535   0000EB                     DMAnDCNTH       equ	235	;# 
  1536   0000EC                     DMAnDPTR        equ	236	;# 
  1537   0000EC                     DMAnDPTRL       equ	236	;# 
  1538   0000ED                     DMAnDPTRH       equ	237	;# 
  1539   0000EE                     DMAnDSZ         equ	238	;# 
  1540   0000EE                     DMAnDSZL        equ	238	;# 
  1541   0000EF                     DMAnDSZH        equ	239	;# 
  1542   0000F0                     DMAnDSA         equ	240	;# 
  1543   0000F0                     DMAnDSAL        equ	240	;# 
  1544   0000F1                     DMAnDSAH        equ	241	;# 
  1545   0000F2                     DMAnSCNT        equ	242	;# 
  1546   0000F2                     DMAnSCNTL       equ	242	;# 
  1547   0000F3                     DMAnSCNTH       equ	243	;# 
  1548   0000F4                     DMAnSPTR        equ	244	;# 
  1549   0000F4                     DMAnSPTRL       equ	244	;# 
  1550   0000F5                     DMAnSPTRH       equ	245	;# 
  1551   0000F6                     DMAnSPTRU       equ	246	;# 
  1552   0000F7                     DMAnSSZ         equ	247	;# 
  1553   0000F7                     DMAnSSZL        equ	247	;# 
  1554   0000F8                     DMAnSSZH        equ	248	;# 
  1555   0000F9                     DMAnSSA         equ	249	;# 
  1556   0000F9                     DMAnSSAL        equ	249	;# 
  1557   0000FA                     DMAnSSAH        equ	250	;# 
  1558   0000FB                     DMAnSSAU        equ	251	;# 
  1559   0000FC                     DMAnCON0        equ	252	;# 
  1560   0000FD                     DMAnCON1        equ	253	;# 
  1561   0000FE                     DMAnAIRQ        equ	254	;# 
  1562   0000FF                     DMAnSIRQ        equ	255	;# 
  1563   000100                     C1CONL          equ	256	;# 
  1564   000101                     C1CONH          equ	257	;# 
  1565   000102                     C1CONU          equ	258	;# 
  1566   000103                     C1CONT          equ	259	;# 
  1567   000104                     C1NBTCFGL       equ	260	;# 
  1568   000105                     C1NBTCFGH       equ	261	;# 
  1569   000106                     C1NBTCFGU       equ	262	;# 
  1570   000107                     C1NBTCFGT       equ	263	;# 
  1571   000108                     C1DBTCFGL       equ	264	;# 
  1572   000109                     C1DBTCFGH       equ	265	;# 
  1573   00010A                     C1DBTCFGU       equ	266	;# 
  1574   00010B                     C1DBTCFGT       equ	267	;# 
  1575   00010C                     C1TDCL          equ	268	;# 
  1576   00010D                     C1TDCH          equ	269	;# 
  1577   00010E                     C1TDCU          equ	270	;# 
  1578   000110                     C1TBC           equ	272	;# 
  1579   000110                     C1TBCL          equ	272	;# 
  1580   000111                     C1TBCH          equ	273	;# 
  1581   000112                     C1TBCU          equ	274	;# 
  1582   000113                     C1TBCT          equ	275	;# 
  1583   000114                     C1TSCONL        equ	276	;# 
  1584   000115                     C1TSCONH        equ	277	;# 
  1585   000116                     C1TSCONU        equ	278	;# 
  1586   000117                     C1TSCONT        equ	279	;# 
  1587   000118                     C1VECL          equ	280	;# 
  1588   000119                     C1VECH          equ	281	;# 
  1589   00011A                     C1VECU          equ	282	;# 
  1590   00011B                     C1VECT          equ	283	;# 
  1591   00011C                     C1INTL          equ	284	;# 
  1592   00011D                     C1INTH          equ	285	;# 
  1593   00011E                     C1INTU          equ	286	;# 
  1594   00011F                     C1INTT          equ	287	;# 
  1595   000120                     C1RXIF          equ	288	;# 
  1596   000120                     C1RXIFL         equ	288	;# 
  1597   000121                     C1RXIFH         equ	289	;# 
  1598   000122                     C1RXIFU         equ	290	;# 
  1599   000123                     C1RXIFT         equ	291	;# 
  1600   000124                     C1TXIF          equ	292	;# 
  1601   000124                     C1TXIFL         equ	292	;# 
  1602   000125                     C1TXIFH         equ	293	;# 
  1603   000126                     C1TXIFU         equ	294	;# 
  1604   000127                     C1TXIFT         equ	295	;# 
  1605   000128                     C1RXOVIF        equ	296	;# 
  1606   000128                     C1RXOVIFL       equ	296	;# 
  1607   000129                     C1RXOVIFH       equ	297	;# 
  1608   00012A                     C1RXOVIFU       equ	298	;# 
  1609   00012B                     C1RXOVIFT       equ	299	;# 
  1610   00012C                     C1TXATIF        equ	300	;# 
  1611   00012C                     C1TXATIFL       equ	300	;# 
  1612   00012D                     C1TXATIFH       equ	301	;# 
  1613   00012E                     C1TXATIFU       equ	302	;# 
  1614   00012F                     C1TXATIFT       equ	303	;# 
  1615   000130                     C1TXREQ         equ	304	;# 
  1616   000130                     C1TXREQL        equ	304	;# 
  1617   000131                     C1TXREQH        equ	305	;# 
  1618   000132                     C1TXREQU        equ	306	;# 
  1619   000133                     C1TXREQT        equ	307	;# 
  1620   000134                     C1TRECL         equ	308	;# 
  1621   000135                     C1TRECH         equ	309	;# 
  1622   000136                     C1TRECU         equ	310	;# 
  1623   000137                     C1TRECT         equ	311	;# 
  1624   000138                     C1BDIAG0L       equ	312	;# 
  1625   000139                     C1BDIAG0H       equ	313	;# 
  1626   00013C                     C1BDIAG1L       equ	316	;# 
  1627   00013D                     C1BDIAG1H       equ	317	;# 
  1628   00013E                     C1BDIAG1U       equ	318	;# 
  1629   00013F                     C1BDIAG1T       equ	319	;# 
  1630   000140                     C1TEFCONL       equ	320	;# 
  1631   000141                     C1TEFCONH       equ	321	;# 
  1632   000142                     C1TEFCONU       equ	322	;# 
  1633   000143                     C1TEFCONT       equ	323	;# 
  1634   000144                     C1TEFSTAL       equ	324	;# 
  1635   000145                     C1TEFSTAH       equ	325	;# 
  1636   000146                     C1TEFSTAU       equ	326	;# 
  1637   000147                     C1TEFSTAT       equ	327	;# 
  1638   000148                     C1TEFUA         equ	328	;# 
  1639   000148                     C1TEFUAL        equ	328	;# 
  1640   000149                     C1TEFUAH        equ	329	;# 
  1641   00014A                     C1TEFUAU        equ	330	;# 
  1642   00014B                     C1TEFUAT        equ	331	;# 
  1643   00014C                     C1FIFOBA        equ	332	;# 
  1644   00014C                     C1FIFOBAL       equ	332	;# 
  1645   00014D                     C1FIFOBAH       equ	333	;# 
  1646   00014E                     C1FIFOBAU       equ	334	;# 
  1647   00014F                     C1FIFOBAT       equ	335	;# 
  1648   000150                     C1TXQCONL       equ	336	;# 
  1649   000151                     C1TXQCONH       equ	337	;# 
  1650   000152                     C1TXQCONU       equ	338	;# 
  1651   000153                     C1TXQCONT       equ	339	;# 
  1652   000154                     C1TXQSTAL       equ	340	;# 
  1653   000155                     C1TXQSTAH       equ	341	;# 
  1654   000156                     C1TXQSTAU       equ	342	;# 
  1655   000157                     C1TXQSTAT       equ	343	;# 
  1656   000158                     C1TXQUA         equ	344	;# 
  1657   000158                     C1TXQUAL        equ	344	;# 
  1658   000159                     C1TXQUAH        equ	345	;# 
  1659   00015A                     C1TXQUAU        equ	346	;# 
  1660   00015B                     C1TXQUAT        equ	347	;# 
  1661   00015C                     C1FIFOCON1      equ	348	;# 
  1662   00015C                     C1FIFOCON1L     equ	348	;# 
  1663   00015D                     C1FIFOCON1H     equ	349	;# 
  1664   00015E                     C1FIFOCON1U     equ	350	;# 
  1665   00015F                     C1FIFOCON1T     equ	351	;# 
  1666   000160                     C1FIFOSTA1      equ	352	;# 
  1667   000160                     C1FIFOSTA1L     equ	352	;# 
  1668   000161                     C1FIFOSTA1H     equ	353	;# 
  1669   000162                     C1FIFOSTA1U     equ	354	;# 
  1670   000163                     C1FIFOSTA1T     equ	355	;# 
  1671   000164                     C1FIFOUA1       equ	356	;# 
  1672   000164                     C1FIFOUA1L      equ	356	;# 
  1673   000165                     C1FIFOUA1H      equ	357	;# 
  1674   000166                     C1FIFOUA1U      equ	358	;# 
  1675   000167                     C1FIFOUA1T      equ	359	;# 
  1676   000168                     C1FIFOCON2      equ	360	;# 
  1677   000168                     C1FIFOCON2L     equ	360	;# 
  1678   000169                     C1FIFOCON2H     equ	361	;# 
  1679   00016A                     C1FIFOCON2U     equ	362	;# 
  1680   00016B                     C1FIFOCON2T     equ	363	;# 
  1681   00016C                     C1FIFOSTA2      equ	364	;# 
  1682   00016C                     C1FIFOSTA2L     equ	364	;# 
  1683   00016D                     C1FIFOSTA2H     equ	365	;# 
  1684   00016E                     C1FIFOSTA2U     equ	366	;# 
  1685   00016F                     C1FIFOSTA2T     equ	367	;# 
  1686   000170                     C1FIFOUA2       equ	368	;# 
  1687   000170                     C1FIFOUA2L      equ	368	;# 
  1688   000171                     C1FIFOUA2H      equ	369	;# 
  1689   000172                     C1FIFOUA2U      equ	370	;# 
  1690   000173                     C1FIFOUA2T      equ	371	;# 
  1691   000174                     C1FIFOCON3      equ	372	;# 
  1692   000174                     C1FIFOCON3L     equ	372	;# 
  1693   000175                     C1FIFOCON3H     equ	373	;# 
  1694   000176                     C1FIFOCON3U     equ	374	;# 
  1695   000177                     C1FIFOCON3T     equ	375	;# 
  1696   000178                     C1FIFOSTA3      equ	376	;# 
  1697   000178                     C1FIFOSTA3L     equ	376	;# 
  1698   000179                     C1FIFOSTA3H     equ	377	;# 
  1699   00017A                     C1FIFOSTA3U     equ	378	;# 
  1700   00017B                     C1FIFOSTA3T     equ	379	;# 
  1701   00017C                     C1FIFOUA3       equ	380	;# 
  1702   00017C                     C1FIFOUA3L      equ	380	;# 
  1703   00017D                     C1FIFOUA3H      equ	381	;# 
  1704   00017E                     C1FIFOUA3U      equ	382	;# 
  1705   00017F                     C1FIFOUA3T      equ	383	;# 
  1706   000180                     C1FLTCON0L      equ	384	;# 
  1707   000181                     C1FLTCON0H      equ	385	;# 
  1708   000182                     C1FLTCON0U      equ	386	;# 
  1709   000183                     C1FLTCON0T      equ	387	;# 
  1710   000184                     C1FLTCON1L      equ	388	;# 
  1711   000185                     C1FLTCON1H      equ	389	;# 
  1712   000186                     C1FLTCON1U      equ	390	;# 
  1713   000187                     C1FLTCON1T      equ	391	;# 
  1714   000188                     C1FLTCON2L      equ	392	;# 
  1715   000189                     C1FLTCON2H      equ	393	;# 
  1716   00018A                     C1FLTCON2U      equ	394	;# 
  1717   00018B                     C1FLTCON2T      equ	395	;# 
  1718   00018C                     C1FLTOBJ0       equ	396	;# 
  1719   00018C                     C1FLTOBJ0L      equ	396	;# 
  1720   00018D                     C1FLTOBJ0H      equ	397	;# 
  1721   00018E                     C1FLTOBJ0U      equ	398	;# 
  1722   00018F                     C1FLTOBJ0T      equ	399	;# 
  1723   000190                     C1MASK0         equ	400	;# 
  1724   000190                     C1MASK0L        equ	400	;# 
  1725   000191                     C1MASK0H        equ	401	;# 
  1726   000192                     C1MASK0U        equ	402	;# 
  1727   000193                     C1MASK0T        equ	403	;# 
  1728   000194                     C1FLTOBJ1       equ	404	;# 
  1729   000194                     C1FLTOBJ1L      equ	404	;# 
  1730   000195                     C1FLTOBJ1H      equ	405	;# 
  1731   000196                     C1FLTOBJ1U      equ	406	;# 
  1732   000197                     C1FLTOBJ1T      equ	407	;# 
  1733   000198                     C1MASK1         equ	408	;# 
  1734   000198                     C1MASK1L        equ	408	;# 
  1735   000199                     C1MASK1H        equ	409	;# 
  1736   00019A                     C1MASK1U        equ	410	;# 
  1737   00019B                     C1MASK1T        equ	411	;# 
  1738   00019C                     C1FLTOBJ2       equ	412	;# 
  1739   00019C                     C1FLTOBJ2L      equ	412	;# 
  1740   00019D                     C1FLTOBJ2H      equ	413	;# 
  1741   00019E                     C1FLTOBJ2U      equ	414	;# 
  1742   00019F                     C1FLTOBJ2T      equ	415	;# 
  1743   0001A0                     C1MASK2         equ	416	;# 
  1744   0001A0                     C1MASK2L        equ	416	;# 
  1745   0001A1                     C1MASK2H        equ	417	;# 
  1746   0001A2                     C1MASK2U        equ	418	;# 
  1747   0001A3                     C1MASK2T        equ	419	;# 
  1748   0001A4                     C1FLTOBJ3       equ	420	;# 
  1749   0001A4                     C1FLTOBJ3L      equ	420	;# 
  1750   0001A5                     C1FLTOBJ3H      equ	421	;# 
  1751   0001A6                     C1FLTOBJ3U      equ	422	;# 
  1752   0001A7                     C1FLTOBJ3T      equ	423	;# 
  1753   0001A8                     C1MASK3         equ	424	;# 
  1754   0001A8                     C1MASK3L        equ	424	;# 
  1755   0001A9                     C1MASK3H        equ	425	;# 
  1756   0001AA                     C1MASK3U        equ	426	;# 
  1757   0001AB                     C1MASK3T        equ	427	;# 
  1758   0001AC                     C1FLTOBJ4       equ	428	;# 
  1759   0001AC                     C1FLTOBJ4L      equ	428	;# 
  1760   0001AD                     C1FLTOBJ4H      equ	429	;# 
  1761   0001AE                     C1FLTOBJ4U      equ	430	;# 
  1762   0001AF                     C1FLTOBJ4T      equ	431	;# 
  1763   0001B0                     C1MASK4         equ	432	;# 
  1764   0001B0                     C1MASK4L        equ	432	;# 
  1765   0001B1                     C1MASK4H        equ	433	;# 
  1766   0001B2                     C1MASK4U        equ	434	;# 
  1767   0001B3                     C1MASK4T        equ	435	;# 
  1768   0001B4                     C1FLTOBJ5       equ	436	;# 
  1769   0001B4                     C1FLTOBJ5L      equ	436	;# 
  1770   0001B5                     C1FLTOBJ5H      equ	437	;# 
  1771   0001B6                     C1FLTOBJ5U      equ	438	;# 
  1772   0001B7                     C1FLTOBJ5T      equ	439	;# 
  1773   0001B8                     C1MASK5         equ	440	;# 
  1774   0001B8                     C1MASK5L        equ	440	;# 
  1775   0001B9                     C1MASK5H        equ	441	;# 
  1776   0001BA                     C1MASK5U        equ	442	;# 
  1777   0001BB                     C1MASK5T        equ	443	;# 
  1778   0001BC                     C1FLTOBJ6       equ	444	;# 
  1779   0001BC                     C1FLTOBJ6L      equ	444	;# 
  1780   0001BD                     C1FLTOBJ6H      equ	445	;# 
  1781   0001BE                     C1FLTOBJ6U      equ	446	;# 
  1782   0001BF                     C1FLTOBJ6T      equ	447	;# 
  1783   0001C0                     C1MASK6         equ	448	;# 
  1784   0001C0                     C1MASK6L        equ	448	;# 
  1785   0001C1                     C1MASK6H        equ	449	;# 
  1786   0001C2                     C1MASK6U        equ	450	;# 
  1787   0001C3                     C1MASK6T        equ	451	;# 
  1788   0001C4                     C1FLTOBJ7       equ	452	;# 
  1789   0001C4                     C1FLTOBJ7L      equ	452	;# 
  1790   0001C5                     C1FLTOBJ7H      equ	453	;# 
  1791   0001C6                     C1FLTOBJ7U      equ	454	;# 
  1792   0001C7                     C1FLTOBJ7T      equ	455	;# 
  1793   0001C8                     C1MASK7         equ	456	;# 
  1794   0001C8                     C1MASK7L        equ	456	;# 
  1795   0001C9                     C1MASK7H        equ	457	;# 
  1796   0001CA                     C1MASK7U        equ	458	;# 
  1797   0001CB                     C1MASK7T        equ	459	;# 
  1798   0001CC                     C1FLTOBJ8       equ	460	;# 
  1799   0001CC                     C1FLTOBJ8L      equ	460	;# 
  1800   0001CD                     C1FLTOBJ8H      equ	461	;# 
  1801   0001CE                     C1FLTOBJ8U      equ	462	;# 
  1802   0001CF                     C1FLTOBJ8T      equ	463	;# 
  1803   0001D0                     C1MASK8         equ	464	;# 
  1804   0001D0                     C1MASK8L        equ	464	;# 
  1805   0001D1                     C1MASK8H        equ	465	;# 
  1806   0001D2                     C1MASK8U        equ	466	;# 
  1807   0001D3                     C1MASK8T        equ	467	;# 
  1808   0001D4                     C1FLTOBJ9       equ	468	;# 
  1809   0001D4                     C1FLTOBJ9L      equ	468	;# 
  1810   0001D5                     C1FLTOBJ9H      equ	469	;# 
  1811   0001D6                     C1FLTOBJ9U      equ	470	;# 
  1812   0001D7                     C1FLTOBJ9T      equ	471	;# 
  1813   0001D8                     C1MASK9         equ	472	;# 
  1814   0001D8                     C1MASK9L        equ	472	;# 
  1815   0001D9                     C1MASK9H        equ	473	;# 
  1816   0001DA                     C1MASK9U        equ	474	;# 
  1817   0001DB                     C1MASK9T        equ	475	;# 
  1818   0001DC                     C1FLTOBJ10      equ	476	;# 
  1819   0001DC                     C1FLTOBJ10L     equ	476	;# 
  1820   0001DD                     C1FLTOBJ10H     equ	477	;# 
  1821   0001DE                     C1FLTOBJ10U     equ	478	;# 
  1822   0001DF                     C1FLTOBJ10T     equ	479	;# 
  1823   0001E0                     C1MASK10        equ	480	;# 
  1824   0001E0                     C1MASK10L       equ	480	;# 
  1825   0001E1                     C1MASK10H       equ	481	;# 
  1826   0001E2                     C1MASK10U       equ	482	;# 
  1827   0001E3                     C1MASK10T       equ	483	;# 
  1828   0001E4                     C1FLTOBJ11      equ	484	;# 
  1829   0001E4                     C1FLTOBJ11L     equ	484	;# 
  1830   0001E5                     C1FLTOBJ11H     equ	485	;# 
  1831   0001E6                     C1FLTOBJ11U     equ	486	;# 
  1832   0001E7                     C1FLTOBJ11T     equ	487	;# 
  1833   0001E8                     C1MASK11        equ	488	;# 
  1834   0001E8                     C1MASK11L       equ	488	;# 
  1835   0001E9                     C1MASK11H       equ	489	;# 
  1836   0001EA                     C1MASK11U       equ	490	;# 
  1837   0001EB                     C1MASK11T       equ	491	;# 
  1838   000200                     PPSLOCK         equ	512	;# 
  1839   000201                     RA0PPS          equ	513	;# 
  1840   000202                     RA1PPS          equ	514	;# 
  1841   000203                     RA2PPS          equ	515	;# 
  1842   000204                     RA3PPS          equ	516	;# 
  1843   000205                     RA4PPS          equ	517	;# 
  1844   000206                     RA5PPS          equ	518	;# 
  1845   000207                     RA6PPS          equ	519	;# 
  1846   000208                     RA7PPS          equ	520	;# 
  1847   000209                     RB0PPS          equ	521	;# 
  1848   00020A                     RB1PPS          equ	522	;# 
  1849   00020B                     RB2PPS          equ	523	;# 
  1850   00020C                     RB3PPS          equ	524	;# 
  1851   00020D                     RB4PPS          equ	525	;# 
  1852   00020E                     RB5PPS          equ	526	;# 
  1853   00020F                     RB6PPS          equ	527	;# 
  1854   000210                     RB7PPS          equ	528	;# 
  1855   000211                     RC0PPS          equ	529	;# 
  1856   000212                     RC1PPS          equ	530	;# 
  1857   000213                     RC2PPS          equ	531	;# 
  1858   000214                     RC3PPS          equ	532	;# 
  1859   000215                     RC4PPS          equ	533	;# 
  1860   000216                     RC5PPS          equ	534	;# 
  1861   000217                     RC6PPS          equ	535	;# 
  1862   000218                     RC7PPS          equ	536	;# 
  1863   00023D                     CANRXPPS        equ	573	;# 
  1864   00023E                     INT0PPS         equ	574	;# 
  1865   00023F                     INT1PPS         equ	575	;# 
  1866   000240                     INT2PPS         equ	576	;# 
  1867   000241                     T0CKIPPS        equ	577	;# 
  1868   000242                     T1CKIPPS        equ	578	;# 
  1869   000243                     T1GPPS          equ	579	;# 
  1870   000244                     T3CKIPPS        equ	580	;# 
  1871   000245                     T3GPPS          equ	581	;# 
  1872   000246                     T5CKIPPS        equ	582	;# 
  1873   000247                     T5GPPS          equ	583	;# 
  1874   000248                     T2INPPS         equ	584	;# 
  1875   000249                     T4INPPS         equ	585	;# 
  1876   00024A                     T6INPPS         equ	586	;# 
  1877   00024B                     TUIN0PPS        equ	587	;# 
  1878   00024C                     TUIN1PPS        equ	588	;# 
  1879   00024F                     CCP1PPS         equ	591	;# 
  1880   000250                     CCP2PPS         equ	592	;# 
  1881   000251                     CCP3PPS         equ	593	;# 
  1882   000253                     PWM1ERSPPS      equ	595	;# 
  1883   000254                     PWM2ERSPPS      equ	596	;# 
  1884   000255                     PWM3ERSPPS      equ	597	;# 
  1885   000256                     PWM4ERSPPS      equ	598	;# 
  1886   000257                     PWMIN0PPS       equ	599	;# 
  1887   000258                     PWMIN1PPS       equ	600	;# 
  1888   000259                     SMT1WINPPS      equ	601	;# 
  1889   00025A                     SMT1SIGPPS      equ	602	;# 
  1890   00025B                     CWG1PPS         equ	603	;# 
  1891   00025B                     CWG1INPPS       equ	603	;# 
  1892   00025C                     CWG2PPS         equ	604	;# 
  1893   00025C                     CWG2INPPS       equ	604	;# 
  1894   00025D                     CWG3PPS         equ	605	;# 
  1895   00025D                     CWG3INPPS       equ	605	;# 
  1896   00025E                     MD1CARLPPS      equ	606	;# 
  1897   00025E                     MDCARLPPS       equ	606	;# 
  1898   00025F                     MD1CARHPPS      equ	607	;# 
  1899   00025F                     MDCARHPPS       equ	607	;# 
  1900   000260                     MD1SRCPPS       equ	608	;# 
  1901   000260                     MDSRCPPS        equ	608	;# 
  1902   000261                     CLCIN0PPS       equ	609	;# 
  1903   000262                     CLCIN1PPS       equ	610	;# 
  1904   000263                     CLCIN2PPS       equ	611	;# 
  1905   000264                     CLCIN3PPS       equ	612	;# 
  1906   000265                     CLCIN4PPS       equ	613	;# 
  1907   000266                     CLCIN5PPS       equ	614	;# 
  1908   000267                     CLCIN6PPS       equ	615	;# 
  1909   000268                     CLCIN7PPS       equ	616	;# 
  1910   000269                     ADACTPPS        equ	617	;# 
  1911   00026A                     SPI1SCKPPS      equ	618	;# 
  1912   00026B                     SPI1SDIPPS      equ	619	;# 
  1913   00026C                     SPI1SSPPS       equ	620	;# 
  1914   00026D                     SPI2SCKPPS      equ	621	;# 
  1915   00026E                     SPI2SDIPPS      equ	622	;# 
  1916   00026F                     SPI2SSPPS       equ	623	;# 
  1917   000270                     I2C1SDAPPS      equ	624	;# 
  1918   000271                     I2C1SCLPPS      equ	625	;# 
  1919   000272                     U1RXPPS         equ	626	;# 
  1920   000273                     U1CTSPPS        equ	627	;# 
  1921   000274                     U2RXPPS         equ	628	;# 
  1922   000275                     U2CTSPPS        equ	629	;# 
  1923   000276                     U3RXPPS         equ	630	;# 
  1924   000277                     U3CTSPPS        equ	631	;# 
  1925   000278                     U4RXPPS         equ	632	;# 
  1926   000279                     U4CTSPPS        equ	633	;# 
  1927   00027A                     U5RXPPS         equ	634	;# 
  1928   00027B                     U5CTSPPS        equ	635	;# 
  1929   000286                     RC4I2C          equ	646	;# 
  1930   000287                     RC3I2C          equ	647	;# 
  1931   000288                     RB2I2C          equ	648	;# 
  1932   000289                     RB1I2C          equ	649	;# 
  1933   00028A                     I2C1RXB         equ	650	;# 
  1934   00028B                     I2C1TXB         equ	651	;# 
  1935   00028C                     I2C1CNTL        equ	652	;# 
  1936   00028D                     I2C1CNTH        equ	653	;# 
  1937   00028E                     I2C1ADB0        equ	654	;# 
  1938   00028F                     I2C1ADB1        equ	655	;# 
  1939   000290                     I2C1ADR0        equ	656	;# 
  1940   000291                     I2C1ADR1        equ	657	;# 
  1941   000292                     I2C1ADR2        equ	658	;# 
  1942   000293                     I2C1ADR3        equ	659	;# 
  1943   000294                     I2C1CON0        equ	660	;# 
  1944   000295                     I2C1CON1        equ	661	;# 
  1945   000296                     I2C1CON2        equ	662	;# 
  1946   000297                     I2C1ERR         equ	663	;# 
  1947   000298                     I2C1STAT0       equ	664	;# 
  1948   000299                     I2C1STAT1       equ	665	;# 
  1949   00029A                     I2C1PIR         equ	666	;# 
  1950   00029B                     I2C1PIE         equ	667	;# 
  1951   00029C                     I2C1BTO         equ	668	;# 
  1952   00029D                     I2C1BAUD        equ	669	;# 
  1953   00029E                     I2C1CLK         equ	670	;# 
  1954   00029F                     I2C1BTOC        equ	671	;# 
  1955   0002A1                     U1RXB           equ	673	;# 
  1956   0002A1                     U1RXBL          equ	673	;# 
  1957   0002A2                     U1RXCHK         equ	674	;# 
  1958   0002A3                     U1TXB           equ	675	;# 
  1959   0002A3                     U1TXBL          equ	675	;# 
  1960   0002A4                     U1TXCHK         equ	676	;# 
  1961   0002A5                     U1P1            equ	677	;# 
  1962   0002A5                     U1P1L           equ	677	;# 
  1963   0002A6                     U1P1H           equ	678	;# 
  1964   0002A7                     U1P2            equ	679	;# 
  1965   0002A7                     U1P2L           equ	679	;# 
  1966   0002A8                     U1P2H           equ	680	;# 
  1967   0002A9                     U1P3            equ	681	;# 
  1968   0002A9                     U1P3L           equ	681	;# 
  1969   0002AA                     U1P3H           equ	682	;# 
  1970   0002AB                     U1CON0          equ	683	;# 
  1971   0002AC                     U1CON1          equ	684	;# 
  1972   0002AD                     U1CON2          equ	685	;# 
  1973   0002AE                     U1BRG           equ	686	;# 
  1974   0002AE                     U1BRGL          equ	686	;# 
  1975   0002AF                     U1BRGH          equ	687	;# 
  1976   0002B0                     U1FIFO          equ	688	;# 
  1977   0002B1                     U1UIR           equ	689	;# 
  1978   0002B2                     U1ERRIR         equ	690	;# 
  1979   0002B3                     U1ERRIE         equ	691	;# 
  1980   0002B4                     U2RXB           equ	692	;# 
  1981   0002B4                     U2RXBL          equ	692	;# 
  1982   0002B5                     U2RXCHK         equ	693	;# 
  1983   0002B6                     U2TXB           equ	694	;# 
  1984   0002B6                     U2TXBL          equ	694	;# 
  1985   0002B7                     U2TXCHK         equ	695	;# 
  1986   0002B8                     U2P1            equ	696	;# 
  1987   0002B8                     U2P1L           equ	696	;# 
  1988   0002B9                     U2P1H           equ	697	;# 
  1989   0002BA                     U2P2            equ	698	;# 
  1990   0002BA                     U2P2L           equ	698	;# 
  1991   0002BB                     U2P2H           equ	699	;# 
  1992   0002BC                     U2P3            equ	700	;# 
  1993   0002BC                     U2P3L           equ	700	;# 
  1994   0002BD                     U2P3H           equ	701	;# 
  1995   0002BE                     U2CON0          equ	702	;# 
  1996   0002BF                     U2CON1          equ	703	;# 
  1997   0002C0                     U2CON2          equ	704	;# 
  1998   0002C1                     U2BRG           equ	705	;# 
  1999   0002C1                     U2BRGL          equ	705	;# 
  2000   0002C2                     U2BRGH          equ	706	;# 
  2001   0002C3                     U2FIFO          equ	707	;# 
  2002   0002C4                     U2UIR           equ	708	;# 
  2003   0002C5                     U2ERRIR         equ	709	;# 
  2004   0002C6                     U2ERRIE         equ	710	;# 
  2005   0002C7                     U3RXB           equ	711	;# 
  2006   0002C7                     U3RXBL          equ	711	;# 
  2007   0002C9                     U3TXB           equ	713	;# 
  2008   0002C9                     U3TXBL          equ	713	;# 
  2009   0002CB                     U3P1            equ	715	;# 
  2010   0002CB                     U3P1L           equ	715	;# 
  2011   0002CD                     U3P2            equ	717	;# 
  2012   0002CD                     U3P2L           equ	717	;# 
  2013   0002CF                     U3P3            equ	719	;# 
  2014   0002CF                     U3P3L           equ	719	;# 
  2015   0002D1                     U3CON0          equ	721	;# 
  2016   0002D2                     U3CON1          equ	722	;# 
  2017   0002D3                     U3CON2          equ	723	;# 
  2018   0002D4                     U3BRG           equ	724	;# 
  2019   0002D4                     U3BRGL          equ	724	;# 
  2020   0002D5                     U3BRGH          equ	725	;# 
  2021   0002D6                     U3FIFO          equ	726	;# 
  2022   0002D7                     U3UIR           equ	727	;# 
  2023   0002D8                     U3ERRIR         equ	728	;# 
  2024   0002D9                     U3ERRIE         equ	729	;# 
  2025   0002DA                     U4RXB           equ	730	;# 
  2026   0002DA                     U4RXBL          equ	730	;# 
  2027   0002DC                     U4TXB           equ	732	;# 
  2028   0002DC                     U4TXBL          equ	732	;# 
  2029   0002DE                     U4P1            equ	734	;# 
  2030   0002DE                     U4P1L           equ	734	;# 
  2031   0002E0                     U4P2            equ	736	;# 
  2032   0002E0                     U4P2L           equ	736	;# 
  2033   0002E2                     U4P3            equ	738	;# 
  2034   0002E2                     U4P3L           equ	738	;# 
  2035   0002E4                     U4CON0          equ	740	;# 
  2036   0002E5                     U4CON1          equ	741	;# 
  2037   0002E6                     U4CON2          equ	742	;# 
  2038   0002E7                     U4BRG           equ	743	;# 
  2039   0002E7                     U4BRGL          equ	743	;# 
  2040   0002E8                     U4BRGH          equ	744	;# 
  2041   0002E9                     U4FIFO          equ	745	;# 
  2042   0002EA                     U4UIR           equ	746	;# 
  2043   0002EB                     U4ERRIR         equ	747	;# 
  2044   0002EC                     U4ERRIE         equ	748	;# 
  2045   0002ED                     U5RXB           equ	749	;# 
  2046   0002ED                     U5RXBL          equ	749	;# 
  2047   0002EF                     U5TXB           equ	751	;# 
  2048   0002EF                     U5TXBL          equ	751	;# 
  2049   0002F1                     U5P1            equ	753	;# 
  2050   0002F1                     U5P1L           equ	753	;# 
  2051   0002F3                     U5P2            equ	755	;# 
  2052   0002F3                     U5P2L           equ	755	;# 
  2053   0002F5                     U5P3            equ	757	;# 
  2054   0002F5                     U5P3L           equ	757	;# 
  2055   0002F7                     U5CON0          equ	759	;# 
  2056   0002F8                     U5CON1          equ	760	;# 
  2057   0002F9                     U5CON2          equ	761	;# 
  2058   0002FA                     U5BRG           equ	762	;# 
  2059   0002FA                     U5BRGL          equ	762	;# 
  2060   0002FB                     U5BRGH          equ	763	;# 
  2061   0002FC                     U5FIFO          equ	764	;# 
  2062   0002FD                     U5UIR           equ	765	;# 
  2063   0002FE                     U5ERRIR         equ	766	;# 
  2064   0002FF                     U5ERRIE         equ	767	;# 
  2065   000300                     SMT1TMR         equ	768	;# 
  2066   000300                     SMT1TMRL        equ	768	;# 
  2067   000301                     SMT1TMRH        equ	769	;# 
  2068   000302                     SMT1TMRU        equ	770	;# 
  2069   000303                     SMT1CPR         equ	771	;# 
  2070   000303                     SMT1CPRL        equ	771	;# 
  2071   000304                     SMT1CPRH        equ	772	;# 
  2072   000305                     SMT1CPRU        equ	773	;# 
  2073   000306                     SMT1CPW         equ	774	;# 
  2074   000306                     SMT1CPWL        equ	774	;# 
  2075   000307                     SMT1CPWH        equ	775	;# 
  2076   000308                     SMT1CPWU        equ	776	;# 
  2077   000309                     SMT1PR          equ	777	;# 
  2078   000309                     SMT1PRL         equ	777	;# 
  2079   00030A                     SMT1PRH         equ	778	;# 
  2080   00030B                     SMT1PRU         equ	779	;# 
  2081   00030C                     SMT1CON0        equ	780	;# 
  2082   00030D                     SMT1CON1        equ	781	;# 
  2083   00030E                     SMT1STAT        equ	782	;# 
  2084   00030F                     SMT1CLK         equ	783	;# 
  2085   000310                     SMT1SIG         equ	784	;# 
  2086   000311                     SMT1WIN         equ	785	;# 
  2087   000318                     TMR0L           equ	792	;# 
  2088   000318                     TMR0            equ	792	;# 
  2089   000319                     TMR0H           equ	793	;# 
  2090   000319                     PR0             equ	793	;# 
  2091   00031A                     T0CON0          equ	794	;# 
  2092   00031B                     T0CON1          equ	795	;# 
  2093   00031C                     TMR1            equ	796	;# 
  2094   00031C                     TMR1L           equ	796	;# 
  2095   00031D                     TMR1H           equ	797	;# 
  2096   00031E                     T1CON           equ	798	;# 
  2097   00031E                     TMR1CON         equ	798	;# 
  2098   00031F                     T1GCON          equ	799	;# 
  2099   00031F                     TMR1GCON        equ	799	;# 
  2100   000320                     T1GATE          equ	800	;# 
  2101   000320                     TMR1GATE        equ	800	;# 
  2102   000321                     T1CLK           equ	801	;# 
  2103   000321                     TMR1CLK         equ	801	;# 
  2104   000321                     PR1             equ	801	;# 
  2105   000322                     T2TMR           equ	802	;# 
  2106   000322                     TMR2            equ	802	;# 
  2107   000323                     T2PR            equ	803	;# 
  2108   000323                     PR2             equ	803	;# 
  2109   000324                     T2CON           equ	804	;# 
  2110   000325                     T2HLT           equ	805	;# 
  2111   000326                     T2CLKCON        equ	806	;# 
  2112   000326                     T2CLK           equ	806	;# 
  2113   000327                     T2RST           equ	807	;# 
  2114   000328                     TMR3            equ	808	;# 
  2115   000328                     TMR3L           equ	808	;# 
  2116   000329                     TMR3H           equ	809	;# 
  2117   00032A                     T3CON           equ	810	;# 
  2118   00032A                     TMR3CON         equ	810	;# 
  2119   00032B                     T3GCON          equ	811	;# 
  2120   00032B                     TMR3GCON        equ	811	;# 
  2121   00032C                     T3GATE          equ	812	;# 
  2122   00032C                     TMR3GATE        equ	812	;# 
  2123   00032D                     T3CLK           equ	813	;# 
  2124   00032D                     TMR3CLK         equ	813	;# 
  2125   00032D                     PR3             equ	813	;# 
  2126   00032E                     T4TMR           equ	814	;# 
  2127   00032E                     TMR4            equ	814	;# 
  2128   00032F                     T4PR            equ	815	;# 
  2129   00032F                     PR4             equ	815	;# 
  2130   000330                     T4CON           equ	816	;# 
  2131   000331                     T4HLT           equ	817	;# 
  2132   000332                     T4CLKCON        equ	818	;# 
  2133   000332                     T4CLK           equ	818	;# 
  2134   000333                     T4RST           equ	819	;# 
  2135   000334                     TMR5            equ	820	;# 
  2136   000334                     TMR5L           equ	820	;# 
  2137   000335                     TMR5H           equ	821	;# 
  2138   000336                     T5CON           equ	822	;# 
  2139   000336                     TMR5CON         equ	822	;# 
  2140   000337                     T5GCON          equ	823	;# 
  2141   000337                     TMR5GCON        equ	823	;# 
  2142   000338                     T5GATE          equ	824	;# 
  2143   000338                     TMR5GATE        equ	824	;# 
  2144   000339                     T5CLK           equ	825	;# 
  2145   000339                     TMR5CLK         equ	825	;# 
  2146   000339                     PR5             equ	825	;# 
  2147   00033A                     T6TMR           equ	826	;# 
  2148   00033A                     TMR6            equ	826	;# 
  2149   00033B                     T6PR            equ	827	;# 
  2150   00033B                     PR6             equ	827	;# 
  2151   00033C                     T6CON           equ	828	;# 
  2152   00033D                     T6HLT           equ	829	;# 
  2153   00033E                     T6CLKCON        equ	830	;# 
  2154   00033E                     T6CLK           equ	830	;# 
  2155   00033F                     T6RST           equ	831	;# 
  2156   000340                     CCPR1           equ	832	;# 
  2157   000340                     CCPR1L          equ	832	;# 
  2158   000341                     CCPR1H          equ	833	;# 
  2159   000342                     CCP1CON         equ	834	;# 
  2160   000343                     CCP1CAP         equ	835	;# 
  2161   000344                     CCPR2           equ	836	;# 
  2162   000344                     CCPR2L          equ	836	;# 
  2163   000345                     CCPR2H          equ	837	;# 
  2164   000346                     CCP2CON         equ	838	;# 
  2165   000347                     CCP2CAP         equ	839	;# 
  2166   000348                     CCPR3           equ	840	;# 
  2167   000348                     CCPR3L          equ	840	;# 
  2168   000349                     CCPR3H          equ	841	;# 
  2169   00034A                     CCP3CON         equ	842	;# 
  2170   00034B                     CCP3CAP         equ	843	;# 
  2171   00034C                     CCPTMRS0        equ	844	;# 
  2172   00034F                     CRCDATA         equ	847	;# 
  2173   00034F                     CRCDATAL        equ	847	;# 
  2174   000350                     CRCDATAH        equ	848	;# 
  2175   000351                     CRCDATAU        equ	849	;# 
  2176   000352                     CRCDATAT        equ	850	;# 
  2177   000353                     CRCOUT          equ	851	;# 
  2178   000353                     CRCSHFT         equ	851	;# 
  2179   000353                     CRCXOR          equ	851	;# 
  2180   000353                     CRCOUTL         equ	851	;# 
  2181   000353                     CRCSHFTL        equ	851	;# 
  2182   000353                     CRCSHIFTL       equ	851	;# 
  2183   000353                     CRCXORL         equ	851	;# 
  2184   000354                     CRCOUTH         equ	852	;# 
  2185   000354                     CRCSHFTH        equ	852	;# 
  2186   000354                     CRCSHIFTH       equ	852	;# 
  2187   000354                     CRCXORH         equ	852	;# 
  2188   000355                     CRCOUTU         equ	853	;# 
  2189   000355                     CRCSHFTU        equ	853	;# 
  2190   000355                     CRCSHIFTU       equ	853	;# 
  2191   000355                     CRCXORU         equ	853	;# 
  2192   000356                     CRCOUTT         equ	854	;# 
  2193   000356                     CRCSHFTT        equ	854	;# 
  2194   000356                     CRCSHIFTT       equ	854	;# 
  2195   000356                     CRCXORT         equ	854	;# 
  2196   000357                     CRCCON0         equ	855	;# 
  2197   000358                     CRCCON1         equ	856	;# 
  2198   000359                     CRCCON2         equ	857	;# 
  2199   00035A                     SCANLADR        equ	858	;# 
  2200   00035A                     SCANLADRL       equ	858	;# 
  2201   00035B                     SCANLADRH       equ	859	;# 
  2202   00035C                     SCANLADRU       equ	860	;# 
  2203   00035D                     SCANHADR        equ	861	;# 
  2204   00035D                     SCANHADRL       equ	861	;# 
  2205   00035E                     SCANHADRH       equ	862	;# 
  2206   00035F                     SCANHADRU       equ	863	;# 
  2207   000360                     SCANCON0        equ	864	;# 
  2208   000361                     SCANTRIG        equ	865	;# 
  2209   000362                     IPR0            equ	866	;# 
  2210   000363                     IPR1            equ	867	;# 
  2211   000364                     IPR2            equ	868	;# 
  2212   000365                     IPR3            equ	869	;# 
  2213   000366                     IPR4            equ	870	;# 
  2214   000367                     IPR5            equ	871	;# 
  2215   000368                     IPR6            equ	872	;# 
  2216   000369                     IPR7            equ	873	;# 
  2217   00036A                     IPR8            equ	874	;# 
  2218   00036B                     IPR9            equ	875	;# 
  2219   00036C                     IPR10           equ	876	;# 
  2220   00036D                     IPR11           equ	877	;# 
  2221   00036E                     IPR12           equ	878	;# 
  2222   00036F                     IPR13           equ	879	;# 
  2223   000370                     IPR14           equ	880	;# 
  2224   000371                     IPR15           equ	881	;# 
  2225   000373                     STATUS_CSHAD    equ	883	;# 
  2226   000374                     WREG_CSHAD      equ	884	;# 
  2227   000375                     BSR_CSHAD       equ	885	;# 
  2228   000376                     SHADCON         equ	886	;# 
  2229   000377                     STATUS_SHAD     equ	887	;# 
  2230   000378                     WREG_SHAD       equ	888	;# 
  2231   000379                     BSR_SHAD        equ	889	;# 
  2232   00037A                     PCLATH_SHAD     equ	890	;# 
  2233   00037B                     PCLATU_SHAD     equ	891	;# 
  2234   00037C                     FSR0SH          equ	892	;# 
  2235   00037C                     FSR0L_SHAD      equ	892	;# 
  2236   00037D                     FSR0H_SHAD      equ	893	;# 
  2237   00037E                     FSR1SH          equ	894	;# 
  2238   00037E                     FSR1L_SHAD      equ	894	;# 
  2239   00037F                     FSR1H_SHAD      equ	895	;# 
  2240   000380                     FSR2SH          equ	896	;# 
  2241   000380                     FSR2L_SHAD      equ	896	;# 
  2242   000381                     FSR2H_SHAD      equ	897	;# 
  2243   000382                     PRODSH          equ	898	;# 
  2244   000382                     PRODL_SHAD      equ	898	;# 
  2245   000383                     PRODH_SHAD      equ	899	;# 
  2246   000387                     TU16ACON0       equ	903	;# 
  2247   000388                     TU16ACON1       equ	904	;# 
  2248   000389                     TU16AHLT        equ	905	;# 
  2249   00038A                     TU16APS         equ	906	;# 
  2250   00038B                     TU16ATMR        equ	907	;# 
  2251   00038B                     TU16ACR         equ	907	;# 
  2252   00038B                     TU16ATMRL       equ	907	;# 
  2253   00038B                     TU16ACRL        equ	907	;# 
  2254   00038C                     TU16ATMRH       equ	908	;# 
  2255   00038C                     TU16ACRH        equ	908	;# 
  2256   00038D                     TU16APR         equ	909	;# 
  2257   00038D                     TU16APRL        equ	909	;# 
  2258   00038E                     TU16APRH        equ	910	;# 
  2259   00038F                     TU16ACLK        equ	911	;# 
  2260   000390                     TU16AERS        equ	912	;# 
  2261   000393                     TU16BCON0       equ	915	;# 
  2262   000394                     TU16BCON1       equ	916	;# 
  2263   000395                     TU16BHLT        equ	917	;# 
  2264   000396                     TU16BPS         equ	918	;# 
  2265   000397                     TU16BTMR        equ	919	;# 
  2266   000397                     TU16BCR         equ	919	;# 
  2267   000397                     TU16BTMRL       equ	919	;# 
  2268   000397                     TU16BCRL        equ	919	;# 
  2269   000398                     TU16BTMRH       equ	920	;# 
  2270   000398                     TU16BCRH        equ	920	;# 
  2271   000399                     TU16BPR         equ	921	;# 
  2272   000399                     TU16BPRL        equ	921	;# 
  2273   00039A                     TU16BPRH        equ	922	;# 
  2274   00039B                     TU16BCLK        equ	923	;# 
  2275   00039C                     TU16BERS        equ	924	;# 
  2276   0003BB                     TUCHAIN         equ	955	;# 
  2277   0003BC                     CWG1CLK         equ	956	;# 
  2278   0003BC                     CWG1CLKCON      equ	956	;# 
  2279   0003BD                     CWG1ISM         equ	957	;# 
  2280   0003BE                     CWG1DBR         equ	958	;# 
  2281   0003BF                     CWG1DBF         equ	959	;# 
  2282   0003C0                     CWG1CON0        equ	960	;# 
  2283   0003C1                     CWG1CON1        equ	961	;# 
  2284   0003C2                     CWG1AS0         equ	962	;# 
  2285   0003C3                     CWG1AS1         equ	963	;# 
  2286   0003C4                     CWG1STR         equ	964	;# 
  2287   0003C5                     CWG2CLK         equ	965	;# 
  2288   0003C5                     CWG2CLKCON      equ	965	;# 
  2289   0003C6                     CWG2ISM         equ	966	;# 
  2290   0003C7                     CWG2DBR         equ	967	;# 
  2291   0003C8                     CWG2DBF         equ	968	;# 
  2292   0003C9                     CWG2CON0        equ	969	;# 
  2293   0003CA                     CWG2CON1        equ	970	;# 
  2294   0003CB                     CWG2AS0         equ	971	;# 
  2295   0003CC                     CWG2AS1         equ	972	;# 
  2296   0003CD                     CWG2STR         equ	973	;# 
  2297   0003CE                     CWG3CLK         equ	974	;# 
  2298   0003CE                     CWG3CLKCON      equ	974	;# 
  2299   0003CF                     CWG3ISM         equ	975	;# 
  2300   0003D0                     CWG3DBR         equ	976	;# 
  2301   0003D1                     CWG3DBF         equ	977	;# 
  2302   0003D2                     CWG3CON0        equ	978	;# 
  2303   0003D3                     CWG3CON1        equ	979	;# 
  2304   0003D4                     CWG3AS0         equ	980	;# 
  2305   0003D5                     CWG3AS1         equ	981	;# 
  2306   0003D6                     CWG3STR         equ	982	;# 
  2307   0003D7                     FVRCON          equ	983	;# 
  2308   0003D8                     ADCPCON         equ	984	;# 
  2309   0003D8                     ADCP            equ	984	;# 
  2310   0003D9                     ADLTH           equ	985	;# 
  2311   0003D9                     ADLTHL          equ	985	;# 
  2312   0003DA                     ADLTHH          equ	986	;# 
  2313   0003DB                     ADUTH           equ	987	;# 
  2314   0003DB                     ADUTHL          equ	987	;# 
  2315   0003DC                     ADUTHH          equ	988	;# 
  2316   0003DD                     ADERR           equ	989	;# 
  2317   0003DD                     ADERRL          equ	989	;# 
  2318   0003DE                     ADERRH          equ	990	;# 
  2319   0003DF                     ADSTPT          equ	991	;# 
  2320   0003DF                     ADSTPTL         equ	991	;# 
  2321   0003E0                     ADSTPTH         equ	992	;# 
  2322   0003E1                     ADFLTR          equ	993	;# 
  2323   0003E1                     ADFLTRL         equ	993	;# 
  2324   0003E2                     ADFLTRH         equ	994	;# 
  2325   0003E3                     ADACC           equ	995	;# 
  2326   0003E3                     ADACCL          equ	995	;# 
  2327   0003E4                     ADACCH          equ	996	;# 
  2328   0003E5                     ADACCU          equ	997	;# 
  2329   0003E6                     ADCNT           equ	998	;# 
  2330   0003E7                     ADRPT           equ	999	;# 
  2331   0003E8                     ADPREV          equ	1000	;# 
  2332   0003E8                     ADPREVL         equ	1000	;# 
  2333   0003E9                     ADPREVH         equ	1001	;# 
  2334   0003EA                     ADRES           equ	1002	;# 
  2335   0003EA                     ADRESL          equ	1002	;# 
  2336   0003EB                     ADRESH          equ	1003	;# 
  2337   0003EC                     ADPCH           equ	1004	;# 
  2338   0003EE                     ADACQ           equ	1006	;# 
  2339   0003EE                     ADACQL          equ	1006	;# 
  2340   0003EF                     ADACQH          equ	1007	;# 
  2341   0003F0                     ADCAP           equ	1008	;# 
  2342   0003F1                     ADPRE           equ	1009	;# 
  2343   0003F1                     ADPREL          equ	1009	;# 
  2344   0003F2                     ADPREH          equ	1010	;# 
  2345   0003F3                     ADCON0          equ	1011	;# 
  2346   0003F4                     ADCON1          equ	1012	;# 
  2347   0003F5                     ADCON2          equ	1013	;# 
  2348   0003F6                     ADCON3          equ	1014	;# 
  2349   0003F7                     ADSTAT          equ	1015	;# 
  2350   0003F8                     ADREF           equ	1016	;# 
  2351   0003F9                     ADACT           equ	1017	;# 
  2352   0003FA                     ADCLK           equ	1018	;# 
  2353   0003FB                     ADCTX           equ	1019	;# 
  2354   0003FC                     ADCSEL1         equ	1020	;# 
  2355   0003FD                     ADCSEL2         equ	1021	;# 
  2356   0003FE                     ADCSEL3         equ	1022	;# 
  2357   0003FF                     ADCSEL4         equ	1023	;# 
  2358   000400                     ANSELA          equ	1024	;# 
  2359   000401                     WPUA            equ	1025	;# 
  2360   000402                     ODCONA          equ	1026	;# 
  2361   000403                     SLRCONA         equ	1027	;# 
  2362   000404                     INLVLA          equ	1028	;# 
  2363   000405                     IOCAP           equ	1029	;# 
  2364   000406                     IOCAN           equ	1030	;# 
  2365   000407                     IOCAF           equ	1031	;# 
  2366   000408                     ANSELB          equ	1032	;# 
  2367   000409                     WPUB            equ	1033	;# 
  2368   00040A                     ODCONB          equ	1034	;# 
  2369   00040B                     SLRCONB         equ	1035	;# 
  2370   00040C                     INLVLB          equ	1036	;# 
  2371   00040D                     IOCBP           equ	1037	;# 
  2372   00040E                     IOCBN           equ	1038	;# 
  2373   00040F                     IOCBF           equ	1039	;# 
  2374   000410                     ANSELC          equ	1040	;# 
  2375   000411                     WPUC            equ	1041	;# 
  2376   000412                     ODCONC          equ	1042	;# 
  2377   000413                     SLRCONC         equ	1043	;# 
  2378   000414                     INLVLC          equ	1044	;# 
  2379   000415                     IOCCP           equ	1045	;# 
  2380   000416                     IOCCN           equ	1046	;# 
  2381   000417                     IOCCF           equ	1047	;# 
  2382   000421                     WPUE            equ	1057	;# 
  2383   000424                     INLVLE          equ	1060	;# 
  2384   000425                     IOCEP           equ	1061	;# 
  2385   000426                     IOCEN           equ	1062	;# 
  2386   000427                     IOCEF           equ	1063	;# 
  2387   000440                     NCO1ACC         equ	1088	;# 
  2388   000440                     NCO1ACCL        equ	1088	;# 
  2389   000441                     NCO1ACCH        equ	1089	;# 
  2390   000442                     NCO1ACCU        equ	1090	;# 
  2391   000443                     NCO1INC         equ	1091	;# 
  2392   000443                     NCO1INCL        equ	1091	;# 
  2393   000444                     NCO1INCH        equ	1092	;# 
  2394   000445                     NCO1INCU        equ	1093	;# 
  2395   000446                     NCO1CON         equ	1094	;# 
  2396   000447                     NCO1CLK         equ	1095	;# 
  2397   000448                     NCO2ACC         equ	1096	;# 
  2398   000448                     NCO2ACCL        equ	1096	;# 
  2399   000449                     NCO2ACCH        equ	1097	;# 
  2400   00044A                     NCO2ACCU        equ	1098	;# 
  2401   00044B                     NCO2INC         equ	1099	;# 
  2402   00044B                     NCO2INCL        equ	1099	;# 
  2403   00044C                     NCO2INCH        equ	1100	;# 
  2404   00044D                     NCO2INCU        equ	1101	;# 
  2405   00044E                     NCO2CON         equ	1102	;# 
  2406   00044F                     NCO2CLK         equ	1103	;# 
  2407   000450                     NCO3ACC         equ	1104	;# 
  2408   000450                     NCO3ACCL        equ	1104	;# 
  2409   000451                     NCO3ACCH        equ	1105	;# 
  2410   000452                     NCO3ACCU        equ	1106	;# 
  2411   000453                     NCO3INC         equ	1107	;# 
  2412   000453                     NCO3INCL        equ	1107	;# 
  2413   000454                     NCO3INCH        equ	1108	;# 
  2414   000455                     NCO3INCU        equ	1109	;# 
  2415   000456                     NCO3CON         equ	1110	;# 
  2416   000457                     NCO3CLK         equ	1111	;# 
  2417   000458                     FSCMCON         equ	1112	;# 
  2418   000459                     IVTLOCK         equ	1113	;# 
  2419   00045A                     IVTAD           equ	1114	;# 
  2420   00045A                     IVTADL          equ	1114	;# 
  2421   00045B                     IVTADH          equ	1115	;# 
  2422   00045C                     IVTADU          equ	1116	;# 
  2423   00045D                     IVTBASE         equ	1117	;# 
  2424   00045D                     IVTBASEL        equ	1117	;# 
  2425   00045E                     IVTBASEH        equ	1118	;# 
  2426   00045F                     IVTBASEU        equ	1119	;# 
  2427   000460                     PWM1ERS         equ	1120	;# 
  2428   000461                     PWM1CLK         equ	1121	;# 
  2429   000462                     PWM1LDS         equ	1122	;# 
  2430   000463                     PWM1PR          equ	1123	;# 
  2431   000463                     PWM1PRL         equ	1123	;# 
  2432   000464                     PWM1PRH         equ	1124	;# 
  2433   000465                     PWM1CPRE        equ	1125	;# 
  2434   000466                     PWM1PIPOS       equ	1126	;# 
  2435   000467                     PWM1GIR         equ	1127	;# 
  2436   000468                     PWM1GIE         equ	1128	;# 
  2437   000469                     PWM1CON         equ	1129	;# 
  2438   00046A                     PWM1S1CFG       equ	1130	;# 
  2439   00046B                     PWM1S1P1        equ	1131	;# 
  2440   00046B                     PWM1S1P1L       equ	1131	;# 
  2441   00046C                     PWM1S1P1H       equ	1132	;# 
  2442   00046D                     PWM1S1P2        equ	1133	;# 
  2443   00046D                     PWM1S1P2L       equ	1133	;# 
  2444   00046E                     PWM1S1P2H       equ	1134	;# 
  2445   00046F                     PWM2ERS         equ	1135	;# 
  2446   000470                     PWM2CLK         equ	1136	;# 
  2447   000471                     PWM2LDS         equ	1137	;# 
  2448   000472                     PWM2PR          equ	1138	;# 
  2449   000472                     PWM2PRL         equ	1138	;# 
  2450   000473                     PWM2PRH         equ	1139	;# 
  2451   000474                     PWM2CPRE        equ	1140	;# 
  2452   000475                     PWM2PIPOS       equ	1141	;# 
  2453   000476                     PWM2GIR         equ	1142	;# 
  2454   000477                     PWM2GIE         equ	1143	;# 
  2455   000478                     PWM2CON         equ	1144	;# 
  2456   000479                     PWM2S1CFG       equ	1145	;# 
  2457   00047A                     PWM2S1P1        equ	1146	;# 
  2458   00047A                     PWM2S1P1L       equ	1146	;# 
  2459   00047B                     PWM2S1P1H       equ	1147	;# 
  2460   00047C                     PWM2S1P2        equ	1148	;# 
  2461   00047C                     PWM2S1P2L       equ	1148	;# 
  2462   00047D                     PWM2S1P2H       equ	1149	;# 
  2463   00047E                     PWM3ERS         equ	1150	;# 
  2464   00047F                     PWM3CLK         equ	1151	;# 
  2465   000480                     PWM3LDS         equ	1152	;# 
  2466   000481                     PWM3PR          equ	1153	;# 
  2467   000481                     PWM3PRL         equ	1153	;# 
  2468   000482                     PWM3PRH         equ	1154	;# 
  2469   000483                     PWM3CPRE        equ	1155	;# 
  2470   000484                     PWM3PIPOS       equ	1156	;# 
  2471   000485                     PWM3GIR         equ	1157	;# 
  2472   000486                     PWM3GIE         equ	1158	;# 
  2473   000487                     PWM3CON         equ	1159	;# 
  2474   000488                     PWM3S1CFG       equ	1160	;# 
  2475   000489                     PWM3S1P1        equ	1161	;# 
  2476   000489                     PWM3S1P1L       equ	1161	;# 
  2477   00048A                     PWM3S1P1H       equ	1162	;# 
  2478   00048B                     PWM3S1P2        equ	1163	;# 
  2479   00048B                     PWM3S1P2L       equ	1163	;# 
  2480   00048C                     PWM3S1P2H       equ	1164	;# 
  2481   00048D                     PWM4ERS         equ	1165	;# 
  2482   00048E                     PWM4CLK         equ	1166	;# 
  2483   00048F                     PWM4LDS         equ	1167	;# 
  2484   000490                     PWM4PR          equ	1168	;# 
  2485   000490                     PWM4PRL         equ	1168	;# 
  2486   000491                     PWM4PRH         equ	1169	;# 
  2487   000492                     PWM4CPRE        equ	1170	;# 
  2488   000493                     PWM4PIPOS       equ	1171	;# 
  2489   000494                     PWM4GIR         equ	1172	;# 
  2490   000495                     PWM4GIE         equ	1173	;# 
  2491   000496                     PWM4CON         equ	1174	;# 
  2492   000497                     PWM4S1CFG       equ	1175	;# 
  2493   000498                     PWM4S1P1        equ	1176	;# 
  2494   000498                     PWM4S1P1L       equ	1176	;# 
  2495   000499                     PWM4S1P1H       equ	1177	;# 
  2496   00049A                     PWM4S1P2        equ	1178	;# 
  2497   00049A                     PWM4S1P2L       equ	1178	;# 
  2498   00049B                     PWM4S1P2H       equ	1179	;# 
  2499   00049C                     PWMLOAD         equ	1180	;# 
  2500   00049D                     PWMEN           equ	1181	;# 
  2501   00049E                     PIE0            equ	1182	;# 
  2502   00049F                     PIE1            equ	1183	;# 
  2503   0004A0                     PIE2            equ	1184	;# 
  2504   0004A1                     PIE3            equ	1185	;# 
  2505   0004A2                     PIE4            equ	1186	;# 
  2506   0004A3                     PIE5            equ	1187	;# 
  2507   0004A4                     PIE6            equ	1188	;# 
  2508   0004A5                     PIE7            equ	1189	;# 
  2509   0004A6                     PIE8            equ	1190	;# 
  2510   0004A7                     PIE9            equ	1191	;# 
  2511   0004A8                     PIE10           equ	1192	;# 
  2512   0004A9                     PIE11           equ	1193	;# 
  2513   0004AA                     PIE12           equ	1194	;# 
  2514   0004AB                     PIE13           equ	1195	;# 
  2515   0004AC                     PIE14           equ	1196	;# 
  2516   0004AD                     PIE15           equ	1197	;# 
  2517   0004AE                     PIR0            equ	1198	;# 
  2518   0004AF                     PIR1            equ	1199	;# 
  2519   0004B0                     PIR2            equ	1200	;# 
  2520   0004B1                     PIR3            equ	1201	;# 
  2521   0004B2                     PIR4            equ	1202	;# 
  2522   0004B3                     PIR5            equ	1203	;# 
  2523   0004B4                     PIR6            equ	1204	;# 
  2524   0004B5                     PIR7            equ	1205	;# 
  2525   0004B6                     PIR8            equ	1206	;# 
  2526   0004B7                     PIR9            equ	1207	;# 
  2527   0004B8                     PIR10           equ	1208	;# 
  2528   0004B9                     PIR11           equ	1209	;# 
  2529   0004BA                     PIR12           equ	1210	;# 
  2530   0004BB                     PIR13           equ	1211	;# 
  2531   0004BC                     PIR14           equ	1212	;# 
  2532   0004BD                     PIR15           equ	1213	;# 
  2533   0004BE                     LATA            equ	1214	;# 
  2534   0004BF                     LATB            equ	1215	;# 
  2535   0004C0                     LATC            equ	1216	;# 
  2536   0004C6                     TRISA           equ	1222	;# 
  2537   0004C7                     TRISB           equ	1223	;# 
  2538   0004C8                     TRISC           equ	1224	;# 
  2539   0004CA                     TRISE           equ	1226	;# 
  2540   0004CE                     PORTA           equ	1230	;# 
  2541   0004CF                     PORTB           equ	1231	;# 
  2542   0004D0                     PORTC           equ	1232	;# 
  2543   0004D2                     PORTE           equ	1234	;# 
  2544   0004D6                     INTCON0         equ	1238	;# 
  2545   0004D7                     INTCON1         equ	1239	;# 
  2546   0004D8                     STATUS          equ	1240	;# 
  2547   0004D9                     FSR2            equ	1241	;# 
  2548   0004D9                     FSR2L           equ	1241	;# 
  2549   0004DA                     FSR2H           equ	1242	;# 
  2550   0004DB                     PLUSW2          equ	1243	;# 
  2551   0004DC                     PREINC2         equ	1244	;# 
  2552   0004DD                     POSTDEC2        equ	1245	;# 
  2553   0004DE                     POSTINC2        equ	1246	;# 
  2554   0004DF                     INDF2           equ	1247	;# 
  2555   0004E0                     BSR             equ	1248	;# 
  2556   0004E1                     FSR1            equ	1249	;# 
  2557   0004E1                     FSR1L           equ	1249	;# 
  2558   0004E2                     FSR1H           equ	1250	;# 
  2559   0004E3                     PLUSW1          equ	1251	;# 
  2560   0004E4                     PREINC1         equ	1252	;# 
  2561   0004E5                     POSTDEC1        equ	1253	;# 
  2562   0004E6                     POSTINC1        equ	1254	;# 
  2563   0004E7                     INDF1           equ	1255	;# 
  2564   0004E8                     WREG            equ	1256	;# 
  2565   0004E9                     FSR0            equ	1257	;# 
  2566   0004E9                     FSR0L           equ	1257	;# 
  2567   0004EA                     FSR0H           equ	1258	;# 
  2568   0004EB                     PLUSW0          equ	1259	;# 
  2569   0004EC                     PREINC0         equ	1260	;# 
  2570   0004ED                     POSTDEC0        equ	1261	;# 
  2571   0004EE                     POSTINC0        equ	1262	;# 
  2572   0004EF                     INDF0           equ	1263	;# 
  2573   0004F0                     PCON0           equ	1264	;# 
  2574   0004F1                     PCON1           equ	1265	;# 
  2575   0004F2                     CPUDOZE         equ	1266	;# 
  2576   0004F3                     PROD            equ	1267	;# 
  2577   0004F3                     PRODL           equ	1267	;# 
  2578   0004F4                     PRODH           equ	1268	;# 
  2579   0004F5                     TABLAT          equ	1269	;# 
  2580   0004F6                     TBLPTR          equ	1270	;# 
  2581   0004F6                     TBLPTRL         equ	1270	;# 
  2582   0004F7                     TBLPTRH         equ	1271	;# 
  2583   0004F8                     TBLPTRU         equ	1272	;# 
  2584   0004F9                     PCLAT           equ	1273	;# 
  2585   0004F9                     PCL             equ	1273	;# 
  2586   0004FA                     PCLATH          equ	1274	;# 
  2587   0004FB                     PCLATU          equ	1275	;# 
  2588   0004FC                     STKPTR          equ	1276	;# 
  2589   0004FD                     TOS             equ	1277	;# 
  2590   0004FD                     TOSL            equ	1277	;# 
  2591   0004FE                     TOSH            equ	1278	;# 
  2592   0004FF                     TOSU            equ	1279	;# 
  2593   000038                     BOOTREG         equ	56	;# 
  2594   000039                     CLKRCON         equ	57	;# 
  2595   00003A                     CLKRCLK         equ	58	;# 
  2596   000040                     NVMCON0         equ	64	;# 
  2597   000041                     NVMCON1         equ	65	;# 
  2598   000042                     NVMLOCK         equ	66	;# 
  2599   000043                     NVMADR          equ	67	;# 
  2600   000043                     NVMADRL         equ	67	;# 
  2601   000044                     NVMADRH         equ	68	;# 
  2602   000045                     NVMADRU         equ	69	;# 
  2603   000046                     NVMDAT          equ	70	;# 
  2604   000046                     NVMDATL         equ	70	;# 
  2605   000047                     NVMDATH         equ	71	;# 
  2606   000048                     VREGCON         equ	72	;# 
  2607   000049                     BORCON          equ	73	;# 
  2608   00004A                     HLVDCON0        equ	74	;# 
  2609   00004B                     HLVDCON1        equ	75	;# 
  2610   00004C                     ZCDCON          equ	76	;# 
  2611   000060                     PMD0            equ	96	;# 
  2612   000061                     PMD1            equ	97	;# 
  2613   000062                     PMD2            equ	98	;# 
  2614   000063                     PMD3            equ	99	;# 
  2615   000064                     PMD4            equ	100	;# 
  2616   000065                     PMD5            equ	101	;# 
  2617   000066                     PMD6            equ	102	;# 
  2618   000067                     PMD7            equ	103	;# 
  2619   000068                     PMD8            equ	104	;# 
  2620   00006A                     MD1CON0         equ	106	;# 
  2621   00006B                     MD1CON1         equ	107	;# 
  2622   00006C                     MD1SRC          equ	108	;# 
  2623   00006D                     MD1CARL         equ	109	;# 
  2624   00006E                     MD1CARH         equ	110	;# 
  2625   00006F                     CMOUT           equ	111	;# 
  2626   000070                     CM1CON0         equ	112	;# 
  2627   000071                     CM1CON1         equ	113	;# 
  2628   000072                     CM1NCH          equ	114	;# 
  2629   000073                     CM1PCH          equ	115	;# 
  2630   000074                     CM2CON0         equ	116	;# 
  2631   000075                     CM2CON1         equ	117	;# 
  2632   000076                     CM2NCH          equ	118	;# 
  2633   000077                     CM2PCH          equ	119	;# 
  2634   000078                     WDTCON0         equ	120	;# 
  2635   000079                     WDTCON1         equ	121	;# 
  2636   00007A                     WDTPSL          equ	122	;# 
  2637   00007B                     WDTPSH          equ	123	;# 
  2638   00007C                     WDTTMR          equ	124	;# 
  2639   00007D                     DAC1DAT         equ	125	;# 
  2640   00007D                     DAC1DATL        equ	125	;# 
  2641   00007F                     DAC1CON         equ	127	;# 
  2642   000080                     SPI1RXB         equ	128	;# 
  2643   000081                     SPI1TXB         equ	129	;# 
  2644   000082                     SPI1TCNT        equ	130	;# 
  2645   000082                     SPI1TCNTL       equ	130	;# 
  2646   000083                     SPI1TCNTH       equ	131	;# 
  2647   000084                     SPI1CON0        equ	132	;# 
  2648   000085                     SPI1CON1        equ	133	;# 
  2649   000086                     SPI1CON2        equ	134	;# 
  2650   000087                     SPI1STATUS      equ	135	;# 
  2651   000088                     SPI1TWIDTH      equ	136	;# 
  2652   000089                     SPI1BAUD        equ	137	;# 
  2653   00008A                     SPI1INTF        equ	138	;# 
  2654   00008B                     SPI1INTE        equ	139	;# 
  2655   00008C                     SPI1CLK         equ	140	;# 
  2656   00008D                     SPI2RXB         equ	141	;# 
  2657   00008E                     SPI2TXB         equ	142	;# 
  2658   00008F                     SPI2TCNT        equ	143	;# 
  2659   00008F                     SPI2TCNTL       equ	143	;# 
  2660   000090                     SPI2TCNTH       equ	144	;# 
  2661   000091                     SPI2CON0        equ	145	;# 
  2662   000092                     SPI2CON1        equ	146	;# 
  2663   000093                     SPI2CON2        equ	147	;# 
  2664   000094                     SPI2STATUS      equ	148	;# 
  2665   000095                     SPI2TWIDTH      equ	149	;# 
  2666   000096                     SPI2BAUD        equ	150	;# 
  2667   000097                     SPI2INTF        equ	151	;# 
  2668   000098                     SPI2INTE        equ	152	;# 
  2669   000099                     SPI2CLK         equ	153	;# 
  2670   0000AC                     ACTCON          equ	172	;# 
  2671   0000AD                     OSCCON1         equ	173	;# 
  2672   0000AE                     OSCCON2         equ	174	;# 
  2673   0000AF                     OSCCON3         equ	175	;# 
  2674   0000B0                     OSCTUNE         equ	176	;# 
  2675   0000B1                     OSCFRQ          equ	177	;# 
  2676   0000B1                     OSCFREQ         equ	177	;# 
  2677   0000B2                     OSCSTAT         equ	178	;# 
  2678   0000B2                     OSCSTAT1        equ	178	;# 
  2679   0000B3                     OSCEN           equ	179	;# 
  2680   0000B4                     PRLOCK          equ	180	;# 
  2681   0000B5                     SCANPR          equ	181	;# 
  2682   0000B6                     DMA1PR          equ	182	;# 
  2683   0000B7                     DMA2PR          equ	183	;# 
  2684   0000B8                     DMA3PR          equ	184	;# 
  2685   0000B9                     DMA4PR          equ	185	;# 
  2686   0000BA                     DMA5PR          equ	186	;# 
  2687   0000BB                     DMA6PR          equ	187	;# 
  2688   0000BC                     DMA7PR          equ	188	;# 
  2689   0000BD                     DMA8PR          equ	189	;# 
  2690   0000BE                     MAINPR          equ	190	;# 
  2691   0000BF                     ISRPR           equ	191	;# 
  2692   0000D4                     CLCDATA         equ	212	;# 
  2693   0000D5                     CLCSELECT       equ	213	;# 
  2694   0000D6                     CLCnCON         equ	214	;# 
  2695   0000D7                     CLCnPOL         equ	215	;# 
  2696   0000D8                     CLCnSEL0        equ	216	;# 
  2697   0000D9                     CLCnSEL1        equ	217	;# 
  2698   0000DA                     CLCnSEL2        equ	218	;# 
  2699   0000DB                     CLCnSEL3        equ	219	;# 
  2700   0000DC                     CLCnGLS0        equ	220	;# 
  2701   0000DD                     CLCnGLS1        equ	221	;# 
  2702   0000DE                     CLCnGLS2        equ	222	;# 
  2703   0000DF                     CLCnGLS3        equ	223	;# 
  2704   0000E8                     DMASELECT       equ	232	;# 
  2705   0000E9                     DMAnBUF         equ	233	;# 
  2706   0000EA                     DMAnDCNT        equ	234	;# 
  2707   0000EA                     DMAnDCNTL       equ	234	;# 
  2708   0000EB                     DMAnDCNTH       equ	235	;# 
  2709   0000EC                     DMAnDPTR        equ	236	;# 
  2710   0000EC                     DMAnDPTRL       equ	236	;# 
  2711   0000ED                     DMAnDPTRH       equ	237	;# 
  2712   0000EE                     DMAnDSZ         equ	238	;# 
  2713   0000EE                     DMAnDSZL        equ	238	;# 
  2714   0000EF                     DMAnDSZH        equ	239	;# 
  2715   0000F0                     DMAnDSA         equ	240	;# 
  2716   0000F0                     DMAnDSAL        equ	240	;# 
  2717   0000F1                     DMAnDSAH        equ	241	;# 
  2718   0000F2                     DMAnSCNT        equ	242	;# 
  2719   0000F2                     DMAnSCNTL       equ	242	;# 
  2720   0000F3                     DMAnSCNTH       equ	243	;# 
  2721   0000F4                     DMAnSPTR        equ	244	;# 
  2722   0000F4                     DMAnSPTRL       equ	244	;# 
  2723   0000F5                     DMAnSPTRH       equ	245	;# 
  2724   0000F6                     DMAnSPTRU       equ	246	;# 
  2725   0000F7                     DMAnSSZ         equ	247	;# 
  2726   0000F7                     DMAnSSZL        equ	247	;# 
  2727   0000F8                     DMAnSSZH        equ	248	;# 
  2728   0000F9                     DMAnSSA         equ	249	;# 
  2729   0000F9                     DMAnSSAL        equ	249	;# 
  2730   0000FA                     DMAnSSAH        equ	250	;# 
  2731   0000FB                     DMAnSSAU        equ	251	;# 
  2732   0000FC                     DMAnCON0        equ	252	;# 
  2733   0000FD                     DMAnCON1        equ	253	;# 
  2734   0000FE                     DMAnAIRQ        equ	254	;# 
  2735   0000FF                     DMAnSIRQ        equ	255	;# 
  2736   000100                     C1CONL          equ	256	;# 
  2737   000101                     C1CONH          equ	257	;# 
  2738   000102                     C1CONU          equ	258	;# 
  2739   000103                     C1CONT          equ	259	;# 
  2740   000104                     C1NBTCFGL       equ	260	;# 
  2741   000105                     C1NBTCFGH       equ	261	;# 
  2742   000106                     C1NBTCFGU       equ	262	;# 
  2743   000107                     C1NBTCFGT       equ	263	;# 
  2744   000108                     C1DBTCFGL       equ	264	;# 
  2745   000109                     C1DBTCFGH       equ	265	;# 
  2746   00010A                     C1DBTCFGU       equ	266	;# 
  2747   00010B                     C1DBTCFGT       equ	267	;# 
  2748   00010C                     C1TDCL          equ	268	;# 
  2749   00010D                     C1TDCH          equ	269	;# 
  2750   00010E                     C1TDCU          equ	270	;# 
  2751   000110                     C1TBC           equ	272	;# 
  2752   000110                     C1TBCL          equ	272	;# 
  2753   000111                     C1TBCH          equ	273	;# 
  2754   000112                     C1TBCU          equ	274	;# 
  2755   000113                     C1TBCT          equ	275	;# 
  2756   000114                     C1TSCONL        equ	276	;# 
  2757   000115                     C1TSCONH        equ	277	;# 
  2758   000116                     C1TSCONU        equ	278	;# 
  2759   000117                     C1TSCONT        equ	279	;# 
  2760   000118                     C1VECL          equ	280	;# 
  2761   000119                     C1VECH          equ	281	;# 
  2762   00011A                     C1VECU          equ	282	;# 
  2763   00011B                     C1VECT          equ	283	;# 
  2764   00011C                     C1INTL          equ	284	;# 
  2765   00011D                     C1INTH          equ	285	;# 
  2766   00011E                     C1INTU          equ	286	;# 
  2767   00011F                     C1INTT          equ	287	;# 
  2768   000120                     C1RXIF          equ	288	;# 
  2769   000120                     C1RXIFL         equ	288	;# 
  2770   000121                     C1RXIFH         equ	289	;# 
  2771   000122                     C1RXIFU         equ	290	;# 
  2772   000123                     C1RXIFT         equ	291	;# 
  2773   000124                     C1TXIF          equ	292	;# 
  2774   000124                     C1TXIFL         equ	292	;# 
  2775   000125                     C1TXIFH         equ	293	;# 
  2776   000126                     C1TXIFU         equ	294	;# 
  2777   000127                     C1TXIFT         equ	295	;# 
  2778   000128                     C1RXOVIF        equ	296	;# 
  2779   000128                     C1RXOVIFL       equ	296	;# 
  2780   000129                     C1RXOVIFH       equ	297	;# 
  2781   00012A                     C1RXOVIFU       equ	298	;# 
  2782   00012B                     C1RXOVIFT       equ	299	;# 
  2783   00012C                     C1TXATIF        equ	300	;# 
  2784   00012C                     C1TXATIFL       equ	300	;# 
  2785   00012D                     C1TXATIFH       equ	301	;# 
  2786   00012E                     C1TXATIFU       equ	302	;# 
  2787   00012F                     C1TXATIFT       equ	303	;# 
  2788   000130                     C1TXREQ         equ	304	;# 
  2789   000130                     C1TXREQL        equ	304	;# 
  2790   000131                     C1TXREQH        equ	305	;# 
  2791   000132                     C1TXREQU        equ	306	;# 
  2792   000133                     C1TXREQT        equ	307	;# 
  2793   000134                     C1TRECL         equ	308	;# 
  2794   000135                     C1TRECH         equ	309	;# 
  2795   000136                     C1TRECU         equ	310	;# 
  2796   000137                     C1TRECT         equ	311	;# 
  2797   000138                     C1BDIAG0L       equ	312	;# 
  2798   000139                     C1BDIAG0H       equ	313	;# 
  2799   00013C                     C1BDIAG1L       equ	316	;# 
  2800   00013D                     C1BDIAG1H       equ	317	;# 
  2801   00013E                     C1BDIAG1U       equ	318	;# 
  2802   00013F                     C1BDIAG1T       equ	319	;# 
  2803   000140                     C1TEFCONL       equ	320	;# 
  2804   000141                     C1TEFCONH       equ	321	;# 
  2805   000142                     C1TEFCONU       equ	322	;# 
  2806   000143                     C1TEFCONT       equ	323	;# 
  2807   000144                     C1TEFSTAL       equ	324	;# 
  2808   000145                     C1TEFSTAH       equ	325	;# 
  2809   000146                     C1TEFSTAU       equ	326	;# 
  2810   000147                     C1TEFSTAT       equ	327	;# 
  2811   000148                     C1TEFUA         equ	328	;# 
  2812   000148                     C1TEFUAL        equ	328	;# 
  2813   000149                     C1TEFUAH        equ	329	;# 
  2814   00014A                     C1TEFUAU        equ	330	;# 
  2815   00014B                     C1TEFUAT        equ	331	;# 
  2816   00014C                     C1FIFOBA        equ	332	;# 
  2817   00014C                     C1FIFOBAL       equ	332	;# 
  2818   00014D                     C1FIFOBAH       equ	333	;# 
  2819   00014E                     C1FIFOBAU       equ	334	;# 
  2820   00014F                     C1FIFOBAT       equ	335	;# 
  2821   000150                     C1TXQCONL       equ	336	;# 
  2822   000151                     C1TXQCONH       equ	337	;# 
  2823   000152                     C1TXQCONU       equ	338	;# 
  2824   000153                     C1TXQCONT       equ	339	;# 
  2825   000154                     C1TXQSTAL       equ	340	;# 
  2826   000155                     C1TXQSTAH       equ	341	;# 
  2827   000156                     C1TXQSTAU       equ	342	;# 
  2828   000157                     C1TXQSTAT       equ	343	;# 
  2829   000158                     C1TXQUA         equ	344	;# 
  2830   000158                     C1TXQUAL        equ	344	;# 
  2831   000159                     C1TXQUAH        equ	345	;# 
  2832   00015A                     C1TXQUAU        equ	346	;# 
  2833   00015B                     C1TXQUAT        equ	347	;# 
  2834   00015C                     C1FIFOCON1      equ	348	;# 
  2835   00015C                     C1FIFOCON1L     equ	348	;# 
  2836   00015D                     C1FIFOCON1H     equ	349	;# 
  2837   00015E                     C1FIFOCON1U     equ	350	;# 
  2838   00015F                     C1FIFOCON1T     equ	351	;# 
  2839   000160                     C1FIFOSTA1      equ	352	;# 
  2840   000160                     C1FIFOSTA1L     equ	352	;# 
  2841   000161                     C1FIFOSTA1H     equ	353	;# 
  2842   000162                     C1FIFOSTA1U     equ	354	;# 
  2843   000163                     C1FIFOSTA1T     equ	355	;# 
  2844   000164                     C1FIFOUA1       equ	356	;# 
  2845   000164                     C1FIFOUA1L      equ	356	;# 
  2846   000165                     C1FIFOUA1H      equ	357	;# 
  2847   000166                     C1FIFOUA1U      equ	358	;# 
  2848   000167                     C1FIFOUA1T      equ	359	;# 
  2849   000168                     C1FIFOCON2      equ	360	;# 
  2850   000168                     C1FIFOCON2L     equ	360	;# 
  2851   000169                     C1FIFOCON2H     equ	361	;# 
  2852   00016A                     C1FIFOCON2U     equ	362	;# 
  2853   00016B                     C1FIFOCON2T     equ	363	;# 
  2854   00016C                     C1FIFOSTA2      equ	364	;# 
  2855   00016C                     C1FIFOSTA2L     equ	364	;# 
  2856   00016D                     C1FIFOSTA2H     equ	365	;# 
  2857   00016E                     C1FIFOSTA2U     equ	366	;# 
  2858   00016F                     C1FIFOSTA2T     equ	367	;# 
  2859   000170                     C1FIFOUA2       equ	368	;# 
  2860   000170                     C1FIFOUA2L      equ	368	;# 
  2861   000171                     C1FIFOUA2H      equ	369	;# 
  2862   000172                     C1FIFOUA2U      equ	370	;# 
  2863   000173                     C1FIFOUA2T      equ	371	;# 
  2864   000174                     C1FIFOCON3      equ	372	;# 
  2865   000174                     C1FIFOCON3L     equ	372	;# 
  2866   000175                     C1FIFOCON3H     equ	373	;# 
  2867   000176                     C1FIFOCON3U     equ	374	;# 
  2868   000177                     C1FIFOCON3T     equ	375	;# 
  2869   000178                     C1FIFOSTA3      equ	376	;# 
  2870   000178                     C1FIFOSTA3L     equ	376	;# 
  2871   000179                     C1FIFOSTA3H     equ	377	;# 
  2872   00017A                     C1FIFOSTA3U     equ	378	;# 
  2873   00017B                     C1FIFOSTA3T     equ	379	;# 
  2874   00017C                     C1FIFOUA3       equ	380	;# 
  2875   00017C                     C1FIFOUA3L      equ	380	;# 
  2876   00017D                     C1FIFOUA3H      equ	381	;# 
  2877   00017E                     C1FIFOUA3U      equ	382	;# 
  2878   00017F                     C1FIFOUA3T      equ	383	;# 
  2879   000180                     C1FLTCON0L      equ	384	;# 
  2880   000181                     C1FLTCON0H      equ	385	;# 
  2881   000182                     C1FLTCON0U      equ	386	;# 
  2882   000183                     C1FLTCON0T      equ	387	;# 
  2883   000184                     C1FLTCON1L      equ	388	;# 
  2884   000185                     C1FLTCON1H      equ	389	;# 
  2885   000186                     C1FLTCON1U      equ	390	;# 
  2886   000187                     C1FLTCON1T      equ	391	;# 
  2887   000188                     C1FLTCON2L      equ	392	;# 
  2888   000189                     C1FLTCON2H      equ	393	;# 
  2889   00018A                     C1FLTCON2U      equ	394	;# 
  2890   00018B                     C1FLTCON2T      equ	395	;# 
  2891   00018C                     C1FLTOBJ0       equ	396	;# 
  2892   00018C                     C1FLTOBJ0L      equ	396	;# 
  2893   00018D                     C1FLTOBJ0H      equ	397	;# 
  2894   00018E                     C1FLTOBJ0U      equ	398	;# 
  2895   00018F                     C1FLTOBJ0T      equ	399	;# 
  2896   000190                     C1MASK0         equ	400	;# 
  2897   000190                     C1MASK0L        equ	400	;# 
  2898   000191                     C1MASK0H        equ	401	;# 
  2899   000192                     C1MASK0U        equ	402	;# 
  2900   000193                     C1MASK0T        equ	403	;# 
  2901   000194                     C1FLTOBJ1       equ	404	;# 
  2902   000194                     C1FLTOBJ1L      equ	404	;# 
  2903   000195                     C1FLTOBJ1H      equ	405	;# 
  2904   000196                     C1FLTOBJ1U      equ	406	;# 
  2905   000197                     C1FLTOBJ1T      equ	407	;# 
  2906   000198                     C1MASK1         equ	408	;# 
  2907   000198                     C1MASK1L        equ	408	;# 
  2908   000199                     C1MASK1H        equ	409	;# 
  2909   00019A                     C1MASK1U        equ	410	;# 
  2910   00019B                     C1MASK1T        equ	411	;# 
  2911   00019C                     C1FLTOBJ2       equ	412	;# 
  2912   00019C                     C1FLTOBJ2L      equ	412	;# 
  2913   00019D                     C1FLTOBJ2H      equ	413	;# 
  2914   00019E                     C1FLTOBJ2U      equ	414	;# 
  2915   00019F                     C1FLTOBJ2T      equ	415	;# 
  2916   0001A0                     C1MASK2         equ	416	;# 
  2917   0001A0                     C1MASK2L        equ	416	;# 
  2918   0001A1                     C1MASK2H        equ	417	;# 
  2919   0001A2                     C1MASK2U        equ	418	;# 
  2920   0001A3                     C1MASK2T        equ	419	;# 
  2921   0001A4                     C1FLTOBJ3       equ	420	;# 
  2922   0001A4                     C1FLTOBJ3L      equ	420	;# 
  2923   0001A5                     C1FLTOBJ3H      equ	421	;# 
  2924   0001A6                     C1FLTOBJ3U      equ	422	;# 
  2925   0001A7                     C1FLTOBJ3T      equ	423	;# 
  2926   0001A8                     C1MASK3         equ	424	;# 
  2927   0001A8                     C1MASK3L        equ	424	;# 
  2928   0001A9                     C1MASK3H        equ	425	;# 
  2929   0001AA                     C1MASK3U        equ	426	;# 
  2930   0001AB                     C1MASK3T        equ	427	;# 
  2931   0001AC                     C1FLTOBJ4       equ	428	;# 
  2932   0001AC                     C1FLTOBJ4L      equ	428	;# 
  2933   0001AD                     C1FLTOBJ4H      equ	429	;# 
  2934   0001AE                     C1FLTOBJ4U      equ	430	;# 
  2935   0001AF                     C1FLTOBJ4T      equ	431	;# 
  2936   0001B0                     C1MASK4         equ	432	;# 
  2937   0001B0                     C1MASK4L        equ	432	;# 
  2938   0001B1                     C1MASK4H        equ	433	;# 
  2939   0001B2                     C1MASK4U        equ	434	;# 
  2940   0001B3                     C1MASK4T        equ	435	;# 
  2941   0001B4                     C1FLTOBJ5       equ	436	;# 
  2942   0001B4                     C1FLTOBJ5L      equ	436	;# 
  2943   0001B5                     C1FLTOBJ5H      equ	437	;# 
  2944   0001B6                     C1FLTOBJ5U      equ	438	;# 
  2945   0001B7                     C1FLTOBJ5T      equ	439	;# 
  2946   0001B8                     C1MASK5         equ	440	;# 
  2947   0001B8                     C1MASK5L        equ	440	;# 
  2948   0001B9                     C1MASK5H        equ	441	;# 
  2949   0001BA                     C1MASK5U        equ	442	;# 
  2950   0001BB                     C1MASK5T        equ	443	;# 
  2951   0001BC                     C1FLTOBJ6       equ	444	;# 
  2952   0001BC                     C1FLTOBJ6L      equ	444	;# 
  2953   0001BD                     C1FLTOBJ6H      equ	445	;# 
  2954   0001BE                     C1FLTOBJ6U      equ	446	;# 
  2955   0001BF                     C1FLTOBJ6T      equ	447	;# 
  2956   0001C0                     C1MASK6         equ	448	;# 
  2957   0001C0                     C1MASK6L        equ	448	;# 
  2958   0001C1                     C1MASK6H        equ	449	;# 
  2959   0001C2                     C1MASK6U        equ	450	;# 
  2960   0001C3                     C1MASK6T        equ	451	;# 
  2961   0001C4                     C1FLTOBJ7       equ	452	;# 
  2962   0001C4                     C1FLTOBJ7L      equ	452	;# 
  2963   0001C5                     C1FLTOBJ7H      equ	453	;# 
  2964   0001C6                     C1FLTOBJ7U      equ	454	;# 
  2965   0001C7                     C1FLTOBJ7T      equ	455	;# 
  2966   0001C8                     C1MASK7         equ	456	;# 
  2967   0001C8                     C1MASK7L        equ	456	;# 
  2968   0001C9                     C1MASK7H        equ	457	;# 
  2969   0001CA                     C1MASK7U        equ	458	;# 
  2970   0001CB                     C1MASK7T        equ	459	;# 
  2971   0001CC                     C1FLTOBJ8       equ	460	;# 
  2972   0001CC                     C1FLTOBJ8L      equ	460	;# 
  2973   0001CD                     C1FLTOBJ8H      equ	461	;# 
  2974   0001CE                     C1FLTOBJ8U      equ	462	;# 
  2975   0001CF                     C1FLTOBJ8T      equ	463	;# 
  2976   0001D0                     C1MASK8         equ	464	;# 
  2977   0001D0                     C1MASK8L        equ	464	;# 
  2978   0001D1                     C1MASK8H        equ	465	;# 
  2979   0001D2                     C1MASK8U        equ	466	;# 
  2980   0001D3                     C1MASK8T        equ	467	;# 
  2981   0001D4                     C1FLTOBJ9       equ	468	;# 
  2982   0001D4                     C1FLTOBJ9L      equ	468	;# 
  2983   0001D5                     C1FLTOBJ9H      equ	469	;# 
  2984   0001D6                     C1FLTOBJ9U      equ	470	;# 
  2985   0001D7                     C1FLTOBJ9T      equ	471	;# 
  2986   0001D8                     C1MASK9         equ	472	;# 
  2987   0001D8                     C1MASK9L        equ	472	;# 
  2988   0001D9                     C1MASK9H        equ	473	;# 
  2989   0001DA                     C1MASK9U        equ	474	;# 
  2990   0001DB                     C1MASK9T        equ	475	;# 
  2991   0001DC                     C1FLTOBJ10      equ	476	;# 
  2992   0001DC                     C1FLTOBJ10L     equ	476	;# 
  2993   0001DD                     C1FLTOBJ10H     equ	477	;# 
  2994   0001DE                     C1FLTOBJ10U     equ	478	;# 
  2995   0001DF                     C1FLTOBJ10T     equ	479	;# 
  2996   0001E0                     C1MASK10        equ	480	;# 
  2997   0001E0                     C1MASK10L       equ	480	;# 
  2998   0001E1                     C1MASK10H       equ	481	;# 
  2999   0001E2                     C1MASK10U       equ	482	;# 
  3000   0001E3                     C1MASK10T       equ	483	;# 
  3001   0001E4                     C1FLTOBJ11      equ	484	;# 
  3002   0001E4                     C1FLTOBJ11L     equ	484	;# 
  3003   0001E5                     C1FLTOBJ11H     equ	485	;# 
  3004   0001E6                     C1FLTOBJ11U     equ	486	;# 
  3005   0001E7                     C1FLTOBJ11T     equ	487	;# 
  3006   0001E8                     C1MASK11        equ	488	;# 
  3007   0001E8                     C1MASK11L       equ	488	;# 
  3008   0001E9                     C1MASK11H       equ	489	;# 
  3009   0001EA                     C1MASK11U       equ	490	;# 
  3010   0001EB                     C1MASK11T       equ	491	;# 
  3011   000200                     PPSLOCK         equ	512	;# 
  3012   000201                     RA0PPS          equ	513	;# 
  3013   000202                     RA1PPS          equ	514	;# 
  3014   000203                     RA2PPS          equ	515	;# 
  3015   000204                     RA3PPS          equ	516	;# 
  3016   000205                     RA4PPS          equ	517	;# 
  3017   000206                     RA5PPS          equ	518	;# 
  3018   000207                     RA6PPS          equ	519	;# 
  3019   000208                     RA7PPS          equ	520	;# 
  3020   000209                     RB0PPS          equ	521	;# 
  3021   00020A                     RB1PPS          equ	522	;# 
  3022   00020B                     RB2PPS          equ	523	;# 
  3023   00020C                     RB3PPS          equ	524	;# 
  3024   00020D                     RB4PPS          equ	525	;# 
  3025   00020E                     RB5PPS          equ	526	;# 
  3026   00020F                     RB6PPS          equ	527	;# 
  3027   000210                     RB7PPS          equ	528	;# 
  3028   000211                     RC0PPS          equ	529	;# 
  3029   000212                     RC1PPS          equ	530	;# 
  3030   000213                     RC2PPS          equ	531	;# 
  3031   000214                     RC3PPS          equ	532	;# 
  3032   000215                     RC4PPS          equ	533	;# 
  3033   000216                     RC5PPS          equ	534	;# 
  3034   000217                     RC6PPS          equ	535	;# 
  3035   000218                     RC7PPS          equ	536	;# 
  3036   00023D                     CANRXPPS        equ	573	;# 
  3037   00023E                     INT0PPS         equ	574	;# 
  3038   00023F                     INT1PPS         equ	575	;# 
  3039   000240                     INT2PPS         equ	576	;# 
  3040   000241                     T0CKIPPS        equ	577	;# 
  3041   000242                     T1CKIPPS        equ	578	;# 
  3042   000243                     T1GPPS          equ	579	;# 
  3043   000244                     T3CKIPPS        equ	580	;# 
  3044   000245                     T3GPPS          equ	581	;# 
  3045   000246                     T5CKIPPS        equ	582	;# 
  3046   000247                     T5GPPS          equ	583	;# 
  3047   000248                     T2INPPS         equ	584	;# 
  3048   000249                     T4INPPS         equ	585	;# 
  3049   00024A                     T6INPPS         equ	586	;# 
  3050   00024B                     TUIN0PPS        equ	587	;# 
  3051   00024C                     TUIN1PPS        equ	588	;# 
  3052   00024F                     CCP1PPS         equ	591	;# 
  3053   000250                     CCP2PPS         equ	592	;# 
  3054   000251                     CCP3PPS         equ	593	;# 
  3055   000253                     PWM1ERSPPS      equ	595	;# 
  3056   000254                     PWM2ERSPPS      equ	596	;# 
  3057   000255                     PWM3ERSPPS      equ	597	;# 
  3058   000256                     PWM4ERSPPS      equ	598	;# 
  3059   000257                     PWMIN0PPS       equ	599	;# 
  3060   000258                     PWMIN1PPS       equ	600	;# 
  3061   000259                     SMT1WINPPS      equ	601	;# 
  3062   00025A                     SMT1SIGPPS      equ	602	;# 
  3063   00025B                     CWG1PPS         equ	603	;# 
  3064   00025B                     CWG1INPPS       equ	603	;# 
  3065   00025C                     CWG2PPS         equ	604	;# 
  3066   00025C                     CWG2INPPS       equ	604	;# 
  3067   00025D                     CWG3PPS         equ	605	;# 
  3068   00025D                     CWG3INPPS       equ	605	;# 
  3069   00025E                     MD1CARLPPS      equ	606	;# 
  3070   00025E                     MDCARLPPS       equ	606	;# 
  3071   00025F                     MD1CARHPPS      equ	607	;# 
  3072   00025F                     MDCARHPPS       equ	607	;# 
  3073   000260                     MD1SRCPPS       equ	608	;# 
  3074   000260                     MDSRCPPS        equ	608	;# 
  3075   000261                     CLCIN0PPS       equ	609	;# 
  3076   000262                     CLCIN1PPS       equ	610	;# 
  3077   000263                     CLCIN2PPS       equ	611	;# 
  3078   000264                     CLCIN3PPS       equ	612	;# 
  3079   000265                     CLCIN4PPS       equ	613	;# 
  3080   000266                     CLCIN5PPS       equ	614	;# 
  3081   000267                     CLCIN6PPS       equ	615	;# 
  3082   000268                     CLCIN7PPS       equ	616	;# 
  3083   000269                     ADACTPPS        equ	617	;# 
  3084   00026A                     SPI1SCKPPS      equ	618	;# 
  3085   00026B                     SPI1SDIPPS      equ	619	;# 
  3086   00026C                     SPI1SSPPS       equ	620	;# 
  3087   00026D                     SPI2SCKPPS      equ	621	;# 
  3088   00026E                     SPI2SDIPPS      equ	622	;# 
  3089   00026F                     SPI2SSPPS       equ	623	;# 
  3090   000270                     I2C1SDAPPS      equ	624	;# 
  3091   000271                     I2C1SCLPPS      equ	625	;# 
  3092   000272                     U1RXPPS         equ	626	;# 
  3093   000273                     U1CTSPPS        equ	627	;# 
  3094   000274                     U2RXPPS         equ	628	;# 
  3095   000275                     U2CTSPPS        equ	629	;# 
  3096   000276                     U3RXPPS         equ	630	;# 
  3097   000277                     U3CTSPPS        equ	631	;# 
  3098   000278                     U4RXPPS         equ	632	;# 
  3099   000279                     U4CTSPPS        equ	633	;# 
  3100   00027A                     U5RXPPS         equ	634	;# 
  3101   00027B                     U5CTSPPS        equ	635	;# 
  3102   000286                     RC4I2C          equ	646	;# 
  3103   000287                     RC3I2C          equ	647	;# 
  3104   000288                     RB2I2C          equ	648	;# 
  3105   000289                     RB1I2C          equ	649	;# 
  3106   00028A                     I2C1RXB         equ	650	;# 
  3107   00028B                     I2C1TXB         equ	651	;# 
  3108   00028C                     I2C1CNTL        equ	652	;# 
  3109   00028D                     I2C1CNTH        equ	653	;# 
  3110   00028E                     I2C1ADB0        equ	654	;# 
  3111   00028F                     I2C1ADB1        equ	655	;# 
  3112   000290                     I2C1ADR0        equ	656	;# 
  3113   000291                     I2C1ADR1        equ	657	;# 
  3114   000292                     I2C1ADR2        equ	658	;# 
  3115   000293                     I2C1ADR3        equ	659	;# 
  3116   000294                     I2C1CON0        equ	660	;# 
  3117   000295                     I2C1CON1        equ	661	;# 
  3118   000296                     I2C1CON2        equ	662	;# 
  3119   000297                     I2C1ERR         equ	663	;# 
  3120   000298                     I2C1STAT0       equ	664	;# 
  3121   000299                     I2C1STAT1       equ	665	;# 
  3122   00029A                     I2C1PIR         equ	666	;# 
  3123   00029B                     I2C1PIE         equ	667	;# 
  3124   00029C                     I2C1BTO         equ	668	;# 
  3125   00029D                     I2C1BAUD        equ	669	;# 
  3126   00029E                     I2C1CLK         equ	670	;# 
  3127   00029F                     I2C1BTOC        equ	671	;# 
  3128   0002A1                     U1RXB           equ	673	;# 
  3129   0002A1                     U1RXBL          equ	673	;# 
  3130   0002A2                     U1RXCHK         equ	674	;# 
  3131   0002A3                     U1TXB           equ	675	;# 
  3132   0002A3                     U1TXBL          equ	675	;# 
  3133   0002A4                     U1TXCHK         equ	676	;# 
  3134   0002A5                     U1P1            equ	677	;# 
  3135   0002A5                     U1P1L           equ	677	;# 
  3136   0002A6                     U1P1H           equ	678	;# 
  3137   0002A7                     U1P2            equ	679	;# 
  3138   0002A7                     U1P2L           equ	679	;# 
  3139   0002A8                     U1P2H           equ	680	;# 
  3140   0002A9                     U1P3            equ	681	;# 
  3141   0002A9                     U1P3L           equ	681	;# 
  3142   0002AA                     U1P3H           equ	682	;# 
  3143   0002AB                     U1CON0          equ	683	;# 
  3144   0002AC                     U1CON1          equ	684	;# 
  3145   0002AD                     U1CON2          equ	685	;# 
  3146   0002AE                     U1BRG           equ	686	;# 
  3147   0002AE                     U1BRGL          equ	686	;# 
  3148   0002AF                     U1BRGH          equ	687	;# 
  3149   0002B0                     U1FIFO          equ	688	;# 
  3150   0002B1                     U1UIR           equ	689	;# 
  3151   0002B2                     U1ERRIR         equ	690	;# 
  3152   0002B3                     U1ERRIE         equ	691	;# 
  3153   0002B4                     U2RXB           equ	692	;# 
  3154   0002B4                     U2RXBL          equ	692	;# 
  3155   0002B5                     U2RXCHK         equ	693	;# 
  3156   0002B6                     U2TXB           equ	694	;# 
  3157   0002B6                     U2TXBL          equ	694	;# 
  3158   0002B7                     U2TXCHK         equ	695	;# 
  3159   0002B8                     U2P1            equ	696	;# 
  3160   0002B8                     U2P1L           equ	696	;# 
  3161   0002B9                     U2P1H           equ	697	;# 
  3162   0002BA                     U2P2            equ	698	;# 
  3163   0002BA                     U2P2L           equ	698	;# 
  3164   0002BB                     U2P2H           equ	699	;# 
  3165   0002BC                     U2P3            equ	700	;# 
  3166   0002BC                     U2P3L           equ	700	;# 
  3167   0002BD                     U2P3H           equ	701	;# 
  3168   0002BE                     U2CON0          equ	702	;# 
  3169   0002BF                     U2CON1          equ	703	;# 
  3170   0002C0                     U2CON2          equ	704	;# 
  3171   0002C1                     U2BRG           equ	705	;# 
  3172   0002C1                     U2BRGL          equ	705	;# 
  3173   0002C2                     U2BRGH          equ	706	;# 
  3174   0002C3                     U2FIFO          equ	707	;# 
  3175   0002C4                     U2UIR           equ	708	;# 
  3176   0002C5                     U2ERRIR         equ	709	;# 
  3177   0002C6                     U2ERRIE         equ	710	;# 
  3178   0002C7                     U3RXB           equ	711	;# 
  3179   0002C7                     U3RXBL          equ	711	;# 
  3180   0002C9                     U3TXB           equ	713	;# 
  3181   0002C9                     U3TXBL          equ	713	;# 
  3182   0002CB                     U3P1            equ	715	;# 
  3183   0002CB                     U3P1L           equ	715	;# 
  3184   0002CD                     U3P2            equ	717	;# 
  3185   0002CD                     U3P2L           equ	717	;# 
  3186   0002CF                     U3P3            equ	719	;# 
  3187   0002CF                     U3P3L           equ	719	;# 
  3188   0002D1                     U3CON0          equ	721	;# 
  3189   0002D2                     U3CON1          equ	722	;# 
  3190   0002D3                     U3CON2          equ	723	;# 
  3191   0002D4                     U3BRG           equ	724	;# 
  3192   0002D4                     U3BRGL          equ	724	;# 
  3193   0002D5                     U3BRGH          equ	725	;# 
  3194   0002D6                     U3FIFO          equ	726	;# 
  3195   0002D7                     U3UIR           equ	727	;# 
  3196   0002D8                     U3ERRIR         equ	728	;# 
  3197   0002D9                     U3ERRIE         equ	729	;# 
  3198   0002DA                     U4RXB           equ	730	;# 
  3199   0002DA                     U4RXBL          equ	730	;# 
  3200   0002DC                     U4TXB           equ	732	;# 
  3201   0002DC                     U4TXBL          equ	732	;# 
  3202   0002DE                     U4P1            equ	734	;# 
  3203   0002DE                     U4P1L           equ	734	;# 
  3204   0002E0                     U4P2            equ	736	;# 
  3205   0002E0                     U4P2L           equ	736	;# 
  3206   0002E2                     U4P3            equ	738	;# 
  3207   0002E2                     U4P3L           equ	738	;# 
  3208   0002E4                     U4CON0          equ	740	;# 
  3209   0002E5                     U4CON1          equ	741	;# 
  3210   0002E6                     U4CON2          equ	742	;# 
  3211   0002E7                     U4BRG           equ	743	;# 
  3212   0002E7                     U4BRGL          equ	743	;# 
  3213   0002E8                     U4BRGH          equ	744	;# 
  3214   0002E9                     U4FIFO          equ	745	;# 
  3215   0002EA                     U4UIR           equ	746	;# 
  3216   0002EB                     U4ERRIR         equ	747	;# 
  3217   0002EC                     U4ERRIE         equ	748	;# 
  3218   0002ED                     U5RXB           equ	749	;# 
  3219   0002ED                     U5RXBL          equ	749	;# 
  3220   0002EF                     U5TXB           equ	751	;# 
  3221   0002EF                     U5TXBL          equ	751	;# 
  3222   0002F1                     U5P1            equ	753	;# 
  3223   0002F1                     U5P1L           equ	753	;# 
  3224   0002F3                     U5P2            equ	755	;# 
  3225   0002F3                     U5P2L           equ	755	;# 
  3226   0002F5                     U5P3            equ	757	;# 
  3227   0002F5                     U5P3L           equ	757	;# 
  3228   0002F7                     U5CON0          equ	759	;# 
  3229   0002F8                     U5CON1          equ	760	;# 
  3230   0002F9                     U5CON2          equ	761	;# 
  3231   0002FA                     U5BRG           equ	762	;# 
  3232   0002FA                     U5BRGL          equ	762	;# 
  3233   0002FB                     U5BRGH          equ	763	;# 
  3234   0002FC                     U5FIFO          equ	764	;# 
  3235   0002FD                     U5UIR           equ	765	;# 
  3236   0002FE                     U5ERRIR         equ	766	;# 
  3237   0002FF                     U5ERRIE         equ	767	;# 
  3238   000300                     SMT1TMR         equ	768	;# 
  3239   000300                     SMT1TMRL        equ	768	;# 
  3240   000301                     SMT1TMRH        equ	769	;# 
  3241   000302                     SMT1TMRU        equ	770	;# 
  3242   000303                     SMT1CPR         equ	771	;# 
  3243   000303                     SMT1CPRL        equ	771	;# 
  3244   000304                     SMT1CPRH        equ	772	;# 
  3245   000305                     SMT1CPRU        equ	773	;# 
  3246   000306                     SMT1CPW         equ	774	;# 
  3247   000306                     SMT1CPWL        equ	774	;# 
  3248   000307                     SMT1CPWH        equ	775	;# 
  3249   000308                     SMT1CPWU        equ	776	;# 
  3250   000309                     SMT1PR          equ	777	;# 
  3251   000309                     SMT1PRL         equ	777	;# 
  3252   00030A                     SMT1PRH         equ	778	;# 
  3253   00030B                     SMT1PRU         equ	779	;# 
  3254   00030C                     SMT1CON0        equ	780	;# 
  3255   00030D                     SMT1CON1        equ	781	;# 
  3256   00030E                     SMT1STAT        equ	782	;# 
  3257   00030F                     SMT1CLK         equ	783	;# 
  3258   000310                     SMT1SIG         equ	784	;# 
  3259   000311                     SMT1WIN         equ	785	;# 
  3260   000318                     TMR0L           equ	792	;# 
  3261   000318                     TMR0            equ	792	;# 
  3262   000319                     TMR0H           equ	793	;# 
  3263   000319                     PR0             equ	793	;# 
  3264   00031A                     T0CON0          equ	794	;# 
  3265   00031B                     T0CON1          equ	795	;# 
  3266   00031C                     TMR1            equ	796	;# 
  3267   00031C                     TMR1L           equ	796	;# 
  3268   00031D                     TMR1H           equ	797	;# 
  3269   00031E                     T1CON           equ	798	;# 
  3270   00031E                     TMR1CON         equ	798	;# 
  3271   00031F                     T1GCON          equ	799	;# 
  3272   00031F                     TMR1GCON        equ	799	;# 
  3273   000320                     T1GATE          equ	800	;# 
  3274   000320                     TMR1GATE        equ	800	;# 
  3275   000321                     T1CLK           equ	801	;# 
  3276   000321                     TMR1CLK         equ	801	;# 
  3277   000321                     PR1             equ	801	;# 
  3278   000322                     T2TMR           equ	802	;# 
  3279   000322                     TMR2            equ	802	;# 
  3280   000323                     T2PR            equ	803	;# 
  3281   000323                     PR2             equ	803	;# 
  3282   000324                     T2CON           equ	804	;# 
  3283   000325                     T2HLT           equ	805	;# 
  3284   000326                     T2CLKCON        equ	806	;# 
  3285   000326                     T2CLK           equ	806	;# 
  3286   000327                     T2RST           equ	807	;# 
  3287   000328                     TMR3            equ	808	;# 
  3288   000328                     TMR3L           equ	808	;# 
  3289   000329                     TMR3H           equ	809	;# 
  3290   00032A                     T3CON           equ	810	;# 
  3291   00032A                     TMR3CON         equ	810	;# 
  3292   00032B                     T3GCON          equ	811	;# 
  3293   00032B                     TMR3GCON        equ	811	;# 
  3294   00032C                     T3GATE          equ	812	;# 
  3295   00032C                     TMR3GATE        equ	812	;# 
  3296   00032D                     T3CLK           equ	813	;# 
  3297   00032D                     TMR3CLK         equ	813	;# 
  3298   00032D                     PR3             equ	813	;# 
  3299   00032E                     T4TMR           equ	814	;# 
  3300   00032E                     TMR4            equ	814	;# 
  3301   00032F                     T4PR            equ	815	;# 
  3302   00032F                     PR4             equ	815	;# 
  3303   000330                     T4CON           equ	816	;# 
  3304   000331                     T4HLT           equ	817	;# 
  3305   000332                     T4CLKCON        equ	818	;# 
  3306   000332                     T4CLK           equ	818	;# 
  3307   000333                     T4RST           equ	819	;# 
  3308   000334                     TMR5            equ	820	;# 
  3309   000334                     TMR5L           equ	820	;# 
  3310   000335                     TMR5H           equ	821	;# 
  3311   000336                     T5CON           equ	822	;# 
  3312   000336                     TMR5CON         equ	822	;# 
  3313   000337                     T5GCON          equ	823	;# 
  3314   000337                     TMR5GCON        equ	823	;# 
  3315   000338                     T5GATE          equ	824	;# 
  3316   000338                     TMR5GATE        equ	824	;# 
  3317   000339                     T5CLK           equ	825	;# 
  3318   000339                     TMR5CLK         equ	825	;# 
  3319   000339                     PR5             equ	825	;# 
  3320   00033A                     T6TMR           equ	826	;# 
  3321   00033A                     TMR6            equ	826	;# 
  3322   00033B                     T6PR            equ	827	;# 
  3323   00033B                     PR6             equ	827	;# 
  3324   00033C                     T6CON           equ	828	;# 
  3325   00033D                     T6HLT           equ	829	;# 
  3326   00033E                     T6CLKCON        equ	830	;# 
  3327   00033E                     T6CLK           equ	830	;# 
  3328   00033F                     T6RST           equ	831	;# 
  3329   000340                     CCPR1           equ	832	;# 
  3330   000340                     CCPR1L          equ	832	;# 
  3331   000341                     CCPR1H          equ	833	;# 
  3332   000342                     CCP1CON         equ	834	;# 
  3333   000343                     CCP1CAP         equ	835	;# 
  3334   000344                     CCPR2           equ	836	;# 
  3335   000344                     CCPR2L          equ	836	;# 
  3336   000345                     CCPR2H          equ	837	;# 
  3337   000346                     CCP2CON         equ	838	;# 
  3338   000347                     CCP2CAP         equ	839	;# 
  3339   000348                     CCPR3           equ	840	;# 
  3340   000348                     CCPR3L          equ	840	;# 
  3341   000349                     CCPR3H          equ	841	;# 
  3342   00034A                     CCP3CON         equ	842	;# 
  3343   00034B                     CCP3CAP         equ	843	;# 
  3344   00034C                     CCPTMRS0        equ	844	;# 
  3345   00034F                     CRCDATA         equ	847	;# 
  3346   00034F                     CRCDATAL        equ	847	;# 
  3347   000350                     CRCDATAH        equ	848	;# 
  3348   000351                     CRCDATAU        equ	849	;# 
  3349   000352                     CRCDATAT        equ	850	;# 
  3350   000353                     CRCOUT          equ	851	;# 
  3351   000353                     CRCSHFT         equ	851	;# 
  3352   000353                     CRCXOR          equ	851	;# 
  3353   000353                     CRCOUTL         equ	851	;# 
  3354   000353                     CRCSHFTL        equ	851	;# 
  3355   000353                     CRCSHIFTL       equ	851	;# 
  3356   000353                     CRCXORL         equ	851	;# 
  3357   000354                     CRCOUTH         equ	852	;# 
  3358   000354                     CRCSHFTH        equ	852	;# 
  3359   000354                     CRCSHIFTH       equ	852	;# 
  3360   000354                     CRCXORH         equ	852	;# 
  3361   000355                     CRCOUTU         equ	853	;# 
  3362   000355                     CRCSHFTU        equ	853	;# 
  3363   000355                     CRCSHIFTU       equ	853	;# 
  3364   000355                     CRCXORU         equ	853	;# 
  3365   000356                     CRCOUTT         equ	854	;# 
  3366   000356                     CRCSHFTT        equ	854	;# 
  3367   000356                     CRCSHIFTT       equ	854	;# 
  3368   000356                     CRCXORT         equ	854	;# 
  3369   000357                     CRCCON0         equ	855	;# 
  3370   000358                     CRCCON1         equ	856	;# 
  3371   000359                     CRCCON2         equ	857	;# 
  3372   00035A                     SCANLADR        equ	858	;# 
  3373   00035A                     SCANLADRL       equ	858	;# 
  3374   00035B                     SCANLADRH       equ	859	;# 
  3375   00035C                     SCANLADRU       equ	860	;# 
  3376   00035D                     SCANHADR        equ	861	;# 
  3377   00035D                     SCANHADRL       equ	861	;# 
  3378   00035E                     SCANHADRH       equ	862	;# 
  3379   00035F                     SCANHADRU       equ	863	;# 
  3380   000360                     SCANCON0        equ	864	;# 
  3381   000361                     SCANTRIG        equ	865	;# 
  3382   000362                     IPR0            equ	866	;# 
  3383   000363                     IPR1            equ	867	;# 
  3384   000364                     IPR2            equ	868	;# 
  3385   000365                     IPR3            equ	869	;# 
  3386   000366                     IPR4            equ	870	;# 
  3387   000367                     IPR5            equ	871	;# 
  3388   000368                     IPR6            equ	872	;# 
  3389   000369                     IPR7            equ	873	;# 
  3390   00036A                     IPR8            equ	874	;# 
  3391   00036B                     IPR9            equ	875	;# 
  3392   00036C                     IPR10           equ	876	;# 
  3393   00036D                     IPR11           equ	877	;# 
  3394   00036E                     IPR12           equ	878	;# 
  3395   00036F                     IPR13           equ	879	;# 
  3396   000370                     IPR14           equ	880	;# 
  3397   000371                     IPR15           equ	881	;# 
  3398   000373                     STATUS_CSHAD    equ	883	;# 
  3399   000374                     WREG_CSHAD      equ	884	;# 
  3400   000375                     BSR_CSHAD       equ	885	;# 
  3401   000376                     SHADCON         equ	886	;# 
  3402   000377                     STATUS_SHAD     equ	887	;# 
  3403   000378                     WREG_SHAD       equ	888	;# 
  3404   000379                     BSR_SHAD        equ	889	;# 
  3405   00037A                     PCLATH_SHAD     equ	890	;# 
  3406   00037B                     PCLATU_SHAD     equ	891	;# 
  3407   00037C                     FSR0SH          equ	892	;# 
  3408   00037C                     FSR0L_SHAD      equ	892	;# 
  3409   00037D                     FSR0H_SHAD      equ	893	;# 
  3410   00037E                     FSR1SH          equ	894	;# 
  3411   00037E                     FSR1L_SHAD      equ	894	;# 
  3412   00037F                     FSR1H_SHAD      equ	895	;# 
  3413   000380                     FSR2SH          equ	896	;# 
  3414   000380                     FSR2L_SHAD      equ	896	;# 
  3415   000381                     FSR2H_SHAD      equ	897	;# 
  3416   000382                     PRODSH          equ	898	;# 
  3417   000382                     PRODL_SHAD      equ	898	;# 
  3418   000383                     PRODH_SHAD      equ	899	;# 
  3419   000387                     TU16ACON0       equ	903	;# 
  3420   000388                     TU16ACON1       equ	904	;# 
  3421   000389                     TU16AHLT        equ	905	;# 
  3422   00038A                     TU16APS         equ	906	;# 
  3423   00038B                     TU16ATMR        equ	907	;# 
  3424   00038B                     TU16ACR         equ	907	;# 
  3425   00038B                     TU16ATMRL       equ	907	;# 
  3426   00038B                     TU16ACRL        equ	907	;# 
  3427   00038C                     TU16ATMRH       equ	908	;# 
  3428   00038C                     TU16ACRH        equ	908	;# 
  3429   00038D                     TU16APR         equ	909	;# 
  3430   00038D                     TU16APRL        equ	909	;# 
  3431   00038E                     TU16APRH        equ	910	;# 
  3432   00038F                     TU16ACLK        equ	911	;# 
  3433   000390                     TU16AERS        equ	912	;# 
  3434   000393                     TU16BCON0       equ	915	;# 
  3435   000394                     TU16BCON1       equ	916	;# 
  3436   000395                     TU16BHLT        equ	917	;# 
  3437   000396                     TU16BPS         equ	918	;# 
  3438   000397                     TU16BTMR        equ	919	;# 
  3439   000397                     TU16BCR         equ	919	;# 
  3440   000397                     TU16BTMRL       equ	919	;# 
  3441   000397                     TU16BCRL        equ	919	;# 
  3442   000398                     TU16BTMRH       equ	920	;# 
  3443   000398                     TU16BCRH        equ	920	;# 
  3444   000399                     TU16BPR         equ	921	;# 
  3445   000399                     TU16BPRL        equ	921	;# 
  3446   00039A                     TU16BPRH        equ	922	;# 
  3447   00039B                     TU16BCLK        equ	923	;# 
  3448   00039C                     TU16BERS        equ	924	;# 
  3449   0003BB                     TUCHAIN         equ	955	;# 
  3450   0003BC                     CWG1CLK         equ	956	;# 
  3451   0003BC                     CWG1CLKCON      equ	956	;# 
  3452   0003BD                     CWG1ISM         equ	957	;# 
  3453   0003BE                     CWG1DBR         equ	958	;# 
  3454   0003BF                     CWG1DBF         equ	959	;# 
  3455   0003C0                     CWG1CON0        equ	960	;# 
  3456   0003C1                     CWG1CON1        equ	961	;# 
  3457   0003C2                     CWG1AS0         equ	962	;# 
  3458   0003C3                     CWG1AS1         equ	963	;# 
  3459   0003C4                     CWG1STR         equ	964	;# 
  3460   0003C5                     CWG2CLK         equ	965	;# 
  3461   0003C5                     CWG2CLKCON      equ	965	;# 
  3462   0003C6                     CWG2ISM         equ	966	;# 
  3463   0003C7                     CWG2DBR         equ	967	;# 
  3464   0003C8                     CWG2DBF         equ	968	;# 
  3465   0003C9                     CWG2CON0        equ	969	;# 
  3466   0003CA                     CWG2CON1        equ	970	;# 
  3467   0003CB                     CWG2AS0         equ	971	;# 
  3468   0003CC                     CWG2AS1         equ	972	;# 
  3469   0003CD                     CWG2STR         equ	973	;# 
  3470   0003CE                     CWG3CLK         equ	974	;# 
  3471   0003CE                     CWG3CLKCON      equ	974	;# 
  3472   0003CF                     CWG3ISM         equ	975	;# 
  3473   0003D0                     CWG3DBR         equ	976	;# 
  3474   0003D1                     CWG3DBF         equ	977	;# 
  3475   0003D2                     CWG3CON0        equ	978	;# 
  3476   0003D3                     CWG3CON1        equ	979	;# 
  3477   0003D4                     CWG3AS0         equ	980	;# 
  3478   0003D5                     CWG3AS1         equ	981	;# 
  3479   0003D6                     CWG3STR         equ	982	;# 
  3480   0003D7                     FVRCON          equ	983	;# 
  3481   0003D8                     ADCPCON         equ	984	;# 
  3482   0003D8                     ADCP            equ	984	;# 
  3483   0003D9                     ADLTH           equ	985	;# 
  3484   0003D9                     ADLTHL          equ	985	;# 
  3485   0003DA                     ADLTHH          equ	986	;# 
  3486   0003DB                     ADUTH           equ	987	;# 
  3487   0003DB                     ADUTHL          equ	987	;# 
  3488   0003DC                     ADUTHH          equ	988	;# 
  3489   0003DD                     ADERR           equ	989	;# 
  3490   0003DD                     ADERRL          equ	989	;# 
  3491   0003DE                     ADERRH          equ	990	;# 
  3492   0003DF                     ADSTPT          equ	991	;# 
  3493   0003DF                     ADSTPTL         equ	991	;# 
  3494   0003E0                     ADSTPTH         equ	992	;# 
  3495   0003E1                     ADFLTR          equ	993	;# 
  3496   0003E1                     ADFLTRL         equ	993	;# 
  3497   0003E2                     ADFLTRH         equ	994	;# 
  3498   0003E3                     ADACC           equ	995	;# 
  3499   0003E3                     ADACCL          equ	995	;# 
  3500   0003E4                     ADACCH          equ	996	;# 
  3501   0003E5                     ADACCU          equ	997	;# 
  3502   0003E6                     ADCNT           equ	998	;# 
  3503   0003E7                     ADRPT           equ	999	;# 
  3504   0003E8                     ADPREV          equ	1000	;# 
  3505   0003E8                     ADPREVL         equ	1000	;# 
  3506   0003E9                     ADPREVH         equ	1001	;# 
  3507   0003EA                     ADRES           equ	1002	;# 
  3508   0003EA                     ADRESL          equ	1002	;# 
  3509   0003EB                     ADRESH          equ	1003	;# 
  3510   0003EC                     ADPCH           equ	1004	;# 
  3511   0003EE                     ADACQ           equ	1006	;# 
  3512   0003EE                     ADACQL          equ	1006	;# 
  3513   0003EF                     ADACQH          equ	1007	;# 
  3514   0003F0                     ADCAP           equ	1008	;# 
  3515   0003F1                     ADPRE           equ	1009	;# 
  3516   0003F1                     ADPREL          equ	1009	;# 
  3517   0003F2                     ADPREH          equ	1010	;# 
  3518   0003F3                     ADCON0          equ	1011	;# 
  3519   0003F4                     ADCON1          equ	1012	;# 
  3520   0003F5                     ADCON2          equ	1013	;# 
  3521   0003F6                     ADCON3          equ	1014	;# 
  3522   0003F7                     ADSTAT          equ	1015	;# 
  3523   0003F8                     ADREF           equ	1016	;# 
  3524   0003F9                     ADACT           equ	1017	;# 
  3525   0003FA                     ADCLK           equ	1018	;# 
  3526   0003FB                     ADCTX           equ	1019	;# 
  3527   0003FC                     ADCSEL1         equ	1020	;# 
  3528   0003FD                     ADCSEL2         equ	1021	;# 
  3529   0003FE                     ADCSEL3         equ	1022	;# 
  3530   0003FF                     ADCSEL4         equ	1023	;# 
  3531   000400                     ANSELA          equ	1024	;# 
  3532   000401                     WPUA            equ	1025	;# 
  3533   000402                     ODCONA          equ	1026	;# 
  3534   000403                     SLRCONA         equ	1027	;# 
  3535   000404                     INLVLA          equ	1028	;# 
  3536   000405                     IOCAP           equ	1029	;# 
  3537   000406                     IOCAN           equ	1030	;# 
  3538   000407                     IOCAF           equ	1031	;# 
  3539   000408                     ANSELB          equ	1032	;# 
  3540   000409                     WPUB            equ	1033	;# 
  3541   00040A                     ODCONB          equ	1034	;# 
  3542   00040B                     SLRCONB         equ	1035	;# 
  3543   00040C                     INLVLB          equ	1036	;# 
  3544   00040D                     IOCBP           equ	1037	;# 
  3545   00040E                     IOCBN           equ	1038	;# 
  3546   00040F                     IOCBF           equ	1039	;# 
  3547   000410                     ANSELC          equ	1040	;# 
  3548   000411                     WPUC            equ	1041	;# 
  3549   000412                     ODCONC          equ	1042	;# 
  3550   000413                     SLRCONC         equ	1043	;# 
  3551   000414                     INLVLC          equ	1044	;# 
  3552   000415                     IOCCP           equ	1045	;# 
  3553   000416                     IOCCN           equ	1046	;# 
  3554   000417                     IOCCF           equ	1047	;# 
  3555   000421                     WPUE            equ	1057	;# 
  3556   000424                     INLVLE          equ	1060	;# 
  3557   000425                     IOCEP           equ	1061	;# 
  3558   000426                     IOCEN           equ	1062	;# 
  3559   000427                     IOCEF           equ	1063	;# 
  3560   000440                     NCO1ACC         equ	1088	;# 
  3561   000440                     NCO1ACCL        equ	1088	;# 
  3562   000441                     NCO1ACCH        equ	1089	;# 
  3563   000442                     NCO1ACCU        equ	1090	;# 
  3564   000443                     NCO1INC         equ	1091	;# 
  3565   000443                     NCO1INCL        equ	1091	;# 
  3566   000444                     NCO1INCH        equ	1092	;# 
  3567   000445                     NCO1INCU        equ	1093	;# 
  3568   000446                     NCO1CON         equ	1094	;# 
  3569   000447                     NCO1CLK         equ	1095	;# 
  3570   000448                     NCO2ACC         equ	1096	;# 
  3571   000448                     NCO2ACCL        equ	1096	;# 
  3572   000449                     NCO2ACCH        equ	1097	;# 
  3573   00044A                     NCO2ACCU        equ	1098	;# 
  3574   00044B                     NCO2INC         equ	1099	;# 
  3575   00044B                     NCO2INCL        equ	1099	;# 
  3576   00044C                     NCO2INCH        equ	1100	;# 
  3577   00044D                     NCO2INCU        equ	1101	;# 
  3578   00044E                     NCO2CON         equ	1102	;# 
  3579   00044F                     NCO2CLK         equ	1103	;# 
  3580   000450                     NCO3ACC         equ	1104	;# 
  3581   000450                     NCO3ACCL        equ	1104	;# 
  3582   000451                     NCO3ACCH        equ	1105	;# 
  3583   000452                     NCO3ACCU        equ	1106	;# 
  3584   000453                     NCO3INC         equ	1107	;# 
  3585   000453                     NCO3INCL        equ	1107	;# 
  3586   000454                     NCO3INCH        equ	1108	;# 
  3587   000455                     NCO3INCU        equ	1109	;# 
  3588   000456                     NCO3CON         equ	1110	;# 
  3589   000457                     NCO3CLK         equ	1111	;# 
  3590   000458                     FSCMCON         equ	1112	;# 
  3591   000459                     IVTLOCK         equ	1113	;# 
  3592   00045A                     IVTAD           equ	1114	;# 
  3593   00045A                     IVTADL          equ	1114	;# 
  3594   00045B                     IVTADH          equ	1115	;# 
  3595   00045C                     IVTADU          equ	1116	;# 
  3596   00045D                     IVTBASE         equ	1117	;# 
  3597   00045D                     IVTBASEL        equ	1117	;# 
  3598   00045E                     IVTBASEH        equ	1118	;# 
  3599   00045F                     IVTBASEU        equ	1119	;# 
  3600   000460                     PWM1ERS         equ	1120	;# 
  3601   000461                     PWM1CLK         equ	1121	;# 
  3602   000462                     PWM1LDS         equ	1122	;# 
  3603   000463                     PWM1PR          equ	1123	;# 
  3604   000463                     PWM1PRL         equ	1123	;# 
  3605   000464                     PWM1PRH         equ	1124	;# 
  3606   000465                     PWM1CPRE        equ	1125	;# 
  3607   000466                     PWM1PIPOS       equ	1126	;# 
  3608   000467                     PWM1GIR         equ	1127	;# 
  3609   000468                     PWM1GIE         equ	1128	;# 
  3610   000469                     PWM1CON         equ	1129	;# 
  3611   00046A                     PWM1S1CFG       equ	1130	;# 
  3612   00046B                     PWM1S1P1        equ	1131	;# 
  3613   00046B                     PWM1S1P1L       equ	1131	;# 
  3614   00046C                     PWM1S1P1H       equ	1132	;# 
  3615   00046D                     PWM1S1P2        equ	1133	;# 
  3616   00046D                     PWM1S1P2L       equ	1133	;# 
  3617   00046E                     PWM1S1P2H       equ	1134	;# 
  3618   00046F                     PWM2ERS         equ	1135	;# 
  3619   000470                     PWM2CLK         equ	1136	;# 
  3620   000471                     PWM2LDS         equ	1137	;# 
  3621   000472                     PWM2PR          equ	1138	;# 
  3622   000472                     PWM2PRL         equ	1138	;# 
  3623   000473                     PWM2PRH         equ	1139	;# 
  3624   000474                     PWM2CPRE        equ	1140	;# 
  3625   000475                     PWM2PIPOS       equ	1141	;# 
  3626   000476                     PWM2GIR         equ	1142	;# 
  3627   000477                     PWM2GIE         equ	1143	;# 
  3628   000478                     PWM2CON         equ	1144	;# 
  3629   000479                     PWM2S1CFG       equ	1145	;# 
  3630   00047A                     PWM2S1P1        equ	1146	;# 
  3631   00047A                     PWM2S1P1L       equ	1146	;# 
  3632   00047B                     PWM2S1P1H       equ	1147	;# 
  3633   00047C                     PWM2S1P2        equ	1148	;# 
  3634   00047C                     PWM2S1P2L       equ	1148	;# 
  3635   00047D                     PWM2S1P2H       equ	1149	;# 
  3636   00047E                     PWM3ERS         equ	1150	;# 
  3637   00047F                     PWM3CLK         equ	1151	;# 
  3638   000480                     PWM3LDS         equ	1152	;# 
  3639   000481                     PWM3PR          equ	1153	;# 
  3640   000481                     PWM3PRL         equ	1153	;# 
  3641   000482                     PWM3PRH         equ	1154	;# 
  3642   000483                     PWM3CPRE        equ	1155	;# 
  3643   000484                     PWM3PIPOS       equ	1156	;# 
  3644   000485                     PWM3GIR         equ	1157	;# 
  3645   000486                     PWM3GIE         equ	1158	;# 
  3646   000487                     PWM3CON         equ	1159	;# 
  3647   000488                     PWM3S1CFG       equ	1160	;# 
  3648   000489                     PWM3S1P1        equ	1161	;# 
  3649   000489                     PWM3S1P1L       equ	1161	;# 
  3650   00048A                     PWM3S1P1H       equ	1162	;# 
  3651   00048B                     PWM3S1P2        equ	1163	;# 
  3652   00048B                     PWM3S1P2L       equ	1163	;# 
  3653   00048C                     PWM3S1P2H       equ	1164	;# 
  3654   00048D                     PWM4ERS         equ	1165	;# 
  3655   00048E                     PWM4CLK         equ	1166	;# 
  3656   00048F                     PWM4LDS         equ	1167	;# 
  3657   000490                     PWM4PR          equ	1168	;# 
  3658   000490                     PWM4PRL         equ	1168	;# 
  3659   000491                     PWM4PRH         equ	1169	;# 
  3660   000492                     PWM4CPRE        equ	1170	;# 
  3661   000493                     PWM4PIPOS       equ	1171	;# 
  3662   000494                     PWM4GIR         equ	1172	;# 
  3663   000495                     PWM4GIE         equ	1173	;# 
  3664   000496                     PWM4CON         equ	1174	;# 
  3665   000497                     PWM4S1CFG       equ	1175	;# 
  3666   000498                     PWM4S1P1        equ	1176	;# 
  3667   000498                     PWM4S1P1L       equ	1176	;# 
  3668   000499                     PWM4S1P1H       equ	1177	;# 
  3669   00049A                     PWM4S1P2        equ	1178	;# 
  3670   00049A                     PWM4S1P2L       equ	1178	;# 
  3671   00049B                     PWM4S1P2H       equ	1179	;# 
  3672   00049C                     PWMLOAD         equ	1180	;# 
  3673   00049D                     PWMEN           equ	1181	;# 
  3674   00049E                     PIE0            equ	1182	;# 
  3675   00049F                     PIE1            equ	1183	;# 
  3676   0004A0                     PIE2            equ	1184	;# 
  3677   0004A1                     PIE3            equ	1185	;# 
  3678   0004A2                     PIE4            equ	1186	;# 
  3679   0004A3                     PIE5            equ	1187	;# 
  3680   0004A4                     PIE6            equ	1188	;# 
  3681   0004A5                     PIE7            equ	1189	;# 
  3682   0004A6                     PIE8            equ	1190	;# 
  3683   0004A7                     PIE9            equ	1191	;# 
  3684   0004A8                     PIE10           equ	1192	;# 
  3685   0004A9                     PIE11           equ	1193	;# 
  3686   0004AA                     PIE12           equ	1194	;# 
  3687   0004AB                     PIE13           equ	1195	;# 
  3688   0004AC                     PIE14           equ	1196	;# 
  3689   0004AD                     PIE15           equ	1197	;# 
  3690   0004AE                     PIR0            equ	1198	;# 
  3691   0004AF                     PIR1            equ	1199	;# 
  3692   0004B0                     PIR2            equ	1200	;# 
  3693   0004B1                     PIR3            equ	1201	;# 
  3694   0004B2                     PIR4            equ	1202	;# 
  3695   0004B3                     PIR5            equ	1203	;# 
  3696   0004B4                     PIR6            equ	1204	;# 
  3697   0004B5                     PIR7            equ	1205	;# 
  3698   0004B6                     PIR8            equ	1206	;# 
  3699   0004B7                     PIR9            equ	1207	;# 
  3700   0004B8                     PIR10           equ	1208	;# 
  3701   0004B9                     PIR11           equ	1209	;# 
  3702   0004BA                     PIR12           equ	1210	;# 
  3703   0004BB                     PIR13           equ	1211	;# 
  3704   0004BC                     PIR14           equ	1212	;# 
  3705   0004BD                     PIR15           equ	1213	;# 
  3706   0004BE                     LATA            equ	1214	;# 
  3707   0004BF                     LATB            equ	1215	;# 
  3708   0004C0                     LATC            equ	1216	;# 
  3709   0004C6                     TRISA           equ	1222	;# 
  3710   0004C7                     TRISB           equ	1223	;# 
  3711   0004C8                     TRISC           equ	1224	;# 
  3712   0004CA                     TRISE           equ	1226	;# 
  3713   0004CE                     PORTA           equ	1230	;# 
  3714   0004CF                     PORTB           equ	1231	;# 
  3715   0004D0                     PORTC           equ	1232	;# 
  3716   0004D2                     PORTE           equ	1234	;# 
  3717   0004D6                     INTCON0         equ	1238	;# 
  3718   0004D7                     INTCON1         equ	1239	;# 
  3719   0004D8                     STATUS          equ	1240	;# 
  3720   0004D9                     FSR2            equ	1241	;# 
  3721   0004D9                     FSR2L           equ	1241	;# 
  3722   0004DA                     FSR2H           equ	1242	;# 
  3723   0004DB                     PLUSW2          equ	1243	;# 
  3724   0004DC                     PREINC2         equ	1244	;# 
  3725   0004DD                     POSTDEC2        equ	1245	;# 
  3726   0004DE                     POSTINC2        equ	1246	;# 
  3727   0004DF                     INDF2           equ	1247	;# 
  3728   0004E0                     BSR             equ	1248	;# 
  3729   0004E1                     FSR1            equ	1249	;# 
  3730   0004E1                     FSR1L           equ	1249	;# 
  3731   0004E2                     FSR1H           equ	1250	;# 
  3732   0004E3                     PLUSW1          equ	1251	;# 
  3733   0004E4                     PREINC1         equ	1252	;# 
  3734   0004E5                     POSTDEC1        equ	1253	;# 
  3735   0004E6                     POSTINC1        equ	1254	;# 
  3736   0004E7                     INDF1           equ	1255	;# 
  3737   0004E8                     WREG            equ	1256	;# 
  3738   0004E9                     FSR0            equ	1257	;# 
  3739   0004E9                     FSR0L           equ	1257	;# 
  3740   0004EA                     FSR0H           equ	1258	;# 
  3741   0004EB                     PLUSW0          equ	1259	;# 
  3742   0004EC                     PREINC0         equ	1260	;# 
  3743   0004ED                     POSTDEC0        equ	1261	;# 
  3744   0004EE                     POSTINC0        equ	1262	;# 
  3745   0004EF                     INDF0           equ	1263	;# 
  3746   0004F0                     PCON0           equ	1264	;# 
  3747   0004F1                     PCON1           equ	1265	;# 
  3748   0004F2                     CPUDOZE         equ	1266	;# 
  3749   0004F3                     PROD            equ	1267	;# 
  3750   0004F3                     PRODL           equ	1267	;# 
  3751   0004F4                     PRODH           equ	1268	;# 
  3752   0004F5                     TABLAT          equ	1269	;# 
  3753   0004F6                     TBLPTR          equ	1270	;# 
  3754   0004F6                     TBLPTRL         equ	1270	;# 
  3755   0004F7                     TBLPTRH         equ	1271	;# 
  3756   0004F8                     TBLPTRU         equ	1272	;# 
  3757   0004F9                     PCLAT           equ	1273	;# 
  3758   0004F9                     PCL             equ	1273	;# 
  3759   0004FA                     PCLATH          equ	1274	;# 
  3760   0004FB                     PCLATU          equ	1275	;# 
  3761   0004FC                     STKPTR          equ	1276	;# 
  3762   0004FD                     TOS             equ	1277	;# 
  3763   0004FD                     TOSL            equ	1277	;# 
  3764   0004FE                     TOSH            equ	1278	;# 
  3765   0004FF                     TOSU            equ	1279	;# 
  3766   000038                     BOOTREG         equ	56	;# 
  3767   000039                     CLKRCON         equ	57	;# 
  3768   00003A                     CLKRCLK         equ	58	;# 
  3769   000040                     NVMCON0         equ	64	;# 
  3770   000041                     NVMCON1         equ	65	;# 
  3771   000042                     NVMLOCK         equ	66	;# 
  3772   000043                     NVMADR          equ	67	;# 
  3773   000043                     NVMADRL         equ	67	;# 
  3774   000044                     NVMADRH         equ	68	;# 
  3775   000045                     NVMADRU         equ	69	;# 
  3776   000046                     NVMDAT          equ	70	;# 
  3777   000046                     NVMDATL         equ	70	;# 
  3778   000047                     NVMDATH         equ	71	;# 
  3779   000048                     VREGCON         equ	72	;# 
  3780   000049                     BORCON          equ	73	;# 
  3781   00004A                     HLVDCON0        equ	74	;# 
  3782   00004B                     HLVDCON1        equ	75	;# 
  3783   00004C                     ZCDCON          equ	76	;# 
  3784   000060                     PMD0            equ	96	;# 
  3785   000061                     PMD1            equ	97	;# 
  3786   000062                     PMD2            equ	98	;# 
  3787   000063                     PMD3            equ	99	;# 
  3788   000064                     PMD4            equ	100	;# 
  3789   000065                     PMD5            equ	101	;# 
  3790   000066                     PMD6            equ	102	;# 
  3791   000067                     PMD7            equ	103	;# 
  3792   000068                     PMD8            equ	104	;# 
  3793   00006A                     MD1CON0         equ	106	;# 
  3794   00006B                     MD1CON1         equ	107	;# 
  3795   00006C                     MD1SRC          equ	108	;# 
  3796   00006D                     MD1CARL         equ	109	;# 
  3797   00006E                     MD1CARH         equ	110	;# 
  3798   00006F                     CMOUT           equ	111	;# 
  3799   000070                     CM1CON0         equ	112	;# 
  3800   000071                     CM1CON1         equ	113	;# 
  3801   000072                     CM1NCH          equ	114	;# 
  3802   000073                     CM1PCH          equ	115	;# 
  3803   000074                     CM2CON0         equ	116	;# 
  3804   000075                     CM2CON1         equ	117	;# 
  3805   000076                     CM2NCH          equ	118	;# 
  3806   000077                     CM2PCH          equ	119	;# 
  3807   000078                     WDTCON0         equ	120	;# 
  3808   000079                     WDTCON1         equ	121	;# 
  3809   00007A                     WDTPSL          equ	122	;# 
  3810   00007B                     WDTPSH          equ	123	;# 
  3811   00007C                     WDTTMR          equ	124	;# 
  3812   00007D                     DAC1DAT         equ	125	;# 
  3813   00007D                     DAC1DATL        equ	125	;# 
  3814   00007F                     DAC1CON         equ	127	;# 
  3815   000080                     SPI1RXB         equ	128	;# 
  3816   000081                     SPI1TXB         equ	129	;# 
  3817   000082                     SPI1TCNT        equ	130	;# 
  3818   000082                     SPI1TCNTL       equ	130	;# 
  3819   000083                     SPI1TCNTH       equ	131	;# 
  3820   000084                     SPI1CON0        equ	132	;# 
  3821   000085                     SPI1CON1        equ	133	;# 
  3822   000086                     SPI1CON2        equ	134	;# 
  3823   000087                     SPI1STATUS      equ	135	;# 
  3824   000088                     SPI1TWIDTH      equ	136	;# 
  3825   000089                     SPI1BAUD        equ	137	;# 
  3826   00008A                     SPI1INTF        equ	138	;# 
  3827   00008B                     SPI1INTE        equ	139	;# 
  3828   00008C                     SPI1CLK         equ	140	;# 
  3829   00008D                     SPI2RXB         equ	141	;# 
  3830   00008E                     SPI2TXB         equ	142	;# 
  3831   00008F                     SPI2TCNT        equ	143	;# 
  3832   00008F                     SPI2TCNTL       equ	143	;# 
  3833   000090                     SPI2TCNTH       equ	144	;# 
  3834   000091                     SPI2CON0        equ	145	;# 
  3835   000092                     SPI2CON1        equ	146	;# 
  3836   000093                     SPI2CON2        equ	147	;# 
  3837   000094                     SPI2STATUS      equ	148	;# 
  3838   000095                     SPI2TWIDTH      equ	149	;# 
  3839   000096                     SPI2BAUD        equ	150	;# 
  3840   000097                     SPI2INTF        equ	151	;# 
  3841   000098                     SPI2INTE        equ	152	;# 
  3842   000099                     SPI2CLK         equ	153	;# 
  3843   0000AC                     ACTCON          equ	172	;# 
  3844   0000AD                     OSCCON1         equ	173	;# 
  3845   0000AE                     OSCCON2         equ	174	;# 
  3846   0000AF                     OSCCON3         equ	175	;# 
  3847   0000B0                     OSCTUNE         equ	176	;# 
  3848   0000B1                     OSCFRQ          equ	177	;# 
  3849   0000B1                     OSCFREQ         equ	177	;# 
  3850   0000B2                     OSCSTAT         equ	178	;# 
  3851   0000B2                     OSCSTAT1        equ	178	;# 
  3852   0000B3                     OSCEN           equ	179	;# 
  3853   0000B4                     PRLOCK          equ	180	;# 
  3854   0000B5                     SCANPR          equ	181	;# 
  3855   0000B6                     DMA1PR          equ	182	;# 
  3856   0000B7                     DMA2PR          equ	183	;# 
  3857   0000B8                     DMA3PR          equ	184	;# 
  3858   0000B9                     DMA4PR          equ	185	;# 
  3859   0000BA                     DMA5PR          equ	186	;# 
  3860   0000BB                     DMA6PR          equ	187	;# 
  3861   0000BC                     DMA7PR          equ	188	;# 
  3862   0000BD                     DMA8PR          equ	189	;# 
  3863   0000BE                     MAINPR          equ	190	;# 
  3864   0000BF                     ISRPR           equ	191	;# 
  3865   0000D4                     CLCDATA         equ	212	;# 
  3866   0000D5                     CLCSELECT       equ	213	;# 
  3867   0000D6                     CLCnCON         equ	214	;# 
  3868   0000D7                     CLCnPOL         equ	215	;# 
  3869   0000D8                     CLCnSEL0        equ	216	;# 
  3870   0000D9                     CLCnSEL1        equ	217	;# 
  3871   0000DA                     CLCnSEL2        equ	218	;# 
  3872   0000DB                     CLCnSEL3        equ	219	;# 
  3873   0000DC                     CLCnGLS0        equ	220	;# 
  3874   0000DD                     CLCnGLS1        equ	221	;# 
  3875   0000DE                     CLCnGLS2        equ	222	;# 
  3876   0000DF                     CLCnGLS3        equ	223	;# 
  3877   0000E8                     DMASELECT       equ	232	;# 
  3878   0000E9                     DMAnBUF         equ	233	;# 
  3879   0000EA                     DMAnDCNT        equ	234	;# 
  3880   0000EA                     DMAnDCNTL       equ	234	;# 
  3881   0000EB                     DMAnDCNTH       equ	235	;# 
  3882   0000EC                     DMAnDPTR        equ	236	;# 
  3883   0000EC                     DMAnDPTRL       equ	236	;# 
  3884   0000ED                     DMAnDPTRH       equ	237	;# 
  3885   0000EE                     DMAnDSZ         equ	238	;# 
  3886   0000EE                     DMAnDSZL        equ	238	;# 
  3887   0000EF                     DMAnDSZH        equ	239	;# 
  3888   0000F0                     DMAnDSA         equ	240	;# 
  3889   0000F0                     DMAnDSAL        equ	240	;# 
  3890   0000F1                     DMAnDSAH        equ	241	;# 
  3891   0000F2                     DMAnSCNT        equ	242	;# 
  3892   0000F2                     DMAnSCNTL       equ	242	;# 
  3893   0000F3                     DMAnSCNTH       equ	243	;# 
  3894   0000F4                     DMAnSPTR        equ	244	;# 
  3895   0000F4                     DMAnSPTRL       equ	244	;# 
  3896   0000F5                     DMAnSPTRH       equ	245	;# 
  3897   0000F6                     DMAnSPTRU       equ	246	;# 
  3898   0000F7                     DMAnSSZ         equ	247	;# 
  3899   0000F7                     DMAnSSZL        equ	247	;# 
  3900   0000F8                     DMAnSSZH        equ	248	;# 
  3901   0000F9                     DMAnSSA         equ	249	;# 
  3902   0000F9                     DMAnSSAL        equ	249	;# 
  3903   0000FA                     DMAnSSAH        equ	250	;# 
  3904   0000FB                     DMAnSSAU        equ	251	;# 
  3905   0000FC                     DMAnCON0        equ	252	;# 
  3906   0000FD                     DMAnCON1        equ	253	;# 
  3907   0000FE                     DMAnAIRQ        equ	254	;# 
  3908   0000FF                     DMAnSIRQ        equ	255	;# 
  3909   000100                     C1CONL          equ	256	;# 
  3910   000101                     C1CONH          equ	257	;# 
  3911   000102                     C1CONU          equ	258	;# 
  3912   000103                     C1CONT          equ	259	;# 
  3913   000104                     C1NBTCFGL       equ	260	;# 
  3914   000105                     C1NBTCFGH       equ	261	;# 
  3915   000106                     C1NBTCFGU       equ	262	;# 
  3916   000107                     C1NBTCFGT       equ	263	;# 
  3917   000108                     C1DBTCFGL       equ	264	;# 
  3918   000109                     C1DBTCFGH       equ	265	;# 
  3919   00010A                     C1DBTCFGU       equ	266	;# 
  3920   00010B                     C1DBTCFGT       equ	267	;# 
  3921   00010C                     C1TDCL          equ	268	;# 
  3922   00010D                     C1TDCH          equ	269	;# 
  3923   00010E                     C1TDCU          equ	270	;# 
  3924   000110                     C1TBC           equ	272	;# 
  3925   000110                     C1TBCL          equ	272	;# 
  3926   000111                     C1TBCH          equ	273	;# 
  3927   000112                     C1TBCU          equ	274	;# 
  3928   000113                     C1TBCT          equ	275	;# 
  3929   000114                     C1TSCONL        equ	276	;# 
  3930   000115                     C1TSCONH        equ	277	;# 
  3931   000116                     C1TSCONU        equ	278	;# 
  3932   000117                     C1TSCONT        equ	279	;# 
  3933   000118                     C1VECL          equ	280	;# 
  3934   000119                     C1VECH          equ	281	;# 
  3935   00011A                     C1VECU          equ	282	;# 
  3936   00011B                     C1VECT          equ	283	;# 
  3937   00011C                     C1INTL          equ	284	;# 
  3938   00011D                     C1INTH          equ	285	;# 
  3939   00011E                     C1INTU          equ	286	;# 
  3940   00011F                     C1INTT          equ	287	;# 
  3941   000120                     C1RXIF          equ	288	;# 
  3942   000120                     C1RXIFL         equ	288	;# 
  3943   000121                     C1RXIFH         equ	289	;# 
  3944   000122                     C1RXIFU         equ	290	;# 
  3945   000123                     C1RXIFT         equ	291	;# 
  3946   000124                     C1TXIF          equ	292	;# 
  3947   000124                     C1TXIFL         equ	292	;# 
  3948   000125                     C1TXIFH         equ	293	;# 
  3949   000126                     C1TXIFU         equ	294	;# 
  3950   000127                     C1TXIFT         equ	295	;# 
  3951   000128                     C1RXOVIF        equ	296	;# 
  3952   000128                     C1RXOVIFL       equ	296	;# 
  3953   000129                     C1RXOVIFH       equ	297	;# 
  3954   00012A                     C1RXOVIFU       equ	298	;# 
  3955   00012B                     C1RXOVIFT       equ	299	;# 
  3956   00012C                     C1TXATIF        equ	300	;# 
  3957   00012C                     C1TXATIFL       equ	300	;# 
  3958   00012D                     C1TXATIFH       equ	301	;# 
  3959   00012E                     C1TXATIFU       equ	302	;# 
  3960   00012F                     C1TXATIFT       equ	303	;# 
  3961   000130                     C1TXREQ         equ	304	;# 
  3962   000130                     C1TXREQL        equ	304	;# 
  3963   000131                     C1TXREQH        equ	305	;# 
  3964   000132                     C1TXREQU        equ	306	;# 
  3965   000133                     C1TXREQT        equ	307	;# 
  3966   000134                     C1TRECL         equ	308	;# 
  3967   000135                     C1TRECH         equ	309	;# 
  3968   000136                     C1TRECU         equ	310	;# 
  3969   000137                     C1TRECT         equ	311	;# 
  3970   000138                     C1BDIAG0L       equ	312	;# 
  3971   000139                     C1BDIAG0H       equ	313	;# 
  3972   00013C                     C1BDIAG1L       equ	316	;# 
  3973   00013D                     C1BDIAG1H       equ	317	;# 
  3974   00013E                     C1BDIAG1U       equ	318	;# 
  3975   00013F                     C1BDIAG1T       equ	319	;# 
  3976   000140                     C1TEFCONL       equ	320	;# 
  3977   000141                     C1TEFCONH       equ	321	;# 
  3978   000142                     C1TEFCONU       equ	322	;# 
  3979   000143                     C1TEFCONT       equ	323	;# 
  3980   000144                     C1TEFSTAL       equ	324	;# 
  3981   000145                     C1TEFSTAH       equ	325	;# 
  3982   000146                     C1TEFSTAU       equ	326	;# 
  3983   000147                     C1TEFSTAT       equ	327	;# 
  3984   000148                     C1TEFUA         equ	328	;# 
  3985   000148                     C1TEFUAL        equ	328	;# 
  3986   000149                     C1TEFUAH        equ	329	;# 
  3987   00014A                     C1TEFUAU        equ	330	;# 
  3988   00014B                     C1TEFUAT        equ	331	;# 
  3989   00014C                     C1FIFOBA        equ	332	;# 
  3990   00014C                     C1FIFOBAL       equ	332	;# 
  3991   00014D                     C1FIFOBAH       equ	333	;# 
  3992   00014E                     C1FIFOBAU       equ	334	;# 
  3993   00014F                     C1FIFOBAT       equ	335	;# 
  3994   000150                     C1TXQCONL       equ	336	;# 
  3995   000151                     C1TXQCONH       equ	337	;# 
  3996   000152                     C1TXQCONU       equ	338	;# 
  3997   000153                     C1TXQCONT       equ	339	;# 
  3998   000154                     C1TXQSTAL       equ	340	;# 
  3999   000155                     C1TXQSTAH       equ	341	;# 
  4000   000156                     C1TXQSTAU       equ	342	;# 
  4001   000157                     C1TXQSTAT       equ	343	;# 
  4002   000158                     C1TXQUA         equ	344	;# 
  4003   000158                     C1TXQUAL        equ	344	;# 
  4004   000159                     C1TXQUAH        equ	345	;# 
  4005   00015A                     C1TXQUAU        equ	346	;# 
  4006   00015B                     C1TXQUAT        equ	347	;# 
  4007   00015C                     C1FIFOCON1      equ	348	;# 
  4008   00015C                     C1FIFOCON1L     equ	348	;# 
  4009   00015D                     C1FIFOCON1H     equ	349	;# 
  4010   00015E                     C1FIFOCON1U     equ	350	;# 
  4011   00015F                     C1FIFOCON1T     equ	351	;# 
  4012   000160                     C1FIFOSTA1      equ	352	;# 
  4013   000160                     C1FIFOSTA1L     equ	352	;# 
  4014   000161                     C1FIFOSTA1H     equ	353	;# 
  4015   000162                     C1FIFOSTA1U     equ	354	;# 
  4016   000163                     C1FIFOSTA1T     equ	355	;# 
  4017   000164                     C1FIFOUA1       equ	356	;# 
  4018   000164                     C1FIFOUA1L      equ	356	;# 
  4019   000165                     C1FIFOUA1H      equ	357	;# 
  4020   000166                     C1FIFOUA1U      equ	358	;# 
  4021   000167                     C1FIFOUA1T      equ	359	;# 
  4022   000168                     C1FIFOCON2      equ	360	;# 
  4023   000168                     C1FIFOCON2L     equ	360	;# 
  4024   000169                     C1FIFOCON2H     equ	361	;# 
  4025   00016A                     C1FIFOCON2U     equ	362	;# 
  4026   00016B                     C1FIFOCON2T     equ	363	;# 
  4027   00016C                     C1FIFOSTA2      equ	364	;# 
  4028   00016C                     C1FIFOSTA2L     equ	364	;# 
  4029   00016D                     C1FIFOSTA2H     equ	365	;# 
  4030   00016E                     C1FIFOSTA2U     equ	366	;# 
  4031   00016F                     C1FIFOSTA2T     equ	367	;# 
  4032   000170                     C1FIFOUA2       equ	368	;# 
  4033   000170                     C1FIFOUA2L      equ	368	;# 
  4034   000171                     C1FIFOUA2H      equ	369	;# 
  4035   000172                     C1FIFOUA2U      equ	370	;# 
  4036   000173                     C1FIFOUA2T      equ	371	;# 
  4037   000174                     C1FIFOCON3      equ	372	;# 
  4038   000174                     C1FIFOCON3L     equ	372	;# 
  4039   000175                     C1FIFOCON3H     equ	373	;# 
  4040   000176                     C1FIFOCON3U     equ	374	;# 
  4041   000177                     C1FIFOCON3T     equ	375	;# 
  4042   000178                     C1FIFOSTA3      equ	376	;# 
  4043   000178                     C1FIFOSTA3L     equ	376	;# 
  4044   000179                     C1FIFOSTA3H     equ	377	;# 
  4045   00017A                     C1FIFOSTA3U     equ	378	;# 
  4046   00017B                     C1FIFOSTA3T     equ	379	;# 
  4047   00017C                     C1FIFOUA3       equ	380	;# 
  4048   00017C                     C1FIFOUA3L      equ	380	;# 
  4049   00017D                     C1FIFOUA3H      equ	381	;# 
  4050   00017E                     C1FIFOUA3U      equ	382	;# 
  4051   00017F                     C1FIFOUA3T      equ	383	;# 
  4052   000180                     C1FLTCON0L      equ	384	;# 
  4053   000181                     C1FLTCON0H      equ	385	;# 
  4054   000182                     C1FLTCON0U      equ	386	;# 
  4055   000183                     C1FLTCON0T      equ	387	;# 
  4056   000184                     C1FLTCON1L      equ	388	;# 
  4057   000185                     C1FLTCON1H      equ	389	;# 
  4058   000186                     C1FLTCON1U      equ	390	;# 
  4059   000187                     C1FLTCON1T      equ	391	;# 
  4060   000188                     C1FLTCON2L      equ	392	;# 
  4061   000189                     C1FLTCON2H      equ	393	;# 
  4062   00018A                     C1FLTCON2U      equ	394	;# 
  4063   00018B                     C1FLTCON2T      equ	395	;# 
  4064   00018C                     C1FLTOBJ0       equ	396	;# 
  4065   00018C                     C1FLTOBJ0L      equ	396	;# 
  4066   00018D                     C1FLTOBJ0H      equ	397	;# 
  4067   00018E                     C1FLTOBJ0U      equ	398	;# 
  4068   00018F                     C1FLTOBJ0T      equ	399	;# 
  4069   000190                     C1MASK0         equ	400	;# 
  4070   000190                     C1MASK0L        equ	400	;# 
  4071   000191                     C1MASK0H        equ	401	;# 
  4072   000192                     C1MASK0U        equ	402	;# 
  4073   000193                     C1MASK0T        equ	403	;# 
  4074   000194                     C1FLTOBJ1       equ	404	;# 
  4075   000194                     C1FLTOBJ1L      equ	404	;# 
  4076   000195                     C1FLTOBJ1H      equ	405	;# 
  4077   000196                     C1FLTOBJ1U      equ	406	;# 
  4078   000197                     C1FLTOBJ1T      equ	407	;# 
  4079   000198                     C1MASK1         equ	408	;# 
  4080   000198                     C1MASK1L        equ	408	;# 
  4081   000199                     C1MASK1H        equ	409	;# 
  4082   00019A                     C1MASK1U        equ	410	;# 
  4083   00019B                     C1MASK1T        equ	411	;# 
  4084   00019C                     C1FLTOBJ2       equ	412	;# 
  4085   00019C                     C1FLTOBJ2L      equ	412	;# 
  4086   00019D                     C1FLTOBJ2H      equ	413	;# 
  4087   00019E                     C1FLTOBJ2U      equ	414	;# 
  4088   00019F                     C1FLTOBJ2T      equ	415	;# 
  4089   0001A0                     C1MASK2         equ	416	;# 
  4090   0001A0                     C1MASK2L        equ	416	;# 
  4091   0001A1                     C1MASK2H        equ	417	;# 
  4092   0001A2                     C1MASK2U        equ	418	;# 
  4093   0001A3                     C1MASK2T        equ	419	;# 
  4094   0001A4                     C1FLTOBJ3       equ	420	;# 
  4095   0001A4                     C1FLTOBJ3L      equ	420	;# 
  4096   0001A5                     C1FLTOBJ3H      equ	421	;# 
  4097   0001A6                     C1FLTOBJ3U      equ	422	;# 
  4098   0001A7                     C1FLTOBJ3T      equ	423	;# 
  4099   0001A8                     C1MASK3         equ	424	;# 
  4100   0001A8                     C1MASK3L        equ	424	;# 
  4101   0001A9                     C1MASK3H        equ	425	;# 
  4102   0001AA                     C1MASK3U        equ	426	;# 
  4103   0001AB                     C1MASK3T        equ	427	;# 
  4104   0001AC                     C1FLTOBJ4       equ	428	;# 
  4105   0001AC                     C1FLTOBJ4L      equ	428	;# 
  4106   0001AD                     C1FLTOBJ4H      equ	429	;# 
  4107   0001AE                     C1FLTOBJ4U      equ	430	;# 
  4108   0001AF                     C1FLTOBJ4T      equ	431	;# 
  4109   0001B0                     C1MASK4         equ	432	;# 
  4110   0001B0                     C1MASK4L        equ	432	;# 
  4111   0001B1                     C1MASK4H        equ	433	;# 
  4112   0001B2                     C1MASK4U        equ	434	;# 
  4113   0001B3                     C1MASK4T        equ	435	;# 
  4114   0001B4                     C1FLTOBJ5       equ	436	;# 
  4115   0001B4                     C1FLTOBJ5L      equ	436	;# 
  4116   0001B5                     C1FLTOBJ5H      equ	437	;# 
  4117   0001B6                     C1FLTOBJ5U      equ	438	;# 
  4118   0001B7                     C1FLTOBJ5T      equ	439	;# 
  4119   0001B8                     C1MASK5         equ	440	;# 
  4120   0001B8                     C1MASK5L        equ	440	;# 
  4121   0001B9                     C1MASK5H        equ	441	;# 
  4122   0001BA                     C1MASK5U        equ	442	;# 
  4123   0001BB                     C1MASK5T        equ	443	;# 
  4124   0001BC                     C1FLTOBJ6       equ	444	;# 
  4125   0001BC                     C1FLTOBJ6L      equ	444	;# 
  4126   0001BD                     C1FLTOBJ6H      equ	445	;# 
  4127   0001BE                     C1FLTOBJ6U      equ	446	;# 
  4128   0001BF                     C1FLTOBJ6T      equ	447	;# 
  4129   0001C0                     C1MASK6         equ	448	;# 
  4130   0001C0                     C1MASK6L        equ	448	;# 
  4131   0001C1                     C1MASK6H        equ	449	;# 
  4132   0001C2                     C1MASK6U        equ	450	;# 
  4133   0001C3                     C1MASK6T        equ	451	;# 
  4134   0001C4                     C1FLTOBJ7       equ	452	;# 
  4135   0001C4                     C1FLTOBJ7L      equ	452	;# 
  4136   0001C5                     C1FLTOBJ7H      equ	453	;# 
  4137   0001C6                     C1FLTOBJ7U      equ	454	;# 
  4138   0001C7                     C1FLTOBJ7T      equ	455	;# 
  4139   0001C8                     C1MASK7         equ	456	;# 
  4140   0001C8                     C1MASK7L        equ	456	;# 
  4141   0001C9                     C1MASK7H        equ	457	;# 
  4142   0001CA                     C1MASK7U        equ	458	;# 
  4143   0001CB                     C1MASK7T        equ	459	;# 
  4144   0001CC                     C1FLTOBJ8       equ	460	;# 
  4145   0001CC                     C1FLTOBJ8L      equ	460	;# 
  4146   0001CD                     C1FLTOBJ8H      equ	461	;# 
  4147   0001CE                     C1FLTOBJ8U      equ	462	;# 
  4148   0001CF                     C1FLTOBJ8T      equ	463	;# 
  4149   0001D0                     C1MASK8         equ	464	;# 
  4150   0001D0                     C1MASK8L        equ	464	;# 
  4151   0001D1                     C1MASK8H        equ	465	;# 
  4152   0001D2                     C1MASK8U        equ	466	;# 
  4153   0001D3                     C1MASK8T        equ	467	;# 
  4154   0001D4                     C1FLTOBJ9       equ	468	;# 
  4155   0001D4                     C1FLTOBJ9L      equ	468	;# 
  4156   0001D5                     C1FLTOBJ9H      equ	469	;# 
  4157   0001D6                     C1FLTOBJ9U      equ	470	;# 
  4158   0001D7                     C1FLTOBJ9T      equ	471	;# 
  4159   0001D8                     C1MASK9         equ	472	;# 
  4160   0001D8                     C1MASK9L        equ	472	;# 
  4161   0001D9                     C1MASK9H        equ	473	;# 
  4162   0001DA                     C1MASK9U        equ	474	;# 
  4163   0001DB                     C1MASK9T        equ	475	;# 
  4164   0001DC                     C1FLTOBJ10      equ	476	;# 
  4165   0001DC                     C1FLTOBJ10L     equ	476	;# 
  4166   0001DD                     C1FLTOBJ10H     equ	477	;# 
  4167   0001DE                     C1FLTOBJ10U     equ	478	;# 
  4168   0001DF                     C1FLTOBJ10T     equ	479	;# 
  4169   0001E0                     C1MASK10        equ	480	;# 
  4170   0001E0                     C1MASK10L       equ	480	;# 
  4171   0001E1                     C1MASK10H       equ	481	;# 
  4172   0001E2                     C1MASK10U       equ	482	;# 
  4173   0001E3                     C1MASK10T       equ	483	;# 
  4174   0001E4                     C1FLTOBJ11      equ	484	;# 
  4175   0001E4                     C1FLTOBJ11L     equ	484	;# 
  4176   0001E5                     C1FLTOBJ11H     equ	485	;# 
  4177   0001E6                     C1FLTOBJ11U     equ	486	;# 
  4178   0001E7                     C1FLTOBJ11T     equ	487	;# 
  4179   0001E8                     C1MASK11        equ	488	;# 
  4180   0001E8                     C1MASK11L       equ	488	;# 
  4181   0001E9                     C1MASK11H       equ	489	;# 
  4182   0001EA                     C1MASK11U       equ	490	;# 
  4183   0001EB                     C1MASK11T       equ	491	;# 
  4184   000200                     PPSLOCK         equ	512	;# 
  4185   000201                     RA0PPS          equ	513	;# 
  4186   000202                     RA1PPS          equ	514	;# 
  4187   000203                     RA2PPS          equ	515	;# 
  4188   000204                     RA3PPS          equ	516	;# 
  4189   000205                     RA4PPS          equ	517	;# 
  4190   000206                     RA5PPS          equ	518	;# 
  4191   000207                     RA6PPS          equ	519	;# 
  4192   000208                     RA7PPS          equ	520	;# 
  4193   000209                     RB0PPS          equ	521	;# 
  4194   00020A                     RB1PPS          equ	522	;# 
  4195   00020B                     RB2PPS          equ	523	;# 
  4196   00020C                     RB3PPS          equ	524	;# 
  4197   00020D                     RB4PPS          equ	525	;# 
  4198   00020E                     RB5PPS          equ	526	;# 
  4199   00020F                     RB6PPS          equ	527	;# 
  4200   000210                     RB7PPS          equ	528	;# 
  4201   000211                     RC0PPS          equ	529	;# 
  4202   000212                     RC1PPS          equ	530	;# 
  4203   000213                     RC2PPS          equ	531	;# 
  4204   000214                     RC3PPS          equ	532	;# 
  4205   000215                     RC4PPS          equ	533	;# 
  4206   000216                     RC5PPS          equ	534	;# 
  4207   000217                     RC6PPS          equ	535	;# 
  4208   000218                     RC7PPS          equ	536	;# 
  4209   00023D                     CANRXPPS        equ	573	;# 
  4210   00023E                     INT0PPS         equ	574	;# 
  4211   00023F                     INT1PPS         equ	575	;# 
  4212   000240                     INT2PPS         equ	576	;# 
  4213   000241                     T0CKIPPS        equ	577	;# 
  4214   000242                     T1CKIPPS        equ	578	;# 
  4215   000243                     T1GPPS          equ	579	;# 
  4216   000244                     T3CKIPPS        equ	580	;# 
  4217   000245                     T3GPPS          equ	581	;# 
  4218   000246                     T5CKIPPS        equ	582	;# 
  4219   000247                     T5GPPS          equ	583	;# 
  4220   000248                     T2INPPS         equ	584	;# 
  4221   000249                     T4INPPS         equ	585	;# 
  4222   00024A                     T6INPPS         equ	586	;# 
  4223   00024B                     TUIN0PPS        equ	587	;# 
  4224   00024C                     TUIN1PPS        equ	588	;# 
  4225   00024F                     CCP1PPS         equ	591	;# 
  4226   000250                     CCP2PPS         equ	592	;# 
  4227   000251                     CCP3PPS         equ	593	;# 
  4228   000253                     PWM1ERSPPS      equ	595	;# 
  4229   000254                     PWM2ERSPPS      equ	596	;# 
  4230   000255                     PWM3ERSPPS      equ	597	;# 
  4231   000256                     PWM4ERSPPS      equ	598	;# 
  4232   000257                     PWMIN0PPS       equ	599	;# 
  4233   000258                     PWMIN1PPS       equ	600	;# 
  4234   000259                     SMT1WINPPS      equ	601	;# 
  4235   00025A                     SMT1SIGPPS      equ	602	;# 
  4236   00025B                     CWG1PPS         equ	603	;# 
  4237   00025B                     CWG1INPPS       equ	603	;# 
  4238   00025C                     CWG2PPS         equ	604	;# 
  4239   00025C                     CWG2INPPS       equ	604	;# 
  4240   00025D                     CWG3PPS         equ	605	;# 
  4241   00025D                     CWG3INPPS       equ	605	;# 
  4242   00025E                     MD1CARLPPS      equ	606	;# 
  4243   00025E                     MDCARLPPS       equ	606	;# 
  4244   00025F                     MD1CARHPPS      equ	607	;# 
  4245   00025F                     MDCARHPPS       equ	607	;# 
  4246   000260                     MD1SRCPPS       equ	608	;# 
  4247   000260                     MDSRCPPS        equ	608	;# 
  4248   000261                     CLCIN0PPS       equ	609	;# 
  4249   000262                     CLCIN1PPS       equ	610	;# 
  4250   000263                     CLCIN2PPS       equ	611	;# 
  4251   000264                     CLCIN3PPS       equ	612	;# 
  4252   000265                     CLCIN4PPS       equ	613	;# 
  4253   000266                     CLCIN5PPS       equ	614	;# 
  4254   000267                     CLCIN6PPS       equ	615	;# 
  4255   000268                     CLCIN7PPS       equ	616	;# 
  4256   000269                     ADACTPPS        equ	617	;# 
  4257   00026A                     SPI1SCKPPS      equ	618	;# 
  4258   00026B                     SPI1SDIPPS      equ	619	;# 
  4259   00026C                     SPI1SSPPS       equ	620	;# 
  4260   00026D                     SPI2SCKPPS      equ	621	;# 
  4261   00026E                     SPI2SDIPPS      equ	622	;# 
  4262   00026F                     SPI2SSPPS       equ	623	;# 
  4263   000270                     I2C1SDAPPS      equ	624	;# 
  4264   000271                     I2C1SCLPPS      equ	625	;# 
  4265   000272                     U1RXPPS         equ	626	;# 
  4266   000273                     U1CTSPPS        equ	627	;# 
  4267   000274                     U2RXPPS         equ	628	;# 
  4268   000275                     U2CTSPPS        equ	629	;# 
  4269   000276                     U3RXPPS         equ	630	;# 
  4270   000277                     U3CTSPPS        equ	631	;# 
  4271   000278                     U4RXPPS         equ	632	;# 
  4272   000279                     U4CTSPPS        equ	633	;# 
  4273   00027A                     U5RXPPS         equ	634	;# 
  4274   00027B                     U5CTSPPS        equ	635	;# 
  4275   000286                     RC4I2C          equ	646	;# 
  4276   000287                     RC3I2C          equ	647	;# 
  4277   000288                     RB2I2C          equ	648	;# 
  4278   000289                     RB1I2C          equ	649	;# 
  4279   00028A                     I2C1RXB         equ	650	;# 
  4280   00028B                     I2C1TXB         equ	651	;# 
  4281   00028C                     I2C1CNTL        equ	652	;# 
  4282   00028D                     I2C1CNTH        equ	653	;# 
  4283   00028E                     I2C1ADB0        equ	654	;# 
  4284   00028F                     I2C1ADB1        equ	655	;# 
  4285   000290                     I2C1ADR0        equ	656	;# 
  4286   000291                     I2C1ADR1        equ	657	;# 
  4287   000292                     I2C1ADR2        equ	658	;# 
  4288   000293                     I2C1ADR3        equ	659	;# 
  4289   000294                     I2C1CON0        equ	660	;# 
  4290   000295                     I2C1CON1        equ	661	;# 
  4291   000296                     I2C1CON2        equ	662	;# 
  4292   000297                     I2C1ERR         equ	663	;# 
  4293   000298                     I2C1STAT0       equ	664	;# 
  4294   000299                     I2C1STAT1       equ	665	;# 
  4295   00029A                     I2C1PIR         equ	666	;# 
  4296   00029B                     I2C1PIE         equ	667	;# 
  4297   00029C                     I2C1BTO         equ	668	;# 
  4298   00029D                     I2C1BAUD        equ	669	;# 
  4299   00029E                     I2C1CLK         equ	670	;# 
  4300   00029F                     I2C1BTOC        equ	671	;# 
  4301   0002A1                     U1RXB           equ	673	;# 
  4302   0002A1                     U1RXBL          equ	673	;# 
  4303   0002A2                     U1RXCHK         equ	674	;# 
  4304   0002A3                     U1TXB           equ	675	;# 
  4305   0002A3                     U1TXBL          equ	675	;# 
  4306   0002A4                     U1TXCHK         equ	676	;# 
  4307   0002A5                     U1P1            equ	677	;# 
  4308   0002A5                     U1P1L           equ	677	;# 
  4309   0002A6                     U1P1H           equ	678	;# 
  4310   0002A7                     U1P2            equ	679	;# 
  4311   0002A7                     U1P2L           equ	679	;# 
  4312   0002A8                     U1P2H           equ	680	;# 
  4313   0002A9                     U1P3            equ	681	;# 
  4314   0002A9                     U1P3L           equ	681	;# 
  4315   0002AA                     U1P3H           equ	682	;# 
  4316   0002AB                     U1CON0          equ	683	;# 
  4317   0002AC                     U1CON1          equ	684	;# 
  4318   0002AD                     U1CON2          equ	685	;# 
  4319   0002AE                     U1BRG           equ	686	;# 
  4320   0002AE                     U1BRGL          equ	686	;# 
  4321   0002AF                     U1BRGH          equ	687	;# 
  4322   0002B0                     U1FIFO          equ	688	;# 
  4323   0002B1                     U1UIR           equ	689	;# 
  4324   0002B2                     U1ERRIR         equ	690	;# 
  4325   0002B3                     U1ERRIE         equ	691	;# 
  4326   0002B4                     U2RXB           equ	692	;# 
  4327   0002B4                     U2RXBL          equ	692	;# 
  4328   0002B5                     U2RXCHK         equ	693	;# 
  4329   0002B6                     U2TXB           equ	694	;# 
  4330   0002B6                     U2TXBL          equ	694	;# 
  4331   0002B7                     U2TXCHK         equ	695	;# 
  4332   0002B8                     U2P1            equ	696	;# 
  4333   0002B8                     U2P1L           equ	696	;# 
  4334   0002B9                     U2P1H           equ	697	;# 
  4335   0002BA                     U2P2            equ	698	;# 
  4336   0002BA                     U2P2L           equ	698	;# 
  4337   0002BB                     U2P2H           equ	699	;# 
  4338   0002BC                     U2P3            equ	700	;# 
  4339   0002BC                     U2P3L           equ	700	;# 
  4340   0002BD                     U2P3H           equ	701	;# 
  4341   0002BE                     U2CON0          equ	702	;# 
  4342   0002BF                     U2CON1          equ	703	;# 
  4343   0002C0                     U2CON2          equ	704	;# 
  4344   0002C1                     U2BRG           equ	705	;# 
  4345   0002C1                     U2BRGL          equ	705	;# 
  4346   0002C2                     U2BRGH          equ	706	;# 
  4347   0002C3                     U2FIFO          equ	707	;# 
  4348   0002C4                     U2UIR           equ	708	;# 
  4349   0002C5                     U2ERRIR         equ	709	;# 
  4350   0002C6                     U2ERRIE         equ	710	;# 
  4351   0002C7                     U3RXB           equ	711	;# 
  4352   0002C7                     U3RXBL          equ	711	;# 
  4353   0002C9                     U3TXB           equ	713	;# 
  4354   0002C9                     U3TXBL          equ	713	;# 
  4355   0002CB                     U3P1            equ	715	;# 
  4356   0002CB                     U3P1L           equ	715	;# 
  4357   0002CD                     U3P2            equ	717	;# 
  4358   0002CD                     U3P2L           equ	717	;# 
  4359   0002CF                     U3P3            equ	719	;# 
  4360   0002CF                     U3P3L           equ	719	;# 
  4361   0002D1                     U3CON0          equ	721	;# 
  4362   0002D2                     U3CON1          equ	722	;# 
  4363   0002D3                     U3CON2          equ	723	;# 
  4364   0002D4                     U3BRG           equ	724	;# 
  4365   0002D4                     U3BRGL          equ	724	;# 
  4366   0002D5                     U3BRGH          equ	725	;# 
  4367   0002D6                     U3FIFO          equ	726	;# 
  4368   0002D7                     U3UIR           equ	727	;# 
  4369   0002D8                     U3ERRIR         equ	728	;# 
  4370   0002D9                     U3ERRIE         equ	729	;# 
  4371   0002DA                     U4RXB           equ	730	;# 
  4372   0002DA                     U4RXBL          equ	730	;# 
  4373   0002DC                     U4TXB           equ	732	;# 
  4374   0002DC                     U4TXBL          equ	732	;# 
  4375   0002DE                     U4P1            equ	734	;# 
  4376   0002DE                     U4P1L           equ	734	;# 
  4377   0002E0                     U4P2            equ	736	;# 
  4378   0002E0                     U4P2L           equ	736	;# 
  4379   0002E2                     U4P3            equ	738	;# 
  4380   0002E2                     U4P3L           equ	738	;# 
  4381   0002E4                     U4CON0          equ	740	;# 
  4382   0002E5                     U4CON1          equ	741	;# 
  4383   0002E6                     U4CON2          equ	742	;# 
  4384   0002E7                     U4BRG           equ	743	;# 
  4385   0002E7                     U4BRGL          equ	743	;# 
  4386   0002E8                     U4BRGH          equ	744	;# 
  4387   0002E9                     U4FIFO          equ	745	;# 
  4388   0002EA                     U4UIR           equ	746	;# 
  4389   0002EB                     U4ERRIR         equ	747	;# 
  4390   0002EC                     U4ERRIE         equ	748	;# 
  4391   0002ED                     U5RXB           equ	749	;# 
  4392   0002ED                     U5RXBL          equ	749	;# 
  4393   0002EF                     U5TXB           equ	751	;# 
  4394   0002EF                     U5TXBL          equ	751	;# 
  4395   0002F1                     U5P1            equ	753	;# 
  4396   0002F1                     U5P1L           equ	753	;# 
  4397   0002F3                     U5P2            equ	755	;# 
  4398   0002F3                     U5P2L           equ	755	;# 
  4399   0002F5                     U5P3            equ	757	;# 
  4400   0002F5                     U5P3L           equ	757	;# 
  4401   0002F7                     U5CON0          equ	759	;# 
  4402   0002F8                     U5CON1          equ	760	;# 
  4403   0002F9                     U5CON2          equ	761	;# 
  4404   0002FA                     U5BRG           equ	762	;# 
  4405   0002FA                     U5BRGL          equ	762	;# 
  4406   0002FB                     U5BRGH          equ	763	;# 
  4407   0002FC                     U5FIFO          equ	764	;# 
  4408   0002FD                     U5UIR           equ	765	;# 
  4409   0002FE                     U5ERRIR         equ	766	;# 
  4410   0002FF                     U5ERRIE         equ	767	;# 
  4411   000300                     SMT1TMR         equ	768	;# 
  4412   000300                     SMT1TMRL        equ	768	;# 
  4413   000301                     SMT1TMRH        equ	769	;# 
  4414   000302                     SMT1TMRU        equ	770	;# 
  4415   000303                     SMT1CPR         equ	771	;# 
  4416   000303                     SMT1CPRL        equ	771	;# 
  4417   000304                     SMT1CPRH        equ	772	;# 
  4418   000305                     SMT1CPRU        equ	773	;# 
  4419   000306                     SMT1CPW         equ	774	;# 
  4420   000306                     SMT1CPWL        equ	774	;# 
  4421   000307                     SMT1CPWH        equ	775	;# 
  4422   000308                     SMT1CPWU        equ	776	;# 
  4423   000309                     SMT1PR          equ	777	;# 
  4424   000309                     SMT1PRL         equ	777	;# 
  4425   00030A                     SMT1PRH         equ	778	;# 
  4426   00030B                     SMT1PRU         equ	779	;# 
  4427   00030C                     SMT1CON0        equ	780	;# 
  4428   00030D                     SMT1CON1        equ	781	;# 
  4429   00030E                     SMT1STAT        equ	782	;# 
  4430   00030F                     SMT1CLK         equ	783	;# 
  4431   000310                     SMT1SIG         equ	784	;# 
  4432   000311                     SMT1WIN         equ	785	;# 
  4433   000318                     TMR0L           equ	792	;# 
  4434   000318                     TMR0            equ	792	;# 
  4435   000319                     TMR0H           equ	793	;# 
  4436   000319                     PR0             equ	793	;# 
  4437   00031A                     T0CON0          equ	794	;# 
  4438   00031B                     T0CON1          equ	795	;# 
  4439   00031C                     TMR1            equ	796	;# 
  4440   00031C                     TMR1L           equ	796	;# 
  4441   00031D                     TMR1H           equ	797	;# 
  4442   00031E                     T1CON           equ	798	;# 
  4443   00031E                     TMR1CON         equ	798	;# 
  4444   00031F                     T1GCON          equ	799	;# 
  4445   00031F                     TMR1GCON        equ	799	;# 
  4446   000320                     T1GATE          equ	800	;# 
  4447   000320                     TMR1GATE        equ	800	;# 
  4448   000321                     T1CLK           equ	801	;# 
  4449   000321                     TMR1CLK         equ	801	;# 
  4450   000321                     PR1             equ	801	;# 
  4451   000322                     T2TMR           equ	802	;# 
  4452   000322                     TMR2            equ	802	;# 
  4453   000323                     T2PR            equ	803	;# 
  4454   000323                     PR2             equ	803	;# 
  4455   000324                     T2CON           equ	804	;# 
  4456   000325                     T2HLT           equ	805	;# 
  4457   000326                     T2CLKCON        equ	806	;# 
  4458   000326                     T2CLK           equ	806	;# 
  4459   000327                     T2RST           equ	807	;# 
  4460   000328                     TMR3            equ	808	;# 
  4461   000328                     TMR3L           equ	808	;# 
  4462   000329                     TMR3H           equ	809	;# 
  4463   00032A                     T3CON           equ	810	;# 
  4464   00032A                     TMR3CON         equ	810	;# 
  4465   00032B                     T3GCON          equ	811	;# 
  4466   00032B                     TMR3GCON        equ	811	;# 
  4467   00032C                     T3GATE          equ	812	;# 
  4468   00032C                     TMR3GATE        equ	812	;# 
  4469   00032D                     T3CLK           equ	813	;# 
  4470   00032D                     TMR3CLK         equ	813	;# 
  4471   00032D                     PR3             equ	813	;# 
  4472   00032E                     T4TMR           equ	814	;# 
  4473   00032E                     TMR4            equ	814	;# 
  4474   00032F                     T4PR            equ	815	;# 
  4475   00032F                     PR4             equ	815	;# 
  4476   000330                     T4CON           equ	816	;# 
  4477   000331                     T4HLT           equ	817	;# 
  4478   000332                     T4CLKCON        equ	818	;# 
  4479   000332                     T4CLK           equ	818	;# 
  4480   000333                     T4RST           equ	819	;# 
  4481   000334                     TMR5            equ	820	;# 
  4482   000334                     TMR5L           equ	820	;# 
  4483   000335                     TMR5H           equ	821	;# 
  4484   000336                     T5CON           equ	822	;# 
  4485   000336                     TMR5CON         equ	822	;# 
  4486   000337                     T5GCON          equ	823	;# 
  4487   000337                     TMR5GCON        equ	823	;# 
  4488   000338                     T5GATE          equ	824	;# 
  4489   000338                     TMR5GATE        equ	824	;# 
  4490   000339                     T5CLK           equ	825	;# 
  4491   000339                     TMR5CLK         equ	825	;# 
  4492   000339                     PR5             equ	825	;# 
  4493   00033A                     T6TMR           equ	826	;# 
  4494   00033A                     TMR6            equ	826	;# 
  4495   00033B                     T6PR            equ	827	;# 
  4496   00033B                     PR6             equ	827	;# 
  4497   00033C                     T6CON           equ	828	;# 
  4498   00033D                     T6HLT           equ	829	;# 
  4499   00033E                     T6CLKCON        equ	830	;# 
  4500   00033E                     T6CLK           equ	830	;# 
  4501   00033F                     T6RST           equ	831	;# 
  4502   000340                     CCPR1           equ	832	;# 
  4503   000340                     CCPR1L          equ	832	;# 
  4504   000341                     CCPR1H          equ	833	;# 
  4505   000342                     CCP1CON         equ	834	;# 
  4506   000343                     CCP1CAP         equ	835	;# 
  4507   000344                     CCPR2           equ	836	;# 
  4508   000344                     CCPR2L          equ	836	;# 
  4509   000345                     CCPR2H          equ	837	;# 
  4510   000346                     CCP2CON         equ	838	;# 
  4511   000347                     CCP2CAP         equ	839	;# 
  4512   000348                     CCPR3           equ	840	;# 
  4513   000348                     CCPR3L          equ	840	;# 
  4514   000349                     CCPR3H          equ	841	;# 
  4515   00034A                     CCP3CON         equ	842	;# 
  4516   00034B                     CCP3CAP         equ	843	;# 
  4517   00034C                     CCPTMRS0        equ	844	;# 
  4518   00034F                     CRCDATA         equ	847	;# 
  4519   00034F                     CRCDATAL        equ	847	;# 
  4520   000350                     CRCDATAH        equ	848	;# 
  4521   000351                     CRCDATAU        equ	849	;# 
  4522   000352                     CRCDATAT        equ	850	;# 
  4523   000353                     CRCOUT          equ	851	;# 
  4524   000353                     CRCSHFT         equ	851	;# 
  4525   000353                     CRCXOR          equ	851	;# 
  4526   000353                     CRCOUTL         equ	851	;# 
  4527   000353                     CRCSHFTL        equ	851	;# 
  4528   000353                     CRCSHIFTL       equ	851	;# 
  4529   000353                     CRCXORL         equ	851	;# 
  4530   000354                     CRCOUTH         equ	852	;# 
  4531   000354                     CRCSHFTH        equ	852	;# 
  4532   000354                     CRCSHIFTH       equ	852	;# 
  4533   000354                     CRCXORH         equ	852	;# 
  4534   000355                     CRCOUTU         equ	853	;# 
  4535   000355                     CRCSHFTU        equ	853	;# 
  4536   000355                     CRCSHIFTU       equ	853	;# 
  4537   000355                     CRCXORU         equ	853	;# 
  4538   000356                     CRCOUTT         equ	854	;# 
  4539   000356                     CRCSHFTT        equ	854	;# 
  4540   000356                     CRCSHIFTT       equ	854	;# 
  4541   000356                     CRCXORT         equ	854	;# 
  4542   000357                     CRCCON0         equ	855	;# 
  4543   000358                     CRCCON1         equ	856	;# 
  4544   000359                     CRCCON2         equ	857	;# 
  4545   00035A                     SCANLADR        equ	858	;# 
  4546   00035A                     SCANLADRL       equ	858	;# 
  4547   00035B                     SCANLADRH       equ	859	;# 
  4548   00035C                     SCANLADRU       equ	860	;# 
  4549   00035D                     SCANHADR        equ	861	;# 
  4550   00035D                     SCANHADRL       equ	861	;# 
  4551   00035E                     SCANHADRH       equ	862	;# 
  4552   00035F                     SCANHADRU       equ	863	;# 
  4553   000360                     SCANCON0        equ	864	;# 
  4554   000361                     SCANTRIG        equ	865	;# 
  4555   000362                     IPR0            equ	866	;# 
  4556   000363                     IPR1            equ	867	;# 
  4557   000364                     IPR2            equ	868	;# 
  4558   000365                     IPR3            equ	869	;# 
  4559   000366                     IPR4            equ	870	;# 
  4560   000367                     IPR5            equ	871	;# 
  4561   000368                     IPR6            equ	872	;# 
  4562   000369                     IPR7            equ	873	;# 
  4563   00036A                     IPR8            equ	874	;# 
  4564   00036B                     IPR9            equ	875	;# 
  4565   00036C                     IPR10           equ	876	;# 
  4566   00036D                     IPR11           equ	877	;# 
  4567   00036E                     IPR12           equ	878	;# 
  4568   00036F                     IPR13           equ	879	;# 
  4569   000370                     IPR14           equ	880	;# 
  4570   000371                     IPR15           equ	881	;# 
  4571   000373                     STATUS_CSHAD    equ	883	;# 
  4572   000374                     WREG_CSHAD      equ	884	;# 
  4573   000375                     BSR_CSHAD       equ	885	;# 
  4574   000376                     SHADCON         equ	886	;# 
  4575   000377                     STATUS_SHAD     equ	887	;# 
  4576   000378                     WREG_SHAD       equ	888	;# 
  4577   000379                     BSR_SHAD        equ	889	;# 
  4578   00037A                     PCLATH_SHAD     equ	890	;# 
  4579   00037B                     PCLATU_SHAD     equ	891	;# 
  4580   00037C                     FSR0SH          equ	892	;# 
  4581   00037C                     FSR0L_SHAD      equ	892	;# 
  4582   00037D                     FSR0H_SHAD      equ	893	;# 
  4583   00037E                     FSR1SH          equ	894	;# 
  4584   00037E                     FSR1L_SHAD      equ	894	;# 
  4585   00037F                     FSR1H_SHAD      equ	895	;# 
  4586   000380                     FSR2SH          equ	896	;# 
  4587   000380                     FSR2L_SHAD      equ	896	;# 
  4588   000381                     FSR2H_SHAD      equ	897	;# 
  4589   000382                     PRODSH          equ	898	;# 
  4590   000382                     PRODL_SHAD      equ	898	;# 
  4591   000383                     PRODH_SHAD      equ	899	;# 
  4592   000387                     TU16ACON0       equ	903	;# 
  4593   000388                     TU16ACON1       equ	904	;# 
  4594   000389                     TU16AHLT        equ	905	;# 
  4595   00038A                     TU16APS         equ	906	;# 
  4596   00038B                     TU16ATMR        equ	907	;# 
  4597   00038B                     TU16ACR         equ	907	;# 
  4598   00038B                     TU16ATMRL       equ	907	;# 
  4599   00038B                     TU16ACRL        equ	907	;# 
  4600   00038C                     TU16ATMRH       equ	908	;# 
  4601   00038C                     TU16ACRH        equ	908	;# 
  4602   00038D                     TU16APR         equ	909	;# 
  4603   00038D                     TU16APRL        equ	909	;# 
  4604   00038E                     TU16APRH        equ	910	;# 
  4605   00038F                     TU16ACLK        equ	911	;# 
  4606   000390                     TU16AERS        equ	912	;# 
  4607   000393                     TU16BCON0       equ	915	;# 
  4608   000394                     TU16BCON1       equ	916	;# 
  4609   000395                     TU16BHLT        equ	917	;# 
  4610   000396                     TU16BPS         equ	918	;# 
  4611   000397                     TU16BTMR        equ	919	;# 
  4612   000397                     TU16BCR         equ	919	;# 
  4613   000397                     TU16BTMRL       equ	919	;# 
  4614   000397                     TU16BCRL        equ	919	;# 
  4615   000398                     TU16BTMRH       equ	920	;# 
  4616   000398                     TU16BCRH        equ	920	;# 
  4617   000399                     TU16BPR         equ	921	;# 
  4618   000399                     TU16BPRL        equ	921	;# 
  4619   00039A                     TU16BPRH        equ	922	;# 
  4620   00039B                     TU16BCLK        equ	923	;# 
  4621   00039C                     TU16BERS        equ	924	;# 
  4622   0003BB                     TUCHAIN         equ	955	;# 
  4623   0003BC                     CWG1CLK         equ	956	;# 
  4624   0003BC                     CWG1CLKCON      equ	956	;# 
  4625   0003BD                     CWG1ISM         equ	957	;# 
  4626   0003BE                     CWG1DBR         equ	958	;# 
  4627   0003BF                     CWG1DBF         equ	959	;# 
  4628   0003C0                     CWG1CON0        equ	960	;# 
  4629   0003C1                     CWG1CON1        equ	961	;# 
  4630   0003C2                     CWG1AS0         equ	962	;# 
  4631   0003C3                     CWG1AS1         equ	963	;# 
  4632   0003C4                     CWG1STR         equ	964	;# 
  4633   0003C5                     CWG2CLK         equ	965	;# 
  4634   0003C5                     CWG2CLKCON      equ	965	;# 
  4635   0003C6                     CWG2ISM         equ	966	;# 
  4636   0003C7                     CWG2DBR         equ	967	;# 
  4637   0003C8                     CWG2DBF         equ	968	;# 
  4638   0003C9                     CWG2CON0        equ	969	;# 
  4639   0003CA                     CWG2CON1        equ	970	;# 
  4640   0003CB                     CWG2AS0         equ	971	;# 
  4641   0003CC                     CWG2AS1         equ	972	;# 
  4642   0003CD                     CWG2STR         equ	973	;# 
  4643   0003CE                     CWG3CLK         equ	974	;# 
  4644   0003CE                     CWG3CLKCON      equ	974	;# 
  4645   0003CF                     CWG3ISM         equ	975	;# 
  4646   0003D0                     CWG3DBR         equ	976	;# 
  4647   0003D1                     CWG3DBF         equ	977	;# 
  4648   0003D2                     CWG3CON0        equ	978	;# 
  4649   0003D3                     CWG3CON1        equ	979	;# 
  4650   0003D4                     CWG3AS0         equ	980	;# 
  4651   0003D5                     CWG3AS1         equ	981	;# 
  4652   0003D6                     CWG3STR         equ	982	;# 
  4653   0003D7                     FVRCON          equ	983	;# 
  4654   0003D8                     ADCPCON         equ	984	;# 
  4655   0003D8                     ADCP            equ	984	;# 
  4656   0003D9                     ADLTH           equ	985	;# 
  4657   0003D9                     ADLTHL          equ	985	;# 
  4658   0003DA                     ADLTHH          equ	986	;# 
  4659   0003DB                     ADUTH           equ	987	;# 
  4660   0003DB                     ADUTHL          equ	987	;# 
  4661   0003DC                     ADUTHH          equ	988	;# 
  4662   0003DD                     ADERR           equ	989	;# 
  4663   0003DD                     ADERRL          equ	989	;# 
  4664   0003DE                     ADERRH          equ	990	;# 
  4665   0003DF                     ADSTPT          equ	991	;# 
  4666   0003DF                     ADSTPTL         equ	991	;# 
  4667   0003E0                     ADSTPTH         equ	992	;# 
  4668   0003E1                     ADFLTR          equ	993	;# 
  4669   0003E1                     ADFLTRL         equ	993	;# 
  4670   0003E2                     ADFLTRH         equ	994	;# 
  4671   0003E3                     ADACC           equ	995	;# 
  4672   0003E3                     ADACCL          equ	995	;# 
  4673   0003E4                     ADACCH          equ	996	;# 
  4674   0003E5                     ADACCU          equ	997	;# 
  4675   0003E6                     ADCNT           equ	998	;# 
  4676   0003E7                     ADRPT           equ	999	;# 
  4677   0003E8                     ADPREV          equ	1000	;# 
  4678   0003E8                     ADPREVL         equ	1000	;# 
  4679   0003E9                     ADPREVH         equ	1001	;# 
  4680   0003EA                     ADRES           equ	1002	;# 
  4681   0003EA                     ADRESL          equ	1002	;# 
  4682   0003EB                     ADRESH          equ	1003	;# 
  4683   0003EC                     ADPCH           equ	1004	;# 
  4684   0003EE                     ADACQ           equ	1006	;# 
  4685   0003EE                     ADACQL          equ	1006	;# 
  4686   0003EF                     ADACQH          equ	1007	;# 
  4687   0003F0                     ADCAP           equ	1008	;# 
  4688   0003F1                     ADPRE           equ	1009	;# 
  4689   0003F1                     ADPREL          equ	1009	;# 
  4690   0003F2                     ADPREH          equ	1010	;# 
  4691   0003F3                     ADCON0          equ	1011	;# 
  4692   0003F4                     ADCON1          equ	1012	;# 
  4693   0003F5                     ADCON2          equ	1013	;# 
  4694   0003F6                     ADCON3          equ	1014	;# 
  4695   0003F7                     ADSTAT          equ	1015	;# 
  4696   0003F8                     ADREF           equ	1016	;# 
  4697   0003F9                     ADACT           equ	1017	;# 
  4698   0003FA                     ADCLK           equ	1018	;# 
  4699   0003FB                     ADCTX           equ	1019	;# 
  4700   0003FC                     ADCSEL1         equ	1020	;# 
  4701   0003FD                     ADCSEL2         equ	1021	;# 
  4702   0003FE                     ADCSEL3         equ	1022	;# 
  4703   0003FF                     ADCSEL4         equ	1023	;# 
  4704   000400                     ANSELA          equ	1024	;# 
  4705   000401                     WPUA            equ	1025	;# 
  4706   000402                     ODCONA          equ	1026	;# 
  4707   000403                     SLRCONA         equ	1027	;# 
  4708   000404                     INLVLA          equ	1028	;# 
  4709   000405                     IOCAP           equ	1029	;# 
  4710   000406                     IOCAN           equ	1030	;# 
  4711   000407                     IOCAF           equ	1031	;# 
  4712   000408                     ANSELB          equ	1032	;# 
  4713   000409                     WPUB            equ	1033	;# 
  4714   00040A                     ODCONB          equ	1034	;# 
  4715   00040B                     SLRCONB         equ	1035	;# 
  4716   00040C                     INLVLB          equ	1036	;# 
  4717   00040D                     IOCBP           equ	1037	;# 
  4718   00040E                     IOCBN           equ	1038	;# 
  4719   00040F                     IOCBF           equ	1039	;# 
  4720   000410                     ANSELC          equ	1040	;# 
  4721   000411                     WPUC            equ	1041	;# 
  4722   000412                     ODCONC          equ	1042	;# 
  4723   000413                     SLRCONC         equ	1043	;# 
  4724   000414                     INLVLC          equ	1044	;# 
  4725   000415                     IOCCP           equ	1045	;# 
  4726   000416                     IOCCN           equ	1046	;# 
  4727   000417                     IOCCF           equ	1047	;# 
  4728   000421                     WPUE            equ	1057	;# 
  4729   000424                     INLVLE          equ	1060	;# 
  4730   000425                     IOCEP           equ	1061	;# 
  4731   000426                     IOCEN           equ	1062	;# 
  4732   000427                     IOCEF           equ	1063	;# 
  4733   000440                     NCO1ACC         equ	1088	;# 
  4734   000440                     NCO1ACCL        equ	1088	;# 
  4735   000441                     NCO1ACCH        equ	1089	;# 
  4736   000442                     NCO1ACCU        equ	1090	;# 
  4737   000443                     NCO1INC         equ	1091	;# 
  4738   000443                     NCO1INCL        equ	1091	;# 
  4739   000444                     NCO1INCH        equ	1092	;# 
  4740   000445                     NCO1INCU        equ	1093	;# 
  4741   000446                     NCO1CON         equ	1094	;# 
  4742   000447                     NCO1CLK         equ	1095	;# 
  4743   000448                     NCO2ACC         equ	1096	;# 
  4744   000448                     NCO2ACCL        equ	1096	;# 
  4745   000449                     NCO2ACCH        equ	1097	;# 
  4746   00044A                     NCO2ACCU        equ	1098	;# 
  4747   00044B                     NCO2INC         equ	1099	;# 
  4748   00044B                     NCO2INCL        equ	1099	;# 
  4749   00044C                     NCO2INCH        equ	1100	;# 
  4750   00044D                     NCO2INCU        equ	1101	;# 
  4751   00044E                     NCO2CON         equ	1102	;# 
  4752   00044F                     NCO2CLK         equ	1103	;# 
  4753   000450                     NCO3ACC         equ	1104	;# 
  4754   000450                     NCO3ACCL        equ	1104	;# 
  4755   000451                     NCO3ACCH        equ	1105	;# 
  4756   000452                     NCO3ACCU        equ	1106	;# 
  4757   000453                     NCO3INC         equ	1107	;# 
  4758   000453                     NCO3INCL        equ	1107	;# 
  4759   000454                     NCO3INCH        equ	1108	;# 
  4760   000455                     NCO3INCU        equ	1109	;# 
  4761   000456                     NCO3CON         equ	1110	;# 
  4762   000457                     NCO3CLK         equ	1111	;# 
  4763   000458                     FSCMCON         equ	1112	;# 
  4764   000459                     IVTLOCK         equ	1113	;# 
  4765   00045A                     IVTAD           equ	1114	;# 
  4766   00045A                     IVTADL          equ	1114	;# 
  4767   00045B                     IVTADH          equ	1115	;# 
  4768   00045C                     IVTADU          equ	1116	;# 
  4769   00045D                     IVTBASE         equ	1117	;# 
  4770   00045D                     IVTBASEL        equ	1117	;# 
  4771   00045E                     IVTBASEH        equ	1118	;# 
  4772   00045F                     IVTBASEU        equ	1119	;# 
  4773   000460                     PWM1ERS         equ	1120	;# 
  4774   000461                     PWM1CLK         equ	1121	;# 
  4775   000462                     PWM1LDS         equ	1122	;# 
  4776   000463                     PWM1PR          equ	1123	;# 
  4777   000463                     PWM1PRL         equ	1123	;# 
  4778   000464                     PWM1PRH         equ	1124	;# 
  4779   000465                     PWM1CPRE        equ	1125	;# 
  4780   000466                     PWM1PIPOS       equ	1126	;# 
  4781   000467                     PWM1GIR         equ	1127	;# 
  4782   000468                     PWM1GIE         equ	1128	;# 
  4783   000469                     PWM1CON         equ	1129	;# 
  4784   00046A                     PWM1S1CFG       equ	1130	;# 
  4785   00046B                     PWM1S1P1        equ	1131	;# 
  4786   00046B                     PWM1S1P1L       equ	1131	;# 
  4787   00046C                     PWM1S1P1H       equ	1132	;# 
  4788   00046D                     PWM1S1P2        equ	1133	;# 
  4789   00046D                     PWM1S1P2L       equ	1133	;# 
  4790   00046E                     PWM1S1P2H       equ	1134	;# 
  4791   00046F                     PWM2ERS         equ	1135	;# 
  4792   000470                     PWM2CLK         equ	1136	;# 
  4793   000471                     PWM2LDS         equ	1137	;# 
  4794   000472                     PWM2PR          equ	1138	;# 
  4795   000472                     PWM2PRL         equ	1138	;# 
  4796   000473                     PWM2PRH         equ	1139	;# 
  4797   000474                     PWM2CPRE        equ	1140	;# 
  4798   000475                     PWM2PIPOS       equ	1141	;# 
  4799   000476                     PWM2GIR         equ	1142	;# 
  4800   000477                     PWM2GIE         equ	1143	;# 
  4801   000478                     PWM2CON         equ	1144	;# 
  4802   000479                     PWM2S1CFG       equ	1145	;# 
  4803   00047A                     PWM2S1P1        equ	1146	;# 
  4804   00047A                     PWM2S1P1L       equ	1146	;# 
  4805   00047B                     PWM2S1P1H       equ	1147	;# 
  4806   00047C                     PWM2S1P2        equ	1148	;# 
  4807   00047C                     PWM2S1P2L       equ	1148	;# 
  4808   00047D                     PWM2S1P2H       equ	1149	;# 
  4809   00047E                     PWM3ERS         equ	1150	;# 
  4810   00047F                     PWM3CLK         equ	1151	;# 
  4811   000480                     PWM3LDS         equ	1152	;# 
  4812   000481                     PWM3PR          equ	1153	;# 
  4813   000481                     PWM3PRL         equ	1153	;# 
  4814   000482                     PWM3PRH         equ	1154	;# 
  4815   000483                     PWM3CPRE        equ	1155	;# 
  4816   000484                     PWM3PIPOS       equ	1156	;# 
  4817   000485                     PWM3GIR         equ	1157	;# 
  4818   000486                     PWM3GIE         equ	1158	;# 
  4819   000487                     PWM3CON         equ	1159	;# 
  4820   000488                     PWM3S1CFG       equ	1160	;# 
  4821   000489                     PWM3S1P1        equ	1161	;# 
  4822   000489                     PWM3S1P1L       equ	1161	;# 
  4823   00048A                     PWM3S1P1H       equ	1162	;# 
  4824   00048B                     PWM3S1P2        equ	1163	;# 
  4825   00048B                     PWM3S1P2L       equ	1163	;# 
  4826   00048C                     PWM3S1P2H       equ	1164	;# 
  4827   00048D                     PWM4ERS         equ	1165	;# 
  4828   00048E                     PWM4CLK         equ	1166	;# 
  4829   00048F                     PWM4LDS         equ	1167	;# 
  4830   000490                     PWM4PR          equ	1168	;# 
  4831   000490                     PWM4PRL         equ	1168	;# 
  4832   000491                     PWM4PRH         equ	1169	;# 
  4833   000492                     PWM4CPRE        equ	1170	;# 
  4834   000493                     PWM4PIPOS       equ	1171	;# 
  4835   000494                     PWM4GIR         equ	1172	;# 
  4836   000495                     PWM4GIE         equ	1173	;# 
  4837   000496                     PWM4CON         equ	1174	;# 
  4838   000497                     PWM4S1CFG       equ	1175	;# 
  4839   000498                     PWM4S1P1        equ	1176	;# 
  4840   000498                     PWM4S1P1L       equ	1176	;# 
  4841   000499                     PWM4S1P1H       equ	1177	;# 
  4842   00049A                     PWM4S1P2        equ	1178	;# 
  4843   00049A                     PWM4S1P2L       equ	1178	;# 
  4844   00049B                     PWM4S1P2H       equ	1179	;# 
  4845   00049C                     PWMLOAD         equ	1180	;# 
  4846   00049D                     PWMEN           equ	1181	;# 
  4847   00049E                     PIE0            equ	1182	;# 
  4848   00049F                     PIE1            equ	1183	;# 
  4849   0004A0                     PIE2            equ	1184	;# 
  4850   0004A1                     PIE3            equ	1185	;# 
  4851   0004A2                     PIE4            equ	1186	;# 
  4852   0004A3                     PIE5            equ	1187	;# 
  4853   0004A4                     PIE6            equ	1188	;# 
  4854   0004A5                     PIE7            equ	1189	;# 
  4855   0004A6                     PIE8            equ	1190	;# 
  4856   0004A7                     PIE9            equ	1191	;# 
  4857   0004A8                     PIE10           equ	1192	;# 
  4858   0004A9                     PIE11           equ	1193	;# 
  4859   0004AA                     PIE12           equ	1194	;# 
  4860   0004AB                     PIE13           equ	1195	;# 
  4861   0004AC                     PIE14           equ	1196	;# 
  4862   0004AD                     PIE15           equ	1197	;# 
  4863   0004AE                     PIR0            equ	1198	;# 
  4864   0004AF                     PIR1            equ	1199	;# 
  4865   0004B0                     PIR2            equ	1200	;# 
  4866   0004B1                     PIR3            equ	1201	;# 
  4867   0004B2                     PIR4            equ	1202	;# 
  4868   0004B3                     PIR5            equ	1203	;# 
  4869   0004B4                     PIR6            equ	1204	;# 
  4870   0004B5                     PIR7            equ	1205	;# 
  4871   0004B6                     PIR8            equ	1206	;# 
  4872   0004B7                     PIR9            equ	1207	;# 
  4873   0004B8                     PIR10           equ	1208	;# 
  4874   0004B9                     PIR11           equ	1209	;# 
  4875   0004BA                     PIR12           equ	1210	;# 
  4876   0004BB                     PIR13           equ	1211	;# 
  4877   0004BC                     PIR14           equ	1212	;# 
  4878   0004BD                     PIR15           equ	1213	;# 
  4879   0004BE                     LATA            equ	1214	;# 
  4880   0004BF                     LATB            equ	1215	;# 
  4881   0004C0                     LATC            equ	1216	;# 
  4882   0004C6                     TRISA           equ	1222	;# 
  4883   0004C7                     TRISB           equ	1223	;# 
  4884   0004C8                     TRISC           equ	1224	;# 
  4885   0004CA                     TRISE           equ	1226	;# 
  4886   0004CE                     PORTA           equ	1230	;# 
  4887   0004CF                     PORTB           equ	1231	;# 
  4888   0004D0                     PORTC           equ	1232	;# 
  4889   0004D2                     PORTE           equ	1234	;# 
  4890   0004D6                     INTCON0         equ	1238	;# 
  4891   0004D7                     INTCON1         equ	1239	;# 
  4892   0004D8                     STATUS          equ	1240	;# 
  4893   0004D9                     FSR2            equ	1241	;# 
  4894   0004D9                     FSR2L           equ	1241	;# 
  4895   0004DA                     FSR2H           equ	1242	;# 
  4896   0004DB                     PLUSW2          equ	1243	;# 
  4897   0004DC                     PREINC2         equ	1244	;# 
  4898   0004DD                     POSTDEC2        equ	1245	;# 
  4899   0004DE                     POSTINC2        equ	1246	;# 
  4900   0004DF                     INDF2           equ	1247	;# 
  4901   0004E0                     BSR             equ	1248	;# 
  4902   0004E1                     FSR1            equ	1249	;# 
  4903   0004E1                     FSR1L           equ	1249	;# 
  4904   0004E2                     FSR1H           equ	1250	;# 
  4905   0004E3                     PLUSW1          equ	1251	;# 
  4906   0004E4                     PREINC1         equ	1252	;# 
  4907   0004E5                     POSTDEC1        equ	1253	;# 
  4908   0004E6                     POSTINC1        equ	1254	;# 
  4909   0004E7                     INDF1           equ	1255	;# 
  4910   0004E8                     WREG            equ	1256	;# 
  4911   0004E9                     FSR0            equ	1257	;# 
  4912   0004E9                     FSR0L           equ	1257	;# 
  4913   0004EA                     FSR0H           equ	1258	;# 
  4914   0004EB                     PLUSW0          equ	1259	;# 
  4915   0004EC                     PREINC0         equ	1260	;# 
  4916   0004ED                     POSTDEC0        equ	1261	;# 
  4917   0004EE                     POSTINC0        equ	1262	;# 
  4918   0004EF                     INDF0           equ	1263	;# 
  4919   0004F0                     PCON0           equ	1264	;# 
  4920   0004F1                     PCON1           equ	1265	;# 
  4921   0004F2                     CPUDOZE         equ	1266	;# 
  4922   0004F3                     PROD            equ	1267	;# 
  4923   0004F3                     PRODL           equ	1267	;# 
  4924   0004F4                     PRODH           equ	1268	;# 
  4925   0004F5                     TABLAT          equ	1269	;# 
  4926   0004F6                     TBLPTR          equ	1270	;# 
  4927   0004F6                     TBLPTRL         equ	1270	;# 
  4928   0004F7                     TBLPTRH         equ	1271	;# 
  4929   0004F8                     TBLPTRU         equ	1272	;# 
  4930   0004F9                     PCLAT           equ	1273	;# 
  4931   0004F9                     PCL             equ	1273	;# 
  4932   0004FA                     PCLATH          equ	1274	;# 
  4933   0004FB                     PCLATU          equ	1275	;# 
  4934   0004FC                     STKPTR          equ	1276	;# 
  4935   0004FD                     TOS             equ	1277	;# 
  4936   0004FD                     TOSL            equ	1277	;# 
  4937   0004FE                     TOSH            equ	1278	;# 
  4938   0004FF                     TOSU            equ	1279	;# 
  4939   000038                     BOOTREG         equ	56	;# 
  4940   000039                     CLKRCON         equ	57	;# 
  4941   00003A                     CLKRCLK         equ	58	;# 
  4942   000040                     NVMCON0         equ	64	;# 
  4943   000041                     NVMCON1         equ	65	;# 
  4944   000042                     NVMLOCK         equ	66	;# 
  4945   000043                     NVMADR          equ	67	;# 
  4946   000043                     NVMADRL         equ	67	;# 
  4947   000044                     NVMADRH         equ	68	;# 
  4948   000045                     NVMADRU         equ	69	;# 
  4949   000046                     NVMDAT          equ	70	;# 
  4950   000046                     NVMDATL         equ	70	;# 
  4951   000047                     NVMDATH         equ	71	;# 
  4952   000048                     VREGCON         equ	72	;# 
  4953   000049                     BORCON          equ	73	;# 
  4954   00004A                     HLVDCON0        equ	74	;# 
  4955   00004B                     HLVDCON1        equ	75	;# 
  4956   00004C                     ZCDCON          equ	76	;# 
  4957   000060                     PMD0            equ	96	;# 
  4958   000061                     PMD1            equ	97	;# 
  4959   000062                     PMD2            equ	98	;# 
  4960   000063                     PMD3            equ	99	;# 
  4961   000064                     PMD4            equ	100	;# 
  4962   000065                     PMD5            equ	101	;# 
  4963   000066                     PMD6            equ	102	;# 
  4964   000067                     PMD7            equ	103	;# 
  4965   000068                     PMD8            equ	104	;# 
  4966   00006A                     MD1CON0         equ	106	;# 
  4967   00006B                     MD1CON1         equ	107	;# 
  4968   00006C                     MD1SRC          equ	108	;# 
  4969   00006D                     MD1CARL         equ	109	;# 
  4970   00006E                     MD1CARH         equ	110	;# 
  4971   00006F                     CMOUT           equ	111	;# 
  4972   000070                     CM1CON0         equ	112	;# 
  4973   000071                     CM1CON1         equ	113	;# 
  4974   000072                     CM1NCH          equ	114	;# 
  4975   000073                     CM1PCH          equ	115	;# 
  4976   000074                     CM2CON0         equ	116	;# 
  4977   000075                     CM2CON1         equ	117	;# 
  4978   000076                     CM2NCH          equ	118	;# 
  4979   000077                     CM2PCH          equ	119	;# 
  4980   000078                     WDTCON0         equ	120	;# 
  4981   000079                     WDTCON1         equ	121	;# 
  4982   00007A                     WDTPSL          equ	122	;# 
  4983   00007B                     WDTPSH          equ	123	;# 
  4984   00007C                     WDTTMR          equ	124	;# 
  4985   00007D                     DAC1DAT         equ	125	;# 
  4986   00007D                     DAC1DATL        equ	125	;# 
  4987   00007F                     DAC1CON         equ	127	;# 
  4988   000080                     SPI1RXB         equ	128	;# 
  4989   000081                     SPI1TXB         equ	129	;# 
  4990   000082                     SPI1TCNT        equ	130	;# 
  4991   000082                     SPI1TCNTL       equ	130	;# 
  4992   000083                     SPI1TCNTH       equ	131	;# 
  4993   000084                     SPI1CON0        equ	132	;# 
  4994   000085                     SPI1CON1        equ	133	;# 
  4995   000086                     SPI1CON2        equ	134	;# 
  4996   000087                     SPI1STATUS      equ	135	;# 
  4997   000088                     SPI1TWIDTH      equ	136	;# 
  4998   000089                     SPI1BAUD        equ	137	;# 
  4999   00008A                     SPI1INTF        equ	138	;# 
  5000   00008B                     SPI1INTE        equ	139	;# 
  5001   00008C                     SPI1CLK         equ	140	;# 
  5002   00008D                     SPI2RXB         equ	141	;# 
  5003   00008E                     SPI2TXB         equ	142	;# 
  5004   00008F                     SPI2TCNT        equ	143	;# 
  5005   00008F                     SPI2TCNTL       equ	143	;# 
  5006   000090                     SPI2TCNTH       equ	144	;# 
  5007   000091                     SPI2CON0        equ	145	;# 
  5008   000092                     SPI2CON1        equ	146	;# 
  5009   000093                     SPI2CON2        equ	147	;# 
  5010   000094                     SPI2STATUS      equ	148	;# 
  5011   000095                     SPI2TWIDTH      equ	149	;# 
  5012   000096                     SPI2BAUD        equ	150	;# 
  5013   000097                     SPI2INTF        equ	151	;# 
  5014   000098                     SPI2INTE        equ	152	;# 
  5015   000099                     SPI2CLK         equ	153	;# 
  5016   0000AC                     ACTCON          equ	172	;# 
  5017   0000AD                     OSCCON1         equ	173	;# 
  5018   0000AE                     OSCCON2         equ	174	;# 
  5019   0000AF                     OSCCON3         equ	175	;# 
  5020   0000B0                     OSCTUNE         equ	176	;# 
  5021   0000B1                     OSCFRQ          equ	177	;# 
  5022   0000B1                     OSCFREQ         equ	177	;# 
  5023   0000B2                     OSCSTAT         equ	178	;# 
  5024   0000B2                     OSCSTAT1        equ	178	;# 
  5025   0000B3                     OSCEN           equ	179	;# 
  5026   0000B4                     PRLOCK          equ	180	;# 
  5027   0000B5                     SCANPR          equ	181	;# 
  5028   0000B6                     DMA1PR          equ	182	;# 
  5029   0000B7                     DMA2PR          equ	183	;# 
  5030   0000B8                     DMA3PR          equ	184	;# 
  5031   0000B9                     DMA4PR          equ	185	;# 
  5032   0000BA                     DMA5PR          equ	186	;# 
  5033   0000BB                     DMA6PR          equ	187	;# 
  5034   0000BC                     DMA7PR          equ	188	;# 
  5035   0000BD                     DMA8PR          equ	189	;# 
  5036   0000BE                     MAINPR          equ	190	;# 
  5037   0000BF                     ISRPR           equ	191	;# 
  5038   0000D4                     CLCDATA         equ	212	;# 
  5039   0000D5                     CLCSELECT       equ	213	;# 
  5040   0000D6                     CLCnCON         equ	214	;# 
  5041   0000D7                     CLCnPOL         equ	215	;# 
  5042   0000D8                     CLCnSEL0        equ	216	;# 
  5043   0000D9                     CLCnSEL1        equ	217	;# 
  5044   0000DA                     CLCnSEL2        equ	218	;# 
  5045   0000DB                     CLCnSEL3        equ	219	;# 
  5046   0000DC                     CLCnGLS0        equ	220	;# 
  5047   0000DD                     CLCnGLS1        equ	221	;# 
  5048   0000DE                     CLCnGLS2        equ	222	;# 
  5049   0000DF                     CLCnGLS3        equ	223	;# 
  5050   0000E8                     DMASELECT       equ	232	;# 
  5051   0000E9                     DMAnBUF         equ	233	;# 
  5052   0000EA                     DMAnDCNT        equ	234	;# 
  5053   0000EA                     DMAnDCNTL       equ	234	;# 
  5054   0000EB                     DMAnDCNTH       equ	235	;# 
  5055   0000EC                     DMAnDPTR        equ	236	;# 
  5056   0000EC                     DMAnDPTRL       equ	236	;# 
  5057   0000ED                     DMAnDPTRH       equ	237	;# 
  5058   0000EE                     DMAnDSZ         equ	238	;# 
  5059   0000EE                     DMAnDSZL        equ	238	;# 
  5060   0000EF                     DMAnDSZH        equ	239	;# 
  5061   0000F0                     DMAnDSA         equ	240	;# 
  5062   0000F0                     DMAnDSAL        equ	240	;# 
  5063   0000F1                     DMAnDSAH        equ	241	;# 
  5064   0000F2                     DMAnSCNT        equ	242	;# 
  5065   0000F2                     DMAnSCNTL       equ	242	;# 
  5066   0000F3                     DMAnSCNTH       equ	243	;# 
  5067   0000F4                     DMAnSPTR        equ	244	;# 
  5068   0000F4                     DMAnSPTRL       equ	244	;# 
  5069   0000F5                     DMAnSPTRH       equ	245	;# 
  5070   0000F6                     DMAnSPTRU       equ	246	;# 
  5071   0000F7                     DMAnSSZ         equ	247	;# 
  5072   0000F7                     DMAnSSZL        equ	247	;# 
  5073   0000F8                     DMAnSSZH        equ	248	;# 
  5074   0000F9                     DMAnSSA         equ	249	;# 
  5075   0000F9                     DMAnSSAL        equ	249	;# 
  5076   0000FA                     DMAnSSAH        equ	250	;# 
  5077   0000FB                     DMAnSSAU        equ	251	;# 
  5078   0000FC                     DMAnCON0        equ	252	;# 
  5079   0000FD                     DMAnCON1        equ	253	;# 
  5080   0000FE                     DMAnAIRQ        equ	254	;# 
  5081   0000FF                     DMAnSIRQ        equ	255	;# 
  5082   000100                     C1CONL          equ	256	;# 
  5083   000101                     C1CONH          equ	257	;# 
  5084   000102                     C1CONU          equ	258	;# 
  5085   000103                     C1CONT          equ	259	;# 
  5086   000104                     C1NBTCFGL       equ	260	;# 
  5087   000105                     C1NBTCFGH       equ	261	;# 
  5088   000106                     C1NBTCFGU       equ	262	;# 
  5089   000107                     C1NBTCFGT       equ	263	;# 
  5090   000108                     C1DBTCFGL       equ	264	;# 
  5091   000109                     C1DBTCFGH       equ	265	;# 
  5092   00010A                     C1DBTCFGU       equ	266	;# 
  5093   00010B                     C1DBTCFGT       equ	267	;# 
  5094   00010C                     C1TDCL          equ	268	;# 
  5095   00010D                     C1TDCH          equ	269	;# 
  5096   00010E                     C1TDCU          equ	270	;# 
  5097   000110                     C1TBC           equ	272	;# 
  5098   000110                     C1TBCL          equ	272	;# 
  5099   000111                     C1TBCH          equ	273	;# 
  5100   000112                     C1TBCU          equ	274	;# 
  5101   000113                     C1TBCT          equ	275	;# 
  5102   000114                     C1TSCONL        equ	276	;# 
  5103   000115                     C1TSCONH        equ	277	;# 
  5104   000116                     C1TSCONU        equ	278	;# 
  5105   000117                     C1TSCONT        equ	279	;# 
  5106   000118                     C1VECL          equ	280	;# 
  5107   000119                     C1VECH          equ	281	;# 
  5108   00011A                     C1VECU          equ	282	;# 
  5109   00011B                     C1VECT          equ	283	;# 
  5110   00011C                     C1INTL          equ	284	;# 
  5111   00011D                     C1INTH          equ	285	;# 
  5112   00011E                     C1INTU          equ	286	;# 
  5113   00011F                     C1INTT          equ	287	;# 
  5114   000120                     C1RXIF          equ	288	;# 
  5115   000120                     C1RXIFL         equ	288	;# 
  5116   000121                     C1RXIFH         equ	289	;# 
  5117   000122                     C1RXIFU         equ	290	;# 
  5118   000123                     C1RXIFT         equ	291	;# 
  5119   000124                     C1TXIF          equ	292	;# 
  5120   000124                     C1TXIFL         equ	292	;# 
  5121   000125                     C1TXIFH         equ	293	;# 
  5122   000126                     C1TXIFU         equ	294	;# 
  5123   000127                     C1TXIFT         equ	295	;# 
  5124   000128                     C1RXOVIF        equ	296	;# 
  5125   000128                     C1RXOVIFL       equ	296	;# 
  5126   000129                     C1RXOVIFH       equ	297	;# 
  5127   00012A                     C1RXOVIFU       equ	298	;# 
  5128   00012B                     C1RXOVIFT       equ	299	;# 
  5129   00012C                     C1TXATIF        equ	300	;# 
  5130   00012C                     C1TXATIFL       equ	300	;# 
  5131   00012D                     C1TXATIFH       equ	301	;# 
  5132   00012E                     C1TXATIFU       equ	302	;# 
  5133   00012F                     C1TXATIFT       equ	303	;# 
  5134   000130                     C1TXREQ         equ	304	;# 
  5135   000130                     C1TXREQL        equ	304	;# 
  5136   000131                     C1TXREQH        equ	305	;# 
  5137   000132                     C1TXREQU        equ	306	;# 
  5138   000133                     C1TXREQT        equ	307	;# 
  5139   000134                     C1TRECL         equ	308	;# 
  5140   000135                     C1TRECH         equ	309	;# 
  5141   000136                     C1TRECU         equ	310	;# 
  5142   000137                     C1TRECT         equ	311	;# 
  5143   000138                     C1BDIAG0L       equ	312	;# 
  5144   000139                     C1BDIAG0H       equ	313	;# 
  5145   00013C                     C1BDIAG1L       equ	316	;# 
  5146   00013D                     C1BDIAG1H       equ	317	;# 
  5147   00013E                     C1BDIAG1U       equ	318	;# 
  5148   00013F                     C1BDIAG1T       equ	319	;# 
  5149   000140                     C1TEFCONL       equ	320	;# 
  5150   000141                     C1TEFCONH       equ	321	;# 
  5151   000142                     C1TEFCONU       equ	322	;# 
  5152   000143                     C1TEFCONT       equ	323	;# 
  5153   000144                     C1TEFSTAL       equ	324	;# 
  5154   000145                     C1TEFSTAH       equ	325	;# 
  5155   000146                     C1TEFSTAU       equ	326	;# 
  5156   000147                     C1TEFSTAT       equ	327	;# 
  5157   000148                     C1TEFUA         equ	328	;# 
  5158   000148                     C1TEFUAL        equ	328	;# 
  5159   000149                     C1TEFUAH        equ	329	;# 
  5160   00014A                     C1TEFUAU        equ	330	;# 
  5161   00014B                     C1TEFUAT        equ	331	;# 
  5162   00014C                     C1FIFOBA        equ	332	;# 
  5163   00014C                     C1FIFOBAL       equ	332	;# 
  5164   00014D                     C1FIFOBAH       equ	333	;# 
  5165   00014E                     C1FIFOBAU       equ	334	;# 
  5166   00014F                     C1FIFOBAT       equ	335	;# 
  5167   000150                     C1TXQCONL       equ	336	;# 
  5168   000151                     C1TXQCONH       equ	337	;# 
  5169   000152                     C1TXQCONU       equ	338	;# 
  5170   000153                     C1TXQCONT       equ	339	;# 
  5171   000154                     C1TXQSTAL       equ	340	;# 
  5172   000155                     C1TXQSTAH       equ	341	;# 
  5173   000156                     C1TXQSTAU       equ	342	;# 
  5174   000157                     C1TXQSTAT       equ	343	;# 
  5175   000158                     C1TXQUA         equ	344	;# 
  5176   000158                     C1TXQUAL        equ	344	;# 
  5177   000159                     C1TXQUAH        equ	345	;# 
  5178   00015A                     C1TXQUAU        equ	346	;# 
  5179   00015B                     C1TXQUAT        equ	347	;# 
  5180   00015C                     C1FIFOCON1      equ	348	;# 
  5181   00015C                     C1FIFOCON1L     equ	348	;# 
  5182   00015D                     C1FIFOCON1H     equ	349	;# 
  5183   00015E                     C1FIFOCON1U     equ	350	;# 
  5184   00015F                     C1FIFOCON1T     equ	351	;# 
  5185   000160                     C1FIFOSTA1      equ	352	;# 
  5186   000160                     C1FIFOSTA1L     equ	352	;# 
  5187   000161                     C1FIFOSTA1H     equ	353	;# 
  5188   000162                     C1FIFOSTA1U     equ	354	;# 
  5189   000163                     C1FIFOSTA1T     equ	355	;# 
  5190   000164                     C1FIFOUA1       equ	356	;# 
  5191   000164                     C1FIFOUA1L      equ	356	;# 
  5192   000165                     C1FIFOUA1H      equ	357	;# 
  5193   000166                     C1FIFOUA1U      equ	358	;# 
  5194   000167                     C1FIFOUA1T      equ	359	;# 
  5195   000168                     C1FIFOCON2      equ	360	;# 
  5196   000168                     C1FIFOCON2L     equ	360	;# 
  5197   000169                     C1FIFOCON2H     equ	361	;# 
  5198   00016A                     C1FIFOCON2U     equ	362	;# 
  5199   00016B                     C1FIFOCON2T     equ	363	;# 
  5200   00016C                     C1FIFOSTA2      equ	364	;# 
  5201   00016C                     C1FIFOSTA2L     equ	364	;# 
  5202   00016D                     C1FIFOSTA2H     equ	365	;# 
  5203   00016E                     C1FIFOSTA2U     equ	366	;# 
  5204   00016F                     C1FIFOSTA2T     equ	367	;# 
  5205   000170                     C1FIFOUA2       equ	368	;# 
  5206   000170                     C1FIFOUA2L      equ	368	;# 
  5207   000171                     C1FIFOUA2H      equ	369	;# 
  5208   000172                     C1FIFOUA2U      equ	370	;# 
  5209   000173                     C1FIFOUA2T      equ	371	;# 
  5210   000174                     C1FIFOCON3      equ	372	;# 
  5211   000174                     C1FIFOCON3L     equ	372	;# 
  5212   000175                     C1FIFOCON3H     equ	373	;# 
  5213   000176                     C1FIFOCON3U     equ	374	;# 
  5214   000177                     C1FIFOCON3T     equ	375	;# 
  5215   000178                     C1FIFOSTA3      equ	376	;# 
  5216   000178                     C1FIFOSTA3L     equ	376	;# 
  5217   000179                     C1FIFOSTA3H     equ	377	;# 
  5218   00017A                     C1FIFOSTA3U     equ	378	;# 
  5219   00017B                     C1FIFOSTA3T     equ	379	;# 
  5220   00017C                     C1FIFOUA3       equ	380	;# 
  5221   00017C                     C1FIFOUA3L      equ	380	;# 
  5222   00017D                     C1FIFOUA3H      equ	381	;# 
  5223   00017E                     C1FIFOUA3U      equ	382	;# 
  5224   00017F                     C1FIFOUA3T      equ	383	;# 
  5225   000180                     C1FLTCON0L      equ	384	;# 
  5226   000181                     C1FLTCON0H      equ	385	;# 
  5227   000182                     C1FLTCON0U      equ	386	;# 
  5228   000183                     C1FLTCON0T      equ	387	;# 
  5229   000184                     C1FLTCON1L      equ	388	;# 
  5230   000185                     C1FLTCON1H      equ	389	;# 
  5231   000186                     C1FLTCON1U      equ	390	;# 
  5232   000187                     C1FLTCON1T      equ	391	;# 
  5233   000188                     C1FLTCON2L      equ	392	;# 
  5234   000189                     C1FLTCON2H      equ	393	;# 
  5235   00018A                     C1FLTCON2U      equ	394	;# 
  5236   00018B                     C1FLTCON2T      equ	395	;# 
  5237   00018C                     C1FLTOBJ0       equ	396	;# 
  5238   00018C                     C1FLTOBJ0L      equ	396	;# 
  5239   00018D                     C1FLTOBJ0H      equ	397	;# 
  5240   00018E                     C1FLTOBJ0U      equ	398	;# 
  5241   00018F                     C1FLTOBJ0T      equ	399	;# 
  5242   000190                     C1MASK0         equ	400	;# 
  5243   000190                     C1MASK0L        equ	400	;# 
  5244   000191                     C1MASK0H        equ	401	;# 
  5245   000192                     C1MASK0U        equ	402	;# 
  5246   000193                     C1MASK0T        equ	403	;# 
  5247   000194                     C1FLTOBJ1       equ	404	;# 
  5248   000194                     C1FLTOBJ1L      equ	404	;# 
  5249   000195                     C1FLTOBJ1H      equ	405	;# 
  5250   000196                     C1FLTOBJ1U      equ	406	;# 
  5251   000197                     C1FLTOBJ1T      equ	407	;# 
  5252   000198                     C1MASK1         equ	408	;# 
  5253   000198                     C1MASK1L        equ	408	;# 
  5254   000199                     C1MASK1H        equ	409	;# 
  5255   00019A                     C1MASK1U        equ	410	;# 
  5256   00019B                     C1MASK1T        equ	411	;# 
  5257   00019C                     C1FLTOBJ2       equ	412	;# 
  5258   00019C                     C1FLTOBJ2L      equ	412	;# 
  5259   00019D                     C1FLTOBJ2H      equ	413	;# 
  5260   00019E                     C1FLTOBJ2U      equ	414	;# 
  5261   00019F                     C1FLTOBJ2T      equ	415	;# 
  5262   0001A0                     C1MASK2         equ	416	;# 
  5263   0001A0                     C1MASK2L        equ	416	;# 
  5264   0001A1                     C1MASK2H        equ	417	;# 
  5265   0001A2                     C1MASK2U        equ	418	;# 
  5266   0001A3                     C1MASK2T        equ	419	;# 
  5267   0001A4                     C1FLTOBJ3       equ	420	;# 
  5268   0001A4                     C1FLTOBJ3L      equ	420	;# 
  5269   0001A5                     C1FLTOBJ3H      equ	421	;# 
  5270   0001A6                     C1FLTOBJ3U      equ	422	;# 
  5271   0001A7                     C1FLTOBJ3T      equ	423	;# 
  5272   0001A8                     C1MASK3         equ	424	;# 
  5273   0001A8                     C1MASK3L        equ	424	;# 
  5274   0001A9                     C1MASK3H        equ	425	;# 
  5275   0001AA                     C1MASK3U        equ	426	;# 
  5276   0001AB                     C1MASK3T        equ	427	;# 
  5277   0001AC                     C1FLTOBJ4       equ	428	;# 
  5278   0001AC                     C1FLTOBJ4L      equ	428	;# 
  5279   0001AD                     C1FLTOBJ4H      equ	429	;# 
  5280   0001AE                     C1FLTOBJ4U      equ	430	;# 
  5281   0001AF                     C1FLTOBJ4T      equ	431	;# 
  5282   0001B0                     C1MASK4         equ	432	;# 
  5283   0001B0                     C1MASK4L        equ	432	;# 
  5284   0001B1                     C1MASK4H        equ	433	;# 
  5285   0001B2                     C1MASK4U        equ	434	;# 
  5286   0001B3                     C1MASK4T        equ	435	;# 
  5287   0001B4                     C1FLTOBJ5       equ	436	;# 
  5288   0001B4                     C1FLTOBJ5L      equ	436	;# 
  5289   0001B5                     C1FLTOBJ5H      equ	437	;# 
  5290   0001B6                     C1FLTOBJ5U      equ	438	;# 
  5291   0001B7                     C1FLTOBJ5T      equ	439	;# 
  5292   0001B8                     C1MASK5         equ	440	;# 
  5293   0001B8                     C1MASK5L        equ	440	;# 
  5294   0001B9                     C1MASK5H        equ	441	;# 
  5295   0001BA                     C1MASK5U        equ	442	;# 
  5296   0001BB                     C1MASK5T        equ	443	;# 
  5297   0001BC                     C1FLTOBJ6       equ	444	;# 
  5298   0001BC                     C1FLTOBJ6L      equ	444	;# 
  5299   0001BD                     C1FLTOBJ6H      equ	445	;# 
  5300   0001BE                     C1FLTOBJ6U      equ	446	;# 
  5301   0001BF                     C1FLTOBJ6T      equ	447	;# 
  5302   0001C0                     C1MASK6         equ	448	;# 
  5303   0001C0                     C1MASK6L        equ	448	;# 
  5304   0001C1                     C1MASK6H        equ	449	;# 
  5305   0001C2                     C1MASK6U        equ	450	;# 
  5306   0001C3                     C1MASK6T        equ	451	;# 
  5307   0001C4                     C1FLTOBJ7       equ	452	;# 
  5308   0001C4                     C1FLTOBJ7L      equ	452	;# 
  5309   0001C5                     C1FLTOBJ7H      equ	453	;# 
  5310   0001C6                     C1FLTOBJ7U      equ	454	;# 
  5311   0001C7                     C1FLTOBJ7T      equ	455	;# 
  5312   0001C8                     C1MASK7         equ	456	;# 
  5313   0001C8                     C1MASK7L        equ	456	;# 
  5314   0001C9                     C1MASK7H        equ	457	;# 
  5315   0001CA                     C1MASK7U        equ	458	;# 
  5316   0001CB                     C1MASK7T        equ	459	;# 
  5317   0001CC                     C1FLTOBJ8       equ	460	;# 
  5318   0001CC                     C1FLTOBJ8L      equ	460	;# 
  5319   0001CD                     C1FLTOBJ8H      equ	461	;# 
  5320   0001CE                     C1FLTOBJ8U      equ	462	;# 
  5321   0001CF                     C1FLTOBJ8T      equ	463	;# 
  5322   0001D0                     C1MASK8         equ	464	;# 
  5323   0001D0                     C1MASK8L        equ	464	;# 
  5324   0001D1                     C1MASK8H        equ	465	;# 
  5325   0001D2                     C1MASK8U        equ	466	;# 
  5326   0001D3                     C1MASK8T        equ	467	;# 
  5327   0001D4                     C1FLTOBJ9       equ	468	;# 
  5328   0001D4                     C1FLTOBJ9L      equ	468	;# 
  5329   0001D5                     C1FLTOBJ9H      equ	469	;# 
  5330   0001D6                     C1FLTOBJ9U      equ	470	;# 
  5331   0001D7                     C1FLTOBJ9T      equ	471	;# 
  5332   0001D8                     C1MASK9         equ	472	;# 
  5333   0001D8                     C1MASK9L        equ	472	;# 
  5334   0001D9                     C1MASK9H        equ	473	;# 
  5335   0001DA                     C1MASK9U        equ	474	;# 
  5336   0001DB                     C1MASK9T        equ	475	;# 
  5337   0001DC                     C1FLTOBJ10      equ	476	;# 
  5338   0001DC                     C1FLTOBJ10L     equ	476	;# 
  5339   0001DD                     C1FLTOBJ10H     equ	477	;# 
  5340   0001DE                     C1FLTOBJ10U     equ	478	;# 
  5341   0001DF                     C1FLTOBJ10T     equ	479	;# 
  5342   0001E0                     C1MASK10        equ	480	;# 
  5343   0001E0                     C1MASK10L       equ	480	;# 
  5344   0001E1                     C1MASK10H       equ	481	;# 
  5345   0001E2                     C1MASK10U       equ	482	;# 
  5346   0001E3                     C1MASK10T       equ	483	;# 
  5347   0001E4                     C1FLTOBJ11      equ	484	;# 
  5348   0001E4                     C1FLTOBJ11L     equ	484	;# 
  5349   0001E5                     C1FLTOBJ11H     equ	485	;# 
  5350   0001E6                     C1FLTOBJ11U     equ	486	;# 
  5351   0001E7                     C1FLTOBJ11T     equ	487	;# 
  5352   0001E8                     C1MASK11        equ	488	;# 
  5353   0001E8                     C1MASK11L       equ	488	;# 
  5354   0001E9                     C1MASK11H       equ	489	;# 
  5355   0001EA                     C1MASK11U       equ	490	;# 
  5356   0001EB                     C1MASK11T       equ	491	;# 
  5357   000200                     PPSLOCK         equ	512	;# 
  5358   000201                     RA0PPS          equ	513	;# 
  5359   000202                     RA1PPS          equ	514	;# 
  5360   000203                     RA2PPS          equ	515	;# 
  5361   000204                     RA3PPS          equ	516	;# 
  5362   000205                     RA4PPS          equ	517	;# 
  5363   000206                     RA5PPS          equ	518	;# 
  5364   000207                     RA6PPS          equ	519	;# 
  5365   000208                     RA7PPS          equ	520	;# 
  5366   000209                     RB0PPS          equ	521	;# 
  5367   00020A                     RB1PPS          equ	522	;# 
  5368   00020B                     RB2PPS          equ	523	;# 
  5369   00020C                     RB3PPS          equ	524	;# 
  5370   00020D                     RB4PPS          equ	525	;# 
  5371   00020E                     RB5PPS          equ	526	;# 
  5372   00020F                     RB6PPS          equ	527	;# 
  5373   000210                     RB7PPS          equ	528	;# 
  5374   000211                     RC0PPS          equ	529	;# 
  5375   000212                     RC1PPS          equ	530	;# 
  5376   000213                     RC2PPS          equ	531	;# 
  5377   000214                     RC3PPS          equ	532	;# 
  5378   000215                     RC4PPS          equ	533	;# 
  5379   000216                     RC5PPS          equ	534	;# 
  5380   000217                     RC6PPS          equ	535	;# 
  5381   000218                     RC7PPS          equ	536	;# 
  5382   00023D                     CANRXPPS        equ	573	;# 
  5383   00023E                     INT0PPS         equ	574	;# 
  5384   00023F                     INT1PPS         equ	575	;# 
  5385   000240                     INT2PPS         equ	576	;# 
  5386   000241                     T0CKIPPS        equ	577	;# 
  5387   000242                     T1CKIPPS        equ	578	;# 
  5388   000243                     T1GPPS          equ	579	;# 
  5389   000244                     T3CKIPPS        equ	580	;# 
  5390   000245                     T3GPPS          equ	581	;# 
  5391   000246                     T5CKIPPS        equ	582	;# 
  5392   000247                     T5GPPS          equ	583	;# 
  5393   000248                     T2INPPS         equ	584	;# 
  5394   000249                     T4INPPS         equ	585	;# 
  5395   00024A                     T6INPPS         equ	586	;# 
  5396   00024B                     TUIN0PPS        equ	587	;# 
  5397   00024C                     TUIN1PPS        equ	588	;# 
  5398   00024F                     CCP1PPS         equ	591	;# 
  5399   000250                     CCP2PPS         equ	592	;# 
  5400   000251                     CCP3PPS         equ	593	;# 
  5401   000253                     PWM1ERSPPS      equ	595	;# 
  5402   000254                     PWM2ERSPPS      equ	596	;# 
  5403   000255                     PWM3ERSPPS      equ	597	;# 
  5404   000256                     PWM4ERSPPS      equ	598	;# 
  5405   000257                     PWMIN0PPS       equ	599	;# 
  5406   000258                     PWMIN1PPS       equ	600	;# 
  5407   000259                     SMT1WINPPS      equ	601	;# 
  5408   00025A                     SMT1SIGPPS      equ	602	;# 
  5409   00025B                     CWG1PPS         equ	603	;# 
  5410   00025B                     CWG1INPPS       equ	603	;# 
  5411   00025C                     CWG2PPS         equ	604	;# 
  5412   00025C                     CWG2INPPS       equ	604	;# 
  5413   00025D                     CWG3PPS         equ	605	;# 
  5414   00025D                     CWG3INPPS       equ	605	;# 
  5415   00025E                     MD1CARLPPS      equ	606	;# 
  5416   00025E                     MDCARLPPS       equ	606	;# 
  5417   00025F                     MD1CARHPPS      equ	607	;# 
  5418   00025F                     MDCARHPPS       equ	607	;# 
  5419   000260                     MD1SRCPPS       equ	608	;# 
  5420   000260                     MDSRCPPS        equ	608	;# 
  5421   000261                     CLCIN0PPS       equ	609	;# 
  5422   000262                     CLCIN1PPS       equ	610	;# 
  5423   000263                     CLCIN2PPS       equ	611	;# 
  5424   000264                     CLCIN3PPS       equ	612	;# 
  5425   000265                     CLCIN4PPS       equ	613	;# 
  5426   000266                     CLCIN5PPS       equ	614	;# 
  5427   000267                     CLCIN6PPS       equ	615	;# 
  5428   000268                     CLCIN7PPS       equ	616	;# 
  5429   000269                     ADACTPPS        equ	617	;# 
  5430   00026A                     SPI1SCKPPS      equ	618	;# 
  5431   00026B                     SPI1SDIPPS      equ	619	;# 
  5432   00026C                     SPI1SSPPS       equ	620	;# 
  5433   00026D                     SPI2SCKPPS      equ	621	;# 
  5434   00026E                     SPI2SDIPPS      equ	622	;# 
  5435   00026F                     SPI2SSPPS       equ	623	;# 
  5436   000270                     I2C1SDAPPS      equ	624	;# 
  5437   000271                     I2C1SCLPPS      equ	625	;# 
  5438   000272                     U1RXPPS         equ	626	;# 
  5439   000273                     U1CTSPPS        equ	627	;# 
  5440   000274                     U2RXPPS         equ	628	;# 
  5441   000275                     U2CTSPPS        equ	629	;# 
  5442   000276                     U3RXPPS         equ	630	;# 
  5443   000277                     U3CTSPPS        equ	631	;# 
  5444   000278                     U4RXPPS         equ	632	;# 
  5445   000279                     U4CTSPPS        equ	633	;# 
  5446   00027A                     U5RXPPS         equ	634	;# 
  5447   00027B                     U5CTSPPS        equ	635	;# 
  5448   000286                     RC4I2C          equ	646	;# 
  5449   000287                     RC3I2C          equ	647	;# 
  5450   000288                     RB2I2C          equ	648	;# 
  5451   000289                     RB1I2C          equ	649	;# 
  5452   00028A                     I2C1RXB         equ	650	;# 
  5453   00028B                     I2C1TXB         equ	651	;# 
  5454   00028C                     I2C1CNTL        equ	652	;# 
  5455   00028D                     I2C1CNTH        equ	653	;# 
  5456   00028E                     I2C1ADB0        equ	654	;# 
  5457   00028F                     I2C1ADB1        equ	655	;# 
  5458   000290                     I2C1ADR0        equ	656	;# 
  5459   000291                     I2C1ADR1        equ	657	;# 
  5460   000292                     I2C1ADR2        equ	658	;# 
  5461   000293                     I2C1ADR3        equ	659	;# 
  5462   000294                     I2C1CON0        equ	660	;# 
  5463   000295                     I2C1CON1        equ	661	;# 
  5464   000296                     I2C1CON2        equ	662	;# 
  5465   000297                     I2C1ERR         equ	663	;# 
  5466   000298                     I2C1STAT0       equ	664	;# 
  5467   000299                     I2C1STAT1       equ	665	;# 
  5468   00029A                     I2C1PIR         equ	666	;# 
  5469   00029B                     I2C1PIE         equ	667	;# 
  5470   00029C                     I2C1BTO         equ	668	;# 
  5471   00029D                     I2C1BAUD        equ	669	;# 
  5472   00029E                     I2C1CLK         equ	670	;# 
  5473   00029F                     I2C1BTOC        equ	671	;# 
  5474   0002A1                     U1RXB           equ	673	;# 
  5475   0002A1                     U1RXBL          equ	673	;# 
  5476   0002A2                     U1RXCHK         equ	674	;# 
  5477   0002A3                     U1TXB           equ	675	;# 
  5478   0002A3                     U1TXBL          equ	675	;# 
  5479   0002A4                     U1TXCHK         equ	676	;# 
  5480   0002A5                     U1P1            equ	677	;# 
  5481   0002A5                     U1P1L           equ	677	;# 
  5482   0002A6                     U1P1H           equ	678	;# 
  5483   0002A7                     U1P2            equ	679	;# 
  5484   0002A7                     U1P2L           equ	679	;# 
  5485   0002A8                     U1P2H           equ	680	;# 
  5486   0002A9                     U1P3            equ	681	;# 
  5487   0002A9                     U1P3L           equ	681	;# 
  5488   0002AA                     U1P3H           equ	682	;# 
  5489   0002AB                     U1CON0          equ	683	;# 
  5490   0002AC                     U1CON1          equ	684	;# 
  5491   0002AD                     U1CON2          equ	685	;# 
  5492   0002AE                     U1BRG           equ	686	;# 
  5493   0002AE                     U1BRGL          equ	686	;# 
  5494   0002AF                     U1BRGH          equ	687	;# 
  5495   0002B0                     U1FIFO          equ	688	;# 
  5496   0002B1                     U1UIR           equ	689	;# 
  5497   0002B2                     U1ERRIR         equ	690	;# 
  5498   0002B3                     U1ERRIE         equ	691	;# 
  5499   0002B4                     U2RXB           equ	692	;# 
  5500   0002B4                     U2RXBL          equ	692	;# 
  5501   0002B5                     U2RXCHK         equ	693	;# 
  5502   0002B6                     U2TXB           equ	694	;# 
  5503   0002B6                     U2TXBL          equ	694	;# 
  5504   0002B7                     U2TXCHK         equ	695	;# 
  5505   0002B8                     U2P1            equ	696	;# 
  5506   0002B8                     U2P1L           equ	696	;# 
  5507   0002B9                     U2P1H           equ	697	;# 
  5508   0002BA                     U2P2            equ	698	;# 
  5509   0002BA                     U2P2L           equ	698	;# 
  5510   0002BB                     U2P2H           equ	699	;# 
  5511   0002BC                     U2P3            equ	700	;# 
  5512   0002BC                     U2P3L           equ	700	;# 
  5513   0002BD                     U2P3H           equ	701	;# 
  5514   0002BE                     U2CON0          equ	702	;# 
  5515   0002BF                     U2CON1          equ	703	;# 
  5516   0002C0                     U2CON2          equ	704	;# 
  5517   0002C1                     U2BRG           equ	705	;# 
  5518   0002C1                     U2BRGL          equ	705	;# 
  5519   0002C2                     U2BRGH          equ	706	;# 
  5520   0002C3                     U2FIFO          equ	707	;# 
  5521   0002C4                     U2UIR           equ	708	;# 
  5522   0002C5                     U2ERRIR         equ	709	;# 
  5523   0002C6                     U2ERRIE         equ	710	;# 
  5524   0002C7                     U3RXB           equ	711	;# 
  5525   0002C7                     U3RXBL          equ	711	;# 
  5526   0002C9                     U3TXB           equ	713	;# 
  5527   0002C9                     U3TXBL          equ	713	;# 
  5528   0002CB                     U3P1            equ	715	;# 
  5529   0002CB                     U3P1L           equ	715	;# 
  5530   0002CD                     U3P2            equ	717	;# 
  5531   0002CD                     U3P2L           equ	717	;# 
  5532   0002CF                     U3P3            equ	719	;# 
  5533   0002CF                     U3P3L           equ	719	;# 
  5534   0002D1                     U3CON0          equ	721	;# 
  5535   0002D2                     U3CON1          equ	722	;# 
  5536   0002D3                     U3CON2          equ	723	;# 
  5537   0002D4                     U3BRG           equ	724	;# 
  5538   0002D4                     U3BRGL          equ	724	;# 
  5539   0002D5                     U3BRGH          equ	725	;# 
  5540   0002D6                     U3FIFO          equ	726	;# 
  5541   0002D7                     U3UIR           equ	727	;# 
  5542   0002D8                     U3ERRIR         equ	728	;# 
  5543   0002D9                     U3ERRIE         equ	729	;# 
  5544   0002DA                     U4RXB           equ	730	;# 
  5545   0002DA                     U4RXBL          equ	730	;# 
  5546   0002DC                     U4TXB           equ	732	;# 
  5547   0002DC                     U4TXBL          equ	732	;# 
  5548   0002DE                     U4P1            equ	734	;# 
  5549   0002DE                     U4P1L           equ	734	;# 
  5550   0002E0                     U4P2            equ	736	;# 
  5551   0002E0                     U4P2L           equ	736	;# 
  5552   0002E2                     U4P3            equ	738	;# 
  5553   0002E2                     U4P3L           equ	738	;# 
  5554   0002E4                     U4CON0          equ	740	;# 
  5555   0002E5                     U4CON1          equ	741	;# 
  5556   0002E6                     U4CON2          equ	742	;# 
  5557   0002E7                     U4BRG           equ	743	;# 
  5558   0002E7                     U4BRGL          equ	743	;# 
  5559   0002E8                     U4BRGH          equ	744	;# 
  5560   0002E9                     U4FIFO          equ	745	;# 
  5561   0002EA                     U4UIR           equ	746	;# 
  5562   0002EB                     U4ERRIR         equ	747	;# 
  5563   0002EC                     U4ERRIE         equ	748	;# 
  5564   0002ED                     U5RXB           equ	749	;# 
  5565   0002ED                     U5RXBL          equ	749	;# 
  5566   0002EF                     U5TXB           equ	751	;# 
  5567   0002EF                     U5TXBL          equ	751	;# 
  5568   0002F1                     U5P1            equ	753	;# 
  5569   0002F1                     U5P1L           equ	753	;# 
  5570   0002F3                     U5P2            equ	755	;# 
  5571   0002F3                     U5P2L           equ	755	;# 
  5572   0002F5                     U5P3            equ	757	;# 
  5573   0002F5                     U5P3L           equ	757	;# 
  5574   0002F7                     U5CON0          equ	759	;# 
  5575   0002F8                     U5CON1          equ	760	;# 
  5576   0002F9                     U5CON2          equ	761	;# 
  5577   0002FA                     U5BRG           equ	762	;# 
  5578   0002FA                     U5BRGL          equ	762	;# 
  5579   0002FB                     U5BRGH          equ	763	;# 
  5580   0002FC                     U5FIFO          equ	764	;# 
  5581   0002FD                     U5UIR           equ	765	;# 
  5582   0002FE                     U5ERRIR         equ	766	;# 
  5583   0002FF                     U5ERRIE         equ	767	;# 
  5584   000300                     SMT1TMR         equ	768	;# 
  5585   000300                     SMT1TMRL        equ	768	;# 
  5586   000301                     SMT1TMRH        equ	769	;# 
  5587   000302                     SMT1TMRU        equ	770	;# 
  5588   000303                     SMT1CPR         equ	771	;# 
  5589   000303                     SMT1CPRL        equ	771	;# 
  5590   000304                     SMT1CPRH        equ	772	;# 
  5591   000305                     SMT1CPRU        equ	773	;# 
  5592   000306                     SMT1CPW         equ	774	;# 
  5593   000306                     SMT1CPWL        equ	774	;# 
  5594   000307                     SMT1CPWH        equ	775	;# 
  5595   000308                     SMT1CPWU        equ	776	;# 
  5596   000309                     SMT1PR          equ	777	;# 
  5597   000309                     SMT1PRL         equ	777	;# 
  5598   00030A                     SMT1PRH         equ	778	;# 
  5599   00030B                     SMT1PRU         equ	779	;# 
  5600   00030C                     SMT1CON0        equ	780	;# 
  5601   00030D                     SMT1CON1        equ	781	;# 
  5602   00030E                     SMT1STAT        equ	782	;# 
  5603   00030F                     SMT1CLK         equ	783	;# 
  5604   000310                     SMT1SIG         equ	784	;# 
  5605   000311                     SMT1WIN         equ	785	;# 
  5606   000318                     TMR0L           equ	792	;# 
  5607   000318                     TMR0            equ	792	;# 
  5608   000319                     TMR0H           equ	793	;# 
  5609   000319                     PR0             equ	793	;# 
  5610   00031A                     T0CON0          equ	794	;# 
  5611   00031B                     T0CON1          equ	795	;# 
  5612   00031C                     TMR1            equ	796	;# 
  5613   00031C                     TMR1L           equ	796	;# 
  5614   00031D                     TMR1H           equ	797	;# 
  5615   00031E                     T1CON           equ	798	;# 
  5616   00031E                     TMR1CON         equ	798	;# 
  5617   00031F                     T1GCON          equ	799	;# 
  5618   00031F                     TMR1GCON        equ	799	;# 
  5619   000320                     T1GATE          equ	800	;# 
  5620   000320                     TMR1GATE        equ	800	;# 
  5621   000321                     T1CLK           equ	801	;# 
  5622   000321                     TMR1CLK         equ	801	;# 
  5623   000321                     PR1             equ	801	;# 
  5624   000322                     T2TMR           equ	802	;# 
  5625   000322                     TMR2            equ	802	;# 
  5626   000323                     T2PR            equ	803	;# 
  5627   000323                     PR2             equ	803	;# 
  5628   000324                     T2CON           equ	804	;# 
  5629   000325                     T2HLT           equ	805	;# 
  5630   000326                     T2CLKCON        equ	806	;# 
  5631   000326                     T2CLK           equ	806	;# 
  5632   000327                     T2RST           equ	807	;# 
  5633   000328                     TMR3            equ	808	;# 
  5634   000328                     TMR3L           equ	808	;# 
  5635   000329                     TMR3H           equ	809	;# 
  5636   00032A                     T3CON           equ	810	;# 
  5637   00032A                     TMR3CON         equ	810	;# 
  5638   00032B                     T3GCON          equ	811	;# 
  5639   00032B                     TMR3GCON        equ	811	;# 
  5640   00032C                     T3GATE          equ	812	;# 
  5641   00032C                     TMR3GATE        equ	812	;# 
  5642   00032D                     T3CLK           equ	813	;# 
  5643   00032D                     TMR3CLK         equ	813	;# 
  5644   00032D                     PR3             equ	813	;# 
  5645   00032E                     T4TMR           equ	814	;# 
  5646   00032E                     TMR4            equ	814	;# 
  5647   00032F                     T4PR            equ	815	;# 
  5648   00032F                     PR4             equ	815	;# 
  5649   000330                     T4CON           equ	816	;# 
  5650   000331                     T4HLT           equ	817	;# 
  5651   000332                     T4CLKCON        equ	818	;# 
  5652   000332                     T4CLK           equ	818	;# 
  5653   000333                     T4RST           equ	819	;# 
  5654   000334                     TMR5            equ	820	;# 
  5655   000334                     TMR5L           equ	820	;# 
  5656   000335                     TMR5H           equ	821	;# 
  5657   000336                     T5CON           equ	822	;# 
  5658   000336                     TMR5CON         equ	822	;# 
  5659   000337                     T5GCON          equ	823	;# 
  5660   000337                     TMR5GCON        equ	823	;# 
  5661   000338                     T5GATE          equ	824	;# 
  5662   000338                     TMR5GATE        equ	824	;# 
  5663   000339                     T5CLK           equ	825	;# 
  5664   000339                     TMR5CLK         equ	825	;# 
  5665   000339                     PR5             equ	825	;# 
  5666   00033A                     T6TMR           equ	826	;# 
  5667   00033A                     TMR6            equ	826	;# 
  5668   00033B                     T6PR            equ	827	;# 
  5669   00033B                     PR6             equ	827	;# 
  5670   00033C                     T6CON           equ	828	;# 
  5671   00033D                     T6HLT           equ	829	;# 
  5672   00033E                     T6CLKCON        equ	830	;# 
  5673   00033E                     T6CLK           equ	830	;# 
  5674   00033F                     T6RST           equ	831	;# 
  5675   000340                     CCPR1           equ	832	;# 
  5676   000340                     CCPR1L          equ	832	;# 
  5677   000341                     CCPR1H          equ	833	;# 
  5678   000342                     CCP1CON         equ	834	;# 
  5679   000343                     CCP1CAP         equ	835	;# 
  5680   000344                     CCPR2           equ	836	;# 
  5681   000344                     CCPR2L          equ	836	;# 
  5682   000345                     CCPR2H          equ	837	;# 
  5683   000346                     CCP2CON         equ	838	;# 
  5684   000347                     CCP2CAP         equ	839	;# 
  5685   000348                     CCPR3           equ	840	;# 
  5686   000348                     CCPR3L          equ	840	;# 
  5687   000349                     CCPR3H          equ	841	;# 
  5688   00034A                     CCP3CON         equ	842	;# 
  5689   00034B                     CCP3CAP         equ	843	;# 
  5690   00034C                     CCPTMRS0        equ	844	;# 
  5691   00034F                     CRCDATA         equ	847	;# 
  5692   00034F                     CRCDATAL        equ	847	;# 
  5693   000350                     CRCDATAH        equ	848	;# 
  5694   000351                     CRCDATAU        equ	849	;# 
  5695   000352                     CRCDATAT        equ	850	;# 
  5696   000353                     CRCOUT          equ	851	;# 
  5697   000353                     CRCSHFT         equ	851	;# 
  5698   000353                     CRCXOR          equ	851	;# 
  5699   000353                     CRCOUTL         equ	851	;# 
  5700   000353                     CRCSHFTL        equ	851	;# 
  5701   000353                     CRCSHIFTL       equ	851	;# 
  5702   000353                     CRCXORL         equ	851	;# 
  5703   000354                     CRCOUTH         equ	852	;# 
  5704   000354                     CRCSHFTH        equ	852	;# 
  5705   000354                     CRCSHIFTH       equ	852	;# 
  5706   000354                     CRCXORH         equ	852	;# 
  5707   000355                     CRCOUTU         equ	853	;# 
  5708   000355                     CRCSHFTU        equ	853	;# 
  5709   000355                     CRCSHIFTU       equ	853	;# 
  5710   000355                     CRCXORU         equ	853	;# 
  5711   000356                     CRCOUTT         equ	854	;# 
  5712   000356                     CRCSHFTT        equ	854	;# 
  5713   000356                     CRCSHIFTT       equ	854	;# 
  5714   000356                     CRCXORT         equ	854	;# 
  5715   000357                     CRCCON0         equ	855	;# 
  5716   000358                     CRCCON1         equ	856	;# 
  5717   000359                     CRCCON2         equ	857	;# 
  5718   00035A                     SCANLADR        equ	858	;# 
  5719   00035A                     SCANLADRL       equ	858	;# 
  5720   00035B                     SCANLADRH       equ	859	;# 
  5721   00035C                     SCANLADRU       equ	860	;# 
  5722   00035D                     SCANHADR        equ	861	;# 
  5723   00035D                     SCANHADRL       equ	861	;# 
  5724   00035E                     SCANHADRH       equ	862	;# 
  5725   00035F                     SCANHADRU       equ	863	;# 
  5726   000360                     SCANCON0        equ	864	;# 
  5727   000361                     SCANTRIG        equ	865	;# 
  5728   000362                     IPR0            equ	866	;# 
  5729   000363                     IPR1            equ	867	;# 
  5730   000364                     IPR2            equ	868	;# 
  5731   000365                     IPR3            equ	869	;# 
  5732   000366                     IPR4            equ	870	;# 
  5733   000367                     IPR5            equ	871	;# 
  5734   000368                     IPR6            equ	872	;# 
  5735   000369                     IPR7            equ	873	;# 
  5736   00036A                     IPR8            equ	874	;# 
  5737   00036B                     IPR9            equ	875	;# 
  5738   00036C                     IPR10           equ	876	;# 
  5739   00036D                     IPR11           equ	877	;# 
  5740   00036E                     IPR12           equ	878	;# 
  5741   00036F                     IPR13           equ	879	;# 
  5742   000370                     IPR14           equ	880	;# 
  5743   000371                     IPR15           equ	881	;# 
  5744   000373                     STATUS_CSHAD    equ	883	;# 
  5745   000374                     WREG_CSHAD      equ	884	;# 
  5746   000375                     BSR_CSHAD       equ	885	;# 
  5747   000376                     SHADCON         equ	886	;# 
  5748   000377                     STATUS_SHAD     equ	887	;# 
  5749   000378                     WREG_SHAD       equ	888	;# 
  5750   000379                     BSR_SHAD        equ	889	;# 
  5751   00037A                     PCLATH_SHAD     equ	890	;# 
  5752   00037B                     PCLATU_SHAD     equ	891	;# 
  5753   00037C                     FSR0SH          equ	892	;# 
  5754   00037C                     FSR0L_SHAD      equ	892	;# 
  5755   00037D                     FSR0H_SHAD      equ	893	;# 
  5756   00037E                     FSR1SH          equ	894	;# 
  5757   00037E                     FSR1L_SHAD      equ	894	;# 
  5758   00037F                     FSR1H_SHAD      equ	895	;# 
  5759   000380                     FSR2SH          equ	896	;# 
  5760   000380                     FSR2L_SHAD      equ	896	;# 
  5761   000381                     FSR2H_SHAD      equ	897	;# 
  5762   000382                     PRODSH          equ	898	;# 
  5763   000382                     PRODL_SHAD      equ	898	;# 
  5764   000383                     PRODH_SHAD      equ	899	;# 
  5765   000387                     TU16ACON0       equ	903	;# 
  5766   000388                     TU16ACON1       equ	904	;# 
  5767   000389                     TU16AHLT        equ	905	;# 
  5768   00038A                     TU16APS         equ	906	;# 
  5769   00038B                     TU16ATMR        equ	907	;# 
  5770   00038B                     TU16ACR         equ	907	;# 
  5771   00038B                     TU16ATMRL       equ	907	;# 
  5772   00038B                     TU16ACRL        equ	907	;# 
  5773   00038C                     TU16ATMRH       equ	908	;# 
  5774   00038C                     TU16ACRH        equ	908	;# 
  5775   00038D                     TU16APR         equ	909	;# 
  5776   00038D                     TU16APRL        equ	909	;# 
  5777   00038E                     TU16APRH        equ	910	;# 
  5778   00038F                     TU16ACLK        equ	911	;# 
  5779   000390                     TU16AERS        equ	912	;# 
  5780   000393                     TU16BCON0       equ	915	;# 
  5781   000394                     TU16BCON1       equ	916	;# 
  5782   000395                     TU16BHLT        equ	917	;# 
  5783   000396                     TU16BPS         equ	918	;# 
  5784   000397                     TU16BTMR        equ	919	;# 
  5785   000397                     TU16BCR         equ	919	;# 
  5786   000397                     TU16BTMRL       equ	919	;# 
  5787   000397                     TU16BCRL        equ	919	;# 
  5788   000398                     TU16BTMRH       equ	920	;# 
  5789   000398                     TU16BCRH        equ	920	;# 
  5790   000399                     TU16BPR         equ	921	;# 
  5791   000399                     TU16BPRL        equ	921	;# 
  5792   00039A                     TU16BPRH        equ	922	;# 
  5793   00039B                     TU16BCLK        equ	923	;# 
  5794   00039C                     TU16BERS        equ	924	;# 
  5795   0003BB                     TUCHAIN         equ	955	;# 
  5796   0003BC                     CWG1CLK         equ	956	;# 
  5797   0003BC                     CWG1CLKCON      equ	956	;# 
  5798   0003BD                     CWG1ISM         equ	957	;# 
  5799   0003BE                     CWG1DBR         equ	958	;# 
  5800   0003BF                     CWG1DBF         equ	959	;# 
  5801   0003C0                     CWG1CON0        equ	960	;# 
  5802   0003C1                     CWG1CON1        equ	961	;# 
  5803   0003C2                     CWG1AS0         equ	962	;# 
  5804   0003C3                     CWG1AS1         equ	963	;# 
  5805   0003C4                     CWG1STR         equ	964	;# 
  5806   0003C5                     CWG2CLK         equ	965	;# 
  5807   0003C5                     CWG2CLKCON      equ	965	;# 
  5808   0003C6                     CWG2ISM         equ	966	;# 
  5809   0003C7                     CWG2DBR         equ	967	;# 
  5810   0003C8                     CWG2DBF         equ	968	;# 
  5811   0003C9                     CWG2CON0        equ	969	;# 
  5812   0003CA                     CWG2CON1        equ	970	;# 
  5813   0003CB                     CWG2AS0         equ	971	;# 
  5814   0003CC                     CWG2AS1         equ	972	;# 
  5815   0003CD                     CWG2STR         equ	973	;# 
  5816   0003CE                     CWG3CLK         equ	974	;# 
  5817   0003CE                     CWG3CLKCON      equ	974	;# 
  5818   0003CF                     CWG3ISM         equ	975	;# 
  5819   0003D0                     CWG3DBR         equ	976	;# 
  5820   0003D1                     CWG3DBF         equ	977	;# 
  5821   0003D2                     CWG3CON0        equ	978	;# 
  5822   0003D3                     CWG3CON1        equ	979	;# 
  5823   0003D4                     CWG3AS0         equ	980	;# 
  5824   0003D5                     CWG3AS1         equ	981	;# 
  5825   0003D6                     CWG3STR         equ	982	;# 
  5826   0003D7                     FVRCON          equ	983	;# 
  5827   0003D8                     ADCPCON         equ	984	;# 
  5828   0003D8                     ADCP            equ	984	;# 
  5829   0003D9                     ADLTH           equ	985	;# 
  5830   0003D9                     ADLTHL          equ	985	;# 
  5831   0003DA                     ADLTHH          equ	986	;# 
  5832   0003DB                     ADUTH           equ	987	;# 
  5833   0003DB                     ADUTHL          equ	987	;# 
  5834   0003DC                     ADUTHH          equ	988	;# 
  5835   0003DD                     ADERR           equ	989	;# 
  5836   0003DD                     ADERRL          equ	989	;# 
  5837   0003DE                     ADERRH          equ	990	;# 
  5838   0003DF                     ADSTPT          equ	991	;# 
  5839   0003DF                     ADSTPTL         equ	991	;# 
  5840   0003E0                     ADSTPTH         equ	992	;# 
  5841   0003E1                     ADFLTR          equ	993	;# 
  5842   0003E1                     ADFLTRL         equ	993	;# 
  5843   0003E2                     ADFLTRH         equ	994	;# 
  5844   0003E3                     ADACC           equ	995	;# 
  5845   0003E3                     ADACCL          equ	995	;# 
  5846   0003E4                     ADACCH          equ	996	;# 
  5847   0003E5                     ADACCU          equ	997	;# 
  5848   0003E6                     ADCNT           equ	998	;# 
  5849   0003E7                     ADRPT           equ	999	;# 
  5850   0003E8                     ADPREV          equ	1000	;# 
  5851   0003E8                     ADPREVL         equ	1000	;# 
  5852   0003E9                     ADPREVH         equ	1001	;# 
  5853   0003EA                     ADRES           equ	1002	;# 
  5854   0003EA                     ADRESL          equ	1002	;# 
  5855   0003EB                     ADRESH          equ	1003	;# 
  5856   0003EC                     ADPCH           equ	1004	;# 
  5857   0003EE                     ADACQ           equ	1006	;# 
  5858   0003EE                     ADACQL          equ	1006	;# 
  5859   0003EF                     ADACQH          equ	1007	;# 
  5860   0003F0                     ADCAP           equ	1008	;# 
  5861   0003F1                     ADPRE           equ	1009	;# 
  5862   0003F1                     ADPREL          equ	1009	;# 
  5863   0003F2                     ADPREH          equ	1010	;# 
  5864   0003F3                     ADCON0          equ	1011	;# 
  5865   0003F4                     ADCON1          equ	1012	;# 
  5866   0003F5                     ADCON2          equ	1013	;# 
  5867   0003F6                     ADCON3          equ	1014	;# 
  5868   0003F7                     ADSTAT          equ	1015	;# 
  5869   0003F8                     ADREF           equ	1016	;# 
  5870   0003F9                     ADACT           equ	1017	;# 
  5871   0003FA                     ADCLK           equ	1018	;# 
  5872   0003FB                     ADCTX           equ	1019	;# 
  5873   0003FC                     ADCSEL1         equ	1020	;# 
  5874   0003FD                     ADCSEL2         equ	1021	;# 
  5875   0003FE                     ADCSEL3         equ	1022	;# 
  5876   0003FF                     ADCSEL4         equ	1023	;# 
  5877   000400                     ANSELA          equ	1024	;# 
  5878   000401                     WPUA            equ	1025	;# 
  5879   000402                     ODCONA          equ	1026	;# 
  5880   000403                     SLRCONA         equ	1027	;# 
  5881   000404                     INLVLA          equ	1028	;# 
  5882   000405                     IOCAP           equ	1029	;# 
  5883   000406                     IOCAN           equ	1030	;# 
  5884   000407                     IOCAF           equ	1031	;# 
  5885   000408                     ANSELB          equ	1032	;# 
  5886   000409                     WPUB            equ	1033	;# 
  5887   00040A                     ODCONB          equ	1034	;# 
  5888   00040B                     SLRCONB         equ	1035	;# 
  5889   00040C                     INLVLB          equ	1036	;# 
  5890   00040D                     IOCBP           equ	1037	;# 
  5891   00040E                     IOCBN           equ	1038	;# 
  5892   00040F                     IOCBF           equ	1039	;# 
  5893   000410                     ANSELC          equ	1040	;# 
  5894   000411                     WPUC            equ	1041	;# 
  5895   000412                     ODCONC          equ	1042	;# 
  5896   000413                     SLRCONC         equ	1043	;# 
  5897   000414                     INLVLC          equ	1044	;# 
  5898   000415                     IOCCP           equ	1045	;# 
  5899   000416                     IOCCN           equ	1046	;# 
  5900   000417                     IOCCF           equ	1047	;# 
  5901   000421                     WPUE            equ	1057	;# 
  5902   000424                     INLVLE          equ	1060	;# 
  5903   000425                     IOCEP           equ	1061	;# 
  5904   000426                     IOCEN           equ	1062	;# 
  5905   000427                     IOCEF           equ	1063	;# 
  5906   000440                     NCO1ACC         equ	1088	;# 
  5907   000440                     NCO1ACCL        equ	1088	;# 
  5908   000441                     NCO1ACCH        equ	1089	;# 
  5909   000442                     NCO1ACCU        equ	1090	;# 
  5910   000443                     NCO1INC         equ	1091	;# 
  5911   000443                     NCO1INCL        equ	1091	;# 
  5912   000444                     NCO1INCH        equ	1092	;# 
  5913   000445                     NCO1INCU        equ	1093	;# 
  5914   000446                     NCO1CON         equ	1094	;# 
  5915   000447                     NCO1CLK         equ	1095	;# 
  5916   000448                     NCO2ACC         equ	1096	;# 
  5917   000448                     NCO2ACCL        equ	1096	;# 
  5918   000449                     NCO2ACCH        equ	1097	;# 
  5919   00044A                     NCO2ACCU        equ	1098	;# 
  5920   00044B                     NCO2INC         equ	1099	;# 
  5921   00044B                     NCO2INCL        equ	1099	;# 
  5922   00044C                     NCO2INCH        equ	1100	;# 
  5923   00044D                     NCO2INCU        equ	1101	;# 
  5924   00044E                     NCO2CON         equ	1102	;# 
  5925   00044F                     NCO2CLK         equ	1103	;# 
  5926   000450                     NCO3ACC         equ	1104	;# 
  5927   000450                     NCO3ACCL        equ	1104	;# 
  5928   000451                     NCO3ACCH        equ	1105	;# 
  5929   000452                     NCO3ACCU        equ	1106	;# 
  5930   000453                     NCO3INC         equ	1107	;# 
  5931   000453                     NCO3INCL        equ	1107	;# 
  5932   000454                     NCO3INCH        equ	1108	;# 
  5933   000455                     NCO3INCU        equ	1109	;# 
  5934   000456                     NCO3CON         equ	1110	;# 
  5935   000457                     NCO3CLK         equ	1111	;# 
  5936   000458                     FSCMCON         equ	1112	;# 
  5937   000459                     IVTLOCK         equ	1113	;# 
  5938   00045A                     IVTAD           equ	1114	;# 
  5939   00045A                     IVTADL          equ	1114	;# 
  5940   00045B                     IVTADH          equ	1115	;# 
  5941   00045C                     IVTADU          equ	1116	;# 
  5942   00045D                     IVTBASE         equ	1117	;# 
  5943   00045D                     IVTBASEL        equ	1117	;# 
  5944   00045E                     IVTBASEH        equ	1118	;# 
  5945   00045F                     IVTBASEU        equ	1119	;# 
  5946   000460                     PWM1ERS         equ	1120	;# 
  5947   000461                     PWM1CLK         equ	1121	;# 
  5948   000462                     PWM1LDS         equ	1122	;# 
  5949   000463                     PWM1PR          equ	1123	;# 
  5950   000463                     PWM1PRL         equ	1123	;# 
  5951   000464                     PWM1PRH         equ	1124	;# 
  5952   000465                     PWM1CPRE        equ	1125	;# 
  5953   000466                     PWM1PIPOS       equ	1126	;# 
  5954   000467                     PWM1GIR         equ	1127	;# 
  5955   000468                     PWM1GIE         equ	1128	;# 
  5956   000469                     PWM1CON         equ	1129	;# 
  5957   00046A                     PWM1S1CFG       equ	1130	;# 
  5958   00046B                     PWM1S1P1        equ	1131	;# 
  5959   00046B                     PWM1S1P1L       equ	1131	;# 
  5960   00046C                     PWM1S1P1H       equ	1132	;# 
  5961   00046D                     PWM1S1P2        equ	1133	;# 
  5962   00046D                     PWM1S1P2L       equ	1133	;# 
  5963   00046E                     PWM1S1P2H       equ	1134	;# 
  5964   00046F                     PWM2ERS         equ	1135	;# 
  5965   000470                     PWM2CLK         equ	1136	;# 
  5966   000471                     PWM2LDS         equ	1137	;# 
  5967   000472                     PWM2PR          equ	1138	;# 
  5968   000472                     PWM2PRL         equ	1138	;# 
  5969   000473                     PWM2PRH         equ	1139	;# 
  5970   000474                     PWM2CPRE        equ	1140	;# 
  5971   000475                     PWM2PIPOS       equ	1141	;# 
  5972   000476                     PWM2GIR         equ	1142	;# 
  5973   000477                     PWM2GIE         equ	1143	;# 
  5974   000478                     PWM2CON         equ	1144	;# 
  5975   000479                     PWM2S1CFG       equ	1145	;# 
  5976   00047A                     PWM2S1P1        equ	1146	;# 
  5977   00047A                     PWM2S1P1L       equ	1146	;# 
  5978   00047B                     PWM2S1P1H       equ	1147	;# 
  5979   00047C                     PWM2S1P2        equ	1148	;# 
  5980   00047C                     PWM2S1P2L       equ	1148	;# 
  5981   00047D                     PWM2S1P2H       equ	1149	;# 
  5982   00047E                     PWM3ERS         equ	1150	;# 
  5983   00047F                     PWM3CLK         equ	1151	;# 
  5984   000480                     PWM3LDS         equ	1152	;# 
  5985   000481                     PWM3PR          equ	1153	;# 
  5986   000481                     PWM3PRL         equ	1153	;# 
  5987   000482                     PWM3PRH         equ	1154	;# 
  5988   000483                     PWM3CPRE        equ	1155	;# 
  5989   000484                     PWM3PIPOS       equ	1156	;# 
  5990   000485                     PWM3GIR         equ	1157	;# 
  5991   000486                     PWM3GIE         equ	1158	;# 
  5992   000487                     PWM3CON         equ	1159	;# 
  5993   000488                     PWM3S1CFG       equ	1160	;# 
  5994   000489                     PWM3S1P1        equ	1161	;# 
  5995   000489                     PWM3S1P1L       equ	1161	;# 
  5996   00048A                     PWM3S1P1H       equ	1162	;# 
  5997   00048B                     PWM3S1P2        equ	1163	;# 
  5998   00048B                     PWM3S1P2L       equ	1163	;# 
  5999   00048C                     PWM3S1P2H       equ	1164	;# 
  6000   00048D                     PWM4ERS         equ	1165	;# 
  6001   00048E                     PWM4CLK         equ	1166	;# 
  6002   00048F                     PWM4LDS         equ	1167	;# 
  6003   000490                     PWM4PR          equ	1168	;# 
  6004   000490                     PWM4PRL         equ	1168	;# 
  6005   000491                     PWM4PRH         equ	1169	;# 
  6006   000492                     PWM4CPRE        equ	1170	;# 
  6007   000493                     PWM4PIPOS       equ	1171	;# 
  6008   000494                     PWM4GIR         equ	1172	;# 
  6009   000495                     PWM4GIE         equ	1173	;# 
  6010   000496                     PWM4CON         equ	1174	;# 
  6011   000497                     PWM4S1CFG       equ	1175	;# 
  6012   000498                     PWM4S1P1        equ	1176	;# 
  6013   000498                     PWM4S1P1L       equ	1176	;# 
  6014   000499                     PWM4S1P1H       equ	1177	;# 
  6015   00049A                     PWM4S1P2        equ	1178	;# 
  6016   00049A                     PWM4S1P2L       equ	1178	;# 
  6017   00049B                     PWM4S1P2H       equ	1179	;# 
  6018   00049C                     PWMLOAD         equ	1180	;# 
  6019   00049D                     PWMEN           equ	1181	;# 
  6020   00049E                     PIE0            equ	1182	;# 
  6021   00049F                     PIE1            equ	1183	;# 
  6022   0004A0                     PIE2            equ	1184	;# 
  6023   0004A1                     PIE3            equ	1185	;# 
  6024   0004A2                     PIE4            equ	1186	;# 
  6025   0004A3                     PIE5            equ	1187	;# 
  6026   0004A4                     PIE6            equ	1188	;# 
  6027   0004A5                     PIE7            equ	1189	;# 
  6028   0004A6                     PIE8            equ	1190	;# 
  6029   0004A7                     PIE9            equ	1191	;# 
  6030   0004A8                     PIE10           equ	1192	;# 
  6031   0004A9                     PIE11           equ	1193	;# 
  6032   0004AA                     PIE12           equ	1194	;# 
  6033   0004AB                     PIE13           equ	1195	;# 
  6034   0004AC                     PIE14           equ	1196	;# 
  6035   0004AD                     PIE15           equ	1197	;# 
  6036   0004AE                     PIR0            equ	1198	;# 
  6037   0004AF                     PIR1            equ	1199	;# 
  6038   0004B0                     PIR2            equ	1200	;# 
  6039   0004B1                     PIR3            equ	1201	;# 
  6040   0004B2                     PIR4            equ	1202	;# 
  6041   0004B3                     PIR5            equ	1203	;# 
  6042   0004B4                     PIR6            equ	1204	;# 
  6043   0004B5                     PIR7            equ	1205	;# 
  6044   0004B6                     PIR8            equ	1206	;# 
  6045   0004B7                     PIR9            equ	1207	;# 
  6046   0004B8                     PIR10           equ	1208	;# 
  6047   0004B9                     PIR11           equ	1209	;# 
  6048   0004BA                     PIR12           equ	1210	;# 
  6049   0004BB                     PIR13           equ	1211	;# 
  6050   0004BC                     PIR14           equ	1212	;# 
  6051   0004BD                     PIR15           equ	1213	;# 
  6052   0004BE                     LATA            equ	1214	;# 
  6053   0004BF                     LATB            equ	1215	;# 
  6054   0004C0                     LATC            equ	1216	;# 
  6055   0004C6                     TRISA           equ	1222	;# 
  6056   0004C7                     TRISB           equ	1223	;# 
  6057   0004C8                     TRISC           equ	1224	;# 
  6058   0004CA                     TRISE           equ	1226	;# 
  6059   0004CE                     PORTA           equ	1230	;# 
  6060   0004CF                     PORTB           equ	1231	;# 
  6061   0004D0                     PORTC           equ	1232	;# 
  6062   0004D2                     PORTE           equ	1234	;# 
  6063   0004D6                     INTCON0         equ	1238	;# 
  6064   0004D7                     INTCON1         equ	1239	;# 
  6065   0004D8                     STATUS          equ	1240	;# 
  6066   0004D9                     FSR2            equ	1241	;# 
  6067   0004D9                     FSR2L           equ	1241	;# 
  6068   0004DA                     FSR2H           equ	1242	;# 
  6069   0004DB                     PLUSW2          equ	1243	;# 
  6070   0004DC                     PREINC2         equ	1244	;# 
  6071   0004DD                     POSTDEC2        equ	1245	;# 
  6072   0004DE                     POSTINC2        equ	1246	;# 
  6073   0004DF                     INDF2           equ	1247	;# 
  6074   0004E0                     BSR             equ	1248	;# 
  6075   0004E1                     FSR1            equ	1249	;# 
  6076   0004E1                     FSR1L           equ	1249	;# 
  6077   0004E2                     FSR1H           equ	1250	;# 
  6078   0004E3                     PLUSW1          equ	1251	;# 
  6079   0004E4                     PREINC1         equ	1252	;# 
  6080   0004E5                     POSTDEC1        equ	1253	;# 
  6081   0004E6                     POSTINC1        equ	1254	;# 
  6082   0004E7                     INDF1           equ	1255	;# 
  6083   0004E8                     WREG            equ	1256	;# 
  6084   0004E9                     FSR0            equ	1257	;# 
  6085   0004E9                     FSR0L           equ	1257	;# 
  6086   0004EA                     FSR0H           equ	1258	;# 
  6087   0004EB                     PLUSW0          equ	1259	;# 
  6088   0004EC                     PREINC0         equ	1260	;# 
  6089   0004ED                     POSTDEC0        equ	1261	;# 
  6090   0004EE                     POSTINC0        equ	1262	;# 
  6091   0004EF                     INDF0           equ	1263	;# 
  6092   0004F0                     PCON0           equ	1264	;# 
  6093   0004F1                     PCON1           equ	1265	;# 
  6094   0004F2                     CPUDOZE         equ	1266	;# 
  6095   0004F3                     PROD            equ	1267	;# 
  6096   0004F3                     PRODL           equ	1267	;# 
  6097   0004F4                     PRODH           equ	1268	;# 
  6098   0004F5                     TABLAT          equ	1269	;# 
  6099   0004F6                     TBLPTR          equ	1270	;# 
  6100   0004F6                     TBLPTRL         equ	1270	;# 
  6101   0004F7                     TBLPTRH         equ	1271	;# 
  6102   0004F8                     TBLPTRU         equ	1272	;# 
  6103   0004F9                     PCLAT           equ	1273	;# 
  6104   0004F9                     PCL             equ	1273	;# 
  6105   0004FA                     PCLATH          equ	1274	;# 
  6106   0004FB                     PCLATU          equ	1275	;# 
  6107   0004FC                     STKPTR          equ	1276	;# 
  6108   0004FD                     TOS             equ	1277	;# 
  6109   0004FD                     TOSL            equ	1277	;# 
  6110   0004FE                     TOSH            equ	1278	;# 
  6111   0004FF                     TOSU            equ	1279	;# 
  6112                           
  6113                           	psect	eeprom_data
  6114   3803FF                     	org	1023	;# 
  6115   3803FF  00                 	db	0	;# 
  6116   000038                     BOOTREG         equ	56	;# 
  6117   000039                     CLKRCON         equ	57	;# 
  6118   00003A                     CLKRCLK         equ	58	;# 
  6119   000040                     NVMCON0         equ	64	;# 
  6120   000041                     NVMCON1         equ	65	;# 
  6121   000042                     NVMLOCK         equ	66	;# 
  6122   000043                     NVMADR          equ	67	;# 
  6123   000043                     NVMADRL         equ	67	;# 
  6124   000044                     NVMADRH         equ	68	;# 
  6125   000045                     NVMADRU         equ	69	;# 
  6126   000046                     NVMDAT          equ	70	;# 
  6127   000046                     NVMDATL         equ	70	;# 
  6128   000047                     NVMDATH         equ	71	;# 
  6129   000048                     VREGCON         equ	72	;# 
  6130   000049                     BORCON          equ	73	;# 
  6131   00004A                     HLVDCON0        equ	74	;# 
  6132   00004B                     HLVDCON1        equ	75	;# 
  6133   00004C                     ZCDCON          equ	76	;# 
  6134   000060                     PMD0            equ	96	;# 
  6135   000061                     PMD1            equ	97	;# 
  6136   000062                     PMD2            equ	98	;# 
  6137   000063                     PMD3            equ	99	;# 
  6138   000064                     PMD4            equ	100	;# 
  6139   000065                     PMD5            equ	101	;# 
  6140   000066                     PMD6            equ	102	;# 
  6141   000067                     PMD7            equ	103	;# 
  6142   000068                     PMD8            equ	104	;# 
  6143   00006A                     MD1CON0         equ	106	;# 
  6144   00006B                     MD1CON1         equ	107	;# 
  6145   00006C                     MD1SRC          equ	108	;# 
  6146   00006D                     MD1CARL         equ	109	;# 
  6147   00006E                     MD1CARH         equ	110	;# 
  6148   00006F                     CMOUT           equ	111	;# 
  6149   000070                     CM1CON0         equ	112	;# 
  6150   000071                     CM1CON1         equ	113	;# 
  6151   000072                     CM1NCH          equ	114	;# 
  6152   000073                     CM1PCH          equ	115	;# 
  6153   000074                     CM2CON0         equ	116	;# 
  6154   000075                     CM2CON1         equ	117	;# 
  6155   000076                     CM2NCH          equ	118	;# 
  6156   000077                     CM2PCH          equ	119	;# 
  6157   000078                     WDTCON0         equ	120	;# 
  6158   000079                     WDTCON1         equ	121	;# 
  6159   00007A                     WDTPSL          equ	122	;# 
  6160   00007B                     WDTPSH          equ	123	;# 
  6161   00007C                     WDTTMR          equ	124	;# 
  6162   00007D                     DAC1DAT         equ	125	;# 
  6163   00007D                     DAC1DATL        equ	125	;# 
  6164   00007F                     DAC1CON         equ	127	;# 
  6165   000080                     SPI1RXB         equ	128	;# 
  6166   000081                     SPI1TXB         equ	129	;# 
  6167   000082                     SPI1TCNT        equ	130	;# 
  6168   000082                     SPI1TCNTL       equ	130	;# 
  6169   000083                     SPI1TCNTH       equ	131	;# 
  6170   000084                     SPI1CON0        equ	132	;# 
  6171   000085                     SPI1CON1        equ	133	;# 
  6172   000086                     SPI1CON2        equ	134	;# 
  6173   000087                     SPI1STATUS      equ	135	;# 
  6174   000088                     SPI1TWIDTH      equ	136	;# 
  6175   000089                     SPI1BAUD        equ	137	;# 
  6176   00008A                     SPI1INTF        equ	138	;# 
  6177   00008B                     SPI1INTE        equ	139	;# 
  6178   00008C                     SPI1CLK         equ	140	;# 
  6179   00008D                     SPI2RXB         equ	141	;# 
  6180   00008E                     SPI2TXB         equ	142	;# 
  6181   00008F                     SPI2TCNT        equ	143	;# 
  6182   00008F                     SPI2TCNTL       equ	143	;# 
  6183   000090                     SPI2TCNTH       equ	144	;# 
  6184   000091                     SPI2CON0        equ	145	;# 
  6185   000092                     SPI2CON1        equ	146	;# 
  6186   000093                     SPI2CON2        equ	147	;# 
  6187   000094                     SPI2STATUS      equ	148	;# 
  6188   000095                     SPI2TWIDTH      equ	149	;# 
  6189   000096                     SPI2BAUD        equ	150	;# 
  6190   000097                     SPI2INTF        equ	151	;# 
  6191   000098                     SPI2INTE        equ	152	;# 
  6192   000099                     SPI2CLK         equ	153	;# 
  6193   0000AC                     ACTCON          equ	172	;# 
  6194   0000AD                     OSCCON1         equ	173	;# 
  6195   0000AE                     OSCCON2         equ	174	;# 
  6196   0000AF                     OSCCON3         equ	175	;# 
  6197   0000B0                     OSCTUNE         equ	176	;# 
  6198   0000B1                     OSCFRQ          equ	177	;# 
  6199   0000B1                     OSCFREQ         equ	177	;# 
  6200   0000B2                     OSCSTAT         equ	178	;# 
  6201   0000B2                     OSCSTAT1        equ	178	;# 
  6202   0000B3                     OSCEN           equ	179	;# 
  6203   0000B4                     PRLOCK          equ	180	;# 
  6204   0000B5                     SCANPR          equ	181	;# 
  6205   0000B6                     DMA1PR          equ	182	;# 
  6206   0000B7                     DMA2PR          equ	183	;# 
  6207   0000B8                     DMA3PR          equ	184	;# 
  6208   0000B9                     DMA4PR          equ	185	;# 
  6209   0000BA                     DMA5PR          equ	186	;# 
  6210   0000BB                     DMA6PR          equ	187	;# 
  6211   0000BC                     DMA7PR          equ	188	;# 
  6212   0000BD                     DMA8PR          equ	189	;# 
  6213   0000BE                     MAINPR          equ	190	;# 
  6214   0000BF                     ISRPR           equ	191	;# 
  6215   0000D4                     CLCDATA         equ	212	;# 
  6216   0000D5                     CLCSELECT       equ	213	;# 
  6217   0000D6                     CLCnCON         equ	214	;# 
  6218   0000D7                     CLCnPOL         equ	215	;# 
  6219   0000D8                     CLCnSEL0        equ	216	;# 
  6220   0000D9                     CLCnSEL1        equ	217	;# 
  6221   0000DA                     CLCnSEL2        equ	218	;# 
  6222   0000DB                     CLCnSEL3        equ	219	;# 
  6223   0000DC                     CLCnGLS0        equ	220	;# 
  6224   0000DD                     CLCnGLS1        equ	221	;# 
  6225   0000DE                     CLCnGLS2        equ	222	;# 
  6226   0000DF                     CLCnGLS3        equ	223	;# 
  6227   0000E8                     DMASELECT       equ	232	;# 
  6228   0000E9                     DMAnBUF         equ	233	;# 
  6229   0000EA                     DMAnDCNT        equ	234	;# 
  6230   0000EA                     DMAnDCNTL       equ	234	;# 
  6231   0000EB                     DMAnDCNTH       equ	235	;# 
  6232   0000EC                     DMAnDPTR        equ	236	;# 
  6233   0000EC                     DMAnDPTRL       equ	236	;# 
  6234   0000ED                     DMAnDPTRH       equ	237	;# 
  6235   0000EE                     DMAnDSZ         equ	238	;# 
  6236   0000EE                     DMAnDSZL        equ	238	;# 
  6237   0000EF                     DMAnDSZH        equ	239	;# 
  6238   0000F0                     DMAnDSA         equ	240	;# 
  6239   0000F0                     DMAnDSAL        equ	240	;# 
  6240   0000F1                     DMAnDSAH        equ	241	;# 
  6241   0000F2                     DMAnSCNT        equ	242	;# 
  6242   0000F2                     DMAnSCNTL       equ	242	;# 
  6243   0000F3                     DMAnSCNTH       equ	243	;# 
  6244   0000F4                     DMAnSPTR        equ	244	;# 
  6245   0000F4                     DMAnSPTRL       equ	244	;# 
  6246   0000F5                     DMAnSPTRH       equ	245	;# 
  6247   0000F6                     DMAnSPTRU       equ	246	;# 
  6248   0000F7                     DMAnSSZ         equ	247	;# 
  6249   0000F7                     DMAnSSZL        equ	247	;# 
  6250   0000F8                     DMAnSSZH        equ	248	;# 
  6251   0000F9                     DMAnSSA         equ	249	;# 
  6252   0000F9                     DMAnSSAL        equ	249	;# 
  6253   0000FA                     DMAnSSAH        equ	250	;# 
  6254   0000FB                     DMAnSSAU        equ	251	;# 
  6255   0000FC                     DMAnCON0        equ	252	;# 
  6256   0000FD                     DMAnCON1        equ	253	;# 
  6257   0000FE                     DMAnAIRQ        equ	254	;# 
  6258   0000FF                     DMAnSIRQ        equ	255	;# 
  6259   000100                     C1CONL          equ	256	;# 
  6260   000101                     C1CONH          equ	257	;# 
  6261   000102                     C1CONU          equ	258	;# 
  6262   000103                     C1CONT          equ	259	;# 
  6263   000104                     C1NBTCFGL       equ	260	;# 
  6264   000105                     C1NBTCFGH       equ	261	;# 
  6265   000106                     C1NBTCFGU       equ	262	;# 
  6266   000107                     C1NBTCFGT       equ	263	;# 
  6267   000108                     C1DBTCFGL       equ	264	;# 
  6268   000109                     C1DBTCFGH       equ	265	;# 
  6269   00010A                     C1DBTCFGU       equ	266	;# 
  6270   00010B                     C1DBTCFGT       equ	267	;# 
  6271   00010C                     C1TDCL          equ	268	;# 
  6272   00010D                     C1TDCH          equ	269	;# 
  6273   00010E                     C1TDCU          equ	270	;# 
  6274   000110                     C1TBC           equ	272	;# 
  6275   000110                     C1TBCL          equ	272	;# 
  6276   000111                     C1TBCH          equ	273	;# 
  6277   000112                     C1TBCU          equ	274	;# 
  6278   000113                     C1TBCT          equ	275	;# 
  6279   000114                     C1TSCONL        equ	276	;# 
  6280   000115                     C1TSCONH        equ	277	;# 
  6281   000116                     C1TSCONU        equ	278	;# 
  6282   000117                     C1TSCONT        equ	279	;# 
  6283   000118                     C1VECL          equ	280	;# 
  6284   000119                     C1VECH          equ	281	;# 
  6285   00011A                     C1VECU          equ	282	;# 
  6286   00011B                     C1VECT          equ	283	;# 
  6287   00011C                     C1INTL          equ	284	;# 
  6288   00011D                     C1INTH          equ	285	;# 
  6289   00011E                     C1INTU          equ	286	;# 
  6290   00011F                     C1INTT          equ	287	;# 
  6291   000120                     C1RXIF          equ	288	;# 
  6292   000120                     C1RXIFL         equ	288	;# 
  6293   000121                     C1RXIFH         equ	289	;# 
  6294   000122                     C1RXIFU         equ	290	;# 
  6295   000123                     C1RXIFT         equ	291	;# 
  6296   000124                     C1TXIF          equ	292	;# 
  6297   000124                     C1TXIFL         equ	292	;# 
  6298   000125                     C1TXIFH         equ	293	;# 
  6299   000126                     C1TXIFU         equ	294	;# 
  6300   000127                     C1TXIFT         equ	295	;# 
  6301   000128                     C1RXOVIF        equ	296	;# 
  6302   000128                     C1RXOVIFL       equ	296	;# 
  6303   000129                     C1RXOVIFH       equ	297	;# 
  6304   00012A                     C1RXOVIFU       equ	298	;# 
  6305   00012B                     C1RXOVIFT       equ	299	;# 
  6306   00012C                     C1TXATIF        equ	300	;# 
  6307   00012C                     C1TXATIFL       equ	300	;# 
  6308   00012D                     C1TXATIFH       equ	301	;# 
  6309   00012E                     C1TXATIFU       equ	302	;# 
  6310   00012F                     C1TXATIFT       equ	303	;# 
  6311   000130                     C1TXREQ         equ	304	;# 
  6312   000130                     C1TXREQL        equ	304	;# 
  6313   000131                     C1TXREQH        equ	305	;# 
  6314   000132                     C1TXREQU        equ	306	;# 
  6315   000133                     C1TXREQT        equ	307	;# 
  6316   000134                     C1TRECL         equ	308	;# 
  6317   000135                     C1TRECH         equ	309	;# 
  6318   000136                     C1TRECU         equ	310	;# 
  6319   000137                     C1TRECT         equ	311	;# 
  6320   000138                     C1BDIAG0L       equ	312	;# 
  6321   000139                     C1BDIAG0H       equ	313	;# 
  6322   00013C                     C1BDIAG1L       equ	316	;# 
  6323   00013D                     C1BDIAG1H       equ	317	;# 
  6324   00013E                     C1BDIAG1U       equ	318	;# 
  6325   00013F                     C1BDIAG1T       equ	319	;# 
  6326   000140                     C1TEFCONL       equ	320	;# 
  6327   000141                     C1TEFCONH       equ	321	;# 
  6328   000142                     C1TEFCONU       equ	322	;# 
  6329   000143                     C1TEFCONT       equ	323	;# 
  6330   000144                     C1TEFSTAL       equ	324	;# 
  6331   000145                     C1TEFSTAH       equ	325	;# 
  6332   000146                     C1TEFSTAU       equ	326	;# 
  6333   000147                     C1TEFSTAT       equ	327	;# 
  6334   000148                     C1TEFUA         equ	328	;# 
  6335   000148                     C1TEFUAL        equ	328	;# 
  6336   000149                     C1TEFUAH        equ	329	;# 
  6337   00014A                     C1TEFUAU        equ	330	;# 
  6338   00014B                     C1TEFUAT        equ	331	;# 
  6339   00014C                     C1FIFOBA        equ	332	;# 
  6340   00014C                     C1FIFOBAL       equ	332	;# 
  6341   00014D                     C1FIFOBAH       equ	333	;# 
  6342   00014E                     C1FIFOBAU       equ	334	;# 
  6343   00014F                     C1FIFOBAT       equ	335	;# 
  6344   000150                     C1TXQCONL       equ	336	;# 
  6345   000151                     C1TXQCONH       equ	337	;# 
  6346   000152                     C1TXQCONU       equ	338	;# 
  6347   000153                     C1TXQCONT       equ	339	;# 
  6348   000154                     C1TXQSTAL       equ	340	;# 
  6349   000155                     C1TXQSTAH       equ	341	;# 
  6350   000156                     C1TXQSTAU       equ	342	;# 
  6351   000157                     C1TXQSTAT       equ	343	;# 
  6352   000158                     C1TXQUA         equ	344	;# 
  6353   000158                     C1TXQUAL        equ	344	;# 
  6354   000159                     C1TXQUAH        equ	345	;# 
  6355   00015A                     C1TXQUAU        equ	346	;# 
  6356   00015B                     C1TXQUAT        equ	347	;# 
  6357   00015C                     C1FIFOCON1      equ	348	;# 
  6358   00015C                     C1FIFOCON1L     equ	348	;# 
  6359   00015D                     C1FIFOCON1H     equ	349	;# 
  6360   00015E                     C1FIFOCON1U     equ	350	;# 
  6361   00015F                     C1FIFOCON1T     equ	351	;# 
  6362   000160                     C1FIFOSTA1      equ	352	;# 
  6363   000160                     C1FIFOSTA1L     equ	352	;# 
  6364   000161                     C1FIFOSTA1H     equ	353	;# 
  6365   000162                     C1FIFOSTA1U     equ	354	;# 
  6366   000163                     C1FIFOSTA1T     equ	355	;# 
  6367   000164                     C1FIFOUA1       equ	356	;# 
  6368   000164                     C1FIFOUA1L      equ	356	;# 
  6369   000165                     C1FIFOUA1H      equ	357	;# 
  6370   000166                     C1FIFOUA1U      equ	358	;# 
  6371   000167                     C1FIFOUA1T      equ	359	;# 
  6372   000168                     C1FIFOCON2      equ	360	;# 
  6373   000168                     C1FIFOCON2L     equ	360	;# 
  6374   000169                     C1FIFOCON2H     equ	361	;# 
  6375   00016A                     C1FIFOCON2U     equ	362	;# 
  6376   00016B                     C1FIFOCON2T     equ	363	;# 
  6377   00016C                     C1FIFOSTA2      equ	364	;# 
  6378   00016C                     C1FIFOSTA2L     equ	364	;# 
  6379   00016D                     C1FIFOSTA2H     equ	365	;# 
  6380   00016E                     C1FIFOSTA2U     equ	366	;# 
  6381   00016F                     C1FIFOSTA2T     equ	367	;# 
  6382   000170                     C1FIFOUA2       equ	368	;# 
  6383   000170                     C1FIFOUA2L      equ	368	;# 
  6384   000171                     C1FIFOUA2H      equ	369	;# 
  6385   000172                     C1FIFOUA2U      equ	370	;# 
  6386   000173                     C1FIFOUA2T      equ	371	;# 
  6387   000174                     C1FIFOCON3      equ	372	;# 
  6388   000174                     C1FIFOCON3L     equ	372	;# 
  6389   000175                     C1FIFOCON3H     equ	373	;# 
  6390   000176                     C1FIFOCON3U     equ	374	;# 
  6391   000177                     C1FIFOCON3T     equ	375	;# 
  6392   000178                     C1FIFOSTA3      equ	376	;# 
  6393   000178                     C1FIFOSTA3L     equ	376	;# 
  6394   000179                     C1FIFOSTA3H     equ	377	;# 
  6395   00017A                     C1FIFOSTA3U     equ	378	;# 
  6396   00017B                     C1FIFOSTA3T     equ	379	;# 
  6397   00017C                     C1FIFOUA3       equ	380	;# 
  6398   00017C                     C1FIFOUA3L      equ	380	;# 
  6399   00017D                     C1FIFOUA3H      equ	381	;# 
  6400   00017E                     C1FIFOUA3U      equ	382	;# 
  6401   00017F                     C1FIFOUA3T      equ	383	;# 
  6402   000180                     C1FLTCON0L      equ	384	;# 
  6403   000181                     C1FLTCON0H      equ	385	;# 
  6404   000182                     C1FLTCON0U      equ	386	;# 
  6405   000183                     C1FLTCON0T      equ	387	;# 
  6406   000184                     C1FLTCON1L      equ	388	;# 
  6407   000185                     C1FLTCON1H      equ	389	;# 
  6408   000186                     C1FLTCON1U      equ	390	;# 
  6409   000187                     C1FLTCON1T      equ	391	;# 
  6410   000188                     C1FLTCON2L      equ	392	;# 
  6411   000189                     C1FLTCON2H      equ	393	;# 
  6412   00018A                     C1FLTCON2U      equ	394	;# 
  6413   00018B                     C1FLTCON2T      equ	395	;# 
  6414   00018C                     C1FLTOBJ0       equ	396	;# 
  6415   00018C                     C1FLTOBJ0L      equ	396	;# 
  6416   00018D                     C1FLTOBJ0H      equ	397	;# 
  6417   00018E                     C1FLTOBJ0U      equ	398	;# 
  6418   00018F                     C1FLTOBJ0T      equ	399	;# 
  6419   000190                     C1MASK0         equ	400	;# 
  6420   000190                     C1MASK0L        equ	400	;# 
  6421   000191                     C1MASK0H        equ	401	;# 
  6422   000192                     C1MASK0U        equ	402	;# 
  6423   000193                     C1MASK0T        equ	403	;# 
  6424   000194                     C1FLTOBJ1       equ	404	;# 
  6425   000194                     C1FLTOBJ1L      equ	404	;# 
  6426   000195                     C1FLTOBJ1H      equ	405	;# 
  6427   000196                     C1FLTOBJ1U      equ	406	;# 
  6428   000197                     C1FLTOBJ1T      equ	407	;# 
  6429   000198                     C1MASK1         equ	408	;# 
  6430   000198                     C1MASK1L        equ	408	;# 
  6431   000199                     C1MASK1H        equ	409	;# 
  6432   00019A                     C1MASK1U        equ	410	;# 
  6433   00019B                     C1MASK1T        equ	411	;# 
  6434   00019C                     C1FLTOBJ2       equ	412	;# 
  6435   00019C                     C1FLTOBJ2L      equ	412	;# 
  6436   00019D                     C1FLTOBJ2H      equ	413	;# 
  6437   00019E                     C1FLTOBJ2U      equ	414	;# 
  6438   00019F                     C1FLTOBJ2T      equ	415	;# 
  6439   0001A0                     C1MASK2         equ	416	;# 
  6440   0001A0                     C1MASK2L        equ	416	;# 
  6441   0001A1                     C1MASK2H        equ	417	;# 
  6442   0001A2                     C1MASK2U        equ	418	;# 
  6443   0001A3                     C1MASK2T        equ	419	;# 
  6444   0001A4                     C1FLTOBJ3       equ	420	;# 
  6445   0001A4                     C1FLTOBJ3L      equ	420	;# 
  6446   0001A5                     C1FLTOBJ3H      equ	421	;# 
  6447   0001A6                     C1FLTOBJ3U      equ	422	;# 
  6448   0001A7                     C1FLTOBJ3T      equ	423	;# 
  6449   0001A8                     C1MASK3         equ	424	;# 
  6450   0001A8                     C1MASK3L        equ	424	;# 
  6451   0001A9                     C1MASK3H        equ	425	;# 
  6452   0001AA                     C1MASK3U        equ	426	;# 
  6453   0001AB                     C1MASK3T        equ	427	;# 
  6454   0001AC                     C1FLTOBJ4       equ	428	;# 
  6455   0001AC                     C1FLTOBJ4L      equ	428	;# 
  6456   0001AD                     C1FLTOBJ4H      equ	429	;# 
  6457   0001AE                     C1FLTOBJ4U      equ	430	;# 
  6458   0001AF                     C1FLTOBJ4T      equ	431	;# 
  6459   0001B0                     C1MASK4         equ	432	;# 
  6460   0001B0                     C1MASK4L        equ	432	;# 
  6461   0001B1                     C1MASK4H        equ	433	;# 
  6462   0001B2                     C1MASK4U        equ	434	;# 
  6463   0001B3                     C1MASK4T        equ	435	;# 
  6464   0001B4                     C1FLTOBJ5       equ	436	;# 
  6465   0001B4                     C1FLTOBJ5L      equ	436	;# 
  6466   0001B5                     C1FLTOBJ5H      equ	437	;# 
  6467   0001B6                     C1FLTOBJ5U      equ	438	;# 
  6468   0001B7                     C1FLTOBJ5T      equ	439	;# 
  6469   0001B8                     C1MASK5         equ	440	;# 
  6470   0001B8                     C1MASK5L        equ	440	;# 
  6471   0001B9                     C1MASK5H        equ	441	;# 
  6472   0001BA                     C1MASK5U        equ	442	;# 
  6473   0001BB                     C1MASK5T        equ	443	;# 
  6474   0001BC                     C1FLTOBJ6       equ	444	;# 
  6475   0001BC                     C1FLTOBJ6L      equ	444	;# 
  6476   0001BD                     C1FLTOBJ6H      equ	445	;# 
  6477   0001BE                     C1FLTOBJ6U      equ	446	;# 
  6478   0001BF                     C1FLTOBJ6T      equ	447	;# 
  6479   0001C0                     C1MASK6         equ	448	;# 
  6480   0001C0                     C1MASK6L        equ	448	;# 
  6481   0001C1                     C1MASK6H        equ	449	;# 
  6482   0001C2                     C1MASK6U        equ	450	;# 
  6483   0001C3                     C1MASK6T        equ	451	;# 
  6484   0001C4                     C1FLTOBJ7       equ	452	;# 
  6485   0001C4                     C1FLTOBJ7L      equ	452	;# 
  6486   0001C5                     C1FLTOBJ7H      equ	453	;# 
  6487   0001C6                     C1FLTOBJ7U      equ	454	;# 
  6488   0001C7                     C1FLTOBJ7T      equ	455	;# 
  6489   0001C8                     C1MASK7         equ	456	;# 
  6490   0001C8                     C1MASK7L        equ	456	;# 
  6491   0001C9                     C1MASK7H        equ	457	;# 
  6492   0001CA                     C1MASK7U        equ	458	;# 
  6493   0001CB                     C1MASK7T        equ	459	;# 
  6494   0001CC                     C1FLTOBJ8       equ	460	;# 
  6495   0001CC                     C1FLTOBJ8L      equ	460	;# 
  6496   0001CD                     C1FLTOBJ8H      equ	461	;# 
  6497   0001CE                     C1FLTOBJ8U      equ	462	;# 
  6498   0001CF                     C1FLTOBJ8T      equ	463	;# 
  6499   0001D0                     C1MASK8         equ	464	;# 
  6500   0001D0                     C1MASK8L        equ	464	;# 
  6501   0001D1                     C1MASK8H        equ	465	;# 
  6502   0001D2                     C1MASK8U        equ	466	;# 
  6503   0001D3                     C1MASK8T        equ	467	;# 
  6504   0001D4                     C1FLTOBJ9       equ	468	;# 
  6505   0001D4                     C1FLTOBJ9L      equ	468	;# 
  6506   0001D5                     C1FLTOBJ9H      equ	469	;# 
  6507   0001D6                     C1FLTOBJ9U      equ	470	;# 
  6508   0001D7                     C1FLTOBJ9T      equ	471	;# 
  6509   0001D8                     C1MASK9         equ	472	;# 
  6510   0001D8                     C1MASK9L        equ	472	;# 
  6511   0001D9                     C1MASK9H        equ	473	;# 
  6512   0001DA                     C1MASK9U        equ	474	;# 
  6513   0001DB                     C1MASK9T        equ	475	;# 
  6514   0001DC                     C1FLTOBJ10      equ	476	;# 
  6515   0001DC                     C1FLTOBJ10L     equ	476	;# 
  6516   0001DD                     C1FLTOBJ10H     equ	477	;# 
  6517   0001DE                     C1FLTOBJ10U     equ	478	;# 
  6518   0001DF                     C1FLTOBJ10T     equ	479	;# 
  6519   0001E0                     C1MASK10        equ	480	;# 
  6520   0001E0                     C1MASK10L       equ	480	;# 
  6521   0001E1                     C1MASK10H       equ	481	;# 
  6522   0001E2                     C1MASK10U       equ	482	;# 
  6523   0001E3                     C1MASK10T       equ	483	;# 
  6524   0001E4                     C1FLTOBJ11      equ	484	;# 
  6525   0001E4                     C1FLTOBJ11L     equ	484	;# 
  6526   0001E5                     C1FLTOBJ11H     equ	485	;# 
  6527   0001E6                     C1FLTOBJ11U     equ	486	;# 
  6528   0001E7                     C1FLTOBJ11T     equ	487	;# 
  6529   0001E8                     C1MASK11        equ	488	;# 
  6530   0001E8                     C1MASK11L       equ	488	;# 
  6531   0001E9                     C1MASK11H       equ	489	;# 
  6532   0001EA                     C1MASK11U       equ	490	;# 
  6533   0001EB                     C1MASK11T       equ	491	;# 
  6534   000200                     PPSLOCK         equ	512	;# 
  6535   000201                     RA0PPS          equ	513	;# 
  6536   000202                     RA1PPS          equ	514	;# 
  6537   000203                     RA2PPS          equ	515	;# 
  6538   000204                     RA3PPS          equ	516	;# 
  6539   000205                     RA4PPS          equ	517	;# 
  6540   000206                     RA5PPS          equ	518	;# 
  6541   000207                     RA6PPS          equ	519	;# 
  6542   000208                     RA7PPS          equ	520	;# 
  6543   000209                     RB0PPS          equ	521	;# 
  6544   00020A                     RB1PPS          equ	522	;# 
  6545   00020B                     RB2PPS          equ	523	;# 
  6546   00020C                     RB3PPS          equ	524	;# 
  6547   00020D                     RB4PPS          equ	525	;# 
  6548   00020E                     RB5PPS          equ	526	;# 
  6549   00020F                     RB6PPS          equ	527	;# 
  6550   000210                     RB7PPS          equ	528	;# 
  6551   000211                     RC0PPS          equ	529	;# 
  6552   000212                     RC1PPS          equ	530	;# 
  6553   000213                     RC2PPS          equ	531	;# 
  6554   000214                     RC3PPS          equ	532	;# 
  6555   000215                     RC4PPS          equ	533	;# 
  6556   000216                     RC5PPS          equ	534	;# 
  6557   000217                     RC6PPS          equ	535	;# 
  6558   000218                     RC7PPS          equ	536	;# 
  6559   00023D                     CANRXPPS        equ	573	;# 
  6560   00023E                     INT0PPS         equ	574	;# 
  6561   00023F                     INT1PPS         equ	575	;# 
  6562   000240                     INT2PPS         equ	576	;# 
  6563   000241                     T0CKIPPS        equ	577	;# 
  6564   000242                     T1CKIPPS        equ	578	;# 
  6565   000243                     T1GPPS          equ	579	;# 
  6566   000244                     T3CKIPPS        equ	580	;# 
  6567   000245                     T3GPPS          equ	581	;# 
  6568   000246                     T5CKIPPS        equ	582	;# 
  6569   000247                     T5GPPS          equ	583	;# 
  6570   000248                     T2INPPS         equ	584	;# 
  6571   000249                     T4INPPS         equ	585	;# 
  6572   00024A                     T6INPPS         equ	586	;# 
  6573   00024B                     TUIN0PPS        equ	587	;# 
  6574   00024C                     TUIN1PPS        equ	588	;# 
  6575   00024F                     CCP1PPS         equ	591	;# 
  6576   000250                     CCP2PPS         equ	592	;# 
  6577   000251                     CCP3PPS         equ	593	;# 
  6578   000253                     PWM1ERSPPS      equ	595	;# 
  6579   000254                     PWM2ERSPPS      equ	596	;# 
  6580   000255                     PWM3ERSPPS      equ	597	;# 
  6581   000256                     PWM4ERSPPS      equ	598	;# 
  6582   000257                     PWMIN0PPS       equ	599	;# 
  6583   000258                     PWMIN1PPS       equ	600	;# 
  6584   000259                     SMT1WINPPS      equ	601	;# 
  6585   00025A                     SMT1SIGPPS      equ	602	;# 
  6586   00025B                     CWG1PPS         equ	603	;# 
  6587   00025B                     CWG1INPPS       equ	603	;# 
  6588   00025C                     CWG2PPS         equ	604	;# 
  6589   00025C                     CWG2INPPS       equ	604	;# 
  6590   00025D                     CWG3PPS         equ	605	;# 
  6591   00025D                     CWG3INPPS       equ	605	;# 
  6592   00025E                     MD1CARLPPS      equ	606	;# 
  6593   00025E                     MDCARLPPS       equ	606	;# 
  6594   00025F                     MD1CARHPPS      equ	607	;# 
  6595   00025F                     MDCARHPPS       equ	607	;# 
  6596   000260                     MD1SRCPPS       equ	608	;# 
  6597   000260                     MDSRCPPS        equ	608	;# 
  6598   000261                     CLCIN0PPS       equ	609	;# 
  6599   000262                     CLCIN1PPS       equ	610	;# 
  6600   000263                     CLCIN2PPS       equ	611	;# 
  6601   000264                     CLCIN3PPS       equ	612	;# 
  6602   000265                     CLCIN4PPS       equ	613	;# 
  6603   000266                     CLCIN5PPS       equ	614	;# 
  6604   000267                     CLCIN6PPS       equ	615	;# 
  6605   000268                     CLCIN7PPS       equ	616	;# 
  6606   000269                     ADACTPPS        equ	617	;# 
  6607   00026A                     SPI1SCKPPS      equ	618	;# 
  6608   00026B                     SPI1SDIPPS      equ	619	;# 
  6609   00026C                     SPI1SSPPS       equ	620	;# 
  6610   00026D                     SPI2SCKPPS      equ	621	;# 
  6611   00026E                     SPI2SDIPPS      equ	622	;# 
  6612   00026F                     SPI2SSPPS       equ	623	;# 
  6613   000270                     I2C1SDAPPS      equ	624	;# 
  6614   000271                     I2C1SCLPPS      equ	625	;# 
  6615   000272                     U1RXPPS         equ	626	;# 
  6616   000273                     U1CTSPPS        equ	627	;# 
  6617   000274                     U2RXPPS         equ	628	;# 
  6618   000275                     U2CTSPPS        equ	629	;# 
  6619   000276                     U3RXPPS         equ	630	;# 
  6620   000277                     U3CTSPPS        equ	631	;# 
  6621   000278                     U4RXPPS         equ	632	;# 
  6622   000279                     U4CTSPPS        equ	633	;# 
  6623   00027A                     U5RXPPS         equ	634	;# 
  6624   00027B                     U5CTSPPS        equ	635	;# 
  6625   000286                     RC4I2C          equ	646	;# 
  6626   000287                     RC3I2C          equ	647	;# 
  6627   000288                     RB2I2C          equ	648	;# 
  6628   000289                     RB1I2C          equ	649	;# 
  6629   00028A                     I2C1RXB         equ	650	;# 
  6630   00028B                     I2C1TXB         equ	651	;# 
  6631   00028C                     I2C1CNTL        equ	652	;# 
  6632   00028D                     I2C1CNTH        equ	653	;# 
  6633   00028E                     I2C1ADB0        equ	654	;# 
  6634   00028F                     I2C1ADB1        equ	655	;# 
  6635   000290                     I2C1ADR0        equ	656	;# 
  6636   000291                     I2C1ADR1        equ	657	;# 
  6637   000292                     I2C1ADR2        equ	658	;# 
  6638   000293                     I2C1ADR3        equ	659	;# 
  6639   000294                     I2C1CON0        equ	660	;# 
  6640   000295                     I2C1CON1        equ	661	;# 
  6641   000296                     I2C1CON2        equ	662	;# 
  6642   000297                     I2C1ERR         equ	663	;# 
  6643   000298                     I2C1STAT0       equ	664	;# 
  6644   000299                     I2C1STAT1       equ	665	;# 
  6645   00029A                     I2C1PIR         equ	666	;# 
  6646   00029B                     I2C1PIE         equ	667	;# 
  6647   00029C                     I2C1BTO         equ	668	;# 
  6648   00029D                     I2C1BAUD        equ	669	;# 
  6649   00029E                     I2C1CLK         equ	670	;# 
  6650   00029F                     I2C1BTOC        equ	671	;# 
  6651   0002A1                     U1RXB           equ	673	;# 
  6652   0002A1                     U1RXBL          equ	673	;# 
  6653   0002A2                     U1RXCHK         equ	674	;# 
  6654   0002A3                     U1TXB           equ	675	;# 
  6655   0002A3                     U1TXBL          equ	675	;# 
  6656   0002A4                     U1TXCHK         equ	676	;# 
  6657   0002A5                     U1P1            equ	677	;# 
  6658   0002A5                     U1P1L           equ	677	;# 
  6659   0002A6                     U1P1H           equ	678	;# 
  6660   0002A7                     U1P2            equ	679	;# 
  6661   0002A7                     U1P2L           equ	679	;# 
  6662   0002A8                     U1P2H           equ	680	;# 
  6663   0002A9                     U1P3            equ	681	;# 
  6664   0002A9                     U1P3L           equ	681	;# 
  6665   0002AA                     U1P3H           equ	682	;# 
  6666   0002AB                     U1CON0          equ	683	;# 
  6667   0002AC                     U1CON1          equ	684	;# 
  6668   0002AD                     U1CON2          equ	685	;# 
  6669   0002AE                     U1BRG           equ	686	;# 
  6670   0002AE                     U1BRGL          equ	686	;# 
  6671   0002AF                     U1BRGH          equ	687	;# 
  6672   0002B0                     U1FIFO          equ	688	;# 
  6673   0002B1                     U1UIR           equ	689	;# 
  6674   0002B2                     U1ERRIR         equ	690	;# 
  6675   0002B3                     U1ERRIE         equ	691	;# 
  6676   0002B4                     U2RXB           equ	692	;# 
  6677   0002B4                     U2RXBL          equ	692	;# 
  6678   0002B5                     U2RXCHK         equ	693	;# 
  6679   0002B6                     U2TXB           equ	694	;# 
  6680   0002B6                     U2TXBL          equ	694	;# 
  6681   0002B7                     U2TXCHK         equ	695	;# 
  6682   0002B8                     U2P1            equ	696	;# 
  6683   0002B8                     U2P1L           equ	696	;# 
  6684   0002B9                     U2P1H           equ	697	;# 
  6685   0002BA                     U2P2            equ	698	;# 
  6686   0002BA                     U2P2L           equ	698	;# 
  6687   0002BB                     U2P2H           equ	699	;# 
  6688   0002BC                     U2P3            equ	700	;# 
  6689   0002BC                     U2P3L           equ	700	;# 
  6690   0002BD                     U2P3H           equ	701	;# 
  6691   0002BE                     U2CON0          equ	702	;# 
  6692   0002BF                     U2CON1          equ	703	;# 
  6693   0002C0                     U2CON2          equ	704	;# 
  6694   0002C1                     U2BRG           equ	705	;# 
  6695   0002C1                     U2BRGL          equ	705	;# 
  6696   0002C2                     U2BRGH          equ	706	;# 
  6697   0002C3                     U2FIFO          equ	707	;# 
  6698   0002C4                     U2UIR           equ	708	;# 
  6699   0002C5                     U2ERRIR         equ	709	;# 
  6700   0002C6                     U2ERRIE         equ	710	;# 
  6701   0002C7                     U3RXB           equ	711	;# 
  6702   0002C7                     U3RXBL          equ	711	;# 
  6703   0002C9                     U3TXB           equ	713	;# 
  6704   0002C9                     U3TXBL          equ	713	;# 
  6705   0002CB                     U3P1            equ	715	;# 
  6706   0002CB                     U3P1L           equ	715	;# 
  6707   0002CD                     U3P2            equ	717	;# 
  6708   0002CD                     U3P2L           equ	717	;# 
  6709   0002CF                     U3P3            equ	719	;# 
  6710   0002CF                     U3P3L           equ	719	;# 
  6711   0002D1                     U3CON0          equ	721	;# 
  6712   0002D2                     U3CON1          equ	722	;# 
  6713   0002D3                     U3CON2          equ	723	;# 
  6714   0002D4                     U3BRG           equ	724	;# 
  6715   0002D4                     U3BRGL          equ	724	;# 
  6716   0002D5                     U3BRGH          equ	725	;# 
  6717   0002D6                     U3FIFO          equ	726	;# 
  6718   0002D7                     U3UIR           equ	727	;# 
  6719   0002D8                     U3ERRIR         equ	728	;# 
  6720   0002D9                     U3ERRIE         equ	729	;# 
  6721   0002DA                     U4RXB           equ	730	;# 
  6722   0002DA                     U4RXBL          equ	730	;# 
  6723   0002DC                     U4TXB           equ	732	;# 
  6724   0002DC                     U4TXBL          equ	732	;# 
  6725   0002DE                     U4P1            equ	734	;# 
  6726   0002DE                     U4P1L           equ	734	;# 
  6727   0002E0                     U4P2            equ	736	;# 
  6728   0002E0                     U4P2L           equ	736	;# 
  6729   0002E2                     U4P3            equ	738	;# 
  6730   0002E2                     U4P3L           equ	738	;# 
  6731   0002E4                     U4CON0          equ	740	;# 
  6732   0002E5                     U4CON1          equ	741	;# 
  6733   0002E6                     U4CON2          equ	742	;# 
  6734   0002E7                     U4BRG           equ	743	;# 
  6735   0002E7                     U4BRGL          equ	743	;# 
  6736   0002E8                     U4BRGH          equ	744	;# 
  6737   0002E9                     U4FIFO          equ	745	;# 
  6738   0002EA                     U4UIR           equ	746	;# 
  6739   0002EB                     U4ERRIR         equ	747	;# 
  6740   0002EC                     U4ERRIE         equ	748	;# 
  6741   0002ED                     U5RXB           equ	749	;# 
  6742   0002ED                     U5RXBL          equ	749	;# 
  6743   0002EF                     U5TXB           equ	751	;# 
  6744   0002EF                     U5TXBL          equ	751	;# 
  6745   0002F1                     U5P1            equ	753	;# 
  6746   0002F1                     U5P1L           equ	753	;# 
  6747   0002F3                     U5P2            equ	755	;# 
  6748   0002F3                     U5P2L           equ	755	;# 
  6749   0002F5                     U5P3            equ	757	;# 
  6750   0002F5                     U5P3L           equ	757	;# 
  6751   0002F7                     U5CON0          equ	759	;# 
  6752   0002F8                     U5CON1          equ	760	;# 
  6753   0002F9                     U5CON2          equ	761	;# 
  6754   0002FA                     U5BRG           equ	762	;# 
  6755   0002FA                     U5BRGL          equ	762	;# 
  6756   0002FB                     U5BRGH          equ	763	;# 
  6757   0002FC                     U5FIFO          equ	764	;# 
  6758   0002FD                     U5UIR           equ	765	;# 
  6759   0002FE                     U5ERRIR         equ	766	;# 
  6760   0002FF                     U5ERRIE         equ	767	;# 
  6761   000300                     SMT1TMR         equ	768	;# 
  6762   000300                     SMT1TMRL        equ	768	;# 
  6763   000301                     SMT1TMRH        equ	769	;# 
  6764   000302                     SMT1TMRU        equ	770	;# 
  6765   000303                     SMT1CPR         equ	771	;# 
  6766   000303                     SMT1CPRL        equ	771	;# 
  6767   000304                     SMT1CPRH        equ	772	;# 
  6768   000305                     SMT1CPRU        equ	773	;# 
  6769   000306                     SMT1CPW         equ	774	;# 
  6770   000306                     SMT1CPWL        equ	774	;# 
  6771   000307                     SMT1CPWH        equ	775	;# 
  6772   000308                     SMT1CPWU        equ	776	;# 
  6773   000309                     SMT1PR          equ	777	;# 
  6774   000309                     SMT1PRL         equ	777	;# 
  6775   00030A                     SMT1PRH         equ	778	;# 
  6776   00030B                     SMT1PRU         equ	779	;# 
  6777   00030C                     SMT1CON0        equ	780	;# 
  6778   00030D                     SMT1CON1        equ	781	;# 
  6779   00030E                     SMT1STAT        equ	782	;# 
  6780   00030F                     SMT1CLK         equ	783	;# 
  6781   000310                     SMT1SIG         equ	784	;# 
  6782   000311                     SMT1WIN         equ	785	;# 
  6783   000318                     TMR0L           equ	792	;# 
  6784   000318                     TMR0            equ	792	;# 
  6785   000319                     TMR0H           equ	793	;# 
  6786   000319                     PR0             equ	793	;# 
  6787   00031A                     T0CON0          equ	794	;# 
  6788   00031B                     T0CON1          equ	795	;# 
  6789   00031C                     TMR1            equ	796	;# 
  6790   00031C                     TMR1L           equ	796	;# 
  6791   00031D                     TMR1H           equ	797	;# 
  6792   00031E                     T1CON           equ	798	;# 
  6793   00031E                     TMR1CON         equ	798	;# 
  6794   00031F                     T1GCON          equ	799	;# 
  6795   00031F                     TMR1GCON        equ	799	;# 
  6796   000320                     T1GATE          equ	800	;# 
  6797   000320                     TMR1GATE        equ	800	;# 
  6798   000321                     T1CLK           equ	801	;# 
  6799   000321                     TMR1CLK         equ	801	;# 
  6800   000321                     PR1             equ	801	;# 
  6801   000322                     T2TMR           equ	802	;# 
  6802   000322                     TMR2            equ	802	;# 
  6803   000323                     T2PR            equ	803	;# 
  6804   000323                     PR2             equ	803	;# 
  6805   000324                     T2CON           equ	804	;# 
  6806   000325                     T2HLT           equ	805	;# 
  6807   000326                     T2CLKCON        equ	806	;# 
  6808   000326                     T2CLK           equ	806	;# 
  6809   000327                     T2RST           equ	807	;# 
  6810   000328                     TMR3            equ	808	;# 
  6811   000328                     TMR3L           equ	808	;# 
  6812   000329                     TMR3H           equ	809	;# 
  6813   00032A                     T3CON           equ	810	;# 
  6814   00032A                     TMR3CON         equ	810	;# 
  6815   00032B                     T3GCON          equ	811	;# 
  6816   00032B                     TMR3GCON        equ	811	;# 
  6817   00032C                     T3GATE          equ	812	;# 
  6818   00032C                     TMR3GATE        equ	812	;# 
  6819   00032D                     T3CLK           equ	813	;# 
  6820   00032D                     TMR3CLK         equ	813	;# 
  6821   00032D                     PR3             equ	813	;# 
  6822   00032E                     T4TMR           equ	814	;# 
  6823   00032E                     TMR4            equ	814	;# 
  6824   00032F                     T4PR            equ	815	;# 
  6825   00032F                     PR4             equ	815	;# 
  6826   000330                     T4CON           equ	816	;# 
  6827   000331                     T4HLT           equ	817	;# 
  6828   000332                     T4CLKCON        equ	818	;# 
  6829   000332                     T4CLK           equ	818	;# 
  6830   000333                     T4RST           equ	819	;# 
  6831   000334                     TMR5            equ	820	;# 
  6832   000334                     TMR5L           equ	820	;# 
  6833   000335                     TMR5H           equ	821	;# 
  6834   000336                     T5CON           equ	822	;# 
  6835   000336                     TMR5CON         equ	822	;# 
  6836   000337                     T5GCON          equ	823	;# 
  6837   000337                     TMR5GCON        equ	823	;# 
  6838   000338                     T5GATE          equ	824	;# 
  6839   000338                     TMR5GATE        equ	824	;# 
  6840   000339                     T5CLK           equ	825	;# 
  6841   000339                     TMR5CLK         equ	825	;# 
  6842   000339                     PR5             equ	825	;# 
  6843   00033A                     T6TMR           equ	826	;# 
  6844   00033A                     TMR6            equ	826	;# 
  6845   00033B                     T6PR            equ	827	;# 
  6846   00033B                     PR6             equ	827	;# 
  6847   00033C                     T6CON           equ	828	;# 
  6848   00033D                     T6HLT           equ	829	;# 
  6849   00033E                     T6CLKCON        equ	830	;# 
  6850   00033E                     T6CLK           equ	830	;# 
  6851   00033F                     T6RST           equ	831	;# 
  6852   000340                     CCPR1           equ	832	;# 
  6853   000340                     CCPR1L          equ	832	;# 
  6854   000341                     CCPR1H          equ	833	;# 
  6855   000342                     CCP1CON         equ	834	;# 
  6856   000343                     CCP1CAP         equ	835	;# 
  6857   000344                     CCPR2           equ	836	;# 
  6858   000344                     CCPR2L          equ	836	;# 
  6859   000345                     CCPR2H          equ	837	;# 
  6860   000346                     CCP2CON         equ	838	;# 
  6861   000347                     CCP2CAP         equ	839	;# 
  6862   000348                     CCPR3           equ	840	;# 
  6863   000348                     CCPR3L          equ	840	;# 
  6864   000349                     CCPR3H          equ	841	;# 
  6865   00034A                     CCP3CON         equ	842	;# 
  6866   00034B                     CCP3CAP         equ	843	;# 
  6867   00034C                     CCPTMRS0        equ	844	;# 
  6868   00034F                     CRCDATA         equ	847	;# 
  6869   00034F                     CRCDATAL        equ	847	;# 
  6870   000350                     CRCDATAH        equ	848	;# 
  6871   000351                     CRCDATAU        equ	849	;# 
  6872   000352                     CRCDATAT        equ	850	;# 
  6873   000353                     CRCOUT          equ	851	;# 
  6874   000353                     CRCSHFT         equ	851	;# 
  6875   000353                     CRCXOR          equ	851	;# 
  6876   000353                     CRCOUTL         equ	851	;# 
  6877   000353                     CRCSHFTL        equ	851	;# 
  6878   000353                     CRCSHIFTL       equ	851	;# 
  6879   000353                     CRCXORL         equ	851	;# 
  6880   000354                     CRCOUTH         equ	852	;# 
  6881   000354                     CRCSHFTH        equ	852	;# 
  6882   000354                     CRCSHIFTH       equ	852	;# 
  6883   000354                     CRCXORH         equ	852	;# 
  6884   000355                     CRCOUTU         equ	853	;# 
  6885   000355                     CRCSHFTU        equ	853	;# 
  6886   000355                     CRCSHIFTU       equ	853	;# 
  6887   000355                     CRCXORU         equ	853	;# 
  6888   000356                     CRCOUTT         equ	854	;# 
  6889   000356                     CRCSHFTT        equ	854	;# 
  6890   000356                     CRCSHIFTT       equ	854	;# 
  6891   000356                     CRCXORT         equ	854	;# 
  6892   000357                     CRCCON0         equ	855	;# 
  6893   000358                     CRCCON1         equ	856	;# 
  6894   000359                     CRCCON2         equ	857	;# 
  6895   00035A                     SCANLADR        equ	858	;# 
  6896   00035A                     SCANLADRL       equ	858	;# 
  6897   00035B                     SCANLADRH       equ	859	;# 
  6898   00035C                     SCANLADRU       equ	860	;# 
  6899   00035D                     SCANHADR        equ	861	;# 
  6900   00035D                     SCANHADRL       equ	861	;# 
  6901   00035E                     SCANHADRH       equ	862	;# 
  6902   00035F                     SCANHADRU       equ	863	;# 
  6903   000360                     SCANCON0        equ	864	;# 
  6904   000361                     SCANTRIG        equ	865	;# 
  6905   000362                     IPR0            equ	866	;# 
  6906   000363                     IPR1            equ	867	;# 
  6907   000364                     IPR2            equ	868	;# 
  6908   000365                     IPR3            equ	869	;# 
  6909   000366                     IPR4            equ	870	;# 
  6910   000367                     IPR5            equ	871	;# 
  6911   000368                     IPR6            equ	872	;# 
  6912   000369                     IPR7            equ	873	;# 
  6913   00036A                     IPR8            equ	874	;# 
  6914   00036B                     IPR9            equ	875	;# 
  6915   00036C                     IPR10           equ	876	;# 
  6916   00036D                     IPR11           equ	877	;# 
  6917   00036E                     IPR12           equ	878	;# 
  6918   00036F                     IPR13           equ	879	;# 
  6919   000370                     IPR14           equ	880	;# 
  6920   000371                     IPR15           equ	881	;# 
  6921   000373                     STATUS_CSHAD    equ	883	;# 
  6922   000374                     WREG_CSHAD      equ	884	;# 
  6923   000375                     BSR_CSHAD       equ	885	;# 
  6924   000376                     SHADCON         equ	886	;# 
  6925   000377                     STATUS_SHAD     equ	887	;# 
  6926   000378                     WREG_SHAD       equ	888	;# 
  6927   000379                     BSR_SHAD        equ	889	;# 
  6928   00037A                     PCLATH_SHAD     equ	890	;# 
  6929   00037B                     PCLATU_SHAD     equ	891	;# 
  6930   00037C                     FSR0SH          equ	892	;# 
  6931   00037C                     FSR0L_SHAD      equ	892	;# 
  6932   00037D                     FSR0H_SHAD      equ	893	;# 
  6933   00037E                     FSR1SH          equ	894	;# 
  6934   00037E                     FSR1L_SHAD      equ	894	;# 
  6935   00037F                     FSR1H_SHAD      equ	895	;# 
  6936   000380                     FSR2SH          equ	896	;# 
  6937   000380                     FSR2L_SHAD      equ	896	;# 
  6938   000381                     FSR2H_SHAD      equ	897	;# 
  6939   000382                     PRODSH          equ	898	;# 
  6940   000382                     PRODL_SHAD      equ	898	;# 
  6941   000383                     PRODH_SHAD      equ	899	;# 
  6942   000387                     TU16ACON0       equ	903	;# 
  6943   000388                     TU16ACON1       equ	904	;# 
  6944   000389                     TU16AHLT        equ	905	;# 
  6945   00038A                     TU16APS         equ	906	;# 
  6946   00038B                     TU16ATMR        equ	907	;# 
  6947   00038B                     TU16ACR         equ	907	;# 
  6948   00038B                     TU16ATMRL       equ	907	;# 
  6949   00038B                     TU16ACRL        equ	907	;# 
  6950   00038C                     TU16ATMRH       equ	908	;# 
  6951   00038C                     TU16ACRH        equ	908	;# 
  6952   00038D                     TU16APR         equ	909	;# 
  6953   00038D                     TU16APRL        equ	909	;# 
  6954   00038E                     TU16APRH        equ	910	;# 
  6955   00038F                     TU16ACLK        equ	911	;# 
  6956   000390                     TU16AERS        equ	912	;# 
  6957   000393                     TU16BCON0       equ	915	;# 
  6958   000394                     TU16BCON1       equ	916	;# 
  6959   000395                     TU16BHLT        equ	917	;# 
  6960   000396                     TU16BPS         equ	918	;# 
  6961   000397                     TU16BTMR        equ	919	;# 
  6962   000397                     TU16BCR         equ	919	;# 
  6963   000397                     TU16BTMRL       equ	919	;# 
  6964   000397                     TU16BCRL        equ	919	;# 
  6965   000398                     TU16BTMRH       equ	920	;# 
  6966   000398                     TU16BCRH        equ	920	;# 
  6967   000399                     TU16BPR         equ	921	;# 
  6968   000399                     TU16BPRL        equ	921	;# 
  6969   00039A                     TU16BPRH        equ	922	;# 
  6970   00039B                     TU16BCLK        equ	923	;# 
  6971   00039C                     TU16BERS        equ	924	;# 
  6972   0003BB                     TUCHAIN         equ	955	;# 
  6973   0003BC                     CWG1CLK         equ	956	;# 
  6974   0003BC                     CWG1CLKCON      equ	956	;# 
  6975   0003BD                     CWG1ISM         equ	957	;# 
  6976   0003BE                     CWG1DBR         equ	958	;# 
  6977   0003BF                     CWG1DBF         equ	959	;# 
  6978   0003C0                     CWG1CON0        equ	960	;# 
  6979   0003C1                     CWG1CON1        equ	961	;# 
  6980   0003C2                     CWG1AS0         equ	962	;# 
  6981   0003C3                     CWG1AS1         equ	963	;# 
  6982   0003C4                     CWG1STR         equ	964	;# 
  6983   0003C5                     CWG2CLK         equ	965	;# 
  6984   0003C5                     CWG2CLKCON      equ	965	;# 
  6985   0003C6                     CWG2ISM         equ	966	;# 
  6986   0003C7                     CWG2DBR         equ	967	;# 
  6987   0003C8                     CWG2DBF         equ	968	;# 
  6988   0003C9                     CWG2CON0        equ	969	;# 
  6989   0003CA                     CWG2CON1        equ	970	;# 
  6990   0003CB                     CWG2AS0         equ	971	;# 
  6991   0003CC                     CWG2AS1         equ	972	;# 
  6992   0003CD                     CWG2STR         equ	973	;# 
  6993   0003CE                     CWG3CLK         equ	974	;# 
  6994   0003CE                     CWG3CLKCON      equ	974	;# 
  6995   0003CF                     CWG3ISM         equ	975	;# 
  6996   0003D0                     CWG3DBR         equ	976	;# 
  6997   0003D1                     CWG3DBF         equ	977	;# 
  6998   0003D2                     CWG3CON0        equ	978	;# 
  6999   0003D3                     CWG3CON1        equ	979	;# 
  7000   0003D4                     CWG3AS0         equ	980	;# 
  7001   0003D5                     CWG3AS1         equ	981	;# 
  7002   0003D6                     CWG3STR         equ	982	;# 
  7003   0003D7                     FVRCON          equ	983	;# 
  7004   0003D8                     ADCPCON         equ	984	;# 
  7005   0003D8                     ADCP            equ	984	;# 
  7006   0003D9                     ADLTH           equ	985	;# 
  7007   0003D9                     ADLTHL          equ	985	;# 
  7008   0003DA                     ADLTHH          equ	986	;# 
  7009   0003DB                     ADUTH           equ	987	;# 
  7010   0003DB                     ADUTHL          equ	987	;# 
  7011   0003DC                     ADUTHH          equ	988	;# 
  7012   0003DD                     ADERR           equ	989	;# 
  7013   0003DD                     ADERRL          equ	989	;# 
  7014   0003DE                     ADERRH          equ	990	;# 
  7015   0003DF                     ADSTPT          equ	991	;# 
  7016   0003DF                     ADSTPTL         equ	991	;# 
  7017   0003E0                     ADSTPTH         equ	992	;# 
  7018   0003E1                     ADFLTR          equ	993	;# 
  7019   0003E1                     ADFLTRL         equ	993	;# 
  7020   0003E2                     ADFLTRH         equ	994	;# 
  7021   0003E3                     ADACC           equ	995	;# 
  7022   0003E3                     ADACCL          equ	995	;# 
  7023   0003E4                     ADACCH          equ	996	;# 
  7024   0003E5                     ADACCU          equ	997	;# 
  7025   0003E6                     ADCNT           equ	998	;# 
  7026   0003E7                     ADRPT           equ	999	;# 
  7027   0003E8                     ADPREV          equ	1000	;# 
  7028   0003E8                     ADPREVL         equ	1000	;# 
  7029   0003E9                     ADPREVH         equ	1001	;# 
  7030   0003EA                     ADRES           equ	1002	;# 
  7031   0003EA                     ADRESL          equ	1002	;# 
  7032   0003EB                     ADRESH          equ	1003	;# 
  7033   0003EC                     ADPCH           equ	1004	;# 
  7034   0003EE                     ADACQ           equ	1006	;# 
  7035   0003EE                     ADACQL          equ	1006	;# 
  7036   0003EF                     ADACQH          equ	1007	;# 
  7037   0003F0                     ADCAP           equ	1008	;# 
  7038   0003F1                     ADPRE           equ	1009	;# 
  7039   0003F1                     ADPREL          equ	1009	;# 
  7040   0003F2                     ADPREH          equ	1010	;# 
  7041   0003F3                     ADCON0          equ	1011	;# 
  7042   0003F4                     ADCON1          equ	1012	;# 
  7043   0003F5                     ADCON2          equ	1013	;# 
  7044   0003F6                     ADCON3          equ	1014	;# 
  7045   0003F7                     ADSTAT          equ	1015	;# 
  7046   0003F8                     ADREF           equ	1016	;# 
  7047   0003F9                     ADACT           equ	1017	;# 
  7048   0003FA                     ADCLK           equ	1018	;# 
  7049   0003FB                     ADCTX           equ	1019	;# 
  7050   0003FC                     ADCSEL1         equ	1020	;# 
  7051   0003FD                     ADCSEL2         equ	1021	;# 
  7052   0003FE                     ADCSEL3         equ	1022	;# 
  7053   0003FF                     ADCSEL4         equ	1023	;# 
  7054   000400                     ANSELA          equ	1024	;# 
  7055   000401                     WPUA            equ	1025	;# 
  7056   000402                     ODCONA          equ	1026	;# 
  7057   000403                     SLRCONA         equ	1027	;# 
  7058   000404                     INLVLA          equ	1028	;# 
  7059   000405                     IOCAP           equ	1029	;# 
  7060   000406                     IOCAN           equ	1030	;# 
  7061   000407                     IOCAF           equ	1031	;# 
  7062   000408                     ANSELB          equ	1032	;# 
  7063   000409                     WPUB            equ	1033	;# 
  7064   00040A                     ODCONB          equ	1034	;# 
  7065   00040B                     SLRCONB         equ	1035	;# 
  7066   00040C                     INLVLB          equ	1036	;# 
  7067   00040D                     IOCBP           equ	1037	;# 
  7068   00040E                     IOCBN           equ	1038	;# 
  7069   00040F                     IOCBF           equ	1039	;# 
  7070   000410                     ANSELC          equ	1040	;# 
  7071   000411                     WPUC            equ	1041	;# 
  7072   000412                     ODCONC          equ	1042	;# 
  7073   000413                     SLRCONC         equ	1043	;# 
  7074   000414                     INLVLC          equ	1044	;# 
  7075   000415                     IOCCP           equ	1045	;# 
  7076   000416                     IOCCN           equ	1046	;# 
  7077   000417                     IOCCF           equ	1047	;# 
  7078   000421                     WPUE            equ	1057	;# 
  7079   000424                     INLVLE          equ	1060	;# 
  7080   000425                     IOCEP           equ	1061	;# 
  7081   000426                     IOCEN           equ	1062	;# 
  7082   000427                     IOCEF           equ	1063	;# 
  7083   000440                     NCO1ACC         equ	1088	;# 
  7084   000440                     NCO1ACCL        equ	1088	;# 
  7085   000441                     NCO1ACCH        equ	1089	;# 
  7086   000442                     NCO1ACCU        equ	1090	;# 
  7087   000443                     NCO1INC         equ	1091	;# 
  7088   000443                     NCO1INCL        equ	1091	;# 
  7089   000444                     NCO1INCH        equ	1092	;# 
  7090   000445                     NCO1INCU        equ	1093	;# 
  7091   000446                     NCO1CON         equ	1094	;# 
  7092   000447                     NCO1CLK         equ	1095	;# 
  7093   000448                     NCO2ACC         equ	1096	;# 
  7094   000448                     NCO2ACCL        equ	1096	;# 
  7095   000449                     NCO2ACCH        equ	1097	;# 
  7096   00044A                     NCO2ACCU        equ	1098	;# 
  7097   00044B                     NCO2INC         equ	1099	;# 
  7098   00044B                     NCO2INCL        equ	1099	;# 
  7099   00044C                     NCO2INCH        equ	1100	;# 
  7100   00044D                     NCO2INCU        equ	1101	;# 
  7101   00044E                     NCO2CON         equ	1102	;# 
  7102   00044F                     NCO2CLK         equ	1103	;# 
  7103   000450                     NCO3ACC         equ	1104	;# 
  7104   000450                     NCO3ACCL        equ	1104	;# 
  7105   000451                     NCO3ACCH        equ	1105	;# 
  7106   000452                     NCO3ACCU        equ	1106	;# 
  7107   000453                     NCO3INC         equ	1107	;# 
  7108   000453                     NCO3INCL        equ	1107	;# 
  7109   000454                     NCO3INCH        equ	1108	;# 
  7110   000455                     NCO3INCU        equ	1109	;# 
  7111   000456                     NCO3CON         equ	1110	;# 
  7112   000457                     NCO3CLK         equ	1111	;# 
  7113   000458                     FSCMCON         equ	1112	;# 
  7114   000459                     IVTLOCK         equ	1113	;# 
  7115   00045A                     IVTAD           equ	1114	;# 
  7116   00045A                     IVTADL          equ	1114	;# 
  7117   00045B                     IVTADH          equ	1115	;# 
  7118   00045C                     IVTADU          equ	1116	;# 
  7119   00045D                     IVTBASE         equ	1117	;# 
  7120   00045D                     IVTBASEL        equ	1117	;# 
  7121   00045E                     IVTBASEH        equ	1118	;# 
  7122   00045F                     IVTBASEU        equ	1119	;# 
  7123   000460                     PWM1ERS         equ	1120	;# 
  7124   000461                     PWM1CLK         equ	1121	;# 
  7125   000462                     PWM1LDS         equ	1122	;# 
  7126   000463                     PWM1PR          equ	1123	;# 
  7127   000463                     PWM1PRL         equ	1123	;# 
  7128   000464                     PWM1PRH         equ	1124	;# 
  7129   000465                     PWM1CPRE        equ	1125	;# 
  7130   000466                     PWM1PIPOS       equ	1126	;# 
  7131   000467                     PWM1GIR         equ	1127	;# 
  7132   000468                     PWM1GIE         equ	1128	;# 
  7133   000469                     PWM1CON         equ	1129	;# 
  7134   00046A                     PWM1S1CFG       equ	1130	;# 
  7135   00046B                     PWM1S1P1        equ	1131	;# 
  7136   00046B                     PWM1S1P1L       equ	1131	;# 
  7137   00046C                     PWM1S1P1H       equ	1132	;# 
  7138   00046D                     PWM1S1P2        equ	1133	;# 
  7139   00046D                     PWM1S1P2L       equ	1133	;# 
  7140   00046E                     PWM1S1P2H       equ	1134	;# 
  7141   00046F                     PWM2ERS         equ	1135	;# 
  7142   000470                     PWM2CLK         equ	1136	;# 
  7143   000471                     PWM2LDS         equ	1137	;# 
  7144   000472                     PWM2PR          equ	1138	;# 
  7145   000472                     PWM2PRL         equ	1138	;# 
  7146   000473                     PWM2PRH         equ	1139	;# 
  7147   000474                     PWM2CPRE        equ	1140	;# 
  7148   000475                     PWM2PIPOS       equ	1141	;# 
  7149   000476                     PWM2GIR         equ	1142	;# 
  7150   000477                     PWM2GIE         equ	1143	;# 
  7151   000478                     PWM2CON         equ	1144	;# 
  7152   000479                     PWM2S1CFG       equ	1145	;# 
  7153   00047A                     PWM2S1P1        equ	1146	;# 
  7154   00047A                     PWM2S1P1L       equ	1146	;# 
  7155   00047B                     PWM2S1P1H       equ	1147	;# 
  7156   00047C                     PWM2S1P2        equ	1148	;# 
  7157   00047C                     PWM2S1P2L       equ	1148	;# 
  7158   00047D                     PWM2S1P2H       equ	1149	;# 
  7159   00047E                     PWM3ERS         equ	1150	;# 
  7160   00047F                     PWM3CLK         equ	1151	;# 
  7161   000480                     PWM3LDS         equ	1152	;# 
  7162   000481                     PWM3PR          equ	1153	;# 
  7163   000481                     PWM3PRL         equ	1153	;# 
  7164   000482                     PWM3PRH         equ	1154	;# 
  7165   000483                     PWM3CPRE        equ	1155	;# 
  7166   000484                     PWM3PIPOS       equ	1156	;# 
  7167   000485                     PWM3GIR         equ	1157	;# 
  7168   000486                     PWM3GIE         equ	1158	;# 
  7169   000487                     PWM3CON         equ	1159	;# 
  7170   000488                     PWM3S1CFG       equ	1160	;# 
  7171   000489                     PWM3S1P1        equ	1161	;# 
  7172   000489                     PWM3S1P1L       equ	1161	;# 
  7173   00048A                     PWM3S1P1H       equ	1162	;# 
  7174   00048B                     PWM3S1P2        equ	1163	;# 
  7175   00048B                     PWM3S1P2L       equ	1163	;# 
  7176   00048C                     PWM3S1P2H       equ	1164	;# 
  7177   00048D                     PWM4ERS         equ	1165	;# 
  7178   00048E                     PWM4CLK         equ	1166	;# 
  7179   00048F                     PWM4LDS         equ	1167	;# 
  7180   000490                     PWM4PR          equ	1168	;# 
  7181   000490                     PWM4PRL         equ	1168	;# 
  7182   000491                     PWM4PRH         equ	1169	;# 
  7183   000492                     PWM4CPRE        equ	1170	;# 
  7184   000493                     PWM4PIPOS       equ	1171	;# 
  7185   000494                     PWM4GIR         equ	1172	;# 
  7186   000495                     PWM4GIE         equ	1173	;# 
  7187   000496                     PWM4CON         equ	1174	;# 
  7188   000497                     PWM4S1CFG       equ	1175	;# 
  7189   000498                     PWM4S1P1        equ	1176	;# 
  7190   000498                     PWM4S1P1L       equ	1176	;# 
  7191   000499                     PWM4S1P1H       equ	1177	;# 
  7192   00049A                     PWM4S1P2        equ	1178	;# 
  7193   00049A                     PWM4S1P2L       equ	1178	;# 
  7194   00049B                     PWM4S1P2H       equ	1179	;# 
  7195   00049C                     PWMLOAD         equ	1180	;# 
  7196   00049D                     PWMEN           equ	1181	;# 
  7197   00049E                     PIE0            equ	1182	;# 
  7198   00049F                     PIE1            equ	1183	;# 
  7199   0004A0                     PIE2            equ	1184	;# 
  7200   0004A1                     PIE3            equ	1185	;# 
  7201   0004A2                     PIE4            equ	1186	;# 
  7202   0004A3                     PIE5            equ	1187	;# 
  7203   0004A4                     PIE6            equ	1188	;# 
  7204   0004A5                     PIE7            equ	1189	;# 
  7205   0004A6                     PIE8            equ	1190	;# 
  7206   0004A7                     PIE9            equ	1191	;# 
  7207   0004A8                     PIE10           equ	1192	;# 
  7208   0004A9                     PIE11           equ	1193	;# 
  7209   0004AA                     PIE12           equ	1194	;# 
  7210   0004AB                     PIE13           equ	1195	;# 
  7211   0004AC                     PIE14           equ	1196	;# 
  7212   0004AD                     PIE15           equ	1197	;# 
  7213   0004AE                     PIR0            equ	1198	;# 
  7214   0004AF                     PIR1            equ	1199	;# 
  7215   0004B0                     PIR2            equ	1200	;# 
  7216   0004B1                     PIR3            equ	1201	;# 
  7217   0004B2                     PIR4            equ	1202	;# 
  7218   0004B3                     PIR5            equ	1203	;# 
  7219   0004B4                     PIR6            equ	1204	;# 
  7220   0004B5                     PIR7            equ	1205	;# 
  7221   0004B6                     PIR8            equ	1206	;# 
  7222   0004B7                     PIR9            equ	1207	;# 
  7223   0004B8                     PIR10           equ	1208	;# 
  7224   0004B9                     PIR11           equ	1209	;# 
  7225   0004BA                     PIR12           equ	1210	;# 
  7226   0004BB                     PIR13           equ	1211	;# 
  7227   0004BC                     PIR14           equ	1212	;# 
  7228   0004BD                     PIR15           equ	1213	;# 
  7229   0004BE                     LATA            equ	1214	;# 
  7230   0004BF                     LATB            equ	1215	;# 
  7231   0004C0                     LATC            equ	1216	;# 
  7232   0004C6                     TRISA           equ	1222	;# 
  7233   0004C7                     TRISB           equ	1223	;# 
  7234   0004C8                     TRISC           equ	1224	;# 
  7235   0004CA                     TRISE           equ	1226	;# 
  7236   0004CE                     PORTA           equ	1230	;# 
  7237   0004CF                     PORTB           equ	1231	;# 
  7238   0004D0                     PORTC           equ	1232	;# 
  7239   0004D2                     PORTE           equ	1234	;# 
  7240   0004D6                     INTCON0         equ	1238	;# 
  7241   0004D7                     INTCON1         equ	1239	;# 
  7242   0004D8                     STATUS          equ	1240	;# 
  7243   0004D9                     FSR2            equ	1241	;# 
  7244   0004D9                     FSR2L           equ	1241	;# 
  7245   0004DA                     FSR2H           equ	1242	;# 
  7246   0004DB                     PLUSW2          equ	1243	;# 
  7247   0004DC                     PREINC2         equ	1244	;# 
  7248   0004DD                     POSTDEC2        equ	1245	;# 
  7249   0004DE                     POSTINC2        equ	1246	;# 
  7250   0004DF                     INDF2           equ	1247	;# 
  7251   0004E0                     BSR             equ	1248	;# 
  7252   0004E1                     FSR1            equ	1249	;# 
  7253   0004E1                     FSR1L           equ	1249	;# 
  7254   0004E2                     FSR1H           equ	1250	;# 
  7255   0004E3                     PLUSW1          equ	1251	;# 
  7256   0004E4                     PREINC1         equ	1252	;# 
  7257   0004E5                     POSTDEC1        equ	1253	;# 
  7258   0004E6                     POSTINC1        equ	1254	;# 
  7259   0004E7                     INDF1           equ	1255	;# 
  7260   0004E8                     WREG            equ	1256	;# 
  7261   0004E9                     FSR0            equ	1257	;# 
  7262   0004E9                     FSR0L           equ	1257	;# 
  7263   0004EA                     FSR0H           equ	1258	;# 
  7264   0004EB                     PLUSW0          equ	1259	;# 
  7265   0004EC                     PREINC0         equ	1260	;# 
  7266   0004ED                     POSTDEC0        equ	1261	;# 
  7267   0004EE                     POSTINC0        equ	1262	;# 
  7268   0004EF                     INDF0           equ	1263	;# 
  7269   0004F0                     PCON0           equ	1264	;# 
  7270   0004F1                     PCON1           equ	1265	;# 
  7271   0004F2                     CPUDOZE         equ	1266	;# 
  7272   0004F3                     PROD            equ	1267	;# 
  7273   0004F3                     PRODL           equ	1267	;# 
  7274   0004F4                     PRODH           equ	1268	;# 
  7275   0004F5                     TABLAT          equ	1269	;# 
  7276   0004F6                     TBLPTR          equ	1270	;# 
  7277   0004F6                     TBLPTRL         equ	1270	;# 
  7278   0004F7                     TBLPTRH         equ	1271	;# 
  7279   0004F8                     TBLPTRU         equ	1272	;# 
  7280   0004F9                     PCLAT           equ	1273	;# 
  7281   0004F9                     PCL             equ	1273	;# 
  7282   0004FA                     PCLATH          equ	1274	;# 
  7283   0004FB                     PCLATU          equ	1275	;# 
  7284   0004FC                     STKPTR          equ	1276	;# 
  7285   0004FD                     TOS             equ	1277	;# 
  7286   0004FD                     TOSL            equ	1277	;# 
  7287   0004FE                     TOSH            equ	1278	;# 
  7288   0004FF                     TOSU            equ	1279	;# 
  7289   000038                     BOOTREG         equ	56	;# 
  7290   000039                     CLKRCON         equ	57	;# 
  7291   00003A                     CLKRCLK         equ	58	;# 
  7292   000040                     NVMCON0         equ	64	;# 
  7293   000041                     NVMCON1         equ	65	;# 
  7294   000042                     NVMLOCK         equ	66	;# 
  7295   000043                     NVMADR          equ	67	;# 
  7296   000043                     NVMADRL         equ	67	;# 
  7297   000044                     NVMADRH         equ	68	;# 
  7298   000045                     NVMADRU         equ	69	;# 
  7299   000046                     NVMDAT          equ	70	;# 
  7300   000046                     NVMDATL         equ	70	;# 
  7301   000047                     NVMDATH         equ	71	;# 
  7302   000048                     VREGCON         equ	72	;# 
  7303   000049                     BORCON          equ	73	;# 
  7304   00004A                     HLVDCON0        equ	74	;# 
  7305   00004B                     HLVDCON1        equ	75	;# 
  7306   00004C                     ZCDCON          equ	76	;# 
  7307   000060                     PMD0            equ	96	;# 
  7308   000061                     PMD1            equ	97	;# 
  7309   000062                     PMD2            equ	98	;# 
  7310   000063                     PMD3            equ	99	;# 
  7311   000064                     PMD4            equ	100	;# 
  7312   000065                     PMD5            equ	101	;# 
  7313   000066                     PMD6            equ	102	;# 
  7314   000067                     PMD7            equ	103	;# 
  7315   000068                     PMD8            equ	104	;# 
  7316   00006A                     MD1CON0         equ	106	;# 
  7317   00006B                     MD1CON1         equ	107	;# 
  7318   00006C                     MD1SRC          equ	108	;# 
  7319   00006D                     MD1CARL         equ	109	;# 
  7320   00006E                     MD1CARH         equ	110	;# 
  7321   00006F                     CMOUT           equ	111	;# 
  7322   000070                     CM1CON0         equ	112	;# 
  7323   000071                     CM1CON1         equ	113	;# 
  7324   000072                     CM1NCH          equ	114	;# 
  7325   000073                     CM1PCH          equ	115	;# 
  7326   000074                     CM2CON0         equ	116	;# 
  7327   000075                     CM2CON1         equ	117	;# 
  7328   000076                     CM2NCH          equ	118	;# 
  7329   000077                     CM2PCH          equ	119	;# 
  7330   000078                     WDTCON0         equ	120	;# 
  7331   000079                     WDTCON1         equ	121	;# 
  7332   00007A                     WDTPSL          equ	122	;# 
  7333   00007B                     WDTPSH          equ	123	;# 
  7334   00007C                     WDTTMR          equ	124	;# 
  7335   00007D                     DAC1DAT         equ	125	;# 
  7336   00007D                     DAC1DATL        equ	125	;# 
  7337   00007F                     DAC1CON         equ	127	;# 
  7338   000080                     SPI1RXB         equ	128	;# 
  7339   000081                     SPI1TXB         equ	129	;# 
  7340   000082                     SPI1TCNT        equ	130	;# 
  7341   000082                     SPI1TCNTL       equ	130	;# 
  7342   000083                     SPI1TCNTH       equ	131	;# 
  7343   000084                     SPI1CON0        equ	132	;# 
  7344   000085                     SPI1CON1        equ	133	;# 
  7345   000086                     SPI1CON2        equ	134	;# 
  7346   000087                     SPI1STATUS      equ	135	;# 
  7347   000088                     SPI1TWIDTH      equ	136	;# 
  7348   000089                     SPI1BAUD        equ	137	;# 
  7349   00008A                     SPI1INTF        equ	138	;# 
  7350   00008B                     SPI1INTE        equ	139	;# 
  7351   00008C                     SPI1CLK         equ	140	;# 
  7352   00008D                     SPI2RXB         equ	141	;# 
  7353   00008E                     SPI2TXB         equ	142	;# 
  7354   00008F                     SPI2TCNT        equ	143	;# 
  7355   00008F                     SPI2TCNTL       equ	143	;# 
  7356   000090                     SPI2TCNTH       equ	144	;# 
  7357   000091                     SPI2CON0        equ	145	;# 
  7358   000092                     SPI2CON1        equ	146	;# 
  7359   000093                     SPI2CON2        equ	147	;# 
  7360   000094                     SPI2STATUS      equ	148	;# 
  7361   000095                     SPI2TWIDTH      equ	149	;# 
  7362   000096                     SPI2BAUD        equ	150	;# 
  7363   000097                     SPI2INTF        equ	151	;# 
  7364   000098                     SPI2INTE        equ	152	;# 
  7365   000099                     SPI2CLK         equ	153	;# 
  7366   0000AC                     ACTCON          equ	172	;# 
  7367   0000AD                     OSCCON1         equ	173	;# 
  7368   0000AE                     OSCCON2         equ	174	;# 
  7369   0000AF                     OSCCON3         equ	175	;# 
  7370   0000B0                     OSCTUNE         equ	176	;# 
  7371   0000B1                     OSCFRQ          equ	177	;# 
  7372   0000B1                     OSCFREQ         equ	177	;# 
  7373   0000B2                     OSCSTAT         equ	178	;# 
  7374   0000B2                     OSCSTAT1        equ	178	;# 
  7375   0000B3                     OSCEN           equ	179	;# 
  7376   0000B4                     PRLOCK          equ	180	;# 
  7377   0000B5                     SCANPR          equ	181	;# 
  7378   0000B6                     DMA1PR          equ	182	;# 
  7379   0000B7                     DMA2PR          equ	183	;# 
  7380   0000B8                     DMA3PR          equ	184	;# 
  7381   0000B9                     DMA4PR          equ	185	;# 
  7382   0000BA                     DMA5PR          equ	186	;# 
  7383   0000BB                     DMA6PR          equ	187	;# 
  7384   0000BC                     DMA7PR          equ	188	;# 
  7385   0000BD                     DMA8PR          equ	189	;# 
  7386   0000BE                     MAINPR          equ	190	;# 
  7387   0000BF                     ISRPR           equ	191	;# 
  7388   0000D4                     CLCDATA         equ	212	;# 
  7389   0000D5                     CLCSELECT       equ	213	;# 
  7390   0000D6                     CLCnCON         equ	214	;# 
  7391   0000D7                     CLCnPOL         equ	215	;# 
  7392   0000D8                     CLCnSEL0        equ	216	;# 
  7393   0000D9                     CLCnSEL1        equ	217	;# 
  7394   0000DA                     CLCnSEL2        equ	218	;# 
  7395   0000DB                     CLCnSEL3        equ	219	;# 
  7396   0000DC                     CLCnGLS0        equ	220	;# 
  7397   0000DD                     CLCnGLS1        equ	221	;# 
  7398   0000DE                     CLCnGLS2        equ	222	;# 
  7399   0000DF                     CLCnGLS3        equ	223	;# 
  7400   0000E8                     DMASELECT       equ	232	;# 
  7401   0000E9                     DMAnBUF         equ	233	;# 
  7402   0000EA                     DMAnDCNT        equ	234	;# 
  7403   0000EA                     DMAnDCNTL       equ	234	;# 
  7404   0000EB                     DMAnDCNTH       equ	235	;# 
  7405   0000EC                     DMAnDPTR        equ	236	;# 
  7406   0000EC                     DMAnDPTRL       equ	236	;# 
  7407   0000ED                     DMAnDPTRH       equ	237	;# 
  7408   0000EE                     DMAnDSZ         equ	238	;# 
  7409   0000EE                     DMAnDSZL        equ	238	;# 
  7410   0000EF                     DMAnDSZH        equ	239	;# 
  7411   0000F0                     DMAnDSA         equ	240	;# 
  7412   0000F0                     DMAnDSAL        equ	240	;# 
  7413   0000F1                     DMAnDSAH        equ	241	;# 
  7414   0000F2                     DMAnSCNT        equ	242	;# 
  7415   0000F2                     DMAnSCNTL       equ	242	;# 
  7416   0000F3                     DMAnSCNTH       equ	243	;# 
  7417   0000F4                     DMAnSPTR        equ	244	;# 
  7418   0000F4                     DMAnSPTRL       equ	244	;# 
  7419   0000F5                     DMAnSPTRH       equ	245	;# 
  7420   0000F6                     DMAnSPTRU       equ	246	;# 
  7421   0000F7                     DMAnSSZ         equ	247	;# 
  7422   0000F7                     DMAnSSZL        equ	247	;# 
  7423   0000F8                     DMAnSSZH        equ	248	;# 
  7424   0000F9                     DMAnSSA         equ	249	;# 
  7425   0000F9                     DMAnSSAL        equ	249	;# 
  7426   0000FA                     DMAnSSAH        equ	250	;# 
  7427   0000FB                     DMAnSSAU        equ	251	;# 
  7428   0000FC                     DMAnCON0        equ	252	;# 
  7429   0000FD                     DMAnCON1        equ	253	;# 
  7430   0000FE                     DMAnAIRQ        equ	254	;# 
  7431   0000FF                     DMAnSIRQ        equ	255	;# 
  7432   000100                     C1CONL          equ	256	;# 
  7433   000101                     C1CONH          equ	257	;# 
  7434   000102                     C1CONU          equ	258	;# 
  7435   000103                     C1CONT          equ	259	;# 
  7436   000104                     C1NBTCFGL       equ	260	;# 
  7437   000105                     C1NBTCFGH       equ	261	;# 
  7438   000106                     C1NBTCFGU       equ	262	;# 
  7439   000107                     C1NBTCFGT       equ	263	;# 
  7440   000108                     C1DBTCFGL       equ	264	;# 
  7441   000109                     C1DBTCFGH       equ	265	;# 
  7442   00010A                     C1DBTCFGU       equ	266	;# 
  7443   00010B                     C1DBTCFGT       equ	267	;# 
  7444   00010C                     C1TDCL          equ	268	;# 
  7445   00010D                     C1TDCH          equ	269	;# 
  7446   00010E                     C1TDCU          equ	270	;# 
  7447   000110                     C1TBC           equ	272	;# 
  7448   000110                     C1TBCL          equ	272	;# 
  7449   000111                     C1TBCH          equ	273	;# 
  7450   000112                     C1TBCU          equ	274	;# 
  7451   000113                     C1TBCT          equ	275	;# 
  7452   000114                     C1TSCONL        equ	276	;# 
  7453   000115                     C1TSCONH        equ	277	;# 
  7454   000116                     C1TSCONU        equ	278	;# 
  7455   000117                     C1TSCONT        equ	279	;# 
  7456   000118                     C1VECL          equ	280	;# 
  7457   000119                     C1VECH          equ	281	;# 
  7458   00011A                     C1VECU          equ	282	;# 
  7459   00011B                     C1VECT          equ	283	;# 
  7460   00011C                     C1INTL          equ	284	;# 
  7461   00011D                     C1INTH          equ	285	;# 
  7462   00011E                     C1INTU          equ	286	;# 
  7463   00011F                     C1INTT          equ	287	;# 
  7464   000120                     C1RXIF          equ	288	;# 
  7465   000120                     C1RXIFL         equ	288	;# 
  7466   000121                     C1RXIFH         equ	289	;# 
  7467   000122                     C1RXIFU         equ	290	;# 
  7468   000123                     C1RXIFT         equ	291	;# 
  7469   000124                     C1TXIF          equ	292	;# 
  7470   000124                     C1TXIFL         equ	292	;# 
  7471   000125                     C1TXIFH         equ	293	;# 
  7472   000126                     C1TXIFU         equ	294	;# 
  7473   000127                     C1TXIFT         equ	295	;# 
  7474   000128                     C1RXOVIF        equ	296	;# 
  7475   000128                     C1RXOVIFL       equ	296	;# 
  7476   000129                     C1RXOVIFH       equ	297	;# 
  7477   00012A                     C1RXOVIFU       equ	298	;# 
  7478   00012B                     C1RXOVIFT       equ	299	;# 
  7479   00012C                     C1TXATIF        equ	300	;# 
  7480   00012C                     C1TXATIFL       equ	300	;# 
  7481   00012D                     C1TXATIFH       equ	301	;# 
  7482   00012E                     C1TXATIFU       equ	302	;# 
  7483   00012F                     C1TXATIFT       equ	303	;# 
  7484   000130                     C1TXREQ         equ	304	;# 
  7485   000130                     C1TXREQL        equ	304	;# 
  7486   000131                     C1TXREQH        equ	305	;# 
  7487   000132                     C1TXREQU        equ	306	;# 
  7488   000133                     C1TXREQT        equ	307	;# 
  7489   000134                     C1TRECL         equ	308	;# 
  7490   000135                     C1TRECH         equ	309	;# 
  7491   000136                     C1TRECU         equ	310	;# 
  7492   000137                     C1TRECT         equ	311	;# 
  7493   000138                     C1BDIAG0L       equ	312	;# 
  7494   000139                     C1BDIAG0H       equ	313	;# 
  7495   00013C                     C1BDIAG1L       equ	316	;# 
  7496   00013D                     C1BDIAG1H       equ	317	;# 
  7497   00013E                     C1BDIAG1U       equ	318	;# 
  7498   00013F                     C1BDIAG1T       equ	319	;# 
  7499   000140                     C1TEFCONL       equ	320	;# 
  7500   000141                     C1TEFCONH       equ	321	;# 
  7501   000142                     C1TEFCONU       equ	322	;# 
  7502   000143                     C1TEFCONT       equ	323	;# 
  7503   000144                     C1TEFSTAL       equ	324	;# 
  7504   000145                     C1TEFSTAH       equ	325	;# 
  7505   000146                     C1TEFSTAU       equ	326	;# 
  7506   000147                     C1TEFSTAT       equ	327	;# 
  7507   000148                     C1TEFUA         equ	328	;# 
  7508   000148                     C1TEFUAL        equ	328	;# 
  7509   000149                     C1TEFUAH        equ	329	;# 
  7510   00014A                     C1TEFUAU        equ	330	;# 
  7511   00014B                     C1TEFUAT        equ	331	;# 
  7512   00014C                     C1FIFOBA        equ	332	;# 
  7513   00014C                     C1FIFOBAL       equ	332	;# 
  7514   00014D                     C1FIFOBAH       equ	333	;# 
  7515   00014E                     C1FIFOBAU       equ	334	;# 
  7516   00014F                     C1FIFOBAT       equ	335	;# 
  7517   000150                     C1TXQCONL       equ	336	;# 
  7518   000151                     C1TXQCONH       equ	337	;# 
  7519   000152                     C1TXQCONU       equ	338	;# 
  7520   000153                     C1TXQCONT       equ	339	;# 
  7521   000154                     C1TXQSTAL       equ	340	;# 
  7522   000155                     C1TXQSTAH       equ	341	;# 
  7523   000156                     C1TXQSTAU       equ	342	;# 
  7524   000157                     C1TXQSTAT       equ	343	;# 
  7525   000158                     C1TXQUA         equ	344	;# 
  7526   000158                     C1TXQUAL        equ	344	;# 
  7527   000159                     C1TXQUAH        equ	345	;# 
  7528   00015A                     C1TXQUAU        equ	346	;# 
  7529   00015B                     C1TXQUAT        equ	347	;# 
  7530   00015C                     C1FIFOCON1      equ	348	;# 
  7531   00015C                     C1FIFOCON1L     equ	348	;# 
  7532   00015D                     C1FIFOCON1H     equ	349	;# 
  7533   00015E                     C1FIFOCON1U     equ	350	;# 
  7534   00015F                     C1FIFOCON1T     equ	351	;# 
  7535   000160                     C1FIFOSTA1      equ	352	;# 
  7536   000160                     C1FIFOSTA1L     equ	352	;# 
  7537   000161                     C1FIFOSTA1H     equ	353	;# 
  7538   000162                     C1FIFOSTA1U     equ	354	;# 
  7539   000163                     C1FIFOSTA1T     equ	355	;# 
  7540   000164                     C1FIFOUA1       equ	356	;# 
  7541   000164                     C1FIFOUA1L      equ	356	;# 
  7542   000165                     C1FIFOUA1H      equ	357	;# 
  7543   000166                     C1FIFOUA1U      equ	358	;# 
  7544   000167                     C1FIFOUA1T      equ	359	;# 
  7545   000168                     C1FIFOCON2      equ	360	;# 
  7546   000168                     C1FIFOCON2L     equ	360	;# 
  7547   000169                     C1FIFOCON2H     equ	361	;# 
  7548   00016A                     C1FIFOCON2U     equ	362	;# 
  7549   00016B                     C1FIFOCON2T     equ	363	;# 
  7550   00016C                     C1FIFOSTA2      equ	364	;# 
  7551   00016C                     C1FIFOSTA2L     equ	364	;# 
  7552   00016D                     C1FIFOSTA2H     equ	365	;# 
  7553   00016E                     C1FIFOSTA2U     equ	366	;# 
  7554   00016F                     C1FIFOSTA2T     equ	367	;# 
  7555   000170                     C1FIFOUA2       equ	368	;# 
  7556   000170                     C1FIFOUA2L      equ	368	;# 
  7557   000171                     C1FIFOUA2H      equ	369	;# 
  7558   000172                     C1FIFOUA2U      equ	370	;# 
  7559   000173                     C1FIFOUA2T      equ	371	;# 
  7560   000174                     C1FIFOCON3      equ	372	;# 
  7561   000174                     C1FIFOCON3L     equ	372	;# 
  7562   000175                     C1FIFOCON3H     equ	373	;# 
  7563   000176                     C1FIFOCON3U     equ	374	;# 
  7564   000177                     C1FIFOCON3T     equ	375	;# 
  7565   000178                     C1FIFOSTA3      equ	376	;# 
  7566   000178                     C1FIFOSTA3L     equ	376	;# 
  7567   000179                     C1FIFOSTA3H     equ	377	;# 
  7568   00017A                     C1FIFOSTA3U     equ	378	;# 
  7569   00017B                     C1FIFOSTA3T     equ	379	;# 
  7570   00017C                     C1FIFOUA3       equ	380	;# 
  7571   00017C                     C1FIFOUA3L      equ	380	;# 
  7572   00017D                     C1FIFOUA3H      equ	381	;# 
  7573   00017E                     C1FIFOUA3U      equ	382	;# 
  7574   00017F                     C1FIFOUA3T      equ	383	;# 
  7575   000180                     C1FLTCON0L      equ	384	;# 
  7576   000181                     C1FLTCON0H      equ	385	;# 
  7577   000182                     C1FLTCON0U      equ	386	;# 
  7578   000183                     C1FLTCON0T      equ	387	;# 
  7579   000184                     C1FLTCON1L      equ	388	;# 
  7580   000185                     C1FLTCON1H      equ	389	;# 
  7581   000186                     C1FLTCON1U      equ	390	;# 
  7582   000187                     C1FLTCON1T      equ	391	;# 
  7583   000188                     C1FLTCON2L      equ	392	;# 
  7584   000189                     C1FLTCON2H      equ	393	;# 
  7585   00018A                     C1FLTCON2U      equ	394	;# 
  7586   00018B                     C1FLTCON2T      equ	395	;# 
  7587   00018C                     C1FLTOBJ0       equ	396	;# 
  7588   00018C                     C1FLTOBJ0L      equ	396	;# 
  7589   00018D                     C1FLTOBJ0H      equ	397	;# 
  7590   00018E                     C1FLTOBJ0U      equ	398	;# 
  7591   00018F                     C1FLTOBJ0T      equ	399	;# 
  7592   000190                     C1MASK0         equ	400	;# 
  7593   000190                     C1MASK0L        equ	400	;# 
  7594   000191                     C1MASK0H        equ	401	;# 
  7595   000192                     C1MASK0U        equ	402	;# 
  7596   000193                     C1MASK0T        equ	403	;# 
  7597   000194                     C1FLTOBJ1       equ	404	;# 
  7598   000194                     C1FLTOBJ1L      equ	404	;# 
  7599   000195                     C1FLTOBJ1H      equ	405	;# 
  7600   000196                     C1FLTOBJ1U      equ	406	;# 
  7601   000197                     C1FLTOBJ1T      equ	407	;# 
  7602   000198                     C1MASK1         equ	408	;# 
  7603   000198                     C1MASK1L        equ	408	;# 
  7604   000199                     C1MASK1H        equ	409	;# 
  7605   00019A                     C1MASK1U        equ	410	;# 
  7606   00019B                     C1MASK1T        equ	411	;# 
  7607   00019C                     C1FLTOBJ2       equ	412	;# 
  7608   00019C                     C1FLTOBJ2L      equ	412	;# 
  7609   00019D                     C1FLTOBJ2H      equ	413	;# 
  7610   00019E                     C1FLTOBJ2U      equ	414	;# 
  7611   00019F                     C1FLTOBJ2T      equ	415	;# 
  7612   0001A0                     C1MASK2         equ	416	;# 
  7613   0001A0                     C1MASK2L        equ	416	;# 
  7614   0001A1                     C1MASK2H        equ	417	;# 
  7615   0001A2                     C1MASK2U        equ	418	;# 
  7616   0001A3                     C1MASK2T        equ	419	;# 
  7617   0001A4                     C1FLTOBJ3       equ	420	;# 
  7618   0001A4                     C1FLTOBJ3L      equ	420	;# 
  7619   0001A5                     C1FLTOBJ3H      equ	421	;# 
  7620   0001A6                     C1FLTOBJ3U      equ	422	;# 
  7621   0001A7                     C1FLTOBJ3T      equ	423	;# 
  7622   0001A8                     C1MASK3         equ	424	;# 
  7623   0001A8                     C1MASK3L        equ	424	;# 
  7624   0001A9                     C1MASK3H        equ	425	;# 
  7625   0001AA                     C1MASK3U        equ	426	;# 
  7626   0001AB                     C1MASK3T        equ	427	;# 
  7627   0001AC                     C1FLTOBJ4       equ	428	;# 
  7628   0001AC                     C1FLTOBJ4L      equ	428	;# 
  7629   0001AD                     C1FLTOBJ4H      equ	429	;# 
  7630   0001AE                     C1FLTOBJ4U      equ	430	;# 
  7631   0001AF                     C1FLTOBJ4T      equ	431	;# 
  7632   0001B0                     C1MASK4         equ	432	;# 
  7633   0001B0                     C1MASK4L        equ	432	;# 
  7634   0001B1                     C1MASK4H        equ	433	;# 
  7635   0001B2                     C1MASK4U        equ	434	;# 
  7636   0001B3                     C1MASK4T        equ	435	;# 
  7637   0001B4                     C1FLTOBJ5       equ	436	;# 
  7638   0001B4                     C1FLTOBJ5L      equ	436	;# 
  7639   0001B5                     C1FLTOBJ5H      equ	437	;# 
  7640   0001B6                     C1FLTOBJ5U      equ	438	;# 
  7641   0001B7                     C1FLTOBJ5T      equ	439	;# 
  7642   0001B8                     C1MASK5         equ	440	;# 
  7643   0001B8                     C1MASK5L        equ	440	;# 
  7644   0001B9                     C1MASK5H        equ	441	;# 
  7645   0001BA                     C1MASK5U        equ	442	;# 
  7646   0001BB                     C1MASK5T        equ	443	;# 
  7647   0001BC                     C1FLTOBJ6       equ	444	;# 
  7648   0001BC                     C1FLTOBJ6L      equ	444	;# 
  7649   0001BD                     C1FLTOBJ6H      equ	445	;# 
  7650   0001BE                     C1FLTOBJ6U      equ	446	;# 
  7651   0001BF                     C1FLTOBJ6T      equ	447	;# 
  7652   0001C0                     C1MASK6         equ	448	;# 
  7653   0001C0                     C1MASK6L        equ	448	;# 
  7654   0001C1                     C1MASK6H        equ	449	;# 
  7655   0001C2                     C1MASK6U        equ	450	;# 
  7656   0001C3                     C1MASK6T        equ	451	;# 
  7657   0001C4                     C1FLTOBJ7       equ	452	;# 
  7658   0001C4                     C1FLTOBJ7L      equ	452	;# 
  7659   0001C5                     C1FLTOBJ7H      equ	453	;# 
  7660   0001C6                     C1FLTOBJ7U      equ	454	;# 
  7661   0001C7                     C1FLTOBJ7T      equ	455	;# 
  7662   0001C8                     C1MASK7         equ	456	;# 
  7663   0001C8                     C1MASK7L        equ	456	;# 
  7664   0001C9                     C1MASK7H        equ	457	;# 
  7665   0001CA                     C1MASK7U        equ	458	;# 
  7666   0001CB                     C1MASK7T        equ	459	;# 
  7667   0001CC                     C1FLTOBJ8       equ	460	;# 
  7668   0001CC                     C1FLTOBJ8L      equ	460	;# 
  7669   0001CD                     C1FLTOBJ8H      equ	461	;# 
  7670   0001CE                     C1FLTOBJ8U      equ	462	;# 
  7671   0001CF                     C1FLTOBJ8T      equ	463	;# 
  7672   0001D0                     C1MASK8         equ	464	;# 
  7673   0001D0                     C1MASK8L        equ	464	;# 
  7674   0001D1                     C1MASK8H        equ	465	;# 
  7675   0001D2                     C1MASK8U        equ	466	;# 
  7676   0001D3                     C1MASK8T        equ	467	;# 
  7677   0001D4                     C1FLTOBJ9       equ	468	;# 
  7678   0001D4                     C1FLTOBJ9L      equ	468	;# 
  7679   0001D5                     C1FLTOBJ9H      equ	469	;# 
  7680   0001D6                     C1FLTOBJ9U      equ	470	;# 
  7681   0001D7                     C1FLTOBJ9T      equ	471	;# 
  7682   0001D8                     C1MASK9         equ	472	;# 
  7683   0001D8                     C1MASK9L        equ	472	;# 
  7684   0001D9                     C1MASK9H        equ	473	;# 
  7685   0001DA                     C1MASK9U        equ	474	;# 
  7686   0001DB                     C1MASK9T        equ	475	;# 
  7687   0001DC                     C1FLTOBJ10      equ	476	;# 
  7688   0001DC                     C1FLTOBJ10L     equ	476	;# 
  7689   0001DD                     C1FLTOBJ10H     equ	477	;# 
  7690   0001DE                     C1FLTOBJ10U     equ	478	;# 
  7691   0001DF                     C1FLTOBJ10T     equ	479	;# 
  7692   0001E0                     C1MASK10        equ	480	;# 
  7693   0001E0                     C1MASK10L       equ	480	;# 
  7694   0001E1                     C1MASK10H       equ	481	;# 
  7695   0001E2                     C1MASK10U       equ	482	;# 
  7696   0001E3                     C1MASK10T       equ	483	;# 
  7697   0001E4                     C1FLTOBJ11      equ	484	;# 
  7698   0001E4                     C1FLTOBJ11L     equ	484	;# 
  7699   0001E5                     C1FLTOBJ11H     equ	485	;# 
  7700   0001E6                     C1FLTOBJ11U     equ	486	;# 
  7701   0001E7                     C1FLTOBJ11T     equ	487	;# 
  7702   0001E8                     C1MASK11        equ	488	;# 
  7703   0001E8                     C1MASK11L       equ	488	;# 
  7704   0001E9                     C1MASK11H       equ	489	;# 
  7705   0001EA                     C1MASK11U       equ	490	;# 
  7706   0001EB                     C1MASK11T       equ	491	;# 
  7707   000200                     PPSLOCK         equ	512	;# 
  7708   000201                     RA0PPS          equ	513	;# 
  7709   000202                     RA1PPS          equ	514	;# 
  7710   000203                     RA2PPS          equ	515	;# 
  7711   000204                     RA3PPS          equ	516	;# 
  7712   000205                     RA4PPS          equ	517	;# 
  7713   000206                     RA5PPS          equ	518	;# 
  7714   000207                     RA6PPS          equ	519	;# 
  7715   000208                     RA7PPS          equ	520	;# 
  7716   000209                     RB0PPS          equ	521	;# 
  7717   00020A                     RB1PPS          equ	522	;# 
  7718   00020B                     RB2PPS          equ	523	;# 
  7719   00020C                     RB3PPS          equ	524	;# 
  7720   00020D                     RB4PPS          equ	525	;# 
  7721   00020E                     RB5PPS          equ	526	;# 
  7722   00020F                     RB6PPS          equ	527	;# 
  7723   000210                     RB7PPS          equ	528	;# 
  7724   000211                     RC0PPS          equ	529	;# 
  7725   000212                     RC1PPS          equ	530	;# 
  7726   000213                     RC2PPS          equ	531	;# 
  7727   000214                     RC3PPS          equ	532	;# 
  7728   000215                     RC4PPS          equ	533	;# 
  7729   000216                     RC5PPS          equ	534	;# 
  7730   000217                     RC6PPS          equ	535	;# 
  7731   000218                     RC7PPS          equ	536	;# 
  7732   00023D                     CANRXPPS        equ	573	;# 
  7733   00023E                     INT0PPS         equ	574	;# 
  7734   00023F                     INT1PPS         equ	575	;# 
  7735   000240                     INT2PPS         equ	576	;# 
  7736   000241                     T0CKIPPS        equ	577	;# 
  7737   000242                     T1CKIPPS        equ	578	;# 
  7738   000243                     T1GPPS          equ	579	;# 
  7739   000244                     T3CKIPPS        equ	580	;# 
  7740   000245                     T3GPPS          equ	581	;# 
  7741   000246                     T5CKIPPS        equ	582	;# 
  7742   000247                     T5GPPS          equ	583	;# 
  7743   000248                     T2INPPS         equ	584	;# 
  7744   000249                     T4INPPS         equ	585	;# 
  7745   00024A                     T6INPPS         equ	586	;# 
  7746   00024B                     TUIN0PPS        equ	587	;# 
  7747   00024C                     TUIN1PPS        equ	588	;# 
  7748   00024F                     CCP1PPS         equ	591	;# 
  7749   000250                     CCP2PPS         equ	592	;# 
  7750   000251                     CCP3PPS         equ	593	;# 
  7751   000253                     PWM1ERSPPS      equ	595	;# 
  7752   000254                     PWM2ERSPPS      equ	596	;# 
  7753   000255                     PWM3ERSPPS      equ	597	;# 
  7754   000256                     PWM4ERSPPS      equ	598	;# 
  7755   000257                     PWMIN0PPS       equ	599	;# 
  7756   000258                     PWMIN1PPS       equ	600	;# 
  7757   000259                     SMT1WINPPS      equ	601	;# 
  7758   00025A                     SMT1SIGPPS      equ	602	;# 
  7759   00025B                     CWG1PPS         equ	603	;# 
  7760   00025B                     CWG1INPPS       equ	603	;# 
  7761   00025C                     CWG2PPS         equ	604	;# 
  7762   00025C                     CWG2INPPS       equ	604	;# 
  7763   00025D                     CWG3PPS         equ	605	;# 
  7764   00025D                     CWG3INPPS       equ	605	;# 
  7765   00025E                     MD1CARLPPS      equ	606	;# 
  7766   00025E                     MDCARLPPS       equ	606	;# 
  7767   00025F                     MD1CARHPPS      equ	607	;# 
  7768   00025F                     MDCARHPPS       equ	607	;# 
  7769   000260                     MD1SRCPPS       equ	608	;# 
  7770   000260                     MDSRCPPS        equ	608	;# 
  7771   000261                     CLCIN0PPS       equ	609	;# 
  7772   000262                     CLCIN1PPS       equ	610	;# 
  7773   000263                     CLCIN2PPS       equ	611	;# 
  7774   000264                     CLCIN3PPS       equ	612	;# 
  7775   000265                     CLCIN4PPS       equ	613	;# 
  7776   000266                     CLCIN5PPS       equ	614	;# 
  7777   000267                     CLCIN6PPS       equ	615	;# 
  7778   000268                     CLCIN7PPS       equ	616	;# 
  7779   000269                     ADACTPPS        equ	617	;# 
  7780   00026A                     SPI1SCKPPS      equ	618	;# 
  7781   00026B                     SPI1SDIPPS      equ	619	;# 
  7782   00026C                     SPI1SSPPS       equ	620	;# 
  7783   00026D                     SPI2SCKPPS      equ	621	;# 
  7784   00026E                     SPI2SDIPPS      equ	622	;# 
  7785   00026F                     SPI2SSPPS       equ	623	;# 
  7786   000270                     I2C1SDAPPS      equ	624	;# 
  7787   000271                     I2C1SCLPPS      equ	625	;# 
  7788   000272                     U1RXPPS         equ	626	;# 
  7789   000273                     U1CTSPPS        equ	627	;# 
  7790   000274                     U2RXPPS         equ	628	;# 
  7791   000275                     U2CTSPPS        equ	629	;# 
  7792   000276                     U3RXPPS         equ	630	;# 
  7793   000277                     U3CTSPPS        equ	631	;# 
  7794   000278                     U4RXPPS         equ	632	;# 
  7795   000279                     U4CTSPPS        equ	633	;# 
  7796   00027A                     U5RXPPS         equ	634	;# 
  7797   00027B                     U5CTSPPS        equ	635	;# 
  7798   000286                     RC4I2C          equ	646	;# 
  7799   000287                     RC3I2C          equ	647	;# 
  7800   000288                     RB2I2C          equ	648	;# 
  7801   000289                     RB1I2C          equ	649	;# 
  7802   00028A                     I2C1RXB         equ	650	;# 
  7803   00028B                     I2C1TXB         equ	651	;# 
  7804   00028C                     I2C1CNTL        equ	652	;# 
  7805   00028D                     I2C1CNTH        equ	653	;# 
  7806   00028E                     I2C1ADB0        equ	654	;# 
  7807   00028F                     I2C1ADB1        equ	655	;# 
  7808   000290                     I2C1ADR0        equ	656	;# 
  7809   000291                     I2C1ADR1        equ	657	;# 
  7810   000292                     I2C1ADR2        equ	658	;# 
  7811   000293                     I2C1ADR3        equ	659	;# 
  7812   000294                     I2C1CON0        equ	660	;# 
  7813   000295                     I2C1CON1        equ	661	;# 
  7814   000296                     I2C1CON2        equ	662	;# 
  7815   000297                     I2C1ERR         equ	663	;# 
  7816   000298                     I2C1STAT0       equ	664	;# 
  7817   000299                     I2C1STAT1       equ	665	;# 
  7818   00029A                     I2C1PIR         equ	666	;# 
  7819   00029B                     I2C1PIE         equ	667	;# 
  7820   00029C                     I2C1BTO         equ	668	;# 
  7821   00029D                     I2C1BAUD        equ	669	;# 
  7822   00029E                     I2C1CLK         equ	670	;# 
  7823   00029F                     I2C1BTOC        equ	671	;# 
  7824   0002A1                     U1RXB           equ	673	;# 
  7825   0002A1                     U1RXBL          equ	673	;# 
  7826   0002A2                     U1RXCHK         equ	674	;# 
  7827   0002A3                     U1TXB           equ	675	;# 
  7828   0002A3                     U1TXBL          equ	675	;# 
  7829   0002A4                     U1TXCHK         equ	676	;# 
  7830   0002A5                     U1P1            equ	677	;# 
  7831   0002A5                     U1P1L           equ	677	;# 
  7832   0002A6                     U1P1H           equ	678	;# 
  7833   0002A7                     U1P2            equ	679	;# 
  7834   0002A7                     U1P2L           equ	679	;# 
  7835   0002A8                     U1P2H           equ	680	;# 
  7836   0002A9                     U1P3            equ	681	;# 
  7837   0002A9                     U1P3L           equ	681	;# 
  7838   0002AA                     U1P3H           equ	682	;# 
  7839   0002AB                     U1CON0          equ	683	;# 
  7840   0002AC                     U1CON1          equ	684	;# 
  7841   0002AD                     U1CON2          equ	685	;# 
  7842   0002AE                     U1BRG           equ	686	;# 
  7843   0002AE                     U1BRGL          equ	686	;# 
  7844   0002AF                     U1BRGH          equ	687	;# 
  7845   0002B0                     U1FIFO          equ	688	;# 
  7846   0002B1                     U1UIR           equ	689	;# 
  7847   0002B2                     U1ERRIR         equ	690	;# 
  7848   0002B3                     U1ERRIE         equ	691	;# 
  7849   0002B4                     U2RXB           equ	692	;# 
  7850   0002B4                     U2RXBL          equ	692	;# 
  7851   0002B5                     U2RXCHK         equ	693	;# 
  7852   0002B6                     U2TXB           equ	694	;# 
  7853   0002B6                     U2TXBL          equ	694	;# 
  7854   0002B7                     U2TXCHK         equ	695	;# 
  7855   0002B8                     U2P1            equ	696	;# 
  7856   0002B8                     U2P1L           equ	696	;# 
  7857   0002B9                     U2P1H           equ	697	;# 
  7858   0002BA                     U2P2            equ	698	;# 
  7859   0002BA                     U2P2L           equ	698	;# 
  7860   0002BB                     U2P2H           equ	699	;# 
  7861   0002BC                     U2P3            equ	700	;# 
  7862   0002BC                     U2P3L           equ	700	;# 
  7863   0002BD                     U2P3H           equ	701	;# 
  7864   0002BE                     U2CON0          equ	702	;# 
  7865   0002BF                     U2CON1          equ	703	;# 
  7866   0002C0                     U2CON2          equ	704	;# 
  7867   0002C1                     U2BRG           equ	705	;# 
  7868   0002C1                     U2BRGL          equ	705	;# 
  7869   0002C2                     U2BRGH          equ	706	;# 
  7870   0002C3                     U2FIFO          equ	707	;# 
  7871   0002C4                     U2UIR           equ	708	;# 
  7872   0002C5                     U2ERRIR         equ	709	;# 
  7873   0002C6                     U2ERRIE         equ	710	;# 
  7874   0002C7                     U3RXB           equ	711	;# 
  7875   0002C7                     U3RXBL          equ	711	;# 
  7876   0002C9                     U3TXB           equ	713	;# 
  7877   0002C9                     U3TXBL          equ	713	;# 
  7878   0002CB                     U3P1            equ	715	;# 
  7879   0002CB                     U3P1L           equ	715	;# 
  7880   0002CD                     U3P2            equ	717	;# 
  7881   0002CD                     U3P2L           equ	717	;# 
  7882   0002CF                     U3P3            equ	719	;# 
  7883   0002CF                     U3P3L           equ	719	;# 
  7884   0002D1                     U3CON0          equ	721	;# 
  7885   0002D2                     U3CON1          equ	722	;# 
  7886   0002D3                     U3CON2          equ	723	;# 
  7887   0002D4                     U3BRG           equ	724	;# 
  7888   0002D4                     U3BRGL          equ	724	;# 
  7889   0002D5                     U3BRGH          equ	725	;# 
  7890   0002D6                     U3FIFO          equ	726	;# 
  7891   0002D7                     U3UIR           equ	727	;# 
  7892   0002D8                     U3ERRIR         equ	728	;# 
  7893   0002D9                     U3ERRIE         equ	729	;# 
  7894   0002DA                     U4RXB           equ	730	;# 
  7895   0002DA                     U4RXBL          equ	730	;# 
  7896   0002DC                     U4TXB           equ	732	;# 
  7897   0002DC                     U4TXBL          equ	732	;# 
  7898   0002DE                     U4P1            equ	734	;# 
  7899   0002DE                     U4P1L           equ	734	;# 
  7900   0002E0                     U4P2            equ	736	;# 
  7901   0002E0                     U4P2L           equ	736	;# 
  7902   0002E2                     U4P3            equ	738	;# 
  7903   0002E2                     U4P3L           equ	738	;# 
  7904   0002E4                     U4CON0          equ	740	;# 
  7905   0002E5                     U4CON1          equ	741	;# 
  7906   0002E6                     U4CON2          equ	742	;# 
  7907   0002E7                     U4BRG           equ	743	;# 
  7908   0002E7                     U4BRGL          equ	743	;# 
  7909   0002E8                     U4BRGH          equ	744	;# 
  7910   0002E9                     U4FIFO          equ	745	;# 
  7911   0002EA                     U4UIR           equ	746	;# 
  7912   0002EB                     U4ERRIR         equ	747	;# 
  7913   0002EC                     U4ERRIE         equ	748	;# 
  7914   0002ED                     U5RXB           equ	749	;# 
  7915   0002ED                     U5RXBL          equ	749	;# 
  7916   0002EF                     U5TXB           equ	751	;# 
  7917   0002EF                     U5TXBL          equ	751	;# 
  7918   0002F1                     U5P1            equ	753	;# 
  7919   0002F1                     U5P1L           equ	753	;# 
  7920   0002F3                     U5P2            equ	755	;# 
  7921   0002F3                     U5P2L           equ	755	;# 
  7922   0002F5                     U5P3            equ	757	;# 
  7923   0002F5                     U5P3L           equ	757	;# 
  7924   0002F7                     U5CON0          equ	759	;# 
  7925   0002F8                     U5CON1          equ	760	;# 
  7926   0002F9                     U5CON2          equ	761	;# 
  7927   0002FA                     U5BRG           equ	762	;# 
  7928   0002FA                     U5BRGL          equ	762	;# 
  7929   0002FB                     U5BRGH          equ	763	;# 
  7930   0002FC                     U5FIFO          equ	764	;# 
  7931   0002FD                     U5UIR           equ	765	;# 
  7932   0002FE                     U5ERRIR         equ	766	;# 
  7933   0002FF                     U5ERRIE         equ	767	;# 
  7934   000300                     SMT1TMR         equ	768	;# 
  7935   000300                     SMT1TMRL        equ	768	;# 
  7936   000301                     SMT1TMRH        equ	769	;# 
  7937   000302                     SMT1TMRU        equ	770	;# 
  7938   000303                     SMT1CPR         equ	771	;# 
  7939   000303                     SMT1CPRL        equ	771	;# 
  7940   000304                     SMT1CPRH        equ	772	;# 
  7941   000305                     SMT1CPRU        equ	773	;# 
  7942   000306                     SMT1CPW         equ	774	;# 
  7943   000306                     SMT1CPWL        equ	774	;# 
  7944   000307                     SMT1CPWH        equ	775	;# 
  7945   000308                     SMT1CPWU        equ	776	;# 
  7946   000309                     SMT1PR          equ	777	;# 
  7947   000309                     SMT1PRL         equ	777	;# 
  7948   00030A                     SMT1PRH         equ	778	;# 
  7949   00030B                     SMT1PRU         equ	779	;# 
  7950   00030C                     SMT1CON0        equ	780	;# 
  7951   00030D                     SMT1CON1        equ	781	;# 
  7952   00030E                     SMT1STAT        equ	782	;# 
  7953   00030F                     SMT1CLK         equ	783	;# 
  7954   000310                     SMT1SIG         equ	784	;# 
  7955   000311                     SMT1WIN         equ	785	;# 
  7956   000318                     TMR0L           equ	792	;# 
  7957   000318                     TMR0            equ	792	;# 
  7958   000319                     TMR0H           equ	793	;# 
  7959   000319                     PR0             equ	793	;# 
  7960   00031A                     T0CON0          equ	794	;# 
  7961   00031B                     T0CON1          equ	795	;# 
  7962   00031C                     TMR1            equ	796	;# 
  7963   00031C                     TMR1L           equ	796	;# 
  7964   00031D                     TMR1H           equ	797	;# 
  7965   00031E                     T1CON           equ	798	;# 
  7966   00031E                     TMR1CON         equ	798	;# 
  7967   00031F                     T1GCON          equ	799	;# 
  7968   00031F                     TMR1GCON        equ	799	;# 
  7969   000320                     T1GATE          equ	800	;# 
  7970   000320                     TMR1GATE        equ	800	;# 
  7971   000321                     T1CLK           equ	801	;# 
  7972   000321                     TMR1CLK         equ	801	;# 
  7973   000321                     PR1             equ	801	;# 
  7974   000322                     T2TMR           equ	802	;# 
  7975   000322                     TMR2            equ	802	;# 
  7976   000323                     T2PR            equ	803	;# 
  7977   000323                     PR2             equ	803	;# 
  7978   000324                     T2CON           equ	804	;# 
  7979   000325                     T2HLT           equ	805	;# 
  7980   000326                     T2CLKCON        equ	806	;# 
  7981   000326                     T2CLK           equ	806	;# 
  7982   000327                     T2RST           equ	807	;# 
  7983   000328                     TMR3            equ	808	;# 
  7984   000328                     TMR3L           equ	808	;# 
  7985   000329                     TMR3H           equ	809	;# 
  7986   00032A                     T3CON           equ	810	;# 
  7987   00032A                     TMR3CON         equ	810	;# 
  7988   00032B                     T3GCON          equ	811	;# 
  7989   00032B                     TMR3GCON        equ	811	;# 
  7990   00032C                     T3GATE          equ	812	;# 
  7991   00032C                     TMR3GATE        equ	812	;# 
  7992   00032D                     T3CLK           equ	813	;# 
  7993   00032D                     TMR3CLK         equ	813	;# 
  7994   00032D                     PR3             equ	813	;# 
  7995   00032E                     T4TMR           equ	814	;# 
  7996   00032E                     TMR4            equ	814	;# 
  7997   00032F                     T4PR            equ	815	;# 
  7998   00032F                     PR4             equ	815	;# 
  7999   000330                     T4CON           equ	816	;# 
  8000   000331                     T4HLT           equ	817	;# 
  8001   000332                     T4CLKCON        equ	818	;# 
  8002   000332                     T4CLK           equ	818	;# 
  8003   000333                     T4RST           equ	819	;# 
  8004   000334                     TMR5            equ	820	;# 
  8005   000334                     TMR5L           equ	820	;# 
  8006   000335                     TMR5H           equ	821	;# 
  8007   000336                     T5CON           equ	822	;# 
  8008   000336                     TMR5CON         equ	822	;# 
  8009   000337                     T5GCON          equ	823	;# 
  8010   000337                     TMR5GCON        equ	823	;# 
  8011   000338                     T5GATE          equ	824	;# 
  8012   000338                     TMR5GATE        equ	824	;# 
  8013   000339                     T5CLK           equ	825	;# 
  8014   000339                     TMR5CLK         equ	825	;# 
  8015   000339                     PR5             equ	825	;# 
  8016   00033A                     T6TMR           equ	826	;# 
  8017   00033A                     TMR6            equ	826	;# 
  8018   00033B                     T6PR            equ	827	;# 
  8019   00033B                     PR6             equ	827	;# 
  8020   00033C                     T6CON           equ	828	;# 
  8021   00033D                     T6HLT           equ	829	;# 
  8022   00033E                     T6CLKCON        equ	830	;# 
  8023   00033E                     T6CLK           equ	830	;# 
  8024   00033F                     T6RST           equ	831	;# 
  8025   000340                     CCPR1           equ	832	;# 
  8026   000340                     CCPR1L          equ	832	;# 
  8027   000341                     CCPR1H          equ	833	;# 
  8028   000342                     CCP1CON         equ	834	;# 
  8029   000343                     CCP1CAP         equ	835	;# 
  8030   000344                     CCPR2           equ	836	;# 
  8031   000344                     CCPR2L          equ	836	;# 
  8032   000345                     CCPR2H          equ	837	;# 
  8033   000346                     CCP2CON         equ	838	;# 
  8034   000347                     CCP2CAP         equ	839	;# 
  8035   000348                     CCPR3           equ	840	;# 
  8036   000348                     CCPR3L          equ	840	;# 
  8037   000349                     CCPR3H          equ	841	;# 
  8038   00034A                     CCP3CON         equ	842	;# 
  8039   00034B                     CCP3CAP         equ	843	;# 
  8040   00034C                     CCPTMRS0        equ	844	;# 
  8041   00034F                     CRCDATA         equ	847	;# 
  8042   00034F                     CRCDATAL        equ	847	;# 
  8043   000350                     CRCDATAH        equ	848	;# 
  8044   000351                     CRCDATAU        equ	849	;# 
  8045   000352                     CRCDATAT        equ	850	;# 
  8046   000353                     CRCOUT          equ	851	;# 
  8047   000353                     CRCSHFT         equ	851	;# 
  8048   000353                     CRCXOR          equ	851	;# 
  8049   000353                     CRCOUTL         equ	851	;# 
  8050   000353                     CRCSHFTL        equ	851	;# 
  8051   000353                     CRCSHIFTL       equ	851	;# 
  8052   000353                     CRCXORL         equ	851	;# 
  8053   000354                     CRCOUTH         equ	852	;# 
  8054   000354                     CRCSHFTH        equ	852	;# 
  8055   000354                     CRCSHIFTH       equ	852	;# 
  8056   000354                     CRCXORH         equ	852	;# 
  8057   000355                     CRCOUTU         equ	853	;# 
  8058   000355                     CRCSHFTU        equ	853	;# 
  8059   000355                     CRCSHIFTU       equ	853	;# 
  8060   000355                     CRCXORU         equ	853	;# 
  8061   000356                     CRCOUTT         equ	854	;# 
  8062   000356                     CRCSHFTT        equ	854	;# 
  8063   000356                     CRCSHIFTT       equ	854	;# 
  8064   000356                     CRCXORT         equ	854	;# 
  8065   000357                     CRCCON0         equ	855	;# 
  8066   000358                     CRCCON1         equ	856	;# 
  8067   000359                     CRCCON2         equ	857	;# 
  8068   00035A                     SCANLADR        equ	858	;# 
  8069   00035A                     SCANLADRL       equ	858	;# 
  8070   00035B                     SCANLADRH       equ	859	;# 
  8071   00035C                     SCANLADRU       equ	860	;# 
  8072   00035D                     SCANHADR        equ	861	;# 
  8073   00035D                     SCANHADRL       equ	861	;# 
  8074   00035E                     SCANHADRH       equ	862	;# 
  8075   00035F                     SCANHADRU       equ	863	;# 
  8076   000360                     SCANCON0        equ	864	;# 
  8077   000361                     SCANTRIG        equ	865	;# 
  8078   000362                     IPR0            equ	866	;# 
  8079   000363                     IPR1            equ	867	;# 
  8080   000364                     IPR2            equ	868	;# 
  8081   000365                     IPR3            equ	869	;# 
  8082   000366                     IPR4            equ	870	;# 
  8083   000367                     IPR5            equ	871	;# 
  8084   000368                     IPR6            equ	872	;# 
  8085   000369                     IPR7            equ	873	;# 
  8086   00036A                     IPR8            equ	874	;# 
  8087   00036B                     IPR9            equ	875	;# 
  8088   00036C                     IPR10           equ	876	;# 
  8089   00036D                     IPR11           equ	877	;# 
  8090   00036E                     IPR12           equ	878	;# 
  8091   00036F                     IPR13           equ	879	;# 
  8092   000370                     IPR14           equ	880	;# 
  8093   000371                     IPR15           equ	881	;# 
  8094   000373                     STATUS_CSHAD    equ	883	;# 
  8095   000374                     WREG_CSHAD      equ	884	;# 
  8096   000375                     BSR_CSHAD       equ	885	;# 
  8097   000376                     SHADCON         equ	886	;# 
  8098   000377                     STATUS_SHAD     equ	887	;# 
  8099   000378                     WREG_SHAD       equ	888	;# 
  8100   000379                     BSR_SHAD        equ	889	;# 
  8101   00037A                     PCLATH_SHAD     equ	890	;# 
  8102   00037B                     PCLATU_SHAD     equ	891	;# 
  8103   00037C                     FSR0SH          equ	892	;# 
  8104   00037C                     FSR0L_SHAD      equ	892	;# 
  8105   00037D                     FSR0H_SHAD      equ	893	;# 
  8106   00037E                     FSR1SH          equ	894	;# 
  8107   00037E                     FSR1L_SHAD      equ	894	;# 
  8108   00037F                     FSR1H_SHAD      equ	895	;# 
  8109   000380                     FSR2SH          equ	896	;# 
  8110   000380                     FSR2L_SHAD      equ	896	;# 
  8111   000381                     FSR2H_SHAD      equ	897	;# 
  8112   000382                     PRODSH          equ	898	;# 
  8113   000382                     PRODL_SHAD      equ	898	;# 
  8114   000383                     PRODH_SHAD      equ	899	;# 
  8115   000387                     TU16ACON0       equ	903	;# 
  8116   000388                     TU16ACON1       equ	904	;# 
  8117   000389                     TU16AHLT        equ	905	;# 
  8118   00038A                     TU16APS         equ	906	;# 
  8119   00038B                     TU16ATMR        equ	907	;# 
  8120   00038B                     TU16ACR         equ	907	;# 
  8121   00038B                     TU16ATMRL       equ	907	;# 
  8122   00038B                     TU16ACRL        equ	907	;# 
  8123   00038C                     TU16ATMRH       equ	908	;# 
  8124   00038C                     TU16ACRH        equ	908	;# 
  8125   00038D                     TU16APR         equ	909	;# 
  8126   00038D                     TU16APRL        equ	909	;# 
  8127   00038E                     TU16APRH        equ	910	;# 
  8128   00038F                     TU16ACLK        equ	911	;# 
  8129   000390                     TU16AERS        equ	912	;# 
  8130   000393                     TU16BCON0       equ	915	;# 
  8131   000394                     TU16BCON1       equ	916	;# 
  8132   000395                     TU16BHLT        equ	917	;# 
  8133   000396                     TU16BPS         equ	918	;# 
  8134   000397                     TU16BTMR        equ	919	;# 
  8135   000397                     TU16BCR         equ	919	;# 
  8136   000397                     TU16BTMRL       equ	919	;# 
  8137   000397                     TU16BCRL        equ	919	;# 
  8138   000398                     TU16BTMRH       equ	920	;# 
  8139   000398                     TU16BCRH        equ	920	;# 
  8140   000399                     TU16BPR         equ	921	;# 
  8141   000399                     TU16BPRL        equ	921	;# 
  8142   00039A                     TU16BPRH        equ	922	;# 
  8143   00039B                     TU16BCLK        equ	923	;# 
  8144   00039C                     TU16BERS        equ	924	;# 
  8145   0003BB                     TUCHAIN         equ	955	;# 
  8146   0003BC                     CWG1CLK         equ	956	;# 
  8147   0003BC                     CWG1CLKCON      equ	956	;# 
  8148   0003BD                     CWG1ISM         equ	957	;# 
  8149   0003BE                     CWG1DBR         equ	958	;# 
  8150   0003BF                     CWG1DBF         equ	959	;# 
  8151   0003C0                     CWG1CON0        equ	960	;# 
  8152   0003C1                     CWG1CON1        equ	961	;# 
  8153   0003C2                     CWG1AS0         equ	962	;# 
  8154   0003C3                     CWG1AS1         equ	963	;# 
  8155   0003C4                     CWG1STR         equ	964	;# 
  8156   0003C5                     CWG2CLK         equ	965	;# 
  8157   0003C5                     CWG2CLKCON      equ	965	;# 
  8158   0003C6                     CWG2ISM         equ	966	;# 
  8159   0003C7                     CWG2DBR         equ	967	;# 
  8160   0003C8                     CWG2DBF         equ	968	;# 
  8161   0003C9                     CWG2CON0        equ	969	;# 
  8162   0003CA                     CWG2CON1        equ	970	;# 
  8163   0003CB                     CWG2AS0         equ	971	;# 
  8164   0003CC                     CWG2AS1         equ	972	;# 
  8165   0003CD                     CWG2STR         equ	973	;# 
  8166   0003CE                     CWG3CLK         equ	974	;# 
  8167   0003CE                     CWG3CLKCON      equ	974	;# 
  8168   0003CF                     CWG3ISM         equ	975	;# 
  8169   0003D0                     CWG3DBR         equ	976	;# 
  8170   0003D1                     CWG3DBF         equ	977	;# 
  8171   0003D2                     CWG3CON0        equ	978	;# 
  8172   0003D3                     CWG3CON1        equ	979	;# 
  8173   0003D4                     CWG3AS0         equ	980	;# 
  8174   0003D5                     CWG3AS1         equ	981	;# 
  8175   0003D6                     CWG3STR         equ	982	;# 
  8176   0003D7                     FVRCON          equ	983	;# 
  8177   0003D8                     ADCPCON         equ	984	;# 
  8178   0003D8                     ADCP            equ	984	;# 
  8179   0003D9                     ADLTH           equ	985	;# 
  8180   0003D9                     ADLTHL          equ	985	;# 
  8181   0003DA                     ADLTHH          equ	986	;# 
  8182   0003DB                     ADUTH           equ	987	;# 
  8183   0003DB                     ADUTHL          equ	987	;# 
  8184   0003DC                     ADUTHH          equ	988	;# 
  8185   0003DD                     ADERR           equ	989	;# 
  8186   0003DD                     ADERRL          equ	989	;# 
  8187   0003DE                     ADERRH          equ	990	;# 
  8188   0003DF                     ADSTPT          equ	991	;# 
  8189   0003DF                     ADSTPTL         equ	991	;# 
  8190   0003E0                     ADSTPTH         equ	992	;# 
  8191   0003E1                     ADFLTR          equ	993	;# 
  8192   0003E1                     ADFLTRL         equ	993	;# 
  8193   0003E2                     ADFLTRH         equ	994	;# 
  8194   0003E3                     ADACC           equ	995	;# 
  8195   0003E3                     ADACCL          equ	995	;# 
  8196   0003E4                     ADACCH          equ	996	;# 
  8197   0003E5                     ADACCU          equ	997	;# 
  8198   0003E6                     ADCNT           equ	998	;# 
  8199   0003E7                     ADRPT           equ	999	;# 
  8200   0003E8                     ADPREV          equ	1000	;# 
  8201   0003E8                     ADPREVL         equ	1000	;# 
  8202   0003E9                     ADPREVH         equ	1001	;# 
  8203   0003EA                     ADRES           equ	1002	;# 
  8204   0003EA                     ADRESL          equ	1002	;# 
  8205   0003EB                     ADRESH          equ	1003	;# 
  8206   0003EC                     ADPCH           equ	1004	;# 
  8207   0003EE                     ADACQ           equ	1006	;# 
  8208   0003EE                     ADACQL          equ	1006	;# 
  8209   0003EF                     ADACQH          equ	1007	;# 
  8210   0003F0                     ADCAP           equ	1008	;# 
  8211   0003F1                     ADPRE           equ	1009	;# 
  8212   0003F1                     ADPREL          equ	1009	;# 
  8213   0003F2                     ADPREH          equ	1010	;# 
  8214   0003F3                     ADCON0          equ	1011	;# 
  8215   0003F4                     ADCON1          equ	1012	;# 
  8216   0003F5                     ADCON2          equ	1013	;# 
  8217   0003F6                     ADCON3          equ	1014	;# 
  8218   0003F7                     ADSTAT          equ	1015	;# 
  8219   0003F8                     ADREF           equ	1016	;# 
  8220   0003F9                     ADACT           equ	1017	;# 
  8221   0003FA                     ADCLK           equ	1018	;# 
  8222   0003FB                     ADCTX           equ	1019	;# 
  8223   0003FC                     ADCSEL1         equ	1020	;# 
  8224   0003FD                     ADCSEL2         equ	1021	;# 
  8225   0003FE                     ADCSEL3         equ	1022	;# 
  8226   0003FF                     ADCSEL4         equ	1023	;# 
  8227   000400                     ANSELA          equ	1024	;# 
  8228   000401                     WPUA            equ	1025	;# 
  8229   000402                     ODCONA          equ	1026	;# 
  8230   000403                     SLRCONA         equ	1027	;# 
  8231   000404                     INLVLA          equ	1028	;# 
  8232   000405                     IOCAP           equ	1029	;# 
  8233   000406                     IOCAN           equ	1030	;# 
  8234   000407                     IOCAF           equ	1031	;# 
  8235   000408                     ANSELB          equ	1032	;# 
  8236   000409                     WPUB            equ	1033	;# 
  8237   00040A                     ODCONB          equ	1034	;# 
  8238   00040B                     SLRCONB         equ	1035	;# 
  8239   00040C                     INLVLB          equ	1036	;# 
  8240   00040D                     IOCBP           equ	1037	;# 
  8241   00040E                     IOCBN           equ	1038	;# 
  8242   00040F                     IOCBF           equ	1039	;# 
  8243   000410                     ANSELC          equ	1040	;# 
  8244   000411                     WPUC            equ	1041	;# 
  8245   000412                     ODCONC          equ	1042	;# 
  8246   000413                     SLRCONC         equ	1043	;# 
  8247   000414                     INLVLC          equ	1044	;# 
  8248   000415                     IOCCP           equ	1045	;# 
  8249   000416                     IOCCN           equ	1046	;# 
  8250   000417                     IOCCF           equ	1047	;# 
  8251   000421                     WPUE            equ	1057	;# 
  8252   000424                     INLVLE          equ	1060	;# 
  8253   000425                     IOCEP           equ	1061	;# 
  8254   000426                     IOCEN           equ	1062	;# 
  8255   000427                     IOCEF           equ	1063	;# 
  8256   000440                     NCO1ACC         equ	1088	;# 
  8257   000440                     NCO1ACCL        equ	1088	;# 
  8258   000441                     NCO1ACCH        equ	1089	;# 
  8259   000442                     NCO1ACCU        equ	1090	;# 
  8260   000443                     NCO1INC         equ	1091	;# 
  8261   000443                     NCO1INCL        equ	1091	;# 
  8262   000444                     NCO1INCH        equ	1092	;# 
  8263   000445                     NCO1INCU        equ	1093	;# 
  8264   000446                     NCO1CON         equ	1094	;# 
  8265   000447                     NCO1CLK         equ	1095	;# 
  8266   000448                     NCO2ACC         equ	1096	;# 
  8267   000448                     NCO2ACCL        equ	1096	;# 
  8268   000449                     NCO2ACCH        equ	1097	;# 
  8269   00044A                     NCO2ACCU        equ	1098	;# 
  8270   00044B                     NCO2INC         equ	1099	;# 
  8271   00044B                     NCO2INCL        equ	1099	;# 
  8272   00044C                     NCO2INCH        equ	1100	;# 
  8273   00044D                     NCO2INCU        equ	1101	;# 
  8274   00044E                     NCO2CON         equ	1102	;# 
  8275   00044F                     NCO2CLK         equ	1103	;# 
  8276   000450                     NCO3ACC         equ	1104	;# 
  8277   000450                     NCO3ACCL        equ	1104	;# 
  8278   000451                     NCO3ACCH        equ	1105	;# 
  8279   000452                     NCO3ACCU        equ	1106	;# 
  8280   000453                     NCO3INC         equ	1107	;# 
  8281   000453                     NCO3INCL        equ	1107	;# 
  8282   000454                     NCO3INCH        equ	1108	;# 
  8283   000455                     NCO3INCU        equ	1109	;# 
  8284   000456                     NCO3CON         equ	1110	;# 
  8285   000457                     NCO3CLK         equ	1111	;# 
  8286   000458                     FSCMCON         equ	1112	;# 
  8287   000459                     IVTLOCK         equ	1113	;# 
  8288   00045A                     IVTAD           equ	1114	;# 
  8289   00045A                     IVTADL          equ	1114	;# 
  8290   00045B                     IVTADH          equ	1115	;# 
  8291   00045C                     IVTADU          equ	1116	;# 
  8292   00045D                     IVTBASE         equ	1117	;# 
  8293   00045D                     IVTBASEL        equ	1117	;# 
  8294   00045E                     IVTBASEH        equ	1118	;# 
  8295   00045F                     IVTBASEU        equ	1119	;# 
  8296   000460                     PWM1ERS         equ	1120	;# 
  8297   000461                     PWM1CLK         equ	1121	;# 
  8298   000462                     PWM1LDS         equ	1122	;# 
  8299   000463                     PWM1PR          equ	1123	;# 
  8300   000463                     PWM1PRL         equ	1123	;# 
  8301   000464                     PWM1PRH         equ	1124	;# 
  8302   000465                     PWM1CPRE        equ	1125	;# 
  8303   000466                     PWM1PIPOS       equ	1126	;# 
  8304   000467                     PWM1GIR         equ	1127	;# 
  8305   000468                     PWM1GIE         equ	1128	;# 
  8306   000469                     PWM1CON         equ	1129	;# 
  8307   00046A                     PWM1S1CFG       equ	1130	;# 
  8308   00046B                     PWM1S1P1        equ	1131	;# 
  8309   00046B                     PWM1S1P1L       equ	1131	;# 
  8310   00046C                     PWM1S1P1H       equ	1132	;# 
  8311   00046D                     PWM1S1P2        equ	1133	;# 
  8312   00046D                     PWM1S1P2L       equ	1133	;# 
  8313   00046E                     PWM1S1P2H       equ	1134	;# 
  8314   00046F                     PWM2ERS         equ	1135	;# 
  8315   000470                     PWM2CLK         equ	1136	;# 
  8316   000471                     PWM2LDS         equ	1137	;# 
  8317   000472                     PWM2PR          equ	1138	;# 
  8318   000472                     PWM2PRL         equ	1138	;# 
  8319   000473                     PWM2PRH         equ	1139	;# 
  8320   000474                     PWM2CPRE        equ	1140	;# 
  8321   000475                     PWM2PIPOS       equ	1141	;# 
  8322   000476                     PWM2GIR         equ	1142	;# 
  8323   000477                     PWM2GIE         equ	1143	;# 
  8324   000478                     PWM2CON         equ	1144	;# 
  8325   000479                     PWM2S1CFG       equ	1145	;# 
  8326   00047A                     PWM2S1P1        equ	1146	;# 
  8327   00047A                     PWM2S1P1L       equ	1146	;# 
  8328   00047B                     PWM2S1P1H       equ	1147	;# 
  8329   00047C                     PWM2S1P2        equ	1148	;# 
  8330   00047C                     PWM2S1P2L       equ	1148	;# 
  8331   00047D                     PWM2S1P2H       equ	1149	;# 
  8332   00047E                     PWM3ERS         equ	1150	;# 
  8333   00047F                     PWM3CLK         equ	1151	;# 
  8334   000480                     PWM3LDS         equ	1152	;# 
  8335   000481                     PWM3PR          equ	1153	;# 
  8336   000481                     PWM3PRL         equ	1153	;# 
  8337   000482                     PWM3PRH         equ	1154	;# 
  8338   000483                     PWM3CPRE        equ	1155	;# 
  8339   000484                     PWM3PIPOS       equ	1156	;# 
  8340   000485                     PWM3GIR         equ	1157	;# 
  8341   000486                     PWM3GIE         equ	1158	;# 
  8342   000487                     PWM3CON         equ	1159	;# 
  8343   000488                     PWM3S1CFG       equ	1160	;# 
  8344   000489                     PWM3S1P1        equ	1161	;# 
  8345   000489                     PWM3S1P1L       equ	1161	;# 
  8346   00048A                     PWM3S1P1H       equ	1162	;# 
  8347   00048B                     PWM3S1P2        equ	1163	;# 
  8348   00048B                     PWM3S1P2L       equ	1163	;# 
  8349   00048C                     PWM3S1P2H       equ	1164	;# 
  8350   00048D                     PWM4ERS         equ	1165	;# 
  8351   00048E                     PWM4CLK         equ	1166	;# 
  8352   00048F                     PWM4LDS         equ	1167	;# 
  8353   000490                     PWM4PR          equ	1168	;# 
  8354   000490                     PWM4PRL         equ	1168	;# 
  8355   000491                     PWM4PRH         equ	1169	;# 
  8356   000492                     PWM4CPRE        equ	1170	;# 
  8357   000493                     PWM4PIPOS       equ	1171	;# 
  8358   000494                     PWM4GIR         equ	1172	;# 
  8359   000495                     PWM4GIE         equ	1173	;# 
  8360   000496                     PWM4CON         equ	1174	;# 
  8361   000497                     PWM4S1CFG       equ	1175	;# 
  8362   000498                     PWM4S1P1        equ	1176	;# 
  8363   000498                     PWM4S1P1L       equ	1176	;# 
  8364   000499                     PWM4S1P1H       equ	1177	;# 
  8365   00049A                     PWM4S1P2        equ	1178	;# 
  8366   00049A                     PWM4S1P2L       equ	1178	;# 
  8367   00049B                     PWM4S1P2H       equ	1179	;# 
  8368   00049C                     PWMLOAD         equ	1180	;# 
  8369   00049D                     PWMEN           equ	1181	;# 
  8370   00049E                     PIE0            equ	1182	;# 
  8371   00049F                     PIE1            equ	1183	;# 
  8372   0004A0                     PIE2            equ	1184	;# 
  8373   0004A1                     PIE3            equ	1185	;# 
  8374   0004A2                     PIE4            equ	1186	;# 
  8375   0004A3                     PIE5            equ	1187	;# 
  8376   0004A4                     PIE6            equ	1188	;# 
  8377   0004A5                     PIE7            equ	1189	;# 
  8378   0004A6                     PIE8            equ	1190	;# 
  8379   0004A7                     PIE9            equ	1191	;# 
  8380   0004A8                     PIE10           equ	1192	;# 
  8381   0004A9                     PIE11           equ	1193	;# 
  8382   0004AA                     PIE12           equ	1194	;# 
  8383   0004AB                     PIE13           equ	1195	;# 
  8384   0004AC                     PIE14           equ	1196	;# 
  8385   0004AD                     PIE15           equ	1197	;# 
  8386   0004AE                     PIR0            equ	1198	;# 
  8387   0004AF                     PIR1            equ	1199	;# 
  8388   0004B0                     PIR2            equ	1200	;# 
  8389   0004B1                     PIR3            equ	1201	;# 
  8390   0004B2                     PIR4            equ	1202	;# 
  8391   0004B3                     PIR5            equ	1203	;# 
  8392   0004B4                     PIR6            equ	1204	;# 
  8393   0004B5                     PIR7            equ	1205	;# 
  8394   0004B6                     PIR8            equ	1206	;# 
  8395   0004B7                     PIR9            equ	1207	;# 
  8396   0004B8                     PIR10           equ	1208	;# 
  8397   0004B9                     PIR11           equ	1209	;# 
  8398   0004BA                     PIR12           equ	1210	;# 
  8399   0004BB                     PIR13           equ	1211	;# 
  8400   0004BC                     PIR14           equ	1212	;# 
  8401   0004BD                     PIR15           equ	1213	;# 
  8402   0004BE                     LATA            equ	1214	;# 
  8403   0004BF                     LATB            equ	1215	;# 
  8404   0004C0                     LATC            equ	1216	;# 
  8405   0004C6                     TRISA           equ	1222	;# 
  8406   0004C7                     TRISB           equ	1223	;# 
  8407   0004C8                     TRISC           equ	1224	;# 
  8408   0004CA                     TRISE           equ	1226	;# 
  8409   0004CE                     PORTA           equ	1230	;# 
  8410   0004CF                     PORTB           equ	1231	;# 
  8411   0004D0                     PORTC           equ	1232	;# 
  8412   0004D2                     PORTE           equ	1234	;# 
  8413   0004D6                     INTCON0         equ	1238	;# 
  8414   0004D7                     INTCON1         equ	1239	;# 
  8415   0004D8                     STATUS          equ	1240	;# 
  8416   0004D9                     FSR2            equ	1241	;# 
  8417   0004D9                     FSR2L           equ	1241	;# 
  8418   0004DA                     FSR2H           equ	1242	;# 
  8419   0004DB                     PLUSW2          equ	1243	;# 
  8420   0004DC                     PREINC2         equ	1244	;# 
  8421   0004DD                     POSTDEC2        equ	1245	;# 
  8422   0004DE                     POSTINC2        equ	1246	;# 
  8423   0004DF                     INDF2           equ	1247	;# 
  8424   0004E0                     BSR             equ	1248	;# 
  8425   0004E1                     FSR1            equ	1249	;# 
  8426   0004E1                     FSR1L           equ	1249	;# 
  8427   0004E2                     FSR1H           equ	1250	;# 
  8428   0004E3                     PLUSW1          equ	1251	;# 
  8429   0004E4                     PREINC1         equ	1252	;# 
  8430   0004E5                     POSTDEC1        equ	1253	;# 
  8431   0004E6                     POSTINC1        equ	1254	;# 
  8432   0004E7                     INDF1           equ	1255	;# 
  8433   0004E8                     WREG            equ	1256	;# 
  8434   0004E9                     FSR0            equ	1257	;# 
  8435   0004E9                     FSR0L           equ	1257	;# 
  8436   0004EA                     FSR0H           equ	1258	;# 
  8437   0004EB                     PLUSW0          equ	1259	;# 
  8438   0004EC                     PREINC0         equ	1260	;# 
  8439   0004ED                     POSTDEC0        equ	1261	;# 
  8440   0004EE                     POSTINC0        equ	1262	;# 
  8441   0004EF                     INDF0           equ	1263	;# 
  8442   0004F0                     PCON0           equ	1264	;# 
  8443   0004F1                     PCON1           equ	1265	;# 
  8444   0004F2                     CPUDOZE         equ	1266	;# 
  8445   0004F3                     PROD            equ	1267	;# 
  8446   0004F3                     PRODL           equ	1267	;# 
  8447   0004F4                     PRODH           equ	1268	;# 
  8448   0004F5                     TABLAT          equ	1269	;# 
  8449   0004F6                     TBLPTR          equ	1270	;# 
  8450   0004F6                     TBLPTRL         equ	1270	;# 
  8451   0004F7                     TBLPTRH         equ	1271	;# 
  8452   0004F8                     TBLPTRU         equ	1272	;# 
  8453   0004F9                     PCLAT           equ	1273	;# 
  8454   0004F9                     PCL             equ	1273	;# 
  8455   0004FA                     PCLATH          equ	1274	;# 
  8456   0004FB                     PCLATU          equ	1275	;# 
  8457   0004FC                     STKPTR          equ	1276	;# 
  8458   0004FD                     TOS             equ	1277	;# 
  8459   0004FD                     TOSL            equ	1277	;# 
  8460   0004FE                     TOSH            equ	1278	;# 
  8461   0004FF                     TOSU            equ	1279	;# 
  8462   000038                     BOOTREG         equ	56	;# 
  8463   000039                     CLKRCON         equ	57	;# 
  8464   00003A                     CLKRCLK         equ	58	;# 
  8465   000040                     NVMCON0         equ	64	;# 
  8466   000041                     NVMCON1         equ	65	;# 
  8467   000042                     NVMLOCK         equ	66	;# 
  8468   000043                     NVMADR          equ	67	;# 
  8469   000043                     NVMADRL         equ	67	;# 
  8470   000044                     NVMADRH         equ	68	;# 
  8471   000045                     NVMADRU         equ	69	;# 
  8472   000046                     NVMDAT          equ	70	;# 
  8473   000046                     NVMDATL         equ	70	;# 
  8474   000047                     NVMDATH         equ	71	;# 
  8475   000048                     VREGCON         equ	72	;# 
  8476   000049                     BORCON          equ	73	;# 
  8477   00004A                     HLVDCON0        equ	74	;# 
  8478   00004B                     HLVDCON1        equ	75	;# 
  8479   00004C                     ZCDCON          equ	76	;# 
  8480   000060                     PMD0            equ	96	;# 
  8481   000061                     PMD1            equ	97	;# 
  8482   000062                     PMD2            equ	98	;# 
  8483   000063                     PMD3            equ	99	;# 
  8484   000064                     PMD4            equ	100	;# 
  8485   000065                     PMD5            equ	101	;# 
  8486   000066                     PMD6            equ	102	;# 
  8487   000067                     PMD7            equ	103	;# 
  8488   000068                     PMD8            equ	104	;# 
  8489   00006A                     MD1CON0         equ	106	;# 
  8490   00006B                     MD1CON1         equ	107	;# 
  8491   00006C                     MD1SRC          equ	108	;# 
  8492   00006D                     MD1CARL         equ	109	;# 
  8493   00006E                     MD1CARH         equ	110	;# 
  8494   00006F                     CMOUT           equ	111	;# 
  8495   000070                     CM1CON0         equ	112	;# 
  8496   000071                     CM1CON1         equ	113	;# 
  8497   000072                     CM1NCH          equ	114	;# 
  8498   000073                     CM1PCH          equ	115	;# 
  8499   000074                     CM2CON0         equ	116	;# 
  8500   000075                     CM2CON1         equ	117	;# 
  8501   000076                     CM2NCH          equ	118	;# 
  8502   000077                     CM2PCH          equ	119	;# 
  8503   000078                     WDTCON0         equ	120	;# 
  8504   000079                     WDTCON1         equ	121	;# 
  8505   00007A                     WDTPSL          equ	122	;# 
  8506   00007B                     WDTPSH          equ	123	;# 
  8507   00007C                     WDTTMR          equ	124	;# 
  8508   00007D                     DAC1DAT         equ	125	;# 
  8509   00007D                     DAC1DATL        equ	125	;# 
  8510   00007F                     DAC1CON         equ	127	;# 
  8511   000080                     SPI1RXB         equ	128	;# 
  8512   000081                     SPI1TXB         equ	129	;# 
  8513   000082                     SPI1TCNT        equ	130	;# 
  8514   000082                     SPI1TCNTL       equ	130	;# 
  8515   000083                     SPI1TCNTH       equ	131	;# 
  8516   000084                     SPI1CON0        equ	132	;# 
  8517   000085                     SPI1CON1        equ	133	;# 
  8518   000086                     SPI1CON2        equ	134	;# 
  8519   000087                     SPI1STATUS      equ	135	;# 
  8520   000088                     SPI1TWIDTH      equ	136	;# 
  8521   000089                     SPI1BAUD        equ	137	;# 
  8522   00008A                     SPI1INTF        equ	138	;# 
  8523   00008B                     SPI1INTE        equ	139	;# 
  8524   00008C                     SPI1CLK         equ	140	;# 
  8525   00008D                     SPI2RXB         equ	141	;# 
  8526   00008E                     SPI2TXB         equ	142	;# 
  8527   00008F                     SPI2TCNT        equ	143	;# 
  8528   00008F                     SPI2TCNTL       equ	143	;# 
  8529   000090                     SPI2TCNTH       equ	144	;# 
  8530   000091                     SPI2CON0        equ	145	;# 
  8531   000092                     SPI2CON1        equ	146	;# 
  8532   000093                     SPI2CON2        equ	147	;# 
  8533   000094                     SPI2STATUS      equ	148	;# 
  8534   000095                     SPI2TWIDTH      equ	149	;# 
  8535   000096                     SPI2BAUD        equ	150	;# 
  8536   000097                     SPI2INTF        equ	151	;# 
  8537   000098                     SPI2INTE        equ	152	;# 
  8538   000099                     SPI2CLK         equ	153	;# 
  8539   0000AC                     ACTCON          equ	172	;# 
  8540   0000AD                     OSCCON1         equ	173	;# 
  8541   0000AE                     OSCCON2         equ	174	;# 
  8542   0000AF                     OSCCON3         equ	175	;# 
  8543   0000B0                     OSCTUNE         equ	176	;# 
  8544   0000B1                     OSCFRQ          equ	177	;# 
  8545   0000B1                     OSCFREQ         equ	177	;# 
  8546   0000B2                     OSCSTAT         equ	178	;# 
  8547   0000B2                     OSCSTAT1        equ	178	;# 
  8548   0000B3                     OSCEN           equ	179	;# 
  8549   0000B4                     PRLOCK          equ	180	;# 
  8550   0000B5                     SCANPR          equ	181	;# 
  8551   0000B6                     DMA1PR          equ	182	;# 
  8552   0000B7                     DMA2PR          equ	183	;# 
  8553   0000B8                     DMA3PR          equ	184	;# 
  8554   0000B9                     DMA4PR          equ	185	;# 
  8555   0000BA                     DMA5PR          equ	186	;# 
  8556   0000BB                     DMA6PR          equ	187	;# 
  8557   0000BC                     DMA7PR          equ	188	;# 
  8558   0000BD                     DMA8PR          equ	189	;# 
  8559   0000BE                     MAINPR          equ	190	;# 
  8560   0000BF                     ISRPR           equ	191	;# 
  8561   0000D4                     CLCDATA         equ	212	;# 
  8562   0000D5                     CLCSELECT       equ	213	;# 
  8563   0000D6                     CLCnCON         equ	214	;# 
  8564   0000D7                     CLCnPOL         equ	215	;# 
  8565   0000D8                     CLCnSEL0        equ	216	;# 
  8566   0000D9                     CLCnSEL1        equ	217	;# 
  8567   0000DA                     CLCnSEL2        equ	218	;# 
  8568   0000DB                     CLCnSEL3        equ	219	;# 
  8569   0000DC                     CLCnGLS0        equ	220	;# 
  8570   0000DD                     CLCnGLS1        equ	221	;# 
  8571   0000DE                     CLCnGLS2        equ	222	;# 
  8572   0000DF                     CLCnGLS3        equ	223	;# 
  8573   0000E8                     DMASELECT       equ	232	;# 
  8574   0000E9                     DMAnBUF         equ	233	;# 
  8575   0000EA                     DMAnDCNT        equ	234	;# 
  8576   0000EA                     DMAnDCNTL       equ	234	;# 
  8577   0000EB                     DMAnDCNTH       equ	235	;# 
  8578   0000EC                     DMAnDPTR        equ	236	;# 
  8579   0000EC                     DMAnDPTRL       equ	236	;# 
  8580   0000ED                     DMAnDPTRH       equ	237	;# 
  8581   0000EE                     DMAnDSZ         equ	238	;# 
  8582   0000EE                     DMAnDSZL        equ	238	;# 
  8583   0000EF                     DMAnDSZH        equ	239	;# 
  8584   0000F0                     DMAnDSA         equ	240	;# 
  8585   0000F0                     DMAnDSAL        equ	240	;# 
  8586   0000F1                     DMAnDSAH        equ	241	;# 
  8587   0000F2                     DMAnSCNT        equ	242	;# 
  8588   0000F2                     DMAnSCNTL       equ	242	;# 
  8589   0000F3                     DMAnSCNTH       equ	243	;# 
  8590   0000F4                     DMAnSPTR        equ	244	;# 
  8591   0000F4                     DMAnSPTRL       equ	244	;# 
  8592   0000F5                     DMAnSPTRH       equ	245	;# 
  8593   0000F6                     DMAnSPTRU       equ	246	;# 
  8594   0000F7                     DMAnSSZ         equ	247	;# 
  8595   0000F7                     DMAnSSZL        equ	247	;# 
  8596   0000F8                     DMAnSSZH        equ	248	;# 
  8597   0000F9                     DMAnSSA         equ	249	;# 
  8598   0000F9                     DMAnSSAL        equ	249	;# 
  8599   0000FA                     DMAnSSAH        equ	250	;# 
  8600   0000FB                     DMAnSSAU        equ	251	;# 
  8601   0000FC                     DMAnCON0        equ	252	;# 
  8602   0000FD                     DMAnCON1        equ	253	;# 
  8603   0000FE                     DMAnAIRQ        equ	254	;# 
  8604   0000FF                     DMAnSIRQ        equ	255	;# 
  8605   000100                     C1CONL          equ	256	;# 
  8606   000101                     C1CONH          equ	257	;# 
  8607   000102                     C1CONU          equ	258	;# 
  8608   000103                     C1CONT          equ	259	;# 
  8609   000104                     C1NBTCFGL       equ	260	;# 
  8610   000105                     C1NBTCFGH       equ	261	;# 
  8611   000106                     C1NBTCFGU       equ	262	;# 
  8612   000107                     C1NBTCFGT       equ	263	;# 
  8613   000108                     C1DBTCFGL       equ	264	;# 
  8614   000109                     C1DBTCFGH       equ	265	;# 
  8615   00010A                     C1DBTCFGU       equ	266	;# 
  8616   00010B                     C1DBTCFGT       equ	267	;# 
  8617   00010C                     C1TDCL          equ	268	;# 
  8618   00010D                     C1TDCH          equ	269	;# 
  8619   00010E                     C1TDCU          equ	270	;# 
  8620   000110                     C1TBC           equ	272	;# 
  8621   000110                     C1TBCL          equ	272	;# 
  8622   000111                     C1TBCH          equ	273	;# 
  8623   000112                     C1TBCU          equ	274	;# 
  8624   000113                     C1TBCT          equ	275	;# 
  8625   000114                     C1TSCONL        equ	276	;# 
  8626   000115                     C1TSCONH        equ	277	;# 
  8627   000116                     C1TSCONU        equ	278	;# 
  8628   000117                     C1TSCONT        equ	279	;# 
  8629   000118                     C1VECL          equ	280	;# 
  8630   000119                     C1VECH          equ	281	;# 
  8631   00011A                     C1VECU          equ	282	;# 
  8632   00011B                     C1VECT          equ	283	;# 
  8633   00011C                     C1INTL          equ	284	;# 
  8634   00011D                     C1INTH          equ	285	;# 
  8635   00011E                     C1INTU          equ	286	;# 
  8636   00011F                     C1INTT          equ	287	;# 
  8637   000120                     C1RXIF          equ	288	;# 
  8638   000120                     C1RXIFL         equ	288	;# 
  8639   000121                     C1RXIFH         equ	289	;# 
  8640   000122                     C1RXIFU         equ	290	;# 
  8641   000123                     C1RXIFT         equ	291	;# 
  8642   000124                     C1TXIF          equ	292	;# 
  8643   000124                     C1TXIFL         equ	292	;# 
  8644   000125                     C1TXIFH         equ	293	;# 
  8645   000126                     C1TXIFU         equ	294	;# 
  8646   000127                     C1TXIFT         equ	295	;# 
  8647   000128                     C1RXOVIF        equ	296	;# 
  8648   000128                     C1RXOVIFL       equ	296	;# 
  8649   000129                     C1RXOVIFH       equ	297	;# 
  8650   00012A                     C1RXOVIFU       equ	298	;# 
  8651   00012B                     C1RXOVIFT       equ	299	;# 
  8652   00012C                     C1TXATIF        equ	300	;# 
  8653   00012C                     C1TXATIFL       equ	300	;# 
  8654   00012D                     C1TXATIFH       equ	301	;# 
  8655   00012E                     C1TXATIFU       equ	302	;# 
  8656   00012F                     C1TXATIFT       equ	303	;# 
  8657   000130                     C1TXREQ         equ	304	;# 
  8658   000130                     C1TXREQL        equ	304	;# 
  8659   000131                     C1TXREQH        equ	305	;# 
  8660   000132                     C1TXREQU        equ	306	;# 
  8661   000133                     C1TXREQT        equ	307	;# 
  8662   000134                     C1TRECL         equ	308	;# 
  8663   000135                     C1TRECH         equ	309	;# 
  8664   000136                     C1TRECU         equ	310	;# 
  8665   000137                     C1TRECT         equ	311	;# 
  8666   000138                     C1BDIAG0L       equ	312	;# 
  8667   000139                     C1BDIAG0H       equ	313	;# 
  8668   00013C                     C1BDIAG1L       equ	316	;# 
  8669   00013D                     C1BDIAG1H       equ	317	;# 
  8670   00013E                     C1BDIAG1U       equ	318	;# 
  8671   00013F                     C1BDIAG1T       equ	319	;# 
  8672   000140                     C1TEFCONL       equ	320	;# 
  8673   000141                     C1TEFCONH       equ	321	;# 
  8674   000142                     C1TEFCONU       equ	322	;# 
  8675   000143                     C1TEFCONT       equ	323	;# 
  8676   000144                     C1TEFSTAL       equ	324	;# 
  8677   000145                     C1TEFSTAH       equ	325	;# 
  8678   000146                     C1TEFSTAU       equ	326	;# 
  8679   000147                     C1TEFSTAT       equ	327	;# 
  8680   000148                     C1TEFUA         equ	328	;# 
  8681   000148                     C1TEFUAL        equ	328	;# 
  8682   000149                     C1TEFUAH        equ	329	;# 
  8683   00014A                     C1TEFUAU        equ	330	;# 
  8684   00014B                     C1TEFUAT        equ	331	;# 
  8685   00014C                     C1FIFOBA        equ	332	;# 
  8686   00014C                     C1FIFOBAL       equ	332	;# 
  8687   00014D                     C1FIFOBAH       equ	333	;# 
  8688   00014E                     C1FIFOBAU       equ	334	;# 
  8689   00014F                     C1FIFOBAT       equ	335	;# 
  8690   000150                     C1TXQCONL       equ	336	;# 
  8691   000151                     C1TXQCONH       equ	337	;# 
  8692   000152                     C1TXQCONU       equ	338	;# 
  8693   000153                     C1TXQCONT       equ	339	;# 
  8694   000154                     C1TXQSTAL       equ	340	;# 
  8695   000155                     C1TXQSTAH       equ	341	;# 
  8696   000156                     C1TXQSTAU       equ	342	;# 
  8697   000157                     C1TXQSTAT       equ	343	;# 
  8698   000158                     C1TXQUA         equ	344	;# 
  8699   000158                     C1TXQUAL        equ	344	;# 
  8700   000159                     C1TXQUAH        equ	345	;# 
  8701   00015A                     C1TXQUAU        equ	346	;# 
  8702   00015B                     C1TXQUAT        equ	347	;# 
  8703   00015C                     C1FIFOCON1      equ	348	;# 
  8704   00015C                     C1FIFOCON1L     equ	348	;# 
  8705   00015D                     C1FIFOCON1H     equ	349	;# 
  8706   00015E                     C1FIFOCON1U     equ	350	;# 
  8707   00015F                     C1FIFOCON1T     equ	351	;# 
  8708   000160                     C1FIFOSTA1      equ	352	;# 
  8709   000160                     C1FIFOSTA1L     equ	352	;# 
  8710   000161                     C1FIFOSTA1H     equ	353	;# 
  8711   000162                     C1FIFOSTA1U     equ	354	;# 
  8712   000163                     C1FIFOSTA1T     equ	355	;# 
  8713   000164                     C1FIFOUA1       equ	356	;# 
  8714   000164                     C1FIFOUA1L      equ	356	;# 
  8715   000165                     C1FIFOUA1H      equ	357	;# 
  8716   000166                     C1FIFOUA1U      equ	358	;# 
  8717   000167                     C1FIFOUA1T      equ	359	;# 
  8718   000168                     C1FIFOCON2      equ	360	;# 
  8719   000168                     C1FIFOCON2L     equ	360	;# 
  8720   000169                     C1FIFOCON2H     equ	361	;# 
  8721   00016A                     C1FIFOCON2U     equ	362	;# 
  8722   00016B                     C1FIFOCON2T     equ	363	;# 
  8723   00016C                     C1FIFOSTA2      equ	364	;# 
  8724   00016C                     C1FIFOSTA2L     equ	364	;# 
  8725   00016D                     C1FIFOSTA2H     equ	365	;# 
  8726   00016E                     C1FIFOSTA2U     equ	366	;# 
  8727   00016F                     C1FIFOSTA2T     equ	367	;# 
  8728   000170                     C1FIFOUA2       equ	368	;# 
  8729   000170                     C1FIFOUA2L      equ	368	;# 
  8730   000171                     C1FIFOUA2H      equ	369	;# 
  8731   000172                     C1FIFOUA2U      equ	370	;# 
  8732   000173                     C1FIFOUA2T      equ	371	;# 
  8733   000174                     C1FIFOCON3      equ	372	;# 
  8734   000174                     C1FIFOCON3L     equ	372	;# 
  8735   000175                     C1FIFOCON3H     equ	373	;# 
  8736   000176                     C1FIFOCON3U     equ	374	;# 
  8737   000177                     C1FIFOCON3T     equ	375	;# 
  8738   000178                     C1FIFOSTA3      equ	376	;# 
  8739   000178                     C1FIFOSTA3L     equ	376	;# 
  8740   000179                     C1FIFOSTA3H     equ	377	;# 
  8741   00017A                     C1FIFOSTA3U     equ	378	;# 
  8742   00017B                     C1FIFOSTA3T     equ	379	;# 
  8743   00017C                     C1FIFOUA3       equ	380	;# 
  8744   00017C                     C1FIFOUA3L      equ	380	;# 
  8745   00017D                     C1FIFOUA3H      equ	381	;# 
  8746   00017E                     C1FIFOUA3U      equ	382	;# 
  8747   00017F                     C1FIFOUA3T      equ	383	;# 
  8748   000180                     C1FLTCON0L      equ	384	;# 
  8749   000181                     C1FLTCON0H      equ	385	;# 
  8750   000182                     C1FLTCON0U      equ	386	;# 
  8751   000183                     C1FLTCON0T      equ	387	;# 
  8752   000184                     C1FLTCON1L      equ	388	;# 
  8753   000185                     C1FLTCON1H      equ	389	;# 
  8754   000186                     C1FLTCON1U      equ	390	;# 
  8755   000187                     C1FLTCON1T      equ	391	;# 
  8756   000188                     C1FLTCON2L      equ	392	;# 
  8757   000189                     C1FLTCON2H      equ	393	;# 
  8758   00018A                     C1FLTCON2U      equ	394	;# 
  8759   00018B                     C1FLTCON2T      equ	395	;# 
  8760   00018C                     C1FLTOBJ0       equ	396	;# 
  8761   00018C                     C1FLTOBJ0L      equ	396	;# 
  8762   00018D                     C1FLTOBJ0H      equ	397	;# 
  8763   00018E                     C1FLTOBJ0U      equ	398	;# 
  8764   00018F                     C1FLTOBJ0T      equ	399	;# 
  8765   000190                     C1MASK0         equ	400	;# 
  8766   000190                     C1MASK0L        equ	400	;# 
  8767   000191                     C1MASK0H        equ	401	;# 
  8768   000192                     C1MASK0U        equ	402	;# 
  8769   000193                     C1MASK0T        equ	403	;# 
  8770   000194                     C1FLTOBJ1       equ	404	;# 
  8771   000194                     C1FLTOBJ1L      equ	404	;# 
  8772   000195                     C1FLTOBJ1H      equ	405	;# 
  8773   000196                     C1FLTOBJ1U      equ	406	;# 
  8774   000197                     C1FLTOBJ1T      equ	407	;# 
  8775   000198                     C1MASK1         equ	408	;# 
  8776   000198                     C1MASK1L        equ	408	;# 
  8777   000199                     C1MASK1H        equ	409	;# 
  8778   00019A                     C1MASK1U        equ	410	;# 
  8779   00019B                     C1MASK1T        equ	411	;# 
  8780   00019C                     C1FLTOBJ2       equ	412	;# 
  8781   00019C                     C1FLTOBJ2L      equ	412	;# 
  8782   00019D                     C1FLTOBJ2H      equ	413	;# 
  8783   00019E                     C1FLTOBJ2U      equ	414	;# 
  8784   00019F                     C1FLTOBJ2T      equ	415	;# 
  8785   0001A0                     C1MASK2         equ	416	;# 
  8786   0001A0                     C1MASK2L        equ	416	;# 
  8787   0001A1                     C1MASK2H        equ	417	;# 
  8788   0001A2                     C1MASK2U        equ	418	;# 
  8789   0001A3                     C1MASK2T        equ	419	;# 
  8790   0001A4                     C1FLTOBJ3       equ	420	;# 
  8791   0001A4                     C1FLTOBJ3L      equ	420	;# 
  8792   0001A5                     C1FLTOBJ3H      equ	421	;# 
  8793   0001A6                     C1FLTOBJ3U      equ	422	;# 
  8794   0001A7                     C1FLTOBJ3T      equ	423	;# 
  8795   0001A8                     C1MASK3         equ	424	;# 
  8796   0001A8                     C1MASK3L        equ	424	;# 
  8797   0001A9                     C1MASK3H        equ	425	;# 
  8798   0001AA                     C1MASK3U        equ	426	;# 
  8799   0001AB                     C1MASK3T        equ	427	;# 
  8800   0001AC                     C1FLTOBJ4       equ	428	;# 
  8801   0001AC                     C1FLTOBJ4L      equ	428	;# 
  8802   0001AD                     C1FLTOBJ4H      equ	429	;# 
  8803   0001AE                     C1FLTOBJ4U      equ	430	;# 
  8804   0001AF                     C1FLTOBJ4T      equ	431	;# 
  8805   0001B0                     C1MASK4         equ	432	;# 
  8806   0001B0                     C1MASK4L        equ	432	;# 
  8807   0001B1                     C1MASK4H        equ	433	;# 
  8808   0001B2                     C1MASK4U        equ	434	;# 
  8809   0001B3                     C1MASK4T        equ	435	;# 
  8810   0001B4                     C1FLTOBJ5       equ	436	;# 
  8811   0001B4                     C1FLTOBJ5L      equ	436	;# 
  8812   0001B5                     C1FLTOBJ5H      equ	437	;# 
  8813   0001B6                     C1FLTOBJ5U      equ	438	;# 
  8814   0001B7                     C1FLTOBJ5T      equ	439	;# 
  8815   0001B8                     C1MASK5         equ	440	;# 
  8816   0001B8                     C1MASK5L        equ	440	;# 
  8817   0001B9                     C1MASK5H        equ	441	;# 
  8818   0001BA                     C1MASK5U        equ	442	;# 
  8819   0001BB                     C1MASK5T        equ	443	;# 
  8820   0001BC                     C1FLTOBJ6       equ	444	;# 
  8821   0001BC                     C1FLTOBJ6L      equ	444	;# 
  8822   0001BD                     C1FLTOBJ6H      equ	445	;# 
  8823   0001BE                     C1FLTOBJ6U      equ	446	;# 
  8824   0001BF                     C1FLTOBJ6T      equ	447	;# 
  8825   0001C0                     C1MASK6         equ	448	;# 
  8826   0001C0                     C1MASK6L        equ	448	;# 
  8827   0001C1                     C1MASK6H        equ	449	;# 
  8828   0001C2                     C1MASK6U        equ	450	;# 
  8829   0001C3                     C1MASK6T        equ	451	;# 
  8830   0001C4                     C1FLTOBJ7       equ	452	;# 
  8831   0001C4                     C1FLTOBJ7L      equ	452	;# 
  8832   0001C5                     C1FLTOBJ7H      equ	453	;# 
  8833   0001C6                     C1FLTOBJ7U      equ	454	;# 
  8834   0001C7                     C1FLTOBJ7T      equ	455	;# 
  8835   0001C8                     C1MASK7         equ	456	;# 
  8836   0001C8                     C1MASK7L        equ	456	;# 
  8837   0001C9                     C1MASK7H        equ	457	;# 
  8838   0001CA                     C1MASK7U        equ	458	;# 
  8839   0001CB                     C1MASK7T        equ	459	;# 
  8840   0001CC                     C1FLTOBJ8       equ	460	;# 
  8841   0001CC                     C1FLTOBJ8L      equ	460	;# 
  8842   0001CD                     C1FLTOBJ8H      equ	461	;# 
  8843   0001CE                     C1FLTOBJ8U      equ	462	;# 
  8844   0001CF                     C1FLTOBJ8T      equ	463	;# 
  8845   0001D0                     C1MASK8         equ	464	;# 
  8846   0001D0                     C1MASK8L        equ	464	;# 
  8847   0001D1                     C1MASK8H        equ	465	;# 
  8848   0001D2                     C1MASK8U        equ	466	;# 
  8849   0001D3                     C1MASK8T        equ	467	;# 
  8850   0001D4                     C1FLTOBJ9       equ	468	;# 
  8851   0001D4                     C1FLTOBJ9L      equ	468	;# 
  8852   0001D5                     C1FLTOBJ9H      equ	469	;# 
  8853   0001D6                     C1FLTOBJ9U      equ	470	;# 
  8854   0001D7                     C1FLTOBJ9T      equ	471	;# 
  8855   0001D8                     C1MASK9         equ	472	;# 
  8856   0001D8                     C1MASK9L        equ	472	;# 
  8857   0001D9                     C1MASK9H        equ	473	;# 
  8858   0001DA                     C1MASK9U        equ	474	;# 
  8859   0001DB                     C1MASK9T        equ	475	;# 
  8860   0001DC                     C1FLTOBJ10      equ	476	;# 
  8861   0001DC                     C1FLTOBJ10L     equ	476	;# 
  8862   0001DD                     C1FLTOBJ10H     equ	477	;# 
  8863   0001DE                     C1FLTOBJ10U     equ	478	;# 
  8864   0001DF                     C1FLTOBJ10T     equ	479	;# 
  8865   0001E0                     C1MASK10        equ	480	;# 
  8866   0001E0                     C1MASK10L       equ	480	;# 
  8867   0001E1                     C1MASK10H       equ	481	;# 
  8868   0001E2                     C1MASK10U       equ	482	;# 
  8869   0001E3                     C1MASK10T       equ	483	;# 
  8870   0001E4                     C1FLTOBJ11      equ	484	;# 
  8871   0001E4                     C1FLTOBJ11L     equ	484	;# 
  8872   0001E5                     C1FLTOBJ11H     equ	485	;# 
  8873   0001E6                     C1FLTOBJ11U     equ	486	;# 
  8874   0001E7                     C1FLTOBJ11T     equ	487	;# 
  8875   0001E8                     C1MASK11        equ	488	;# 
  8876   0001E8                     C1MASK11L       equ	488	;# 
  8877   0001E9                     C1MASK11H       equ	489	;# 
  8878   0001EA                     C1MASK11U       equ	490	;# 
  8879   0001EB                     C1MASK11T       equ	491	;# 
  8880   000200                     PPSLOCK         equ	512	;# 
  8881   000201                     RA0PPS          equ	513	;# 
  8882   000202                     RA1PPS          equ	514	;# 
  8883   000203                     RA2PPS          equ	515	;# 
  8884   000204                     RA3PPS          equ	516	;# 
  8885   000205                     RA4PPS          equ	517	;# 
  8886   000206                     RA5PPS          equ	518	;# 
  8887   000207                     RA6PPS          equ	519	;# 
  8888   000208                     RA7PPS          equ	520	;# 
  8889   000209                     RB0PPS          equ	521	;# 
  8890   00020A                     RB1PPS          equ	522	;# 
  8891   00020B                     RB2PPS          equ	523	;# 
  8892   00020C                     RB3PPS          equ	524	;# 
  8893   00020D                     RB4PPS          equ	525	;# 
  8894   00020E                     RB5PPS          equ	526	;# 
  8895   00020F                     RB6PPS          equ	527	;# 
  8896   000210                     RB7PPS          equ	528	;# 
  8897   000211                     RC0PPS          equ	529	;# 
  8898   000212                     RC1PPS          equ	530	;# 
  8899   000213                     RC2PPS          equ	531	;# 
  8900   000214                     RC3PPS          equ	532	;# 
  8901   000215                     RC4PPS          equ	533	;# 
  8902   000216                     RC5PPS          equ	534	;# 
  8903   000217                     RC6PPS          equ	535	;# 
  8904   000218                     RC7PPS          equ	536	;# 
  8905   00023D                     CANRXPPS        equ	573	;# 
  8906   00023E                     INT0PPS         equ	574	;# 
  8907   00023F                     INT1PPS         equ	575	;# 
  8908   000240                     INT2PPS         equ	576	;# 
  8909   000241                     T0CKIPPS        equ	577	;# 
  8910   000242                     T1CKIPPS        equ	578	;# 
  8911   000243                     T1GPPS          equ	579	;# 
  8912   000244                     T3CKIPPS        equ	580	;# 
  8913   000245                     T3GPPS          equ	581	;# 
  8914   000246                     T5CKIPPS        equ	582	;# 
  8915   000247                     T5GPPS          equ	583	;# 
  8916   000248                     T2INPPS         equ	584	;# 
  8917   000249                     T4INPPS         equ	585	;# 
  8918   00024A                     T6INPPS         equ	586	;# 
  8919   00024B                     TUIN0PPS        equ	587	;# 
  8920   00024C                     TUIN1PPS        equ	588	;# 
  8921   00024F                     CCP1PPS         equ	591	;# 
  8922   000250                     CCP2PPS         equ	592	;# 
  8923   000251                     CCP3PPS         equ	593	;# 
  8924   000253                     PWM1ERSPPS      equ	595	;# 
  8925   000254                     PWM2ERSPPS      equ	596	;# 
  8926   000255                     PWM3ERSPPS      equ	597	;# 
  8927   000256                     PWM4ERSPPS      equ	598	;# 
  8928   000257                     PWMIN0PPS       equ	599	;# 
  8929   000258                     PWMIN1PPS       equ	600	;# 
  8930   000259                     SMT1WINPPS      equ	601	;# 
  8931   00025A                     SMT1SIGPPS      equ	602	;# 
  8932   00025B                     CWG1PPS         equ	603	;# 
  8933   00025B                     CWG1INPPS       equ	603	;# 
  8934   00025C                     CWG2PPS         equ	604	;# 
  8935   00025C                     CWG2INPPS       equ	604	;# 
  8936   00025D                     CWG3PPS         equ	605	;# 
  8937   00025D                     CWG3INPPS       equ	605	;# 
  8938   00025E                     MD1CARLPPS      equ	606	;# 
  8939   00025E                     MDCARLPPS       equ	606	;# 
  8940   00025F                     MD1CARHPPS      equ	607	;# 
  8941   00025F                     MDCARHPPS       equ	607	;# 
  8942   000260                     MD1SRCPPS       equ	608	;# 
  8943   000260                     MDSRCPPS        equ	608	;# 
  8944   000261                     CLCIN0PPS       equ	609	;# 
  8945   000262                     CLCIN1PPS       equ	610	;# 
  8946   000263                     CLCIN2PPS       equ	611	;# 
  8947   000264                     CLCIN3PPS       equ	612	;# 
  8948   000265                     CLCIN4PPS       equ	613	;# 
  8949   000266                     CLCIN5PPS       equ	614	;# 
  8950   000267                     CLCIN6PPS       equ	615	;# 
  8951   000268                     CLCIN7PPS       equ	616	;# 
  8952   000269                     ADACTPPS        equ	617	;# 
  8953   00026A                     SPI1SCKPPS      equ	618	;# 
  8954   00026B                     SPI1SDIPPS      equ	619	;# 
  8955   00026C                     SPI1SSPPS       equ	620	;# 
  8956   00026D                     SPI2SCKPPS      equ	621	;# 
  8957   00026E                     SPI2SDIPPS      equ	622	;# 
  8958   00026F                     SPI2SSPPS       equ	623	;# 
  8959   000270                     I2C1SDAPPS      equ	624	;# 
  8960   000271                     I2C1SCLPPS      equ	625	;# 
  8961   000272                     U1RXPPS         equ	626	;# 
  8962   000273                     U1CTSPPS        equ	627	;# 
  8963   000274                     U2RXPPS         equ	628	;# 
  8964   000275                     U2CTSPPS        equ	629	;# 
  8965   000276                     U3RXPPS         equ	630	;# 
  8966   000277                     U3CTSPPS        equ	631	;# 
  8967   000278                     U4RXPPS         equ	632	;# 
  8968   000279                     U4CTSPPS        equ	633	;# 
  8969   00027A                     U5RXPPS         equ	634	;# 
  8970   00027B                     U5CTSPPS        equ	635	;# 
  8971   000286                     RC4I2C          equ	646	;# 
  8972   000287                     RC3I2C          equ	647	;# 
  8973   000288                     RB2I2C          equ	648	;# 
  8974   000289                     RB1I2C          equ	649	;# 
  8975   00028A                     I2C1RXB         equ	650	;# 
  8976   00028B                     I2C1TXB         equ	651	;# 
  8977   00028C                     I2C1CNTL        equ	652	;# 
  8978   00028D                     I2C1CNTH        equ	653	;# 
  8979   00028E                     I2C1ADB0        equ	654	;# 
  8980   00028F                     I2C1ADB1        equ	655	;# 
  8981   000290                     I2C1ADR0        equ	656	;# 
  8982   000291                     I2C1ADR1        equ	657	;# 
  8983   000292                     I2C1ADR2        equ	658	;# 
  8984   000293                     I2C1ADR3        equ	659	;# 
  8985   000294                     I2C1CON0        equ	660	;# 
  8986   000295                     I2C1CON1        equ	661	;# 
  8987   000296                     I2C1CON2        equ	662	;# 
  8988   000297                     I2C1ERR         equ	663	;# 
  8989   000298                     I2C1STAT0       equ	664	;# 
  8990   000299                     I2C1STAT1       equ	665	;# 
  8991   00029A                     I2C1PIR         equ	666	;# 
  8992   00029B                     I2C1PIE         equ	667	;# 
  8993   00029C                     I2C1BTO         equ	668	;# 
  8994   00029D                     I2C1BAUD        equ	669	;# 
  8995   00029E                     I2C1CLK         equ	670	;# 
  8996   00029F                     I2C1BTOC        equ	671	;# 
  8997   0002A1                     U1RXB           equ	673	;# 
  8998   0002A1                     U1RXBL          equ	673	;# 
  8999   0002A2                     U1RXCHK         equ	674	;# 
  9000   0002A3                     U1TXB           equ	675	;# 
  9001   0002A3                     U1TXBL          equ	675	;# 
  9002   0002A4                     U1TXCHK         equ	676	;# 
  9003   0002A5                     U1P1            equ	677	;# 
  9004   0002A5                     U1P1L           equ	677	;# 
  9005   0002A6                     U1P1H           equ	678	;# 
  9006   0002A7                     U1P2            equ	679	;# 
  9007   0002A7                     U1P2L           equ	679	;# 
  9008   0002A8                     U1P2H           equ	680	;# 
  9009   0002A9                     U1P3            equ	681	;# 
  9010   0002A9                     U1P3L           equ	681	;# 
  9011   0002AA                     U1P3H           equ	682	;# 
  9012   0002AB                     U1CON0          equ	683	;# 
  9013   0002AC                     U1CON1          equ	684	;# 
  9014   0002AD                     U1CON2          equ	685	;# 
  9015   0002AE                     U1BRG           equ	686	;# 
  9016   0002AE                     U1BRGL          equ	686	;# 
  9017   0002AF                     U1BRGH          equ	687	;# 
  9018   0002B0                     U1FIFO          equ	688	;# 
  9019   0002B1                     U1UIR           equ	689	;# 
  9020   0002B2                     U1ERRIR         equ	690	;# 
  9021   0002B3                     U1ERRIE         equ	691	;# 
  9022   0002B4                     U2RXB           equ	692	;# 
  9023   0002B4                     U2RXBL          equ	692	;# 
  9024   0002B5                     U2RXCHK         equ	693	;# 
  9025   0002B6                     U2TXB           equ	694	;# 
  9026   0002B6                     U2TXBL          equ	694	;# 
  9027   0002B7                     U2TXCHK         equ	695	;# 
  9028   0002B8                     U2P1            equ	696	;# 
  9029   0002B8                     U2P1L           equ	696	;# 
  9030   0002B9                     U2P1H           equ	697	;# 
  9031   0002BA                     U2P2            equ	698	;# 
  9032   0002BA                     U2P2L           equ	698	;# 
  9033   0002BB                     U2P2H           equ	699	;# 
  9034   0002BC                     U2P3            equ	700	;# 
  9035   0002BC                     U2P3L           equ	700	;# 
  9036   0002BD                     U2P3H           equ	701	;# 
  9037   0002BE                     U2CON0          equ	702	;# 
  9038   0002BF                     U2CON1          equ	703	;# 
  9039   0002C0                     U2CON2          equ	704	;# 
  9040   0002C1                     U2BRG           equ	705	;# 
  9041   0002C1                     U2BRGL          equ	705	;# 
  9042   0002C2                     U2BRGH          equ	706	;# 
  9043   0002C3                     U2FIFO          equ	707	;# 
  9044   0002C4                     U2UIR           equ	708	;# 
  9045   0002C5                     U2ERRIR         equ	709	;# 
  9046   0002C6                     U2ERRIE         equ	710	;# 
  9047   0002C7                     U3RXB           equ	711	;# 
  9048   0002C7                     U3RXBL          equ	711	;# 
  9049   0002C9                     U3TXB           equ	713	;# 
  9050   0002C9                     U3TXBL          equ	713	;# 
  9051   0002CB                     U3P1            equ	715	;# 
  9052   0002CB                     U3P1L           equ	715	;# 
  9053   0002CD                     U3P2            equ	717	;# 
  9054   0002CD                     U3P2L           equ	717	;# 
  9055   0002CF                     U3P3            equ	719	;# 
  9056   0002CF                     U3P3L           equ	719	;# 
  9057   0002D1                     U3CON0          equ	721	;# 
  9058   0002D2                     U3CON1          equ	722	;# 
  9059   0002D3                     U3CON2          equ	723	;# 
  9060   0002D4                     U3BRG           equ	724	;# 
  9061   0002D4                     U3BRGL          equ	724	;# 
  9062   0002D5                     U3BRGH          equ	725	;# 
  9063   0002D6                     U3FIFO          equ	726	;# 
  9064   0002D7                     U3UIR           equ	727	;# 
  9065   0002D8                     U3ERRIR         equ	728	;# 
  9066   0002D9                     U3ERRIE         equ	729	;# 
  9067   0002DA                     U4RXB           equ	730	;# 
  9068   0002DA                     U4RXBL          equ	730	;# 
  9069   0002DC                     U4TXB           equ	732	;# 
  9070   0002DC                     U4TXBL          equ	732	;# 
  9071   0002DE                     U4P1            equ	734	;# 
  9072   0002DE                     U4P1L           equ	734	;# 
  9073   0002E0                     U4P2            equ	736	;# 
  9074   0002E0                     U4P2L           equ	736	;# 
  9075   0002E2                     U4P3            equ	738	;# 
  9076   0002E2                     U4P3L           equ	738	;# 
  9077   0002E4                     U4CON0          equ	740	;# 
  9078   0002E5                     U4CON1          equ	741	;# 
  9079   0002E6                     U4CON2          equ	742	;# 
  9080   0002E7                     U4BRG           equ	743	;# 
  9081   0002E7                     U4BRGL          equ	743	;# 
  9082   0002E8                     U4BRGH          equ	744	;# 
  9083   0002E9                     U4FIFO          equ	745	;# 
  9084   0002EA                     U4UIR           equ	746	;# 
  9085   0002EB                     U4ERRIR         equ	747	;# 
  9086   0002EC                     U4ERRIE         equ	748	;# 
  9087   0002ED                     U5RXB           equ	749	;# 
  9088   0002ED                     U5RXBL          equ	749	;# 
  9089   0002EF                     U5TXB           equ	751	;# 
  9090   0002EF                     U5TXBL          equ	751	;# 
  9091   0002F1                     U5P1            equ	753	;# 
  9092   0002F1                     U5P1L           equ	753	;# 
  9093   0002F3                     U5P2            equ	755	;# 
  9094   0002F3                     U5P2L           equ	755	;# 
  9095   0002F5                     U5P3            equ	757	;# 
  9096   0002F5                     U5P3L           equ	757	;# 
  9097   0002F7                     U5CON0          equ	759	;# 
  9098   0002F8                     U5CON1          equ	760	;# 
  9099   0002F9                     U5CON2          equ	761	;# 
  9100   0002FA                     U5BRG           equ	762	;# 
  9101   0002FA                     U5BRGL          equ	762	;# 
  9102   0002FB                     U5BRGH          equ	763	;# 
  9103   0002FC                     U5FIFO          equ	764	;# 
  9104   0002FD                     U5UIR           equ	765	;# 
  9105   0002FE                     U5ERRIR         equ	766	;# 
  9106   0002FF                     U5ERRIE         equ	767	;# 
  9107   000300                     SMT1TMR         equ	768	;# 
  9108   000300                     SMT1TMRL        equ	768	;# 
  9109   000301                     SMT1TMRH        equ	769	;# 
  9110   000302                     SMT1TMRU        equ	770	;# 
  9111   000303                     SMT1CPR         equ	771	;# 
  9112   000303                     SMT1CPRL        equ	771	;# 
  9113   000304                     SMT1CPRH        equ	772	;# 
  9114   000305                     SMT1CPRU        equ	773	;# 
  9115   000306                     SMT1CPW         equ	774	;# 
  9116   000306                     SMT1CPWL        equ	774	;# 
  9117   000307                     SMT1CPWH        equ	775	;# 
  9118   000308                     SMT1CPWU        equ	776	;# 
  9119   000309                     SMT1PR          equ	777	;# 
  9120   000309                     SMT1PRL         equ	777	;# 
  9121   00030A                     SMT1PRH         equ	778	;# 
  9122   00030B                     SMT1PRU         equ	779	;# 
  9123   00030C                     SMT1CON0        equ	780	;# 
  9124   00030D                     SMT1CON1        equ	781	;# 
  9125   00030E                     SMT1STAT        equ	782	;# 
  9126   00030F                     SMT1CLK         equ	783	;# 
  9127   000310                     SMT1SIG         equ	784	;# 
  9128   000311                     SMT1WIN         equ	785	;# 
  9129   000318                     TMR0L           equ	792	;# 
  9130   000318                     TMR0            equ	792	;# 
  9131   000319                     TMR0H           equ	793	;# 
  9132   000319                     PR0             equ	793	;# 
  9133   00031A                     T0CON0          equ	794	;# 
  9134   00031B                     T0CON1          equ	795	;# 
  9135   00031C                     TMR1            equ	796	;# 
  9136   00031C                     TMR1L           equ	796	;# 
  9137   00031D                     TMR1H           equ	797	;# 
  9138   00031E                     T1CON           equ	798	;# 
  9139   00031E                     TMR1CON         equ	798	;# 
  9140   00031F                     T1GCON          equ	799	;# 
  9141   00031F                     TMR1GCON        equ	799	;# 
  9142   000320                     T1GATE          equ	800	;# 
  9143   000320                     TMR1GATE        equ	800	;# 
  9144   000321                     T1CLK           equ	801	;# 
  9145   000321                     TMR1CLK         equ	801	;# 
  9146   000321                     PR1             equ	801	;# 
  9147   000322                     T2TMR           equ	802	;# 
  9148   000322                     TMR2            equ	802	;# 
  9149   000323                     T2PR            equ	803	;# 
  9150   000323                     PR2             equ	803	;# 
  9151   000324                     T2CON           equ	804	;# 
  9152   000325                     T2HLT           equ	805	;# 
  9153   000326                     T2CLKCON        equ	806	;# 
  9154   000326                     T2CLK           equ	806	;# 
  9155   000327                     T2RST           equ	807	;# 
  9156   000328                     TMR3            equ	808	;# 
  9157   000328                     TMR3L           equ	808	;# 
  9158   000329                     TMR3H           equ	809	;# 
  9159   00032A                     T3CON           equ	810	;# 
  9160   00032A                     TMR3CON         equ	810	;# 
  9161   00032B                     T3GCON          equ	811	;# 
  9162   00032B                     TMR3GCON        equ	811	;# 
  9163   00032C                     T3GATE          equ	812	;# 
  9164   00032C                     TMR3GATE        equ	812	;# 
  9165   00032D                     T3CLK           equ	813	;# 
  9166   00032D                     TMR3CLK         equ	813	;# 
  9167   00032D                     PR3             equ	813	;# 
  9168   00032E                     T4TMR           equ	814	;# 
  9169   00032E                     TMR4            equ	814	;# 
  9170   00032F                     T4PR            equ	815	;# 
  9171   00032F                     PR4             equ	815	;# 
  9172   000330                     T4CON           equ	816	;# 
  9173   000331                     T4HLT           equ	817	;# 
  9174   000332                     T4CLKCON        equ	818	;# 
  9175   000332                     T4CLK           equ	818	;# 
  9176   000333                     T4RST           equ	819	;# 
  9177   000334                     TMR5            equ	820	;# 
  9178   000334                     TMR5L           equ	820	;# 
  9179   000335                     TMR5H           equ	821	;# 
  9180   000336                     T5CON           equ	822	;# 
  9181   000336                     TMR5CON         equ	822	;# 
  9182   000337                     T5GCON          equ	823	;# 
  9183   000337                     TMR5GCON        equ	823	;# 
  9184   000338                     T5GATE          equ	824	;# 
  9185   000338                     TMR5GATE        equ	824	;# 
  9186   000339                     T5CLK           equ	825	;# 
  9187   000339                     TMR5CLK         equ	825	;# 
  9188   000339                     PR5             equ	825	;# 
  9189   00033A                     T6TMR           equ	826	;# 
  9190   00033A                     TMR6            equ	826	;# 
  9191   00033B                     T6PR            equ	827	;# 
  9192   00033B                     PR6             equ	827	;# 
  9193   00033C                     T6CON           equ	828	;# 
  9194   00033D                     T6HLT           equ	829	;# 
  9195   00033E                     T6CLKCON        equ	830	;# 
  9196   00033E                     T6CLK           equ	830	;# 
  9197   00033F                     T6RST           equ	831	;# 
  9198   000340                     CCPR1           equ	832	;# 
  9199   000340                     CCPR1L          equ	832	;# 
  9200   000341                     CCPR1H          equ	833	;# 
  9201   000342                     CCP1CON         equ	834	;# 
  9202   000343                     CCP1CAP         equ	835	;# 
  9203   000344                     CCPR2           equ	836	;# 
  9204   000344                     CCPR2L          equ	836	;# 
  9205   000345                     CCPR2H          equ	837	;# 
  9206   000346                     CCP2CON         equ	838	;# 
  9207   000347                     CCP2CAP         equ	839	;# 
  9208   000348                     CCPR3           equ	840	;# 
  9209   000348                     CCPR3L          equ	840	;# 
  9210   000349                     CCPR3H          equ	841	;# 
  9211   00034A                     CCP3CON         equ	842	;# 
  9212   00034B                     CCP3CAP         equ	843	;# 
  9213   00034C                     CCPTMRS0        equ	844	;# 
  9214   00034F                     CRCDATA         equ	847	;# 
  9215   00034F                     CRCDATAL        equ	847	;# 
  9216   000350                     CRCDATAH        equ	848	;# 
  9217   000351                     CRCDATAU        equ	849	;# 
  9218   000352                     CRCDATAT        equ	850	;# 
  9219   000353                     CRCOUT          equ	851	;# 
  9220   000353                     CRCSHFT         equ	851	;# 
  9221   000353                     CRCXOR          equ	851	;# 
  9222   000353                     CRCOUTL         equ	851	;# 
  9223   000353                     CRCSHFTL        equ	851	;# 
  9224   000353                     CRCSHIFTL       equ	851	;# 
  9225   000353                     CRCXORL         equ	851	;# 
  9226   000354                     CRCOUTH         equ	852	;# 
  9227   000354                     CRCSHFTH        equ	852	;# 
  9228   000354                     CRCSHIFTH       equ	852	;# 
  9229   000354                     CRCXORH         equ	852	;# 
  9230   000355                     CRCOUTU         equ	853	;# 
  9231   000355                     CRCSHFTU        equ	853	;# 
  9232   000355                     CRCSHIFTU       equ	853	;# 
  9233   000355                     CRCXORU         equ	853	;# 
  9234   000356                     CRCOUTT         equ	854	;# 
  9235   000356                     CRCSHFTT        equ	854	;# 
  9236   000356                     CRCSHIFTT       equ	854	;# 
  9237   000356                     CRCXORT         equ	854	;# 
  9238   000357                     CRCCON0         equ	855	;# 
  9239   000358                     CRCCON1         equ	856	;# 
  9240   000359                     CRCCON2         equ	857	;# 
  9241   00035A                     SCANLADR        equ	858	;# 
  9242   00035A                     SCANLADRL       equ	858	;# 
  9243   00035B                     SCANLADRH       equ	859	;# 
  9244   00035C                     SCANLADRU       equ	860	;# 
  9245   00035D                     SCANHADR        equ	861	;# 
  9246   00035D                     SCANHADRL       equ	861	;# 
  9247   00035E                     SCANHADRH       equ	862	;# 
  9248   00035F                     SCANHADRU       equ	863	;# 
  9249   000360                     SCANCON0        equ	864	;# 
  9250   000361                     SCANTRIG        equ	865	;# 
  9251   000362                     IPR0            equ	866	;# 
  9252   000363                     IPR1            equ	867	;# 
  9253   000364                     IPR2            equ	868	;# 
  9254   000365                     IPR3            equ	869	;# 
  9255   000366                     IPR4            equ	870	;# 
  9256   000367                     IPR5            equ	871	;# 
  9257   000368                     IPR6            equ	872	;# 
  9258   000369                     IPR7            equ	873	;# 
  9259   00036A                     IPR8            equ	874	;# 
  9260   00036B                     IPR9            equ	875	;# 
  9261   00036C                     IPR10           equ	876	;# 
  9262   00036D                     IPR11           equ	877	;# 
  9263   00036E                     IPR12           equ	878	;# 
  9264   00036F                     IPR13           equ	879	;# 
  9265   000370                     IPR14           equ	880	;# 
  9266   000371                     IPR15           equ	881	;# 
  9267   000373                     STATUS_CSHAD    equ	883	;# 
  9268   000374                     WREG_CSHAD      equ	884	;# 
  9269   000375                     BSR_CSHAD       equ	885	;# 
  9270   000376                     SHADCON         equ	886	;# 
  9271   000377                     STATUS_SHAD     equ	887	;# 
  9272   000378                     WREG_SHAD       equ	888	;# 
  9273   000379                     BSR_SHAD        equ	889	;# 
  9274   00037A                     PCLATH_SHAD     equ	890	;# 
  9275   00037B                     PCLATU_SHAD     equ	891	;# 
  9276   00037C                     FSR0SH          equ	892	;# 
  9277   00037C                     FSR0L_SHAD      equ	892	;# 
  9278   00037D                     FSR0H_SHAD      equ	893	;# 
  9279   00037E                     FSR1SH          equ	894	;# 
  9280   00037E                     FSR1L_SHAD      equ	894	;# 
  9281   00037F                     FSR1H_SHAD      equ	895	;# 
  9282   000380                     FSR2SH          equ	896	;# 
  9283   000380                     FSR2L_SHAD      equ	896	;# 
  9284   000381                     FSR2H_SHAD      equ	897	;# 
  9285   000382                     PRODSH          equ	898	;# 
  9286   000382                     PRODL_SHAD      equ	898	;# 
  9287   000383                     PRODH_SHAD      equ	899	;# 
  9288   000387                     TU16ACON0       equ	903	;# 
  9289   000388                     TU16ACON1       equ	904	;# 
  9290   000389                     TU16AHLT        equ	905	;# 
  9291   00038A                     TU16APS         equ	906	;# 
  9292   00038B                     TU16ATMR        equ	907	;# 
  9293   00038B                     TU16ACR         equ	907	;# 
  9294   00038B                     TU16ATMRL       equ	907	;# 
  9295   00038B                     TU16ACRL        equ	907	;# 
  9296   00038C                     TU16ATMRH       equ	908	;# 
  9297   00038C                     TU16ACRH        equ	908	;# 
  9298   00038D                     TU16APR         equ	909	;# 
  9299   00038D                     TU16APRL        equ	909	;# 
  9300   00038E                     TU16APRH        equ	910	;# 
  9301   00038F                     TU16ACLK        equ	911	;# 
  9302   000390                     TU16AERS        equ	912	;# 
  9303   000393                     TU16BCON0       equ	915	;# 
  9304   000394                     TU16BCON1       equ	916	;# 
  9305   000395                     TU16BHLT        equ	917	;# 
  9306   000396                     TU16BPS         equ	918	;# 
  9307   000397                     TU16BTMR        equ	919	;# 
  9308   000397                     TU16BCR         equ	919	;# 
  9309   000397                     TU16BTMRL       equ	919	;# 
  9310   000397                     TU16BCRL        equ	919	;# 
  9311   000398                     TU16BTMRH       equ	920	;# 
  9312   000398                     TU16BCRH        equ	920	;# 
  9313   000399                     TU16BPR         equ	921	;# 
  9314   000399                     TU16BPRL        equ	921	;# 
  9315   00039A                     TU16BPRH        equ	922	;# 
  9316   00039B                     TU16BCLK        equ	923	;# 
  9317   00039C                     TU16BERS        equ	924	;# 
  9318   0003BB                     TUCHAIN         equ	955	;# 
  9319   0003BC                     CWG1CLK         equ	956	;# 
  9320   0003BC                     CWG1CLKCON      equ	956	;# 
  9321   0003BD                     CWG1ISM         equ	957	;# 
  9322   0003BE                     CWG1DBR         equ	958	;# 
  9323   0003BF                     CWG1DBF         equ	959	;# 
  9324   0003C0                     CWG1CON0        equ	960	;# 
  9325   0003C1                     CWG1CON1        equ	961	;# 
  9326   0003C2                     CWG1AS0         equ	962	;# 
  9327   0003C3                     CWG1AS1         equ	963	;# 
  9328   0003C4                     CWG1STR         equ	964	;# 
  9329   0003C5                     CWG2CLK         equ	965	;# 
  9330   0003C5                     CWG2CLKCON      equ	965	;# 
  9331   0003C6                     CWG2ISM         equ	966	;# 
  9332   0003C7                     CWG2DBR         equ	967	;# 
  9333   0003C8                     CWG2DBF         equ	968	;# 
  9334   0003C9                     CWG2CON0        equ	969	;# 
  9335   0003CA                     CWG2CON1        equ	970	;# 
  9336   0003CB                     CWG2AS0         equ	971	;# 
  9337   0003CC                     CWG2AS1         equ	972	;# 
  9338   0003CD                     CWG2STR         equ	973	;# 
  9339   0003CE                     CWG3CLK         equ	974	;# 
  9340   0003CE                     CWG3CLKCON      equ	974	;# 
  9341   0003CF                     CWG3ISM         equ	975	;# 
  9342   0003D0                     CWG3DBR         equ	976	;# 
  9343   0003D1                     CWG3DBF         equ	977	;# 
  9344   0003D2                     CWG3CON0        equ	978	;# 
  9345   0003D3                     CWG3CON1        equ	979	;# 
  9346   0003D4                     CWG3AS0         equ	980	;# 
  9347   0003D5                     CWG3AS1         equ	981	;# 
  9348   0003D6                     CWG3STR         equ	982	;# 
  9349   0003D7                     FVRCON          equ	983	;# 
  9350   0003D8                     ADCPCON         equ	984	;# 
  9351   0003D8                     ADCP            equ	984	;# 
  9352   0003D9                     ADLTH           equ	985	;# 
  9353   0003D9                     ADLTHL          equ	985	;# 
  9354   0003DA                     ADLTHH          equ	986	;# 
  9355   0003DB                     ADUTH           equ	987	;# 
  9356   0003DB                     ADUTHL          equ	987	;# 
  9357   0003DC                     ADUTHH          equ	988	;# 
  9358   0003DD                     ADERR           equ	989	;# 
  9359   0003DD                     ADERRL          equ	989	;# 
  9360   0003DE                     ADERRH          equ	990	;# 
  9361   0003DF                     ADSTPT          equ	991	;# 
  9362   0003DF                     ADSTPTL         equ	991	;# 
  9363   0003E0                     ADSTPTH         equ	992	;# 
  9364   0003E1                     ADFLTR          equ	993	;# 
  9365   0003E1                     ADFLTRL         equ	993	;# 
  9366   0003E2                     ADFLTRH         equ	994	;# 
  9367   0003E3                     ADACC           equ	995	;# 
  9368   0003E3                     ADACCL          equ	995	;# 
  9369   0003E4                     ADACCH          equ	996	;# 
  9370   0003E5                     ADACCU          equ	997	;# 
  9371   0003E6                     ADCNT           equ	998	;# 
  9372   0003E7                     ADRPT           equ	999	;# 
  9373   0003E8                     ADPREV          equ	1000	;# 
  9374   0003E8                     ADPREVL         equ	1000	;# 
  9375   0003E9                     ADPREVH         equ	1001	;# 
  9376   0003EA                     ADRES           equ	1002	;# 
  9377   0003EA                     ADRESL          equ	1002	;# 
  9378   0003EB                     ADRESH          equ	1003	;# 
  9379   0003EC                     ADPCH           equ	1004	;# 
  9380   0003EE                     ADACQ           equ	1006	;# 
  9381   0003EE                     ADACQL          equ	1006	;# 
  9382   0003EF                     ADACQH          equ	1007	;# 
  9383   0003F0                     ADCAP           equ	1008	;# 
  9384   0003F1                     ADPRE           equ	1009	;# 
  9385   0003F1                     ADPREL          equ	1009	;# 
  9386   0003F2                     ADPREH          equ	1010	;# 
  9387   0003F3                     ADCON0          equ	1011	;# 
  9388   0003F4                     ADCON1          equ	1012	;# 
  9389   0003F5                     ADCON2          equ	1013	;# 
  9390   0003F6                     ADCON3          equ	1014	;# 
  9391   0003F7                     ADSTAT          equ	1015	;# 
  9392   0003F8                     ADREF           equ	1016	;# 
  9393   0003F9                     ADACT           equ	1017	;# 
  9394   0003FA                     ADCLK           equ	1018	;# 
  9395   0003FB                     ADCTX           equ	1019	;# 
  9396   0003FC                     ADCSEL1         equ	1020	;# 
  9397   0003FD                     ADCSEL2         equ	1021	;# 
  9398   0003FE                     ADCSEL3         equ	1022	;# 
  9399   0003FF                     ADCSEL4         equ	1023	;# 
  9400   000400                     ANSELA          equ	1024	;# 
  9401   000401                     WPUA            equ	1025	;# 
  9402   000402                     ODCONA          equ	1026	;# 
  9403   000403                     SLRCONA         equ	1027	;# 
  9404   000404                     INLVLA          equ	1028	;# 
  9405   000405                     IOCAP           equ	1029	;# 
  9406   000406                     IOCAN           equ	1030	;# 
  9407   000407                     IOCAF           equ	1031	;# 
  9408   000408                     ANSELB          equ	1032	;# 
  9409   000409                     WPUB            equ	1033	;# 
  9410   00040A                     ODCONB          equ	1034	;# 
  9411   00040B                     SLRCONB         equ	1035	;# 
  9412   00040C                     INLVLB          equ	1036	;# 
  9413   00040D                     IOCBP           equ	1037	;# 
  9414   00040E                     IOCBN           equ	1038	;# 
  9415   00040F                     IOCBF           equ	1039	;# 
  9416   000410                     ANSELC          equ	1040	;# 
  9417   000411                     WPUC            equ	1041	;# 
  9418   000412                     ODCONC          equ	1042	;# 
  9419   000413                     SLRCONC         equ	1043	;# 
  9420   000414                     INLVLC          equ	1044	;# 
  9421   000415                     IOCCP           equ	1045	;# 
  9422   000416                     IOCCN           equ	1046	;# 
  9423   000417                     IOCCF           equ	1047	;# 
  9424   000421                     WPUE            equ	1057	;# 
  9425   000424                     INLVLE          equ	1060	;# 
  9426   000425                     IOCEP           equ	1061	;# 
  9427   000426                     IOCEN           equ	1062	;# 
  9428   000427                     IOCEF           equ	1063	;# 
  9429   000440                     NCO1ACC         equ	1088	;# 
  9430   000440                     NCO1ACCL        equ	1088	;# 
  9431   000441                     NCO1ACCH        equ	1089	;# 
  9432   000442                     NCO1ACCU        equ	1090	;# 
  9433   000443                     NCO1INC         equ	1091	;# 
  9434   000443                     NCO1INCL        equ	1091	;# 
  9435   000444                     NCO1INCH        equ	1092	;# 
  9436   000445                     NCO1INCU        equ	1093	;# 
  9437   000446                     NCO1CON         equ	1094	;# 
  9438   000447                     NCO1CLK         equ	1095	;# 
  9439   000448                     NCO2ACC         equ	1096	;# 
  9440   000448                     NCO2ACCL        equ	1096	;# 
  9441   000449                     NCO2ACCH        equ	1097	;# 
  9442   00044A                     NCO2ACCU        equ	1098	;# 
  9443   00044B                     NCO2INC         equ	1099	;# 
  9444   00044B                     NCO2INCL        equ	1099	;# 
  9445   00044C                     NCO2INCH        equ	1100	;# 
  9446   00044D                     NCO2INCU        equ	1101	;# 
  9447   00044E                     NCO2CON         equ	1102	;# 
  9448   00044F                     NCO2CLK         equ	1103	;# 
  9449   000450                     NCO3ACC         equ	1104	;# 
  9450   000450                     NCO3ACCL        equ	1104	;# 
  9451   000451                     NCO3ACCH        equ	1105	;# 
  9452   000452                     NCO3ACCU        equ	1106	;# 
  9453   000453                     NCO3INC         equ	1107	;# 
  9454   000453                     NCO3INCL        equ	1107	;# 
  9455   000454                     NCO3INCH        equ	1108	;# 
  9456   000455                     NCO3INCU        equ	1109	;# 
  9457   000456                     NCO3CON         equ	1110	;# 
  9458   000457                     NCO3CLK         equ	1111	;# 
  9459   000458                     FSCMCON         equ	1112	;# 
  9460   000459                     IVTLOCK         equ	1113	;# 
  9461   00045A                     IVTAD           equ	1114	;# 
  9462   00045A                     IVTADL          equ	1114	;# 
  9463   00045B                     IVTADH          equ	1115	;# 
  9464   00045C                     IVTADU          equ	1116	;# 
  9465   00045D                     IVTBASE         equ	1117	;# 
  9466   00045D                     IVTBASEL        equ	1117	;# 
  9467   00045E                     IVTBASEH        equ	1118	;# 
  9468   00045F                     IVTBASEU        equ	1119	;# 
  9469   000460                     PWM1ERS         equ	1120	;# 
  9470   000461                     PWM1CLK         equ	1121	;# 
  9471   000462                     PWM1LDS         equ	1122	;# 
  9472   000463                     PWM1PR          equ	1123	;# 
  9473   000463                     PWM1PRL         equ	1123	;# 
  9474   000464                     PWM1PRH         equ	1124	;# 
  9475   000465                     PWM1CPRE        equ	1125	;# 
  9476   000466                     PWM1PIPOS       equ	1126	;# 
  9477   000467                     PWM1GIR         equ	1127	;# 
  9478   000468                     PWM1GIE         equ	1128	;# 
  9479   000469                     PWM1CON         equ	1129	;# 
  9480   00046A                     PWM1S1CFG       equ	1130	;# 
  9481   00046B                     PWM1S1P1        equ	1131	;# 
  9482   00046B                     PWM1S1P1L       equ	1131	;# 
  9483   00046C                     PWM1S1P1H       equ	1132	;# 
  9484   00046D                     PWM1S1P2        equ	1133	;# 
  9485   00046D                     PWM1S1P2L       equ	1133	;# 
  9486   00046E                     PWM1S1P2H       equ	1134	;# 
  9487   00046F                     PWM2ERS         equ	1135	;# 
  9488   000470                     PWM2CLK         equ	1136	;# 
  9489   000471                     PWM2LDS         equ	1137	;# 
  9490   000472                     PWM2PR          equ	1138	;# 
  9491   000472                     PWM2PRL         equ	1138	;# 
  9492   000473                     PWM2PRH         equ	1139	;# 
  9493   000474                     PWM2CPRE        equ	1140	;# 
  9494   000475                     PWM2PIPOS       equ	1141	;# 
  9495   000476                     PWM2GIR         equ	1142	;# 
  9496   000477                     PWM2GIE         equ	1143	;# 
  9497   000478                     PWM2CON         equ	1144	;# 
  9498   000479                     PWM2S1CFG       equ	1145	;# 
  9499   00047A                     PWM2S1P1        equ	1146	;# 
  9500   00047A                     PWM2S1P1L       equ	1146	;# 
  9501   00047B                     PWM2S1P1H       equ	1147	;# 
  9502   00047C                     PWM2S1P2        equ	1148	;# 
  9503   00047C                     PWM2S1P2L       equ	1148	;# 
  9504   00047D                     PWM2S1P2H       equ	1149	;# 
  9505   00047E                     PWM3ERS         equ	1150	;# 
  9506   00047F                     PWM3CLK         equ	1151	;# 
  9507   000480                     PWM3LDS         equ	1152	;# 
  9508   000481                     PWM3PR          equ	1153	;# 
  9509   000481                     PWM3PRL         equ	1153	;# 
  9510   000482                     PWM3PRH         equ	1154	;# 
  9511   000483                     PWM3CPRE        equ	1155	;# 
  9512   000484                     PWM3PIPOS       equ	1156	;# 
  9513   000485                     PWM3GIR         equ	1157	;# 
  9514   000486                     PWM3GIE         equ	1158	;# 
  9515   000487                     PWM3CON         equ	1159	;# 
  9516   000488                     PWM3S1CFG       equ	1160	;# 
  9517   000489                     PWM3S1P1        equ	1161	;# 
  9518   000489                     PWM3S1P1L       equ	1161	;# 
  9519   00048A                     PWM3S1P1H       equ	1162	;# 
  9520   00048B                     PWM3S1P2        equ	1163	;# 
  9521   00048B                     PWM3S1P2L       equ	1163	;# 
  9522   00048C                     PWM3S1P2H       equ	1164	;# 
  9523   00048D                     PWM4ERS         equ	1165	;# 
  9524   00048E                     PWM4CLK         equ	1166	;# 
  9525   00048F                     PWM4LDS         equ	1167	;# 
  9526   000490                     PWM4PR          equ	1168	;# 
  9527   000490                     PWM4PRL         equ	1168	;# 
  9528   000491                     PWM4PRH         equ	1169	;# 
  9529   000492                     PWM4CPRE        equ	1170	;# 
  9530   000493                     PWM4PIPOS       equ	1171	;# 
  9531   000494                     PWM4GIR         equ	1172	;# 
  9532   000495                     PWM4GIE         equ	1173	;# 
  9533   000496                     PWM4CON         equ	1174	;# 
  9534   000497                     PWM4S1CFG       equ	1175	;# 
  9535   000498                     PWM4S1P1        equ	1176	;# 
  9536   000498                     PWM4S1P1L       equ	1176	;# 
  9537   000499                     PWM4S1P1H       equ	1177	;# 
  9538   00049A                     PWM4S1P2        equ	1178	;# 
  9539   00049A                     PWM4S1P2L       equ	1178	;# 
  9540   00049B                     PWM4S1P2H       equ	1179	;# 
  9541   00049C                     PWMLOAD         equ	1180	;# 
  9542   00049D                     PWMEN           equ	1181	;# 
  9543   00049E                     PIE0            equ	1182	;# 
  9544   00049F                     PIE1            equ	1183	;# 
  9545   0004A0                     PIE2            equ	1184	;# 
  9546   0004A1                     PIE3            equ	1185	;# 
  9547   0004A2                     PIE4            equ	1186	;# 
  9548   0004A3                     PIE5            equ	1187	;# 
  9549   0004A4                     PIE6            equ	1188	;# 
  9550   0004A5                     PIE7            equ	1189	;# 
  9551   0004A6                     PIE8            equ	1190	;# 
  9552   0004A7                     PIE9            equ	1191	;# 
  9553   0004A8                     PIE10           equ	1192	;# 
  9554   0004A9                     PIE11           equ	1193	;# 
  9555   0004AA                     PIE12           equ	1194	;# 
  9556   0004AB                     PIE13           equ	1195	;# 
  9557   0004AC                     PIE14           equ	1196	;# 
  9558   0004AD                     PIE15           equ	1197	;# 
  9559   0004AE                     PIR0            equ	1198	;# 
  9560   0004AF                     PIR1            equ	1199	;# 
  9561   0004B0                     PIR2            equ	1200	;# 
  9562   0004B1                     PIR3            equ	1201	;# 
  9563   0004B2                     PIR4            equ	1202	;# 
  9564   0004B3                     PIR5            equ	1203	;# 
  9565   0004B4                     PIR6            equ	1204	;# 
  9566   0004B5                     PIR7            equ	1205	;# 
  9567   0004B6                     PIR8            equ	1206	;# 
  9568   0004B7                     PIR9            equ	1207	;# 
  9569   0004B8                     PIR10           equ	1208	;# 
  9570   0004B9                     PIR11           equ	1209	;# 
  9571   0004BA                     PIR12           equ	1210	;# 
  9572   0004BB                     PIR13           equ	1211	;# 
  9573   0004BC                     PIR14           equ	1212	;# 
  9574   0004BD                     PIR15           equ	1213	;# 
  9575   0004BE                     LATA            equ	1214	;# 
  9576   0004BF                     LATB            equ	1215	;# 
  9577   0004C0                     LATC            equ	1216	;# 
  9578   0004C6                     TRISA           equ	1222	;# 
  9579   0004C7                     TRISB           equ	1223	;# 
  9580   0004C8                     TRISC           equ	1224	;# 
  9581   0004CA                     TRISE           equ	1226	;# 
  9582   0004CE                     PORTA           equ	1230	;# 
  9583   0004CF                     PORTB           equ	1231	;# 
  9584   0004D0                     PORTC           equ	1232	;# 
  9585   0004D2                     PORTE           equ	1234	;# 
  9586   0004D6                     INTCON0         equ	1238	;# 
  9587   0004D7                     INTCON1         equ	1239	;# 
  9588   0004D8                     STATUS          equ	1240	;# 
  9589   0004D9                     FSR2            equ	1241	;# 
  9590   0004D9                     FSR2L           equ	1241	;# 
  9591   0004DA                     FSR2H           equ	1242	;# 
  9592   0004DB                     PLUSW2          equ	1243	;# 
  9593   0004DC                     PREINC2         equ	1244	;# 
  9594   0004DD                     POSTDEC2        equ	1245	;# 
  9595   0004DE                     POSTINC2        equ	1246	;# 
  9596   0004DF                     INDF2           equ	1247	;# 
  9597   0004E0                     BSR             equ	1248	;# 
  9598   0004E1                     FSR1            equ	1249	;# 
  9599   0004E1                     FSR1L           equ	1249	;# 
  9600   0004E2                     FSR1H           equ	1250	;# 
  9601   0004E3                     PLUSW1          equ	1251	;# 
  9602   0004E4                     PREINC1         equ	1252	;# 
  9603   0004E5                     POSTDEC1        equ	1253	;# 
  9604   0004E6                     POSTINC1        equ	1254	;# 
  9605   0004E7                     INDF1           equ	1255	;# 
  9606   0004E8                     WREG            equ	1256	;# 
  9607   0004E9                     FSR0            equ	1257	;# 
  9608   0004E9                     FSR0L           equ	1257	;# 
  9609   0004EA                     FSR0H           equ	1258	;# 
  9610   0004EB                     PLUSW0          equ	1259	;# 
  9611   0004EC                     PREINC0         equ	1260	;# 
  9612   0004ED                     POSTDEC0        equ	1261	;# 
  9613   0004EE                     POSTINC0        equ	1262	;# 
  9614   0004EF                     INDF0           equ	1263	;# 
  9615   0004F0                     PCON0           equ	1264	;# 
  9616   0004F1                     PCON1           equ	1265	;# 
  9617   0004F2                     CPUDOZE         equ	1266	;# 
  9618   0004F3                     PROD            equ	1267	;# 
  9619   0004F3                     PRODL           equ	1267	;# 
  9620   0004F4                     PRODH           equ	1268	;# 
  9621   0004F5                     TABLAT          equ	1269	;# 
  9622   0004F6                     TBLPTR          equ	1270	;# 
  9623   0004F6                     TBLPTRL         equ	1270	;# 
  9624   0004F7                     TBLPTRH         equ	1271	;# 
  9625   0004F8                     TBLPTRU         equ	1272	;# 
  9626   0004F9                     PCLAT           equ	1273	;# 
  9627   0004F9                     PCL             equ	1273	;# 
  9628   0004FA                     PCLATH          equ	1274	;# 
  9629   0004FB                     PCLATU          equ	1275	;# 
  9630   0004FC                     STKPTR          equ	1276	;# 
  9631   0004FD                     TOS             equ	1277	;# 
  9632   0004FD                     TOSL            equ	1277	;# 
  9633   0004FE                     TOSH            equ	1278	;# 
  9634   0004FF                     TOSU            equ	1279	;# 
  9635   000038                     BOOTREG         equ	56	;# 
  9636   000039                     CLKRCON         equ	57	;# 
  9637   00003A                     CLKRCLK         equ	58	;# 
  9638   000040                     NVMCON0         equ	64	;# 
  9639   000041                     NVMCON1         equ	65	;# 
  9640   000042                     NVMLOCK         equ	66	;# 
  9641   000043                     NVMADR          equ	67	;# 
  9642   000043                     NVMADRL         equ	67	;# 
  9643   000044                     NVMADRH         equ	68	;# 
  9644   000045                     NVMADRU         equ	69	;# 
  9645   000046                     NVMDAT          equ	70	;# 
  9646   000046                     NVMDATL         equ	70	;# 
  9647   000047                     NVMDATH         equ	71	;# 
  9648   000048                     VREGCON         equ	72	;# 
  9649   000049                     BORCON          equ	73	;# 
  9650   00004A                     HLVDCON0        equ	74	;# 
  9651   00004B                     HLVDCON1        equ	75	;# 
  9652   00004C                     ZCDCON          equ	76	;# 
  9653   000060                     PMD0            equ	96	;# 
  9654   000061                     PMD1            equ	97	;# 
  9655   000062                     PMD2            equ	98	;# 
  9656   000063                     PMD3            equ	99	;# 
  9657   000064                     PMD4            equ	100	;# 
  9658   000065                     PMD5            equ	101	;# 
  9659   000066                     PMD6            equ	102	;# 
  9660   000067                     PMD7            equ	103	;# 
  9661   000068                     PMD8            equ	104	;# 
  9662   00006A                     MD1CON0         equ	106	;# 
  9663   00006B                     MD1CON1         equ	107	;# 
  9664   00006C                     MD1SRC          equ	108	;# 
  9665   00006D                     MD1CARL         equ	109	;# 
  9666   00006E                     MD1CARH         equ	110	;# 
  9667   00006F                     CMOUT           equ	111	;# 
  9668   000070                     CM1CON0         equ	112	;# 
  9669   000071                     CM1CON1         equ	113	;# 
  9670   000072                     CM1NCH          equ	114	;# 
  9671   000073                     CM1PCH          equ	115	;# 
  9672   000074                     CM2CON0         equ	116	;# 
  9673   000075                     CM2CON1         equ	117	;# 
  9674   000076                     CM2NCH          equ	118	;# 
  9675   000077                     CM2PCH          equ	119	;# 
  9676   000078                     WDTCON0         equ	120	;# 
  9677   000079                     WDTCON1         equ	121	;# 
  9678   00007A                     WDTPSL          equ	122	;# 
  9679   00007B                     WDTPSH          equ	123	;# 
  9680   00007C                     WDTTMR          equ	124	;# 
  9681   00007D                     DAC1DAT         equ	125	;# 
  9682   00007D                     DAC1DATL        equ	125	;# 
  9683   00007F                     DAC1CON         equ	127	;# 
  9684   000080                     SPI1RXB         equ	128	;# 
  9685   000081                     SPI1TXB         equ	129	;# 
  9686   000082                     SPI1TCNT        equ	130	;# 
  9687   000082                     SPI1TCNTL       equ	130	;# 
  9688   000083                     SPI1TCNTH       equ	131	;# 
  9689   000084                     SPI1CON0        equ	132	;# 
  9690   000085                     SPI1CON1        equ	133	;# 
  9691   000086                     SPI1CON2        equ	134	;# 
  9692   000087                     SPI1STATUS      equ	135	;# 
  9693   000088                     SPI1TWIDTH      equ	136	;# 
  9694   000089                     SPI1BAUD        equ	137	;# 
  9695   00008A                     SPI1INTF        equ	138	;# 
  9696   00008B                     SPI1INTE        equ	139	;# 
  9697   00008C                     SPI1CLK         equ	140	;# 
  9698   00008D                     SPI2RXB         equ	141	;# 
  9699   00008E                     SPI2TXB         equ	142	;# 
  9700   00008F                     SPI2TCNT        equ	143	;# 
  9701   00008F                     SPI2TCNTL       equ	143	;# 
  9702   000090                     SPI2TCNTH       equ	144	;# 
  9703   000091                     SPI2CON0        equ	145	;# 
  9704   000092                     SPI2CON1        equ	146	;# 
  9705   000093                     SPI2CON2        equ	147	;# 
  9706   000094                     SPI2STATUS      equ	148	;# 
  9707   000095                     SPI2TWIDTH      equ	149	;# 
  9708   000096                     SPI2BAUD        equ	150	;# 
  9709   000097                     SPI2INTF        equ	151	;# 
  9710   000098                     SPI2INTE        equ	152	;# 
  9711   000099                     SPI2CLK         equ	153	;# 
  9712   0000AC                     ACTCON          equ	172	;# 
  9713   0000AD                     OSCCON1         equ	173	;# 
  9714   0000AE                     OSCCON2         equ	174	;# 
  9715   0000AF                     OSCCON3         equ	175	;# 
  9716   0000B0                     OSCTUNE         equ	176	;# 
  9717   0000B1                     OSCFRQ          equ	177	;# 
  9718   0000B1                     OSCFREQ         equ	177	;# 
  9719   0000B2                     OSCSTAT         equ	178	;# 
  9720   0000B2                     OSCSTAT1        equ	178	;# 
  9721   0000B3                     OSCEN           equ	179	;# 
  9722   0000B4                     PRLOCK          equ	180	;# 
  9723   0000B5                     SCANPR          equ	181	;# 
  9724   0000B6                     DMA1PR          equ	182	;# 
  9725   0000B7                     DMA2PR          equ	183	;# 
  9726   0000B8                     DMA3PR          equ	184	;# 
  9727   0000B9                     DMA4PR          equ	185	;# 
  9728   0000BA                     DMA5PR          equ	186	;# 
  9729   0000BB                     DMA6PR          equ	187	;# 
  9730   0000BC                     DMA7PR          equ	188	;# 
  9731   0000BD                     DMA8PR          equ	189	;# 
  9732   0000BE                     MAINPR          equ	190	;# 
  9733   0000BF                     ISRPR           equ	191	;# 
  9734   0000D4                     CLCDATA         equ	212	;# 
  9735   0000D5                     CLCSELECT       equ	213	;# 
  9736   0000D6                     CLCnCON         equ	214	;# 
  9737   0000D7                     CLCnPOL         equ	215	;# 
  9738   0000D8                     CLCnSEL0        equ	216	;# 
  9739   0000D9                     CLCnSEL1        equ	217	;# 
  9740   0000DA                     CLCnSEL2        equ	218	;# 
  9741   0000DB                     CLCnSEL3        equ	219	;# 
  9742   0000DC                     CLCnGLS0        equ	220	;# 
  9743   0000DD                     CLCnGLS1        equ	221	;# 
  9744   0000DE                     CLCnGLS2        equ	222	;# 
  9745   0000DF                     CLCnGLS3        equ	223	;# 
  9746   0000E8                     DMASELECT       equ	232	;# 
  9747   0000E9                     DMAnBUF         equ	233	;# 
  9748   0000EA                     DMAnDCNT        equ	234	;# 
  9749   0000EA                     DMAnDCNTL       equ	234	;# 
  9750   0000EB                     DMAnDCNTH       equ	235	;# 
  9751   0000EC                     DMAnDPTR        equ	236	;# 
  9752   0000EC                     DMAnDPTRL       equ	236	;# 
  9753   0000ED                     DMAnDPTRH       equ	237	;# 
  9754   0000EE                     DMAnDSZ         equ	238	;# 
  9755   0000EE                     DMAnDSZL        equ	238	;# 
  9756   0000EF                     DMAnDSZH        equ	239	;# 
  9757   0000F0                     DMAnDSA         equ	240	;# 
  9758   0000F0                     DMAnDSAL        equ	240	;# 
  9759   0000F1                     DMAnDSAH        equ	241	;# 
  9760   0000F2                     DMAnSCNT        equ	242	;# 
  9761   0000F2                     DMAnSCNTL       equ	242	;# 
  9762   0000F3                     DMAnSCNTH       equ	243	;# 
  9763   0000F4                     DMAnSPTR        equ	244	;# 
  9764   0000F4                     DMAnSPTRL       equ	244	;# 
  9765   0000F5                     DMAnSPTRH       equ	245	;# 
  9766   0000F6                     DMAnSPTRU       equ	246	;# 
  9767   0000F7                     DMAnSSZ         equ	247	;# 
  9768   0000F7                     DMAnSSZL        equ	247	;# 
  9769   0000F8                     DMAnSSZH        equ	248	;# 
  9770   0000F9                     DMAnSSA         equ	249	;# 
  9771   0000F9                     DMAnSSAL        equ	249	;# 
  9772   0000FA                     DMAnSSAH        equ	250	;# 
  9773   0000FB                     DMAnSSAU        equ	251	;# 
  9774   0000FC                     DMAnCON0        equ	252	;# 
  9775   0000FD                     DMAnCON1        equ	253	;# 
  9776   0000FE                     DMAnAIRQ        equ	254	;# 
  9777   0000FF                     DMAnSIRQ        equ	255	;# 
  9778   000100                     C1CONL          equ	256	;# 
  9779   000101                     C1CONH          equ	257	;# 
  9780   000102                     C1CONU          equ	258	;# 
  9781   000103                     C1CONT          equ	259	;# 
  9782   000104                     C1NBTCFGL       equ	260	;# 
  9783   000105                     C1NBTCFGH       equ	261	;# 
  9784   000106                     C1NBTCFGU       equ	262	;# 
  9785   000107                     C1NBTCFGT       equ	263	;# 
  9786   000108                     C1DBTCFGL       equ	264	;# 
  9787   000109                     C1DBTCFGH       equ	265	;# 
  9788   00010A                     C1DBTCFGU       equ	266	;# 
  9789   00010B                     C1DBTCFGT       equ	267	;# 
  9790   00010C                     C1TDCL          equ	268	;# 
  9791   00010D                     C1TDCH          equ	269	;# 
  9792   00010E                     C1TDCU          equ	270	;# 
  9793   000110                     C1TBC           equ	272	;# 
  9794   000110                     C1TBCL          equ	272	;# 
  9795   000111                     C1TBCH          equ	273	;# 
  9796   000112                     C1TBCU          equ	274	;# 
  9797   000113                     C1TBCT          equ	275	;# 
  9798   000114                     C1TSCONL        equ	276	;# 
  9799   000115                     C1TSCONH        equ	277	;# 
  9800   000116                     C1TSCONU        equ	278	;# 
  9801   000117                     C1TSCONT        equ	279	;# 
  9802   000118                     C1VECL          equ	280	;# 
  9803   000119                     C1VECH          equ	281	;# 
  9804   00011A                     C1VECU          equ	282	;# 
  9805   00011B                     C1VECT          equ	283	;# 
  9806   00011C                     C1INTL          equ	284	;# 
  9807   00011D                     C1INTH          equ	285	;# 
  9808   00011E                     C1INTU          equ	286	;# 
  9809   00011F                     C1INTT          equ	287	;# 
  9810   000120                     C1RXIF          equ	288	;# 
  9811   000120                     C1RXIFL         equ	288	;# 
  9812   000121                     C1RXIFH         equ	289	;# 
  9813   000122                     C1RXIFU         equ	290	;# 
  9814   000123                     C1RXIFT         equ	291	;# 
  9815   000124                     C1TXIF          equ	292	;# 
  9816   000124                     C1TXIFL         equ	292	;# 
  9817   000125                     C1TXIFH         equ	293	;# 
  9818   000126                     C1TXIFU         equ	294	;# 
  9819   000127                     C1TXIFT         equ	295	;# 
  9820   000128                     C1RXOVIF        equ	296	;# 
  9821   000128                     C1RXOVIFL       equ	296	;# 
  9822   000129                     C1RXOVIFH       equ	297	;# 
  9823   00012A                     C1RXOVIFU       equ	298	;# 
  9824   00012B                     C1RXOVIFT       equ	299	;# 
  9825   00012C                     C1TXATIF        equ	300	;# 
  9826   00012C                     C1TXATIFL       equ	300	;# 
  9827   00012D                     C1TXATIFH       equ	301	;# 
  9828   00012E                     C1TXATIFU       equ	302	;# 
  9829   00012F                     C1TXATIFT       equ	303	;# 
  9830   000130                     C1TXREQ         equ	304	;# 
  9831   000130                     C1TXREQL        equ	304	;# 
  9832   000131                     C1TXREQH        equ	305	;# 
  9833   000132                     C1TXREQU        equ	306	;# 
  9834   000133                     C1TXREQT        equ	307	;# 
  9835   000134                     C1TRECL         equ	308	;# 
  9836   000135                     C1TRECH         equ	309	;# 
  9837   000136                     C1TRECU         equ	310	;# 
  9838   000137                     C1TRECT         equ	311	;# 
  9839   000138                     C1BDIAG0L       equ	312	;# 
  9840   000139                     C1BDIAG0H       equ	313	;# 
  9841   00013C                     C1BDIAG1L       equ	316	;# 
  9842   00013D                     C1BDIAG1H       equ	317	;# 
  9843   00013E                     C1BDIAG1U       equ	318	;# 
  9844   00013F                     C1BDIAG1T       equ	319	;# 
  9845   000140                     C1TEFCONL       equ	320	;# 
  9846   000141                     C1TEFCONH       equ	321	;# 
  9847   000142                     C1TEFCONU       equ	322	;# 
  9848   000143                     C1TEFCONT       equ	323	;# 
  9849   000144                     C1TEFSTAL       equ	324	;# 
  9850   000145                     C1TEFSTAH       equ	325	;# 
  9851   000146                     C1TEFSTAU       equ	326	;# 
  9852   000147                     C1TEFSTAT       equ	327	;# 
  9853   000148                     C1TEFUA         equ	328	;# 
  9854   000148                     C1TEFUAL        equ	328	;# 
  9855   000149                     C1TEFUAH        equ	329	;# 
  9856   00014A                     C1TEFUAU        equ	330	;# 
  9857   00014B                     C1TEFUAT        equ	331	;# 
  9858   00014C                     C1FIFOBA        equ	332	;# 
  9859   00014C                     C1FIFOBAL       equ	332	;# 
  9860   00014D                     C1FIFOBAH       equ	333	;# 
  9861   00014E                     C1FIFOBAU       equ	334	;# 
  9862   00014F                     C1FIFOBAT       equ	335	;# 
  9863   000150                     C1TXQCONL       equ	336	;# 
  9864   000151                     C1TXQCONH       equ	337	;# 
  9865   000152                     C1TXQCONU       equ	338	;# 
  9866   000153                     C1TXQCONT       equ	339	;# 
  9867   000154                     C1TXQSTAL       equ	340	;# 
  9868   000155                     C1TXQSTAH       equ	341	;# 
  9869   000156                     C1TXQSTAU       equ	342	;# 
  9870   000157                     C1TXQSTAT       equ	343	;# 
  9871   000158                     C1TXQUA         equ	344	;# 
  9872   000158                     C1TXQUAL        equ	344	;# 
  9873   000159                     C1TXQUAH        equ	345	;# 
  9874   00015A                     C1TXQUAU        equ	346	;# 
  9875   00015B                     C1TXQUAT        equ	347	;# 
  9876   00015C                     C1FIFOCON1      equ	348	;# 
  9877   00015C                     C1FIFOCON1L     equ	348	;# 
  9878   00015D                     C1FIFOCON1H     equ	349	;# 
  9879   00015E                     C1FIFOCON1U     equ	350	;# 
  9880   00015F                     C1FIFOCON1T     equ	351	;# 
  9881   000160                     C1FIFOSTA1      equ	352	;# 
  9882   000160                     C1FIFOSTA1L     equ	352	;# 
  9883   000161                     C1FIFOSTA1H     equ	353	;# 
  9884   000162                     C1FIFOSTA1U     equ	354	;# 
  9885   000163                     C1FIFOSTA1T     equ	355	;# 
  9886   000164                     C1FIFOUA1       equ	356	;# 
  9887   000164                     C1FIFOUA1L      equ	356	;# 
  9888   000165                     C1FIFOUA1H      equ	357	;# 
  9889   000166                     C1FIFOUA1U      equ	358	;# 
  9890   000167                     C1FIFOUA1T      equ	359	;# 
  9891   000168                     C1FIFOCON2      equ	360	;# 
  9892   000168                     C1FIFOCON2L     equ	360	;# 
  9893   000169                     C1FIFOCON2H     equ	361	;# 
  9894   00016A                     C1FIFOCON2U     equ	362	;# 
  9895   00016B                     C1FIFOCON2T     equ	363	;# 
  9896   00016C                     C1FIFOSTA2      equ	364	;# 
  9897   00016C                     C1FIFOSTA2L     equ	364	;# 
  9898   00016D                     C1FIFOSTA2H     equ	365	;# 
  9899   00016E                     C1FIFOSTA2U     equ	366	;# 
  9900   00016F                     C1FIFOSTA2T     equ	367	;# 
  9901   000170                     C1FIFOUA2       equ	368	;# 
  9902   000170                     C1FIFOUA2L      equ	368	;# 
  9903   000171                     C1FIFOUA2H      equ	369	;# 
  9904   000172                     C1FIFOUA2U      equ	370	;# 
  9905   000173                     C1FIFOUA2T      equ	371	;# 
  9906   000174                     C1FIFOCON3      equ	372	;# 
  9907   000174                     C1FIFOCON3L     equ	372	;# 
  9908   000175                     C1FIFOCON3H     equ	373	;# 
  9909   000176                     C1FIFOCON3U     equ	374	;# 
  9910   000177                     C1FIFOCON3T     equ	375	;# 
  9911   000178                     C1FIFOSTA3      equ	376	;# 
  9912   000178                     C1FIFOSTA3L     equ	376	;# 
  9913   000179                     C1FIFOSTA3H     equ	377	;# 
  9914   00017A                     C1FIFOSTA3U     equ	378	;# 
  9915   00017B                     C1FIFOSTA3T     equ	379	;# 
  9916   00017C                     C1FIFOUA3       equ	380	;# 
  9917   00017C                     C1FIFOUA3L      equ	380	;# 
  9918   00017D                     C1FIFOUA3H      equ	381	;# 
  9919   00017E                     C1FIFOUA3U      equ	382	;# 
  9920   00017F                     C1FIFOUA3T      equ	383	;# 
  9921   000180                     C1FLTCON0L      equ	384	;# 
  9922   000181                     C1FLTCON0H      equ	385	;# 
  9923   000182                     C1FLTCON0U      equ	386	;# 
  9924   000183                     C1FLTCON0T      equ	387	;# 
  9925   000184                     C1FLTCON1L      equ	388	;# 
  9926   000185                     C1FLTCON1H      equ	389	;# 
  9927   000186                     C1FLTCON1U      equ	390	;# 
  9928   000187                     C1FLTCON1T      equ	391	;# 
  9929   000188                     C1FLTCON2L      equ	392	;# 
  9930   000189                     C1FLTCON2H      equ	393	;# 
  9931   00018A                     C1FLTCON2U      equ	394	;# 
  9932   00018B                     C1FLTCON2T      equ	395	;# 
  9933   00018C                     C1FLTOBJ0       equ	396	;# 
  9934   00018C                     C1FLTOBJ0L      equ	396	;# 
  9935   00018D                     C1FLTOBJ0H      equ	397	;# 
  9936   00018E                     C1FLTOBJ0U      equ	398	;# 
  9937   00018F                     C1FLTOBJ0T      equ	399	;# 
  9938   000190                     C1MASK0         equ	400	;# 
  9939   000190                     C1MASK0L        equ	400	;# 
  9940   000191                     C1MASK0H        equ	401	;# 
  9941   000192                     C1MASK0U        equ	402	;# 
  9942   000193                     C1MASK0T        equ	403	;# 
  9943   000194                     C1FLTOBJ1       equ	404	;# 
  9944   000194                     C1FLTOBJ1L      equ	404	;# 
  9945   000195                     C1FLTOBJ1H      equ	405	;# 
  9946   000196                     C1FLTOBJ1U      equ	406	;# 
  9947   000197                     C1FLTOBJ1T      equ	407	;# 
  9948   000198                     C1MASK1         equ	408	;# 
  9949   000198                     C1MASK1L        equ	408	;# 
  9950   000199                     C1MASK1H        equ	409	;# 
  9951   00019A                     C1MASK1U        equ	410	;# 
  9952   00019B                     C1MASK1T        equ	411	;# 
  9953   00019C                     C1FLTOBJ2       equ	412	;# 
  9954   00019C                     C1FLTOBJ2L      equ	412	;# 
  9955   00019D                     C1FLTOBJ2H      equ	413	;# 
  9956   00019E                     C1FLTOBJ2U      equ	414	;# 
  9957   00019F                     C1FLTOBJ2T      equ	415	;# 
  9958   0001A0                     C1MASK2         equ	416	;# 
  9959   0001A0                     C1MASK2L        equ	416	;# 
  9960   0001A1                     C1MASK2H        equ	417	;# 
  9961   0001A2                     C1MASK2U        equ	418	;# 
  9962   0001A3                     C1MASK2T        equ	419	;# 
  9963   0001A4                     C1FLTOBJ3       equ	420	;# 
  9964   0001A4                     C1FLTOBJ3L      equ	420	;# 
  9965   0001A5                     C1FLTOBJ3H      equ	421	;# 
  9966   0001A6                     C1FLTOBJ3U      equ	422	;# 
  9967   0001A7                     C1FLTOBJ3T      equ	423	;# 
  9968   0001A8                     C1MASK3         equ	424	;# 
  9969   0001A8                     C1MASK3L        equ	424	;# 
  9970   0001A9                     C1MASK3H        equ	425	;# 
  9971   0001AA                     C1MASK3U        equ	426	;# 
  9972   0001AB                     C1MASK3T        equ	427	;# 
  9973   0001AC                     C1FLTOBJ4       equ	428	;# 
  9974   0001AC                     C1FLTOBJ4L      equ	428	;# 
  9975   0001AD                     C1FLTOBJ4H      equ	429	;# 
  9976   0001AE                     C1FLTOBJ4U      equ	430	;# 
  9977   0001AF                     C1FLTOBJ4T      equ	431	;# 
  9978   0001B0                     C1MASK4         equ	432	;# 
  9979   0001B0                     C1MASK4L        equ	432	;# 
  9980   0001B1                     C1MASK4H        equ	433	;# 
  9981   0001B2                     C1MASK4U        equ	434	;# 
  9982   0001B3                     C1MASK4T        equ	435	;# 
  9983   0001B4                     C1FLTOBJ5       equ	436	;# 
  9984   0001B4                     C1FLTOBJ5L      equ	436	;# 
  9985   0001B5                     C1FLTOBJ5H      equ	437	;# 
  9986   0001B6                     C1FLTOBJ5U      equ	438	;# 
  9987   0001B7                     C1FLTOBJ5T      equ	439	;# 
  9988   0001B8                     C1MASK5         equ	440	;# 
  9989   0001B8                     C1MASK5L        equ	440	;# 
  9990   0001B9                     C1MASK5H        equ	441	;# 
  9991   0001BA                     C1MASK5U        equ	442	;# 
  9992   0001BB                     C1MASK5T        equ	443	;# 
  9993   0001BC                     C1FLTOBJ6       equ	444	;# 
  9994   0001BC                     C1FLTOBJ6L      equ	444	;# 
  9995   0001BD                     C1FLTOBJ6H      equ	445	;# 
  9996   0001BE                     C1FLTOBJ6U      equ	446	;# 
  9997   0001BF                     C1FLTOBJ6T      equ	447	;# 
  9998   0001C0                     C1MASK6         equ	448	;# 
  9999   0001C0                     C1MASK6L        equ	448	;# 
 10000   0001C1                     C1MASK6H        equ	449	;# 
 10001   0001C2                     C1MASK6U        equ	450	;# 
 10002   0001C3                     C1MASK6T        equ	451	;# 
 10003   0001C4                     C1FLTOBJ7       equ	452	;# 
 10004   0001C4                     C1FLTOBJ7L      equ	452	;# 
 10005   0001C5                     C1FLTOBJ7H      equ	453	;# 
 10006   0001C6                     C1FLTOBJ7U      equ	454	;# 
 10007   0001C7                     C1FLTOBJ7T      equ	455	;# 
 10008   0001C8                     C1MASK7         equ	456	;# 
 10009   0001C8                     C1MASK7L        equ	456	;# 
 10010   0001C9                     C1MASK7H        equ	457	;# 
 10011   0001CA                     C1MASK7U        equ	458	;# 
 10012   0001CB                     C1MASK7T        equ	459	;# 
 10013   0001CC                     C1FLTOBJ8       equ	460	;# 
 10014   0001CC                     C1FLTOBJ8L      equ	460	;# 
 10015   0001CD                     C1FLTOBJ8H      equ	461	;# 
 10016   0001CE                     C1FLTOBJ8U      equ	462	;# 
 10017   0001CF                     C1FLTOBJ8T      equ	463	;# 
 10018   0001D0                     C1MASK8         equ	464	;# 
 10019   0001D0                     C1MASK8L        equ	464	;# 
 10020   0001D1                     C1MASK8H        equ	465	;# 
 10021   0001D2                     C1MASK8U        equ	466	;# 
 10022   0001D3                     C1MASK8T        equ	467	;# 
 10023   0001D4                     C1FLTOBJ9       equ	468	;# 
 10024   0001D4                     C1FLTOBJ9L      equ	468	;# 
 10025   0001D5                     C1FLTOBJ9H      equ	469	;# 
 10026   0001D6                     C1FLTOBJ9U      equ	470	;# 
 10027   0001D7                     C1FLTOBJ9T      equ	471	;# 
 10028   0001D8                     C1MASK9         equ	472	;# 
 10029   0001D8                     C1MASK9L        equ	472	;# 
 10030   0001D9                     C1MASK9H        equ	473	;# 
 10031   0001DA                     C1MASK9U        equ	474	;# 
 10032   0001DB                     C1MASK9T        equ	475	;# 
 10033   0001DC                     C1FLTOBJ10      equ	476	;# 
 10034   0001DC                     C1FLTOBJ10L     equ	476	;# 
 10035   0001DD                     C1FLTOBJ10H     equ	477	;# 
 10036   0001DE                     C1FLTOBJ10U     equ	478	;# 
 10037   0001DF                     C1FLTOBJ10T     equ	479	;# 
 10038   0001E0                     C1MASK10        equ	480	;# 
 10039   0001E0                     C1MASK10L       equ	480	;# 
 10040   0001E1                     C1MASK10H       equ	481	;# 
 10041   0001E2                     C1MASK10U       equ	482	;# 
 10042   0001E3                     C1MASK10T       equ	483	;# 
 10043   0001E4                     C1FLTOBJ11      equ	484	;# 
 10044   0001E4                     C1FLTOBJ11L     equ	484	;# 
 10045   0001E5                     C1FLTOBJ11H     equ	485	;# 
 10046   0001E6                     C1FLTOBJ11U     equ	486	;# 
 10047   0001E7                     C1FLTOBJ11T     equ	487	;# 
 10048   0001E8                     C1MASK11        equ	488	;# 
 10049   0001E8                     C1MASK11L       equ	488	;# 
 10050   0001E9                     C1MASK11H       equ	489	;# 
 10051   0001EA                     C1MASK11U       equ	490	;# 
 10052   0001EB                     C1MASK11T       equ	491	;# 
 10053   000200                     PPSLOCK         equ	512	;# 
 10054   000201                     RA0PPS          equ	513	;# 
 10055   000202                     RA1PPS          equ	514	;# 
 10056   000203                     RA2PPS          equ	515	;# 
 10057   000204                     RA3PPS          equ	516	;# 
 10058   000205                     RA4PPS          equ	517	;# 
 10059   000206                     RA5PPS          equ	518	;# 
 10060   000207                     RA6PPS          equ	519	;# 
 10061   000208                     RA7PPS          equ	520	;# 
 10062   000209                     RB0PPS          equ	521	;# 
 10063   00020A                     RB1PPS          equ	522	;# 
 10064   00020B                     RB2PPS          equ	523	;# 
 10065   00020C                     RB3PPS          equ	524	;# 
 10066   00020D                     RB4PPS          equ	525	;# 
 10067   00020E                     RB5PPS          equ	526	;# 
 10068   00020F                     RB6PPS          equ	527	;# 
 10069   000210                     RB7PPS          equ	528	;# 
 10070   000211                     RC0PPS          equ	529	;# 
 10071   000212                     RC1PPS          equ	530	;# 
 10072   000213                     RC2PPS          equ	531	;# 
 10073   000214                     RC3PPS          equ	532	;# 
 10074   000215                     RC4PPS          equ	533	;# 
 10075   000216                     RC5PPS          equ	534	;# 
 10076   000217                     RC6PPS          equ	535	;# 
 10077   000218                     RC7PPS          equ	536	;# 
 10078   00023D                     CANRXPPS        equ	573	;# 
 10079   00023E                     INT0PPS         equ	574	;# 
 10080   00023F                     INT1PPS         equ	575	;# 
 10081   000240                     INT2PPS         equ	576	;# 
 10082   000241                     T0CKIPPS        equ	577	;# 
 10083   000242                     T1CKIPPS        equ	578	;# 
 10084   000243                     T1GPPS          equ	579	;# 
 10085   000244                     T3CKIPPS        equ	580	;# 
 10086   000245                     T3GPPS          equ	581	;# 
 10087   000246                     T5CKIPPS        equ	582	;# 
 10088   000247                     T5GPPS          equ	583	;# 
 10089   000248                     T2INPPS         equ	584	;# 
 10090   000249                     T4INPPS         equ	585	;# 
 10091   00024A                     T6INPPS         equ	586	;# 
 10092   00024B                     TUIN0PPS        equ	587	;# 
 10093   00024C                     TUIN1PPS        equ	588	;# 
 10094   00024F                     CCP1PPS         equ	591	;# 
 10095   000250                     CCP2PPS         equ	592	;# 
 10096   000251                     CCP3PPS         equ	593	;# 
 10097   000253                     PWM1ERSPPS      equ	595	;# 
 10098   000254                     PWM2ERSPPS      equ	596	;# 
 10099   000255                     PWM3ERSPPS      equ	597	;# 
 10100   000256                     PWM4ERSPPS      equ	598	;# 
 10101   000257                     PWMIN0PPS       equ	599	;# 
 10102   000258                     PWMIN1PPS       equ	600	;# 
 10103   000259                     SMT1WINPPS      equ	601	;# 
 10104   00025A                     SMT1SIGPPS      equ	602	;# 
 10105   00025B                     CWG1PPS         equ	603	;# 
 10106   00025B                     CWG1INPPS       equ	603	;# 
 10107   00025C                     CWG2PPS         equ	604	;# 
 10108   00025C                     CWG2INPPS       equ	604	;# 
 10109   00025D                     CWG3PPS         equ	605	;# 
 10110   00025D                     CWG3INPPS       equ	605	;# 
 10111   00025E                     MD1CARLPPS      equ	606	;# 
 10112   00025E                     MDCARLPPS       equ	606	;# 
 10113   00025F                     MD1CARHPPS      equ	607	;# 
 10114   00025F                     MDCARHPPS       equ	607	;# 
 10115   000260                     MD1SRCPPS       equ	608	;# 
 10116   000260                     MDSRCPPS        equ	608	;# 
 10117   000261                     CLCIN0PPS       equ	609	;# 
 10118   000262                     CLCIN1PPS       equ	610	;# 
 10119   000263                     CLCIN2PPS       equ	611	;# 
 10120   000264                     CLCIN3PPS       equ	612	;# 
 10121   000265                     CLCIN4PPS       equ	613	;# 
 10122   000266                     CLCIN5PPS       equ	614	;# 
 10123   000267                     CLCIN6PPS       equ	615	;# 
 10124   000268                     CLCIN7PPS       equ	616	;# 
 10125   000269                     ADACTPPS        equ	617	;# 
 10126   00026A                     SPI1SCKPPS      equ	618	;# 
 10127   00026B                     SPI1SDIPPS      equ	619	;# 
 10128   00026C                     SPI1SSPPS       equ	620	;# 
 10129   00026D                     SPI2SCKPPS      equ	621	;# 
 10130   00026E                     SPI2SDIPPS      equ	622	;# 
 10131   00026F                     SPI2SSPPS       equ	623	;# 
 10132   000270                     I2C1SDAPPS      equ	624	;# 
 10133   000271                     I2C1SCLPPS      equ	625	;# 
 10134   000272                     U1RXPPS         equ	626	;# 
 10135   000273                     U1CTSPPS        equ	627	;# 
 10136   000274                     U2RXPPS         equ	628	;# 
 10137   000275                     U2CTSPPS        equ	629	;# 
 10138   000276                     U3RXPPS         equ	630	;# 
 10139   000277                     U3CTSPPS        equ	631	;# 
 10140   000278                     U4RXPPS         equ	632	;# 
 10141   000279                     U4CTSPPS        equ	633	;# 
 10142   00027A                     U5RXPPS         equ	634	;# 
 10143   00027B                     U5CTSPPS        equ	635	;# 
 10144   000286                     RC4I2C          equ	646	;# 
 10145   000287                     RC3I2C          equ	647	;# 
 10146   000288                     RB2I2C          equ	648	;# 
 10147   000289                     RB1I2C          equ	649	;# 
 10148   00028A                     I2C1RXB         equ	650	;# 
 10149   00028B                     I2C1TXB         equ	651	;# 
 10150   00028C                     I2C1CNTL        equ	652	;# 
 10151   00028D                     I2C1CNTH        equ	653	;# 
 10152   00028E                     I2C1ADB0        equ	654	;# 
 10153   00028F                     I2C1ADB1        equ	655	;# 
 10154   000290                     I2C1ADR0        equ	656	;# 
 10155   000291                     I2C1ADR1        equ	657	;# 
 10156   000292                     I2C1ADR2        equ	658	;# 
 10157   000293                     I2C1ADR3        equ	659	;# 
 10158   000294                     I2C1CON0        equ	660	;# 
 10159   000295                     I2C1CON1        equ	661	;# 
 10160   000296                     I2C1CON2        equ	662	;# 
 10161   000297                     I2C1ERR         equ	663	;# 
 10162   000298                     I2C1STAT0       equ	664	;# 
 10163   000299                     I2C1STAT1       equ	665	;# 
 10164   00029A                     I2C1PIR         equ	666	;# 
 10165   00029B                     I2C1PIE         equ	667	;# 
 10166   00029C                     I2C1BTO         equ	668	;# 
 10167   00029D                     I2C1BAUD        equ	669	;# 
 10168   00029E                     I2C1CLK         equ	670	;# 
 10169   00029F                     I2C1BTOC        equ	671	;# 
 10170   0002A1                     U1RXB           equ	673	;# 
 10171   0002A1                     U1RXBL          equ	673	;# 
 10172   0002A2                     U1RXCHK         equ	674	;# 
 10173   0002A3                     U1TXB           equ	675	;# 
 10174   0002A3                     U1TXBL          equ	675	;# 
 10175   0002A4                     U1TXCHK         equ	676	;# 
 10176   0002A5                     U1P1            equ	677	;# 
 10177   0002A5                     U1P1L           equ	677	;# 
 10178   0002A6                     U1P1H           equ	678	;# 
 10179   0002A7                     U1P2            equ	679	;# 
 10180   0002A7                     U1P2L           equ	679	;# 
 10181   0002A8                     U1P2H           equ	680	;# 
 10182   0002A9                     U1P3            equ	681	;# 
 10183   0002A9                     U1P3L           equ	681	;# 
 10184   0002AA                     U1P3H           equ	682	;# 
 10185   0002AB                     U1CON0          equ	683	;# 
 10186   0002AC                     U1CON1          equ	684	;# 
 10187   0002AD                     U1CON2          equ	685	;# 
 10188   0002AE                     U1BRG           equ	686	;# 
 10189   0002AE                     U1BRGL          equ	686	;# 
 10190   0002AF                     U1BRGH          equ	687	;# 
 10191   0002B0                     U1FIFO          equ	688	;# 
 10192   0002B1                     U1UIR           equ	689	;# 
 10193   0002B2                     U1ERRIR         equ	690	;# 
 10194   0002B3                     U1ERRIE         equ	691	;# 
 10195   0002B4                     U2RXB           equ	692	;# 
 10196   0002B4                     U2RXBL          equ	692	;# 
 10197   0002B5                     U2RXCHK         equ	693	;# 
 10198   0002B6                     U2TXB           equ	694	;# 
 10199   0002B6                     U2TXBL          equ	694	;# 
 10200   0002B7                     U2TXCHK         equ	695	;# 
 10201   0002B8                     U2P1            equ	696	;# 
 10202   0002B8                     U2P1L           equ	696	;# 
 10203   0002B9                     U2P1H           equ	697	;# 
 10204   0002BA                     U2P2            equ	698	;# 
 10205   0002BA                     U2P2L           equ	698	;# 
 10206   0002BB                     U2P2H           equ	699	;# 
 10207   0002BC                     U2P3            equ	700	;# 
 10208   0002BC                     U2P3L           equ	700	;# 
 10209   0002BD                     U2P3H           equ	701	;# 
 10210   0002BE                     U2CON0          equ	702	;# 
 10211   0002BF                     U2CON1          equ	703	;# 
 10212   0002C0                     U2CON2          equ	704	;# 
 10213   0002C1                     U2BRG           equ	705	;# 
 10214   0002C1                     U2BRGL          equ	705	;# 
 10215   0002C2                     U2BRGH          equ	706	;# 
 10216   0002C3                     U2FIFO          equ	707	;# 
 10217   0002C4                     U2UIR           equ	708	;# 
 10218   0002C5                     U2ERRIR         equ	709	;# 
 10219   0002C6                     U2ERRIE         equ	710	;# 
 10220   0002C7                     U3RXB           equ	711	;# 
 10221   0002C7                     U3RXBL          equ	711	;# 
 10222   0002C9                     U3TXB           equ	713	;# 
 10223   0002C9                     U3TXBL          equ	713	;# 
 10224   0002CB                     U3P1            equ	715	;# 
 10225   0002CB                     U3P1L           equ	715	;# 
 10226   0002CD                     U3P2            equ	717	;# 
 10227   0002CD                     U3P2L           equ	717	;# 
 10228   0002CF                     U3P3            equ	719	;# 
 10229   0002CF                     U3P3L           equ	719	;# 
 10230   0002D1                     U3CON0          equ	721	;# 
 10231   0002D2                     U3CON1          equ	722	;# 
 10232   0002D3                     U3CON2          equ	723	;# 
 10233   0002D4                     U3BRG           equ	724	;# 
 10234   0002D4                     U3BRGL          equ	724	;# 
 10235   0002D5                     U3BRGH          equ	725	;# 
 10236   0002D6                     U3FIFO          equ	726	;# 
 10237   0002D7                     U3UIR           equ	727	;# 
 10238   0002D8                     U3ERRIR         equ	728	;# 
 10239   0002D9                     U3ERRIE         equ	729	;# 
 10240   0002DA                     U4RXB           equ	730	;# 
 10241   0002DA                     U4RXBL          equ	730	;# 
 10242   0002DC                     U4TXB           equ	732	;# 
 10243   0002DC                     U4TXBL          equ	732	;# 
 10244   0002DE                     U4P1            equ	734	;# 
 10245   0002DE                     U4P1L           equ	734	;# 
 10246   0002E0                     U4P2            equ	736	;# 
 10247   0002E0                     U4P2L           equ	736	;# 
 10248   0002E2                     U4P3            equ	738	;# 
 10249   0002E2                     U4P3L           equ	738	;# 
 10250   0002E4                     U4CON0          equ	740	;# 
 10251   0002E5                     U4CON1          equ	741	;# 
 10252   0002E6                     U4CON2          equ	742	;# 
 10253   0002E7                     U4BRG           equ	743	;# 
 10254   0002E7                     U4BRGL          equ	743	;# 
 10255   0002E8                     U4BRGH          equ	744	;# 
 10256   0002E9                     U4FIFO          equ	745	;# 
 10257   0002EA                     U4UIR           equ	746	;# 
 10258   0002EB                     U4ERRIR         equ	747	;# 
 10259   0002EC                     U4ERRIE         equ	748	;# 
 10260   0002ED                     U5RXB           equ	749	;# 
 10261   0002ED                     U5RXBL          equ	749	;# 
 10262   0002EF                     U5TXB           equ	751	;# 
 10263   0002EF                     U5TXBL          equ	751	;# 
 10264   0002F1                     U5P1            equ	753	;# 
 10265   0002F1                     U5P1L           equ	753	;# 
 10266   0002F3                     U5P2            equ	755	;# 
 10267   0002F3                     U5P2L           equ	755	;# 
 10268   0002F5                     U5P3            equ	757	;# 
 10269   0002F5                     U5P3L           equ	757	;# 
 10270   0002F7                     U5CON0          equ	759	;# 
 10271   0002F8                     U5CON1          equ	760	;# 
 10272   0002F9                     U5CON2          equ	761	;# 
 10273   0002FA                     U5BRG           equ	762	;# 
 10274   0002FA                     U5BRGL          equ	762	;# 
 10275   0002FB                     U5BRGH          equ	763	;# 
 10276   0002FC                     U5FIFO          equ	764	;# 
 10277   0002FD                     U5UIR           equ	765	;# 
 10278   0002FE                     U5ERRIR         equ	766	;# 
 10279   0002FF                     U5ERRIE         equ	767	;# 
 10280   000300                     SMT1TMR         equ	768	;# 
 10281   000300                     SMT1TMRL        equ	768	;# 
 10282   000301                     SMT1TMRH        equ	769	;# 
 10283   000302                     SMT1TMRU        equ	770	;# 
 10284   000303                     SMT1CPR         equ	771	;# 
 10285   000303                     SMT1CPRL        equ	771	;# 
 10286   000304                     SMT1CPRH        equ	772	;# 
 10287   000305                     SMT1CPRU        equ	773	;# 
 10288   000306                     SMT1CPW         equ	774	;# 
 10289   000306                     SMT1CPWL        equ	774	;# 
 10290   000307                     SMT1CPWH        equ	775	;# 
 10291   000308                     SMT1CPWU        equ	776	;# 
 10292   000309                     SMT1PR          equ	777	;# 
 10293   000309                     SMT1PRL         equ	777	;# 
 10294   00030A                     SMT1PRH         equ	778	;# 
 10295   00030B                     SMT1PRU         equ	779	;# 
 10296   00030C                     SMT1CON0        equ	780	;# 
 10297   00030D                     SMT1CON1        equ	781	;# 
 10298   00030E                     SMT1STAT        equ	782	;# 
 10299   00030F                     SMT1CLK         equ	783	;# 
 10300   000310                     SMT1SIG         equ	784	;# 
 10301   000311                     SMT1WIN         equ	785	;# 
 10302   000318                     TMR0L           equ	792	;# 
 10303   000318                     TMR0            equ	792	;# 
 10304   000319                     TMR0H           equ	793	;# 
 10305   000319                     PR0             equ	793	;# 
 10306   00031A                     T0CON0          equ	794	;# 
 10307   00031B                     T0CON1          equ	795	;# 
 10308   00031C                     TMR1            equ	796	;# 
 10309   00031C                     TMR1L           equ	796	;# 
 10310   00031D                     TMR1H           equ	797	;# 
 10311   00031E                     T1CON           equ	798	;# 
 10312   00031E                     TMR1CON         equ	798	;# 
 10313   00031F                     T1GCON          equ	799	;# 
 10314   00031F                     TMR1GCON        equ	799	;# 
 10315   000320                     T1GATE          equ	800	;# 
 10316   000320                     TMR1GATE        equ	800	;# 
 10317   000321                     T1CLK           equ	801	;# 
 10318   000321                     TMR1CLK         equ	801	;# 
 10319   000321                     PR1             equ	801	;# 
 10320   000322                     T2TMR           equ	802	;# 
 10321   000322                     TMR2            equ	802	;# 
 10322   000323                     T2PR            equ	803	;# 
 10323   000323                     PR2             equ	803	;# 
 10324   000324                     T2CON           equ	804	;# 
 10325   000325                     T2HLT           equ	805	;# 
 10326   000326                     T2CLKCON        equ	806	;# 
 10327   000326                     T2CLK           equ	806	;# 
 10328   000327                     T2RST           equ	807	;# 
 10329   000328                     TMR3            equ	808	;# 
 10330   000328                     TMR3L           equ	808	;# 
 10331   000329                     TMR3H           equ	809	;# 
 10332   00032A                     T3CON           equ	810	;# 
 10333   00032A                     TMR3CON         equ	810	;# 
 10334   00032B                     T3GCON          equ	811	;# 
 10335   00032B                     TMR3GCON        equ	811	;# 
 10336   00032C                     T3GATE          equ	812	;# 
 10337   00032C                     TMR3GATE        equ	812	;# 
 10338   00032D                     T3CLK           equ	813	;# 
 10339   00032D                     TMR3CLK         equ	813	;# 
 10340   00032D                     PR3             equ	813	;# 
 10341   00032E                     T4TMR           equ	814	;# 
 10342   00032E                     TMR4            equ	814	;# 
 10343   00032F                     T4PR            equ	815	;# 
 10344   00032F                     PR4             equ	815	;# 
 10345   000330                     T4CON           equ	816	;# 
 10346   000331                     T4HLT           equ	817	;# 
 10347   000332                     T4CLKCON        equ	818	;# 
 10348   000332                     T4CLK           equ	818	;# 
 10349   000333                     T4RST           equ	819	;# 
 10350   000334                     TMR5            equ	820	;# 
 10351   000334                     TMR5L           equ	820	;# 
 10352   000335                     TMR5H           equ	821	;# 
 10353   000336                     T5CON           equ	822	;# 
 10354   000336                     TMR5CON         equ	822	;# 
 10355   000337                     T5GCON          equ	823	;# 
 10356   000337                     TMR5GCON        equ	823	;# 
 10357   000338                     T5GATE          equ	824	;# 
 10358   000338                     TMR5GATE        equ	824	;# 
 10359   000339                     T5CLK           equ	825	;# 
 10360   000339                     TMR5CLK         equ	825	;# 
 10361   000339                     PR5             equ	825	;# 
 10362   00033A                     T6TMR           equ	826	;# 
 10363   00033A                     TMR6            equ	826	;# 
 10364   00033B                     T6PR            equ	827	;# 
 10365   00033B                     PR6             equ	827	;# 
 10366   00033C                     T6CON           equ	828	;# 
 10367   00033D                     T6HLT           equ	829	;# 
 10368   00033E                     T6CLKCON        equ	830	;# 
 10369   00033E                     T6CLK           equ	830	;# 
 10370   00033F                     T6RST           equ	831	;# 
 10371   000340                     CCPR1           equ	832	;# 
 10372   000340                     CCPR1L          equ	832	;# 
 10373   000341                     CCPR1H          equ	833	;# 
 10374   000342                     CCP1CON         equ	834	;# 
 10375   000343                     CCP1CAP         equ	835	;# 
 10376   000344                     CCPR2           equ	836	;# 
 10377   000344                     CCPR2L          equ	836	;# 
 10378   000345                     CCPR2H          equ	837	;# 
 10379   000346                     CCP2CON         equ	838	;# 
 10380   000347                     CCP2CAP         equ	839	;# 
 10381   000348                     CCPR3           equ	840	;# 
 10382   000348                     CCPR3L          equ	840	;# 
 10383   000349                     CCPR3H          equ	841	;# 
 10384   00034A                     CCP3CON         equ	842	;# 
 10385   00034B                     CCP3CAP         equ	843	;# 
 10386   00034C                     CCPTMRS0        equ	844	;# 
 10387   00034F                     CRCDATA         equ	847	;# 
 10388   00034F                     CRCDATAL        equ	847	;# 
 10389   000350                     CRCDATAH        equ	848	;# 
 10390   000351                     CRCDATAU        equ	849	;# 
 10391   000352                     CRCDATAT        equ	850	;# 
 10392   000353                     CRCOUT          equ	851	;# 
 10393   000353                     CRCSHFT         equ	851	;# 
 10394   000353                     CRCXOR          equ	851	;# 
 10395   000353                     CRCOUTL         equ	851	;# 
 10396   000353                     CRCSHFTL        equ	851	;# 
 10397   000353                     CRCSHIFTL       equ	851	;# 
 10398   000353                     CRCXORL         equ	851	;# 
 10399   000354                     CRCOUTH         equ	852	;# 
 10400   000354                     CRCSHFTH        equ	852	;# 
 10401   000354                     CRCSHIFTH       equ	852	;# 
 10402   000354                     CRCXORH         equ	852	;# 
 10403   000355                     CRCOUTU         equ	853	;# 
 10404   000355                     CRCSHFTU        equ	853	;# 
 10405   000355                     CRCSHIFTU       equ	853	;# 
 10406   000355                     CRCXORU         equ	853	;# 
 10407   000356                     CRCOUTT         equ	854	;# 
 10408   000356                     CRCSHFTT        equ	854	;# 
 10409   000356                     CRCSHIFTT       equ	854	;# 
 10410   000356                     CRCXORT         equ	854	;# 
 10411   000357                     CRCCON0         equ	855	;# 
 10412   000358                     CRCCON1         equ	856	;# 
 10413   000359                     CRCCON2         equ	857	;# 
 10414   00035A                     SCANLADR        equ	858	;# 
 10415   00035A                     SCANLADRL       equ	858	;# 
 10416   00035B                     SCANLADRH       equ	859	;# 
 10417   00035C                     SCANLADRU       equ	860	;# 
 10418   00035D                     SCANHADR        equ	861	;# 
 10419   00035D                     SCANHADRL       equ	861	;# 
 10420   00035E                     SCANHADRH       equ	862	;# 
 10421   00035F                     SCANHADRU       equ	863	;# 
 10422   000360                     SCANCON0        equ	864	;# 
 10423   000361                     SCANTRIG        equ	865	;# 
 10424   000362                     IPR0            equ	866	;# 
 10425   000363                     IPR1            equ	867	;# 
 10426   000364                     IPR2            equ	868	;# 
 10427   000365                     IPR3            equ	869	;# 
 10428   000366                     IPR4            equ	870	;# 
 10429   000367                     IPR5            equ	871	;# 
 10430   000368                     IPR6            equ	872	;# 
 10431   000369                     IPR7            equ	873	;# 
 10432   00036A                     IPR8            equ	874	;# 
 10433   00036B                     IPR9            equ	875	;# 
 10434   00036C                     IPR10           equ	876	;# 
 10435   00036D                     IPR11           equ	877	;# 
 10436   00036E                     IPR12           equ	878	;# 
 10437   00036F                     IPR13           equ	879	;# 
 10438   000370                     IPR14           equ	880	;# 
 10439   000371                     IPR15           equ	881	;# 
 10440   000373                     STATUS_CSHAD    equ	883	;# 
 10441   000374                     WREG_CSHAD      equ	884	;# 
 10442   000375                     BSR_CSHAD       equ	885	;# 
 10443   000376                     SHADCON         equ	886	;# 
 10444   000377                     STATUS_SHAD     equ	887	;# 
 10445   000378                     WREG_SHAD       equ	888	;# 
 10446   000379                     BSR_SHAD        equ	889	;# 
 10447   00037A                     PCLATH_SHAD     equ	890	;# 
 10448   00037B                     PCLATU_SHAD     equ	891	;# 
 10449   00037C                     FSR0SH          equ	892	;# 
 10450   00037C                     FSR0L_SHAD      equ	892	;# 
 10451   00037D                     FSR0H_SHAD      equ	893	;# 
 10452   00037E                     FSR1SH          equ	894	;# 
 10453   00037E                     FSR1L_SHAD      equ	894	;# 
 10454   00037F                     FSR1H_SHAD      equ	895	;# 
 10455   000380                     FSR2SH          equ	896	;# 
 10456   000380                     FSR2L_SHAD      equ	896	;# 
 10457   000381                     FSR2H_SHAD      equ	897	;# 
 10458   000382                     PRODSH          equ	898	;# 
 10459   000382                     PRODL_SHAD      equ	898	;# 
 10460   000383                     PRODH_SHAD      equ	899	;# 
 10461   000387                     TU16ACON0       equ	903	;# 
 10462   000388                     TU16ACON1       equ	904	;# 
 10463   000389                     TU16AHLT        equ	905	;# 
 10464   00038A                     TU16APS         equ	906	;# 
 10465   00038B                     TU16ATMR        equ	907	;# 
 10466   00038B                     TU16ACR         equ	907	;# 
 10467   00038B                     TU16ATMRL       equ	907	;# 
 10468   00038B                     TU16ACRL        equ	907	;# 
 10469   00038C                     TU16ATMRH       equ	908	;# 
 10470   00038C                     TU16ACRH        equ	908	;# 
 10471   00038D                     TU16APR         equ	909	;# 
 10472   00038D                     TU16APRL        equ	909	;# 
 10473   00038E                     TU16APRH        equ	910	;# 
 10474   00038F                     TU16ACLK        equ	911	;# 
 10475   000390                     TU16AERS        equ	912	;# 
 10476   000393                     TU16BCON0       equ	915	;# 
 10477   000394                     TU16BCON1       equ	916	;# 
 10478   000395                     TU16BHLT        equ	917	;# 
 10479   000396                     TU16BPS         equ	918	;# 
 10480   000397                     TU16BTMR        equ	919	;# 
 10481   000397                     TU16BCR         equ	919	;# 
 10482   000397                     TU16BTMRL       equ	919	;# 
 10483   000397                     TU16BCRL        equ	919	;# 
 10484   000398                     TU16BTMRH       equ	920	;# 
 10485   000398                     TU16BCRH        equ	920	;# 
 10486   000399                     TU16BPR         equ	921	;# 
 10487   000399                     TU16BPRL        equ	921	;# 
 10488   00039A                     TU16BPRH        equ	922	;# 
 10489   00039B                     TU16BCLK        equ	923	;# 
 10490   00039C                     TU16BERS        equ	924	;# 
 10491   0003BB                     TUCHAIN         equ	955	;# 
 10492   0003BC                     CWG1CLK         equ	956	;# 
 10493   0003BC                     CWG1CLKCON      equ	956	;# 
 10494   0003BD                     CWG1ISM         equ	957	;# 
 10495   0003BE                     CWG1DBR         equ	958	;# 
 10496   0003BF                     CWG1DBF         equ	959	;# 
 10497   0003C0                     CWG1CON0        equ	960	;# 
 10498   0003C1                     CWG1CON1        equ	961	;# 
 10499   0003C2                     CWG1AS0         equ	962	;# 
 10500   0003C3                     CWG1AS1         equ	963	;# 
 10501   0003C4                     CWG1STR         equ	964	;# 
 10502   0003C5                     CWG2CLK         equ	965	;# 
 10503   0003C5                     CWG2CLKCON      equ	965	;# 
 10504   0003C6                     CWG2ISM         equ	966	;# 
 10505   0003C7                     CWG2DBR         equ	967	;# 
 10506   0003C8                     CWG2DBF         equ	968	;# 
 10507   0003C9                     CWG2CON0        equ	969	;# 
 10508   0003CA                     CWG2CON1        equ	970	;# 
 10509   0003CB                     CWG2AS0         equ	971	;# 
 10510   0003CC                     CWG2AS1         equ	972	;# 
 10511   0003CD                     CWG2STR         equ	973	;# 
 10512   0003CE                     CWG3CLK         equ	974	;# 
 10513   0003CE                     CWG3CLKCON      equ	974	;# 
 10514   0003CF                     CWG3ISM         equ	975	;# 
 10515   0003D0                     CWG3DBR         equ	976	;# 
 10516   0003D1                     CWG3DBF         equ	977	;# 
 10517   0003D2                     CWG3CON0        equ	978	;# 
 10518   0003D3                     CWG3CON1        equ	979	;# 
 10519   0003D4                     CWG3AS0         equ	980	;# 
 10520   0003D5                     CWG3AS1         equ	981	;# 
 10521   0003D6                     CWG3STR         equ	982	;# 
 10522   0003D7                     FVRCON          equ	983	;# 
 10523   0003D8                     ADCPCON         equ	984	;# 
 10524   0003D8                     ADCP            equ	984	;# 
 10525   0003D9                     ADLTH           equ	985	;# 
 10526   0003D9                     ADLTHL          equ	985	;# 
 10527   0003DA                     ADLTHH          equ	986	;# 
 10528   0003DB                     ADUTH           equ	987	;# 
 10529   0003DB                     ADUTHL          equ	987	;# 
 10530   0003DC                     ADUTHH          equ	988	;# 
 10531   0003DD                     ADERR           equ	989	;# 
 10532   0003DD                     ADERRL          equ	989	;# 
 10533   0003DE                     ADERRH          equ	990	;# 
 10534   0003DF                     ADSTPT          equ	991	;# 
 10535   0003DF                     ADSTPTL         equ	991	;# 
 10536   0003E0                     ADSTPTH         equ	992	;# 
 10537   0003E1                     ADFLTR          equ	993	;# 
 10538   0003E1                     ADFLTRL         equ	993	;# 
 10539   0003E2                     ADFLTRH         equ	994	;# 
 10540   0003E3                     ADACC           equ	995	;# 
 10541   0003E3                     ADACCL          equ	995	;# 
 10542   0003E4                     ADACCH          equ	996	;# 
 10543   0003E5                     ADACCU          equ	997	;# 
 10544   0003E6                     ADCNT           equ	998	;# 
 10545   0003E7                     ADRPT           equ	999	;# 
 10546   0003E8                     ADPREV          equ	1000	;# 
 10547   0003E8                     ADPREVL         equ	1000	;# 
 10548   0003E9                     ADPREVH         equ	1001	;# 
 10549   0003EA                     ADRES           equ	1002	;# 
 10550   0003EA                     ADRESL          equ	1002	;# 
 10551   0003EB                     ADRESH          equ	1003	;# 
 10552   0003EC                     ADPCH           equ	1004	;# 
 10553   0003EE                     ADACQ           equ	1006	;# 
 10554   0003EE                     ADACQL          equ	1006	;# 
 10555   0003EF                     ADACQH          equ	1007	;# 
 10556   0003F0                     ADCAP           equ	1008	;# 
 10557   0003F1                     ADPRE           equ	1009	;# 
 10558   0003F1                     ADPREL          equ	1009	;# 
 10559   0003F2                     ADPREH          equ	1010	;# 
 10560   0003F3                     ADCON0          equ	1011	;# 
 10561   0003F4                     ADCON1          equ	1012	;# 
 10562   0003F5                     ADCON2          equ	1013	;# 
 10563   0003F6                     ADCON3          equ	1014	;# 
 10564   0003F7                     ADSTAT          equ	1015	;# 
 10565   0003F8                     ADREF           equ	1016	;# 
 10566   0003F9                     ADACT           equ	1017	;# 
 10567   0003FA                     ADCLK           equ	1018	;# 
 10568   0003FB                     ADCTX           equ	1019	;# 
 10569   0003FC                     ADCSEL1         equ	1020	;# 
 10570   0003FD                     ADCSEL2         equ	1021	;# 
 10571   0003FE                     ADCSEL3         equ	1022	;# 
 10572   0003FF                     ADCSEL4         equ	1023	;# 
 10573   000400                     ANSELA          equ	1024	;# 
 10574   000401                     WPUA            equ	1025	;# 
 10575   000402                     ODCONA          equ	1026	;# 
 10576   000403                     SLRCONA         equ	1027	;# 
 10577   000404                     INLVLA          equ	1028	;# 
 10578   000405                     IOCAP           equ	1029	;# 
 10579   000406                     IOCAN           equ	1030	;# 
 10580   000407                     IOCAF           equ	1031	;# 
 10581   000408                     ANSELB          equ	1032	;# 
 10582   000409                     WPUB            equ	1033	;# 
 10583   00040A                     ODCONB          equ	1034	;# 
 10584   00040B                     SLRCONB         equ	1035	;# 
 10585   00040C                     INLVLB          equ	1036	;# 
 10586   00040D                     IOCBP           equ	1037	;# 
 10587   00040E                     IOCBN           equ	1038	;# 
 10588   00040F                     IOCBF           equ	1039	;# 
 10589   000410                     ANSELC          equ	1040	;# 
 10590   000411                     WPUC            equ	1041	;# 
 10591   000412                     ODCONC          equ	1042	;# 
 10592   000413                     SLRCONC         equ	1043	;# 
 10593   000414                     INLVLC          equ	1044	;# 
 10594   000415                     IOCCP           equ	1045	;# 
 10595   000416                     IOCCN           equ	1046	;# 
 10596   000417                     IOCCF           equ	1047	;# 
 10597   000421                     WPUE            equ	1057	;# 
 10598   000424                     INLVLE          equ	1060	;# 
 10599   000425                     IOCEP           equ	1061	;# 
 10600   000426                     IOCEN           equ	1062	;# 
 10601   000427                     IOCEF           equ	1063	;# 
 10602   000440                     NCO1ACC         equ	1088	;# 
 10603   000440                     NCO1ACCL        equ	1088	;# 
 10604   000441                     NCO1ACCH        equ	1089	;# 
 10605   000442                     NCO1ACCU        equ	1090	;# 
 10606   000443                     NCO1INC         equ	1091	;# 
 10607   000443                     NCO1INCL        equ	1091	;# 
 10608   000444                     NCO1INCH        equ	1092	;# 
 10609   000445                     NCO1INCU        equ	1093	;# 
 10610   000446                     NCO1CON         equ	1094	;# 
 10611   000447                     NCO1CLK         equ	1095	;# 
 10612   000448                     NCO2ACC         equ	1096	;# 
 10613   000448                     NCO2ACCL        equ	1096	;# 
 10614   000449                     NCO2ACCH        equ	1097	;# 
 10615   00044A                     NCO2ACCU        equ	1098	;# 
 10616   00044B                     NCO2INC         equ	1099	;# 
 10617   00044B                     NCO2INCL        equ	1099	;# 
 10618   00044C                     NCO2INCH        equ	1100	;# 
 10619   00044D                     NCO2INCU        equ	1101	;# 
 10620   00044E                     NCO2CON         equ	1102	;# 
 10621   00044F                     NCO2CLK         equ	1103	;# 
 10622   000450                     NCO3ACC         equ	1104	;# 
 10623   000450                     NCO3ACCL        equ	1104	;# 
 10624   000451                     NCO3ACCH        equ	1105	;# 
 10625   000452                     NCO3ACCU        equ	1106	;# 
 10626   000453                     NCO3INC         equ	1107	;# 
 10627   000453                     NCO3INCL        equ	1107	;# 
 10628   000454                     NCO3INCH        equ	1108	;# 
 10629   000455                     NCO3INCU        equ	1109	;# 
 10630   000456                     NCO3CON         equ	1110	;# 
 10631   000457                     NCO3CLK         equ	1111	;# 
 10632   000458                     FSCMCON         equ	1112	;# 
 10633   000459                     IVTLOCK         equ	1113	;# 
 10634   00045A                     IVTAD           equ	1114	;# 
 10635   00045A                     IVTADL          equ	1114	;# 
 10636   00045B                     IVTADH          equ	1115	;# 
 10637   00045C                     IVTADU          equ	1116	;# 
 10638   00045D                     IVTBASE         equ	1117	;# 
 10639   00045D                     IVTBASEL        equ	1117	;# 
 10640   00045E                     IVTBASEH        equ	1118	;# 
 10641   00045F                     IVTBASEU        equ	1119	;# 
 10642   000460                     PWM1ERS         equ	1120	;# 
 10643   000461                     PWM1CLK         equ	1121	;# 
 10644   000462                     PWM1LDS         equ	1122	;# 
 10645   000463                     PWM1PR          equ	1123	;# 
 10646   000463                     PWM1PRL         equ	1123	;# 
 10647   000464                     PWM1PRH         equ	1124	;# 
 10648   000465                     PWM1CPRE        equ	1125	;# 
 10649   000466                     PWM1PIPOS       equ	1126	;# 
 10650   000467                     PWM1GIR         equ	1127	;# 
 10651   000468                     PWM1GIE         equ	1128	;# 
 10652   000469                     PWM1CON         equ	1129	;# 
 10653   00046A                     PWM1S1CFG       equ	1130	;# 
 10654   00046B                     PWM1S1P1        equ	1131	;# 
 10655   00046B                     PWM1S1P1L       equ	1131	;# 
 10656   00046C                     PWM1S1P1H       equ	1132	;# 
 10657   00046D                     PWM1S1P2        equ	1133	;# 
 10658   00046D                     PWM1S1P2L       equ	1133	;# 
 10659   00046E                     PWM1S1P2H       equ	1134	;# 
 10660   00046F                     PWM2ERS         equ	1135	;# 
 10661   000470                     PWM2CLK         equ	1136	;# 
 10662   000471                     PWM2LDS         equ	1137	;# 
 10663   000472                     PWM2PR          equ	1138	;# 
 10664   000472                     PWM2PRL         equ	1138	;# 
 10665   000473                     PWM2PRH         equ	1139	;# 
 10666   000474                     PWM2CPRE        equ	1140	;# 
 10667   000475                     PWM2PIPOS       equ	1141	;# 
 10668   000476                     PWM2GIR         equ	1142	;# 
 10669   000477                     PWM2GIE         equ	1143	;# 
 10670   000478                     PWM2CON         equ	1144	;# 
 10671   000479                     PWM2S1CFG       equ	1145	;# 
 10672   00047A                     PWM2S1P1        equ	1146	;# 
 10673   00047A                     PWM2S1P1L       equ	1146	;# 
 10674   00047B                     PWM2S1P1H       equ	1147	;# 
 10675   00047C                     PWM2S1P2        equ	1148	;# 
 10676   00047C                     PWM2S1P2L       equ	1148	;# 
 10677   00047D                     PWM2S1P2H       equ	1149	;# 
 10678   00047E                     PWM3ERS         equ	1150	;# 
 10679   00047F                     PWM3CLK         equ	1151	;# 
 10680   000480                     PWM3LDS         equ	1152	;# 
 10681   000481                     PWM3PR          equ	1153	;# 
 10682   000481                     PWM3PRL         equ	1153	;# 
 10683   000482                     PWM3PRH         equ	1154	;# 
 10684   000483                     PWM3CPRE        equ	1155	;# 
 10685   000484                     PWM3PIPOS       equ	1156	;# 
 10686   000485                     PWM3GIR         equ	1157	;# 
 10687   000486                     PWM3GIE         equ	1158	;# 
 10688   000487                     PWM3CON         equ	1159	;# 
 10689   000488                     PWM3S1CFG       equ	1160	;# 
 10690   000489                     PWM3S1P1        equ	1161	;# 
 10691   000489                     PWM3S1P1L       equ	1161	;# 
 10692   00048A                     PWM3S1P1H       equ	1162	;# 
 10693   00048B                     PWM3S1P2        equ	1163	;# 
 10694   00048B                     PWM3S1P2L       equ	1163	;# 
 10695   00048C                     PWM3S1P2H       equ	1164	;# 
 10696   00048D                     PWM4ERS         equ	1165	;# 
 10697   00048E                     PWM4CLK         equ	1166	;# 
 10698   00048F                     PWM4LDS         equ	1167	;# 
 10699   000490                     PWM4PR          equ	1168	;# 
 10700   000490                     PWM4PRL         equ	1168	;# 
 10701   000491                     PWM4PRH         equ	1169	;# 
 10702   000492                     PWM4CPRE        equ	1170	;# 
 10703   000493                     PWM4PIPOS       equ	1171	;# 
 10704   000494                     PWM4GIR         equ	1172	;# 
 10705   000495                     PWM4GIE         equ	1173	;# 
 10706   000496                     PWM4CON         equ	1174	;# 
 10707   000497                     PWM4S1CFG       equ	1175	;# 
 10708   000498                     PWM4S1P1        equ	1176	;# 
 10709   000498                     PWM4S1P1L       equ	1176	;# 
 10710   000499                     PWM4S1P1H       equ	1177	;# 
 10711   00049A                     PWM4S1P2        equ	1178	;# 
 10712   00049A                     PWM4S1P2L       equ	1178	;# 
 10713   00049B                     PWM4S1P2H       equ	1179	;# 
 10714   00049C                     PWMLOAD         equ	1180	;# 
 10715   00049D                     PWMEN           equ	1181	;# 
 10716   00049E                     PIE0            equ	1182	;# 
 10717   00049F                     PIE1            equ	1183	;# 
 10718   0004A0                     PIE2            equ	1184	;# 
 10719   0004A1                     PIE3            equ	1185	;# 
 10720   0004A2                     PIE4            equ	1186	;# 
 10721   0004A3                     PIE5            equ	1187	;# 
 10722   0004A4                     PIE6            equ	1188	;# 
 10723   0004A5                     PIE7            equ	1189	;# 
 10724   0004A6                     PIE8            equ	1190	;# 
 10725   0004A7                     PIE9            equ	1191	;# 
 10726   0004A8                     PIE10           equ	1192	;# 
 10727   0004A9                     PIE11           equ	1193	;# 
 10728   0004AA                     PIE12           equ	1194	;# 
 10729   0004AB                     PIE13           equ	1195	;# 
 10730   0004AC                     PIE14           equ	1196	;# 
 10731   0004AD                     PIE15           equ	1197	;# 
 10732   0004AE                     PIR0            equ	1198	;# 
 10733   0004AF                     PIR1            equ	1199	;# 
 10734   0004B0                     PIR2            equ	1200	;# 
 10735   0004B1                     PIR3            equ	1201	;# 
 10736   0004B2                     PIR4            equ	1202	;# 
 10737   0004B3                     PIR5            equ	1203	;# 
 10738   0004B4                     PIR6            equ	1204	;# 
 10739   0004B5                     PIR7            equ	1205	;# 
 10740   0004B6                     PIR8            equ	1206	;# 
 10741   0004B7                     PIR9            equ	1207	;# 
 10742   0004B8                     PIR10           equ	1208	;# 
 10743   0004B9                     PIR11           equ	1209	;# 
 10744   0004BA                     PIR12           equ	1210	;# 
 10745   0004BB                     PIR13           equ	1211	;# 
 10746   0004BC                     PIR14           equ	1212	;# 
 10747   0004BD                     PIR15           equ	1213	;# 
 10748   0004BE                     LATA            equ	1214	;# 
 10749   0004BF                     LATB            equ	1215	;# 
 10750   0004C0                     LATC            equ	1216	;# 
 10751   0004C6                     TRISA           equ	1222	;# 
 10752   0004C7                     TRISB           equ	1223	;# 
 10753   0004C8                     TRISC           equ	1224	;# 
 10754   0004CA                     TRISE           equ	1226	;# 
 10755   0004CE                     PORTA           equ	1230	;# 
 10756   0004CF                     PORTB           equ	1231	;# 
 10757   0004D0                     PORTC           equ	1232	;# 
 10758   0004D2                     PORTE           equ	1234	;# 
 10759   0004D6                     INTCON0         equ	1238	;# 
 10760   0004D7                     INTCON1         equ	1239	;# 
 10761   0004D8                     STATUS          equ	1240	;# 
 10762   0004D9                     FSR2            equ	1241	;# 
 10763   0004D9                     FSR2L           equ	1241	;# 
 10764   0004DA                     FSR2H           equ	1242	;# 
 10765   0004DB                     PLUSW2          equ	1243	;# 
 10766   0004DC                     PREINC2         equ	1244	;# 
 10767   0004DD                     POSTDEC2        equ	1245	;# 
 10768   0004DE                     POSTINC2        equ	1246	;# 
 10769   0004DF                     INDF2           equ	1247	;# 
 10770   0004E0                     BSR             equ	1248	;# 
 10771   0004E1                     FSR1            equ	1249	;# 
 10772   0004E1                     FSR1L           equ	1249	;# 
 10773   0004E2                     FSR1H           equ	1250	;# 
 10774   0004E3                     PLUSW1          equ	1251	;# 
 10775   0004E4                     PREINC1         equ	1252	;# 
 10776   0004E5                     POSTDEC1        equ	1253	;# 
 10777   0004E6                     POSTINC1        equ	1254	;# 
 10778   0004E7                     INDF1           equ	1255	;# 
 10779   0004E8                     WREG            equ	1256	;# 
 10780   0004E9                     FSR0            equ	1257	;# 
 10781   0004E9                     FSR0L           equ	1257	;# 
 10782   0004EA                     FSR0H           equ	1258	;# 
 10783   0004EB                     PLUSW0          equ	1259	;# 
 10784   0004EC                     PREINC0         equ	1260	;# 
 10785   0004ED                     POSTDEC0        equ	1261	;# 
 10786   0004EE                     POSTINC0        equ	1262	;# 
 10787   0004EF                     INDF0           equ	1263	;# 
 10788   0004F0                     PCON0           equ	1264	;# 
 10789   0004F1                     PCON1           equ	1265	;# 
 10790   0004F2                     CPUDOZE         equ	1266	;# 
 10791   0004F3                     PROD            equ	1267	;# 
 10792   0004F3                     PRODL           equ	1267	;# 
 10793   0004F4                     PRODH           equ	1268	;# 
 10794   0004F5                     TABLAT          equ	1269	;# 
 10795   0004F6                     TBLPTR          equ	1270	;# 
 10796   0004F6                     TBLPTRL         equ	1270	;# 
 10797   0004F7                     TBLPTRH         equ	1271	;# 
 10798   0004F8                     TBLPTRU         equ	1272	;# 
 10799   0004F9                     PCLAT           equ	1273	;# 
 10800   0004F9                     PCL             equ	1273	;# 
 10801   0004FA                     PCLATH          equ	1274	;# 
 10802   0004FB                     PCLATU          equ	1275	;# 
 10803   0004FC                     STKPTR          equ	1276	;# 
 10804   0004FD                     TOS             equ	1277	;# 
 10805   0004FD                     TOSL            equ	1277	;# 
 10806   0004FE                     TOSH            equ	1278	;# 
 10807   0004FF                     TOSU            equ	1279	;# 
 10808   000038                     BOOTREG         equ	56	;# 
 10809   000039                     CLKRCON         equ	57	;# 
 10810   00003A                     CLKRCLK         equ	58	;# 
 10811   000040                     NVMCON0         equ	64	;# 
 10812   000041                     NVMCON1         equ	65	;# 
 10813   000042                     NVMLOCK         equ	66	;# 
 10814   000043                     NVMADR          equ	67	;# 
 10815   000043                     NVMADRL         equ	67	;# 
 10816   000044                     NVMADRH         equ	68	;# 
 10817   000045                     NVMADRU         equ	69	;# 
 10818   000046                     NVMDAT          equ	70	;# 
 10819   000046                     NVMDATL         equ	70	;# 
 10820   000047                     NVMDATH         equ	71	;# 
 10821   000048                     VREGCON         equ	72	;# 
 10822   000049                     BORCON          equ	73	;# 
 10823   00004A                     HLVDCON0        equ	74	;# 
 10824   00004B                     HLVDCON1        equ	75	;# 
 10825   00004C                     ZCDCON          equ	76	;# 
 10826   000060                     PMD0            equ	96	;# 
 10827   000061                     PMD1            equ	97	;# 
 10828   000062                     PMD2            equ	98	;# 
 10829   000063                     PMD3            equ	99	;# 
 10830   000064                     PMD4            equ	100	;# 
 10831   000065                     PMD5            equ	101	;# 
 10832   000066                     PMD6            equ	102	;# 
 10833   000067                     PMD7            equ	103	;# 
 10834   000068                     PMD8            equ	104	;# 
 10835   00006A                     MD1CON0         equ	106	;# 
 10836   00006B                     MD1CON1         equ	107	;# 
 10837   00006C                     MD1SRC          equ	108	;# 
 10838   00006D                     MD1CARL         equ	109	;# 
 10839   00006E                     MD1CARH         equ	110	;# 
 10840   00006F                     CMOUT           equ	111	;# 
 10841   000070                     CM1CON0         equ	112	;# 
 10842   000071                     CM1CON1         equ	113	;# 
 10843   000072                     CM1NCH          equ	114	;# 
 10844   000073                     CM1PCH          equ	115	;# 
 10845   000074                     CM2CON0         equ	116	;# 
 10846   000075                     CM2CON1         equ	117	;# 
 10847   000076                     CM2NCH          equ	118	;# 
 10848   000077                     CM2PCH          equ	119	;# 
 10849   000078                     WDTCON0         equ	120	;# 
 10850   000079                     WDTCON1         equ	121	;# 
 10851   00007A                     WDTPSL          equ	122	;# 
 10852   00007B                     WDTPSH          equ	123	;# 
 10853   00007C                     WDTTMR          equ	124	;# 
 10854   00007D                     DAC1DAT         equ	125	;# 
 10855   00007D                     DAC1DATL        equ	125	;# 
 10856   00007F                     DAC1CON         equ	127	;# 
 10857   000080                     SPI1RXB         equ	128	;# 
 10858   000081                     SPI1TXB         equ	129	;# 
 10859   000082                     SPI1TCNT        equ	130	;# 
 10860   000082                     SPI1TCNTL       equ	130	;# 
 10861   000083                     SPI1TCNTH       equ	131	;# 
 10862   000084                     SPI1CON0        equ	132	;# 
 10863   000085                     SPI1CON1        equ	133	;# 
 10864   000086                     SPI1CON2        equ	134	;# 
 10865   000087                     SPI1STATUS      equ	135	;# 
 10866   000088                     SPI1TWIDTH      equ	136	;# 
 10867   000089                     SPI1BAUD        equ	137	;# 
 10868   00008A                     SPI1INTF        equ	138	;# 
 10869   00008B                     SPI1INTE        equ	139	;# 
 10870   00008C                     SPI1CLK         equ	140	;# 
 10871   00008D                     SPI2RXB         equ	141	;# 
 10872   00008E                     SPI2TXB         equ	142	;# 
 10873   00008F                     SPI2TCNT        equ	143	;# 
 10874   00008F                     SPI2TCNTL       equ	143	;# 
 10875   000090                     SPI2TCNTH       equ	144	;# 
 10876   000091                     SPI2CON0        equ	145	;# 
 10877   000092                     SPI2CON1        equ	146	;# 
 10878   000093                     SPI2CON2        equ	147	;# 
 10879   000094                     SPI2STATUS      equ	148	;# 
 10880   000095                     SPI2TWIDTH      equ	149	;# 
 10881   000096                     SPI2BAUD        equ	150	;# 
 10882   000097                     SPI2INTF        equ	151	;# 
 10883   000098                     SPI2INTE        equ	152	;# 
 10884   000099                     SPI2CLK         equ	153	;# 
 10885   0000AC                     ACTCON          equ	172	;# 
 10886   0000AD                     OSCCON1         equ	173	;# 
 10887   0000AE                     OSCCON2         equ	174	;# 
 10888   0000AF                     OSCCON3         equ	175	;# 
 10889   0000B0                     OSCTUNE         equ	176	;# 
 10890   0000B1                     OSCFRQ          equ	177	;# 
 10891   0000B1                     OSCFREQ         equ	177	;# 
 10892   0000B2                     OSCSTAT         equ	178	;# 
 10893   0000B2                     OSCSTAT1        equ	178	;# 
 10894   0000B3                     OSCEN           equ	179	;# 
 10895   0000B4                     PRLOCK          equ	180	;# 
 10896   0000B5                     SCANPR          equ	181	;# 
 10897   0000B6                     DMA1PR          equ	182	;# 
 10898   0000B7                     DMA2PR          equ	183	;# 
 10899   0000B8                     DMA3PR          equ	184	;# 
 10900   0000B9                     DMA4PR          equ	185	;# 
 10901   0000BA                     DMA5PR          equ	186	;# 
 10902   0000BB                     DMA6PR          equ	187	;# 
 10903   0000BC                     DMA7PR          equ	188	;# 
 10904   0000BD                     DMA8PR          equ	189	;# 
 10905   0000BE                     MAINPR          equ	190	;# 
 10906   0000BF                     ISRPR           equ	191	;# 
 10907   0000D4                     CLCDATA         equ	212	;# 
 10908   0000D5                     CLCSELECT       equ	213	;# 
 10909   0000D6                     CLCnCON         equ	214	;# 
 10910   0000D7                     CLCnPOL         equ	215	;# 
 10911   0000D8                     CLCnSEL0        equ	216	;# 
 10912   0000D9                     CLCnSEL1        equ	217	;# 
 10913   0000DA                     CLCnSEL2        equ	218	;# 
 10914   0000DB                     CLCnSEL3        equ	219	;# 
 10915   0000DC                     CLCnGLS0        equ	220	;# 
 10916   0000DD                     CLCnGLS1        equ	221	;# 
 10917   0000DE                     CLCnGLS2        equ	222	;# 
 10918   0000DF                     CLCnGLS3        equ	223	;# 
 10919   0000E8                     DMASELECT       equ	232	;# 
 10920   0000E9                     DMAnBUF         equ	233	;# 
 10921   0000EA                     DMAnDCNT        equ	234	;# 
 10922   0000EA                     DMAnDCNTL       equ	234	;# 
 10923   0000EB                     DMAnDCNTH       equ	235	;# 
 10924   0000EC                     DMAnDPTR        equ	236	;# 
 10925   0000EC                     DMAnDPTRL       equ	236	;# 
 10926   0000ED                     DMAnDPTRH       equ	237	;# 
 10927   0000EE                     DMAnDSZ         equ	238	;# 
 10928   0000EE                     DMAnDSZL        equ	238	;# 
 10929   0000EF                     DMAnDSZH        equ	239	;# 
 10930   0000F0                     DMAnDSA         equ	240	;# 
 10931   0000F0                     DMAnDSAL        equ	240	;# 
 10932   0000F1                     DMAnDSAH        equ	241	;# 
 10933   0000F2                     DMAnSCNT        equ	242	;# 
 10934   0000F2                     DMAnSCNTL       equ	242	;# 
 10935   0000F3                     DMAnSCNTH       equ	243	;# 
 10936   0000F4                     DMAnSPTR        equ	244	;# 
 10937   0000F4                     DMAnSPTRL       equ	244	;# 
 10938   0000F5                     DMAnSPTRH       equ	245	;# 
 10939   0000F6                     DMAnSPTRU       equ	246	;# 
 10940   0000F7                     DMAnSSZ         equ	247	;# 
 10941   0000F7                     DMAnSSZL        equ	247	;# 
 10942   0000F8                     DMAnSSZH        equ	248	;# 
 10943   0000F9                     DMAnSSA         equ	249	;# 
 10944   0000F9                     DMAnSSAL        equ	249	;# 
 10945   0000FA                     DMAnSSAH        equ	250	;# 
 10946   0000FB                     DMAnSSAU        equ	251	;# 
 10947   0000FC                     DMAnCON0        equ	252	;# 
 10948   0000FD                     DMAnCON1        equ	253	;# 
 10949   0000FE                     DMAnAIRQ        equ	254	;# 
 10950   0000FF                     DMAnSIRQ        equ	255	;# 
 10951   000100                     C1CONL          equ	256	;# 
 10952   000101                     C1CONH          equ	257	;# 
 10953   000102                     C1CONU          equ	258	;# 
 10954   000103                     C1CONT          equ	259	;# 
 10955   000104                     C1NBTCFGL       equ	260	;# 
 10956   000105                     C1NBTCFGH       equ	261	;# 
 10957   000106                     C1NBTCFGU       equ	262	;# 
 10958   000107                     C1NBTCFGT       equ	263	;# 
 10959   000108                     C1DBTCFGL       equ	264	;# 
 10960   000109                     C1DBTCFGH       equ	265	;# 
 10961   00010A                     C1DBTCFGU       equ	266	;# 
 10962   00010B                     C1DBTCFGT       equ	267	;# 
 10963   00010C                     C1TDCL          equ	268	;# 
 10964   00010D                     C1TDCH          equ	269	;# 
 10965   00010E                     C1TDCU          equ	270	;# 
 10966   000110                     C1TBC           equ	272	;# 
 10967   000110                     C1TBCL          equ	272	;# 
 10968   000111                     C1TBCH          equ	273	;# 
 10969   000112                     C1TBCU          equ	274	;# 
 10970   000113                     C1TBCT          equ	275	;# 
 10971   000114                     C1TSCONL        equ	276	;# 
 10972   000115                     C1TSCONH        equ	277	;# 
 10973   000116                     C1TSCONU        equ	278	;# 
 10974   000117                     C1TSCONT        equ	279	;# 
 10975   000118                     C1VECL          equ	280	;# 
 10976   000119                     C1VECH          equ	281	;# 
 10977   00011A                     C1VECU          equ	282	;# 
 10978   00011B                     C1VECT          equ	283	;# 
 10979   00011C                     C1INTL          equ	284	;# 
 10980   00011D                     C1INTH          equ	285	;# 
 10981   00011E                     C1INTU          equ	286	;# 
 10982   00011F                     C1INTT          equ	287	;# 
 10983   000120                     C1RXIF          equ	288	;# 
 10984   000120                     C1RXIFL         equ	288	;# 
 10985   000121                     C1RXIFH         equ	289	;# 
 10986   000122                     C1RXIFU         equ	290	;# 
 10987   000123                     C1RXIFT         equ	291	;# 
 10988   000124                     C1TXIF          equ	292	;# 
 10989   000124                     C1TXIFL         equ	292	;# 
 10990   000125                     C1TXIFH         equ	293	;# 
 10991   000126                     C1TXIFU         equ	294	;# 
 10992   000127                     C1TXIFT         equ	295	;# 
 10993   000128                     C1RXOVIF        equ	296	;# 
 10994   000128                     C1RXOVIFL       equ	296	;# 
 10995   000129                     C1RXOVIFH       equ	297	;# 
 10996   00012A                     C1RXOVIFU       equ	298	;# 
 10997   00012B                     C1RXOVIFT       equ	299	;# 
 10998   00012C                     C1TXATIF        equ	300	;# 
 10999   00012C                     C1TXATIFL       equ	300	;# 
 11000   00012D                     C1TXATIFH       equ	301	;# 
 11001   00012E                     C1TXATIFU       equ	302	;# 
 11002   00012F                     C1TXATIFT       equ	303	;# 
 11003   000130                     C1TXREQ         equ	304	;# 
 11004   000130                     C1TXREQL        equ	304	;# 
 11005   000131                     C1TXREQH        equ	305	;# 
 11006   000132                     C1TXREQU        equ	306	;# 
 11007   000133                     C1TXREQT        equ	307	;# 
 11008   000134                     C1TRECL         equ	308	;# 
 11009   000135                     C1TRECH         equ	309	;# 
 11010   000136                     C1TRECU         equ	310	;# 
 11011   000137                     C1TRECT         equ	311	;# 
 11012   000138                     C1BDIAG0L       equ	312	;# 
 11013   000139                     C1BDIAG0H       equ	313	;# 
 11014   00013C                     C1BDIAG1L       equ	316	;# 
 11015   00013D                     C1BDIAG1H       equ	317	;# 
 11016   00013E                     C1BDIAG1U       equ	318	;# 
 11017   00013F                     C1BDIAG1T       equ	319	;# 
 11018   000140                     C1TEFCONL       equ	320	;# 
 11019   000141                     C1TEFCONH       equ	321	;# 
 11020   000142                     C1TEFCONU       equ	322	;# 
 11021   000143                     C1TEFCONT       equ	323	;# 
 11022   000144                     C1TEFSTAL       equ	324	;# 
 11023   000145                     C1TEFSTAH       equ	325	;# 
 11024   000146                     C1TEFSTAU       equ	326	;# 
 11025   000147                     C1TEFSTAT       equ	327	;# 
 11026   000148                     C1TEFUA         equ	328	;# 
 11027   000148                     C1TEFUAL        equ	328	;# 
 11028   000149                     C1TEFUAH        equ	329	;# 
 11029   00014A                     C1TEFUAU        equ	330	;# 
 11030   00014B                     C1TEFUAT        equ	331	;# 
 11031   00014C                     C1FIFOBA        equ	332	;# 
 11032   00014C                     C1FIFOBAL       equ	332	;# 
 11033   00014D                     C1FIFOBAH       equ	333	;# 
 11034   00014E                     C1FIFOBAU       equ	334	;# 
 11035   00014F                     C1FIFOBAT       equ	335	;# 
 11036   000150                     C1TXQCONL       equ	336	;# 
 11037   000151                     C1TXQCONH       equ	337	;# 
 11038   000152                     C1TXQCONU       equ	338	;# 
 11039   000153                     C1TXQCONT       equ	339	;# 
 11040   000154                     C1TXQSTAL       equ	340	;# 
 11041   000155                     C1TXQSTAH       equ	341	;# 
 11042   000156                     C1TXQSTAU       equ	342	;# 
 11043   000157                     C1TXQSTAT       equ	343	;# 
 11044   000158                     C1TXQUA         equ	344	;# 
 11045   000158                     C1TXQUAL        equ	344	;# 
 11046   000159                     C1TXQUAH        equ	345	;# 
 11047   00015A                     C1TXQUAU        equ	346	;# 
 11048   00015B                     C1TXQUAT        equ	347	;# 
 11049   00015C                     C1FIFOCON1      equ	348	;# 
 11050   00015C                     C1FIFOCON1L     equ	348	;# 
 11051   00015D                     C1FIFOCON1H     equ	349	;# 
 11052   00015E                     C1FIFOCON1U     equ	350	;# 
 11053   00015F                     C1FIFOCON1T     equ	351	;# 
 11054   000160                     C1FIFOSTA1      equ	352	;# 
 11055   000160                     C1FIFOSTA1L     equ	352	;# 
 11056   000161                     C1FIFOSTA1H     equ	353	;# 
 11057   000162                     C1FIFOSTA1U     equ	354	;# 
 11058   000163                     C1FIFOSTA1T     equ	355	;# 
 11059   000164                     C1FIFOUA1       equ	356	;# 
 11060   000164                     C1FIFOUA1L      equ	356	;# 
 11061   000165                     C1FIFOUA1H      equ	357	;# 
 11062   000166                     C1FIFOUA1U      equ	358	;# 
 11063   000167                     C1FIFOUA1T      equ	359	;# 
 11064   000168                     C1FIFOCON2      equ	360	;# 
 11065   000168                     C1FIFOCON2L     equ	360	;# 
 11066   000169                     C1FIFOCON2H     equ	361	;# 
 11067   00016A                     C1FIFOCON2U     equ	362	;# 
 11068   00016B                     C1FIFOCON2T     equ	363	;# 
 11069   00016C                     C1FIFOSTA2      equ	364	;# 
 11070   00016C                     C1FIFOSTA2L     equ	364	;# 
 11071   00016D                     C1FIFOSTA2H     equ	365	;# 
 11072   00016E                     C1FIFOSTA2U     equ	366	;# 
 11073   00016F                     C1FIFOSTA2T     equ	367	;# 
 11074   000170                     C1FIFOUA2       equ	368	;# 
 11075   000170                     C1FIFOUA2L      equ	368	;# 
 11076   000171                     C1FIFOUA2H      equ	369	;# 
 11077   000172                     C1FIFOUA2U      equ	370	;# 
 11078   000173                     C1FIFOUA2T      equ	371	;# 
 11079   000174                     C1FIFOCON3      equ	372	;# 
 11080   000174                     C1FIFOCON3L     equ	372	;# 
 11081   000175                     C1FIFOCON3H     equ	373	;# 
 11082   000176                     C1FIFOCON3U     equ	374	;# 
 11083   000177                     C1FIFOCON3T     equ	375	;# 
 11084   000178                     C1FIFOSTA3      equ	376	;# 
 11085   000178                     C1FIFOSTA3L     equ	376	;# 
 11086   000179                     C1FIFOSTA3H     equ	377	;# 
 11087   00017A                     C1FIFOSTA3U     equ	378	;# 
 11088   00017B                     C1FIFOSTA3T     equ	379	;# 
 11089   00017C                     C1FIFOUA3       equ	380	;# 
 11090   00017C                     C1FIFOUA3L      equ	380	;# 
 11091   00017D                     C1FIFOUA3H      equ	381	;# 
 11092   00017E                     C1FIFOUA3U      equ	382	;# 
 11093   00017F                     C1FIFOUA3T      equ	383	;# 
 11094   000180                     C1FLTCON0L      equ	384	;# 
 11095   000181                     C1FLTCON0H      equ	385	;# 
 11096   000182                     C1FLTCON0U      equ	386	;# 
 11097   000183                     C1FLTCON0T      equ	387	;# 
 11098   000184                     C1FLTCON1L      equ	388	;# 
 11099   000185                     C1FLTCON1H      equ	389	;# 
 11100   000186                     C1FLTCON1U      equ	390	;# 
 11101   000187                     C1FLTCON1T      equ	391	;# 
 11102   000188                     C1FLTCON2L      equ	392	;# 
 11103   000189                     C1FLTCON2H      equ	393	;# 
 11104   00018A                     C1FLTCON2U      equ	394	;# 
 11105   00018B                     C1FLTCON2T      equ	395	;# 
 11106   00018C                     C1FLTOBJ0       equ	396	;# 
 11107   00018C                     C1FLTOBJ0L      equ	396	;# 
 11108   00018D                     C1FLTOBJ0H      equ	397	;# 
 11109   00018E                     C1FLTOBJ0U      equ	398	;# 
 11110   00018F                     C1FLTOBJ0T      equ	399	;# 
 11111   000190                     C1MASK0         equ	400	;# 
 11112   000190                     C1MASK0L        equ	400	;# 
 11113   000191                     C1MASK0H        equ	401	;# 
 11114   000192                     C1MASK0U        equ	402	;# 
 11115   000193                     C1MASK0T        equ	403	;# 
 11116   000194                     C1FLTOBJ1       equ	404	;# 
 11117   000194                     C1FLTOBJ1L      equ	404	;# 
 11118   000195                     C1FLTOBJ1H      equ	405	;# 
 11119   000196                     C1FLTOBJ1U      equ	406	;# 
 11120   000197                     C1FLTOBJ1T      equ	407	;# 
 11121   000198                     C1MASK1         equ	408	;# 
 11122   000198                     C1MASK1L        equ	408	;# 
 11123   000199                     C1MASK1H        equ	409	;# 
 11124   00019A                     C1MASK1U        equ	410	;# 
 11125   00019B                     C1MASK1T        equ	411	;# 
 11126   00019C                     C1FLTOBJ2       equ	412	;# 
 11127   00019C                     C1FLTOBJ2L      equ	412	;# 
 11128   00019D                     C1FLTOBJ2H      equ	413	;# 
 11129   00019E                     C1FLTOBJ2U      equ	414	;# 
 11130   00019F                     C1FLTOBJ2T      equ	415	;# 
 11131   0001A0                     C1MASK2         equ	416	;# 
 11132   0001A0                     C1MASK2L        equ	416	;# 
 11133   0001A1                     C1MASK2H        equ	417	;# 
 11134   0001A2                     C1MASK2U        equ	418	;# 
 11135   0001A3                     C1MASK2T        equ	419	;# 
 11136   0001A4                     C1FLTOBJ3       equ	420	;# 
 11137   0001A4                     C1FLTOBJ3L      equ	420	;# 
 11138   0001A5                     C1FLTOBJ3H      equ	421	;# 
 11139   0001A6                     C1FLTOBJ3U      equ	422	;# 
 11140   0001A7                     C1FLTOBJ3T      equ	423	;# 
 11141   0001A8                     C1MASK3         equ	424	;# 
 11142   0001A8                     C1MASK3L        equ	424	;# 
 11143   0001A9                     C1MASK3H        equ	425	;# 
 11144   0001AA                     C1MASK3U        equ	426	;# 
 11145   0001AB                     C1MASK3T        equ	427	;# 
 11146   0001AC                     C1FLTOBJ4       equ	428	;# 
 11147   0001AC                     C1FLTOBJ4L      equ	428	;# 
 11148   0001AD                     C1FLTOBJ4H      equ	429	;# 
 11149   0001AE                     C1FLTOBJ4U      equ	430	;# 
 11150   0001AF                     C1FLTOBJ4T      equ	431	;# 
 11151   0001B0                     C1MASK4         equ	432	;# 
 11152   0001B0                     C1MASK4L        equ	432	;# 
 11153   0001B1                     C1MASK4H        equ	433	;# 
 11154   0001B2                     C1MASK4U        equ	434	;# 
 11155   0001B3                     C1MASK4T        equ	435	;# 
 11156   0001B4                     C1FLTOBJ5       equ	436	;# 
 11157   0001B4                     C1FLTOBJ5L      equ	436	;# 
 11158   0001B5                     C1FLTOBJ5H      equ	437	;# 
 11159   0001B6                     C1FLTOBJ5U      equ	438	;# 
 11160   0001B7                     C1FLTOBJ5T      equ	439	;# 
 11161   0001B8                     C1MASK5         equ	440	;# 
 11162   0001B8                     C1MASK5L        equ	440	;# 
 11163   0001B9                     C1MASK5H        equ	441	;# 
 11164   0001BA                     C1MASK5U        equ	442	;# 
 11165   0001BB                     C1MASK5T        equ	443	;# 
 11166   0001BC                     C1FLTOBJ6       equ	444	;# 
 11167   0001BC                     C1FLTOBJ6L      equ	444	;# 
 11168   0001BD                     C1FLTOBJ6H      equ	445	;# 
 11169   0001BE                     C1FLTOBJ6U      equ	446	;# 
 11170   0001BF                     C1FLTOBJ6T      equ	447	;# 
 11171   0001C0                     C1MASK6         equ	448	;# 
 11172   0001C0                     C1MASK6L        equ	448	;# 
 11173   0001C1                     C1MASK6H        equ	449	;# 
 11174   0001C2                     C1MASK6U        equ	450	;# 
 11175   0001C3                     C1MASK6T        equ	451	;# 
 11176   0001C4                     C1FLTOBJ7       equ	452	;# 
 11177   0001C4                     C1FLTOBJ7L      equ	452	;# 
 11178   0001C5                     C1FLTOBJ7H      equ	453	;# 
 11179   0001C6                     C1FLTOBJ7U      equ	454	;# 
 11180   0001C7                     C1FLTOBJ7T      equ	455	;# 
 11181   0001C8                     C1MASK7         equ	456	;# 
 11182   0001C8                     C1MASK7L        equ	456	;# 
 11183   0001C9                     C1MASK7H        equ	457	;# 
 11184   0001CA                     C1MASK7U        equ	458	;# 
 11185   0001CB                     C1MASK7T        equ	459	;# 
 11186   0001CC                     C1FLTOBJ8       equ	460	;# 
 11187   0001CC                     C1FLTOBJ8L      equ	460	;# 
 11188   0001CD                     C1FLTOBJ8H      equ	461	;# 
 11189   0001CE                     C1FLTOBJ8U      equ	462	;# 
 11190   0001CF                     C1FLTOBJ8T      equ	463	;# 
 11191   0001D0                     C1MASK8         equ	464	;# 
 11192   0001D0                     C1MASK8L        equ	464	;# 
 11193   0001D1                     C1MASK8H        equ	465	;# 
 11194   0001D2                     C1MASK8U        equ	466	;# 
 11195   0001D3                     C1MASK8T        equ	467	;# 
 11196   0001D4                     C1FLTOBJ9       equ	468	;# 
 11197   0001D4                     C1FLTOBJ9L      equ	468	;# 
 11198   0001D5                     C1FLTOBJ9H      equ	469	;# 
 11199   0001D6                     C1FLTOBJ9U      equ	470	;# 
 11200   0001D7                     C1FLTOBJ9T      equ	471	;# 
 11201   0001D8                     C1MASK9         equ	472	;# 
 11202   0001D8                     C1MASK9L        equ	472	;# 
 11203   0001D9                     C1MASK9H        equ	473	;# 
 11204   0001DA                     C1MASK9U        equ	474	;# 
 11205   0001DB                     C1MASK9T        equ	475	;# 
 11206   0001DC                     C1FLTOBJ10      equ	476	;# 
 11207   0001DC                     C1FLTOBJ10L     equ	476	;# 
 11208   0001DD                     C1FLTOBJ10H     equ	477	;# 
 11209   0001DE                     C1FLTOBJ10U     equ	478	;# 
 11210   0001DF                     C1FLTOBJ10T     equ	479	;# 
 11211   0001E0                     C1MASK10        equ	480	;# 
 11212   0001E0                     C1MASK10L       equ	480	;# 
 11213   0001E1                     C1MASK10H       equ	481	;# 
 11214   0001E2                     C1MASK10U       equ	482	;# 
 11215   0001E3                     C1MASK10T       equ	483	;# 
 11216   0001E4                     C1FLTOBJ11      equ	484	;# 
 11217   0001E4                     C1FLTOBJ11L     equ	484	;# 
 11218   0001E5                     C1FLTOBJ11H     equ	485	;# 
 11219   0001E6                     C1FLTOBJ11U     equ	486	;# 
 11220   0001E7                     C1FLTOBJ11T     equ	487	;# 
 11221   0001E8                     C1MASK11        equ	488	;# 
 11222   0001E8                     C1MASK11L       equ	488	;# 
 11223   0001E9                     C1MASK11H       equ	489	;# 
 11224   0001EA                     C1MASK11U       equ	490	;# 
 11225   0001EB                     C1MASK11T       equ	491	;# 
 11226   000200                     PPSLOCK         equ	512	;# 
 11227   000201                     RA0PPS          equ	513	;# 
 11228   000202                     RA1PPS          equ	514	;# 
 11229   000203                     RA2PPS          equ	515	;# 
 11230   000204                     RA3PPS          equ	516	;# 
 11231   000205                     RA4PPS          equ	517	;# 
 11232   000206                     RA5PPS          equ	518	;# 
 11233   000207                     RA6PPS          equ	519	;# 
 11234   000208                     RA7PPS          equ	520	;# 
 11235   000209                     RB0PPS          equ	521	;# 
 11236   00020A                     RB1PPS          equ	522	;# 
 11237   00020B                     RB2PPS          equ	523	;# 
 11238   00020C                     RB3PPS          equ	524	;# 
 11239   00020D                     RB4PPS          equ	525	;# 
 11240   00020E                     RB5PPS          equ	526	;# 
 11241   00020F                     RB6PPS          equ	527	;# 
 11242   000210                     RB7PPS          equ	528	;# 
 11243   000211                     RC0PPS          equ	529	;# 
 11244   000212                     RC1PPS          equ	530	;# 
 11245   000213                     RC2PPS          equ	531	;# 
 11246   000214                     RC3PPS          equ	532	;# 
 11247   000215                     RC4PPS          equ	533	;# 
 11248   000216                     RC5PPS          equ	534	;# 
 11249   000217                     RC6PPS          equ	535	;# 
 11250   000218                     RC7PPS          equ	536	;# 
 11251   00023D                     CANRXPPS        equ	573	;# 
 11252   00023E                     INT0PPS         equ	574	;# 
 11253   00023F                     INT1PPS         equ	575	;# 
 11254   000240                     INT2PPS         equ	576	;# 
 11255   000241                     T0CKIPPS        equ	577	;# 
 11256   000242                     T1CKIPPS        equ	578	;# 
 11257   000243                     T1GPPS          equ	579	;# 
 11258   000244                     T3CKIPPS        equ	580	;# 
 11259   000245                     T3GPPS          equ	581	;# 
 11260   000246                     T5CKIPPS        equ	582	;# 
 11261   000247                     T5GPPS          equ	583	;# 
 11262   000248                     T2INPPS         equ	584	;# 
 11263   000249                     T4INPPS         equ	585	;# 
 11264   00024A                     T6INPPS         equ	586	;# 
 11265   00024B                     TUIN0PPS        equ	587	;# 
 11266   00024C                     TUIN1PPS        equ	588	;# 
 11267   00024F                     CCP1PPS         equ	591	;# 
 11268   000250                     CCP2PPS         equ	592	;# 
 11269   000251                     CCP3PPS         equ	593	;# 
 11270   000253                     PWM1ERSPPS      equ	595	;# 
 11271   000254                     PWM2ERSPPS      equ	596	;# 
 11272   000255                     PWM3ERSPPS      equ	597	;# 
 11273   000256                     PWM4ERSPPS      equ	598	;# 
 11274   000257                     PWMIN0PPS       equ	599	;# 
 11275   000258                     PWMIN1PPS       equ	600	;# 
 11276   000259                     SMT1WINPPS      equ	601	;# 
 11277   00025A                     SMT1SIGPPS      equ	602	;# 
 11278   00025B                     CWG1PPS         equ	603	;# 
 11279   00025B                     CWG1INPPS       equ	603	;# 
 11280   00025C                     CWG2PPS         equ	604	;# 
 11281   00025C                     CWG2INPPS       equ	604	;# 
 11282   00025D                     CWG3PPS         equ	605	;# 
 11283   00025D                     CWG3INPPS       equ	605	;# 
 11284   00025E                     MD1CARLPPS      equ	606	;# 
 11285   00025E                     MDCARLPPS       equ	606	;# 
 11286   00025F                     MD1CARHPPS      equ	607	;# 
 11287   00025F                     MDCARHPPS       equ	607	;# 
 11288   000260                     MD1SRCPPS       equ	608	;# 
 11289   000260                     MDSRCPPS        equ	608	;# 
 11290   000261                     CLCIN0PPS       equ	609	;# 
 11291   000262                     CLCIN1PPS       equ	610	;# 
 11292   000263                     CLCIN2PPS       equ	611	;# 
 11293   000264                     CLCIN3PPS       equ	612	;# 
 11294   000265                     CLCIN4PPS       equ	613	;# 
 11295   000266                     CLCIN5PPS       equ	614	;# 
 11296   000267                     CLCIN6PPS       equ	615	;# 
 11297   000268                     CLCIN7PPS       equ	616	;# 
 11298   000269                     ADACTPPS        equ	617	;# 
 11299   00026A                     SPI1SCKPPS      equ	618	;# 
 11300   00026B                     SPI1SDIPPS      equ	619	;# 
 11301   00026C                     SPI1SSPPS       equ	620	;# 
 11302   00026D                     SPI2SCKPPS      equ	621	;# 
 11303   00026E                     SPI2SDIPPS      equ	622	;# 
 11304   00026F                     SPI2SSPPS       equ	623	;# 
 11305   000270                     I2C1SDAPPS      equ	624	;# 
 11306   000271                     I2C1SCLPPS      equ	625	;# 
 11307   000272                     U1RXPPS         equ	626	;# 
 11308   000273                     U1CTSPPS        equ	627	;# 
 11309   000274                     U2RXPPS         equ	628	;# 
 11310   000275                     U2CTSPPS        equ	629	;# 
 11311   000276                     U3RXPPS         equ	630	;# 
 11312   000277                     U3CTSPPS        equ	631	;# 
 11313   000278                     U4RXPPS         equ	632	;# 
 11314   000279                     U4CTSPPS        equ	633	;# 
 11315   00027A                     U5RXPPS         equ	634	;# 
 11316   00027B                     U5CTSPPS        equ	635	;# 
 11317   000286                     RC4I2C          equ	646	;# 
 11318   000287                     RC3I2C          equ	647	;# 
 11319   000288                     RB2I2C          equ	648	;# 
 11320   000289                     RB1I2C          equ	649	;# 
 11321   00028A                     I2C1RXB         equ	650	;# 
 11322   00028B                     I2C1TXB         equ	651	;# 
 11323   00028C                     I2C1CNTL        equ	652	;# 
 11324   00028D                     I2C1CNTH        equ	653	;# 
 11325   00028E                     I2C1ADB0        equ	654	;# 
 11326   00028F                     I2C1ADB1        equ	655	;# 
 11327   000290                     I2C1ADR0        equ	656	;# 
 11328   000291                     I2C1ADR1        equ	657	;# 
 11329   000292                     I2C1ADR2        equ	658	;# 
 11330   000293                     I2C1ADR3        equ	659	;# 
 11331   000294                     I2C1CON0        equ	660	;# 
 11332   000295                     I2C1CON1        equ	661	;# 
 11333   000296                     I2C1CON2        equ	662	;# 
 11334   000297                     I2C1ERR         equ	663	;# 
 11335   000298                     I2C1STAT0       equ	664	;# 
 11336   000299                     I2C1STAT1       equ	665	;# 
 11337   00029A                     I2C1PIR         equ	666	;# 
 11338   00029B                     I2C1PIE         equ	667	;# 
 11339   00029C                     I2C1BTO         equ	668	;# 
 11340   00029D                     I2C1BAUD        equ	669	;# 
 11341   00029E                     I2C1CLK         equ	670	;# 
 11342   00029F                     I2C1BTOC        equ	671	;# 
 11343   0002A1                     U1RXB           equ	673	;# 
 11344   0002A1                     U1RXBL          equ	673	;# 
 11345   0002A2                     U1RXCHK         equ	674	;# 
 11346   0002A3                     U1TXB           equ	675	;# 
 11347   0002A3                     U1TXBL          equ	675	;# 
 11348   0002A4                     U1TXCHK         equ	676	;# 
 11349   0002A5                     U1P1            equ	677	;# 
 11350   0002A5                     U1P1L           equ	677	;# 
 11351   0002A6                     U1P1H           equ	678	;# 
 11352   0002A7                     U1P2            equ	679	;# 
 11353   0002A7                     U1P2L           equ	679	;# 
 11354   0002A8                     U1P2H           equ	680	;# 
 11355   0002A9                     U1P3            equ	681	;# 
 11356   0002A9                     U1P3L           equ	681	;# 
 11357   0002AA                     U1P3H           equ	682	;# 
 11358   0002AB                     U1CON0          equ	683	;# 
 11359   0002AC                     U1CON1          equ	684	;# 
 11360   0002AD                     U1CON2          equ	685	;# 
 11361   0002AE                     U1BRG           equ	686	;# 
 11362   0002AE                     U1BRGL          equ	686	;# 
 11363   0002AF                     U1BRGH          equ	687	;# 
 11364   0002B0                     U1FIFO          equ	688	;# 
 11365   0002B1                     U1UIR           equ	689	;# 
 11366   0002B2                     U1ERRIR         equ	690	;# 
 11367   0002B3                     U1ERRIE         equ	691	;# 
 11368   0002B4                     U2RXB           equ	692	;# 
 11369   0002B4                     U2RXBL          equ	692	;# 
 11370   0002B5                     U2RXCHK         equ	693	;# 
 11371   0002B6                     U2TXB           equ	694	;# 
 11372   0002B6                     U2TXBL          equ	694	;# 
 11373   0002B7                     U2TXCHK         equ	695	;# 
 11374   0002B8                     U2P1            equ	696	;# 
 11375   0002B8                     U2P1L           equ	696	;# 
 11376   0002B9                     U2P1H           equ	697	;# 
 11377   0002BA                     U2P2            equ	698	;# 
 11378   0002BA                     U2P2L           equ	698	;# 
 11379   0002BB                     U2P2H           equ	699	;# 
 11380   0002BC                     U2P3            equ	700	;# 
 11381   0002BC                     U2P3L           equ	700	;# 
 11382   0002BD                     U2P3H           equ	701	;# 
 11383   0002BE                     U2CON0          equ	702	;# 
 11384   0002BF                     U2CON1          equ	703	;# 
 11385   0002C0                     U2CON2          equ	704	;# 
 11386   0002C1                     U2BRG           equ	705	;# 
 11387   0002C1                     U2BRGL          equ	705	;# 
 11388   0002C2                     U2BRGH          equ	706	;# 
 11389   0002C3                     U2FIFO          equ	707	;# 
 11390   0002C4                     U2UIR           equ	708	;# 
 11391   0002C5                     U2ERRIR         equ	709	;# 
 11392   0002C6                     U2ERRIE         equ	710	;# 
 11393   0002C7                     U3RXB           equ	711	;# 
 11394   0002C7                     U3RXBL          equ	711	;# 
 11395   0002C9                     U3TXB           equ	713	;# 
 11396   0002C9                     U3TXBL          equ	713	;# 
 11397   0002CB                     U3P1            equ	715	;# 
 11398   0002CB                     U3P1L           equ	715	;# 
 11399   0002CD                     U3P2            equ	717	;# 
 11400   0002CD                     U3P2L           equ	717	;# 
 11401   0002CF                     U3P3            equ	719	;# 
 11402   0002CF                     U3P3L           equ	719	;# 
 11403   0002D1                     U3CON0          equ	721	;# 
 11404   0002D2                     U3CON1          equ	722	;# 
 11405   0002D3                     U3CON2          equ	723	;# 
 11406   0002D4                     U3BRG           equ	724	;# 
 11407   0002D4                     U3BRGL          equ	724	;# 
 11408   0002D5                     U3BRGH          equ	725	;# 
 11409   0002D6                     U3FIFO          equ	726	;# 
 11410   0002D7                     U3UIR           equ	727	;# 
 11411   0002D8                     U3ERRIR         equ	728	;# 
 11412   0002D9                     U3ERRIE         equ	729	;# 
 11413   0002DA                     U4RXB           equ	730	;# 
 11414   0002DA                     U4RXBL          equ	730	;# 
 11415   0002DC                     U4TXB           equ	732	;# 
 11416   0002DC                     U4TXBL          equ	732	;# 
 11417   0002DE                     U4P1            equ	734	;# 
 11418   0002DE                     U4P1L           equ	734	;# 
 11419   0002E0                     U4P2            equ	736	;# 
 11420   0002E0                     U4P2L           equ	736	;# 
 11421   0002E2                     U4P3            equ	738	;# 
 11422   0002E2                     U4P3L           equ	738	;# 
 11423   0002E4                     U4CON0          equ	740	;# 
 11424   0002E5                     U4CON1          equ	741	;# 
 11425   0002E6                     U4CON2          equ	742	;# 
 11426   0002E7                     U4BRG           equ	743	;# 
 11427   0002E7                     U4BRGL          equ	743	;# 
 11428   0002E8                     U4BRGH          equ	744	;# 
 11429   0002E9                     U4FIFO          equ	745	;# 
 11430   0002EA                     U4UIR           equ	746	;# 
 11431   0002EB                     U4ERRIR         equ	747	;# 
 11432   0002EC                     U4ERRIE         equ	748	;# 
 11433   0002ED                     U5RXB           equ	749	;# 
 11434   0002ED                     U5RXBL          equ	749	;# 
 11435   0002EF                     U5TXB           equ	751	;# 
 11436   0002EF                     U5TXBL          equ	751	;# 
 11437   0002F1                     U5P1            equ	753	;# 
 11438   0002F1                     U5P1L           equ	753	;# 
 11439   0002F3                     U5P2            equ	755	;# 
 11440   0002F3                     U5P2L           equ	755	;# 
 11441   0002F5                     U5P3            equ	757	;# 
 11442   0002F5                     U5P3L           equ	757	;# 
 11443   0002F7                     U5CON0          equ	759	;# 
 11444   0002F8                     U5CON1          equ	760	;# 
 11445   0002F9                     U5CON2          equ	761	;# 
 11446   0002FA                     U5BRG           equ	762	;# 
 11447   0002FA                     U5BRGL          equ	762	;# 
 11448   0002FB                     U5BRGH          equ	763	;# 
 11449   0002FC                     U5FIFO          equ	764	;# 
 11450   0002FD                     U5UIR           equ	765	;# 
 11451   0002FE                     U5ERRIR         equ	766	;# 
 11452   0002FF                     U5ERRIE         equ	767	;# 
 11453   000300                     SMT1TMR         equ	768	;# 
 11454   000300                     SMT1TMRL        equ	768	;# 
 11455   000301                     SMT1TMRH        equ	769	;# 
 11456   000302                     SMT1TMRU        equ	770	;# 
 11457   000303                     SMT1CPR         equ	771	;# 
 11458   000303                     SMT1CPRL        equ	771	;# 
 11459   000304                     SMT1CPRH        equ	772	;# 
 11460   000305                     SMT1CPRU        equ	773	;# 
 11461   000306                     SMT1CPW         equ	774	;# 
 11462   000306                     SMT1CPWL        equ	774	;# 
 11463   000307                     SMT1CPWH        equ	775	;# 
 11464   000308                     SMT1CPWU        equ	776	;# 
 11465   000309                     SMT1PR          equ	777	;# 
 11466   000309                     SMT1PRL         equ	777	;# 
 11467   00030A                     SMT1PRH         equ	778	;# 
 11468   00030B                     SMT1PRU         equ	779	;# 
 11469   00030C                     SMT1CON0        equ	780	;# 
 11470   00030D                     SMT1CON1        equ	781	;# 
 11471   00030E                     SMT1STAT        equ	782	;# 
 11472   00030F                     SMT1CLK         equ	783	;# 
 11473   000310                     SMT1SIG         equ	784	;# 
 11474   000311                     SMT1WIN         equ	785	;# 
 11475   000318                     TMR0L           equ	792	;# 
 11476   000318                     TMR0            equ	792	;# 
 11477   000319                     TMR0H           equ	793	;# 
 11478   000319                     PR0             equ	793	;# 
 11479   00031A                     T0CON0          equ	794	;# 
 11480   00031B                     T0CON1          equ	795	;# 
 11481   00031C                     TMR1            equ	796	;# 
 11482   00031C                     TMR1L           equ	796	;# 
 11483   00031D                     TMR1H           equ	797	;# 
 11484   00031E                     T1CON           equ	798	;# 
 11485   00031E                     TMR1CON         equ	798	;# 
 11486   00031F                     T1GCON          equ	799	;# 
 11487   00031F                     TMR1GCON        equ	799	;# 
 11488   000320                     T1GATE          equ	800	;# 
 11489   000320                     TMR1GATE        equ	800	;# 
 11490   000321                     T1CLK           equ	801	;# 
 11491   000321                     TMR1CLK         equ	801	;# 
 11492   000321                     PR1             equ	801	;# 
 11493   000322                     T2TMR           equ	802	;# 
 11494   000322                     TMR2            equ	802	;# 
 11495   000323                     T2PR            equ	803	;# 
 11496   000323                     PR2             equ	803	;# 
 11497   000324                     T2CON           equ	804	;# 
 11498   000325                     T2HLT           equ	805	;# 
 11499   000326                     T2CLKCON        equ	806	;# 
 11500   000326                     T2CLK           equ	806	;# 
 11501   000327                     T2RST           equ	807	;# 
 11502   000328                     TMR3            equ	808	;# 
 11503   000328                     TMR3L           equ	808	;# 
 11504   000329                     TMR3H           equ	809	;# 
 11505   00032A                     T3CON           equ	810	;# 
 11506   00032A                     TMR3CON         equ	810	;# 
 11507   00032B                     T3GCON          equ	811	;# 
 11508   00032B                     TMR3GCON        equ	811	;# 
 11509   00032C                     T3GATE          equ	812	;# 
 11510   00032C                     TMR3GATE        equ	812	;# 
 11511   00032D                     T3CLK           equ	813	;# 
 11512   00032D                     TMR3CLK         equ	813	;# 
 11513   00032D                     PR3             equ	813	;# 
 11514   00032E                     T4TMR           equ	814	;# 
 11515   00032E                     TMR4            equ	814	;# 
 11516   00032F                     T4PR            equ	815	;# 
 11517   00032F                     PR4             equ	815	;# 
 11518   000330                     T4CON           equ	816	;# 
 11519   000331                     T4HLT           equ	817	;# 
 11520   000332                     T4CLKCON        equ	818	;# 
 11521   000332                     T4CLK           equ	818	;# 
 11522   000333                     T4RST           equ	819	;# 
 11523   000334                     TMR5            equ	820	;# 
 11524   000334                     TMR5L           equ	820	;# 
 11525   000335                     TMR5H           equ	821	;# 
 11526   000336                     T5CON           equ	822	;# 
 11527   000336                     TMR5CON         equ	822	;# 
 11528   000337                     T5GCON          equ	823	;# 
 11529   000337                     TMR5GCON        equ	823	;# 
 11530   000338                     T5GATE          equ	824	;# 
 11531   000338                     TMR5GATE        equ	824	;# 
 11532   000339                     T5CLK           equ	825	;# 
 11533   000339                     TMR5CLK         equ	825	;# 
 11534   000339                     PR5             equ	825	;# 
 11535   00033A                     T6TMR           equ	826	;# 
 11536   00033A                     TMR6            equ	826	;# 
 11537   00033B                     T6PR            equ	827	;# 
 11538   00033B                     PR6             equ	827	;# 
 11539   00033C                     T6CON           equ	828	;# 
 11540   00033D                     T6HLT           equ	829	;# 
 11541   00033E                     T6CLKCON        equ	830	;# 
 11542   00033E                     T6CLK           equ	830	;# 
 11543   00033F                     T6RST           equ	831	;# 
 11544   000340                     CCPR1           equ	832	;# 
 11545   000340                     CCPR1L          equ	832	;# 
 11546   000341                     CCPR1H          equ	833	;# 
 11547   000342                     CCP1CON         equ	834	;# 
 11548   000343                     CCP1CAP         equ	835	;# 
 11549   000344                     CCPR2           equ	836	;# 
 11550   000344                     CCPR2L          equ	836	;# 
 11551   000345                     CCPR2H          equ	837	;# 
 11552   000346                     CCP2CON         equ	838	;# 
 11553   000347                     CCP2CAP         equ	839	;# 
 11554   000348                     CCPR3           equ	840	;# 
 11555   000348                     CCPR3L          equ	840	;# 
 11556   000349                     CCPR3H          equ	841	;# 
 11557   00034A                     CCP3CON         equ	842	;# 
 11558   00034B                     CCP3CAP         equ	843	;# 
 11559   00034C                     CCPTMRS0        equ	844	;# 
 11560   00034F                     CRCDATA         equ	847	;# 
 11561   00034F                     CRCDATAL        equ	847	;# 
 11562   000350                     CRCDATAH        equ	848	;# 
 11563   000351                     CRCDATAU        equ	849	;# 
 11564   000352                     CRCDATAT        equ	850	;# 
 11565   000353                     CRCOUT          equ	851	;# 
 11566   000353                     CRCSHFT         equ	851	;# 
 11567   000353                     CRCXOR          equ	851	;# 
 11568   000353                     CRCOUTL         equ	851	;# 
 11569   000353                     CRCSHFTL        equ	851	;# 
 11570   000353                     CRCSHIFTL       equ	851	;# 
 11571   000353                     CRCXORL         equ	851	;# 
 11572   000354                     CRCOUTH         equ	852	;# 
 11573   000354                     CRCSHFTH        equ	852	;# 
 11574   000354                     CRCSHIFTH       equ	852	;# 
 11575   000354                     CRCXORH         equ	852	;# 
 11576   000355                     CRCOUTU         equ	853	;# 
 11577   000355                     CRCSHFTU        equ	853	;# 
 11578   000355                     CRCSHIFTU       equ	853	;# 
 11579   000355                     CRCXORU         equ	853	;# 
 11580   000356                     CRCOUTT         equ	854	;# 
 11581   000356                     CRCSHFTT        equ	854	;# 
 11582   000356                     CRCSHIFTT       equ	854	;# 
 11583   000356                     CRCXORT         equ	854	;# 
 11584   000357                     CRCCON0         equ	855	;# 
 11585   000358                     CRCCON1         equ	856	;# 
 11586   000359                     CRCCON2         equ	857	;# 
 11587   00035A                     SCANLADR        equ	858	;# 
 11588   00035A                     SCANLADRL       equ	858	;# 
 11589   00035B                     SCANLADRH       equ	859	;# 
 11590   00035C                     SCANLADRU       equ	860	;# 
 11591   00035D                     SCANHADR        equ	861	;# 
 11592   00035D                     SCANHADRL       equ	861	;# 
 11593   00035E                     SCANHADRH       equ	862	;# 
 11594   00035F                     SCANHADRU       equ	863	;# 
 11595   000360                     SCANCON0        equ	864	;# 
 11596   000361                     SCANTRIG        equ	865	;# 
 11597   000362                     IPR0            equ	866	;# 
 11598   000363                     IPR1            equ	867	;# 
 11599   000364                     IPR2            equ	868	;# 
 11600   000365                     IPR3            equ	869	;# 
 11601   000366                     IPR4            equ	870	;# 
 11602   000367                     IPR5            equ	871	;# 
 11603   000368                     IPR6            equ	872	;# 
 11604   000369                     IPR7            equ	873	;# 
 11605   00036A                     IPR8            equ	874	;# 
 11606   00036B                     IPR9            equ	875	;# 
 11607   00036C                     IPR10           equ	876	;# 
 11608   00036D                     IPR11           equ	877	;# 
 11609   00036E                     IPR12           equ	878	;# 
 11610   00036F                     IPR13           equ	879	;# 
 11611   000370                     IPR14           equ	880	;# 
 11612   000371                     IPR15           equ	881	;# 
 11613   000373                     STATUS_CSHAD    equ	883	;# 
 11614   000374                     WREG_CSHAD      equ	884	;# 
 11615   000375                     BSR_CSHAD       equ	885	;# 
 11616   000376                     SHADCON         equ	886	;# 
 11617   000377                     STATUS_SHAD     equ	887	;# 
 11618   000378                     WREG_SHAD       equ	888	;# 
 11619   000379                     BSR_SHAD        equ	889	;# 
 11620   00037A                     PCLATH_SHAD     equ	890	;# 
 11621   00037B                     PCLATU_SHAD     equ	891	;# 
 11622   00037C                     FSR0SH          equ	892	;# 
 11623   00037C                     FSR0L_SHAD      equ	892	;# 
 11624   00037D                     FSR0H_SHAD      equ	893	;# 
 11625   00037E                     FSR1SH          equ	894	;# 
 11626   00037E                     FSR1L_SHAD      equ	894	;# 
 11627   00037F                     FSR1H_SHAD      equ	895	;# 
 11628   000380                     FSR2SH          equ	896	;# 
 11629   000380                     FSR2L_SHAD      equ	896	;# 
 11630   000381                     FSR2H_SHAD      equ	897	;# 
 11631   000382                     PRODSH          equ	898	;# 
 11632   000382                     PRODL_SHAD      equ	898	;# 
 11633   000383                     PRODH_SHAD      equ	899	;# 
 11634   000387                     TU16ACON0       equ	903	;# 
 11635   000388                     TU16ACON1       equ	904	;# 
 11636   000389                     TU16AHLT        equ	905	;# 
 11637   00038A                     TU16APS         equ	906	;# 
 11638   00038B                     TU16ATMR        equ	907	;# 
 11639   00038B                     TU16ACR         equ	907	;# 
 11640   00038B                     TU16ATMRL       equ	907	;# 
 11641   00038B                     TU16ACRL        equ	907	;# 
 11642   00038C                     TU16ATMRH       equ	908	;# 
 11643   00038C                     TU16ACRH        equ	908	;# 
 11644   00038D                     TU16APR         equ	909	;# 
 11645   00038D                     TU16APRL        equ	909	;# 
 11646   00038E                     TU16APRH        equ	910	;# 
 11647   00038F                     TU16ACLK        equ	911	;# 
 11648   000390                     TU16AERS        equ	912	;# 
 11649   000393                     TU16BCON0       equ	915	;# 
 11650   000394                     TU16BCON1       equ	916	;# 
 11651   000395                     TU16BHLT        equ	917	;# 
 11652   000396                     TU16BPS         equ	918	;# 
 11653   000397                     TU16BTMR        equ	919	;# 
 11654   000397                     TU16BCR         equ	919	;# 
 11655   000397                     TU16BTMRL       equ	919	;# 
 11656   000397                     TU16BCRL        equ	919	;# 
 11657   000398                     TU16BTMRH       equ	920	;# 
 11658   000398                     TU16BCRH        equ	920	;# 
 11659   000399                     TU16BPR         equ	921	;# 
 11660   000399                     TU16BPRL        equ	921	;# 
 11661   00039A                     TU16BPRH        equ	922	;# 
 11662   00039B                     TU16BCLK        equ	923	;# 
 11663   00039C                     TU16BERS        equ	924	;# 
 11664   0003BB                     TUCHAIN         equ	955	;# 
 11665   0003BC                     CWG1CLK         equ	956	;# 
 11666   0003BC                     CWG1CLKCON      equ	956	;# 
 11667   0003BD                     CWG1ISM         equ	957	;# 
 11668   0003BE                     CWG1DBR         equ	958	;# 
 11669   0003BF                     CWG1DBF         equ	959	;# 
 11670   0003C0                     CWG1CON0        equ	960	;# 
 11671   0003C1                     CWG1CON1        equ	961	;# 
 11672   0003C2                     CWG1AS0         equ	962	;# 
 11673   0003C3                     CWG1AS1         equ	963	;# 
 11674   0003C4                     CWG1STR         equ	964	;# 
 11675   0003C5                     CWG2CLK         equ	965	;# 
 11676   0003C5                     CWG2CLKCON      equ	965	;# 
 11677   0003C6                     CWG2ISM         equ	966	;# 
 11678   0003C7                     CWG2DBR         equ	967	;# 
 11679   0003C8                     CWG2DBF         equ	968	;# 
 11680   0003C9                     CWG2CON0        equ	969	;# 
 11681   0003CA                     CWG2CON1        equ	970	;# 
 11682   0003CB                     CWG2AS0         equ	971	;# 
 11683   0003CC                     CWG2AS1         equ	972	;# 
 11684   0003CD                     CWG2STR         equ	973	;# 
 11685   0003CE                     CWG3CLK         equ	974	;# 
 11686   0003CE                     CWG3CLKCON      equ	974	;# 
 11687   0003CF                     CWG3ISM         equ	975	;# 
 11688   0003D0                     CWG3DBR         equ	976	;# 
 11689   0003D1                     CWG3DBF         equ	977	;# 
 11690   0003D2                     CWG3CON0        equ	978	;# 
 11691   0003D3                     CWG3CON1        equ	979	;# 
 11692   0003D4                     CWG3AS0         equ	980	;# 
 11693   0003D5                     CWG3AS1         equ	981	;# 
 11694   0003D6                     CWG3STR         equ	982	;# 
 11695   0003D7                     FVRCON          equ	983	;# 
 11696   0003D8                     ADCPCON         equ	984	;# 
 11697   0003D8                     ADCP            equ	984	;# 
 11698   0003D9                     ADLTH           equ	985	;# 
 11699   0003D9                     ADLTHL          equ	985	;# 
 11700   0003DA                     ADLTHH          equ	986	;# 
 11701   0003DB                     ADUTH           equ	987	;# 
 11702   0003DB                     ADUTHL          equ	987	;# 
 11703   0003DC                     ADUTHH          equ	988	;# 
 11704   0003DD                     ADERR           equ	989	;# 
 11705   0003DD                     ADERRL          equ	989	;# 
 11706   0003DE                     ADERRH          equ	990	;# 
 11707   0003DF                     ADSTPT          equ	991	;# 
 11708   0003DF                     ADSTPTL         equ	991	;# 
 11709   0003E0                     ADSTPTH         equ	992	;# 
 11710   0003E1                     ADFLTR          equ	993	;# 
 11711   0003E1                     ADFLTRL         equ	993	;# 
 11712   0003E2                     ADFLTRH         equ	994	;# 
 11713   0003E3                     ADACC           equ	995	;# 
 11714   0003E3                     ADACCL          equ	995	;# 
 11715   0003E4                     ADACCH          equ	996	;# 
 11716   0003E5                     ADACCU          equ	997	;# 
 11717   0003E6                     ADCNT           equ	998	;# 
 11718   0003E7                     ADRPT           equ	999	;# 
 11719   0003E8                     ADPREV          equ	1000	;# 
 11720   0003E8                     ADPREVL         equ	1000	;# 
 11721   0003E9                     ADPREVH         equ	1001	;# 
 11722   0003EA                     ADRES           equ	1002	;# 
 11723   0003EA                     ADRESL          equ	1002	;# 
 11724   0003EB                     ADRESH          equ	1003	;# 
 11725   0003EC                     ADPCH           equ	1004	;# 
 11726   0003EE                     ADACQ           equ	1006	;# 
 11727   0003EE                     ADACQL          equ	1006	;# 
 11728   0003EF                     ADACQH          equ	1007	;# 
 11729   0003F0                     ADCAP           equ	1008	;# 
 11730   0003F1                     ADPRE           equ	1009	;# 
 11731   0003F1                     ADPREL          equ	1009	;# 
 11732   0003F2                     ADPREH          equ	1010	;# 
 11733   0003F3                     ADCON0          equ	1011	;# 
 11734   0003F4                     ADCON1          equ	1012	;# 
 11735   0003F5                     ADCON2          equ	1013	;# 
 11736   0003F6                     ADCON3          equ	1014	;# 
 11737   0003F7                     ADSTAT          equ	1015	;# 
 11738   0003F8                     ADREF           equ	1016	;# 
 11739   0003F9                     ADACT           equ	1017	;# 
 11740   0003FA                     ADCLK           equ	1018	;# 
 11741   0003FB                     ADCTX           equ	1019	;# 
 11742   0003FC                     ADCSEL1         equ	1020	;# 
 11743   0003FD                     ADCSEL2         equ	1021	;# 
 11744   0003FE                     ADCSEL3         equ	1022	;# 
 11745   0003FF                     ADCSEL4         equ	1023	;# 
 11746   000400                     ANSELA          equ	1024	;# 
 11747   000401                     WPUA            equ	1025	;# 
 11748   000402                     ODCONA          equ	1026	;# 
 11749   000403                     SLRCONA         equ	1027	;# 
 11750   000404                     INLVLA          equ	1028	;# 
 11751   000405                     IOCAP           equ	1029	;# 
 11752   000406                     IOCAN           equ	1030	;# 
 11753   000407                     IOCAF           equ	1031	;# 
 11754   000408                     ANSELB          equ	1032	;# 
 11755   000409                     WPUB            equ	1033	;# 
 11756   00040A                     ODCONB          equ	1034	;# 
 11757   00040B                     SLRCONB         equ	1035	;# 
 11758   00040C                     INLVLB          equ	1036	;# 
 11759   00040D                     IOCBP           equ	1037	;# 
 11760   00040E                     IOCBN           equ	1038	;# 
 11761   00040F                     IOCBF           equ	1039	;# 
 11762   000410                     ANSELC          equ	1040	;# 
 11763   000411                     WPUC            equ	1041	;# 
 11764   000412                     ODCONC          equ	1042	;# 
 11765   000413                     SLRCONC         equ	1043	;# 
 11766   000414                     INLVLC          equ	1044	;# 
 11767   000415                     IOCCP           equ	1045	;# 
 11768   000416                     IOCCN           equ	1046	;# 
 11769   000417                     IOCCF           equ	1047	;# 
 11770   000421                     WPUE            equ	1057	;# 
 11771   000424                     INLVLE          equ	1060	;# 
 11772   000425                     IOCEP           equ	1061	;# 
 11773   000426                     IOCEN           equ	1062	;# 
 11774   000427                     IOCEF           equ	1063	;# 
 11775   000440                     NCO1ACC         equ	1088	;# 
 11776   000440                     NCO1ACCL        equ	1088	;# 
 11777   000441                     NCO1ACCH        equ	1089	;# 
 11778   000442                     NCO1ACCU        equ	1090	;# 
 11779   000443                     NCO1INC         equ	1091	;# 
 11780   000443                     NCO1INCL        equ	1091	;# 
 11781   000444                     NCO1INCH        equ	1092	;# 
 11782   000445                     NCO1INCU        equ	1093	;# 
 11783   000446                     NCO1CON         equ	1094	;# 
 11784   000447                     NCO1CLK         equ	1095	;# 
 11785   000448                     NCO2ACC         equ	1096	;# 
 11786   000448                     NCO2ACCL        equ	1096	;# 
 11787   000449                     NCO2ACCH        equ	1097	;# 
 11788   00044A                     NCO2ACCU        equ	1098	;# 
 11789   00044B                     NCO2INC         equ	1099	;# 
 11790   00044B                     NCO2INCL        equ	1099	;# 
 11791   00044C                     NCO2INCH        equ	1100	;# 
 11792   00044D                     NCO2INCU        equ	1101	;# 
 11793   00044E                     NCO2CON         equ	1102	;# 
 11794   00044F                     NCO2CLK         equ	1103	;# 
 11795   000450                     NCO3ACC         equ	1104	;# 
 11796   000450                     NCO3ACCL        equ	1104	;# 
 11797   000451                     NCO3ACCH        equ	1105	;# 
 11798   000452                     NCO3ACCU        equ	1106	;# 
 11799   000453                     NCO3INC         equ	1107	;# 
 11800   000453                     NCO3INCL        equ	1107	;# 
 11801   000454                     NCO3INCH        equ	1108	;# 
 11802   000455                     NCO3INCU        equ	1109	;# 
 11803   000456                     NCO3CON         equ	1110	;# 
 11804   000457                     NCO3CLK         equ	1111	;# 
 11805   000458                     FSCMCON         equ	1112	;# 
 11806   000459                     IVTLOCK         equ	1113	;# 
 11807   00045A                     IVTAD           equ	1114	;# 
 11808   00045A                     IVTADL          equ	1114	;# 
 11809   00045B                     IVTADH          equ	1115	;# 
 11810   00045C                     IVTADU          equ	1116	;# 
 11811   00045D                     IVTBASE         equ	1117	;# 
 11812   00045D                     IVTBASEL        equ	1117	;# 
 11813   00045E                     IVTBASEH        equ	1118	;# 
 11814   00045F                     IVTBASEU        equ	1119	;# 
 11815   000460                     PWM1ERS         equ	1120	;# 
 11816   000461                     PWM1CLK         equ	1121	;# 
 11817   000462                     PWM1LDS         equ	1122	;# 
 11818   000463                     PWM1PR          equ	1123	;# 
 11819   000463                     PWM1PRL         equ	1123	;# 
 11820   000464                     PWM1PRH         equ	1124	;# 
 11821   000465                     PWM1CPRE        equ	1125	;# 
 11822   000466                     PWM1PIPOS       equ	1126	;# 
 11823   000467                     PWM1GIR         equ	1127	;# 
 11824   000468                     PWM1GIE         equ	1128	;# 
 11825   000469                     PWM1CON         equ	1129	;# 
 11826   00046A                     PWM1S1CFG       equ	1130	;# 
 11827   00046B                     PWM1S1P1        equ	1131	;# 
 11828   00046B                     PWM1S1P1L       equ	1131	;# 
 11829   00046C                     PWM1S1P1H       equ	1132	;# 
 11830   00046D                     PWM1S1P2        equ	1133	;# 
 11831   00046D                     PWM1S1P2L       equ	1133	;# 
 11832   00046E                     PWM1S1P2H       equ	1134	;# 
 11833   00046F                     PWM2ERS         equ	1135	;# 
 11834   000470                     PWM2CLK         equ	1136	;# 
 11835   000471                     PWM2LDS         equ	1137	;# 
 11836   000472                     PWM2PR          equ	1138	;# 
 11837   000472                     PWM2PRL         equ	1138	;# 
 11838   000473                     PWM2PRH         equ	1139	;# 
 11839   000474                     PWM2CPRE        equ	1140	;# 
 11840   000475                     PWM2PIPOS       equ	1141	;# 
 11841   000476                     PWM2GIR         equ	1142	;# 
 11842   000477                     PWM2GIE         equ	1143	;# 
 11843   000478                     PWM2CON         equ	1144	;# 
 11844   000479                     PWM2S1CFG       equ	1145	;# 
 11845   00047A                     PWM2S1P1        equ	1146	;# 
 11846   00047A                     PWM2S1P1L       equ	1146	;# 
 11847   00047B                     PWM2S1P1H       equ	1147	;# 
 11848   00047C                     PWM2S1P2        equ	1148	;# 
 11849   00047C                     PWM2S1P2L       equ	1148	;# 
 11850   00047D                     PWM2S1P2H       equ	1149	;# 
 11851   00047E                     PWM3ERS         equ	1150	;# 
 11852   00047F                     PWM3CLK         equ	1151	;# 
 11853   000480                     PWM3LDS         equ	1152	;# 
 11854   000481                     PWM3PR          equ	1153	;# 
 11855   000481                     PWM3PRL         equ	1153	;# 
 11856   000482                     PWM3PRH         equ	1154	;# 
 11857   000483                     PWM3CPRE        equ	1155	;# 
 11858   000484                     PWM3PIPOS       equ	1156	;# 
 11859   000485                     PWM3GIR         equ	1157	;# 
 11860   000486                     PWM3GIE         equ	1158	;# 
 11861   000487                     PWM3CON         equ	1159	;# 
 11862   000488                     PWM3S1CFG       equ	1160	;# 
 11863   000489                     PWM3S1P1        equ	1161	;# 
 11864   000489                     PWM3S1P1L       equ	1161	;# 
 11865   00048A                     PWM3S1P1H       equ	1162	;# 
 11866   00048B                     PWM3S1P2        equ	1163	;# 
 11867   00048B                     PWM3S1P2L       equ	1163	;# 
 11868   00048C                     PWM3S1P2H       equ	1164	;# 
 11869   00048D                     PWM4ERS         equ	1165	;# 
 11870   00048E                     PWM4CLK         equ	1166	;# 
 11871   00048F                     PWM4LDS         equ	1167	;# 
 11872   000490                     PWM4PR          equ	1168	;# 
 11873   000490                     PWM4PRL         equ	1168	;# 
 11874   000491                     PWM4PRH         equ	1169	;# 
 11875   000492                     PWM4CPRE        equ	1170	;# 
 11876   000493                     PWM4PIPOS       equ	1171	;# 
 11877   000494                     PWM4GIR         equ	1172	;# 
 11878   000495                     PWM4GIE         equ	1173	;# 
 11879   000496                     PWM4CON         equ	1174	;# 
 11880   000497                     PWM4S1CFG       equ	1175	;# 
 11881   000498                     PWM4S1P1        equ	1176	;# 
 11882   000498                     PWM4S1P1L       equ	1176	;# 
 11883   000499                     PWM4S1P1H       equ	1177	;# 
 11884   00049A                     PWM4S1P2        equ	1178	;# 
 11885   00049A                     PWM4S1P2L       equ	1178	;# 
 11886   00049B                     PWM4S1P2H       equ	1179	;# 
 11887   00049C                     PWMLOAD         equ	1180	;# 
 11888   00049D                     PWMEN           equ	1181	;# 
 11889   00049E                     PIE0            equ	1182	;# 
 11890   00049F                     PIE1            equ	1183	;# 
 11891   0004A0                     PIE2            equ	1184	;# 
 11892   0004A1                     PIE3            equ	1185	;# 
 11893   0004A2                     PIE4            equ	1186	;# 
 11894   0004A3                     PIE5            equ	1187	;# 
 11895   0004A4                     PIE6            equ	1188	;# 
 11896   0004A5                     PIE7            equ	1189	;# 
 11897   0004A6                     PIE8            equ	1190	;# 
 11898   0004A7                     PIE9            equ	1191	;# 
 11899   0004A8                     PIE10           equ	1192	;# 
 11900   0004A9                     PIE11           equ	1193	;# 
 11901   0004AA                     PIE12           equ	1194	;# 
 11902   0004AB                     PIE13           equ	1195	;# 
 11903   0004AC                     PIE14           equ	1196	;# 
 11904   0004AD                     PIE15           equ	1197	;# 
 11905   0004AE                     PIR0            equ	1198	;# 
 11906   0004AF                     PIR1            equ	1199	;# 
 11907   0004B0                     PIR2            equ	1200	;# 
 11908   0004B1                     PIR3            equ	1201	;# 
 11909   0004B2                     PIR4            equ	1202	;# 
 11910   0004B3                     PIR5            equ	1203	;# 
 11911   0004B4                     PIR6            equ	1204	;# 
 11912   0004B5                     PIR7            equ	1205	;# 
 11913   0004B6                     PIR8            equ	1206	;# 
 11914   0004B7                     PIR9            equ	1207	;# 
 11915   0004B8                     PIR10           equ	1208	;# 
 11916   0004B9                     PIR11           equ	1209	;# 
 11917   0004BA                     PIR12           equ	1210	;# 
 11918   0004BB                     PIR13           equ	1211	;# 
 11919   0004BC                     PIR14           equ	1212	;# 
 11920   0004BD                     PIR15           equ	1213	;# 
 11921   0004BE                     LATA            equ	1214	;# 
 11922   0004BF                     LATB            equ	1215	;# 
 11923   0004C0                     LATC            equ	1216	;# 
 11924   0004C6                     TRISA           equ	1222	;# 
 11925   0004C7                     TRISB           equ	1223	;# 
 11926   0004C8                     TRISC           equ	1224	;# 
 11927   0004CA                     TRISE           equ	1226	;# 
 11928   0004CE                     PORTA           equ	1230	;# 
 11929   0004CF                     PORTB           equ	1231	;# 
 11930   0004D0                     PORTC           equ	1232	;# 
 11931   0004D2                     PORTE           equ	1234	;# 
 11932   0004D6                     INTCON0         equ	1238	;# 
 11933   0004D7                     INTCON1         equ	1239	;# 
 11934   0004D8                     STATUS          equ	1240	;# 
 11935   0004D9                     FSR2            equ	1241	;# 
 11936   0004D9                     FSR2L           equ	1241	;# 
 11937   0004DA                     FSR2H           equ	1242	;# 
 11938   0004DB                     PLUSW2          equ	1243	;# 
 11939   0004DC                     PREINC2         equ	1244	;# 
 11940   0004DD                     POSTDEC2        equ	1245	;# 
 11941   0004DE                     POSTINC2        equ	1246	;# 
 11942   0004DF                     INDF2           equ	1247	;# 
 11943   0004E0                     BSR             equ	1248	;# 
 11944   0004E1                     FSR1            equ	1249	;# 
 11945   0004E1                     FSR1L           equ	1249	;# 
 11946   0004E2                     FSR1H           equ	1250	;# 
 11947   0004E3                     PLUSW1          equ	1251	;# 
 11948   0004E4                     PREINC1         equ	1252	;# 
 11949   0004E5                     POSTDEC1        equ	1253	;# 
 11950   0004E6                     POSTINC1        equ	1254	;# 
 11951   0004E7                     INDF1           equ	1255	;# 
 11952   0004E8                     WREG            equ	1256	;# 
 11953   0004E9                     FSR0            equ	1257	;# 
 11954   0004E9                     FSR0L           equ	1257	;# 
 11955   0004EA                     FSR0H           equ	1258	;# 
 11956   0004EB                     PLUSW0          equ	1259	;# 
 11957   0004EC                     PREINC0         equ	1260	;# 
 11958   0004ED                     POSTDEC0        equ	1261	;# 
 11959   0004EE                     POSTINC0        equ	1262	;# 
 11960   0004EF                     INDF0           equ	1263	;# 
 11961   0004F0                     PCON0           equ	1264	;# 
 11962   0004F1                     PCON1           equ	1265	;# 
 11963   0004F2                     CPUDOZE         equ	1266	;# 
 11964   0004F3                     PROD            equ	1267	;# 
 11965   0004F3                     PRODL           equ	1267	;# 
 11966   0004F4                     PRODH           equ	1268	;# 
 11967   0004F5                     TABLAT          equ	1269	;# 
 11968   0004F6                     TBLPTR          equ	1270	;# 
 11969   0004F6                     TBLPTRL         equ	1270	;# 
 11970   0004F7                     TBLPTRH         equ	1271	;# 
 11971   0004F8                     TBLPTRU         equ	1272	;# 
 11972   0004F9                     PCLAT           equ	1273	;# 
 11973   0004F9                     PCL             equ	1273	;# 
 11974   0004FA                     PCLATH          equ	1274	;# 
 11975   0004FB                     PCLATU          equ	1275	;# 
 11976   0004FC                     STKPTR          equ	1276	;# 
 11977   0004FD                     TOS             equ	1277	;# 
 11978   0004FD                     TOSL            equ	1277	;# 
 11979   0004FE                     TOSH            equ	1278	;# 
 11980   0004FF                     TOSU            equ	1279	;# 
 11981   000038                     BOOTREG         equ	56	;# 
 11982   000039                     CLKRCON         equ	57	;# 
 11983   00003A                     CLKRCLK         equ	58	;# 
 11984   000040                     NVMCON0         equ	64	;# 
 11985   000041                     NVMCON1         equ	65	;# 
 11986   000042                     NVMLOCK         equ	66	;# 
 11987   000043                     NVMADR          equ	67	;# 
 11988   000043                     NVMADRL         equ	67	;# 
 11989   000044                     NVMADRH         equ	68	;# 
 11990   000045                     NVMADRU         equ	69	;# 
 11991   000046                     NVMDAT          equ	70	;# 
 11992   000046                     NVMDATL         equ	70	;# 
 11993   000047                     NVMDATH         equ	71	;# 
 11994   000048                     VREGCON         equ	72	;# 
 11995   000049                     BORCON          equ	73	;# 
 11996   00004A                     HLVDCON0        equ	74	;# 
 11997   00004B                     HLVDCON1        equ	75	;# 
 11998   00004C                     ZCDCON          equ	76	;# 
 11999   000060                     PMD0            equ	96	;# 
 12000   000061                     PMD1            equ	97	;# 
 12001   000062                     PMD2            equ	98	;# 
 12002   000063                     PMD3            equ	99	;# 
 12003   000064                     PMD4            equ	100	;# 
 12004   000065                     PMD5            equ	101	;# 
 12005   000066                     PMD6            equ	102	;# 
 12006   000067                     PMD7            equ	103	;# 
 12007   000068                     PMD8            equ	104	;# 
 12008   00006A                     MD1CON0         equ	106	;# 
 12009   00006B                     MD1CON1         equ	107	;# 
 12010   00006C                     MD1SRC          equ	108	;# 
 12011   00006D                     MD1CARL         equ	109	;# 
 12012   00006E                     MD1CARH         equ	110	;# 
 12013   00006F                     CMOUT           equ	111	;# 
 12014   000070                     CM1CON0         equ	112	;# 
 12015   000071                     CM1CON1         equ	113	;# 
 12016   000072                     CM1NCH          equ	114	;# 
 12017   000073                     CM1PCH          equ	115	;# 
 12018   000074                     CM2CON0         equ	116	;# 
 12019   000075                     CM2CON1         equ	117	;# 
 12020   000076                     CM2NCH          equ	118	;# 
 12021   000077                     CM2PCH          equ	119	;# 
 12022   000078                     WDTCON0         equ	120	;# 
 12023   000079                     WDTCON1         equ	121	;# 
 12024   00007A                     WDTPSL          equ	122	;# 
 12025   00007B                     WDTPSH          equ	123	;# 
 12026   00007C                     WDTTMR          equ	124	;# 
 12027   00007D                     DAC1DAT         equ	125	;# 
 12028   00007D                     DAC1DATL        equ	125	;# 
 12029   00007F                     DAC1CON         equ	127	;# 
 12030   000080                     SPI1RXB         equ	128	;# 
 12031   000081                     SPI1TXB         equ	129	;# 
 12032   000082                     SPI1TCNT        equ	130	;# 
 12033   000082                     SPI1TCNTL       equ	130	;# 
 12034   000083                     SPI1TCNTH       equ	131	;# 
 12035   000084                     SPI1CON0        equ	132	;# 
 12036   000085                     SPI1CON1        equ	133	;# 
 12037   000086                     SPI1CON2        equ	134	;# 
 12038   000087                     SPI1STATUS      equ	135	;# 
 12039   000088                     SPI1TWIDTH      equ	136	;# 
 12040   000089                     SPI1BAUD        equ	137	;# 
 12041   00008A                     SPI1INTF        equ	138	;# 
 12042   00008B                     SPI1INTE        equ	139	;# 
 12043   00008C                     SPI1CLK         equ	140	;# 
 12044   00008D                     SPI2RXB         equ	141	;# 
 12045   00008E                     SPI2TXB         equ	142	;# 
 12046   00008F                     SPI2TCNT        equ	143	;# 
 12047   00008F                     SPI2TCNTL       equ	143	;# 
 12048   000090                     SPI2TCNTH       equ	144	;# 
 12049   000091                     SPI2CON0        equ	145	;# 
 12050   000092                     SPI2CON1        equ	146	;# 
 12051   000093                     SPI2CON2        equ	147	;# 
 12052   000094                     SPI2STATUS      equ	148	;# 
 12053   000095                     SPI2TWIDTH      equ	149	;# 
 12054   000096                     SPI2BAUD        equ	150	;# 
 12055   000097                     SPI2INTF        equ	151	;# 
 12056   000098                     SPI2INTE        equ	152	;# 
 12057   000099                     SPI2CLK         equ	153	;# 
 12058   0000AC                     ACTCON          equ	172	;# 
 12059   0000AD                     OSCCON1         equ	173	;# 
 12060   0000AE                     OSCCON2         equ	174	;# 
 12061   0000AF                     OSCCON3         equ	175	;# 
 12062   0000B0                     OSCTUNE         equ	176	;# 
 12063   0000B1                     OSCFRQ          equ	177	;# 
 12064   0000B1                     OSCFREQ         equ	177	;# 
 12065   0000B2                     OSCSTAT         equ	178	;# 
 12066   0000B2                     OSCSTAT1        equ	178	;# 
 12067   0000B3                     OSCEN           equ	179	;# 
 12068   0000B4                     PRLOCK          equ	180	;# 
 12069   0000B5                     SCANPR          equ	181	;# 
 12070   0000B6                     DMA1PR          equ	182	;# 
 12071   0000B7                     DMA2PR          equ	183	;# 
 12072   0000B8                     DMA3PR          equ	184	;# 
 12073   0000B9                     DMA4PR          equ	185	;# 
 12074   0000BA                     DMA5PR          equ	186	;# 
 12075   0000BB                     DMA6PR          equ	187	;# 
 12076   0000BC                     DMA7PR          equ	188	;# 
 12077   0000BD                     DMA8PR          equ	189	;# 
 12078   0000BE                     MAINPR          equ	190	;# 
 12079   0000BF                     ISRPR           equ	191	;# 
 12080   0000D4                     CLCDATA         equ	212	;# 
 12081   0000D5                     CLCSELECT       equ	213	;# 
 12082   0000D6                     CLCnCON         equ	214	;# 
 12083   0000D7                     CLCnPOL         equ	215	;# 
 12084   0000D8                     CLCnSEL0        equ	216	;# 
 12085   0000D9                     CLCnSEL1        equ	217	;# 
 12086   0000DA                     CLCnSEL2        equ	218	;# 
 12087   0000DB                     CLCnSEL3        equ	219	;# 
 12088   0000DC                     CLCnGLS0        equ	220	;# 
 12089   0000DD                     CLCnGLS1        equ	221	;# 
 12090   0000DE                     CLCnGLS2        equ	222	;# 
 12091   0000DF                     CLCnGLS3        equ	223	;# 
 12092   0000E8                     DMASELECT       equ	232	;# 
 12093   0000E9                     DMAnBUF         equ	233	;# 
 12094   0000EA                     DMAnDCNT        equ	234	;# 
 12095   0000EA                     DMAnDCNTL       equ	234	;# 
 12096   0000EB                     DMAnDCNTH       equ	235	;# 
 12097   0000EC                     DMAnDPTR        equ	236	;# 
 12098   0000EC                     DMAnDPTRL       equ	236	;# 
 12099   0000ED                     DMAnDPTRH       equ	237	;# 
 12100   0000EE                     DMAnDSZ         equ	238	;# 
 12101   0000EE                     DMAnDSZL        equ	238	;# 
 12102   0000EF                     DMAnDSZH        equ	239	;# 
 12103   0000F0                     DMAnDSA         equ	240	;# 
 12104   0000F0                     DMAnDSAL        equ	240	;# 
 12105   0000F1                     DMAnDSAH        equ	241	;# 
 12106   0000F2                     DMAnSCNT        equ	242	;# 
 12107   0000F2                     DMAnSCNTL       equ	242	;# 
 12108   0000F3                     DMAnSCNTH       equ	243	;# 
 12109   0000F4                     DMAnSPTR        equ	244	;# 
 12110   0000F4                     DMAnSPTRL       equ	244	;# 
 12111   0000F5                     DMAnSPTRH       equ	245	;# 
 12112   0000F6                     DMAnSPTRU       equ	246	;# 
 12113   0000F7                     DMAnSSZ         equ	247	;# 
 12114   0000F7                     DMAnSSZL        equ	247	;# 
 12115   0000F8                     DMAnSSZH        equ	248	;# 
 12116   0000F9                     DMAnSSA         equ	249	;# 
 12117   0000F9                     DMAnSSAL        equ	249	;# 
 12118   0000FA                     DMAnSSAH        equ	250	;# 
 12119   0000FB                     DMAnSSAU        equ	251	;# 
 12120   0000FC                     DMAnCON0        equ	252	;# 
 12121   0000FD                     DMAnCON1        equ	253	;# 
 12122   0000FE                     DMAnAIRQ        equ	254	;# 
 12123   0000FF                     DMAnSIRQ        equ	255	;# 
 12124   000100                     C1CONL          equ	256	;# 
 12125   000101                     C1CONH          equ	257	;# 
 12126   000102                     C1CONU          equ	258	;# 
 12127   000103                     C1CONT          equ	259	;# 
 12128   000104                     C1NBTCFGL       equ	260	;# 
 12129   000105                     C1NBTCFGH       equ	261	;# 
 12130   000106                     C1NBTCFGU       equ	262	;# 
 12131   000107                     C1NBTCFGT       equ	263	;# 
 12132   000108                     C1DBTCFGL       equ	264	;# 
 12133   000109                     C1DBTCFGH       equ	265	;# 
 12134   00010A                     C1DBTCFGU       equ	266	;# 
 12135   00010B                     C1DBTCFGT       equ	267	;# 
 12136   00010C                     C1TDCL          equ	268	;# 
 12137   00010D                     C1TDCH          equ	269	;# 
 12138   00010E                     C1TDCU          equ	270	;# 
 12139   000110                     C1TBC           equ	272	;# 
 12140   000110                     C1TBCL          equ	272	;# 
 12141   000111                     C1TBCH          equ	273	;# 
 12142   000112                     C1TBCU          equ	274	;# 
 12143   000113                     C1TBCT          equ	275	;# 
 12144   000114                     C1TSCONL        equ	276	;# 
 12145   000115                     C1TSCONH        equ	277	;# 
 12146   000116                     C1TSCONU        equ	278	;# 
 12147   000117                     C1TSCONT        equ	279	;# 
 12148   000118                     C1VECL          equ	280	;# 
 12149   000119                     C1VECH          equ	281	;# 
 12150   00011A                     C1VECU          equ	282	;# 
 12151   00011B                     C1VECT          equ	283	;# 
 12152   00011C                     C1INTL          equ	284	;# 
 12153   00011D                     C1INTH          equ	285	;# 
 12154   00011E                     C1INTU          equ	286	;# 
 12155   00011F                     C1INTT          equ	287	;# 
 12156   000120                     C1RXIF          equ	288	;# 
 12157   000120                     C1RXIFL         equ	288	;# 
 12158   000121                     C1RXIFH         equ	289	;# 
 12159   000122                     C1RXIFU         equ	290	;# 
 12160   000123                     C1RXIFT         equ	291	;# 
 12161   000124                     C1TXIF          equ	292	;# 
 12162   000124                     C1TXIFL         equ	292	;# 
 12163   000125                     C1TXIFH         equ	293	;# 
 12164   000126                     C1TXIFU         equ	294	;# 
 12165   000127                     C1TXIFT         equ	295	;# 
 12166   000128                     C1RXOVIF        equ	296	;# 
 12167   000128                     C1RXOVIFL       equ	296	;# 
 12168   000129                     C1RXOVIFH       equ	297	;# 
 12169   00012A                     C1RXOVIFU       equ	298	;# 
 12170   00012B                     C1RXOVIFT       equ	299	;# 
 12171   00012C                     C1TXATIF        equ	300	;# 
 12172   00012C                     C1TXATIFL       equ	300	;# 
 12173   00012D                     C1TXATIFH       equ	301	;# 
 12174   00012E                     C1TXATIFU       equ	302	;# 
 12175   00012F                     C1TXATIFT       equ	303	;# 
 12176   000130                     C1TXREQ         equ	304	;# 
 12177   000130                     C1TXREQL        equ	304	;# 
 12178   000131                     C1TXREQH        equ	305	;# 
 12179   000132                     C1TXREQU        equ	306	;# 
 12180   000133                     C1TXREQT        equ	307	;# 
 12181   000134                     C1TRECL         equ	308	;# 
 12182   000135                     C1TRECH         equ	309	;# 
 12183   000136                     C1TRECU         equ	310	;# 
 12184   000137                     C1TRECT         equ	311	;# 
 12185   000138                     C1BDIAG0L       equ	312	;# 
 12186   000139                     C1BDIAG0H       equ	313	;# 
 12187   00013C                     C1BDIAG1L       equ	316	;# 
 12188   00013D                     C1BDIAG1H       equ	317	;# 
 12189   00013E                     C1BDIAG1U       equ	318	;# 
 12190   00013F                     C1BDIAG1T       equ	319	;# 
 12191   000140                     C1TEFCONL       equ	320	;# 
 12192   000141                     C1TEFCONH       equ	321	;# 
 12193   000142                     C1TEFCONU       equ	322	;# 
 12194   000143                     C1TEFCONT       equ	323	;# 
 12195   000144                     C1TEFSTAL       equ	324	;# 
 12196   000145                     C1TEFSTAH       equ	325	;# 
 12197   000146                     C1TEFSTAU       equ	326	;# 
 12198   000147                     C1TEFSTAT       equ	327	;# 
 12199   000148                     C1TEFUA         equ	328	;# 
 12200   000148                     C1TEFUAL        equ	328	;# 
 12201   000149                     C1TEFUAH        equ	329	;# 
 12202   00014A                     C1TEFUAU        equ	330	;# 
 12203   00014B                     C1TEFUAT        equ	331	;# 
 12204   00014C                     C1FIFOBA        equ	332	;# 
 12205   00014C                     C1FIFOBAL       equ	332	;# 
 12206   00014D                     C1FIFOBAH       equ	333	;# 
 12207   00014E                     C1FIFOBAU       equ	334	;# 
 12208   00014F                     C1FIFOBAT       equ	335	;# 
 12209   000150                     C1TXQCONL       equ	336	;# 
 12210   000151                     C1TXQCONH       equ	337	;# 
 12211   000152                     C1TXQCONU       equ	338	;# 
 12212   000153                     C1TXQCONT       equ	339	;# 
 12213   000154                     C1TXQSTAL       equ	340	;# 
 12214   000155                     C1TXQSTAH       equ	341	;# 
 12215   000156                     C1TXQSTAU       equ	342	;# 
 12216   000157                     C1TXQSTAT       equ	343	;# 
 12217   000158                     C1TXQUA         equ	344	;# 
 12218   000158                     C1TXQUAL        equ	344	;# 
 12219   000159                     C1TXQUAH        equ	345	;# 
 12220   00015A                     C1TXQUAU        equ	346	;# 
 12221   00015B                     C1TXQUAT        equ	347	;# 
 12222   00015C                     C1FIFOCON1      equ	348	;# 
 12223   00015C                     C1FIFOCON1L     equ	348	;# 
 12224   00015D                     C1FIFOCON1H     equ	349	;# 
 12225   00015E                     C1FIFOCON1U     equ	350	;# 
 12226   00015F                     C1FIFOCON1T     equ	351	;# 
 12227   000160                     C1FIFOSTA1      equ	352	;# 
 12228   000160                     C1FIFOSTA1L     equ	352	;# 
 12229   000161                     C1FIFOSTA1H     equ	353	;# 
 12230   000162                     C1FIFOSTA1U     equ	354	;# 
 12231   000163                     C1FIFOSTA1T     equ	355	;# 
 12232   000164                     C1FIFOUA1       equ	356	;# 
 12233   000164                     C1FIFOUA1L      equ	356	;# 
 12234   000165                     C1FIFOUA1H      equ	357	;# 
 12235   000166                     C1FIFOUA1U      equ	358	;# 
 12236   000167                     C1FIFOUA1T      equ	359	;# 
 12237   000168                     C1FIFOCON2      equ	360	;# 
 12238   000168                     C1FIFOCON2L     equ	360	;# 
 12239   000169                     C1FIFOCON2H     equ	361	;# 
 12240   00016A                     C1FIFOCON2U     equ	362	;# 
 12241   00016B                     C1FIFOCON2T     equ	363	;# 
 12242   00016C                     C1FIFOSTA2      equ	364	;# 
 12243   00016C                     C1FIFOSTA2L     equ	364	;# 
 12244   00016D                     C1FIFOSTA2H     equ	365	;# 
 12245   00016E                     C1FIFOSTA2U     equ	366	;# 
 12246   00016F                     C1FIFOSTA2T     equ	367	;# 
 12247   000170                     C1FIFOUA2       equ	368	;# 
 12248   000170                     C1FIFOUA2L      equ	368	;# 
 12249   000171                     C1FIFOUA2H      equ	369	;# 
 12250   000172                     C1FIFOUA2U      equ	370	;# 
 12251   000173                     C1FIFOUA2T      equ	371	;# 
 12252   000174                     C1FIFOCON3      equ	372	;# 
 12253   000174                     C1FIFOCON3L     equ	372	;# 
 12254   000175                     C1FIFOCON3H     equ	373	;# 
 12255   000176                     C1FIFOCON3U     equ	374	;# 
 12256   000177                     C1FIFOCON3T     equ	375	;# 
 12257   000178                     C1FIFOSTA3      equ	376	;# 
 12258   000178                     C1FIFOSTA3L     equ	376	;# 
 12259   000179                     C1FIFOSTA3H     equ	377	;# 
 12260   00017A                     C1FIFOSTA3U     equ	378	;# 
 12261   00017B                     C1FIFOSTA3T     equ	379	;# 
 12262   00017C                     C1FIFOUA3       equ	380	;# 
 12263   00017C                     C1FIFOUA3L      equ	380	;# 
 12264   00017D                     C1FIFOUA3H      equ	381	;# 
 12265   00017E                     C1FIFOUA3U      equ	382	;# 
 12266   00017F                     C1FIFOUA3T      equ	383	;# 
 12267   000180                     C1FLTCON0L      equ	384	;# 
 12268   000181                     C1FLTCON0H      equ	385	;# 
 12269   000182                     C1FLTCON0U      equ	386	;# 
 12270   000183                     C1FLTCON0T      equ	387	;# 
 12271   000184                     C1FLTCON1L      equ	388	;# 
 12272   000185                     C1FLTCON1H      equ	389	;# 
 12273   000186                     C1FLTCON1U      equ	390	;# 
 12274   000187                     C1FLTCON1T      equ	391	;# 
 12275   000188                     C1FLTCON2L      equ	392	;# 
 12276   000189                     C1FLTCON2H      equ	393	;# 
 12277   00018A                     C1FLTCON2U      equ	394	;# 
 12278   00018B                     C1FLTCON2T      equ	395	;# 
 12279   00018C                     C1FLTOBJ0       equ	396	;# 
 12280   00018C                     C1FLTOBJ0L      equ	396	;# 
 12281   00018D                     C1FLTOBJ0H      equ	397	;# 
 12282   00018E                     C1FLTOBJ0U      equ	398	;# 
 12283   00018F                     C1FLTOBJ0T      equ	399	;# 
 12284   000190                     C1MASK0         equ	400	;# 
 12285   000190                     C1MASK0L        equ	400	;# 
 12286   000191                     C1MASK0H        equ	401	;# 
 12287   000192                     C1MASK0U        equ	402	;# 
 12288   000193                     C1MASK0T        equ	403	;# 
 12289   000194                     C1FLTOBJ1       equ	404	;# 
 12290   000194                     C1FLTOBJ1L      equ	404	;# 
 12291   000195                     C1FLTOBJ1H      equ	405	;# 
 12292   000196                     C1FLTOBJ1U      equ	406	;# 
 12293   000197                     C1FLTOBJ1T      equ	407	;# 
 12294   000198                     C1MASK1         equ	408	;# 
 12295   000198                     C1MASK1L        equ	408	;# 
 12296   000199                     C1MASK1H        equ	409	;# 
 12297   00019A                     C1MASK1U        equ	410	;# 
 12298   00019B                     C1MASK1T        equ	411	;# 
 12299   00019C                     C1FLTOBJ2       equ	412	;# 
 12300   00019C                     C1FLTOBJ2L      equ	412	;# 
 12301   00019D                     C1FLTOBJ2H      equ	413	;# 
 12302   00019E                     C1FLTOBJ2U      equ	414	;# 
 12303   00019F                     C1FLTOBJ2T      equ	415	;# 
 12304   0001A0                     C1MASK2         equ	416	;# 
 12305   0001A0                     C1MASK2L        equ	416	;# 
 12306   0001A1                     C1MASK2H        equ	417	;# 
 12307   0001A2                     C1MASK2U        equ	418	;# 
 12308   0001A3                     C1MASK2T        equ	419	;# 
 12309   0001A4                     C1FLTOBJ3       equ	420	;# 
 12310   0001A4                     C1FLTOBJ3L      equ	420	;# 
 12311   0001A5                     C1FLTOBJ3H      equ	421	;# 
 12312   0001A6                     C1FLTOBJ3U      equ	422	;# 
 12313   0001A7                     C1FLTOBJ3T      equ	423	;# 
 12314   0001A8                     C1MASK3         equ	424	;# 
 12315   0001A8                     C1MASK3L        equ	424	;# 
 12316   0001A9                     C1MASK3H        equ	425	;# 
 12317   0001AA                     C1MASK3U        equ	426	;# 
 12318   0001AB                     C1MASK3T        equ	427	;# 
 12319   0001AC                     C1FLTOBJ4       equ	428	;# 
 12320   0001AC                     C1FLTOBJ4L      equ	428	;# 
 12321   0001AD                     C1FLTOBJ4H      equ	429	;# 
 12322   0001AE                     C1FLTOBJ4U      equ	430	;# 
 12323   0001AF                     C1FLTOBJ4T      equ	431	;# 
 12324   0001B0                     C1MASK4         equ	432	;# 
 12325   0001B0                     C1MASK4L        equ	432	;# 
 12326   0001B1                     C1MASK4H        equ	433	;# 
 12327   0001B2                     C1MASK4U        equ	434	;# 
 12328   0001B3                     C1MASK4T        equ	435	;# 
 12329   0001B4                     C1FLTOBJ5       equ	436	;# 
 12330   0001B4                     C1FLTOBJ5L      equ	436	;# 
 12331   0001B5                     C1FLTOBJ5H      equ	437	;# 
 12332   0001B6                     C1FLTOBJ5U      equ	438	;# 
 12333   0001B7                     C1FLTOBJ5T      equ	439	;# 
 12334   0001B8                     C1MASK5         equ	440	;# 
 12335   0001B8                     C1MASK5L        equ	440	;# 
 12336   0001B9                     C1MASK5H        equ	441	;# 
 12337   0001BA                     C1MASK5U        equ	442	;# 
 12338   0001BB                     C1MASK5T        equ	443	;# 
 12339   0001BC                     C1FLTOBJ6       equ	444	;# 
 12340   0001BC                     C1FLTOBJ6L      equ	444	;# 
 12341   0001BD                     C1FLTOBJ6H      equ	445	;# 
 12342   0001BE                     C1FLTOBJ6U      equ	446	;# 
 12343   0001BF                     C1FLTOBJ6T      equ	447	;# 
 12344   0001C0                     C1MASK6         equ	448	;# 
 12345   0001C0                     C1MASK6L        equ	448	;# 
 12346   0001C1                     C1MASK6H        equ	449	;# 
 12347   0001C2                     C1MASK6U        equ	450	;# 
 12348   0001C3                     C1MASK6T        equ	451	;# 
 12349   0001C4                     C1FLTOBJ7       equ	452	;# 
 12350   0001C4                     C1FLTOBJ7L      equ	452	;# 
 12351   0001C5                     C1FLTOBJ7H      equ	453	;# 
 12352   0001C6                     C1FLTOBJ7U      equ	454	;# 
 12353   0001C7                     C1FLTOBJ7T      equ	455	;# 
 12354   0001C8                     C1MASK7         equ	456	;# 
 12355   0001C8                     C1MASK7L        equ	456	;# 
 12356   0001C9                     C1MASK7H        equ	457	;# 
 12357   0001CA                     C1MASK7U        equ	458	;# 
 12358   0001CB                     C1MASK7T        equ	459	;# 
 12359   0001CC                     C1FLTOBJ8       equ	460	;# 
 12360   0001CC                     C1FLTOBJ8L      equ	460	;# 
 12361   0001CD                     C1FLTOBJ8H      equ	461	;# 
 12362   0001CE                     C1FLTOBJ8U      equ	462	;# 
 12363   0001CF                     C1FLTOBJ8T      equ	463	;# 
 12364   0001D0                     C1MASK8         equ	464	;# 
 12365   0001D0                     C1MASK8L        equ	464	;# 
 12366   0001D1                     C1MASK8H        equ	465	;# 
 12367   0001D2                     C1MASK8U        equ	466	;# 
 12368   0001D3                     C1MASK8T        equ	467	;# 
 12369   0001D4                     C1FLTOBJ9       equ	468	;# 
 12370   0001D4                     C1FLTOBJ9L      equ	468	;# 
 12371   0001D5                     C1FLTOBJ9H      equ	469	;# 
 12372   0001D6                     C1FLTOBJ9U      equ	470	;# 
 12373   0001D7                     C1FLTOBJ9T      equ	471	;# 
 12374   0001D8                     C1MASK9         equ	472	;# 
 12375   0001D8                     C1MASK9L        equ	472	;# 
 12376   0001D9                     C1MASK9H        equ	473	;# 
 12377   0001DA                     C1MASK9U        equ	474	;# 
 12378   0001DB                     C1MASK9T        equ	475	;# 
 12379   0001DC                     C1FLTOBJ10      equ	476	;# 
 12380   0001DC                     C1FLTOBJ10L     equ	476	;# 
 12381   0001DD                     C1FLTOBJ10H     equ	477	;# 
 12382   0001DE                     C1FLTOBJ10U     equ	478	;# 
 12383   0001DF                     C1FLTOBJ10T     equ	479	;# 
 12384   0001E0                     C1MASK10        equ	480	;# 
 12385   0001E0                     C1MASK10L       equ	480	;# 
 12386   0001E1                     C1MASK10H       equ	481	;# 
 12387   0001E2                     C1MASK10U       equ	482	;# 
 12388   0001E3                     C1MASK10T       equ	483	;# 
 12389   0001E4                     C1FLTOBJ11      equ	484	;# 
 12390   0001E4                     C1FLTOBJ11L     equ	484	;# 
 12391   0001E5                     C1FLTOBJ11H     equ	485	;# 
 12392   0001E6                     C1FLTOBJ11U     equ	486	;# 
 12393   0001E7                     C1FLTOBJ11T     equ	487	;# 
 12394   0001E8                     C1MASK11        equ	488	;# 
 12395   0001E8                     C1MASK11L       equ	488	;# 
 12396   0001E9                     C1MASK11H       equ	489	;# 
 12397   0001EA                     C1MASK11U       equ	490	;# 
 12398   0001EB                     C1MASK11T       equ	491	;# 
 12399   000200                     PPSLOCK         equ	512	;# 
 12400   000201                     RA0PPS          equ	513	;# 
 12401   000202                     RA1PPS          equ	514	;# 
 12402   000203                     RA2PPS          equ	515	;# 
 12403   000204                     RA3PPS          equ	516	;# 
 12404   000205                     RA4PPS          equ	517	;# 
 12405   000206                     RA5PPS          equ	518	;# 
 12406   000207                     RA6PPS          equ	519	;# 
 12407   000208                     RA7PPS          equ	520	;# 
 12408   000209                     RB0PPS          equ	521	;# 
 12409   00020A                     RB1PPS          equ	522	;# 
 12410   00020B                     RB2PPS          equ	523	;# 
 12411   00020C                     RB3PPS          equ	524	;# 
 12412   00020D                     RB4PPS          equ	525	;# 
 12413   00020E                     RB5PPS          equ	526	;# 
 12414   00020F                     RB6PPS          equ	527	;# 
 12415   000210                     RB7PPS          equ	528	;# 
 12416   000211                     RC0PPS          equ	529	;# 
 12417   000212                     RC1PPS          equ	530	;# 
 12418   000213                     RC2PPS          equ	531	;# 
 12419   000214                     RC3PPS          equ	532	;# 
 12420   000215                     RC4PPS          equ	533	;# 
 12421   000216                     RC5PPS          equ	534	;# 
 12422   000217                     RC6PPS          equ	535	;# 
 12423   000218                     RC7PPS          equ	536	;# 
 12424   00023D                     CANRXPPS        equ	573	;# 
 12425   00023E                     INT0PPS         equ	574	;# 
 12426   00023F                     INT1PPS         equ	575	;# 
 12427   000240                     INT2PPS         equ	576	;# 
 12428   000241                     T0CKIPPS        equ	577	;# 
 12429   000242                     T1CKIPPS        equ	578	;# 
 12430   000243                     T1GPPS          equ	579	;# 
 12431   000244                     T3CKIPPS        equ	580	;# 
 12432   000245                     T3GPPS          equ	581	;# 
 12433   000246                     T5CKIPPS        equ	582	;# 
 12434   000247                     T5GPPS          equ	583	;# 
 12435   000248                     T2INPPS         equ	584	;# 
 12436   000249                     T4INPPS         equ	585	;# 
 12437   00024A                     T6INPPS         equ	586	;# 
 12438   00024B                     TUIN0PPS        equ	587	;# 
 12439   00024C                     TUIN1PPS        equ	588	;# 
 12440   00024F                     CCP1PPS         equ	591	;# 
 12441   000250                     CCP2PPS         equ	592	;# 
 12442   000251                     CCP3PPS         equ	593	;# 
 12443   000253                     PWM1ERSPPS      equ	595	;# 
 12444   000254                     PWM2ERSPPS      equ	596	;# 
 12445   000255                     PWM3ERSPPS      equ	597	;# 
 12446   000256                     PWM4ERSPPS      equ	598	;# 
 12447   000257                     PWMIN0PPS       equ	599	;# 
 12448   000258                     PWMIN1PPS       equ	600	;# 
 12449   000259                     SMT1WINPPS      equ	601	;# 
 12450   00025A                     SMT1SIGPPS      equ	602	;# 
 12451   00025B                     CWG1PPS         equ	603	;# 
 12452   00025B                     CWG1INPPS       equ	603	;# 
 12453   00025C                     CWG2PPS         equ	604	;# 
 12454   00025C                     CWG2INPPS       equ	604	;# 
 12455   00025D                     CWG3PPS         equ	605	;# 
 12456   00025D                     CWG3INPPS       equ	605	;# 
 12457   00025E                     MD1CARLPPS      equ	606	;# 
 12458   00025E                     MDCARLPPS       equ	606	;# 
 12459   00025F                     MD1CARHPPS      equ	607	;# 
 12460   00025F                     MDCARHPPS       equ	607	;# 
 12461   000260                     MD1SRCPPS       equ	608	;# 
 12462   000260                     MDSRCPPS        equ	608	;# 
 12463   000261                     CLCIN0PPS       equ	609	;# 
 12464   000262                     CLCIN1PPS       equ	610	;# 
 12465   000263                     CLCIN2PPS       equ	611	;# 
 12466   000264                     CLCIN3PPS       equ	612	;# 
 12467   000265                     CLCIN4PPS       equ	613	;# 
 12468   000266                     CLCIN5PPS       equ	614	;# 
 12469   000267                     CLCIN6PPS       equ	615	;# 
 12470   000268                     CLCIN7PPS       equ	616	;# 
 12471   000269                     ADACTPPS        equ	617	;# 
 12472   00026A                     SPI1SCKPPS      equ	618	;# 
 12473   00026B                     SPI1SDIPPS      equ	619	;# 
 12474   00026C                     SPI1SSPPS       equ	620	;# 
 12475   00026D                     SPI2SCKPPS      equ	621	;# 
 12476   00026E                     SPI2SDIPPS      equ	622	;# 
 12477   00026F                     SPI2SSPPS       equ	623	;# 
 12478   000270                     I2C1SDAPPS      equ	624	;# 
 12479   000271                     I2C1SCLPPS      equ	625	;# 
 12480   000272                     U1RXPPS         equ	626	;# 
 12481   000273                     U1CTSPPS        equ	627	;# 
 12482   000274                     U2RXPPS         equ	628	;# 
 12483   000275                     U2CTSPPS        equ	629	;# 
 12484   000276                     U3RXPPS         equ	630	;# 
 12485   000277                     U3CTSPPS        equ	631	;# 
 12486   000278                     U4RXPPS         equ	632	;# 
 12487   000279                     U4CTSPPS        equ	633	;# 
 12488   00027A                     U5RXPPS         equ	634	;# 
 12489   00027B                     U5CTSPPS        equ	635	;# 
 12490   000286                     RC4I2C          equ	646	;# 
 12491   000287                     RC3I2C          equ	647	;# 
 12492   000288                     RB2I2C          equ	648	;# 
 12493   000289                     RB1I2C          equ	649	;# 
 12494   00028A                     I2C1RXB         equ	650	;# 
 12495   00028B                     I2C1TXB         equ	651	;# 
 12496   00028C                     I2C1CNTL        equ	652	;# 
 12497   00028D                     I2C1CNTH        equ	653	;# 
 12498   00028E                     I2C1ADB0        equ	654	;# 
 12499   00028F                     I2C1ADB1        equ	655	;# 
 12500   000290                     I2C1ADR0        equ	656	;# 
 12501   000291                     I2C1ADR1        equ	657	;# 
 12502   000292                     I2C1ADR2        equ	658	;# 
 12503   000293                     I2C1ADR3        equ	659	;# 
 12504   000294                     I2C1CON0        equ	660	;# 
 12505   000295                     I2C1CON1        equ	661	;# 
 12506   000296                     I2C1CON2        equ	662	;# 
 12507   000297                     I2C1ERR         equ	663	;# 
 12508   000298                     I2C1STAT0       equ	664	;# 
 12509   000299                     I2C1STAT1       equ	665	;# 
 12510   00029A                     I2C1PIR         equ	666	;# 
 12511   00029B                     I2C1PIE         equ	667	;# 
 12512   00029C                     I2C1BTO         equ	668	;# 
 12513   00029D                     I2C1BAUD        equ	669	;# 
 12514   00029E                     I2C1CLK         equ	670	;# 
 12515   00029F                     I2C1BTOC        equ	671	;# 
 12516   0002A1                     U1RXB           equ	673	;# 
 12517   0002A1                     U1RXBL          equ	673	;# 
 12518   0002A2                     U1RXCHK         equ	674	;# 
 12519   0002A3                     U1TXB           equ	675	;# 
 12520   0002A3                     U1TXBL          equ	675	;# 
 12521   0002A4                     U1TXCHK         equ	676	;# 
 12522   0002A5                     U1P1            equ	677	;# 
 12523   0002A5                     U1P1L           equ	677	;# 
 12524   0002A6                     U1P1H           equ	678	;# 
 12525   0002A7                     U1P2            equ	679	;# 
 12526   0002A7                     U1P2L           equ	679	;# 
 12527   0002A8                     U1P2H           equ	680	;# 
 12528   0002A9                     U1P3            equ	681	;# 
 12529   0002A9                     U1P3L           equ	681	;# 
 12530   0002AA                     U1P3H           equ	682	;# 
 12531   0002AB                     U1CON0          equ	683	;# 
 12532   0002AC                     U1CON1          equ	684	;# 
 12533   0002AD                     U1CON2          equ	685	;# 
 12534   0002AE                     U1BRG           equ	686	;# 
 12535   0002AE                     U1BRGL          equ	686	;# 
 12536   0002AF                     U1BRGH          equ	687	;# 
 12537   0002B0                     U1FIFO          equ	688	;# 
 12538   0002B1                     U1UIR           equ	689	;# 
 12539   0002B2                     U1ERRIR         equ	690	;# 
 12540   0002B3                     U1ERRIE         equ	691	;# 
 12541   0002B4                     U2RXB           equ	692	;# 
 12542   0002B4                     U2RXBL          equ	692	;# 
 12543   0002B5                     U2RXCHK         equ	693	;# 
 12544   0002B6                     U2TXB           equ	694	;# 
 12545   0002B6                     U2TXBL          equ	694	;# 
 12546   0002B7                     U2TXCHK         equ	695	;# 
 12547   0002B8                     U2P1            equ	696	;# 
 12548   0002B8                     U2P1L           equ	696	;# 
 12549   0002B9                     U2P1H           equ	697	;# 
 12550   0002BA                     U2P2            equ	698	;# 
 12551   0002BA                     U2P2L           equ	698	;# 
 12552   0002BB                     U2P2H           equ	699	;# 
 12553   0002BC                     U2P3            equ	700	;# 
 12554   0002BC                     U2P3L           equ	700	;# 
 12555   0002BD                     U2P3H           equ	701	;# 
 12556   0002BE                     U2CON0          equ	702	;# 
 12557   0002BF                     U2CON1          equ	703	;# 
 12558   0002C0                     U2CON2          equ	704	;# 
 12559   0002C1                     U2BRG           equ	705	;# 
 12560   0002C1                     U2BRGL          equ	705	;# 
 12561   0002C2                     U2BRGH          equ	706	;# 
 12562   0002C3                     U2FIFO          equ	707	;# 
 12563   0002C4                     U2UIR           equ	708	;# 
 12564   0002C5                     U2ERRIR         equ	709	;# 
 12565   0002C6                     U2ERRIE         equ	710	;# 
 12566   0002C7                     U3RXB           equ	711	;# 
 12567   0002C7                     U3RXBL          equ	711	;# 
 12568   0002C9                     U3TXB           equ	713	;# 
 12569   0002C9                     U3TXBL          equ	713	;# 
 12570   0002CB                     U3P1            equ	715	;# 
 12571   0002CB                     U3P1L           equ	715	;# 
 12572   0002CD                     U3P2            equ	717	;# 
 12573   0002CD                     U3P2L           equ	717	;# 
 12574   0002CF                     U3P3            equ	719	;# 
 12575   0002CF                     U3P3L           equ	719	;# 
 12576   0002D1                     U3CON0          equ	721	;# 
 12577   0002D2                     U3CON1          equ	722	;# 
 12578   0002D3                     U3CON2          equ	723	;# 
 12579   0002D4                     U3BRG           equ	724	;# 
 12580   0002D4                     U3BRGL          equ	724	;# 
 12581   0002D5                     U3BRGH          equ	725	;# 
 12582   0002D6                     U3FIFO          equ	726	;# 
 12583   0002D7                     U3UIR           equ	727	;# 
 12584   0002D8                     U3ERRIR         equ	728	;# 
 12585   0002D9                     U3ERRIE         equ	729	;# 
 12586   0002DA                     U4RXB           equ	730	;# 
 12587   0002DA                     U4RXBL          equ	730	;# 
 12588   0002DC                     U4TXB           equ	732	;# 
 12589   0002DC                     U4TXBL          equ	732	;# 
 12590   0002DE                     U4P1            equ	734	;# 
 12591   0002DE                     U4P1L           equ	734	;# 
 12592   0002E0                     U4P2            equ	736	;# 
 12593   0002E0                     U4P2L           equ	736	;# 
 12594   0002E2                     U4P3            equ	738	;# 
 12595   0002E2                     U4P3L           equ	738	;# 
 12596   0002E4                     U4CON0          equ	740	;# 
 12597   0002E5                     U4CON1          equ	741	;# 
 12598   0002E6                     U4CON2          equ	742	;# 
 12599   0002E7                     U4BRG           equ	743	;# 
 12600   0002E7                     U4BRGL          equ	743	;# 
 12601   0002E8                     U4BRGH          equ	744	;# 
 12602   0002E9                     U4FIFO          equ	745	;# 
 12603   0002EA                     U4UIR           equ	746	;# 
 12604   0002EB                     U4ERRIR         equ	747	;# 
 12605   0002EC                     U4ERRIE         equ	748	;# 
 12606   0002ED                     U5RXB           equ	749	;# 
 12607   0002ED                     U5RXBL          equ	749	;# 
 12608   0002EF                     U5TXB           equ	751	;# 
 12609   0002EF                     U5TXBL          equ	751	;# 
 12610   0002F1                     U5P1            equ	753	;# 
 12611   0002F1                     U5P1L           equ	753	;# 
 12612   0002F3                     U5P2            equ	755	;# 
 12613   0002F3                     U5P2L           equ	755	;# 
 12614   0002F5                     U5P3            equ	757	;# 
 12615   0002F5                     U5P3L           equ	757	;# 
 12616   0002F7                     U5CON0          equ	759	;# 
 12617   0002F8                     U5CON1          equ	760	;# 
 12618   0002F9                     U5CON2          equ	761	;# 
 12619   0002FA                     U5BRG           equ	762	;# 
 12620   0002FA                     U5BRGL          equ	762	;# 
 12621   0002FB                     U5BRGH          equ	763	;# 
 12622   0002FC                     U5FIFO          equ	764	;# 
 12623   0002FD                     U5UIR           equ	765	;# 
 12624   0002FE                     U5ERRIR         equ	766	;# 
 12625   0002FF                     U5ERRIE         equ	767	;# 
 12626   000300                     SMT1TMR         equ	768	;# 
 12627   000300                     SMT1TMRL        equ	768	;# 
 12628   000301                     SMT1TMRH        equ	769	;# 
 12629   000302                     SMT1TMRU        equ	770	;# 
 12630   000303                     SMT1CPR         equ	771	;# 
 12631   000303                     SMT1CPRL        equ	771	;# 
 12632   000304                     SMT1CPRH        equ	772	;# 
 12633   000305                     SMT1CPRU        equ	773	;# 
 12634   000306                     SMT1CPW         equ	774	;# 
 12635   000306                     SMT1CPWL        equ	774	;# 
 12636   000307                     SMT1CPWH        equ	775	;# 
 12637   000308                     SMT1CPWU        equ	776	;# 
 12638   000309                     SMT1PR          equ	777	;# 
 12639   000309                     SMT1PRL         equ	777	;# 
 12640   00030A                     SMT1PRH         equ	778	;# 
 12641   00030B                     SMT1PRU         equ	779	;# 
 12642   00030C                     SMT1CON0        equ	780	;# 
 12643   00030D                     SMT1CON1        equ	781	;# 
 12644   00030E                     SMT1STAT        equ	782	;# 
 12645   00030F                     SMT1CLK         equ	783	;# 
 12646   000310                     SMT1SIG         equ	784	;# 
 12647   000311                     SMT1WIN         equ	785	;# 
 12648   000318                     TMR0L           equ	792	;# 
 12649   000318                     TMR0            equ	792	;# 
 12650   000319                     TMR0H           equ	793	;# 
 12651   000319                     PR0             equ	793	;# 
 12652   00031A                     T0CON0          equ	794	;# 
 12653   00031B                     T0CON1          equ	795	;# 
 12654   00031C                     TMR1            equ	796	;# 
 12655   00031C                     TMR1L           equ	796	;# 
 12656   00031D                     TMR1H           equ	797	;# 
 12657   00031E                     T1CON           equ	798	;# 
 12658   00031E                     TMR1CON         equ	798	;# 
 12659   00031F                     T1GCON          equ	799	;# 
 12660   00031F                     TMR1GCON        equ	799	;# 
 12661   000320                     T1GATE          equ	800	;# 
 12662   000320                     TMR1GATE        equ	800	;# 
 12663   000321                     T1CLK           equ	801	;# 
 12664   000321                     TMR1CLK         equ	801	;# 
 12665   000321                     PR1             equ	801	;# 
 12666   000322                     T2TMR           equ	802	;# 
 12667   000322                     TMR2            equ	802	;# 
 12668   000323                     T2PR            equ	803	;# 
 12669   000323                     PR2             equ	803	;# 
 12670   000324                     T2CON           equ	804	;# 
 12671   000325                     T2HLT           equ	805	;# 
 12672   000326                     T2CLKCON        equ	806	;# 
 12673   000326                     T2CLK           equ	806	;# 
 12674   000327                     T2RST           equ	807	;# 
 12675   000328                     TMR3            equ	808	;# 
 12676   000328                     TMR3L           equ	808	;# 
 12677   000329                     TMR3H           equ	809	;# 
 12678   00032A                     T3CON           equ	810	;# 
 12679   00032A                     TMR3CON         equ	810	;# 
 12680   00032B                     T3GCON          equ	811	;# 
 12681   00032B                     TMR3GCON        equ	811	;# 
 12682   00032C                     T3GATE          equ	812	;# 
 12683   00032C                     TMR3GATE        equ	812	;# 
 12684   00032D                     T3CLK           equ	813	;# 
 12685   00032D                     TMR3CLK         equ	813	;# 
 12686   00032D                     PR3             equ	813	;# 
 12687   00032E                     T4TMR           equ	814	;# 
 12688   00032E                     TMR4            equ	814	;# 
 12689   00032F                     T4PR            equ	815	;# 
 12690   00032F                     PR4             equ	815	;# 
 12691   000330                     T4CON           equ	816	;# 
 12692   000331                     T4HLT           equ	817	;# 
 12693   000332                     T4CLKCON        equ	818	;# 
 12694   000332                     T4CLK           equ	818	;# 
 12695   000333                     T4RST           equ	819	;# 
 12696   000334                     TMR5            equ	820	;# 
 12697   000334                     TMR5L           equ	820	;# 
 12698   000335                     TMR5H           equ	821	;# 
 12699   000336                     T5CON           equ	822	;# 
 12700   000336                     TMR5CON         equ	822	;# 
 12701   000337                     T5GCON          equ	823	;# 
 12702   000337                     TMR5GCON        equ	823	;# 
 12703   000338                     T5GATE          equ	824	;# 
 12704   000338                     TMR5GATE        equ	824	;# 
 12705   000339                     T5CLK           equ	825	;# 
 12706   000339                     TMR5CLK         equ	825	;# 
 12707   000339                     PR5             equ	825	;# 
 12708   00033A                     T6TMR           equ	826	;# 
 12709   00033A                     TMR6            equ	826	;# 
 12710   00033B                     T6PR            equ	827	;# 
 12711   00033B                     PR6             equ	827	;# 
 12712   00033C                     T6CON           equ	828	;# 
 12713   00033D                     T6HLT           equ	829	;# 
 12714   00033E                     T6CLKCON        equ	830	;# 
 12715   00033E                     T6CLK           equ	830	;# 
 12716   00033F                     T6RST           equ	831	;# 
 12717   000340                     CCPR1           equ	832	;# 
 12718   000340                     CCPR1L          equ	832	;# 
 12719   000341                     CCPR1H          equ	833	;# 
 12720   000342                     CCP1CON         equ	834	;# 
 12721   000343                     CCP1CAP         equ	835	;# 
 12722   000344                     CCPR2           equ	836	;# 
 12723   000344                     CCPR2L          equ	836	;# 
 12724   000345                     CCPR2H          equ	837	;# 
 12725   000346                     CCP2CON         equ	838	;# 
 12726   000347                     CCP2CAP         equ	839	;# 
 12727   000348                     CCPR3           equ	840	;# 
 12728   000348                     CCPR3L          equ	840	;# 
 12729   000349                     CCPR3H          equ	841	;# 
 12730   00034A                     CCP3CON         equ	842	;# 
 12731   00034B                     CCP3CAP         equ	843	;# 
 12732   00034C                     CCPTMRS0        equ	844	;# 
 12733   00034F                     CRCDATA         equ	847	;# 
 12734   00034F                     CRCDATAL        equ	847	;# 
 12735   000350                     CRCDATAH        equ	848	;# 
 12736   000351                     CRCDATAU        equ	849	;# 
 12737   000352                     CRCDATAT        equ	850	;# 
 12738   000353                     CRCOUT          equ	851	;# 
 12739   000353                     CRCSHFT         equ	851	;# 
 12740   000353                     CRCXOR          equ	851	;# 
 12741   000353                     CRCOUTL         equ	851	;# 
 12742   000353                     CRCSHFTL        equ	851	;# 
 12743   000353                     CRCSHIFTL       equ	851	;# 
 12744   000353                     CRCXORL         equ	851	;# 
 12745   000354                     CRCOUTH         equ	852	;# 
 12746   000354                     CRCSHFTH        equ	852	;# 
 12747   000354                     CRCSHIFTH       equ	852	;# 
 12748   000354                     CRCXORH         equ	852	;# 
 12749   000355                     CRCOUTU         equ	853	;# 
 12750   000355                     CRCSHFTU        equ	853	;# 
 12751   000355                     CRCSHIFTU       equ	853	;# 
 12752   000355                     CRCXORU         equ	853	;# 
 12753   000356                     CRCOUTT         equ	854	;# 
 12754   000356                     CRCSHFTT        equ	854	;# 
 12755   000356                     CRCSHIFTT       equ	854	;# 
 12756   000356                     CRCXORT         equ	854	;# 
 12757   000357                     CRCCON0         equ	855	;# 
 12758   000358                     CRCCON1         equ	856	;# 
 12759   000359                     CRCCON2         equ	857	;# 
 12760   00035A                     SCANLADR        equ	858	;# 
 12761   00035A                     SCANLADRL       equ	858	;# 
 12762   00035B                     SCANLADRH       equ	859	;# 
 12763   00035C                     SCANLADRU       equ	860	;# 
 12764   00035D                     SCANHADR        equ	861	;# 
 12765   00035D                     SCANHADRL       equ	861	;# 
 12766   00035E                     SCANHADRH       equ	862	;# 
 12767   00035F                     SCANHADRU       equ	863	;# 
 12768   000360                     SCANCON0        equ	864	;# 
 12769   000361                     SCANTRIG        equ	865	;# 
 12770   000362                     IPR0            equ	866	;# 
 12771   000363                     IPR1            equ	867	;# 
 12772   000364                     IPR2            equ	868	;# 
 12773   000365                     IPR3            equ	869	;# 
 12774   000366                     IPR4            equ	870	;# 
 12775   000367                     IPR5            equ	871	;# 
 12776   000368                     IPR6            equ	872	;# 
 12777   000369                     IPR7            equ	873	;# 
 12778   00036A                     IPR8            equ	874	;# 
 12779   00036B                     IPR9            equ	875	;# 
 12780   00036C                     IPR10           equ	876	;# 
 12781   00036D                     IPR11           equ	877	;# 
 12782   00036E                     IPR12           equ	878	;# 
 12783   00036F                     IPR13           equ	879	;# 
 12784   000370                     IPR14           equ	880	;# 
 12785   000371                     IPR15           equ	881	;# 
 12786   000373                     STATUS_CSHAD    equ	883	;# 
 12787   000374                     WREG_CSHAD      equ	884	;# 
 12788   000375                     BSR_CSHAD       equ	885	;# 
 12789   000376                     SHADCON         equ	886	;# 
 12790   000377                     STATUS_SHAD     equ	887	;# 
 12791   000378                     WREG_SHAD       equ	888	;# 
 12792   000379                     BSR_SHAD        equ	889	;# 
 12793   00037A                     PCLATH_SHAD     equ	890	;# 
 12794   00037B                     PCLATU_SHAD     equ	891	;# 
 12795   00037C                     FSR0SH          equ	892	;# 
 12796   00037C                     FSR0L_SHAD      equ	892	;# 
 12797   00037D                     FSR0H_SHAD      equ	893	;# 
 12798   00037E                     FSR1SH          equ	894	;# 
 12799   00037E                     FSR1L_SHAD      equ	894	;# 
 12800   00037F                     FSR1H_SHAD      equ	895	;# 
 12801   000380                     FSR2SH          equ	896	;# 
 12802   000380                     FSR2L_SHAD      equ	896	;# 
 12803   000381                     FSR2H_SHAD      equ	897	;# 
 12804   000382                     PRODSH          equ	898	;# 
 12805   000382                     PRODL_SHAD      equ	898	;# 
 12806   000383                     PRODH_SHAD      equ	899	;# 
 12807   000387                     TU16ACON0       equ	903	;# 
 12808   000388                     TU16ACON1       equ	904	;# 
 12809   000389                     TU16AHLT        equ	905	;# 
 12810   00038A                     TU16APS         equ	906	;# 
 12811   00038B                     TU16ATMR        equ	907	;# 
 12812   00038B                     TU16ACR         equ	907	;# 
 12813   00038B                     TU16ATMRL       equ	907	;# 
 12814   00038B                     TU16ACRL        equ	907	;# 
 12815   00038C                     TU16ATMRH       equ	908	;# 
 12816   00038C                     TU16ACRH        equ	908	;# 
 12817   00038D                     TU16APR         equ	909	;# 
 12818   00038D                     TU16APRL        equ	909	;# 
 12819   00038E                     TU16APRH        equ	910	;# 
 12820   00038F                     TU16ACLK        equ	911	;# 
 12821   000390                     TU16AERS        equ	912	;# 
 12822   000393                     TU16BCON0       equ	915	;# 
 12823   000394                     TU16BCON1       equ	916	;# 
 12824   000395                     TU16BHLT        equ	917	;# 
 12825   000396                     TU16BPS         equ	918	;# 
 12826   000397                     TU16BTMR        equ	919	;# 
 12827   000397                     TU16BCR         equ	919	;# 
 12828   000397                     TU16BTMRL       equ	919	;# 
 12829   000397                     TU16BCRL        equ	919	;# 
 12830   000398                     TU16BTMRH       equ	920	;# 
 12831   000398                     TU16BCRH        equ	920	;# 
 12832   000399                     TU16BPR         equ	921	;# 
 12833   000399                     TU16BPRL        equ	921	;# 
 12834   00039A                     TU16BPRH        equ	922	;# 
 12835   00039B                     TU16BCLK        equ	923	;# 
 12836   00039C                     TU16BERS        equ	924	;# 
 12837   0003BB                     TUCHAIN         equ	955	;# 
 12838   0003BC                     CWG1CLK         equ	956	;# 
 12839   0003BC                     CWG1CLKCON      equ	956	;# 
 12840   0003BD                     CWG1ISM         equ	957	;# 
 12841   0003BE                     CWG1DBR         equ	958	;# 
 12842   0003BF                     CWG1DBF         equ	959	;# 
 12843   0003C0                     CWG1CON0        equ	960	;# 
 12844   0003C1                     CWG1CON1        equ	961	;# 
 12845   0003C2                     CWG1AS0         equ	962	;# 
 12846   0003C3                     CWG1AS1         equ	963	;# 
 12847   0003C4                     CWG1STR         equ	964	;# 
 12848   0003C5                     CWG2CLK         equ	965	;# 
 12849   0003C5                     CWG2CLKCON      equ	965	;# 
 12850   0003C6                     CWG2ISM         equ	966	;# 
 12851   0003C7                     CWG2DBR         equ	967	;# 
 12852   0003C8                     CWG2DBF         equ	968	;# 
 12853   0003C9                     CWG2CON0        equ	969	;# 
 12854   0003CA                     CWG2CON1        equ	970	;# 
 12855   0003CB                     CWG2AS0         equ	971	;# 
 12856   0003CC                     CWG2AS1         equ	972	;# 
 12857   0003CD                     CWG2STR         equ	973	;# 
 12858   0003CE                     CWG3CLK         equ	974	;# 
 12859   0003CE                     CWG3CLKCON      equ	974	;# 
 12860   0003CF                     CWG3ISM         equ	975	;# 
 12861   0003D0                     CWG3DBR         equ	976	;# 
 12862   0003D1                     CWG3DBF         equ	977	;# 
 12863   0003D2                     CWG3CON0        equ	978	;# 
 12864   0003D3                     CWG3CON1        equ	979	;# 
 12865   0003D4                     CWG3AS0         equ	980	;# 
 12866   0003D5                     CWG3AS1         equ	981	;# 
 12867   0003D6                     CWG3STR         equ	982	;# 
 12868   0003D7                     FVRCON          equ	983	;# 
 12869   0003D8                     ADCPCON         equ	984	;# 
 12870   0003D8                     ADCP            equ	984	;# 
 12871   0003D9                     ADLTH           equ	985	;# 
 12872   0003D9                     ADLTHL          equ	985	;# 
 12873   0003DA                     ADLTHH          equ	986	;# 
 12874   0003DB                     ADUTH           equ	987	;# 
 12875   0003DB                     ADUTHL          equ	987	;# 
 12876   0003DC                     ADUTHH          equ	988	;# 
 12877   0003DD                     ADERR           equ	989	;# 
 12878   0003DD                     ADERRL          equ	989	;# 
 12879   0003DE                     ADERRH          equ	990	;# 
 12880   0003DF                     ADSTPT          equ	991	;# 
 12881   0003DF                     ADSTPTL         equ	991	;# 
 12882   0003E0                     ADSTPTH         equ	992	;# 
 12883   0003E1                     ADFLTR          equ	993	;# 
 12884   0003E1                     ADFLTRL         equ	993	;# 
 12885   0003E2                     ADFLTRH         equ	994	;# 
 12886   0003E3                     ADACC           equ	995	;# 
 12887   0003E3                     ADACCL          equ	995	;# 
 12888   0003E4                     ADACCH          equ	996	;# 
 12889   0003E5                     ADACCU          equ	997	;# 
 12890   0003E6                     ADCNT           equ	998	;# 
 12891   0003E7                     ADRPT           equ	999	;# 
 12892   0003E8                     ADPREV          equ	1000	;# 
 12893   0003E8                     ADPREVL         equ	1000	;# 
 12894   0003E9                     ADPREVH         equ	1001	;# 
 12895   0003EA                     ADRES           equ	1002	;# 
 12896   0003EA                     ADRESL          equ	1002	;# 
 12897   0003EB                     ADRESH          equ	1003	;# 
 12898   0003EC                     ADPCH           equ	1004	;# 
 12899   0003EE                     ADACQ           equ	1006	;# 
 12900   0003EE                     ADACQL          equ	1006	;# 
 12901   0003EF                     ADACQH          equ	1007	;# 
 12902   0003F0                     ADCAP           equ	1008	;# 
 12903   0003F1                     ADPRE           equ	1009	;# 
 12904   0003F1                     ADPREL          equ	1009	;# 
 12905   0003F2                     ADPREH          equ	1010	;# 
 12906   0003F3                     ADCON0          equ	1011	;# 
 12907   0003F4                     ADCON1          equ	1012	;# 
 12908   0003F5                     ADCON2          equ	1013	;# 
 12909   0003F6                     ADCON3          equ	1014	;# 
 12910   0003F7                     ADSTAT          equ	1015	;# 
 12911   0003F8                     ADREF           equ	1016	;# 
 12912   0003F9                     ADACT           equ	1017	;# 
 12913   0003FA                     ADCLK           equ	1018	;# 
 12914   0003FB                     ADCTX           equ	1019	;# 
 12915   0003FC                     ADCSEL1         equ	1020	;# 
 12916   0003FD                     ADCSEL2         equ	1021	;# 
 12917   0003FE                     ADCSEL3         equ	1022	;# 
 12918   0003FF                     ADCSEL4         equ	1023	;# 
 12919   000400                     ANSELA          equ	1024	;# 
 12920   000401                     WPUA            equ	1025	;# 
 12921   000402                     ODCONA          equ	1026	;# 
 12922   000403                     SLRCONA         equ	1027	;# 
 12923   000404                     INLVLA          equ	1028	;# 
 12924   000405                     IOCAP           equ	1029	;# 
 12925   000406                     IOCAN           equ	1030	;# 
 12926   000407                     IOCAF           equ	1031	;# 
 12927   000408                     ANSELB          equ	1032	;# 
 12928   000409                     WPUB            equ	1033	;# 
 12929   00040A                     ODCONB          equ	1034	;# 
 12930   00040B                     SLRCONB         equ	1035	;# 
 12931   00040C                     INLVLB          equ	1036	;# 
 12932   00040D                     IOCBP           equ	1037	;# 
 12933   00040E                     IOCBN           equ	1038	;# 
 12934   00040F                     IOCBF           equ	1039	;# 
 12935   000410                     ANSELC          equ	1040	;# 
 12936   000411                     WPUC            equ	1041	;# 
 12937   000412                     ODCONC          equ	1042	;# 
 12938   000413                     SLRCONC         equ	1043	;# 
 12939   000414                     INLVLC          equ	1044	;# 
 12940   000415                     IOCCP           equ	1045	;# 
 12941   000416                     IOCCN           equ	1046	;# 
 12942   000417                     IOCCF           equ	1047	;# 
 12943   000421                     WPUE            equ	1057	;# 
 12944   000424                     INLVLE          equ	1060	;# 
 12945   000425                     IOCEP           equ	1061	;# 
 12946   000426                     IOCEN           equ	1062	;# 
 12947   000427                     IOCEF           equ	1063	;# 
 12948   000440                     NCO1ACC         equ	1088	;# 
 12949   000440                     NCO1ACCL        equ	1088	;# 
 12950   000441                     NCO1ACCH        equ	1089	;# 
 12951   000442                     NCO1ACCU        equ	1090	;# 
 12952   000443                     NCO1INC         equ	1091	;# 
 12953   000443                     NCO1INCL        equ	1091	;# 
 12954   000444                     NCO1INCH        equ	1092	;# 
 12955   000445                     NCO1INCU        equ	1093	;# 
 12956   000446                     NCO1CON         equ	1094	;# 
 12957   000447                     NCO1CLK         equ	1095	;# 
 12958   000448                     NCO2ACC         equ	1096	;# 
 12959   000448                     NCO2ACCL        equ	1096	;# 
 12960   000449                     NCO2ACCH        equ	1097	;# 
 12961   00044A                     NCO2ACCU        equ	1098	;# 
 12962   00044B                     NCO2INC         equ	1099	;# 
 12963   00044B                     NCO2INCL        equ	1099	;# 
 12964   00044C                     NCO2INCH        equ	1100	;# 
 12965   00044D                     NCO2INCU        equ	1101	;# 
 12966   00044E                     NCO2CON         equ	1102	;# 
 12967   00044F                     NCO2CLK         equ	1103	;# 
 12968   000450                     NCO3ACC         equ	1104	;# 
 12969   000450                     NCO3ACCL        equ	1104	;# 
 12970   000451                     NCO3ACCH        equ	1105	;# 
 12971   000452                     NCO3ACCU        equ	1106	;# 
 12972   000453                     NCO3INC         equ	1107	;# 
 12973   000453                     NCO3INCL        equ	1107	;# 
 12974   000454                     NCO3INCH        equ	1108	;# 
 12975   000455                     NCO3INCU        equ	1109	;# 
 12976   000456                     NCO3CON         equ	1110	;# 
 12977   000457                     NCO3CLK         equ	1111	;# 
 12978   000458                     FSCMCON         equ	1112	;# 
 12979   000459                     IVTLOCK         equ	1113	;# 
 12980   00045A                     IVTAD           equ	1114	;# 
 12981   00045A                     IVTADL          equ	1114	;# 
 12982   00045B                     IVTADH          equ	1115	;# 
 12983   00045C                     IVTADU          equ	1116	;# 
 12984   00045D                     IVTBASE         equ	1117	;# 
 12985   00045D                     IVTBASEL        equ	1117	;# 
 12986   00045E                     IVTBASEH        equ	1118	;# 
 12987   00045F                     IVTBASEU        equ	1119	;# 
 12988   000460                     PWM1ERS         equ	1120	;# 
 12989   000461                     PWM1CLK         equ	1121	;# 
 12990   000462                     PWM1LDS         equ	1122	;# 
 12991   000463                     PWM1PR          equ	1123	;# 
 12992   000463                     PWM1PRL         equ	1123	;# 
 12993   000464                     PWM1PRH         equ	1124	;# 
 12994   000465                     PWM1CPRE        equ	1125	;# 
 12995   000466                     PWM1PIPOS       equ	1126	;# 
 12996   000467                     PWM1GIR         equ	1127	;# 
 12997   000468                     PWM1GIE         equ	1128	;# 
 12998   000469                     PWM1CON         equ	1129	;# 
 12999   00046A                     PWM1S1CFG       equ	1130	;# 
 13000   00046B                     PWM1S1P1        equ	1131	;# 
 13001   00046B                     PWM1S1P1L       equ	1131	;# 
 13002   00046C                     PWM1S1P1H       equ	1132	;# 
 13003   00046D                     PWM1S1P2        equ	1133	;# 
 13004   00046D                     PWM1S1P2L       equ	1133	;# 
 13005   00046E                     PWM1S1P2H       equ	1134	;# 
 13006   00046F                     PWM2ERS         equ	1135	;# 
 13007   000470                     PWM2CLK         equ	1136	;# 
 13008   000471                     PWM2LDS         equ	1137	;# 
 13009   000472                     PWM2PR          equ	1138	;# 
 13010   000472                     PWM2PRL         equ	1138	;# 
 13011   000473                     PWM2PRH         equ	1139	;# 
 13012   000474                     PWM2CPRE        equ	1140	;# 
 13013   000475                     PWM2PIPOS       equ	1141	;# 
 13014   000476                     PWM2GIR         equ	1142	;# 
 13015   000477                     PWM2GIE         equ	1143	;# 
 13016   000478                     PWM2CON         equ	1144	;# 
 13017   000479                     PWM2S1CFG       equ	1145	;# 
 13018   00047A                     PWM2S1P1        equ	1146	;# 
 13019   00047A                     PWM2S1P1L       equ	1146	;# 
 13020   00047B                     PWM2S1P1H       equ	1147	;# 
 13021   00047C                     PWM2S1P2        equ	1148	;# 
 13022   00047C                     PWM2S1P2L       equ	1148	;# 
 13023   00047D                     PWM2S1P2H       equ	1149	;# 
 13024   00047E                     PWM3ERS         equ	1150	;# 
 13025   00047F                     PWM3CLK         equ	1151	;# 
 13026   000480                     PWM3LDS         equ	1152	;# 
 13027   000481                     PWM3PR          equ	1153	;# 
 13028   000481                     PWM3PRL         equ	1153	;# 
 13029   000482                     PWM3PRH         equ	1154	;# 
 13030   000483                     PWM3CPRE        equ	1155	;# 
 13031   000484                     PWM3PIPOS       equ	1156	;# 
 13032   000485                     PWM3GIR         equ	1157	;# 
 13033   000486                     PWM3GIE         equ	1158	;# 
 13034   000487                     PWM3CON         equ	1159	;# 
 13035   000488                     PWM3S1CFG       equ	1160	;# 
 13036   000489                     PWM3S1P1        equ	1161	;# 
 13037   000489                     PWM3S1P1L       equ	1161	;# 
 13038   00048A                     PWM3S1P1H       equ	1162	;# 
 13039   00048B                     PWM3S1P2        equ	1163	;# 
 13040   00048B                     PWM3S1P2L       equ	1163	;# 
 13041   00048C                     PWM3S1P2H       equ	1164	;# 
 13042   00048D                     PWM4ERS         equ	1165	;# 
 13043   00048E                     PWM4CLK         equ	1166	;# 
 13044   00048F                     PWM4LDS         equ	1167	;# 
 13045   000490                     PWM4PR          equ	1168	;# 
 13046   000490                     PWM4PRL         equ	1168	;# 
 13047   000491                     PWM4PRH         equ	1169	;# 
 13048   000492                     PWM4CPRE        equ	1170	;# 
 13049   000493                     PWM4PIPOS       equ	1171	;# 
 13050   000494                     PWM4GIR         equ	1172	;# 
 13051   000495                     PWM4GIE         equ	1173	;# 
 13052   000496                     PWM4CON         equ	1174	;# 
 13053   000497                     PWM4S1CFG       equ	1175	;# 
 13054   000498                     PWM4S1P1        equ	1176	;# 
 13055   000498                     PWM4S1P1L       equ	1176	;# 
 13056   000499                     PWM4S1P1H       equ	1177	;# 
 13057   00049A                     PWM4S1P2        equ	1178	;# 
 13058   00049A                     PWM4S1P2L       equ	1178	;# 
 13059   00049B                     PWM4S1P2H       equ	1179	;# 
 13060   00049C                     PWMLOAD         equ	1180	;# 
 13061   00049D                     PWMEN           equ	1181	;# 
 13062   00049E                     PIE0            equ	1182	;# 
 13063   00049F                     PIE1            equ	1183	;# 
 13064   0004A0                     PIE2            equ	1184	;# 
 13065   0004A1                     PIE3            equ	1185	;# 
 13066   0004A2                     PIE4            equ	1186	;# 
 13067   0004A3                     PIE5            equ	1187	;# 
 13068   0004A4                     PIE6            equ	1188	;# 
 13069   0004A5                     PIE7            equ	1189	;# 
 13070   0004A6                     PIE8            equ	1190	;# 
 13071   0004A7                     PIE9            equ	1191	;# 
 13072   0004A8                     PIE10           equ	1192	;# 
 13073   0004A9                     PIE11           equ	1193	;# 
 13074   0004AA                     PIE12           equ	1194	;# 
 13075   0004AB                     PIE13           equ	1195	;# 
 13076   0004AC                     PIE14           equ	1196	;# 
 13077   0004AD                     PIE15           equ	1197	;# 
 13078   0004AE                     PIR0            equ	1198	;# 
 13079   0004AF                     PIR1            equ	1199	;# 
 13080   0004B0                     PIR2            equ	1200	;# 
 13081   0004B1                     PIR3            equ	1201	;# 
 13082   0004B2                     PIR4            equ	1202	;# 
 13083   0004B3                     PIR5            equ	1203	;# 
 13084   0004B4                     PIR6            equ	1204	;# 
 13085   0004B5                     PIR7            equ	1205	;# 
 13086   0004B6                     PIR8            equ	1206	;# 
 13087   0004B7                     PIR9            equ	1207	;# 
 13088   0004B8                     PIR10           equ	1208	;# 
 13089   0004B9                     PIR11           equ	1209	;# 
 13090   0004BA                     PIR12           equ	1210	;# 
 13091   0004BB                     PIR13           equ	1211	;# 
 13092   0004BC                     PIR14           equ	1212	;# 
 13093   0004BD                     PIR15           equ	1213	;# 
 13094   0004BE                     LATA            equ	1214	;# 
 13095   0004BF                     LATB            equ	1215	;# 
 13096   0004C0                     LATC            equ	1216	;# 
 13097   0004C6                     TRISA           equ	1222	;# 
 13098   0004C7                     TRISB           equ	1223	;# 
 13099   0004C8                     TRISC           equ	1224	;# 
 13100   0004CA                     TRISE           equ	1226	;# 
 13101   0004CE                     PORTA           equ	1230	;# 
 13102   0004CF                     PORTB           equ	1231	;# 
 13103   0004D0                     PORTC           equ	1232	;# 
 13104   0004D2                     PORTE           equ	1234	;# 
 13105   0004D6                     INTCON0         equ	1238	;# 
 13106   0004D7                     INTCON1         equ	1239	;# 
 13107   0004D8                     STATUS          equ	1240	;# 
 13108   0004D9                     FSR2            equ	1241	;# 
 13109   0004D9                     FSR2L           equ	1241	;# 
 13110   0004DA                     FSR2H           equ	1242	;# 
 13111   0004DB                     PLUSW2          equ	1243	;# 
 13112   0004DC                     PREINC2         equ	1244	;# 
 13113   0004DD                     POSTDEC2        equ	1245	;# 
 13114   0004DE                     POSTINC2        equ	1246	;# 
 13115   0004DF                     INDF2           equ	1247	;# 
 13116   0004E0                     BSR             equ	1248	;# 
 13117   0004E1                     FSR1            equ	1249	;# 
 13118   0004E1                     FSR1L           equ	1249	;# 
 13119   0004E2                     FSR1H           equ	1250	;# 
 13120   0004E3                     PLUSW1          equ	1251	;# 
 13121   0004E4                     PREINC1         equ	1252	;# 
 13122   0004E5                     POSTDEC1        equ	1253	;# 
 13123   0004E6                     POSTINC1        equ	1254	;# 
 13124   0004E7                     INDF1           equ	1255	;# 
 13125   0004E8                     WREG            equ	1256	;# 
 13126   0004E9                     FSR0            equ	1257	;# 
 13127   0004E9                     FSR0L           equ	1257	;# 
 13128   0004EA                     FSR0H           equ	1258	;# 
 13129   0004EB                     PLUSW0          equ	1259	;# 
 13130   0004EC                     PREINC0         equ	1260	;# 
 13131   0004ED                     POSTDEC0        equ	1261	;# 
 13132   0004EE                     POSTINC0        equ	1262	;# 
 13133   0004EF                     INDF0           equ	1263	;# 
 13134   0004F0                     PCON0           equ	1264	;# 
 13135   0004F1                     PCON1           equ	1265	;# 
 13136   0004F2                     CPUDOZE         equ	1266	;# 
 13137   0004F3                     PROD            equ	1267	;# 
 13138   0004F3                     PRODL           equ	1267	;# 
 13139   0004F4                     PRODH           equ	1268	;# 
 13140   0004F5                     TABLAT          equ	1269	;# 
 13141   0004F6                     TBLPTR          equ	1270	;# 
 13142   0004F6                     TBLPTRL         equ	1270	;# 
 13143   0004F7                     TBLPTRH         equ	1271	;# 
 13144   0004F8                     TBLPTRU         equ	1272	;# 
 13145   0004F9                     PCLAT           equ	1273	;# 
 13146   0004F9                     PCL             equ	1273	;# 
 13147   0004FA                     PCLATH          equ	1274	;# 
 13148   0004FB                     PCLATU          equ	1275	;# 
 13149   0004FC                     STKPTR          equ	1276	;# 
 13150   0004FD                     TOS             equ	1277	;# 
 13151   0004FD                     TOSL            equ	1277	;# 
 13152   0004FE                     TOSH            equ	1278	;# 
 13153   0004FF                     TOSU            equ	1279	;# 
 13154   000038                     BOOTREG         equ	56	;# 
 13155   000039                     CLKRCON         equ	57	;# 
 13156   00003A                     CLKRCLK         equ	58	;# 
 13157   000040                     NVMCON0         equ	64	;# 
 13158   000041                     NVMCON1         equ	65	;# 
 13159   000042                     NVMLOCK         equ	66	;# 
 13160   000043                     NVMADR          equ	67	;# 
 13161   000043                     NVMADRL         equ	67	;# 
 13162   000044                     NVMADRH         equ	68	;# 
 13163   000045                     NVMADRU         equ	69	;# 
 13164   000046                     NVMDAT          equ	70	;# 
 13165   000046                     NVMDATL         equ	70	;# 
 13166   000047                     NVMDATH         equ	71	;# 
 13167   000048                     VREGCON         equ	72	;# 
 13168   000049                     BORCON          equ	73	;# 
 13169   00004A                     HLVDCON0        equ	74	;# 
 13170   00004B                     HLVDCON1        equ	75	;# 
 13171   00004C                     ZCDCON          equ	76	;# 
 13172   000060                     PMD0            equ	96	;# 
 13173   000061                     PMD1            equ	97	;# 
 13174   000062                     PMD2            equ	98	;# 
 13175   000063                     PMD3            equ	99	;# 
 13176   000064                     PMD4            equ	100	;# 
 13177   000065                     PMD5            equ	101	;# 
 13178   000066                     PMD6            equ	102	;# 
 13179   000067                     PMD7            equ	103	;# 
 13180   000068                     PMD8            equ	104	;# 
 13181   00006A                     MD1CON0         equ	106	;# 
 13182   00006B                     MD1CON1         equ	107	;# 
 13183   00006C                     MD1SRC          equ	108	;# 
 13184   00006D                     MD1CARL         equ	109	;# 
 13185   00006E                     MD1CARH         equ	110	;# 
 13186   00006F                     CMOUT           equ	111	;# 
 13187   000070                     CM1CON0         equ	112	;# 
 13188   000071                     CM1CON1         equ	113	;# 
 13189   000072                     CM1NCH          equ	114	;# 
 13190   000073                     CM1PCH          equ	115	;# 
 13191   000074                     CM2CON0         equ	116	;# 
 13192   000075                     CM2CON1         equ	117	;# 
 13193   000076                     CM2NCH          equ	118	;# 
 13194   000077                     CM2PCH          equ	119	;# 
 13195   000078                     WDTCON0         equ	120	;# 
 13196   000079                     WDTCON1         equ	121	;# 
 13197   00007A                     WDTPSL          equ	122	;# 
 13198   00007B                     WDTPSH          equ	123	;# 
 13199   00007C                     WDTTMR          equ	124	;# 
 13200   00007D                     DAC1DAT         equ	125	;# 
 13201   00007D                     DAC1DATL        equ	125	;# 
 13202   00007F                     DAC1CON         equ	127	;# 
 13203   000080                     SPI1RXB         equ	128	;# 
 13204   000081                     SPI1TXB         equ	129	;# 
 13205   000082                     SPI1TCNT        equ	130	;# 
 13206   000082                     SPI1TCNTL       equ	130	;# 
 13207   000083                     SPI1TCNTH       equ	131	;# 
 13208   000084                     SPI1CON0        equ	132	;# 
 13209   000085                     SPI1CON1        equ	133	;# 
 13210   000086                     SPI1CON2        equ	134	;# 
 13211   000087                     SPI1STATUS      equ	135	;# 
 13212   000088                     SPI1TWIDTH      equ	136	;# 
 13213   000089                     SPI1BAUD        equ	137	;# 
 13214   00008A                     SPI1INTF        equ	138	;# 
 13215   00008B                     SPI1INTE        equ	139	;# 
 13216   00008C                     SPI1CLK         equ	140	;# 
 13217   00008D                     SPI2RXB         equ	141	;# 
 13218   00008E                     SPI2TXB         equ	142	;# 
 13219   00008F                     SPI2TCNT        equ	143	;# 
 13220   00008F                     SPI2TCNTL       equ	143	;# 
 13221   000090                     SPI2TCNTH       equ	144	;# 
 13222   000091                     SPI2CON0        equ	145	;# 
 13223   000092                     SPI2CON1        equ	146	;# 
 13224   000093                     SPI2CON2        equ	147	;# 
 13225   000094                     SPI2STATUS      equ	148	;# 
 13226   000095                     SPI2TWIDTH      equ	149	;# 
 13227   000096                     SPI2BAUD        equ	150	;# 
 13228   000097                     SPI2INTF        equ	151	;# 
 13229   000098                     SPI2INTE        equ	152	;# 
 13230   000099                     SPI2CLK         equ	153	;# 
 13231   0000AC                     ACTCON          equ	172	;# 
 13232   0000AD                     OSCCON1         equ	173	;# 
 13233   0000AE                     OSCCON2         equ	174	;# 
 13234   0000AF                     OSCCON3         equ	175	;# 
 13235   0000B0                     OSCTUNE         equ	176	;# 
 13236   0000B1                     OSCFRQ          equ	177	;# 
 13237   0000B1                     OSCFREQ         equ	177	;# 
 13238   0000B2                     OSCSTAT         equ	178	;# 
 13239   0000B2                     OSCSTAT1        equ	178	;# 
 13240   0000B3                     OSCEN           equ	179	;# 
 13241   0000B4                     PRLOCK          equ	180	;# 
 13242   0000B5                     SCANPR          equ	181	;# 
 13243   0000B6                     DMA1PR          equ	182	;# 
 13244   0000B7                     DMA2PR          equ	183	;# 
 13245   0000B8                     DMA3PR          equ	184	;# 
 13246   0000B9                     DMA4PR          equ	185	;# 
 13247   0000BA                     DMA5PR          equ	186	;# 
 13248   0000BB                     DMA6PR          equ	187	;# 
 13249   0000BC                     DMA7PR          equ	188	;# 
 13250   0000BD                     DMA8PR          equ	189	;# 
 13251   0000BE                     MAINPR          equ	190	;# 
 13252   0000BF                     ISRPR           equ	191	;# 
 13253   0000D4                     CLCDATA         equ	212	;# 
 13254   0000D5                     CLCSELECT       equ	213	;# 
 13255   0000D6                     CLCnCON         equ	214	;# 
 13256   0000D7                     CLCnPOL         equ	215	;# 
 13257   0000D8                     CLCnSEL0        equ	216	;# 
 13258   0000D9                     CLCnSEL1        equ	217	;# 
 13259   0000DA                     CLCnSEL2        equ	218	;# 
 13260   0000DB                     CLCnSEL3        equ	219	;# 
 13261   0000DC                     CLCnGLS0        equ	220	;# 
 13262   0000DD                     CLCnGLS1        equ	221	;# 
 13263   0000DE                     CLCnGLS2        equ	222	;# 
 13264   0000DF                     CLCnGLS3        equ	223	;# 
 13265   0000E8                     DMASELECT       equ	232	;# 
 13266   0000E9                     DMAnBUF         equ	233	;# 
 13267   0000EA                     DMAnDCNT        equ	234	;# 
 13268   0000EA                     DMAnDCNTL       equ	234	;# 
 13269   0000EB                     DMAnDCNTH       equ	235	;# 
 13270   0000EC                     DMAnDPTR        equ	236	;# 
 13271   0000EC                     DMAnDPTRL       equ	236	;# 
 13272   0000ED                     DMAnDPTRH       equ	237	;# 
 13273   0000EE                     DMAnDSZ         equ	238	;# 
 13274   0000EE                     DMAnDSZL        equ	238	;# 
 13275   0000EF                     DMAnDSZH        equ	239	;# 
 13276   0000F0                     DMAnDSA         equ	240	;# 
 13277   0000F0                     DMAnDSAL        equ	240	;# 
 13278   0000F1                     DMAnDSAH        equ	241	;# 
 13279   0000F2                     DMAnSCNT        equ	242	;# 
 13280   0000F2                     DMAnSCNTL       equ	242	;# 
 13281   0000F3                     DMAnSCNTH       equ	243	;# 
 13282   0000F4                     DMAnSPTR        equ	244	;# 
 13283   0000F4                     DMAnSPTRL       equ	244	;# 
 13284   0000F5                     DMAnSPTRH       equ	245	;# 
 13285   0000F6                     DMAnSPTRU       equ	246	;# 
 13286   0000F7                     DMAnSSZ         equ	247	;# 
 13287   0000F7                     DMAnSSZL        equ	247	;# 
 13288   0000F8                     DMAnSSZH        equ	248	;# 
 13289   0000F9                     DMAnSSA         equ	249	;# 
 13290   0000F9                     DMAnSSAL        equ	249	;# 
 13291   0000FA                     DMAnSSAH        equ	250	;# 
 13292   0000FB                     DMAnSSAU        equ	251	;# 
 13293   0000FC                     DMAnCON0        equ	252	;# 
 13294   0000FD                     DMAnCON1        equ	253	;# 
 13295   0000FE                     DMAnAIRQ        equ	254	;# 
 13296   0000FF                     DMAnSIRQ        equ	255	;# 
 13297   000100                     C1CONL          equ	256	;# 
 13298   000101                     C1CONH          equ	257	;# 
 13299   000102                     C1CONU          equ	258	;# 
 13300   000103                     C1CONT          equ	259	;# 
 13301   000104                     C1NBTCFGL       equ	260	;# 
 13302   000105                     C1NBTCFGH       equ	261	;# 
 13303   000106                     C1NBTCFGU       equ	262	;# 
 13304   000107                     C1NBTCFGT       equ	263	;# 
 13305   000108                     C1DBTCFGL       equ	264	;# 
 13306   000109                     C1DBTCFGH       equ	265	;# 
 13307   00010A                     C1DBTCFGU       equ	266	;# 
 13308   00010B                     C1DBTCFGT       equ	267	;# 
 13309   00010C                     C1TDCL          equ	268	;# 
 13310   00010D                     C1TDCH          equ	269	;# 
 13311   00010E                     C1TDCU          equ	270	;# 
 13312   000110                     C1TBC           equ	272	;# 
 13313   000110                     C1TBCL          equ	272	;# 
 13314   000111                     C1TBCH          equ	273	;# 
 13315   000112                     C1TBCU          equ	274	;# 
 13316   000113                     C1TBCT          equ	275	;# 
 13317   000114                     C1TSCONL        equ	276	;# 
 13318   000115                     C1TSCONH        equ	277	;# 
 13319   000116                     C1TSCONU        equ	278	;# 
 13320   000117                     C1TSCONT        equ	279	;# 
 13321   000118                     C1VECL          equ	280	;# 
 13322   000119                     C1VECH          equ	281	;# 
 13323   00011A                     C1VECU          equ	282	;# 
 13324   00011B                     C1VECT          equ	283	;# 
 13325   00011C                     C1INTL          equ	284	;# 
 13326   00011D                     C1INTH          equ	285	;# 
 13327   00011E                     C1INTU          equ	286	;# 
 13328   00011F                     C1INTT          equ	287	;# 
 13329   000120                     C1RXIF          equ	288	;# 
 13330   000120                     C1RXIFL         equ	288	;# 
 13331   000121                     C1RXIFH         equ	289	;# 
 13332   000122                     C1RXIFU         equ	290	;# 
 13333   000123                     C1RXIFT         equ	291	;# 
 13334   000124                     C1TXIF          equ	292	;# 
 13335   000124                     C1TXIFL         equ	292	;# 
 13336   000125                     C1TXIFH         equ	293	;# 
 13337   000126                     C1TXIFU         equ	294	;# 
 13338   000127                     C1TXIFT         equ	295	;# 
 13339   000128                     C1RXOVIF        equ	296	;# 
 13340   000128                     C1RXOVIFL       equ	296	;# 
 13341   000129                     C1RXOVIFH       equ	297	;# 
 13342   00012A                     C1RXOVIFU       equ	298	;# 
 13343   00012B                     C1RXOVIFT       equ	299	;# 
 13344   00012C                     C1TXATIF        equ	300	;# 
 13345   00012C                     C1TXATIFL       equ	300	;# 
 13346   00012D                     C1TXATIFH       equ	301	;# 
 13347   00012E                     C1TXATIFU       equ	302	;# 
 13348   00012F                     C1TXATIFT       equ	303	;# 
 13349   000130                     C1TXREQ         equ	304	;# 
 13350   000130                     C1TXREQL        equ	304	;# 
 13351   000131                     C1TXREQH        equ	305	;# 
 13352   000132                     C1TXREQU        equ	306	;# 
 13353   000133                     C1TXREQT        equ	307	;# 
 13354   000134                     C1TRECL         equ	308	;# 
 13355   000135                     C1TRECH         equ	309	;# 
 13356   000136                     C1TRECU         equ	310	;# 
 13357   000137                     C1TRECT         equ	311	;# 
 13358   000138                     C1BDIAG0L       equ	312	;# 
 13359   000139                     C1BDIAG0H       equ	313	;# 
 13360   00013C                     C1BDIAG1L       equ	316	;# 
 13361   00013D                     C1BDIAG1H       equ	317	;# 
 13362   00013E                     C1BDIAG1U       equ	318	;# 
 13363   00013F                     C1BDIAG1T       equ	319	;# 
 13364   000140                     C1TEFCONL       equ	320	;# 
 13365   000141                     C1TEFCONH       equ	321	;# 
 13366   000142                     C1TEFCONU       equ	322	;# 
 13367   000143                     C1TEFCONT       equ	323	;# 
 13368   000144                     C1TEFSTAL       equ	324	;# 
 13369   000145                     C1TEFSTAH       equ	325	;# 
 13370   000146                     C1TEFSTAU       equ	326	;# 
 13371   000147                     C1TEFSTAT       equ	327	;# 
 13372   000148                     C1TEFUA         equ	328	;# 
 13373   000148                     C1TEFUAL        equ	328	;# 
 13374   000149                     C1TEFUAH        equ	329	;# 
 13375   00014A                     C1TEFUAU        equ	330	;# 
 13376   00014B                     C1TEFUAT        equ	331	;# 
 13377   00014C                     C1FIFOBA        equ	332	;# 
 13378   00014C                     C1FIFOBAL       equ	332	;# 
 13379   00014D                     C1FIFOBAH       equ	333	;# 
 13380   00014E                     C1FIFOBAU       equ	334	;# 
 13381   00014F                     C1FIFOBAT       equ	335	;# 
 13382   000150                     C1TXQCONL       equ	336	;# 
 13383   000151                     C1TXQCONH       equ	337	;# 
 13384   000152                     C1TXQCONU       equ	338	;# 
 13385   000153                     C1TXQCONT       equ	339	;# 
 13386   000154                     C1TXQSTAL       equ	340	;# 
 13387   000155                     C1TXQSTAH       equ	341	;# 
 13388   000156                     C1TXQSTAU       equ	342	;# 
 13389   000157                     C1TXQSTAT       equ	343	;# 
 13390   000158                     C1TXQUA         equ	344	;# 
 13391   000158                     C1TXQUAL        equ	344	;# 
 13392   000159                     C1TXQUAH        equ	345	;# 
 13393   00015A                     C1TXQUAU        equ	346	;# 
 13394   00015B                     C1TXQUAT        equ	347	;# 
 13395   00015C                     C1FIFOCON1      equ	348	;# 
 13396   00015C                     C1FIFOCON1L     equ	348	;# 
 13397   00015D                     C1FIFOCON1H     equ	349	;# 
 13398   00015E                     C1FIFOCON1U     equ	350	;# 
 13399   00015F                     C1FIFOCON1T     equ	351	;# 
 13400   000160                     C1FIFOSTA1      equ	352	;# 
 13401   000160                     C1FIFOSTA1L     equ	352	;# 
 13402   000161                     C1FIFOSTA1H     equ	353	;# 
 13403   000162                     C1FIFOSTA1U     equ	354	;# 
 13404   000163                     C1FIFOSTA1T     equ	355	;# 
 13405   000164                     C1FIFOUA1       equ	356	;# 
 13406   000164                     C1FIFOUA1L      equ	356	;# 
 13407   000165                     C1FIFOUA1H      equ	357	;# 
 13408   000166                     C1FIFOUA1U      equ	358	;# 
 13409   000167                     C1FIFOUA1T      equ	359	;# 
 13410   000168                     C1FIFOCON2      equ	360	;# 
 13411   000168                     C1FIFOCON2L     equ	360	;# 
 13412   000169                     C1FIFOCON2H     equ	361	;# 
 13413   00016A                     C1FIFOCON2U     equ	362	;# 
 13414   00016B                     C1FIFOCON2T     equ	363	;# 
 13415   00016C                     C1FIFOSTA2      equ	364	;# 
 13416   00016C                     C1FIFOSTA2L     equ	364	;# 
 13417   00016D                     C1FIFOSTA2H     equ	365	;# 
 13418   00016E                     C1FIFOSTA2U     equ	366	;# 
 13419   00016F                     C1FIFOSTA2T     equ	367	;# 
 13420   000170                     C1FIFOUA2       equ	368	;# 
 13421   000170                     C1FIFOUA2L      equ	368	;# 
 13422   000171                     C1FIFOUA2H      equ	369	;# 
 13423   000172                     C1FIFOUA2U      equ	370	;# 
 13424   000173                     C1FIFOUA2T      equ	371	;# 
 13425   000174                     C1FIFOCON3      equ	372	;# 
 13426   000174                     C1FIFOCON3L     equ	372	;# 
 13427   000175                     C1FIFOCON3H     equ	373	;# 
 13428   000176                     C1FIFOCON3U     equ	374	;# 
 13429   000177                     C1FIFOCON3T     equ	375	;# 
 13430   000178                     C1FIFOSTA3      equ	376	;# 
 13431   000178                     C1FIFOSTA3L     equ	376	;# 
 13432   000179                     C1FIFOSTA3H     equ	377	;# 
 13433   00017A                     C1FIFOSTA3U     equ	378	;# 
 13434   00017B                     C1FIFOSTA3T     equ	379	;# 
 13435   00017C                     C1FIFOUA3       equ	380	;# 
 13436   00017C                     C1FIFOUA3L      equ	380	;# 
 13437   00017D                     C1FIFOUA3H      equ	381	;# 
 13438   00017E                     C1FIFOUA3U      equ	382	;# 
 13439   00017F                     C1FIFOUA3T      equ	383	;# 
 13440   000180                     C1FLTCON0L      equ	384	;# 
 13441   000181                     C1FLTCON0H      equ	385	;# 
 13442   000182                     C1FLTCON0U      equ	386	;# 
 13443   000183                     C1FLTCON0T      equ	387	;# 
 13444   000184                     C1FLTCON1L      equ	388	;# 
 13445   000185                     C1FLTCON1H      equ	389	;# 
 13446   000186                     C1FLTCON1U      equ	390	;# 
 13447   000187                     C1FLTCON1T      equ	391	;# 
 13448   000188                     C1FLTCON2L      equ	392	;# 
 13449   000189                     C1FLTCON2H      equ	393	;# 
 13450   00018A                     C1FLTCON2U      equ	394	;# 
 13451   00018B                     C1FLTCON2T      equ	395	;# 
 13452   00018C                     C1FLTOBJ0       equ	396	;# 
 13453   00018C                     C1FLTOBJ0L      equ	396	;# 
 13454   00018D                     C1FLTOBJ0H      equ	397	;# 
 13455   00018E                     C1FLTOBJ0U      equ	398	;# 
 13456   00018F                     C1FLTOBJ0T      equ	399	;# 
 13457   000190                     C1MASK0         equ	400	;# 
 13458   000190                     C1MASK0L        equ	400	;# 
 13459   000191                     C1MASK0H        equ	401	;# 
 13460   000192                     C1MASK0U        equ	402	;# 
 13461   000193                     C1MASK0T        equ	403	;# 
 13462   000194                     C1FLTOBJ1       equ	404	;# 
 13463   000194                     C1FLTOBJ1L      equ	404	;# 
 13464   000195                     C1FLTOBJ1H      equ	405	;# 
 13465   000196                     C1FLTOBJ1U      equ	406	;# 
 13466   000197                     C1FLTOBJ1T      equ	407	;# 
 13467   000198                     C1MASK1         equ	408	;# 
 13468   000198                     C1MASK1L        equ	408	;# 
 13469   000199                     C1MASK1H        equ	409	;# 
 13470   00019A                     C1MASK1U        equ	410	;# 
 13471   00019B                     C1MASK1T        equ	411	;# 
 13472   00019C                     C1FLTOBJ2       equ	412	;# 
 13473   00019C                     C1FLTOBJ2L      equ	412	;# 
 13474   00019D                     C1FLTOBJ2H      equ	413	;# 
 13475   00019E                     C1FLTOBJ2U      equ	414	;# 
 13476   00019F                     C1FLTOBJ2T      equ	415	;# 
 13477   0001A0                     C1MASK2         equ	416	;# 
 13478   0001A0                     C1MASK2L        equ	416	;# 
 13479   0001A1                     C1MASK2H        equ	417	;# 
 13480   0001A2                     C1MASK2U        equ	418	;# 
 13481   0001A3                     C1MASK2T        equ	419	;# 
 13482   0001A4                     C1FLTOBJ3       equ	420	;# 
 13483   0001A4                     C1FLTOBJ3L      equ	420	;# 
 13484   0001A5                     C1FLTOBJ3H      equ	421	;# 
 13485   0001A6                     C1FLTOBJ3U      equ	422	;# 
 13486   0001A7                     C1FLTOBJ3T      equ	423	;# 
 13487   0001A8                     C1MASK3         equ	424	;# 
 13488   0001A8                     C1MASK3L        equ	424	;# 
 13489   0001A9                     C1MASK3H        equ	425	;# 
 13490   0001AA                     C1MASK3U        equ	426	;# 
 13491   0001AB                     C1MASK3T        equ	427	;# 
 13492   0001AC                     C1FLTOBJ4       equ	428	;# 
 13493   0001AC                     C1FLTOBJ4L      equ	428	;# 
 13494   0001AD                     C1FLTOBJ4H      equ	429	;# 
 13495   0001AE                     C1FLTOBJ4U      equ	430	;# 
 13496   0001AF                     C1FLTOBJ4T      equ	431	;# 
 13497   0001B0                     C1MASK4         equ	432	;# 
 13498   0001B0                     C1MASK4L        equ	432	;# 
 13499   0001B1                     C1MASK4H        equ	433	;# 
 13500   0001B2                     C1MASK4U        equ	434	;# 
 13501   0001B3                     C1MASK4T        equ	435	;# 
 13502   0001B4                     C1FLTOBJ5       equ	436	;# 
 13503   0001B4                     C1FLTOBJ5L      equ	436	;# 
 13504   0001B5                     C1FLTOBJ5H      equ	437	;# 
 13505   0001B6                     C1FLTOBJ5U      equ	438	;# 
 13506   0001B7                     C1FLTOBJ5T      equ	439	;# 
 13507   0001B8                     C1MASK5         equ	440	;# 
 13508   0001B8                     C1MASK5L        equ	440	;# 
 13509   0001B9                     C1MASK5H        equ	441	;# 
 13510   0001BA                     C1MASK5U        equ	442	;# 
 13511   0001BB                     C1MASK5T        equ	443	;# 
 13512   0001BC                     C1FLTOBJ6       equ	444	;# 
 13513   0001BC                     C1FLTOBJ6L      equ	444	;# 
 13514   0001BD                     C1FLTOBJ6H      equ	445	;# 
 13515   0001BE                     C1FLTOBJ6U      equ	446	;# 
 13516   0001BF                     C1FLTOBJ6T      equ	447	;# 
 13517   0001C0                     C1MASK6         equ	448	;# 
 13518   0001C0                     C1MASK6L        equ	448	;# 
 13519   0001C1                     C1MASK6H        equ	449	;# 
 13520   0001C2                     C1MASK6U        equ	450	;# 
 13521   0001C3                     C1MASK6T        equ	451	;# 
 13522   0001C4                     C1FLTOBJ7       equ	452	;# 
 13523   0001C4                     C1FLTOBJ7L      equ	452	;# 
 13524   0001C5                     C1FLTOBJ7H      equ	453	;# 
 13525   0001C6                     C1FLTOBJ7U      equ	454	;# 
 13526   0001C7                     C1FLTOBJ7T      equ	455	;# 
 13527   0001C8                     C1MASK7         equ	456	;# 
 13528   0001C8                     C1MASK7L        equ	456	;# 
 13529   0001C9                     C1MASK7H        equ	457	;# 
 13530   0001CA                     C1MASK7U        equ	458	;# 
 13531   0001CB                     C1MASK7T        equ	459	;# 
 13532   0001CC                     C1FLTOBJ8       equ	460	;# 
 13533   0001CC                     C1FLTOBJ8L      equ	460	;# 
 13534   0001CD                     C1FLTOBJ8H      equ	461	;# 
 13535   0001CE                     C1FLTOBJ8U      equ	462	;# 
 13536   0001CF                     C1FLTOBJ8T      equ	463	;# 
 13537   0001D0                     C1MASK8         equ	464	;# 
 13538   0001D0                     C1MASK8L        equ	464	;# 
 13539   0001D1                     C1MASK8H        equ	465	;# 
 13540   0001D2                     C1MASK8U        equ	466	;# 
 13541   0001D3                     C1MASK8T        equ	467	;# 
 13542   0001D4                     C1FLTOBJ9       equ	468	;# 
 13543   0001D4                     C1FLTOBJ9L      equ	468	;# 
 13544   0001D5                     C1FLTOBJ9H      equ	469	;# 
 13545   0001D6                     C1FLTOBJ9U      equ	470	;# 
 13546   0001D7                     C1FLTOBJ9T      equ	471	;# 
 13547   0001D8                     C1MASK9         equ	472	;# 
 13548   0001D8                     C1MASK9L        equ	472	;# 
 13549   0001D9                     C1MASK9H        equ	473	;# 
 13550   0001DA                     C1MASK9U        equ	474	;# 
 13551   0001DB                     C1MASK9T        equ	475	;# 
 13552   0001DC                     C1FLTOBJ10      equ	476	;# 
 13553   0001DC                     C1FLTOBJ10L     equ	476	;# 
 13554   0001DD                     C1FLTOBJ10H     equ	477	;# 
 13555   0001DE                     C1FLTOBJ10U     equ	478	;# 
 13556   0001DF                     C1FLTOBJ10T     equ	479	;# 
 13557   0001E0                     C1MASK10        equ	480	;# 
 13558   0001E0                     C1MASK10L       equ	480	;# 
 13559   0001E1                     C1MASK10H       equ	481	;# 
 13560   0001E2                     C1MASK10U       equ	482	;# 
 13561   0001E3                     C1MASK10T       equ	483	;# 
 13562   0001E4                     C1FLTOBJ11      equ	484	;# 
 13563   0001E4                     C1FLTOBJ11L     equ	484	;# 
 13564   0001E5                     C1FLTOBJ11H     equ	485	;# 
 13565   0001E6                     C1FLTOBJ11U     equ	486	;# 
 13566   0001E7                     C1FLTOBJ11T     equ	487	;# 
 13567   0001E8                     C1MASK11        equ	488	;# 
 13568   0001E8                     C1MASK11L       equ	488	;# 
 13569   0001E9                     C1MASK11H       equ	489	;# 
 13570   0001EA                     C1MASK11U       equ	490	;# 
 13571   0001EB                     C1MASK11T       equ	491	;# 
 13572   000200                     PPSLOCK         equ	512	;# 
 13573   000201                     RA0PPS          equ	513	;# 
 13574   000202                     RA1PPS          equ	514	;# 
 13575   000203                     RA2PPS          equ	515	;# 
 13576   000204                     RA3PPS          equ	516	;# 
 13577   000205                     RA4PPS          equ	517	;# 
 13578   000206                     RA5PPS          equ	518	;# 
 13579   000207                     RA6PPS          equ	519	;# 
 13580   000208                     RA7PPS          equ	520	;# 
 13581   000209                     RB0PPS          equ	521	;# 
 13582   00020A                     RB1PPS          equ	522	;# 
 13583   00020B                     RB2PPS          equ	523	;# 
 13584   00020C                     RB3PPS          equ	524	;# 
 13585   00020D                     RB4PPS          equ	525	;# 
 13586   00020E                     RB5PPS          equ	526	;# 
 13587   00020F                     RB6PPS          equ	527	;# 
 13588   000210                     RB7PPS          equ	528	;# 
 13589   000211                     RC0PPS          equ	529	;# 
 13590   000212                     RC1PPS          equ	530	;# 
 13591   000213                     RC2PPS          equ	531	;# 
 13592   000214                     RC3PPS          equ	532	;# 
 13593   000215                     RC4PPS          equ	533	;# 
 13594   000216                     RC5PPS          equ	534	;# 
 13595   000217                     RC6PPS          equ	535	;# 
 13596   000218                     RC7PPS          equ	536	;# 
 13597   00023D                     CANRXPPS        equ	573	;# 
 13598   00023E                     INT0PPS         equ	574	;# 
 13599   00023F                     INT1PPS         equ	575	;# 
 13600   000240                     INT2PPS         equ	576	;# 
 13601   000241                     T0CKIPPS        equ	577	;# 
 13602   000242                     T1CKIPPS        equ	578	;# 
 13603   000243                     T1GPPS          equ	579	;# 
 13604   000244                     T3CKIPPS        equ	580	;# 
 13605   000245                     T3GPPS          equ	581	;# 
 13606   000246                     T5CKIPPS        equ	582	;# 
 13607   000247                     T5GPPS          equ	583	;# 
 13608   000248                     T2INPPS         equ	584	;# 
 13609   000249                     T4INPPS         equ	585	;# 
 13610   00024A                     T6INPPS         equ	586	;# 
 13611   00024B                     TUIN0PPS        equ	587	;# 
 13612   00024C                     TUIN1PPS        equ	588	;# 
 13613   00024F                     CCP1PPS         equ	591	;# 
 13614   000250                     CCP2PPS         equ	592	;# 
 13615   000251                     CCP3PPS         equ	593	;# 
 13616   000253                     PWM1ERSPPS      equ	595	;# 
 13617   000254                     PWM2ERSPPS      equ	596	;# 
 13618   000255                     PWM3ERSPPS      equ	597	;# 
 13619   000256                     PWM4ERSPPS      equ	598	;# 
 13620   000257                     PWMIN0PPS       equ	599	;# 
 13621   000258                     PWMIN1PPS       equ	600	;# 
 13622   000259                     SMT1WINPPS      equ	601	;# 
 13623   00025A                     SMT1SIGPPS      equ	602	;# 
 13624   00025B                     CWG1PPS         equ	603	;# 
 13625   00025B                     CWG1INPPS       equ	603	;# 
 13626   00025C                     CWG2PPS         equ	604	;# 
 13627   00025C                     CWG2INPPS       equ	604	;# 
 13628   00025D                     CWG3PPS         equ	605	;# 
 13629   00025D                     CWG3INPPS       equ	605	;# 
 13630   00025E                     MD1CARLPPS      equ	606	;# 
 13631   00025E                     MDCARLPPS       equ	606	;# 
 13632   00025F                     MD1CARHPPS      equ	607	;# 
 13633   00025F                     MDCARHPPS       equ	607	;# 
 13634   000260                     MD1SRCPPS       equ	608	;# 
 13635   000260                     MDSRCPPS        equ	608	;# 
 13636   000261                     CLCIN0PPS       equ	609	;# 
 13637   000262                     CLCIN1PPS       equ	610	;# 
 13638   000263                     CLCIN2PPS       equ	611	;# 
 13639   000264                     CLCIN3PPS       equ	612	;# 
 13640   000265                     CLCIN4PPS       equ	613	;# 
 13641   000266                     CLCIN5PPS       equ	614	;# 
 13642   000267                     CLCIN6PPS       equ	615	;# 
 13643   000268                     CLCIN7PPS       equ	616	;# 
 13644   000269                     ADACTPPS        equ	617	;# 
 13645   00026A                     SPI1SCKPPS      equ	618	;# 
 13646   00026B                     SPI1SDIPPS      equ	619	;# 
 13647   00026C                     SPI1SSPPS       equ	620	;# 
 13648   00026D                     SPI2SCKPPS      equ	621	;# 
 13649   00026E                     SPI2SDIPPS      equ	622	;# 
 13650   00026F                     SPI2SSPPS       equ	623	;# 
 13651   000270                     I2C1SDAPPS      equ	624	;# 
 13652   000271                     I2C1SCLPPS      equ	625	;# 
 13653   000272                     U1RXPPS         equ	626	;# 
 13654   000273                     U1CTSPPS        equ	627	;# 
 13655   000274                     U2RXPPS         equ	628	;# 
 13656   000275                     U2CTSPPS        equ	629	;# 
 13657   000276                     U3RXPPS         equ	630	;# 
 13658   000277                     U3CTSPPS        equ	631	;# 
 13659   000278                     U4RXPPS         equ	632	;# 
 13660   000279                     U4CTSPPS        equ	633	;# 
 13661   00027A                     U5RXPPS         equ	634	;# 
 13662   00027B                     U5CTSPPS        equ	635	;# 
 13663   000286                     RC4I2C          equ	646	;# 
 13664   000287                     RC3I2C          equ	647	;# 
 13665   000288                     RB2I2C          equ	648	;# 
 13666   000289                     RB1I2C          equ	649	;# 
 13667   00028A                     I2C1RXB         equ	650	;# 
 13668   00028B                     I2C1TXB         equ	651	;# 
 13669   00028C                     I2C1CNTL        equ	652	;# 
 13670   00028D                     I2C1CNTH        equ	653	;# 
 13671   00028E                     I2C1ADB0        equ	654	;# 
 13672   00028F                     I2C1ADB1        equ	655	;# 
 13673   000290                     I2C1ADR0        equ	656	;# 
 13674   000291                     I2C1ADR1        equ	657	;# 
 13675   000292                     I2C1ADR2        equ	658	;# 
 13676   000293                     I2C1ADR3        equ	659	;# 
 13677   000294                     I2C1CON0        equ	660	;# 
 13678   000295                     I2C1CON1        equ	661	;# 
 13679   000296                     I2C1CON2        equ	662	;# 
 13680   000297                     I2C1ERR         equ	663	;# 
 13681   000298                     I2C1STAT0       equ	664	;# 
 13682   000299                     I2C1STAT1       equ	665	;# 
 13683   00029A                     I2C1PIR         equ	666	;# 
 13684   00029B                     I2C1PIE         equ	667	;# 
 13685   00029C                     I2C1BTO         equ	668	;# 
 13686   00029D                     I2C1BAUD        equ	669	;# 
 13687   00029E                     I2C1CLK         equ	670	;# 
 13688   00029F                     I2C1BTOC        equ	671	;# 
 13689   0002A1                     U1RXB           equ	673	;# 
 13690   0002A1                     U1RXBL          equ	673	;# 
 13691   0002A2                     U1RXCHK         equ	674	;# 
 13692   0002A3                     U1TXB           equ	675	;# 
 13693   0002A3                     U1TXBL          equ	675	;# 
 13694   0002A4                     U1TXCHK         equ	676	;# 
 13695   0002A5                     U1P1            equ	677	;# 
 13696   0002A5                     U1P1L           equ	677	;# 
 13697   0002A6                     U1P1H           equ	678	;# 
 13698   0002A7                     U1P2            equ	679	;# 
 13699   0002A7                     U1P2L           equ	679	;# 
 13700   0002A8                     U1P2H           equ	680	;# 
 13701   0002A9                     U1P3            equ	681	;# 
 13702   0002A9                     U1P3L           equ	681	;# 
 13703   0002AA                     U1P3H           equ	682	;# 
 13704   0002AB                     U1CON0          equ	683	;# 
 13705   0002AC                     U1CON1          equ	684	;# 
 13706   0002AD                     U1CON2          equ	685	;# 
 13707   0002AE                     U1BRG           equ	686	;# 
 13708   0002AE                     U1BRGL          equ	686	;# 
 13709   0002AF                     U1BRGH          equ	687	;# 
 13710   0002B0                     U1FIFO          equ	688	;# 
 13711   0002B1                     U1UIR           equ	689	;# 
 13712   0002B2                     U1ERRIR         equ	690	;# 
 13713   0002B3                     U1ERRIE         equ	691	;# 
 13714   0002B4                     U2RXB           equ	692	;# 
 13715   0002B4                     U2RXBL          equ	692	;# 
 13716   0002B5                     U2RXCHK         equ	693	;# 
 13717   0002B6                     U2TXB           equ	694	;# 
 13718   0002B6                     U2TXBL          equ	694	;# 
 13719   0002B7                     U2TXCHK         equ	695	;# 
 13720   0002B8                     U2P1            equ	696	;# 
 13721   0002B8                     U2P1L           equ	696	;# 
 13722   0002B9                     U2P1H           equ	697	;# 
 13723   0002BA                     U2P2            equ	698	;# 
 13724   0002BA                     U2P2L           equ	698	;# 
 13725   0002BB                     U2P2H           equ	699	;# 
 13726   0002BC                     U2P3            equ	700	;# 
 13727   0002BC                     U2P3L           equ	700	;# 
 13728   0002BD                     U2P3H           equ	701	;# 
 13729   0002BE                     U2CON0          equ	702	;# 
 13730   0002BF                     U2CON1          equ	703	;# 
 13731   0002C0                     U2CON2          equ	704	;# 
 13732   0002C1                     U2BRG           equ	705	;# 
 13733   0002C1                     U2BRGL          equ	705	;# 
 13734   0002C2                     U2BRGH          equ	706	;# 
 13735   0002C3                     U2FIFO          equ	707	;# 
 13736   0002C4                     U2UIR           equ	708	;# 
 13737   0002C5                     U2ERRIR         equ	709	;# 
 13738   0002C6                     U2ERRIE         equ	710	;# 
 13739   0002C7                     U3RXB           equ	711	;# 
 13740   0002C7                     U3RXBL          equ	711	;# 
 13741   0002C9                     U3TXB           equ	713	;# 
 13742   0002C9                     U3TXBL          equ	713	;# 
 13743   0002CB                     U3P1            equ	715	;# 
 13744   0002CB                     U3P1L           equ	715	;# 
 13745   0002CD                     U3P2            equ	717	;# 
 13746   0002CD                     U3P2L           equ	717	;# 
 13747   0002CF                     U3P3            equ	719	;# 
 13748   0002CF                     U3P3L           equ	719	;# 
 13749   0002D1                     U3CON0          equ	721	;# 
 13750   0002D2                     U3CON1          equ	722	;# 
 13751   0002D3                     U3CON2          equ	723	;# 
 13752   0002D4                     U3BRG           equ	724	;# 
 13753   0002D4                     U3BRGL          equ	724	;# 
 13754   0002D5                     U3BRGH          equ	725	;# 
 13755   0002D6                     U3FIFO          equ	726	;# 
 13756   0002D7                     U3UIR           equ	727	;# 
 13757   0002D8                     U3ERRIR         equ	728	;# 
 13758   0002D9                     U3ERRIE         equ	729	;# 
 13759   0002DA                     U4RXB           equ	730	;# 
 13760   0002DA                     U4RXBL          equ	730	;# 
 13761   0002DC                     U4TXB           equ	732	;# 
 13762   0002DC                     U4TXBL          equ	732	;# 
 13763   0002DE                     U4P1            equ	734	;# 
 13764   0002DE                     U4P1L           equ	734	;# 
 13765   0002E0                     U4P2            equ	736	;# 
 13766   0002E0                     U4P2L           equ	736	;# 
 13767   0002E2                     U4P3            equ	738	;# 
 13768   0002E2                     U4P3L           equ	738	;# 
 13769   0002E4                     U4CON0          equ	740	;# 
 13770   0002E5                     U4CON1          equ	741	;# 
 13771   0002E6                     U4CON2          equ	742	;# 
 13772   0002E7                     U4BRG           equ	743	;# 
 13773   0002E7                     U4BRGL          equ	743	;# 
 13774   0002E8                     U4BRGH          equ	744	;# 
 13775   0002E9                     U4FIFO          equ	745	;# 
 13776   0002EA                     U4UIR           equ	746	;# 
 13777   0002EB                     U4ERRIR         equ	747	;# 
 13778   0002EC                     U4ERRIE         equ	748	;# 
 13779   0002ED                     U5RXB           equ	749	;# 
 13780   0002ED                     U5RXBL          equ	749	;# 
 13781   0002EF                     U5TXB           equ	751	;# 
 13782   0002EF                     U5TXBL          equ	751	;# 
 13783   0002F1                     U5P1            equ	753	;# 
 13784   0002F1                     U5P1L           equ	753	;# 
 13785   0002F3                     U5P2            equ	755	;# 
 13786   0002F3                     U5P2L           equ	755	;# 
 13787   0002F5                     U5P3            equ	757	;# 
 13788   0002F5                     U5P3L           equ	757	;# 
 13789   0002F7                     U5CON0          equ	759	;# 
 13790   0002F8                     U5CON1          equ	760	;# 
 13791   0002F9                     U5CON2          equ	761	;# 
 13792   0002FA                     U5BRG           equ	762	;# 
 13793   0002FA                     U5BRGL          equ	762	;# 
 13794   0002FB                     U5BRGH          equ	763	;# 
 13795   0002FC                     U5FIFO          equ	764	;# 
 13796   0002FD                     U5UIR           equ	765	;# 
 13797   0002FE                     U5ERRIR         equ	766	;# 
 13798   0002FF                     U5ERRIE         equ	767	;# 
 13799   000300                     SMT1TMR         equ	768	;# 
 13800   000300                     SMT1TMRL        equ	768	;# 
 13801   000301                     SMT1TMRH        equ	769	;# 
 13802   000302                     SMT1TMRU        equ	770	;# 
 13803   000303                     SMT1CPR         equ	771	;# 
 13804   000303                     SMT1CPRL        equ	771	;# 
 13805   000304                     SMT1CPRH        equ	772	;# 
 13806   000305                     SMT1CPRU        equ	773	;# 
 13807   000306                     SMT1CPW         equ	774	;# 
 13808   000306                     SMT1CPWL        equ	774	;# 
 13809   000307                     SMT1CPWH        equ	775	;# 
 13810   000308                     SMT1CPWU        equ	776	;# 
 13811   000309                     SMT1PR          equ	777	;# 
 13812   000309                     SMT1PRL         equ	777	;# 
 13813   00030A                     SMT1PRH         equ	778	;# 
 13814   00030B                     SMT1PRU         equ	779	;# 
 13815   00030C                     SMT1CON0        equ	780	;# 
 13816   00030D                     SMT1CON1        equ	781	;# 
 13817   00030E                     SMT1STAT        equ	782	;# 
 13818   00030F                     SMT1CLK         equ	783	;# 
 13819   000310                     SMT1SIG         equ	784	;# 
 13820   000311                     SMT1WIN         equ	785	;# 
 13821   000318                     TMR0L           equ	792	;# 
 13822   000318                     TMR0            equ	792	;# 
 13823   000319                     TMR0H           equ	793	;# 
 13824   000319                     PR0             equ	793	;# 
 13825   00031A                     T0CON0          equ	794	;# 
 13826   00031B                     T0CON1          equ	795	;# 
 13827   00031C                     TMR1            equ	796	;# 
 13828   00031C                     TMR1L           equ	796	;# 
 13829   00031D                     TMR1H           equ	797	;# 
 13830   00031E                     T1CON           equ	798	;# 
 13831   00031E                     TMR1CON         equ	798	;# 
 13832   00031F                     T1GCON          equ	799	;# 
 13833   00031F                     TMR1GCON        equ	799	;# 
 13834   000320                     T1GATE          equ	800	;# 
 13835   000320                     TMR1GATE        equ	800	;# 
 13836   000321                     T1CLK           equ	801	;# 
 13837   000321                     TMR1CLK         equ	801	;# 
 13838   000321                     PR1             equ	801	;# 
 13839   000322                     T2TMR           equ	802	;# 
 13840   000322                     TMR2            equ	802	;# 
 13841   000323                     T2PR            equ	803	;# 
 13842   000323                     PR2             equ	803	;# 
 13843   000324                     T2CON           equ	804	;# 
 13844   000325                     T2HLT           equ	805	;# 
 13845   000326                     T2CLKCON        equ	806	;# 
 13846   000326                     T2CLK           equ	806	;# 
 13847   000327                     T2RST           equ	807	;# 
 13848   000328                     TMR3            equ	808	;# 
 13849   000328                     TMR3L           equ	808	;# 
 13850   000329                     TMR3H           equ	809	;# 
 13851   00032A                     T3CON           equ	810	;# 
 13852   00032A                     TMR3CON         equ	810	;# 
 13853   00032B                     T3GCON          equ	811	;# 
 13854   00032B                     TMR3GCON        equ	811	;# 
 13855   00032C                     T3GATE          equ	812	;# 
 13856   00032C                     TMR3GATE        equ	812	;# 
 13857   00032D                     T3CLK           equ	813	;# 
 13858   00032D                     TMR3CLK         equ	813	;# 
 13859   00032D                     PR3             equ	813	;# 
 13860   00032E                     T4TMR           equ	814	;# 
 13861   00032E                     TMR4            equ	814	;# 
 13862   00032F                     T4PR            equ	815	;# 
 13863   00032F                     PR4             equ	815	;# 
 13864   000330                     T4CON           equ	816	;# 
 13865   000331                     T4HLT           equ	817	;# 
 13866   000332                     T4CLKCON        equ	818	;# 
 13867   000332                     T4CLK           equ	818	;# 
 13868   000333                     T4RST           equ	819	;# 
 13869   000334                     TMR5            equ	820	;# 
 13870   000334                     TMR5L           equ	820	;# 
 13871   000335                     TMR5H           equ	821	;# 
 13872   000336                     T5CON           equ	822	;# 
 13873   000336                     TMR5CON         equ	822	;# 
 13874   000337                     T5GCON          equ	823	;# 
 13875   000337                     TMR5GCON        equ	823	;# 
 13876   000338                     T5GATE          equ	824	;# 
 13877   000338                     TMR5GATE        equ	824	;# 
 13878   000339                     T5CLK           equ	825	;# 
 13879   000339                     TMR5CLK         equ	825	;# 
 13880   000339                     PR5             equ	825	;# 
 13881   00033A                     T6TMR           equ	826	;# 
 13882   00033A                     TMR6            equ	826	;# 
 13883   00033B                     T6PR            equ	827	;# 
 13884   00033B                     PR6             equ	827	;# 
 13885   00033C                     T6CON           equ	828	;# 
 13886   00033D                     T6HLT           equ	829	;# 
 13887   00033E                     T6CLKCON        equ	830	;# 
 13888   00033E                     T6CLK           equ	830	;# 
 13889   00033F                     T6RST           equ	831	;# 
 13890   000340                     CCPR1           equ	832	;# 
 13891   000340                     CCPR1L          equ	832	;# 
 13892   000341                     CCPR1H          equ	833	;# 
 13893   000342                     CCP1CON         equ	834	;# 
 13894   000343                     CCP1CAP         equ	835	;# 
 13895   000344                     CCPR2           equ	836	;# 
 13896   000344                     CCPR2L          equ	836	;# 
 13897   000345                     CCPR2H          equ	837	;# 
 13898   000346                     CCP2CON         equ	838	;# 
 13899   000347                     CCP2CAP         equ	839	;# 
 13900   000348                     CCPR3           equ	840	;# 
 13901   000348                     CCPR3L          equ	840	;# 
 13902   000349                     CCPR3H          equ	841	;# 
 13903   00034A                     CCP3CON         equ	842	;# 
 13904   00034B                     CCP3CAP         equ	843	;# 
 13905   00034C                     CCPTMRS0        equ	844	;# 
 13906   00034F                     CRCDATA         equ	847	;# 
 13907   00034F                     CRCDATAL        equ	847	;# 
 13908   000350                     CRCDATAH        equ	848	;# 
 13909   000351                     CRCDATAU        equ	849	;# 
 13910   000352                     CRCDATAT        equ	850	;# 
 13911   000353                     CRCOUT          equ	851	;# 
 13912   000353                     CRCSHFT         equ	851	;# 
 13913   000353                     CRCXOR          equ	851	;# 
 13914   000353                     CRCOUTL         equ	851	;# 
 13915   000353                     CRCSHFTL        equ	851	;# 
 13916   000353                     CRCSHIFTL       equ	851	;# 
 13917   000353                     CRCXORL         equ	851	;# 
 13918   000354                     CRCOUTH         equ	852	;# 
 13919   000354                     CRCSHFTH        equ	852	;# 
 13920   000354                     CRCSHIFTH       equ	852	;# 
 13921   000354                     CRCXORH         equ	852	;# 
 13922   000355                     CRCOUTU         equ	853	;# 
 13923   000355                     CRCSHFTU        equ	853	;# 
 13924   000355                     CRCSHIFTU       equ	853	;# 
 13925   000355                     CRCXORU         equ	853	;# 
 13926   000356                     CRCOUTT         equ	854	;# 
 13927   000356                     CRCSHFTT        equ	854	;# 
 13928   000356                     CRCSHIFTT       equ	854	;# 
 13929   000356                     CRCXORT         equ	854	;# 
 13930   000357                     CRCCON0         equ	855	;# 
 13931   000358                     CRCCON1         equ	856	;# 
 13932   000359                     CRCCON2         equ	857	;# 
 13933   00035A                     SCANLADR        equ	858	;# 
 13934   00035A                     SCANLADRL       equ	858	;# 
 13935   00035B                     SCANLADRH       equ	859	;# 
 13936   00035C                     SCANLADRU       equ	860	;# 
 13937   00035D                     SCANHADR        equ	861	;# 
 13938   00035D                     SCANHADRL       equ	861	;# 
 13939   00035E                     SCANHADRH       equ	862	;# 
 13940   00035F                     SCANHADRU       equ	863	;# 
 13941   000360                     SCANCON0        equ	864	;# 
 13942   000361                     SCANTRIG        equ	865	;# 
 13943   000362                     IPR0            equ	866	;# 
 13944   000363                     IPR1            equ	867	;# 
 13945   000364                     IPR2            equ	868	;# 
 13946   000365                     IPR3            equ	869	;# 
 13947   000366                     IPR4            equ	870	;# 
 13948   000367                     IPR5            equ	871	;# 
 13949   000368                     IPR6            equ	872	;# 
 13950   000369                     IPR7            equ	873	;# 
 13951   00036A                     IPR8            equ	874	;# 
 13952   00036B                     IPR9            equ	875	;# 
 13953   00036C                     IPR10           equ	876	;# 
 13954   00036D                     IPR11           equ	877	;# 
 13955   00036E                     IPR12           equ	878	;# 
 13956   00036F                     IPR13           equ	879	;# 
 13957   000370                     IPR14           equ	880	;# 
 13958   000371                     IPR15           equ	881	;# 
 13959   000373                     STATUS_CSHAD    equ	883	;# 
 13960   000374                     WREG_CSHAD      equ	884	;# 
 13961   000375                     BSR_CSHAD       equ	885	;# 
 13962   000376                     SHADCON         equ	886	;# 
 13963   000377                     STATUS_SHAD     equ	887	;# 
 13964   000378                     WREG_SHAD       equ	888	;# 
 13965   000379                     BSR_SHAD        equ	889	;# 
 13966   00037A                     PCLATH_SHAD     equ	890	;# 
 13967   00037B                     PCLATU_SHAD     equ	891	;# 
 13968   00037C                     FSR0SH          equ	892	;# 
 13969   00037C                     FSR0L_SHAD      equ	892	;# 
 13970   00037D                     FSR0H_SHAD      equ	893	;# 
 13971   00037E                     FSR1SH          equ	894	;# 
 13972   00037E                     FSR1L_SHAD      equ	894	;# 
 13973   00037F                     FSR1H_SHAD      equ	895	;# 
 13974   000380                     FSR2SH          equ	896	;# 
 13975   000380                     FSR2L_SHAD      equ	896	;# 
 13976   000381                     FSR2H_SHAD      equ	897	;# 
 13977   000382                     PRODSH          equ	898	;# 
 13978   000382                     PRODL_SHAD      equ	898	;# 
 13979   000383                     PRODH_SHAD      equ	899	;# 
 13980   000387                     TU16ACON0       equ	903	;# 
 13981   000388                     TU16ACON1       equ	904	;# 
 13982   000389                     TU16AHLT        equ	905	;# 
 13983   00038A                     TU16APS         equ	906	;# 
 13984   00038B                     TU16ATMR        equ	907	;# 
 13985   00038B                     TU16ACR         equ	907	;# 
 13986   00038B                     TU16ATMRL       equ	907	;# 
 13987   00038B                     TU16ACRL        equ	907	;# 
 13988   00038C                     TU16ATMRH       equ	908	;# 
 13989   00038C                     TU16ACRH        equ	908	;# 
 13990   00038D                     TU16APR         equ	909	;# 
 13991   00038D                     TU16APRL        equ	909	;# 
 13992   00038E                     TU16APRH        equ	910	;# 
 13993   00038F                     TU16ACLK        equ	911	;# 
 13994   000390                     TU16AERS        equ	912	;# 
 13995   000393                     TU16BCON0       equ	915	;# 
 13996   000394                     TU16BCON1       equ	916	;# 
 13997   000395                     TU16BHLT        equ	917	;# 
 13998   000396                     TU16BPS         equ	918	;# 
 13999   000397                     TU16BTMR        equ	919	;# 
 14000   000397                     TU16BCR         equ	919	;# 
 14001   000397                     TU16BTMRL       equ	919	;# 
 14002   000397                     TU16BCRL        equ	919	;# 
 14003   000398                     TU16BTMRH       equ	920	;# 
 14004   000398                     TU16BCRH        equ	920	;# 
 14005   000399                     TU16BPR         equ	921	;# 
 14006   000399                     TU16BPRL        equ	921	;# 
 14007   00039A                     TU16BPRH        equ	922	;# 
 14008   00039B                     TU16BCLK        equ	923	;# 
 14009   00039C                     TU16BERS        equ	924	;# 
 14010   0003BB                     TUCHAIN         equ	955	;# 
 14011   0003BC                     CWG1CLK         equ	956	;# 
 14012   0003BC                     CWG1CLKCON      equ	956	;# 
 14013   0003BD                     CWG1ISM         equ	957	;# 
 14014   0003BE                     CWG1DBR         equ	958	;# 
 14015   0003BF                     CWG1DBF         equ	959	;# 
 14016   0003C0                     CWG1CON0        equ	960	;# 
 14017   0003C1                     CWG1CON1        equ	961	;# 
 14018   0003C2                     CWG1AS0         equ	962	;# 
 14019   0003C3                     CWG1AS1         equ	963	;# 
 14020   0003C4                     CWG1STR         equ	964	;# 
 14021   0003C5                     CWG2CLK         equ	965	;# 
 14022   0003C5                     CWG2CLKCON      equ	965	;# 
 14023   0003C6                     CWG2ISM         equ	966	;# 
 14024   0003C7                     CWG2DBR         equ	967	;# 
 14025   0003C8                     CWG2DBF         equ	968	;# 
 14026   0003C9                     CWG2CON0        equ	969	;# 
 14027   0003CA                     CWG2CON1        equ	970	;# 
 14028   0003CB                     CWG2AS0         equ	971	;# 
 14029   0003CC                     CWG2AS1         equ	972	;# 
 14030   0003CD                     CWG2STR         equ	973	;# 
 14031   0003CE                     CWG3CLK         equ	974	;# 
 14032   0003CE                     CWG3CLKCON      equ	974	;# 
 14033   0003CF                     CWG3ISM         equ	975	;# 
 14034   0003D0                     CWG3DBR         equ	976	;# 
 14035   0003D1                     CWG3DBF         equ	977	;# 
 14036   0003D2                     CWG3CON0        equ	978	;# 
 14037   0003D3                     CWG3CON1        equ	979	;# 
 14038   0003D4                     CWG3AS0         equ	980	;# 
 14039   0003D5                     CWG3AS1         equ	981	;# 
 14040   0003D6                     CWG3STR         equ	982	;# 
 14041   0003D7                     FVRCON          equ	983	;# 
 14042   0003D8                     ADCPCON         equ	984	;# 
 14043   0003D8                     ADCP            equ	984	;# 
 14044   0003D9                     ADLTH           equ	985	;# 
 14045   0003D9                     ADLTHL          equ	985	;# 
 14046   0003DA                     ADLTHH          equ	986	;# 
 14047   0003DB                     ADUTH           equ	987	;# 
 14048   0003DB                     ADUTHL          equ	987	;# 
 14049   0003DC                     ADUTHH          equ	988	;# 
 14050   0003DD                     ADERR           equ	989	;# 
 14051   0003DD                     ADERRL          equ	989	;# 
 14052   0003DE                     ADERRH          equ	990	;# 
 14053   0003DF                     ADSTPT          equ	991	;# 
 14054   0003DF                     ADSTPTL         equ	991	;# 
 14055   0003E0                     ADSTPTH         equ	992	;# 
 14056   0003E1                     ADFLTR          equ	993	;# 
 14057   0003E1                     ADFLTRL         equ	993	;# 
 14058   0003E2                     ADFLTRH         equ	994	;# 
 14059   0003E3                     ADACC           equ	995	;# 
 14060   0003E3                     ADACCL          equ	995	;# 
 14061   0003E4                     ADACCH          equ	996	;# 
 14062   0003E5                     ADACCU          equ	997	;# 
 14063   0003E6                     ADCNT           equ	998	;# 
 14064   0003E7                     ADRPT           equ	999	;# 
 14065   0003E8                     ADPREV          equ	1000	;# 
 14066   0003E8                     ADPREVL         equ	1000	;# 
 14067   0003E9                     ADPREVH         equ	1001	;# 
 14068   0003EA                     ADRES           equ	1002	;# 
 14069   0003EA                     ADRESL          equ	1002	;# 
 14070   0003EB                     ADRESH          equ	1003	;# 
 14071   0003EC                     ADPCH           equ	1004	;# 
 14072   0003EE                     ADACQ           equ	1006	;# 
 14073   0003EE                     ADACQL          equ	1006	;# 
 14074   0003EF                     ADACQH          equ	1007	;# 
 14075   0003F0                     ADCAP           equ	1008	;# 
 14076   0003F1                     ADPRE           equ	1009	;# 
 14077   0003F1                     ADPREL          equ	1009	;# 
 14078   0003F2                     ADPREH          equ	1010	;# 
 14079   0003F3                     ADCON0          equ	1011	;# 
 14080   0003F4                     ADCON1          equ	1012	;# 
 14081   0003F5                     ADCON2          equ	1013	;# 
 14082   0003F6                     ADCON3          equ	1014	;# 
 14083   0003F7                     ADSTAT          equ	1015	;# 
 14084   0003F8                     ADREF           equ	1016	;# 
 14085   0003F9                     ADACT           equ	1017	;# 
 14086   0003FA                     ADCLK           equ	1018	;# 
 14087   0003FB                     ADCTX           equ	1019	;# 
 14088   0003FC                     ADCSEL1         equ	1020	;# 
 14089   0003FD                     ADCSEL2         equ	1021	;# 
 14090   0003FE                     ADCSEL3         equ	1022	;# 
 14091   0003FF                     ADCSEL4         equ	1023	;# 
 14092   000400                     ANSELA          equ	1024	;# 
 14093   000401                     WPUA            equ	1025	;# 
 14094   000402                     ODCONA          equ	1026	;# 
 14095   000403                     SLRCONA         equ	1027	;# 
 14096   000404                     INLVLA          equ	1028	;# 
 14097   000405                     IOCAP           equ	1029	;# 
 14098   000406                     IOCAN           equ	1030	;# 
 14099   000407                     IOCAF           equ	1031	;# 
 14100   000408                     ANSELB          equ	1032	;# 
 14101   000409                     WPUB            equ	1033	;# 
 14102   00040A                     ODCONB          equ	1034	;# 
 14103   00040B                     SLRCONB         equ	1035	;# 
 14104   00040C                     INLVLB          equ	1036	;# 
 14105   00040D                     IOCBP           equ	1037	;# 
 14106   00040E                     IOCBN           equ	1038	;# 
 14107   00040F                     IOCBF           equ	1039	;# 
 14108   000410                     ANSELC          equ	1040	;# 
 14109   000411                     WPUC            equ	1041	;# 
 14110   000412                     ODCONC          equ	1042	;# 
 14111   000413                     SLRCONC         equ	1043	;# 
 14112   000414                     INLVLC          equ	1044	;# 
 14113   000415                     IOCCP           equ	1045	;# 
 14114   000416                     IOCCN           equ	1046	;# 
 14115   000417                     IOCCF           equ	1047	;# 
 14116   000421                     WPUE            equ	1057	;# 
 14117   000424                     INLVLE          equ	1060	;# 
 14118   000425                     IOCEP           equ	1061	;# 
 14119   000426                     IOCEN           equ	1062	;# 
 14120   000427                     IOCEF           equ	1063	;# 
 14121   000440                     NCO1ACC         equ	1088	;# 
 14122   000440                     NCO1ACCL        equ	1088	;# 
 14123   000441                     NCO1ACCH        equ	1089	;# 
 14124   000442                     NCO1ACCU        equ	1090	;# 
 14125   000443                     NCO1INC         equ	1091	;# 
 14126   000443                     NCO1INCL        equ	1091	;# 
 14127   000444                     NCO1INCH        equ	1092	;# 
 14128   000445                     NCO1INCU        equ	1093	;# 
 14129   000446                     NCO1CON         equ	1094	;# 
 14130   000447                     NCO1CLK         equ	1095	;# 
 14131   000448                     NCO2ACC         equ	1096	;# 
 14132   000448                     NCO2ACCL        equ	1096	;# 
 14133   000449                     NCO2ACCH        equ	1097	;# 
 14134   00044A                     NCO2ACCU        equ	1098	;# 
 14135   00044B                     NCO2INC         equ	1099	;# 
 14136   00044B                     NCO2INCL        equ	1099	;# 
 14137   00044C                     NCO2INCH        equ	1100	;# 
 14138   00044D                     NCO2INCU        equ	1101	;# 
 14139   00044E                     NCO2CON         equ	1102	;# 
 14140   00044F                     NCO2CLK         equ	1103	;# 
 14141   000450                     NCO3ACC         equ	1104	;# 
 14142   000450                     NCO3ACCL        equ	1104	;# 
 14143   000451                     NCO3ACCH        equ	1105	;# 
 14144   000452                     NCO3ACCU        equ	1106	;# 
 14145   000453                     NCO3INC         equ	1107	;# 
 14146   000453                     NCO3INCL        equ	1107	;# 
 14147   000454                     NCO3INCH        equ	1108	;# 
 14148   000455                     NCO3INCU        equ	1109	;# 
 14149   000456                     NCO3CON         equ	1110	;# 
 14150   000457                     NCO3CLK         equ	1111	;# 
 14151   000458                     FSCMCON         equ	1112	;# 
 14152   000459                     IVTLOCK         equ	1113	;# 
 14153   00045A                     IVTAD           equ	1114	;# 
 14154   00045A                     IVTADL          equ	1114	;# 
 14155   00045B                     IVTADH          equ	1115	;# 
 14156   00045C                     IVTADU          equ	1116	;# 
 14157   00045D                     IVTBASE         equ	1117	;# 
 14158   00045D                     IVTBASEL        equ	1117	;# 
 14159   00045E                     IVTBASEH        equ	1118	;# 
 14160   00045F                     IVTBASEU        equ	1119	;# 
 14161   000460                     PWM1ERS         equ	1120	;# 
 14162   000461                     PWM1CLK         equ	1121	;# 
 14163   000462                     PWM1LDS         equ	1122	;# 
 14164   000463                     PWM1PR          equ	1123	;# 
 14165   000463                     PWM1PRL         equ	1123	;# 
 14166   000464                     PWM1PRH         equ	1124	;# 
 14167   000465                     PWM1CPRE        equ	1125	;# 
 14168   000466                     PWM1PIPOS       equ	1126	;# 
 14169   000467                     PWM1GIR         equ	1127	;# 
 14170   000468                     PWM1GIE         equ	1128	;# 
 14171   000469                     PWM1CON         equ	1129	;# 
 14172   00046A                     PWM1S1CFG       equ	1130	;# 
 14173   00046B                     PWM1S1P1        equ	1131	;# 
 14174   00046B                     PWM1S1P1L       equ	1131	;# 
 14175   00046C                     PWM1S1P1H       equ	1132	;# 
 14176   00046D                     PWM1S1P2        equ	1133	;# 
 14177   00046D                     PWM1S1P2L       equ	1133	;# 
 14178   00046E                     PWM1S1P2H       equ	1134	;# 
 14179   00046F                     PWM2ERS         equ	1135	;# 
 14180   000470                     PWM2CLK         equ	1136	;# 
 14181   000471                     PWM2LDS         equ	1137	;# 
 14182   000472                     PWM2PR          equ	1138	;# 
 14183   000472                     PWM2PRL         equ	1138	;# 
 14184   000473                     PWM2PRH         equ	1139	;# 
 14185   000474                     PWM2CPRE        equ	1140	;# 
 14186   000475                     PWM2PIPOS       equ	1141	;# 
 14187   000476                     PWM2GIR         equ	1142	;# 
 14188   000477                     PWM2GIE         equ	1143	;# 
 14189   000478                     PWM2CON         equ	1144	;# 
 14190   000479                     PWM2S1CFG       equ	1145	;# 
 14191   00047A                     PWM2S1P1        equ	1146	;# 
 14192   00047A                     PWM2S1P1L       equ	1146	;# 
 14193   00047B                     PWM2S1P1H       equ	1147	;# 
 14194   00047C                     PWM2S1P2        equ	1148	;# 
 14195   00047C                     PWM2S1P2L       equ	1148	;# 
 14196   00047D                     PWM2S1P2H       equ	1149	;# 
 14197   00047E                     PWM3ERS         equ	1150	;# 
 14198   00047F                     PWM3CLK         equ	1151	;# 
 14199   000480                     PWM3LDS         equ	1152	;# 
 14200   000481                     PWM3PR          equ	1153	;# 
 14201   000481                     PWM3PRL         equ	1153	;# 
 14202   000482                     PWM3PRH         equ	1154	;# 
 14203   000483                     PWM3CPRE        equ	1155	;# 
 14204   000484                     PWM3PIPOS       equ	1156	;# 
 14205   000485                     PWM3GIR         equ	1157	;# 
 14206   000486                     PWM3GIE         equ	1158	;# 
 14207   000487                     PWM3CON         equ	1159	;# 
 14208   000488                     PWM3S1CFG       equ	1160	;# 
 14209   000489                     PWM3S1P1        equ	1161	;# 
 14210   000489                     PWM3S1P1L       equ	1161	;# 
 14211   00048A                     PWM3S1P1H       equ	1162	;# 
 14212   00048B                     PWM3S1P2        equ	1163	;# 
 14213   00048B                     PWM3S1P2L       equ	1163	;# 
 14214   00048C                     PWM3S1P2H       equ	1164	;# 
 14215   00048D                     PWM4ERS         equ	1165	;# 
 14216   00048E                     PWM4CLK         equ	1166	;# 
 14217   00048F                     PWM4LDS         equ	1167	;# 
 14218   000490                     PWM4PR          equ	1168	;# 
 14219   000490                     PWM4PRL         equ	1168	;# 
 14220   000491                     PWM4PRH         equ	1169	;# 
 14221   000492                     PWM4CPRE        equ	1170	;# 
 14222   000493                     PWM4PIPOS       equ	1171	;# 
 14223   000494                     PWM4GIR         equ	1172	;# 
 14224   000495                     PWM4GIE         equ	1173	;# 
 14225   000496                     PWM4CON         equ	1174	;# 
 14226   000497                     PWM4S1CFG       equ	1175	;# 
 14227   000498                     PWM4S1P1        equ	1176	;# 
 14228   000498                     PWM4S1P1L       equ	1176	;# 
 14229   000499                     PWM4S1P1H       equ	1177	;# 
 14230   00049A                     PWM4S1P2        equ	1178	;# 
 14231   00049A                     PWM4S1P2L       equ	1178	;# 
 14232   00049B                     PWM4S1P2H       equ	1179	;# 
 14233   00049C                     PWMLOAD         equ	1180	;# 
 14234   00049D                     PWMEN           equ	1181	;# 
 14235   00049E                     PIE0            equ	1182	;# 
 14236   00049F                     PIE1            equ	1183	;# 
 14237   0004A0                     PIE2            equ	1184	;# 
 14238   0004A1                     PIE3            equ	1185	;# 
 14239   0004A2                     PIE4            equ	1186	;# 
 14240   0004A3                     PIE5            equ	1187	;# 
 14241   0004A4                     PIE6            equ	1188	;# 
 14242   0004A5                     PIE7            equ	1189	;# 
 14243   0004A6                     PIE8            equ	1190	;# 
 14244   0004A7                     PIE9            equ	1191	;# 
 14245   0004A8                     PIE10           equ	1192	;# 
 14246   0004A9                     PIE11           equ	1193	;# 
 14247   0004AA                     PIE12           equ	1194	;# 
 14248   0004AB                     PIE13           equ	1195	;# 
 14249   0004AC                     PIE14           equ	1196	;# 
 14250   0004AD                     PIE15           equ	1197	;# 
 14251   0004AE                     PIR0            equ	1198	;# 
 14252   0004AF                     PIR1            equ	1199	;# 
 14253   0004B0                     PIR2            equ	1200	;# 
 14254   0004B1                     PIR3            equ	1201	;# 
 14255   0004B2                     PIR4            equ	1202	;# 
 14256   0004B3                     PIR5            equ	1203	;# 
 14257   0004B4                     PIR6            equ	1204	;# 
 14258   0004B5                     PIR7            equ	1205	;# 
 14259   0004B6                     PIR8            equ	1206	;# 
 14260   0004B7                     PIR9            equ	1207	;# 
 14261   0004B8                     PIR10           equ	1208	;# 
 14262   0004B9                     PIR11           equ	1209	;# 
 14263   0004BA                     PIR12           equ	1210	;# 
 14264   0004BB                     PIR13           equ	1211	;# 
 14265   0004BC                     PIR14           equ	1212	;# 
 14266   0004BD                     PIR15           equ	1213	;# 
 14267   0004BE                     LATA            equ	1214	;# 
 14268   0004BF                     LATB            equ	1215	;# 
 14269   0004C0                     LATC            equ	1216	;# 
 14270   0004C6                     TRISA           equ	1222	;# 
 14271   0004C7                     TRISB           equ	1223	;# 
 14272   0004C8                     TRISC           equ	1224	;# 
 14273   0004CA                     TRISE           equ	1226	;# 
 14274   0004CE                     PORTA           equ	1230	;# 
 14275   0004CF                     PORTB           equ	1231	;# 
 14276   0004D0                     PORTC           equ	1232	;# 
 14277   0004D2                     PORTE           equ	1234	;# 
 14278   0004D6                     INTCON0         equ	1238	;# 
 14279   0004D7                     INTCON1         equ	1239	;# 
 14280   0004D8                     STATUS          equ	1240	;# 
 14281   0004D9                     FSR2            equ	1241	;# 
 14282   0004D9                     FSR2L           equ	1241	;# 
 14283   0004DA                     FSR2H           equ	1242	;# 
 14284   0004DB                     PLUSW2          equ	1243	;# 
 14285   0004DC                     PREINC2         equ	1244	;# 
 14286   0004DD                     POSTDEC2        equ	1245	;# 
 14287   0004DE                     POSTINC2        equ	1246	;# 
 14288   0004DF                     INDF2           equ	1247	;# 
 14289   0004E0                     BSR             equ	1248	;# 
 14290   0004E1                     FSR1            equ	1249	;# 
 14291   0004E1                     FSR1L           equ	1249	;# 
 14292   0004E2                     FSR1H           equ	1250	;# 
 14293   0004E3                     PLUSW1          equ	1251	;# 
 14294   0004E4                     PREINC1         equ	1252	;# 
 14295   0004E5                     POSTDEC1        equ	1253	;# 
 14296   0004E6                     POSTINC1        equ	1254	;# 
 14297   0004E7                     INDF1           equ	1255	;# 
 14298   0004E8                     WREG            equ	1256	;# 
 14299   0004E9                     FSR0            equ	1257	;# 
 14300   0004E9                     FSR0L           equ	1257	;# 
 14301   0004EA                     FSR0H           equ	1258	;# 
 14302   0004EB                     PLUSW0          equ	1259	;# 
 14303   0004EC                     PREINC0         equ	1260	;# 
 14304   0004ED                     POSTDEC0        equ	1261	;# 
 14305   0004EE                     POSTINC0        equ	1262	;# 
 14306   0004EF                     INDF0           equ	1263	;# 
 14307   0004F0                     PCON0           equ	1264	;# 
 14308   0004F1                     PCON1           equ	1265	;# 
 14309   0004F2                     CPUDOZE         equ	1266	;# 
 14310   0004F3                     PROD            equ	1267	;# 
 14311   0004F3                     PRODL           equ	1267	;# 
 14312   0004F4                     PRODH           equ	1268	;# 
 14313   0004F5                     TABLAT          equ	1269	;# 
 14314   0004F6                     TBLPTR          equ	1270	;# 
 14315   0004F6                     TBLPTRL         equ	1270	;# 
 14316   0004F7                     TBLPTRH         equ	1271	;# 
 14317   0004F8                     TBLPTRU         equ	1272	;# 
 14318   0004F9                     PCLAT           equ	1273	;# 
 14319   0004F9                     PCL             equ	1273	;# 
 14320   0004FA                     PCLATH          equ	1274	;# 
 14321   0004FB                     PCLATU          equ	1275	;# 
 14322   0004FC                     STKPTR          equ	1276	;# 
 14323   0004FD                     TOS             equ	1277	;# 
 14324   0004FD                     TOSL            equ	1277	;# 
 14325   0004FE                     TOSH            equ	1278	;# 
 14326   0004FF                     TOSU            equ	1279	;# 
 14327   000038                     BOOTREG         equ	56	;# 
 14328   000039                     CLKRCON         equ	57	;# 
 14329   00003A                     CLKRCLK         equ	58	;# 
 14330   000040                     NVMCON0         equ	64	;# 
 14331   000041                     NVMCON1         equ	65	;# 
 14332   000042                     NVMLOCK         equ	66	;# 
 14333   000043                     NVMADR          equ	67	;# 
 14334   000043                     NVMADRL         equ	67	;# 
 14335   000044                     NVMADRH         equ	68	;# 
 14336   000045                     NVMADRU         equ	69	;# 
 14337   000046                     NVMDAT          equ	70	;# 
 14338   000046                     NVMDATL         equ	70	;# 
 14339   000047                     NVMDATH         equ	71	;# 
 14340   000048                     VREGCON         equ	72	;# 
 14341   000049                     BORCON          equ	73	;# 
 14342   00004A                     HLVDCON0        equ	74	;# 
 14343   00004B                     HLVDCON1        equ	75	;# 
 14344   00004C                     ZCDCON          equ	76	;# 
 14345   000060                     PMD0            equ	96	;# 
 14346   000061                     PMD1            equ	97	;# 
 14347   000062                     PMD2            equ	98	;# 
 14348   000063                     PMD3            equ	99	;# 
 14349   000064                     PMD4            equ	100	;# 
 14350   000065                     PMD5            equ	101	;# 
 14351   000066                     PMD6            equ	102	;# 
 14352   000067                     PMD7            equ	103	;# 
 14353   000068                     PMD8            equ	104	;# 
 14354   00006A                     MD1CON0         equ	106	;# 
 14355   00006B                     MD1CON1         equ	107	;# 
 14356   00006C                     MD1SRC          equ	108	;# 
 14357   00006D                     MD1CARL         equ	109	;# 
 14358   00006E                     MD1CARH         equ	110	;# 
 14359   00006F                     CMOUT           equ	111	;# 
 14360   000070                     CM1CON0         equ	112	;# 
 14361   000071                     CM1CON1         equ	113	;# 
 14362   000072                     CM1NCH          equ	114	;# 
 14363   000073                     CM1PCH          equ	115	;# 
 14364   000074                     CM2CON0         equ	116	;# 
 14365   000075                     CM2CON1         equ	117	;# 
 14366   000076                     CM2NCH          equ	118	;# 
 14367   000077                     CM2PCH          equ	119	;# 
 14368   000078                     WDTCON0         equ	120	;# 
 14369   000079                     WDTCON1         equ	121	;# 
 14370   00007A                     WDTPSL          equ	122	;# 
 14371   00007B                     WDTPSH          equ	123	;# 
 14372   00007C                     WDTTMR          equ	124	;# 
 14373   00007D                     DAC1DAT         equ	125	;# 
 14374   00007D                     DAC1DATL        equ	125	;# 
 14375   00007F                     DAC1CON         equ	127	;# 
 14376   000080                     SPI1RXB         equ	128	;# 
 14377   000081                     SPI1TXB         equ	129	;# 
 14378   000082                     SPI1TCNT        equ	130	;# 
 14379   000082                     SPI1TCNTL       equ	130	;# 
 14380   000083                     SPI1TCNTH       equ	131	;# 
 14381   000084                     SPI1CON0        equ	132	;# 
 14382   000085                     SPI1CON1        equ	133	;# 
 14383   000086                     SPI1CON2        equ	134	;# 
 14384   000087                     SPI1STATUS      equ	135	;# 
 14385   000088                     SPI1TWIDTH      equ	136	;# 
 14386   000089                     SPI1BAUD        equ	137	;# 
 14387   00008A                     SPI1INTF        equ	138	;# 
 14388   00008B                     SPI1INTE        equ	139	;# 
 14389   00008C                     SPI1CLK         equ	140	;# 
 14390   00008D                     SPI2RXB         equ	141	;# 
 14391   00008E                     SPI2TXB         equ	142	;# 
 14392   00008F                     SPI2TCNT        equ	143	;# 
 14393   00008F                     SPI2TCNTL       equ	143	;# 
 14394   000090                     SPI2TCNTH       equ	144	;# 
 14395   000091                     SPI2CON0        equ	145	;# 
 14396   000092                     SPI2CON1        equ	146	;# 
 14397   000093                     SPI2CON2        equ	147	;# 
 14398   000094                     SPI2STATUS      equ	148	;# 
 14399   000095                     SPI2TWIDTH      equ	149	;# 
 14400   000096                     SPI2BAUD        equ	150	;# 
 14401   000097                     SPI2INTF        equ	151	;# 
 14402   000098                     SPI2INTE        equ	152	;# 
 14403   000099                     SPI2CLK         equ	153	;# 
 14404   0000AC                     ACTCON          equ	172	;# 
 14405   0000AD                     OSCCON1         equ	173	;# 
 14406   0000AE                     OSCCON2         equ	174	;# 
 14407   0000AF                     OSCCON3         equ	175	;# 
 14408   0000B0                     OSCTUNE         equ	176	;# 
 14409   0000B1                     OSCFRQ          equ	177	;# 
 14410   0000B1                     OSCFREQ         equ	177	;# 
 14411   0000B2                     OSCSTAT         equ	178	;# 
 14412   0000B2                     OSCSTAT1        equ	178	;# 
 14413   0000B3                     OSCEN           equ	179	;# 
 14414   0000B4                     PRLOCK          equ	180	;# 
 14415   0000B5                     SCANPR          equ	181	;# 
 14416   0000B6                     DMA1PR          equ	182	;# 
 14417   0000B7                     DMA2PR          equ	183	;# 
 14418   0000B8                     DMA3PR          equ	184	;# 
 14419   0000B9                     DMA4PR          equ	185	;# 
 14420   0000BA                     DMA5PR          equ	186	;# 
 14421   0000BB                     DMA6PR          equ	187	;# 
 14422   0000BC                     DMA7PR          equ	188	;# 
 14423   0000BD                     DMA8PR          equ	189	;# 
 14424   0000BE                     MAINPR          equ	190	;# 
 14425   0000BF                     ISRPR           equ	191	;# 
 14426   0000D4                     CLCDATA         equ	212	;# 
 14427   0000D5                     CLCSELECT       equ	213	;# 
 14428   0000D6                     CLCnCON         equ	214	;# 
 14429   0000D7                     CLCnPOL         equ	215	;# 
 14430   0000D8                     CLCnSEL0        equ	216	;# 
 14431   0000D9                     CLCnSEL1        equ	217	;# 
 14432   0000DA                     CLCnSEL2        equ	218	;# 
 14433   0000DB                     CLCnSEL3        equ	219	;# 
 14434   0000DC                     CLCnGLS0        equ	220	;# 
 14435   0000DD                     CLCnGLS1        equ	221	;# 
 14436   0000DE                     CLCnGLS2        equ	222	;# 
 14437   0000DF                     CLCnGLS3        equ	223	;# 
 14438   0000E8                     DMASELECT       equ	232	;# 
 14439   0000E9                     DMAnBUF         equ	233	;# 
 14440   0000EA                     DMAnDCNT        equ	234	;# 
 14441   0000EA                     DMAnDCNTL       equ	234	;# 
 14442   0000EB                     DMAnDCNTH       equ	235	;# 
 14443   0000EC                     DMAnDPTR        equ	236	;# 
 14444   0000EC                     DMAnDPTRL       equ	236	;# 
 14445   0000ED                     DMAnDPTRH       equ	237	;# 
 14446   0000EE                     DMAnDSZ         equ	238	;# 
 14447   0000EE                     DMAnDSZL        equ	238	;# 
 14448   0000EF                     DMAnDSZH        equ	239	;# 
 14449   0000F0                     DMAnDSA         equ	240	;# 
 14450   0000F0                     DMAnDSAL        equ	240	;# 
 14451   0000F1                     DMAnDSAH        equ	241	;# 
 14452   0000F2                     DMAnSCNT        equ	242	;# 
 14453   0000F2                     DMAnSCNTL       equ	242	;# 
 14454   0000F3                     DMAnSCNTH       equ	243	;# 
 14455   0000F4                     DMAnSPTR        equ	244	;# 
 14456   0000F4                     DMAnSPTRL       equ	244	;# 
 14457   0000F5                     DMAnSPTRH       equ	245	;# 
 14458   0000F6                     DMAnSPTRU       equ	246	;# 
 14459   0000F7                     DMAnSSZ         equ	247	;# 
 14460   0000F7                     DMAnSSZL        equ	247	;# 
 14461   0000F8                     DMAnSSZH        equ	248	;# 
 14462   0000F9                     DMAnSSA         equ	249	;# 
 14463   0000F9                     DMAnSSAL        equ	249	;# 
 14464   0000FA                     DMAnSSAH        equ	250	;# 
 14465   0000FB                     DMAnSSAU        equ	251	;# 
 14466   0000FC                     DMAnCON0        equ	252	;# 
 14467   0000FD                     DMAnCON1        equ	253	;# 
 14468   0000FE                     DMAnAIRQ        equ	254	;# 
 14469   0000FF                     DMAnSIRQ        equ	255	;# 
 14470   000100                     C1CONL          equ	256	;# 
 14471   000101                     C1CONH          equ	257	;# 
 14472   000102                     C1CONU          equ	258	;# 
 14473   000103                     C1CONT          equ	259	;# 
 14474   000104                     C1NBTCFGL       equ	260	;# 
 14475   000105                     C1NBTCFGH       equ	261	;# 
 14476   000106                     C1NBTCFGU       equ	262	;# 
 14477   000107                     C1NBTCFGT       equ	263	;# 
 14478   000108                     C1DBTCFGL       equ	264	;# 
 14479   000109                     C1DBTCFGH       equ	265	;# 
 14480   00010A                     C1DBTCFGU       equ	266	;# 
 14481   00010B                     C1DBTCFGT       equ	267	;# 
 14482   00010C                     C1TDCL          equ	268	;# 
 14483   00010D                     C1TDCH          equ	269	;# 
 14484   00010E                     C1TDCU          equ	270	;# 
 14485   000110                     C1TBC           equ	272	;# 
 14486   000110                     C1TBCL          equ	272	;# 
 14487   000111                     C1TBCH          equ	273	;# 
 14488   000112                     C1TBCU          equ	274	;# 
 14489   000113                     C1TBCT          equ	275	;# 
 14490   000114                     C1TSCONL        equ	276	;# 
 14491   000115                     C1TSCONH        equ	277	;# 
 14492   000116                     C1TSCONU        equ	278	;# 
 14493   000117                     C1TSCONT        equ	279	;# 
 14494   000118                     C1VECL          equ	280	;# 
 14495   000119                     C1VECH          equ	281	;# 
 14496   00011A                     C1VECU          equ	282	;# 
 14497   00011B                     C1VECT          equ	283	;# 
 14498   00011C                     C1INTL          equ	284	;# 
 14499   00011D                     C1INTH          equ	285	;# 
 14500   00011E                     C1INTU          equ	286	;# 
 14501   00011F                     C1INTT          equ	287	;# 
 14502   000120                     C1RXIF          equ	288	;# 
 14503   000120                     C1RXIFL         equ	288	;# 
 14504   000121                     C1RXIFH         equ	289	;# 
 14505   000122                     C1RXIFU         equ	290	;# 
 14506   000123                     C1RXIFT         equ	291	;# 
 14507   000124                     C1TXIF          equ	292	;# 
 14508   000124                     C1TXIFL         equ	292	;# 
 14509   000125                     C1TXIFH         equ	293	;# 
 14510   000126                     C1TXIFU         equ	294	;# 
 14511   000127                     C1TXIFT         equ	295	;# 
 14512   000128                     C1RXOVIF        equ	296	;# 
 14513   000128                     C1RXOVIFL       equ	296	;# 
 14514   000129                     C1RXOVIFH       equ	297	;# 
 14515   00012A                     C1RXOVIFU       equ	298	;# 
 14516   00012B                     C1RXOVIFT       equ	299	;# 
 14517   00012C                     C1TXATIF        equ	300	;# 
 14518   00012C                     C1TXATIFL       equ	300	;# 
 14519   00012D                     C1TXATIFH       equ	301	;# 
 14520   00012E                     C1TXATIFU       equ	302	;# 
 14521   00012F                     C1TXATIFT       equ	303	;# 
 14522   000130                     C1TXREQ         equ	304	;# 
 14523   000130                     C1TXREQL        equ	304	;# 
 14524   000131                     C1TXREQH        equ	305	;# 
 14525   000132                     C1TXREQU        equ	306	;# 
 14526   000133                     C1TXREQT        equ	307	;# 
 14527   000134                     C1TRECL         equ	308	;# 
 14528   000135                     C1TRECH         equ	309	;# 
 14529   000136                     C1TRECU         equ	310	;# 
 14530   000137                     C1TRECT         equ	311	;# 
 14531   000138                     C1BDIAG0L       equ	312	;# 
 14532   000139                     C1BDIAG0H       equ	313	;# 
 14533   00013C                     C1BDIAG1L       equ	316	;# 
 14534   00013D                     C1BDIAG1H       equ	317	;# 
 14535   00013E                     C1BDIAG1U       equ	318	;# 
 14536   00013F                     C1BDIAG1T       equ	319	;# 
 14537   000140                     C1TEFCONL       equ	320	;# 
 14538   000141                     C1TEFCONH       equ	321	;# 
 14539   000142                     C1TEFCONU       equ	322	;# 
 14540   000143                     C1TEFCONT       equ	323	;# 
 14541   000144                     C1TEFSTAL       equ	324	;# 
 14542   000145                     C1TEFSTAH       equ	325	;# 
 14543   000146                     C1TEFSTAU       equ	326	;# 
 14544   000147                     C1TEFSTAT       equ	327	;# 
 14545   000148                     C1TEFUA         equ	328	;# 
 14546   000148                     C1TEFUAL        equ	328	;# 
 14547   000149                     C1TEFUAH        equ	329	;# 
 14548   00014A                     C1TEFUAU        equ	330	;# 
 14549   00014B                     C1TEFUAT        equ	331	;# 
 14550   00014C                     C1FIFOBA        equ	332	;# 
 14551   00014C                     C1FIFOBAL       equ	332	;# 
 14552   00014D                     C1FIFOBAH       equ	333	;# 
 14553   00014E                     C1FIFOBAU       equ	334	;# 
 14554   00014F                     C1FIFOBAT       equ	335	;# 
 14555   000150                     C1TXQCONL       equ	336	;# 
 14556   000151                     C1TXQCONH       equ	337	;# 
 14557   000152                     C1TXQCONU       equ	338	;# 
 14558   000153                     C1TXQCONT       equ	339	;# 
 14559   000154                     C1TXQSTAL       equ	340	;# 
 14560   000155                     C1TXQSTAH       equ	341	;# 
 14561   000156                     C1TXQSTAU       equ	342	;# 
 14562   000157                     C1TXQSTAT       equ	343	;# 
 14563   000158                     C1TXQUA         equ	344	;# 
 14564   000158                     C1TXQUAL        equ	344	;# 
 14565   000159                     C1TXQUAH        equ	345	;# 
 14566   00015A                     C1TXQUAU        equ	346	;# 
 14567   00015B                     C1TXQUAT        equ	347	;# 
 14568   00015C                     C1FIFOCON1      equ	348	;# 
 14569   00015C                     C1FIFOCON1L     equ	348	;# 
 14570   00015D                     C1FIFOCON1H     equ	349	;# 
 14571   00015E                     C1FIFOCON1U     equ	350	;# 
 14572   00015F                     C1FIFOCON1T     equ	351	;# 
 14573   000160                     C1FIFOSTA1      equ	352	;# 
 14574   000160                     C1FIFOSTA1L     equ	352	;# 
 14575   000161                     C1FIFOSTA1H     equ	353	;# 
 14576   000162                     C1FIFOSTA1U     equ	354	;# 
 14577   000163                     C1FIFOSTA1T     equ	355	;# 
 14578   000164                     C1FIFOUA1       equ	356	;# 
 14579   000164                     C1FIFOUA1L      equ	356	;# 
 14580   000165                     C1FIFOUA1H      equ	357	;# 
 14581   000166                     C1FIFOUA1U      equ	358	;# 
 14582   000167                     C1FIFOUA1T      equ	359	;# 
 14583   000168                     C1FIFOCON2      equ	360	;# 
 14584   000168                     C1FIFOCON2L     equ	360	;# 
 14585   000169                     C1FIFOCON2H     equ	361	;# 
 14586   00016A                     C1FIFOCON2U     equ	362	;# 
 14587   00016B                     C1FIFOCON2T     equ	363	;# 
 14588   00016C                     C1FIFOSTA2      equ	364	;# 
 14589   00016C                     C1FIFOSTA2L     equ	364	;# 
 14590   00016D                     C1FIFOSTA2H     equ	365	;# 
 14591   00016E                     C1FIFOSTA2U     equ	366	;# 
 14592   00016F                     C1FIFOSTA2T     equ	367	;# 
 14593   000170                     C1FIFOUA2       equ	368	;# 
 14594   000170                     C1FIFOUA2L      equ	368	;# 
 14595   000171                     C1FIFOUA2H      equ	369	;# 
 14596   000172                     C1FIFOUA2U      equ	370	;# 
 14597   000173                     C1FIFOUA2T      equ	371	;# 
 14598   000174                     C1FIFOCON3      equ	372	;# 
 14599   000174                     C1FIFOCON3L     equ	372	;# 
 14600   000175                     C1FIFOCON3H     equ	373	;# 
 14601   000176                     C1FIFOCON3U     equ	374	;# 
 14602   000177                     C1FIFOCON3T     equ	375	;# 
 14603   000178                     C1FIFOSTA3      equ	376	;# 
 14604   000178                     C1FIFOSTA3L     equ	376	;# 
 14605   000179                     C1FIFOSTA3H     equ	377	;# 
 14606   00017A                     C1FIFOSTA3U     equ	378	;# 
 14607   00017B                     C1FIFOSTA3T     equ	379	;# 
 14608   00017C                     C1FIFOUA3       equ	380	;# 
 14609   00017C                     C1FIFOUA3L      equ	380	;# 
 14610   00017D                     C1FIFOUA3H      equ	381	;# 
 14611   00017E                     C1FIFOUA3U      equ	382	;# 
 14612   00017F                     C1FIFOUA3T      equ	383	;# 
 14613   000180                     C1FLTCON0L      equ	384	;# 
 14614   000181                     C1FLTCON0H      equ	385	;# 
 14615   000182                     C1FLTCON0U      equ	386	;# 
 14616   000183                     C1FLTCON0T      equ	387	;# 
 14617   000184                     C1FLTCON1L      equ	388	;# 
 14618   000185                     C1FLTCON1H      equ	389	;# 
 14619   000186                     C1FLTCON1U      equ	390	;# 
 14620   000187                     C1FLTCON1T      equ	391	;# 
 14621   000188                     C1FLTCON2L      equ	392	;# 
 14622   000189                     C1FLTCON2H      equ	393	;# 
 14623   00018A                     C1FLTCON2U      equ	394	;# 
 14624   00018B                     C1FLTCON2T      equ	395	;# 
 14625   00018C                     C1FLTOBJ0       equ	396	;# 
 14626   00018C                     C1FLTOBJ0L      equ	396	;# 
 14627   00018D                     C1FLTOBJ0H      equ	397	;# 
 14628   00018E                     C1FLTOBJ0U      equ	398	;# 
 14629   00018F                     C1FLTOBJ0T      equ	399	;# 
 14630   000190                     C1MASK0         equ	400	;# 
 14631   000190                     C1MASK0L        equ	400	;# 
 14632   000191                     C1MASK0H        equ	401	;# 
 14633   000192                     C1MASK0U        equ	402	;# 
 14634   000193                     C1MASK0T        equ	403	;# 
 14635   000194                     C1FLTOBJ1       equ	404	;# 
 14636   000194                     C1FLTOBJ1L      equ	404	;# 
 14637   000195                     C1FLTOBJ1H      equ	405	;# 
 14638   000196                     C1FLTOBJ1U      equ	406	;# 
 14639   000197                     C1FLTOBJ1T      equ	407	;# 
 14640   000198                     C1MASK1         equ	408	;# 
 14641   000198                     C1MASK1L        equ	408	;# 
 14642   000199                     C1MASK1H        equ	409	;# 
 14643   00019A                     C1MASK1U        equ	410	;# 
 14644   00019B                     C1MASK1T        equ	411	;# 
 14645   00019C                     C1FLTOBJ2       equ	412	;# 
 14646   00019C                     C1FLTOBJ2L      equ	412	;# 
 14647   00019D                     C1FLTOBJ2H      equ	413	;# 
 14648   00019E                     C1FLTOBJ2U      equ	414	;# 
 14649   00019F                     C1FLTOBJ2T      equ	415	;# 
 14650   0001A0                     C1MASK2         equ	416	;# 
 14651   0001A0                     C1MASK2L        equ	416	;# 
 14652   0001A1                     C1MASK2H        equ	417	;# 
 14653   0001A2                     C1MASK2U        equ	418	;# 
 14654   0001A3                     C1MASK2T        equ	419	;# 
 14655   0001A4                     C1FLTOBJ3       equ	420	;# 
 14656   0001A4                     C1FLTOBJ3L      equ	420	;# 
 14657   0001A5                     C1FLTOBJ3H      equ	421	;# 
 14658   0001A6                     C1FLTOBJ3U      equ	422	;# 
 14659   0001A7                     C1FLTOBJ3T      equ	423	;# 
 14660   0001A8                     C1MASK3         equ	424	;# 
 14661   0001A8                     C1MASK3L        equ	424	;# 
 14662   0001A9                     C1MASK3H        equ	425	;# 
 14663   0001AA                     C1MASK3U        equ	426	;# 
 14664   0001AB                     C1MASK3T        equ	427	;# 
 14665   0001AC                     C1FLTOBJ4       equ	428	;# 
 14666   0001AC                     C1FLTOBJ4L      equ	428	;# 
 14667   0001AD                     C1FLTOBJ4H      equ	429	;# 
 14668   0001AE                     C1FLTOBJ4U      equ	430	;# 
 14669   0001AF                     C1FLTOBJ4T      equ	431	;# 
 14670   0001B0                     C1MASK4         equ	432	;# 
 14671   0001B0                     C1MASK4L        equ	432	;# 
 14672   0001B1                     C1MASK4H        equ	433	;# 
 14673   0001B2                     C1MASK4U        equ	434	;# 
 14674   0001B3                     C1MASK4T        equ	435	;# 
 14675   0001B4                     C1FLTOBJ5       equ	436	;# 
 14676   0001B4                     C1FLTOBJ5L      equ	436	;# 
 14677   0001B5                     C1FLTOBJ5H      equ	437	;# 
 14678   0001B6                     C1FLTOBJ5U      equ	438	;# 
 14679   0001B7                     C1FLTOBJ5T      equ	439	;# 
 14680   0001B8                     C1MASK5         equ	440	;# 
 14681   0001B8                     C1MASK5L        equ	440	;# 
 14682   0001B9                     C1MASK5H        equ	441	;# 
 14683   0001BA                     C1MASK5U        equ	442	;# 
 14684   0001BB                     C1MASK5T        equ	443	;# 
 14685   0001BC                     C1FLTOBJ6       equ	444	;# 
 14686   0001BC                     C1FLTOBJ6L      equ	444	;# 
 14687   0001BD                     C1FLTOBJ6H      equ	445	;# 
 14688   0001BE                     C1FLTOBJ6U      equ	446	;# 
 14689   0001BF                     C1FLTOBJ6T      equ	447	;# 
 14690   0001C0                     C1MASK6         equ	448	;# 
 14691   0001C0                     C1MASK6L        equ	448	;# 
 14692   0001C1                     C1MASK6H        equ	449	;# 
 14693   0001C2                     C1MASK6U        equ	450	;# 
 14694   0001C3                     C1MASK6T        equ	451	;# 
 14695   0001C4                     C1FLTOBJ7       equ	452	;# 
 14696   0001C4                     C1FLTOBJ7L      equ	452	;# 
 14697   0001C5                     C1FLTOBJ7H      equ	453	;# 
 14698   0001C6                     C1FLTOBJ7U      equ	454	;# 
 14699   0001C7                     C1FLTOBJ7T      equ	455	;# 
 14700   0001C8                     C1MASK7         equ	456	;# 
 14701   0001C8                     C1MASK7L        equ	456	;# 
 14702   0001C9                     C1MASK7H        equ	457	;# 
 14703   0001CA                     C1MASK7U        equ	458	;# 
 14704   0001CB                     C1MASK7T        equ	459	;# 
 14705   0001CC                     C1FLTOBJ8       equ	460	;# 
 14706   0001CC                     C1FLTOBJ8L      equ	460	;# 
 14707   0001CD                     C1FLTOBJ8H      equ	461	;# 
 14708   0001CE                     C1FLTOBJ8U      equ	462	;# 
 14709   0001CF                     C1FLTOBJ8T      equ	463	;# 
 14710   0001D0                     C1MASK8         equ	464	;# 
 14711   0001D0                     C1MASK8L        equ	464	;# 
 14712   0001D1                     C1MASK8H        equ	465	;# 
 14713   0001D2                     C1MASK8U        equ	466	;# 
 14714   0001D3                     C1MASK8T        equ	467	;# 
 14715   0001D4                     C1FLTOBJ9       equ	468	;# 
 14716   0001D4                     C1FLTOBJ9L      equ	468	;# 
 14717   0001D5                     C1FLTOBJ9H      equ	469	;# 
 14718   0001D6                     C1FLTOBJ9U      equ	470	;# 
 14719   0001D7                     C1FLTOBJ9T      equ	471	;# 
 14720   0001D8                     C1MASK9         equ	472	;# 
 14721   0001D8                     C1MASK9L        equ	472	;# 
 14722   0001D9                     C1MASK9H        equ	473	;# 
 14723   0001DA                     C1MASK9U        equ	474	;# 
 14724   0001DB                     C1MASK9T        equ	475	;# 
 14725   0001DC                     C1FLTOBJ10      equ	476	;# 
 14726   0001DC                     C1FLTOBJ10L     equ	476	;# 
 14727   0001DD                     C1FLTOBJ10H     equ	477	;# 
 14728   0001DE                     C1FLTOBJ10U     equ	478	;# 
 14729   0001DF                     C1FLTOBJ10T     equ	479	;# 
 14730   0001E0                     C1MASK10        equ	480	;# 
 14731   0001E0                     C1MASK10L       equ	480	;# 
 14732   0001E1                     C1MASK10H       equ	481	;# 
 14733   0001E2                     C1MASK10U       equ	482	;# 
 14734   0001E3                     C1MASK10T       equ	483	;# 
 14735   0001E4                     C1FLTOBJ11      equ	484	;# 
 14736   0001E4                     C1FLTOBJ11L     equ	484	;# 
 14737   0001E5                     C1FLTOBJ11H     equ	485	;# 
 14738   0001E6                     C1FLTOBJ11U     equ	486	;# 
 14739   0001E7                     C1FLTOBJ11T     equ	487	;# 
 14740   0001E8                     C1MASK11        equ	488	;# 
 14741   0001E8                     C1MASK11L       equ	488	;# 
 14742   0001E9                     C1MASK11H       equ	489	;# 
 14743   0001EA                     C1MASK11U       equ	490	;# 
 14744   0001EB                     C1MASK11T       equ	491	;# 
 14745   000200                     PPSLOCK         equ	512	;# 
 14746   000201                     RA0PPS          equ	513	;# 
 14747   000202                     RA1PPS          equ	514	;# 
 14748   000203                     RA2PPS          equ	515	;# 
 14749   000204                     RA3PPS          equ	516	;# 
 14750   000205                     RA4PPS          equ	517	;# 
 14751   000206                     RA5PPS          equ	518	;# 
 14752   000207                     RA6PPS          equ	519	;# 
 14753   000208                     RA7PPS          equ	520	;# 
 14754   000209                     RB0PPS          equ	521	;# 
 14755   00020A                     RB1PPS          equ	522	;# 
 14756   00020B                     RB2PPS          equ	523	;# 
 14757   00020C                     RB3PPS          equ	524	;# 
 14758   00020D                     RB4PPS          equ	525	;# 
 14759   00020E                     RB5PPS          equ	526	;# 
 14760   00020F                     RB6PPS          equ	527	;# 
 14761   000210                     RB7PPS          equ	528	;# 
 14762   000211                     RC0PPS          equ	529	;# 
 14763   000212                     RC1PPS          equ	530	;# 
 14764   000213                     RC2PPS          equ	531	;# 
 14765   000214                     RC3PPS          equ	532	;# 
 14766   000215                     RC4PPS          equ	533	;# 
 14767   000216                     RC5PPS          equ	534	;# 
 14768   000217                     RC6PPS          equ	535	;# 
 14769   000218                     RC7PPS          equ	536	;# 
 14770   00023D                     CANRXPPS        equ	573	;# 
 14771   00023E                     INT0PPS         equ	574	;# 
 14772   00023F                     INT1PPS         equ	575	;# 
 14773   000240                     INT2PPS         equ	576	;# 
 14774   000241                     T0CKIPPS        equ	577	;# 
 14775   000242                     T1CKIPPS        equ	578	;# 
 14776   000243                     T1GPPS          equ	579	;# 
 14777   000244                     T3CKIPPS        equ	580	;# 
 14778   000245                     T3GPPS          equ	581	;# 
 14779   000246                     T5CKIPPS        equ	582	;# 
 14780   000247                     T5GPPS          equ	583	;# 
 14781   000248                     T2INPPS         equ	584	;# 
 14782   000249                     T4INPPS         equ	585	;# 
 14783   00024A                     T6INPPS         equ	586	;# 
 14784   00024B                     TUIN0PPS        equ	587	;# 
 14785   00024C                     TUIN1PPS        equ	588	;# 
 14786   00024F                     CCP1PPS         equ	591	;# 
 14787   000250                     CCP2PPS         equ	592	;# 
 14788   000251                     CCP3PPS         equ	593	;# 
 14789   000253                     PWM1ERSPPS      equ	595	;# 
 14790   000254                     PWM2ERSPPS      equ	596	;# 
 14791   000255                     PWM3ERSPPS      equ	597	;# 
 14792   000256                     PWM4ERSPPS      equ	598	;# 
 14793   000257                     PWMIN0PPS       equ	599	;# 
 14794   000258                     PWMIN1PPS       equ	600	;# 
 14795   000259                     SMT1WINPPS      equ	601	;# 
 14796   00025A                     SMT1SIGPPS      equ	602	;# 
 14797   00025B                     CWG1PPS         equ	603	;# 
 14798   00025B                     CWG1INPPS       equ	603	;# 
 14799   00025C                     CWG2PPS         equ	604	;# 
 14800   00025C                     CWG2INPPS       equ	604	;# 
 14801   00025D                     CWG3PPS         equ	605	;# 
 14802   00025D                     CWG3INPPS       equ	605	;# 
 14803   00025E                     MD1CARLPPS      equ	606	;# 
 14804   00025E                     MDCARLPPS       equ	606	;# 
 14805   00025F                     MD1CARHPPS      equ	607	;# 
 14806   00025F                     MDCARHPPS       equ	607	;# 
 14807   000260                     MD1SRCPPS       equ	608	;# 
 14808   000260                     MDSRCPPS        equ	608	;# 
 14809   000261                     CLCIN0PPS       equ	609	;# 
 14810   000262                     CLCIN1PPS       equ	610	;# 
 14811   000263                     CLCIN2PPS       equ	611	;# 
 14812   000264                     CLCIN3PPS       equ	612	;# 
 14813   000265                     CLCIN4PPS       equ	613	;# 
 14814   000266                     CLCIN5PPS       equ	614	;# 
 14815   000267                     CLCIN6PPS       equ	615	;# 
 14816   000268                     CLCIN7PPS       equ	616	;# 
 14817   000269                     ADACTPPS        equ	617	;# 
 14818   00026A                     SPI1SCKPPS      equ	618	;# 
 14819   00026B                     SPI1SDIPPS      equ	619	;# 
 14820   00026C                     SPI1SSPPS       equ	620	;# 
 14821   00026D                     SPI2SCKPPS      equ	621	;# 
 14822   00026E                     SPI2SDIPPS      equ	622	;# 
 14823   00026F                     SPI2SSPPS       equ	623	;# 
 14824   000270                     I2C1SDAPPS      equ	624	;# 
 14825   000271                     I2C1SCLPPS      equ	625	;# 
 14826   000272                     U1RXPPS         equ	626	;# 
 14827   000273                     U1CTSPPS        equ	627	;# 
 14828   000274                     U2RXPPS         equ	628	;# 
 14829   000275                     U2CTSPPS        equ	629	;# 
 14830   000276                     U3RXPPS         equ	630	;# 
 14831   000277                     U3CTSPPS        equ	631	;# 
 14832   000278                     U4RXPPS         equ	632	;# 
 14833   000279                     U4CTSPPS        equ	633	;# 
 14834   00027A                     U5RXPPS         equ	634	;# 
 14835   00027B                     U5CTSPPS        equ	635	;# 
 14836   000286                     RC4I2C          equ	646	;# 
 14837   000287                     RC3I2C          equ	647	;# 
 14838   000288                     RB2I2C          equ	648	;# 
 14839   000289                     RB1I2C          equ	649	;# 
 14840   00028A                     I2C1RXB         equ	650	;# 
 14841   00028B                     I2C1TXB         equ	651	;# 
 14842   00028C                     I2C1CNTL        equ	652	;# 
 14843   00028D                     I2C1CNTH        equ	653	;# 
 14844   00028E                     I2C1ADB0        equ	654	;# 
 14845   00028F                     I2C1ADB1        equ	655	;# 
 14846   000290                     I2C1ADR0        equ	656	;# 
 14847   000291                     I2C1ADR1        equ	657	;# 
 14848   000292                     I2C1ADR2        equ	658	;# 
 14849   000293                     I2C1ADR3        equ	659	;# 
 14850   000294                     I2C1CON0        equ	660	;# 
 14851   000295                     I2C1CON1        equ	661	;# 
 14852   000296                     I2C1CON2        equ	662	;# 
 14853   000297                     I2C1ERR         equ	663	;# 
 14854   000298                     I2C1STAT0       equ	664	;# 
 14855   000299                     I2C1STAT1       equ	665	;# 
 14856   00029A                     I2C1PIR         equ	666	;# 
 14857   00029B                     I2C1PIE         equ	667	;# 
 14858   00029C                     I2C1BTO         equ	668	;# 
 14859   00029D                     I2C1BAUD        equ	669	;# 
 14860   00029E                     I2C1CLK         equ	670	;# 
 14861   00029F                     I2C1BTOC        equ	671	;# 
 14862   0002A1                     U1RXB           equ	673	;# 
 14863   0002A1                     U1RXBL          equ	673	;# 
 14864   0002A2                     U1RXCHK         equ	674	;# 
 14865   0002A3                     U1TXB           equ	675	;# 
 14866   0002A3                     U1TXBL          equ	675	;# 
 14867   0002A4                     U1TXCHK         equ	676	;# 
 14868   0002A5                     U1P1            equ	677	;# 
 14869   0002A5                     U1P1L           equ	677	;# 
 14870   0002A6                     U1P1H           equ	678	;# 
 14871   0002A7                     U1P2            equ	679	;# 
 14872   0002A7                     U1P2L           equ	679	;# 
 14873   0002A8                     U1P2H           equ	680	;# 
 14874   0002A9                     U1P3            equ	681	;# 
 14875   0002A9                     U1P3L           equ	681	;# 
 14876   0002AA                     U1P3H           equ	682	;# 
 14877   0002AB                     U1CON0          equ	683	;# 
 14878   0002AC                     U1CON1          equ	684	;# 
 14879   0002AD                     U1CON2          equ	685	;# 
 14880   0002AE                     U1BRG           equ	686	;# 
 14881   0002AE                     U1BRGL          equ	686	;# 
 14882   0002AF                     U1BRGH          equ	687	;# 
 14883   0002B0                     U1FIFO          equ	688	;# 
 14884   0002B1                     U1UIR           equ	689	;# 
 14885   0002B2                     U1ERRIR         equ	690	;# 
 14886   0002B3                     U1ERRIE         equ	691	;# 
 14887   0002B4                     U2RXB           equ	692	;# 
 14888   0002B4                     U2RXBL          equ	692	;# 
 14889   0002B5                     U2RXCHK         equ	693	;# 
 14890   0002B6                     U2TXB           equ	694	;# 
 14891   0002B6                     U2TXBL          equ	694	;# 
 14892   0002B7                     U2TXCHK         equ	695	;# 
 14893   0002B8                     U2P1            equ	696	;# 
 14894   0002B8                     U2P1L           equ	696	;# 
 14895   0002B9                     U2P1H           equ	697	;# 
 14896   0002BA                     U2P2            equ	698	;# 
 14897   0002BA                     U2P2L           equ	698	;# 
 14898   0002BB                     U2P2H           equ	699	;# 
 14899   0002BC                     U2P3            equ	700	;# 
 14900   0002BC                     U2P3L           equ	700	;# 
 14901   0002BD                     U2P3H           equ	701	;# 
 14902   0002BE                     U2CON0          equ	702	;# 
 14903   0002BF                     U2CON1          equ	703	;# 
 14904   0002C0                     U2CON2          equ	704	;# 
 14905   0002C1                     U2BRG           equ	705	;# 
 14906   0002C1                     U2BRGL          equ	705	;# 
 14907   0002C2                     U2BRGH          equ	706	;# 
 14908   0002C3                     U2FIFO          equ	707	;# 
 14909   0002C4                     U2UIR           equ	708	;# 
 14910   0002C5                     U2ERRIR         equ	709	;# 
 14911   0002C6                     U2ERRIE         equ	710	;# 
 14912   0002C7                     U3RXB           equ	711	;# 
 14913   0002C7                     U3RXBL          equ	711	;# 
 14914   0002C9                     U3TXB           equ	713	;# 
 14915   0002C9                     U3TXBL          equ	713	;# 
 14916   0002CB                     U3P1            equ	715	;# 
 14917   0002CB                     U3P1L           equ	715	;# 
 14918   0002CD                     U3P2            equ	717	;# 
 14919   0002CD                     U3P2L           equ	717	;# 
 14920   0002CF                     U3P3            equ	719	;# 
 14921   0002CF                     U3P3L           equ	719	;# 
 14922   0002D1                     U3CON0          equ	721	;# 
 14923   0002D2                     U3CON1          equ	722	;# 
 14924   0002D3                     U3CON2          equ	723	;# 
 14925   0002D4                     U3BRG           equ	724	;# 
 14926   0002D4                     U3BRGL          equ	724	;# 
 14927   0002D5                     U3BRGH          equ	725	;# 
 14928   0002D6                     U3FIFO          equ	726	;# 
 14929   0002D7                     U3UIR           equ	727	;# 
 14930   0002D8                     U3ERRIR         equ	728	;# 
 14931   0002D9                     U3ERRIE         equ	729	;# 
 14932   0002DA                     U4RXB           equ	730	;# 
 14933   0002DA                     U4RXBL          equ	730	;# 
 14934   0002DC                     U4TXB           equ	732	;# 
 14935   0002DC                     U4TXBL          equ	732	;# 
 14936   0002DE                     U4P1            equ	734	;# 
 14937   0002DE                     U4P1L           equ	734	;# 
 14938   0002E0                     U4P2            equ	736	;# 
 14939   0002E0                     U4P2L           equ	736	;# 
 14940   0002E2                     U4P3            equ	738	;# 
 14941   0002E2                     U4P3L           equ	738	;# 
 14942   0002E4                     U4CON0          equ	740	;# 
 14943   0002E5                     U4CON1          equ	741	;# 
 14944   0002E6                     U4CON2          equ	742	;# 
 14945   0002E7                     U4BRG           equ	743	;# 
 14946   0002E7                     U4BRGL          equ	743	;# 
 14947   0002E8                     U4BRGH          equ	744	;# 
 14948   0002E9                     U4FIFO          equ	745	;# 
 14949   0002EA                     U4UIR           equ	746	;# 
 14950   0002EB                     U4ERRIR         equ	747	;# 
 14951   0002EC                     U4ERRIE         equ	748	;# 
 14952   0002ED                     U5RXB           equ	749	;# 
 14953   0002ED                     U5RXBL          equ	749	;# 
 14954   0002EF                     U5TXB           equ	751	;# 
 14955   0002EF                     U5TXBL          equ	751	;# 
 14956   0002F1                     U5P1            equ	753	;# 
 14957   0002F1                     U5P1L           equ	753	;# 
 14958   0002F3                     U5P2            equ	755	;# 
 14959   0002F3                     U5P2L           equ	755	;# 
 14960   0002F5                     U5P3            equ	757	;# 
 14961   0002F5                     U5P3L           equ	757	;# 
 14962   0002F7                     U5CON0          equ	759	;# 
 14963   0002F8                     U5CON1          equ	760	;# 
 14964   0002F9                     U5CON2          equ	761	;# 
 14965   0002FA                     U5BRG           equ	762	;# 
 14966   0002FA                     U5BRGL          equ	762	;# 
 14967   0002FB                     U5BRGH          equ	763	;# 
 14968   0002FC                     U5FIFO          equ	764	;# 
 14969   0002FD                     U5UIR           equ	765	;# 
 14970   0002FE                     U5ERRIR         equ	766	;# 
 14971   0002FF                     U5ERRIE         equ	767	;# 
 14972   000300                     SMT1TMR         equ	768	;# 
 14973   000300                     SMT1TMRL        equ	768	;# 
 14974   000301                     SMT1TMRH        equ	769	;# 
 14975   000302                     SMT1TMRU        equ	770	;# 
 14976   000303                     SMT1CPR         equ	771	;# 
 14977   000303                     SMT1CPRL        equ	771	;# 
 14978   000304                     SMT1CPRH        equ	772	;# 
 14979   000305                     SMT1CPRU        equ	773	;# 
 14980   000306                     SMT1CPW         equ	774	;# 
 14981   000306                     SMT1CPWL        equ	774	;# 
 14982   000307                     SMT1CPWH        equ	775	;# 
 14983   000308                     SMT1CPWU        equ	776	;# 
 14984   000309                     SMT1PR          equ	777	;# 
 14985   000309                     SMT1PRL         equ	777	;# 
 14986   00030A                     SMT1PRH         equ	778	;# 
 14987   00030B                     SMT1PRU         equ	779	;# 
 14988   00030C                     SMT1CON0        equ	780	;# 
 14989   00030D                     SMT1CON1        equ	781	;# 
 14990   00030E                     SMT1STAT        equ	782	;# 
 14991   00030F                     SMT1CLK         equ	783	;# 
 14992   000310                     SMT1SIG         equ	784	;# 
 14993   000311                     SMT1WIN         equ	785	;# 
 14994   000318                     TMR0L           equ	792	;# 
 14995   000318                     TMR0            equ	792	;# 
 14996   000319                     TMR0H           equ	793	;# 
 14997   000319                     PR0             equ	793	;# 
 14998   00031A                     T0CON0          equ	794	;# 
 14999   00031B                     T0CON1          equ	795	;# 
 15000   00031C                     TMR1            equ	796	;# 
 15001   00031C                     TMR1L           equ	796	;# 
 15002   00031D                     TMR1H           equ	797	;# 
 15003   00031E                     T1CON           equ	798	;# 
 15004   00031E                     TMR1CON         equ	798	;# 
 15005   00031F                     T1GCON          equ	799	;# 
 15006   00031F                     TMR1GCON        equ	799	;# 
 15007   000320                     T1GATE          equ	800	;# 
 15008   000320                     TMR1GATE        equ	800	;# 
 15009   000321                     T1CLK           equ	801	;# 
 15010   000321                     TMR1CLK         equ	801	;# 
 15011   000321                     PR1             equ	801	;# 
 15012   000322                     T2TMR           equ	802	;# 
 15013   000322                     TMR2            equ	802	;# 
 15014   000323                     T2PR            equ	803	;# 
 15015   000323                     PR2             equ	803	;# 
 15016   000324                     T2CON           equ	804	;# 
 15017   000325                     T2HLT           equ	805	;# 
 15018   000326                     T2CLKCON        equ	806	;# 
 15019   000326                     T2CLK           equ	806	;# 
 15020   000327                     T2RST           equ	807	;# 
 15021   000328                     TMR3            equ	808	;# 
 15022   000328                     TMR3L           equ	808	;# 
 15023   000329                     TMR3H           equ	809	;# 
 15024   00032A                     T3CON           equ	810	;# 
 15025   00032A                     TMR3CON         equ	810	;# 
 15026   00032B                     T3GCON          equ	811	;# 
 15027   00032B                     TMR3GCON        equ	811	;# 
 15028   00032C                     T3GATE          equ	812	;# 
 15029   00032C                     TMR3GATE        equ	812	;# 
 15030   00032D                     T3CLK           equ	813	;# 
 15031   00032D                     TMR3CLK         equ	813	;# 
 15032   00032D                     PR3             equ	813	;# 
 15033   00032E                     T4TMR           equ	814	;# 
 15034   00032E                     TMR4            equ	814	;# 
 15035   00032F                     T4PR            equ	815	;# 
 15036   00032F                     PR4             equ	815	;# 
 15037   000330                     T4CON           equ	816	;# 
 15038   000331                     T4HLT           equ	817	;# 
 15039   000332                     T4CLKCON        equ	818	;# 
 15040   000332                     T4CLK           equ	818	;# 
 15041   000333                     T4RST           equ	819	;# 
 15042   000334                     TMR5            equ	820	;# 
 15043   000334                     TMR5L           equ	820	;# 
 15044   000335                     TMR5H           equ	821	;# 
 15045   000336                     T5CON           equ	822	;# 
 15046   000336                     TMR5CON         equ	822	;# 
 15047   000337                     T5GCON          equ	823	;# 
 15048   000337                     TMR5GCON        equ	823	;# 
 15049   000338                     T5GATE          equ	824	;# 
 15050   000338                     TMR5GATE        equ	824	;# 
 15051   000339                     T5CLK           equ	825	;# 
 15052   000339                     TMR5CLK         equ	825	;# 
 15053   000339                     PR5             equ	825	;# 
 15054   00033A                     T6TMR           equ	826	;# 
 15055   00033A                     TMR6            equ	826	;# 
 15056   00033B                     T6PR            equ	827	;# 
 15057   00033B                     PR6             equ	827	;# 
 15058   00033C                     T6CON           equ	828	;# 
 15059   00033D                     T6HLT           equ	829	;# 
 15060   00033E                     T6CLKCON        equ	830	;# 
 15061   00033E                     T6CLK           equ	830	;# 
 15062   00033F                     T6RST           equ	831	;# 
 15063   000340                     CCPR1           equ	832	;# 
 15064   000340                     CCPR1L          equ	832	;# 
 15065   000341                     CCPR1H          equ	833	;# 
 15066   000342                     CCP1CON         equ	834	;# 
 15067   000343                     CCP1CAP         equ	835	;# 
 15068   000344                     CCPR2           equ	836	;# 
 15069   000344                     CCPR2L          equ	836	;# 
 15070   000345                     CCPR2H          equ	837	;# 
 15071   000346                     CCP2CON         equ	838	;# 
 15072   000347                     CCP2CAP         equ	839	;# 
 15073   000348                     CCPR3           equ	840	;# 
 15074   000348                     CCPR3L          equ	840	;# 
 15075   000349                     CCPR3H          equ	841	;# 
 15076   00034A                     CCP3CON         equ	842	;# 
 15077   00034B                     CCP3CAP         equ	843	;# 
 15078   00034C                     CCPTMRS0        equ	844	;# 
 15079   00034F                     CRCDATA         equ	847	;# 
 15080   00034F                     CRCDATAL        equ	847	;# 
 15081   000350                     CRCDATAH        equ	848	;# 
 15082   000351                     CRCDATAU        equ	849	;# 
 15083   000352                     CRCDATAT        equ	850	;# 
 15084   000353                     CRCOUT          equ	851	;# 
 15085   000353                     CRCSHFT         equ	851	;# 
 15086   000353                     CRCXOR          equ	851	;# 
 15087   000353                     CRCOUTL         equ	851	;# 
 15088   000353                     CRCSHFTL        equ	851	;# 
 15089   000353                     CRCSHIFTL       equ	851	;# 
 15090   000353                     CRCXORL         equ	851	;# 
 15091   000354                     CRCOUTH         equ	852	;# 
 15092   000354                     CRCSHFTH        equ	852	;# 
 15093   000354                     CRCSHIFTH       equ	852	;# 
 15094   000354                     CRCXORH         equ	852	;# 
 15095   000355                     CRCOUTU         equ	853	;# 
 15096   000355                     CRCSHFTU        equ	853	;# 
 15097   000355                     CRCSHIFTU       equ	853	;# 
 15098   000355                     CRCXORU         equ	853	;# 
 15099   000356                     CRCOUTT         equ	854	;# 
 15100   000356                     CRCSHFTT        equ	854	;# 
 15101   000356                     CRCSHIFTT       equ	854	;# 
 15102   000356                     CRCXORT         equ	854	;# 
 15103   000357                     CRCCON0         equ	855	;# 
 15104   000358                     CRCCON1         equ	856	;# 
 15105   000359                     CRCCON2         equ	857	;# 
 15106   00035A                     SCANLADR        equ	858	;# 
 15107   00035A                     SCANLADRL       equ	858	;# 
 15108   00035B                     SCANLADRH       equ	859	;# 
 15109   00035C                     SCANLADRU       equ	860	;# 
 15110   00035D                     SCANHADR        equ	861	;# 
 15111   00035D                     SCANHADRL       equ	861	;# 
 15112   00035E                     SCANHADRH       equ	862	;# 
 15113   00035F                     SCANHADRU       equ	863	;# 
 15114   000360                     SCANCON0        equ	864	;# 
 15115   000361                     SCANTRIG        equ	865	;# 
 15116   000362                     IPR0            equ	866	;# 
 15117   000363                     IPR1            equ	867	;# 
 15118   000364                     IPR2            equ	868	;# 
 15119   000365                     IPR3            equ	869	;# 
 15120   000366                     IPR4            equ	870	;# 
 15121   000367                     IPR5            equ	871	;# 
 15122   000368                     IPR6            equ	872	;# 
 15123   000369                     IPR7            equ	873	;# 
 15124   00036A                     IPR8            equ	874	;# 
 15125   00036B                     IPR9            equ	875	;# 
 15126   00036C                     IPR10           equ	876	;# 
 15127   00036D                     IPR11           equ	877	;# 
 15128   00036E                     IPR12           equ	878	;# 
 15129   00036F                     IPR13           equ	879	;# 
 15130   000370                     IPR14           equ	880	;# 
 15131   000371                     IPR15           equ	881	;# 
 15132   000373                     STATUS_CSHAD    equ	883	;# 
 15133   000374                     WREG_CSHAD      equ	884	;# 
 15134   000375                     BSR_CSHAD       equ	885	;# 
 15135   000376                     SHADCON         equ	886	;# 
 15136   000377                     STATUS_SHAD     equ	887	;# 
 15137   000378                     WREG_SHAD       equ	888	;# 
 15138   000379                     BSR_SHAD        equ	889	;# 
 15139   00037A                     PCLATH_SHAD     equ	890	;# 
 15140   00037B                     PCLATU_SHAD     equ	891	;# 
 15141   00037C                     FSR0SH          equ	892	;# 
 15142   00037C                     FSR0L_SHAD      equ	892	;# 
 15143   00037D                     FSR0H_SHAD      equ	893	;# 
 15144   00037E                     FSR1SH          equ	894	;# 
 15145   00037E                     FSR1L_SHAD      equ	894	;# 
 15146   00037F                     FSR1H_SHAD      equ	895	;# 
 15147   000380                     FSR2SH          equ	896	;# 
 15148   000380                     FSR2L_SHAD      equ	896	;# 
 15149   000381                     FSR2H_SHAD      equ	897	;# 
 15150   000382                     PRODSH          equ	898	;# 
 15151   000382                     PRODL_SHAD      equ	898	;# 
 15152   000383                     PRODH_SHAD      equ	899	;# 
 15153   000387                     TU16ACON0       equ	903	;# 
 15154   000388                     TU16ACON1       equ	904	;# 
 15155   000389                     TU16AHLT        equ	905	;# 
 15156   00038A                     TU16APS         equ	906	;# 
 15157   00038B                     TU16ATMR        equ	907	;# 
 15158   00038B                     TU16ACR         equ	907	;# 
 15159   00038B                     TU16ATMRL       equ	907	;# 
 15160   00038B                     TU16ACRL        equ	907	;# 
 15161   00038C                     TU16ATMRH       equ	908	;# 
 15162   00038C                     TU16ACRH        equ	908	;# 
 15163   00038D                     TU16APR         equ	909	;# 
 15164   00038D                     TU16APRL        equ	909	;# 
 15165   00038E                     TU16APRH        equ	910	;# 
 15166   00038F                     TU16ACLK        equ	911	;# 
 15167   000390                     TU16AERS        equ	912	;# 
 15168   000393                     TU16BCON0       equ	915	;# 
 15169   000394                     TU16BCON1       equ	916	;# 
 15170   000395                     TU16BHLT        equ	917	;# 
 15171   000396                     TU16BPS         equ	918	;# 
 15172   000397                     TU16BTMR        equ	919	;# 
 15173   000397                     TU16BCR         equ	919	;# 
 15174   000397                     TU16BTMRL       equ	919	;# 
 15175   000397                     TU16BCRL        equ	919	;# 
 15176   000398                     TU16BTMRH       equ	920	;# 
 15177   000398                     TU16BCRH        equ	920	;# 
 15178   000399                     TU16BPR         equ	921	;# 
 15179   000399                     TU16BPRL        equ	921	;# 
 15180   00039A                     TU16BPRH        equ	922	;# 
 15181   00039B                     TU16BCLK        equ	923	;# 
 15182   00039C                     TU16BERS        equ	924	;# 
 15183   0003BB                     TUCHAIN         equ	955	;# 
 15184   0003BC                     CWG1CLK         equ	956	;# 
 15185   0003BC                     CWG1CLKCON      equ	956	;# 
 15186   0003BD                     CWG1ISM         equ	957	;# 
 15187   0003BE                     CWG1DBR         equ	958	;# 
 15188   0003BF                     CWG1DBF         equ	959	;# 
 15189   0003C0                     CWG1CON0        equ	960	;# 
 15190   0003C1                     CWG1CON1        equ	961	;# 
 15191   0003C2                     CWG1AS0         equ	962	;# 
 15192   0003C3                     CWG1AS1         equ	963	;# 
 15193   0003C4                     CWG1STR         equ	964	;# 
 15194   0003C5                     CWG2CLK         equ	965	;# 
 15195   0003C5                     CWG2CLKCON      equ	965	;# 
 15196   0003C6                     CWG2ISM         equ	966	;# 
 15197   0003C7                     CWG2DBR         equ	967	;# 
 15198   0003C8                     CWG2DBF         equ	968	;# 
 15199   0003C9                     CWG2CON0        equ	969	;# 
 15200   0003CA                     CWG2CON1        equ	970	;# 
 15201   0003CB                     CWG2AS0         equ	971	;# 
 15202   0003CC                     CWG2AS1         equ	972	;# 
 15203   0003CD                     CWG2STR         equ	973	;# 
 15204   0003CE                     CWG3CLK         equ	974	;# 
 15205   0003CE                     CWG3CLKCON      equ	974	;# 
 15206   0003CF                     CWG3ISM         equ	975	;# 
 15207   0003D0                     CWG3DBR         equ	976	;# 
 15208   0003D1                     CWG3DBF         equ	977	;# 
 15209   0003D2                     CWG3CON0        equ	978	;# 
 15210   0003D3                     CWG3CON1        equ	979	;# 
 15211   0003D4                     CWG3AS0         equ	980	;# 
 15212   0003D5                     CWG3AS1         equ	981	;# 
 15213   0003D6                     CWG3STR         equ	982	;# 
 15214   0003D7                     FVRCON          equ	983	;# 
 15215   0003D8                     ADCPCON         equ	984	;# 
 15216   0003D8                     ADCP            equ	984	;# 
 15217   0003D9                     ADLTH           equ	985	;# 
 15218   0003D9                     ADLTHL          equ	985	;# 
 15219   0003DA                     ADLTHH          equ	986	;# 
 15220   0003DB                     ADUTH           equ	987	;# 
 15221   0003DB                     ADUTHL          equ	987	;# 
 15222   0003DC                     ADUTHH          equ	988	;# 
 15223   0003DD                     ADERR           equ	989	;# 
 15224   0003DD                     ADERRL          equ	989	;# 
 15225   0003DE                     ADERRH          equ	990	;# 
 15226   0003DF                     ADSTPT          equ	991	;# 
 15227   0003DF                     ADSTPTL         equ	991	;# 
 15228   0003E0                     ADSTPTH         equ	992	;# 
 15229   0003E1                     ADFLTR          equ	993	;# 
 15230   0003E1                     ADFLTRL         equ	993	;# 
 15231   0003E2                     ADFLTRH         equ	994	;# 
 15232   0003E3                     ADACC           equ	995	;# 
 15233   0003E3                     ADACCL          equ	995	;# 
 15234   0003E4                     ADACCH          equ	996	;# 
 15235   0003E5                     ADACCU          equ	997	;# 
 15236   0003E6                     ADCNT           equ	998	;# 
 15237   0003E7                     ADRPT           equ	999	;# 
 15238   0003E8                     ADPREV          equ	1000	;# 
 15239   0003E8                     ADPREVL         equ	1000	;# 
 15240   0003E9                     ADPREVH         equ	1001	;# 
 15241   0003EA                     ADRES           equ	1002	;# 
 15242   0003EA                     ADRESL          equ	1002	;# 
 15243   0003EB                     ADRESH          equ	1003	;# 
 15244   0003EC                     ADPCH           equ	1004	;# 
 15245   0003EE                     ADACQ           equ	1006	;# 
 15246   0003EE                     ADACQL          equ	1006	;# 
 15247   0003EF                     ADACQH          equ	1007	;# 
 15248   0003F0                     ADCAP           equ	1008	;# 
 15249   0003F1                     ADPRE           equ	1009	;# 
 15250   0003F1                     ADPREL          equ	1009	;# 
 15251   0003F2                     ADPREH          equ	1010	;# 
 15252   0003F3                     ADCON0          equ	1011	;# 
 15253   0003F4                     ADCON1          equ	1012	;# 
 15254   0003F5                     ADCON2          equ	1013	;# 
 15255   0003F6                     ADCON3          equ	1014	;# 
 15256   0003F7                     ADSTAT          equ	1015	;# 
 15257   0003F8                     ADREF           equ	1016	;# 
 15258   0003F9                     ADACT           equ	1017	;# 
 15259   0003FA                     ADCLK           equ	1018	;# 
 15260   0003FB                     ADCTX           equ	1019	;# 
 15261   0003FC                     ADCSEL1         equ	1020	;# 
 15262   0003FD                     ADCSEL2         equ	1021	;# 
 15263   0003FE                     ADCSEL3         equ	1022	;# 
 15264   0003FF                     ADCSEL4         equ	1023	;# 
 15265   000400                     ANSELA          equ	1024	;# 
 15266   000401                     WPUA            equ	1025	;# 
 15267   000402                     ODCONA          equ	1026	;# 
 15268   000403                     SLRCONA         equ	1027	;# 
 15269   000404                     INLVLA          equ	1028	;# 
 15270   000405                     IOCAP           equ	1029	;# 
 15271   000406                     IOCAN           equ	1030	;# 
 15272   000407                     IOCAF           equ	1031	;# 
 15273   000408                     ANSELB          equ	1032	;# 
 15274   000409                     WPUB            equ	1033	;# 
 15275   00040A                     ODCONB          equ	1034	;# 
 15276   00040B                     SLRCONB         equ	1035	;# 
 15277   00040C                     INLVLB          equ	1036	;# 
 15278   00040D                     IOCBP           equ	1037	;# 
 15279   00040E                     IOCBN           equ	1038	;# 
 15280   00040F                     IOCBF           equ	1039	;# 
 15281   000410                     ANSELC          equ	1040	;# 
 15282   000411                     WPUC            equ	1041	;# 
 15283   000412                     ODCONC          equ	1042	;# 
 15284   000413                     SLRCONC         equ	1043	;# 
 15285   000414                     INLVLC          equ	1044	;# 
 15286   000415                     IOCCP           equ	1045	;# 
 15287   000416                     IOCCN           equ	1046	;# 
 15288   000417                     IOCCF           equ	1047	;# 
 15289   000421                     WPUE            equ	1057	;# 
 15290   000424                     INLVLE          equ	1060	;# 
 15291   000425                     IOCEP           equ	1061	;# 
 15292   000426                     IOCEN           equ	1062	;# 
 15293   000427                     IOCEF           equ	1063	;# 
 15294   000440                     NCO1ACC         equ	1088	;# 
 15295   000440                     NCO1ACCL        equ	1088	;# 
 15296   000441                     NCO1ACCH        equ	1089	;# 
 15297   000442                     NCO1ACCU        equ	1090	;# 
 15298   000443                     NCO1INC         equ	1091	;# 
 15299   000443                     NCO1INCL        equ	1091	;# 
 15300   000444                     NCO1INCH        equ	1092	;# 
 15301   000445                     NCO1INCU        equ	1093	;# 
 15302   000446                     NCO1CON         equ	1094	;# 
 15303   000447                     NCO1CLK         equ	1095	;# 
 15304   000448                     NCO2ACC         equ	1096	;# 
 15305   000448                     NCO2ACCL        equ	1096	;# 
 15306   000449                     NCO2ACCH        equ	1097	;# 
 15307   00044A                     NCO2ACCU        equ	1098	;# 
 15308   00044B                     NCO2INC         equ	1099	;# 
 15309   00044B                     NCO2INCL        equ	1099	;# 
 15310   00044C                     NCO2INCH        equ	1100	;# 
 15311   00044D                     NCO2INCU        equ	1101	;# 
 15312   00044E                     NCO2CON         equ	1102	;# 
 15313   00044F                     NCO2CLK         equ	1103	;# 
 15314   000450                     NCO3ACC         equ	1104	;# 
 15315   000450                     NCO3ACCL        equ	1104	;# 
 15316   000451                     NCO3ACCH        equ	1105	;# 
 15317   000452                     NCO3ACCU        equ	1106	;# 
 15318   000453                     NCO3INC         equ	1107	;# 
 15319   000453                     NCO3INCL        equ	1107	;# 
 15320   000454                     NCO3INCH        equ	1108	;# 
 15321   000455                     NCO3INCU        equ	1109	;# 
 15322   000456                     NCO3CON         equ	1110	;# 
 15323   000457                     NCO3CLK         equ	1111	;# 
 15324   000458                     FSCMCON         equ	1112	;# 
 15325   000459                     IVTLOCK         equ	1113	;# 
 15326   00045A                     IVTAD           equ	1114	;# 
 15327   00045A                     IVTADL          equ	1114	;# 
 15328   00045B                     IVTADH          equ	1115	;# 
 15329   00045C                     IVTADU          equ	1116	;# 
 15330   00045D                     IVTBASE         equ	1117	;# 
 15331   00045D                     IVTBASEL        equ	1117	;# 
 15332   00045E                     IVTBASEH        equ	1118	;# 
 15333   00045F                     IVTBASEU        equ	1119	;# 
 15334   000460                     PWM1ERS         equ	1120	;# 
 15335   000461                     PWM1CLK         equ	1121	;# 
 15336   000462                     PWM1LDS         equ	1122	;# 
 15337   000463                     PWM1PR          equ	1123	;# 
 15338   000463                     PWM1PRL         equ	1123	;# 
 15339   000464                     PWM1PRH         equ	1124	;# 
 15340   000465                     PWM1CPRE        equ	1125	;# 
 15341   000466                     PWM1PIPOS       equ	1126	;# 
 15342   000467                     PWM1GIR         equ	1127	;# 
 15343   000468                     PWM1GIE         equ	1128	;# 
 15344   000469                     PWM1CON         equ	1129	;# 
 15345   00046A                     PWM1S1CFG       equ	1130	;# 
 15346   00046B                     PWM1S1P1        equ	1131	;# 
 15347   00046B                     PWM1S1P1L       equ	1131	;# 
 15348   00046C                     PWM1S1P1H       equ	1132	;# 
 15349   00046D                     PWM1S1P2        equ	1133	;# 
 15350   00046D                     PWM1S1P2L       equ	1133	;# 
 15351   00046E                     PWM1S1P2H       equ	1134	;# 
 15352   00046F                     PWM2ERS         equ	1135	;# 
 15353   000470                     PWM2CLK         equ	1136	;# 
 15354   000471                     PWM2LDS         equ	1137	;# 
 15355   000472                     PWM2PR          equ	1138	;# 
 15356   000472                     PWM2PRL         equ	1138	;# 
 15357   000473                     PWM2PRH         equ	1139	;# 
 15358   000474                     PWM2CPRE        equ	1140	;# 
 15359   000475                     PWM2PIPOS       equ	1141	;# 
 15360   000476                     PWM2GIR         equ	1142	;# 
 15361   000477                     PWM2GIE         equ	1143	;# 
 15362   000478                     PWM2CON         equ	1144	;# 
 15363   000479                     PWM2S1CFG       equ	1145	;# 
 15364   00047A                     PWM2S1P1        equ	1146	;# 
 15365   00047A                     PWM2S1P1L       equ	1146	;# 
 15366   00047B                     PWM2S1P1H       equ	1147	;# 
 15367   00047C                     PWM2S1P2        equ	1148	;# 
 15368   00047C                     PWM2S1P2L       equ	1148	;# 
 15369   00047D                     PWM2S1P2H       equ	1149	;# 
 15370   00047E                     PWM3ERS         equ	1150	;# 
 15371   00047F                     PWM3CLK         equ	1151	;# 
 15372   000480                     PWM3LDS         equ	1152	;# 
 15373   000481                     PWM3PR          equ	1153	;# 
 15374   000481                     PWM3PRL         equ	1153	;# 
 15375   000482                     PWM3PRH         equ	1154	;# 
 15376   000483                     PWM3CPRE        equ	1155	;# 
 15377   000484                     PWM3PIPOS       equ	1156	;# 
 15378   000485                     PWM3GIR         equ	1157	;# 
 15379   000486                     PWM3GIE         equ	1158	;# 
 15380   000487                     PWM3CON         equ	1159	;# 
 15381   000488                     PWM3S1CFG       equ	1160	;# 
 15382   000489                     PWM3S1P1        equ	1161	;# 
 15383   000489                     PWM3S1P1L       equ	1161	;# 
 15384   00048A                     PWM3S1P1H       equ	1162	;# 
 15385   00048B                     PWM3S1P2        equ	1163	;# 
 15386   00048B                     PWM3S1P2L       equ	1163	;# 
 15387   00048C                     PWM3S1P2H       equ	1164	;# 
 15388   00048D                     PWM4ERS         equ	1165	;# 
 15389   00048E                     PWM4CLK         equ	1166	;# 
 15390   00048F                     PWM4LDS         equ	1167	;# 
 15391   000490                     PWM4PR          equ	1168	;# 
 15392   000490                     PWM4PRL         equ	1168	;# 
 15393   000491                     PWM4PRH         equ	1169	;# 
 15394   000492                     PWM4CPRE        equ	1170	;# 
 15395   000493                     PWM4PIPOS       equ	1171	;# 
 15396   000494                     PWM4GIR         equ	1172	;# 
 15397   000495                     PWM4GIE         equ	1173	;# 
 15398   000496                     PWM4CON         equ	1174	;# 
 15399   000497                     PWM4S1CFG       equ	1175	;# 
 15400   000498                     PWM4S1P1        equ	1176	;# 
 15401   000498                     PWM4S1P1L       equ	1176	;# 
 15402   000499                     PWM4S1P1H       equ	1177	;# 
 15403   00049A                     PWM4S1P2        equ	1178	;# 
 15404   00049A                     PWM4S1P2L       equ	1178	;# 
 15405   00049B                     PWM4S1P2H       equ	1179	;# 
 15406   00049C                     PWMLOAD         equ	1180	;# 
 15407   00049D                     PWMEN           equ	1181	;# 
 15408   00049E                     PIE0            equ	1182	;# 
 15409   00049F                     PIE1            equ	1183	;# 
 15410   0004A0                     PIE2            equ	1184	;# 
 15411   0004A1                     PIE3            equ	1185	;# 
 15412   0004A2                     PIE4            equ	1186	;# 
 15413   0004A3                     PIE5            equ	1187	;# 
 15414   0004A4                     PIE6            equ	1188	;# 
 15415   0004A5                     PIE7            equ	1189	;# 
 15416   0004A6                     PIE8            equ	1190	;# 
 15417   0004A7                     PIE9            equ	1191	;# 
 15418   0004A8                     PIE10           equ	1192	;# 
 15419   0004A9                     PIE11           equ	1193	;# 
 15420   0004AA                     PIE12           equ	1194	;# 
 15421   0004AB                     PIE13           equ	1195	;# 
 15422   0004AC                     PIE14           equ	1196	;# 
 15423   0004AD                     PIE15           equ	1197	;# 
 15424   0004AE                     PIR0            equ	1198	;# 
 15425   0004AF                     PIR1            equ	1199	;# 
 15426   0004B0                     PIR2            equ	1200	;# 
 15427   0004B1                     PIR3            equ	1201	;# 
 15428   0004B2                     PIR4            equ	1202	;# 
 15429   0004B3                     PIR5            equ	1203	;# 
 15430   0004B4                     PIR6            equ	1204	;# 
 15431   0004B5                     PIR7            equ	1205	;# 
 15432   0004B6                     PIR8            equ	1206	;# 
 15433   0004B7                     PIR9            equ	1207	;# 
 15434   0004B8                     PIR10           equ	1208	;# 
 15435   0004B9                     PIR11           equ	1209	;# 
 15436   0004BA                     PIR12           equ	1210	;# 
 15437   0004BB                     PIR13           equ	1211	;# 
 15438   0004BC                     PIR14           equ	1212	;# 
 15439   0004BD                     PIR15           equ	1213	;# 
 15440   0004BE                     LATA            equ	1214	;# 
 15441   0004BF                     LATB            equ	1215	;# 
 15442   0004C0                     LATC            equ	1216	;# 
 15443   0004C6                     TRISA           equ	1222	;# 
 15444   0004C7                     TRISB           equ	1223	;# 
 15445   0004C8                     TRISC           equ	1224	;# 
 15446   0004CA                     TRISE           equ	1226	;# 
 15447   0004CE                     PORTA           equ	1230	;# 
 15448   0004CF                     PORTB           equ	1231	;# 
 15449   0004D0                     PORTC           equ	1232	;# 
 15450   0004D2                     PORTE           equ	1234	;# 
 15451   0004D6                     INTCON0         equ	1238	;# 
 15452   0004D7                     INTCON1         equ	1239	;# 
 15453   0004D8                     STATUS          equ	1240	;# 
 15454   0004D9                     FSR2            equ	1241	;# 
 15455   0004D9                     FSR2L           equ	1241	;# 
 15456   0004DA                     FSR2H           equ	1242	;# 
 15457   0004DB                     PLUSW2          equ	1243	;# 
 15458   0004DC                     PREINC2         equ	1244	;# 
 15459   0004DD                     POSTDEC2        equ	1245	;# 
 15460   0004DE                     POSTINC2        equ	1246	;# 
 15461   0004DF                     INDF2           equ	1247	;# 
 15462   0004E0                     BSR             equ	1248	;# 
 15463   0004E1                     FSR1            equ	1249	;# 
 15464   0004E1                     FSR1L           equ	1249	;# 
 15465   0004E2                     FSR1H           equ	1250	;# 
 15466   0004E3                     PLUSW1          equ	1251	;# 
 15467   0004E4                     PREINC1         equ	1252	;# 
 15468   0004E5                     POSTDEC1        equ	1253	;# 
 15469   0004E6                     POSTINC1        equ	1254	;# 
 15470   0004E7                     INDF1           equ	1255	;# 
 15471   0004E8                     WREG            equ	1256	;# 
 15472   0004E9                     FSR0            equ	1257	;# 
 15473   0004E9                     FSR0L           equ	1257	;# 
 15474   0004EA                     FSR0H           equ	1258	;# 
 15475   0004EB                     PLUSW0          equ	1259	;# 
 15476   0004EC                     PREINC0         equ	1260	;# 
 15477   0004ED                     POSTDEC0        equ	1261	;# 
 15478   0004EE                     POSTINC0        equ	1262	;# 
 15479   0004EF                     INDF0           equ	1263	;# 
 15480   0004F0                     PCON0           equ	1264	;# 
 15481   0004F1                     PCON1           equ	1265	;# 
 15482   0004F2                     CPUDOZE         equ	1266	;# 
 15483   0004F3                     PROD            equ	1267	;# 
 15484   0004F3                     PRODL           equ	1267	;# 
 15485   0004F4                     PRODH           equ	1268	;# 
 15486   0004F5                     TABLAT          equ	1269	;# 
 15487   0004F6                     TBLPTR          equ	1270	;# 
 15488   0004F6                     TBLPTRL         equ	1270	;# 
 15489   0004F7                     TBLPTRH         equ	1271	;# 
 15490   0004F8                     TBLPTRU         equ	1272	;# 
 15491   0004F9                     PCLAT           equ	1273	;# 
 15492   0004F9                     PCL             equ	1273	;# 
 15493   0004FA                     PCLATH          equ	1274	;# 
 15494   0004FB                     PCLATU          equ	1275	;# 
 15495   0004FC                     STKPTR          equ	1276	;# 
 15496   0004FD                     TOS             equ	1277	;# 
 15497   0004FD                     TOSL            equ	1277	;# 
 15498   0004FE                     TOSH            equ	1278	;# 
 15499   0004FF                     TOSU            equ	1279	;# 
 15500   000038                     BOOTREG         equ	56	;# 
 15501   000039                     CLKRCON         equ	57	;# 
 15502   00003A                     CLKRCLK         equ	58	;# 
 15503   000040                     NVMCON0         equ	64	;# 
 15504   000041                     NVMCON1         equ	65	;# 
 15505   000042                     NVMLOCK         equ	66	;# 
 15506   000043                     NVMADR          equ	67	;# 
 15507   000043                     NVMADRL         equ	67	;# 
 15508   000044                     NVMADRH         equ	68	;# 
 15509   000045                     NVMADRU         equ	69	;# 
 15510   000046                     NVMDAT          equ	70	;# 
 15511   000046                     NVMDATL         equ	70	;# 
 15512   000047                     NVMDATH         equ	71	;# 
 15513   000048                     VREGCON         equ	72	;# 
 15514   000049                     BORCON          equ	73	;# 
 15515   00004A                     HLVDCON0        equ	74	;# 
 15516   00004B                     HLVDCON1        equ	75	;# 
 15517   00004C                     ZCDCON          equ	76	;# 
 15518   000060                     PMD0            equ	96	;# 
 15519   000061                     PMD1            equ	97	;# 
 15520   000062                     PMD2            equ	98	;# 
 15521   000063                     PMD3            equ	99	;# 
 15522   000064                     PMD4            equ	100	;# 
 15523   000065                     PMD5            equ	101	;# 
 15524   000066                     PMD6            equ	102	;# 
 15525   000067                     PMD7            equ	103	;# 
 15526   000068                     PMD8            equ	104	;# 
 15527   00006A                     MD1CON0         equ	106	;# 
 15528   00006B                     MD1CON1         equ	107	;# 
 15529   00006C                     MD1SRC          equ	108	;# 
 15530   00006D                     MD1CARL         equ	109	;# 
 15531   00006E                     MD1CARH         equ	110	;# 
 15532   00006F                     CMOUT           equ	111	;# 
 15533   000070                     CM1CON0         equ	112	;# 
 15534   000071                     CM1CON1         equ	113	;# 
 15535   000072                     CM1NCH          equ	114	;# 
 15536   000073                     CM1PCH          equ	115	;# 
 15537   000074                     CM2CON0         equ	116	;# 
 15538   000075                     CM2CON1         equ	117	;# 
 15539   000076                     CM2NCH          equ	118	;# 
 15540   000077                     CM2PCH          equ	119	;# 
 15541   000078                     WDTCON0         equ	120	;# 
 15542   000079                     WDTCON1         equ	121	;# 
 15543   00007A                     WDTPSL          equ	122	;# 
 15544   00007B                     WDTPSH          equ	123	;# 
 15545   00007C                     WDTTMR          equ	124	;# 
 15546   00007D                     DAC1DAT         equ	125	;# 
 15547   00007D                     DAC1DATL        equ	125	;# 
 15548   00007F                     DAC1CON         equ	127	;# 
 15549   000080                     SPI1RXB         equ	128	;# 
 15550   000081                     SPI1TXB         equ	129	;# 
 15551   000082                     SPI1TCNT        equ	130	;# 
 15552   000082                     SPI1TCNTL       equ	130	;# 
 15553   000083                     SPI1TCNTH       equ	131	;# 
 15554   000084                     SPI1CON0        equ	132	;# 
 15555   000085                     SPI1CON1        equ	133	;# 
 15556   000086                     SPI1CON2        equ	134	;# 
 15557   000087                     SPI1STATUS      equ	135	;# 
 15558   000088                     SPI1TWIDTH      equ	136	;# 
 15559   000089                     SPI1BAUD        equ	137	;# 
 15560   00008A                     SPI1INTF        equ	138	;# 
 15561   00008B                     SPI1INTE        equ	139	;# 
 15562   00008C                     SPI1CLK         equ	140	;# 
 15563   00008D                     SPI2RXB         equ	141	;# 
 15564   00008E                     SPI2TXB         equ	142	;# 
 15565   00008F                     SPI2TCNT        equ	143	;# 
 15566   00008F                     SPI2TCNTL       equ	143	;# 
 15567   000090                     SPI2TCNTH       equ	144	;# 
 15568   000091                     SPI2CON0        equ	145	;# 
 15569   000092                     SPI2CON1        equ	146	;# 
 15570   000093                     SPI2CON2        equ	147	;# 
 15571   000094                     SPI2STATUS      equ	148	;# 
 15572   000095                     SPI2TWIDTH      equ	149	;# 
 15573   000096                     SPI2BAUD        equ	150	;# 
 15574   000097                     SPI2INTF        equ	151	;# 
 15575   000098                     SPI2INTE        equ	152	;# 
 15576   000099                     SPI2CLK         equ	153	;# 
 15577   0000AC                     ACTCON          equ	172	;# 
 15578   0000AD                     OSCCON1         equ	173	;# 
 15579   0000AE                     OSCCON2         equ	174	;# 
 15580   0000AF                     OSCCON3         equ	175	;# 
 15581   0000B0                     OSCTUNE         equ	176	;# 
 15582   0000B1                     OSCFRQ          equ	177	;# 
 15583   0000B1                     OSCFREQ         equ	177	;# 
 15584   0000B2                     OSCSTAT         equ	178	;# 
 15585   0000B2                     OSCSTAT1        equ	178	;# 
 15586   0000B3                     OSCEN           equ	179	;# 
 15587   0000B4                     PRLOCK          equ	180	;# 
 15588   0000B5                     SCANPR          equ	181	;# 
 15589   0000B6                     DMA1PR          equ	182	;# 
 15590   0000B7                     DMA2PR          equ	183	;# 
 15591   0000B8                     DMA3PR          equ	184	;# 
 15592   0000B9                     DMA4PR          equ	185	;# 
 15593   0000BA                     DMA5PR          equ	186	;# 
 15594   0000BB                     DMA6PR          equ	187	;# 
 15595   0000BC                     DMA7PR          equ	188	;# 
 15596   0000BD                     DMA8PR          equ	189	;# 
 15597   0000BE                     MAINPR          equ	190	;# 
 15598   0000BF                     ISRPR           equ	191	;# 
 15599   0000D4                     CLCDATA         equ	212	;# 
 15600   0000D5                     CLCSELECT       equ	213	;# 
 15601   0000D6                     CLCnCON         equ	214	;# 
 15602   0000D7                     CLCnPOL         equ	215	;# 
 15603   0000D8                     CLCnSEL0        equ	216	;# 
 15604   0000D9                     CLCnSEL1        equ	217	;# 
 15605   0000DA                     CLCnSEL2        equ	218	;# 
 15606   0000DB                     CLCnSEL3        equ	219	;# 
 15607   0000DC                     CLCnGLS0        equ	220	;# 
 15608   0000DD                     CLCnGLS1        equ	221	;# 
 15609   0000DE                     CLCnGLS2        equ	222	;# 
 15610   0000DF                     CLCnGLS3        equ	223	;# 
 15611   0000E8                     DMASELECT       equ	232	;# 
 15612   0000E9                     DMAnBUF         equ	233	;# 
 15613   0000EA                     DMAnDCNT        equ	234	;# 
 15614   0000EA                     DMAnDCNTL       equ	234	;# 
 15615   0000EB                     DMAnDCNTH       equ	235	;# 
 15616   0000EC                     DMAnDPTR        equ	236	;# 
 15617   0000EC                     DMAnDPTRL       equ	236	;# 
 15618   0000ED                     DMAnDPTRH       equ	237	;# 
 15619   0000EE                     DMAnDSZ         equ	238	;# 
 15620   0000EE                     DMAnDSZL        equ	238	;# 
 15621   0000EF                     DMAnDSZH        equ	239	;# 
 15622   0000F0                     DMAnDSA         equ	240	;# 
 15623   0000F0                     DMAnDSAL        equ	240	;# 
 15624   0000F1                     DMAnDSAH        equ	241	;# 
 15625   0000F2                     DMAnSCNT        equ	242	;# 
 15626   0000F2                     DMAnSCNTL       equ	242	;# 
 15627   0000F3                     DMAnSCNTH       equ	243	;# 
 15628   0000F4                     DMAnSPTR        equ	244	;# 
 15629   0000F4                     DMAnSPTRL       equ	244	;# 
 15630   0000F5                     DMAnSPTRH       equ	245	;# 
 15631   0000F6                     DMAnSPTRU       equ	246	;# 
 15632   0000F7                     DMAnSSZ         equ	247	;# 
 15633   0000F7                     DMAnSSZL        equ	247	;# 
 15634   0000F8                     DMAnSSZH        equ	248	;# 
 15635   0000F9                     DMAnSSA         equ	249	;# 
 15636   0000F9                     DMAnSSAL        equ	249	;# 
 15637   0000FA                     DMAnSSAH        equ	250	;# 
 15638   0000FB                     DMAnSSAU        equ	251	;# 
 15639   0000FC                     DMAnCON0        equ	252	;# 
 15640   0000FD                     DMAnCON1        equ	253	;# 
 15641   0000FE                     DMAnAIRQ        equ	254	;# 
 15642   0000FF                     DMAnSIRQ        equ	255	;# 
 15643   000100                     C1CONL          equ	256	;# 
 15644   000101                     C1CONH          equ	257	;# 
 15645   000102                     C1CONU          equ	258	;# 
 15646   000103                     C1CONT          equ	259	;# 
 15647   000104                     C1NBTCFGL       equ	260	;# 
 15648   000105                     C1NBTCFGH       equ	261	;# 
 15649   000106                     C1NBTCFGU       equ	262	;# 
 15650   000107                     C1NBTCFGT       equ	263	;# 
 15651   000108                     C1DBTCFGL       equ	264	;# 
 15652   000109                     C1DBTCFGH       equ	265	;# 
 15653   00010A                     C1DBTCFGU       equ	266	;# 
 15654   00010B                     C1DBTCFGT       equ	267	;# 
 15655   00010C                     C1TDCL          equ	268	;# 
 15656   00010D                     C1TDCH          equ	269	;# 
 15657   00010E                     C1TDCU          equ	270	;# 
 15658   000110                     C1TBC           equ	272	;# 
 15659   000110                     C1TBCL          equ	272	;# 
 15660   000111                     C1TBCH          equ	273	;# 
 15661   000112                     C1TBCU          equ	274	;# 
 15662   000113                     C1TBCT          equ	275	;# 
 15663   000114                     C1TSCONL        equ	276	;# 
 15664   000115                     C1TSCONH        equ	277	;# 
 15665   000116                     C1TSCONU        equ	278	;# 
 15666   000117                     C1TSCONT        equ	279	;# 
 15667   000118                     C1VECL          equ	280	;# 
 15668   000119                     C1VECH          equ	281	;# 
 15669   00011A                     C1VECU          equ	282	;# 
 15670   00011B                     C1VECT          equ	283	;# 
 15671   00011C                     C1INTL          equ	284	;# 
 15672   00011D                     C1INTH          equ	285	;# 
 15673   00011E                     C1INTU          equ	286	;# 
 15674   00011F                     C1INTT          equ	287	;# 
 15675   000120                     C1RXIF          equ	288	;# 
 15676   000120                     C1RXIFL         equ	288	;# 
 15677   000121                     C1RXIFH         equ	289	;# 
 15678   000122                     C1RXIFU         equ	290	;# 
 15679   000123                     C1RXIFT         equ	291	;# 
 15680   000124                     C1TXIF          equ	292	;# 
 15681   000124                     C1TXIFL         equ	292	;# 
 15682   000125                     C1TXIFH         equ	293	;# 
 15683   000126                     C1TXIFU         equ	294	;# 
 15684   000127                     C1TXIFT         equ	295	;# 
 15685   000128                     C1RXOVIF        equ	296	;# 
 15686   000128                     C1RXOVIFL       equ	296	;# 
 15687   000129                     C1RXOVIFH       equ	297	;# 
 15688   00012A                     C1RXOVIFU       equ	298	;# 
 15689   00012B                     C1RXOVIFT       equ	299	;# 
 15690   00012C                     C1TXATIF        equ	300	;# 
 15691   00012C                     C1TXATIFL       equ	300	;# 
 15692   00012D                     C1TXATIFH       equ	301	;# 
 15693   00012E                     C1TXATIFU       equ	302	;# 
 15694   00012F                     C1TXATIFT       equ	303	;# 
 15695   000130                     C1TXREQ         equ	304	;# 
 15696   000130                     C1TXREQL        equ	304	;# 
 15697   000131                     C1TXREQH        equ	305	;# 
 15698   000132                     C1TXREQU        equ	306	;# 
 15699   000133                     C1TXREQT        equ	307	;# 
 15700   000134                     C1TRECL         equ	308	;# 
 15701   000135                     C1TRECH         equ	309	;# 
 15702   000136                     C1TRECU         equ	310	;# 
 15703   000137                     C1TRECT         equ	311	;# 
 15704   000138                     C1BDIAG0L       equ	312	;# 
 15705   000139                     C1BDIAG0H       equ	313	;# 
 15706   00013C                     C1BDIAG1L       equ	316	;# 
 15707   00013D                     C1BDIAG1H       equ	317	;# 
 15708   00013E                     C1BDIAG1U       equ	318	;# 
 15709   00013F                     C1BDIAG1T       equ	319	;# 
 15710   000140                     C1TEFCONL       equ	320	;# 
 15711   000141                     C1TEFCONH       equ	321	;# 
 15712   000142                     C1TEFCONU       equ	322	;# 
 15713   000143                     C1TEFCONT       equ	323	;# 
 15714   000144                     C1TEFSTAL       equ	324	;# 
 15715   000145                     C1TEFSTAH       equ	325	;# 
 15716   000146                     C1TEFSTAU       equ	326	;# 
 15717   000147                     C1TEFSTAT       equ	327	;# 
 15718   000148                     C1TEFUA         equ	328	;# 
 15719   000148                     C1TEFUAL        equ	328	;# 
 15720   000149                     C1TEFUAH        equ	329	;# 
 15721   00014A                     C1TEFUAU        equ	330	;# 
 15722   00014B                     C1TEFUAT        equ	331	;# 
 15723   00014C                     C1FIFOBA        equ	332	;# 
 15724   00014C                     C1FIFOBAL       equ	332	;# 
 15725   00014D                     C1FIFOBAH       equ	333	;# 
 15726   00014E                     C1FIFOBAU       equ	334	;# 
 15727   00014F                     C1FIFOBAT       equ	335	;# 
 15728   000150                     C1TXQCONL       equ	336	;# 
 15729   000151                     C1TXQCONH       equ	337	;# 
 15730   000152                     C1TXQCONU       equ	338	;# 
 15731   000153                     C1TXQCONT       equ	339	;# 
 15732   000154                     C1TXQSTAL       equ	340	;# 
 15733   000155                     C1TXQSTAH       equ	341	;# 
 15734   000156                     C1TXQSTAU       equ	342	;# 
 15735   000157                     C1TXQSTAT       equ	343	;# 
 15736   000158                     C1TXQUA         equ	344	;# 
 15737   000158                     C1TXQUAL        equ	344	;# 
 15738   000159                     C1TXQUAH        equ	345	;# 
 15739   00015A                     C1TXQUAU        equ	346	;# 
 15740   00015B                     C1TXQUAT        equ	347	;# 
 15741   00015C                     C1FIFOCON1      equ	348	;# 
 15742   00015C                     C1FIFOCON1L     equ	348	;# 
 15743   00015D                     C1FIFOCON1H     equ	349	;# 
 15744   00015E                     C1FIFOCON1U     equ	350	;# 
 15745   00015F                     C1FIFOCON1T     equ	351	;# 
 15746   000160                     C1FIFOSTA1      equ	352	;# 
 15747   000160                     C1FIFOSTA1L     equ	352	;# 
 15748   000161                     C1FIFOSTA1H     equ	353	;# 
 15749   000162                     C1FIFOSTA1U     equ	354	;# 
 15750   000163                     C1FIFOSTA1T     equ	355	;# 
 15751   000164                     C1FIFOUA1       equ	356	;# 
 15752   000164                     C1FIFOUA1L      equ	356	;# 
 15753   000165                     C1FIFOUA1H      equ	357	;# 
 15754   000166                     C1FIFOUA1U      equ	358	;# 
 15755   000167                     C1FIFOUA1T      equ	359	;# 
 15756   000168                     C1FIFOCON2      equ	360	;# 
 15757   000168                     C1FIFOCON2L     equ	360	;# 
 15758   000169                     C1FIFOCON2H     equ	361	;# 
 15759   00016A                     C1FIFOCON2U     equ	362	;# 
 15760   00016B                     C1FIFOCON2T     equ	363	;# 
 15761   00016C                     C1FIFOSTA2      equ	364	;# 
 15762   00016C                     C1FIFOSTA2L     equ	364	;# 
 15763   00016D                     C1FIFOSTA2H     equ	365	;# 
 15764   00016E                     C1FIFOSTA2U     equ	366	;# 
 15765   00016F                     C1FIFOSTA2T     equ	367	;# 
 15766   000170                     C1FIFOUA2       equ	368	;# 
 15767   000170                     C1FIFOUA2L      equ	368	;# 
 15768   000171                     C1FIFOUA2H      equ	369	;# 
 15769   000172                     C1FIFOUA2U      equ	370	;# 
 15770   000173                     C1FIFOUA2T      equ	371	;# 
 15771   000174                     C1FIFOCON3      equ	372	;# 
 15772   000174                     C1FIFOCON3L     equ	372	;# 
 15773   000175                     C1FIFOCON3H     equ	373	;# 
 15774   000176                     C1FIFOCON3U     equ	374	;# 
 15775   000177                     C1FIFOCON3T     equ	375	;# 
 15776   000178                     C1FIFOSTA3      equ	376	;# 
 15777   000178                     C1FIFOSTA3L     equ	376	;# 
 15778   000179                     C1FIFOSTA3H     equ	377	;# 
 15779   00017A                     C1FIFOSTA3U     equ	378	;# 
 15780   00017B                     C1FIFOSTA3T     equ	379	;# 
 15781   00017C                     C1FIFOUA3       equ	380	;# 
 15782   00017C                     C1FIFOUA3L      equ	380	;# 
 15783   00017D                     C1FIFOUA3H      equ	381	;# 
 15784   00017E                     C1FIFOUA3U      equ	382	;# 
 15785   00017F                     C1FIFOUA3T      equ	383	;# 
 15786   000180                     C1FLTCON0L      equ	384	;# 
 15787   000181                     C1FLTCON0H      equ	385	;# 
 15788   000182                     C1FLTCON0U      equ	386	;# 
 15789   000183                     C1FLTCON0T      equ	387	;# 
 15790   000184                     C1FLTCON1L      equ	388	;# 
 15791   000185                     C1FLTCON1H      equ	389	;# 
 15792   000186                     C1FLTCON1U      equ	390	;# 
 15793   000187                     C1FLTCON1T      equ	391	;# 
 15794   000188                     C1FLTCON2L      equ	392	;# 
 15795   000189                     C1FLTCON2H      equ	393	;# 
 15796   00018A                     C1FLTCON2U      equ	394	;# 
 15797   00018B                     C1FLTCON2T      equ	395	;# 
 15798   00018C                     C1FLTOBJ0       equ	396	;# 
 15799   00018C                     C1FLTOBJ0L      equ	396	;# 
 15800   00018D                     C1FLTOBJ0H      equ	397	;# 
 15801   00018E                     C1FLTOBJ0U      equ	398	;# 
 15802   00018F                     C1FLTOBJ0T      equ	399	;# 
 15803   000190                     C1MASK0         equ	400	;# 
 15804   000190                     C1MASK0L        equ	400	;# 
 15805   000191                     C1MASK0H        equ	401	;# 
 15806   000192                     C1MASK0U        equ	402	;# 
 15807   000193                     C1MASK0T        equ	403	;# 
 15808   000194                     C1FLTOBJ1       equ	404	;# 
 15809   000194                     C1FLTOBJ1L      equ	404	;# 
 15810   000195                     C1FLTOBJ1H      equ	405	;# 
 15811   000196                     C1FLTOBJ1U      equ	406	;# 
 15812   000197                     C1FLTOBJ1T      equ	407	;# 
 15813   000198                     C1MASK1         equ	408	;# 
 15814   000198                     C1MASK1L        equ	408	;# 
 15815   000199                     C1MASK1H        equ	409	;# 
 15816   00019A                     C1MASK1U        equ	410	;# 
 15817   00019B                     C1MASK1T        equ	411	;# 
 15818   00019C                     C1FLTOBJ2       equ	412	;# 
 15819   00019C                     C1FLTOBJ2L      equ	412	;# 
 15820   00019D                     C1FLTOBJ2H      equ	413	;# 
 15821   00019E                     C1FLTOBJ2U      equ	414	;# 
 15822   00019F                     C1FLTOBJ2T      equ	415	;# 
 15823   0001A0                     C1MASK2         equ	416	;# 
 15824   0001A0                     C1MASK2L        equ	416	;# 
 15825   0001A1                     C1MASK2H        equ	417	;# 
 15826   0001A2                     C1MASK2U        equ	418	;# 
 15827   0001A3                     C1MASK2T        equ	419	;# 
 15828   0001A4                     C1FLTOBJ3       equ	420	;# 
 15829   0001A4                     C1FLTOBJ3L      equ	420	;# 
 15830   0001A5                     C1FLTOBJ3H      equ	421	;# 
 15831   0001A6                     C1FLTOBJ3U      equ	422	;# 
 15832   0001A7                     C1FLTOBJ3T      equ	423	;# 
 15833   0001A8                     C1MASK3         equ	424	;# 
 15834   0001A8                     C1MASK3L        equ	424	;# 
 15835   0001A9                     C1MASK3H        equ	425	;# 
 15836   0001AA                     C1MASK3U        equ	426	;# 
 15837   0001AB                     C1MASK3T        equ	427	;# 
 15838   0001AC                     C1FLTOBJ4       equ	428	;# 
 15839   0001AC                     C1FLTOBJ4L      equ	428	;# 
 15840   0001AD                     C1FLTOBJ4H      equ	429	;# 
 15841   0001AE                     C1FLTOBJ4U      equ	430	;# 
 15842   0001AF                     C1FLTOBJ4T      equ	431	;# 
 15843   0001B0                     C1MASK4         equ	432	;# 
 15844   0001B0                     C1MASK4L        equ	432	;# 
 15845   0001B1                     C1MASK4H        equ	433	;# 
 15846   0001B2                     C1MASK4U        equ	434	;# 
 15847   0001B3                     C1MASK4T        equ	435	;# 
 15848   0001B4                     C1FLTOBJ5       equ	436	;# 
 15849   0001B4                     C1FLTOBJ5L      equ	436	;# 
 15850   0001B5                     C1FLTOBJ5H      equ	437	;# 
 15851   0001B6                     C1FLTOBJ5U      equ	438	;# 
 15852   0001B7                     C1FLTOBJ5T      equ	439	;# 
 15853   0001B8                     C1MASK5         equ	440	;# 
 15854   0001B8                     C1MASK5L        equ	440	;# 
 15855   0001B9                     C1MASK5H        equ	441	;# 
 15856   0001BA                     C1MASK5U        equ	442	;# 
 15857   0001BB                     C1MASK5T        equ	443	;# 
 15858   0001BC                     C1FLTOBJ6       equ	444	;# 
 15859   0001BC                     C1FLTOBJ6L      equ	444	;# 
 15860   0001BD                     C1FLTOBJ6H      equ	445	;# 
 15861   0001BE                     C1FLTOBJ6U      equ	446	;# 
 15862   0001BF                     C1FLTOBJ6T      equ	447	;# 
 15863   0001C0                     C1MASK6         equ	448	;# 
 15864   0001C0                     C1MASK6L        equ	448	;# 
 15865   0001C1                     C1MASK6H        equ	449	;# 
 15866   0001C2                     C1MASK6U        equ	450	;# 
 15867   0001C3                     C1MASK6T        equ	451	;# 
 15868   0001C4                     C1FLTOBJ7       equ	452	;# 
 15869   0001C4                     C1FLTOBJ7L      equ	452	;# 
 15870   0001C5                     C1FLTOBJ7H      equ	453	;# 
 15871   0001C6                     C1FLTOBJ7U      equ	454	;# 
 15872   0001C7                     C1FLTOBJ7T      equ	455	;# 
 15873   0001C8                     C1MASK7         equ	456	;# 
 15874   0001C8                     C1MASK7L        equ	456	;# 
 15875   0001C9                     C1MASK7H        equ	457	;# 
 15876   0001CA                     C1MASK7U        equ	458	;# 
 15877   0001CB                     C1MASK7T        equ	459	;# 
 15878   0001CC                     C1FLTOBJ8       equ	460	;# 
 15879   0001CC                     C1FLTOBJ8L      equ	460	;# 
 15880   0001CD                     C1FLTOBJ8H      equ	461	;# 
 15881   0001CE                     C1FLTOBJ8U      equ	462	;# 
 15882   0001CF                     C1FLTOBJ8T      equ	463	;# 
 15883   0001D0                     C1MASK8         equ	464	;# 
 15884   0001D0                     C1MASK8L        equ	464	;# 
 15885   0001D1                     C1MASK8H        equ	465	;# 
 15886   0001D2                     C1MASK8U        equ	466	;# 
 15887   0001D3                     C1MASK8T        equ	467	;# 
 15888   0001D4                     C1FLTOBJ9       equ	468	;# 
 15889   0001D4                     C1FLTOBJ9L      equ	468	;# 
 15890   0001D5                     C1FLTOBJ9H      equ	469	;# 
 15891   0001D6                     C1FLTOBJ9U      equ	470	;# 
 15892   0001D7                     C1FLTOBJ9T      equ	471	;# 
 15893   0001D8                     C1MASK9         equ	472	;# 
 15894   0001D8                     C1MASK9L        equ	472	;# 
 15895   0001D9                     C1MASK9H        equ	473	;# 
 15896   0001DA                     C1MASK9U        equ	474	;# 
 15897   0001DB                     C1MASK9T        equ	475	;# 
 15898   0001DC                     C1FLTOBJ10      equ	476	;# 
 15899   0001DC                     C1FLTOBJ10L     equ	476	;# 
 15900   0001DD                     C1FLTOBJ10H     equ	477	;# 
 15901   0001DE                     C1FLTOBJ10U     equ	478	;# 
 15902   0001DF                     C1FLTOBJ10T     equ	479	;# 
 15903   0001E0                     C1MASK10        equ	480	;# 
 15904   0001E0                     C1MASK10L       equ	480	;# 
 15905   0001E1                     C1MASK10H       equ	481	;# 
 15906   0001E2                     C1MASK10U       equ	482	;# 
 15907   0001E3                     C1MASK10T       equ	483	;# 
 15908   0001E4                     C1FLTOBJ11      equ	484	;# 
 15909   0001E4                     C1FLTOBJ11L     equ	484	;# 
 15910   0001E5                     C1FLTOBJ11H     equ	485	;# 
 15911   0001E6                     C1FLTOBJ11U     equ	486	;# 
 15912   0001E7                     C1FLTOBJ11T     equ	487	;# 
 15913   0001E8                     C1MASK11        equ	488	;# 
 15914   0001E8                     C1MASK11L       equ	488	;# 
 15915   0001E9                     C1MASK11H       equ	489	;# 
 15916   0001EA                     C1MASK11U       equ	490	;# 
 15917   0001EB                     C1MASK11T       equ	491	;# 
 15918   000200                     PPSLOCK         equ	512	;# 
 15919   000201                     RA0PPS          equ	513	;# 
 15920   000202                     RA1PPS          equ	514	;# 
 15921   000203                     RA2PPS          equ	515	;# 
 15922   000204                     RA3PPS          equ	516	;# 
 15923   000205                     RA4PPS          equ	517	;# 
 15924   000206                     RA5PPS          equ	518	;# 
 15925   000207                     RA6PPS          equ	519	;# 
 15926   000208                     RA7PPS          equ	520	;# 
 15927   000209                     RB0PPS          equ	521	;# 
 15928   00020A                     RB1PPS          equ	522	;# 
 15929   00020B                     RB2PPS          equ	523	;# 
 15930   00020C                     RB3PPS          equ	524	;# 
 15931   00020D                     RB4PPS          equ	525	;# 
 15932   00020E                     RB5PPS          equ	526	;# 
 15933   00020F                     RB6PPS          equ	527	;# 
 15934   000210                     RB7PPS          equ	528	;# 
 15935   000211                     RC0PPS          equ	529	;# 
 15936   000212                     RC1PPS          equ	530	;# 
 15937   000213                     RC2PPS          equ	531	;# 
 15938   000214                     RC3PPS          equ	532	;# 
 15939   000215                     RC4PPS          equ	533	;# 
 15940   000216                     RC5PPS          equ	534	;# 
 15941   000217                     RC6PPS          equ	535	;# 
 15942   000218                     RC7PPS          equ	536	;# 
 15943   00023D                     CANRXPPS        equ	573	;# 
 15944   00023E                     INT0PPS         equ	574	;# 
 15945   00023F                     INT1PPS         equ	575	;# 
 15946   000240                     INT2PPS         equ	576	;# 
 15947   000241                     T0CKIPPS        equ	577	;# 
 15948   000242                     T1CKIPPS        equ	578	;# 
 15949   000243                     T1GPPS          equ	579	;# 
 15950   000244                     T3CKIPPS        equ	580	;# 
 15951   000245                     T3GPPS          equ	581	;# 
 15952   000246                     T5CKIPPS        equ	582	;# 
 15953   000247                     T5GPPS          equ	583	;# 
 15954   000248                     T2INPPS         equ	584	;# 
 15955   000249                     T4INPPS         equ	585	;# 
 15956   00024A                     T6INPPS         equ	586	;# 
 15957   00024B                     TUIN0PPS        equ	587	;# 
 15958   00024C                     TUIN1PPS        equ	588	;# 
 15959   00024F                     CCP1PPS         equ	591	;# 
 15960   000250                     CCP2PPS         equ	592	;# 
 15961   000251                     CCP3PPS         equ	593	;# 
 15962   000253                     PWM1ERSPPS      equ	595	;# 
 15963   000254                     PWM2ERSPPS      equ	596	;# 
 15964   000255                     PWM3ERSPPS      equ	597	;# 
 15965   000256                     PWM4ERSPPS      equ	598	;# 
 15966   000257                     PWMIN0PPS       equ	599	;# 
 15967   000258                     PWMIN1PPS       equ	600	;# 
 15968   000259                     SMT1WINPPS      equ	601	;# 
 15969   00025A                     SMT1SIGPPS      equ	602	;# 
 15970   00025B                     CWG1PPS         equ	603	;# 
 15971   00025B                     CWG1INPPS       equ	603	;# 
 15972   00025C                     CWG2PPS         equ	604	;# 
 15973   00025C                     CWG2INPPS       equ	604	;# 
 15974   00025D                     CWG3PPS         equ	605	;# 
 15975   00025D                     CWG3INPPS       equ	605	;# 
 15976   00025E                     MD1CARLPPS      equ	606	;# 
 15977   00025E                     MDCARLPPS       equ	606	;# 
 15978   00025F                     MD1CARHPPS      equ	607	;# 
 15979   00025F                     MDCARHPPS       equ	607	;# 
 15980   000260                     MD1SRCPPS       equ	608	;# 
 15981   000260                     MDSRCPPS        equ	608	;# 
 15982   000261                     CLCIN0PPS       equ	609	;# 
 15983   000262                     CLCIN1PPS       equ	610	;# 
 15984   000263                     CLCIN2PPS       equ	611	;# 
 15985   000264                     CLCIN3PPS       equ	612	;# 
 15986   000265                     CLCIN4PPS       equ	613	;# 
 15987   000266                     CLCIN5PPS       equ	614	;# 
 15988   000267                     CLCIN6PPS       equ	615	;# 
 15989   000268                     CLCIN7PPS       equ	616	;# 
 15990   000269                     ADACTPPS        equ	617	;# 
 15991   00026A                     SPI1SCKPPS      equ	618	;# 
 15992   00026B                     SPI1SDIPPS      equ	619	;# 
 15993   00026C                     SPI1SSPPS       equ	620	;# 
 15994   00026D                     SPI2SCKPPS      equ	621	;# 
 15995   00026E                     SPI2SDIPPS      equ	622	;# 
 15996   00026F                     SPI2SSPPS       equ	623	;# 
 15997   000270                     I2C1SDAPPS      equ	624	;# 
 15998   000271                     I2C1SCLPPS      equ	625	;# 
 15999   000272                     U1RXPPS         equ	626	;# 
 16000   000273                     U1CTSPPS        equ	627	;# 
 16001   000274                     U2RXPPS         equ	628	;# 
 16002   000275                     U2CTSPPS        equ	629	;# 
 16003   000276                     U3RXPPS         equ	630	;# 
 16004   000277                     U3CTSPPS        equ	631	;# 
 16005   000278                     U4RXPPS         equ	632	;# 
 16006   000279                     U4CTSPPS        equ	633	;# 
 16007   00027A                     U5RXPPS         equ	634	;# 
 16008   00027B                     U5CTSPPS        equ	635	;# 
 16009   000286                     RC4I2C          equ	646	;# 
 16010   000287                     RC3I2C          equ	647	;# 
 16011   000288                     RB2I2C          equ	648	;# 
 16012   000289                     RB1I2C          equ	649	;# 
 16013   00028A                     I2C1RXB         equ	650	;# 
 16014   00028B                     I2C1TXB         equ	651	;# 
 16015   00028C                     I2C1CNTL        equ	652	;# 
 16016   00028D                     I2C1CNTH        equ	653	;# 
 16017   00028E                     I2C1ADB0        equ	654	;# 
 16018   00028F                     I2C1ADB1        equ	655	;# 
 16019   000290                     I2C1ADR0        equ	656	;# 
 16020   000291                     I2C1ADR1        equ	657	;# 
 16021   000292                     I2C1ADR2        equ	658	;# 
 16022   000293                     I2C1ADR3        equ	659	;# 
 16023   000294                     I2C1CON0        equ	660	;# 
 16024   000295                     I2C1CON1        equ	661	;# 
 16025   000296                     I2C1CON2        equ	662	;# 
 16026   000297                     I2C1ERR         equ	663	;# 
 16027   000298                     I2C1STAT0       equ	664	;# 
 16028   000299                     I2C1STAT1       equ	665	;# 
 16029   00029A                     I2C1PIR         equ	666	;# 
 16030   00029B                     I2C1PIE         equ	667	;# 
 16031   00029C                     I2C1BTO         equ	668	;# 
 16032   00029D                     I2C1BAUD        equ	669	;# 
 16033   00029E                     I2C1CLK         equ	670	;# 
 16034   00029F                     I2C1BTOC        equ	671	;# 
 16035   0002A1                     U1RXB           equ	673	;# 
 16036   0002A1                     U1RXBL          equ	673	;# 
 16037   0002A2                     U1RXCHK         equ	674	;# 
 16038   0002A3                     U1TXB           equ	675	;# 
 16039   0002A3                     U1TXBL          equ	675	;# 
 16040   0002A4                     U1TXCHK         equ	676	;# 
 16041   0002A5                     U1P1            equ	677	;# 
 16042   0002A5                     U1P1L           equ	677	;# 
 16043   0002A6                     U1P1H           equ	678	;# 
 16044   0002A7                     U1P2            equ	679	;# 
 16045   0002A7                     U1P2L           equ	679	;# 
 16046   0002A8                     U1P2H           equ	680	;# 
 16047   0002A9                     U1P3            equ	681	;# 
 16048   0002A9                     U1P3L           equ	681	;# 
 16049   0002AA                     U1P3H           equ	682	;# 
 16050   0002AB                     U1CON0          equ	683	;# 
 16051   0002AC                     U1CON1          equ	684	;# 
 16052   0002AD                     U1CON2          equ	685	;# 
 16053   0002AE                     U1BRG           equ	686	;# 
 16054   0002AE                     U1BRGL          equ	686	;# 
 16055   0002AF                     U1BRGH          equ	687	;# 
 16056   0002B0                     U1FIFO          equ	688	;# 
 16057   0002B1                     U1UIR           equ	689	;# 
 16058   0002B2                     U1ERRIR         equ	690	;# 
 16059   0002B3                     U1ERRIE         equ	691	;# 
 16060   0002B4                     U2RXB           equ	692	;# 
 16061   0002B4                     U2RXBL          equ	692	;# 
 16062   0002B5                     U2RXCHK         equ	693	;# 
 16063   0002B6                     U2TXB           equ	694	;# 
 16064   0002B6                     U2TXBL          equ	694	;# 
 16065   0002B7                     U2TXCHK         equ	695	;# 
 16066   0002B8                     U2P1            equ	696	;# 
 16067   0002B8                     U2P1L           equ	696	;# 
 16068   0002B9                     U2P1H           equ	697	;# 
 16069   0002BA                     U2P2            equ	698	;# 
 16070   0002BA                     U2P2L           equ	698	;# 
 16071   0002BB                     U2P2H           equ	699	;# 
 16072   0002BC                     U2P3            equ	700	;# 
 16073   0002BC                     U2P3L           equ	700	;# 
 16074   0002BD                     U2P3H           equ	701	;# 
 16075   0002BE                     U2CON0          equ	702	;# 
 16076   0002BF                     U2CON1          equ	703	;# 
 16077   0002C0                     U2CON2          equ	704	;# 
 16078   0002C1                     U2BRG           equ	705	;# 
 16079   0002C1                     U2BRGL          equ	705	;# 
 16080   0002C2                     U2BRGH          equ	706	;# 
 16081   0002C3                     U2FIFO          equ	707	;# 
 16082   0002C4                     U2UIR           equ	708	;# 
 16083   0002C5                     U2ERRIR         equ	709	;# 
 16084   0002C6                     U2ERRIE         equ	710	;# 
 16085   0002C7                     U3RXB           equ	711	;# 
 16086   0002C7                     U3RXBL          equ	711	;# 
 16087   0002C9                     U3TXB           equ	713	;# 
 16088   0002C9                     U3TXBL          equ	713	;# 
 16089   0002CB                     U3P1            equ	715	;# 
 16090   0002CB                     U3P1L           equ	715	;# 
 16091   0002CD                     U3P2            equ	717	;# 
 16092   0002CD                     U3P2L           equ	717	;# 
 16093   0002CF                     U3P3            equ	719	;# 
 16094   0002CF                     U3P3L           equ	719	;# 
 16095   0002D1                     U3CON0          equ	721	;# 
 16096   0002D2                     U3CON1          equ	722	;# 
 16097   0002D3                     U3CON2          equ	723	;# 
 16098   0002D4                     U3BRG           equ	724	;# 
 16099   0002D4                     U3BRGL          equ	724	;# 
 16100   0002D5                     U3BRGH          equ	725	;# 
 16101   0002D6                     U3FIFO          equ	726	;# 
 16102   0002D7                     U3UIR           equ	727	;# 
 16103   0002D8                     U3ERRIR         equ	728	;# 
 16104   0002D9                     U3ERRIE         equ	729	;# 
 16105   0002DA                     U4RXB           equ	730	;# 
 16106   0002DA                     U4RXBL          equ	730	;# 
 16107   0002DC                     U4TXB           equ	732	;# 
 16108   0002DC                     U4TXBL          equ	732	;# 
 16109   0002DE                     U4P1            equ	734	;# 
 16110   0002DE                     U4P1L           equ	734	;# 
 16111   0002E0                     U4P2            equ	736	;# 
 16112   0002E0                     U4P2L           equ	736	;# 
 16113   0002E2                     U4P3            equ	738	;# 
 16114   0002E2                     U4P3L           equ	738	;# 
 16115   0002E4                     U4CON0          equ	740	;# 
 16116   0002E5                     U4CON1          equ	741	;# 
 16117   0002E6                     U4CON2          equ	742	;# 
 16118   0002E7                     U4BRG           equ	743	;# 
 16119   0002E7                     U4BRGL          equ	743	;# 
 16120   0002E8                     U4BRGH          equ	744	;# 
 16121   0002E9                     U4FIFO          equ	745	;# 
 16122   0002EA                     U4UIR           equ	746	;# 
 16123   0002EB                     U4ERRIR         equ	747	;# 
 16124   0002EC                     U4ERRIE         equ	748	;# 
 16125   0002ED                     U5RXB           equ	749	;# 
 16126   0002ED                     U5RXBL          equ	749	;# 
 16127   0002EF                     U5TXB           equ	751	;# 
 16128   0002EF                     U5TXBL          equ	751	;# 
 16129   0002F1                     U5P1            equ	753	;# 
 16130   0002F1                     U5P1L           equ	753	;# 
 16131   0002F3                     U5P2            equ	755	;# 
 16132   0002F3                     U5P2L           equ	755	;# 
 16133   0002F5                     U5P3            equ	757	;# 
 16134   0002F5                     U5P3L           equ	757	;# 
 16135   0002F7                     U5CON0          equ	759	;# 
 16136   0002F8                     U5CON1          equ	760	;# 
 16137   0002F9                     U5CON2          equ	761	;# 
 16138   0002FA                     U5BRG           equ	762	;# 
 16139   0002FA                     U5BRGL          equ	762	;# 
 16140   0002FB                     U5BRGH          equ	763	;# 
 16141   0002FC                     U5FIFO          equ	764	;# 
 16142   0002FD                     U5UIR           equ	765	;# 
 16143   0002FE                     U5ERRIR         equ	766	;# 
 16144   0002FF                     U5ERRIE         equ	767	;# 
 16145   000300                     SMT1TMR         equ	768	;# 
 16146   000300                     SMT1TMRL        equ	768	;# 
 16147   000301                     SMT1TMRH        equ	769	;# 
 16148   000302                     SMT1TMRU        equ	770	;# 
 16149   000303                     SMT1CPR         equ	771	;# 
 16150   000303                     SMT1CPRL        equ	771	;# 
 16151   000304                     SMT1CPRH        equ	772	;# 
 16152   000305                     SMT1CPRU        equ	773	;# 
 16153   000306                     SMT1CPW         equ	774	;# 
 16154   000306                     SMT1CPWL        equ	774	;# 
 16155   000307                     SMT1CPWH        equ	775	;# 
 16156   000308                     SMT1CPWU        equ	776	;# 
 16157   000309                     SMT1PR          equ	777	;# 
 16158   000309                     SMT1PRL         equ	777	;# 
 16159   00030A                     SMT1PRH         equ	778	;# 
 16160   00030B                     SMT1PRU         equ	779	;# 
 16161   00030C                     SMT1CON0        equ	780	;# 
 16162   00030D                     SMT1CON1        equ	781	;# 
 16163   00030E                     SMT1STAT        equ	782	;# 
 16164   00030F                     SMT1CLK         equ	783	;# 
 16165   000310                     SMT1SIG         equ	784	;# 
 16166   000311                     SMT1WIN         equ	785	;# 
 16167   000318                     TMR0L           equ	792	;# 
 16168   000318                     TMR0            equ	792	;# 
 16169   000319                     TMR0H           equ	793	;# 
 16170   000319                     PR0             equ	793	;# 
 16171   00031A                     T0CON0          equ	794	;# 
 16172   00031B                     T0CON1          equ	795	;# 
 16173   00031C                     TMR1            equ	796	;# 
 16174   00031C                     TMR1L           equ	796	;# 
 16175   00031D                     TMR1H           equ	797	;# 
 16176   00031E                     T1CON           equ	798	;# 
 16177   00031E                     TMR1CON         equ	798	;# 
 16178   00031F                     T1GCON          equ	799	;# 
 16179   00031F                     TMR1GCON        equ	799	;# 
 16180   000320                     T1GATE          equ	800	;# 
 16181   000320                     TMR1GATE        equ	800	;# 
 16182   000321                     T1CLK           equ	801	;# 
 16183   000321                     TMR1CLK         equ	801	;# 
 16184   000321                     PR1             equ	801	;# 
 16185   000322                     T2TMR           equ	802	;# 
 16186   000322                     TMR2            equ	802	;# 
 16187   000323                     T2PR            equ	803	;# 
 16188   000323                     PR2             equ	803	;# 
 16189   000324                     T2CON           equ	804	;# 
 16190   000325                     T2HLT           equ	805	;# 
 16191   000326                     T2CLKCON        equ	806	;# 
 16192   000326                     T2CLK           equ	806	;# 
 16193   000327                     T2RST           equ	807	;# 
 16194   000328                     TMR3            equ	808	;# 
 16195   000328                     TMR3L           equ	808	;# 
 16196   000329                     TMR3H           equ	809	;# 
 16197   00032A                     T3CON           equ	810	;# 
 16198   00032A                     TMR3CON         equ	810	;# 
 16199   00032B                     T3GCON          equ	811	;# 
 16200   00032B                     TMR3GCON        equ	811	;# 
 16201   00032C                     T3GATE          equ	812	;# 
 16202   00032C                     TMR3GATE        equ	812	;# 
 16203   00032D                     T3CLK           equ	813	;# 
 16204   00032D                     TMR3CLK         equ	813	;# 
 16205   00032D                     PR3             equ	813	;# 
 16206   00032E                     T4TMR           equ	814	;# 
 16207   00032E                     TMR4            equ	814	;# 
 16208   00032F                     T4PR            equ	815	;# 
 16209   00032F                     PR4             equ	815	;# 
 16210   000330                     T4CON           equ	816	;# 
 16211   000331                     T4HLT           equ	817	;# 
 16212   000332                     T4CLKCON        equ	818	;# 
 16213   000332                     T4CLK           equ	818	;# 
 16214   000333                     T4RST           equ	819	;# 
 16215   000334                     TMR5            equ	820	;# 
 16216   000334                     TMR5L           equ	820	;# 
 16217   000335                     TMR5H           equ	821	;# 
 16218   000336                     T5CON           equ	822	;# 
 16219   000336                     TMR5CON         equ	822	;# 
 16220   000337                     T5GCON          equ	823	;# 
 16221   000337                     TMR5GCON        equ	823	;# 
 16222   000338                     T5GATE          equ	824	;# 
 16223   000338                     TMR5GATE        equ	824	;# 
 16224   000339                     T5CLK           equ	825	;# 
 16225   000339                     TMR5CLK         equ	825	;# 
 16226   000339                     PR5             equ	825	;# 
 16227   00033A                     T6TMR           equ	826	;# 
 16228   00033A                     TMR6            equ	826	;# 
 16229   00033B                     T6PR            equ	827	;# 
 16230   00033B                     PR6             equ	827	;# 
 16231   00033C                     T6CON           equ	828	;# 
 16232   00033D                     T6HLT           equ	829	;# 
 16233   00033E                     T6CLKCON        equ	830	;# 
 16234   00033E                     T6CLK           equ	830	;# 
 16235   00033F                     T6RST           equ	831	;# 
 16236   000340                     CCPR1           equ	832	;# 
 16237   000340                     CCPR1L          equ	832	;# 
 16238   000341                     CCPR1H          equ	833	;# 
 16239   000342                     CCP1CON         equ	834	;# 
 16240   000343                     CCP1CAP         equ	835	;# 
 16241   000344                     CCPR2           equ	836	;# 
 16242   000344                     CCPR2L          equ	836	;# 
 16243   000345                     CCPR2H          equ	837	;# 
 16244   000346                     CCP2CON         equ	838	;# 
 16245   000347                     CCP2CAP         equ	839	;# 
 16246   000348                     CCPR3           equ	840	;# 
 16247   000348                     CCPR3L          equ	840	;# 
 16248   000349                     CCPR3H          equ	841	;# 
 16249   00034A                     CCP3CON         equ	842	;# 
 16250   00034B                     CCP3CAP         equ	843	;# 
 16251   00034C                     CCPTMRS0        equ	844	;# 
 16252   00034F                     CRCDATA         equ	847	;# 
 16253   00034F                     CRCDATAL        equ	847	;# 
 16254   000350                     CRCDATAH        equ	848	;# 
 16255   000351                     CRCDATAU        equ	849	;# 
 16256   000352                     CRCDATAT        equ	850	;# 
 16257   000353                     CRCOUT          equ	851	;# 
 16258   000353                     CRCSHFT         equ	851	;# 
 16259   000353                     CRCXOR          equ	851	;# 
 16260   000353                     CRCOUTL         equ	851	;# 
 16261   000353                     CRCSHFTL        equ	851	;# 
 16262   000353                     CRCSHIFTL       equ	851	;# 
 16263   000353                     CRCXORL         equ	851	;# 
 16264   000354                     CRCOUTH         equ	852	;# 
 16265   000354                     CRCSHFTH        equ	852	;# 
 16266   000354                     CRCSHIFTH       equ	852	;# 
 16267   000354                     CRCXORH         equ	852	;# 
 16268   000355                     CRCOUTU         equ	853	;# 
 16269   000355                     CRCSHFTU        equ	853	;# 
 16270   000355                     CRCSHIFTU       equ	853	;# 
 16271   000355                     CRCXORU         equ	853	;# 
 16272   000356                     CRCOUTT         equ	854	;# 
 16273   000356                     CRCSHFTT        equ	854	;# 
 16274   000356                     CRCSHIFTT       equ	854	;# 
 16275   000356                     CRCXORT         equ	854	;# 
 16276   000357                     CRCCON0         equ	855	;# 
 16277   000358                     CRCCON1         equ	856	;# 
 16278   000359                     CRCCON2         equ	857	;# 
 16279   00035A                     SCANLADR        equ	858	;# 
 16280   00035A                     SCANLADRL       equ	858	;# 
 16281   00035B                     SCANLADRH       equ	859	;# 
 16282   00035C                     SCANLADRU       equ	860	;# 
 16283   00035D                     SCANHADR        equ	861	;# 
 16284   00035D                     SCANHADRL       equ	861	;# 
 16285   00035E                     SCANHADRH       equ	862	;# 
 16286   00035F                     SCANHADRU       equ	863	;# 
 16287   000360                     SCANCON0        equ	864	;# 
 16288   000361                     SCANTRIG        equ	865	;# 
 16289   000362                     IPR0            equ	866	;# 
 16290   000363                     IPR1            equ	867	;# 
 16291   000364                     IPR2            equ	868	;# 
 16292   000365                     IPR3            equ	869	;# 
 16293   000366                     IPR4            equ	870	;# 
 16294   000367                     IPR5            equ	871	;# 
 16295   000368                     IPR6            equ	872	;# 
 16296   000369                     IPR7            equ	873	;# 
 16297   00036A                     IPR8            equ	874	;# 
 16298   00036B                     IPR9            equ	875	;# 
 16299   00036C                     IPR10           equ	876	;# 
 16300   00036D                     IPR11           equ	877	;# 
 16301   00036E                     IPR12           equ	878	;# 
 16302   00036F                     IPR13           equ	879	;# 
 16303   000370                     IPR14           equ	880	;# 
 16304   000371                     IPR15           equ	881	;# 
 16305   000373                     STATUS_CSHAD    equ	883	;# 
 16306   000374                     WREG_CSHAD      equ	884	;# 
 16307   000375                     BSR_CSHAD       equ	885	;# 
 16308   000376                     SHADCON         equ	886	;# 
 16309   000377                     STATUS_SHAD     equ	887	;# 
 16310   000378                     WREG_SHAD       equ	888	;# 
 16311   000379                     BSR_SHAD        equ	889	;# 
 16312   00037A                     PCLATH_SHAD     equ	890	;# 
 16313   00037B                     PCLATU_SHAD     equ	891	;# 
 16314   00037C                     FSR0SH          equ	892	;# 
 16315   00037C                     FSR0L_SHAD      equ	892	;# 
 16316   00037D                     FSR0H_SHAD      equ	893	;# 
 16317   00037E                     FSR1SH          equ	894	;# 
 16318   00037E                     FSR1L_SHAD      equ	894	;# 
 16319   00037F                     FSR1H_SHAD      equ	895	;# 
 16320   000380                     FSR2SH          equ	896	;# 
 16321   000380                     FSR2L_SHAD      equ	896	;# 
 16322   000381                     FSR2H_SHAD      equ	897	;# 
 16323   000382                     PRODSH          equ	898	;# 
 16324   000382                     PRODL_SHAD      equ	898	;# 
 16325   000383                     PRODH_SHAD      equ	899	;# 
 16326   000387                     TU16ACON0       equ	903	;# 
 16327   000388                     TU16ACON1       equ	904	;# 
 16328   000389                     TU16AHLT        equ	905	;# 
 16329   00038A                     TU16APS         equ	906	;# 
 16330   00038B                     TU16ATMR        equ	907	;# 
 16331   00038B                     TU16ACR         equ	907	;# 
 16332   00038B                     TU16ATMRL       equ	907	;# 
 16333   00038B                     TU16ACRL        equ	907	;# 
 16334   00038C                     TU16ATMRH       equ	908	;# 
 16335   00038C                     TU16ACRH        equ	908	;# 
 16336   00038D                     TU16APR         equ	909	;# 
 16337   00038D                     TU16APRL        equ	909	;# 
 16338   00038E                     TU16APRH        equ	910	;# 
 16339   00038F                     TU16ACLK        equ	911	;# 
 16340   000390                     TU16AERS        equ	912	;# 
 16341   000393                     TU16BCON0       equ	915	;# 
 16342   000394                     TU16BCON1       equ	916	;# 
 16343   000395                     TU16BHLT        equ	917	;# 
 16344   000396                     TU16BPS         equ	918	;# 
 16345   000397                     TU16BTMR        equ	919	;# 
 16346   000397                     TU16BCR         equ	919	;# 
 16347   000397                     TU16BTMRL       equ	919	;# 
 16348   000397                     TU16BCRL        equ	919	;# 
 16349   000398                     TU16BTMRH       equ	920	;# 
 16350   000398                     TU16BCRH        equ	920	;# 
 16351   000399                     TU16BPR         equ	921	;# 
 16352   000399                     TU16BPRL        equ	921	;# 
 16353   00039A                     TU16BPRH        equ	922	;# 
 16354   00039B                     TU16BCLK        equ	923	;# 
 16355   00039C                     TU16BERS        equ	924	;# 
 16356   0003BB                     TUCHAIN         equ	955	;# 
 16357   0003BC                     CWG1CLK         equ	956	;# 
 16358   0003BC                     CWG1CLKCON      equ	956	;# 
 16359   0003BD                     CWG1ISM         equ	957	;# 
 16360   0003BE                     CWG1DBR         equ	958	;# 
 16361   0003BF                     CWG1DBF         equ	959	;# 
 16362   0003C0                     CWG1CON0        equ	960	;# 
 16363   0003C1                     CWG1CON1        equ	961	;# 
 16364   0003C2                     CWG1AS0         equ	962	;# 
 16365   0003C3                     CWG1AS1         equ	963	;# 
 16366   0003C4                     CWG1STR         equ	964	;# 
 16367   0003C5                     CWG2CLK         equ	965	;# 
 16368   0003C5                     CWG2CLKCON      equ	965	;# 
 16369   0003C6                     CWG2ISM         equ	966	;# 
 16370   0003C7                     CWG2DBR         equ	967	;# 
 16371   0003C8                     CWG2DBF         equ	968	;# 
 16372   0003C9                     CWG2CON0        equ	969	;# 
 16373   0003CA                     CWG2CON1        equ	970	;# 
 16374   0003CB                     CWG2AS0         equ	971	;# 
 16375   0003CC                     CWG2AS1         equ	972	;# 
 16376   0003CD                     CWG2STR         equ	973	;# 
 16377   0003CE                     CWG3CLK         equ	974	;# 
 16378   0003CE                     CWG3CLKCON      equ	974	;# 
 16379   0003CF                     CWG3ISM         equ	975	;# 
 16380   0003D0                     CWG3DBR         equ	976	;# 
 16381   0003D1                     CWG3DBF         equ	977	;# 
 16382   0003D2                     CWG3CON0        equ	978	;# 
 16383   0003D3                     CWG3CON1        equ	979	;# 
 16384   0003D4                     CWG3AS0         equ	980	;# 
 16385   0003D5                     CWG3AS1         equ	981	;# 
 16386   0003D6                     CWG3STR         equ	982	;# 
 16387   0003D7                     FVRCON          equ	983	;# 
 16388   0003D8                     ADCPCON         equ	984	;# 
 16389   0003D8                     ADCP            equ	984	;# 
 16390   0003D9                     ADLTH           equ	985	;# 
 16391   0003D9                     ADLTHL          equ	985	;# 
 16392   0003DA                     ADLTHH          equ	986	;# 
 16393   0003DB                     ADUTH           equ	987	;# 
 16394   0003DB                     ADUTHL          equ	987	;# 
 16395   0003DC                     ADUTHH          equ	988	;# 
 16396   0003DD                     ADERR           equ	989	;# 
 16397   0003DD                     ADERRL          equ	989	;# 
 16398   0003DE                     ADERRH          equ	990	;# 
 16399   0003DF                     ADSTPT          equ	991	;# 
 16400   0003DF                     ADSTPTL         equ	991	;# 
 16401   0003E0                     ADSTPTH         equ	992	;# 
 16402   0003E1                     ADFLTR          equ	993	;# 
 16403   0003E1                     ADFLTRL         equ	993	;# 
 16404   0003E2                     ADFLTRH         equ	994	;# 
 16405   0003E3                     ADACC           equ	995	;# 
 16406   0003E3                     ADACCL          equ	995	;# 
 16407   0003E4                     ADACCH          equ	996	;# 
 16408   0003E5                     ADACCU          equ	997	;# 
 16409   0003E6                     ADCNT           equ	998	;# 
 16410   0003E7                     ADRPT           equ	999	;# 
 16411   0003E8                     ADPREV          equ	1000	;# 
 16412   0003E8                     ADPREVL         equ	1000	;# 
 16413   0003E9                     ADPREVH         equ	1001	;# 
 16414   0003EA                     ADRES           equ	1002	;# 
 16415   0003EA                     ADRESL          equ	1002	;# 
 16416   0003EB                     ADRESH          equ	1003	;# 
 16417   0003EC                     ADPCH           equ	1004	;# 
 16418   0003EE                     ADACQ           equ	1006	;# 
 16419   0003EE                     ADACQL          equ	1006	;# 
 16420   0003EF                     ADACQH          equ	1007	;# 
 16421   0003F0                     ADCAP           equ	1008	;# 
 16422   0003F1                     ADPRE           equ	1009	;# 
 16423   0003F1                     ADPREL          equ	1009	;# 
 16424   0003F2                     ADPREH          equ	1010	;# 
 16425   0003F3                     ADCON0          equ	1011	;# 
 16426   0003F4                     ADCON1          equ	1012	;# 
 16427   0003F5                     ADCON2          equ	1013	;# 
 16428   0003F6                     ADCON3          equ	1014	;# 
 16429   0003F7                     ADSTAT          equ	1015	;# 
 16430   0003F8                     ADREF           equ	1016	;# 
 16431   0003F9                     ADACT           equ	1017	;# 
 16432   0003FA                     ADCLK           equ	1018	;# 
 16433   0003FB                     ADCTX           equ	1019	;# 
 16434   0003FC                     ADCSEL1         equ	1020	;# 
 16435   0003FD                     ADCSEL2         equ	1021	;# 
 16436   0003FE                     ADCSEL3         equ	1022	;# 
 16437   0003FF                     ADCSEL4         equ	1023	;# 
 16438   000400                     ANSELA          equ	1024	;# 
 16439   000401                     WPUA            equ	1025	;# 
 16440   000402                     ODCONA          equ	1026	;# 
 16441   000403                     SLRCONA         equ	1027	;# 
 16442   000404                     INLVLA          equ	1028	;# 
 16443   000405                     IOCAP           equ	1029	;# 
 16444   000406                     IOCAN           equ	1030	;# 
 16445   000407                     IOCAF           equ	1031	;# 
 16446   000408                     ANSELB          equ	1032	;# 
 16447   000409                     WPUB            equ	1033	;# 
 16448   00040A                     ODCONB          equ	1034	;# 
 16449   00040B                     SLRCONB         equ	1035	;# 
 16450   00040C                     INLVLB          equ	1036	;# 
 16451   00040D                     IOCBP           equ	1037	;# 
 16452   00040E                     IOCBN           equ	1038	;# 
 16453   00040F                     IOCBF           equ	1039	;# 
 16454   000410                     ANSELC          equ	1040	;# 
 16455   000411                     WPUC            equ	1041	;# 
 16456   000412                     ODCONC          equ	1042	;# 
 16457   000413                     SLRCONC         equ	1043	;# 
 16458   000414                     INLVLC          equ	1044	;# 
 16459   000415                     IOCCP           equ	1045	;# 
 16460   000416                     IOCCN           equ	1046	;# 
 16461   000417                     IOCCF           equ	1047	;# 
 16462   000421                     WPUE            equ	1057	;# 
 16463   000424                     INLVLE          equ	1060	;# 
 16464   000425                     IOCEP           equ	1061	;# 
 16465   000426                     IOCEN           equ	1062	;# 
 16466   000427                     IOCEF           equ	1063	;# 
 16467   000440                     NCO1ACC         equ	1088	;# 
 16468   000440                     NCO1ACCL        equ	1088	;# 
 16469   000441                     NCO1ACCH        equ	1089	;# 
 16470   000442                     NCO1ACCU        equ	1090	;# 
 16471   000443                     NCO1INC         equ	1091	;# 
 16472   000443                     NCO1INCL        equ	1091	;# 
 16473   000444                     NCO1INCH        equ	1092	;# 
 16474   000445                     NCO1INCU        equ	1093	;# 
 16475   000446                     NCO1CON         equ	1094	;# 
 16476   000447                     NCO1CLK         equ	1095	;# 
 16477   000448                     NCO2ACC         equ	1096	;# 
 16478   000448                     NCO2ACCL        equ	1096	;# 
 16479   000449                     NCO2ACCH        equ	1097	;# 
 16480   00044A                     NCO2ACCU        equ	1098	;# 
 16481   00044B                     NCO2INC         equ	1099	;# 
 16482   00044B                     NCO2INCL        equ	1099	;# 
 16483   00044C                     NCO2INCH        equ	1100	;# 
 16484   00044D                     NCO2INCU        equ	1101	;# 
 16485   00044E                     NCO2CON         equ	1102	;# 
 16486   00044F                     NCO2CLK         equ	1103	;# 
 16487   000450                     NCO3ACC         equ	1104	;# 
 16488   000450                     NCO3ACCL        equ	1104	;# 
 16489   000451                     NCO3ACCH        equ	1105	;# 
 16490   000452                     NCO3ACCU        equ	1106	;# 
 16491   000453                     NCO3INC         equ	1107	;# 
 16492   000453                     NCO3INCL        equ	1107	;# 
 16493   000454                     NCO3INCH        equ	1108	;# 
 16494   000455                     NCO3INCU        equ	1109	;# 
 16495   000456                     NCO3CON         equ	1110	;# 
 16496   000457                     NCO3CLK         equ	1111	;# 
 16497   000458                     FSCMCON         equ	1112	;# 
 16498   000459                     IVTLOCK         equ	1113	;# 
 16499   00045A                     IVTAD           equ	1114	;# 
 16500   00045A                     IVTADL          equ	1114	;# 
 16501   00045B                     IVTADH          equ	1115	;# 
 16502   00045C                     IVTADU          equ	1116	;# 
 16503   00045D                     IVTBASE         equ	1117	;# 
 16504   00045D                     IVTBASEL        equ	1117	;# 
 16505   00045E                     IVTBASEH        equ	1118	;# 
 16506   00045F                     IVTBASEU        equ	1119	;# 
 16507   000460                     PWM1ERS         equ	1120	;# 
 16508   000461                     PWM1CLK         equ	1121	;# 
 16509   000462                     PWM1LDS         equ	1122	;# 
 16510   000463                     PWM1PR          equ	1123	;# 
 16511   000463                     PWM1PRL         equ	1123	;# 
 16512   000464                     PWM1PRH         equ	1124	;# 
 16513   000465                     PWM1CPRE        equ	1125	;# 
 16514   000466                     PWM1PIPOS       equ	1126	;# 
 16515   000467                     PWM1GIR         equ	1127	;# 
 16516   000468                     PWM1GIE         equ	1128	;# 
 16517   000469                     PWM1CON         equ	1129	;# 
 16518   00046A                     PWM1S1CFG       equ	1130	;# 
 16519   00046B                     PWM1S1P1        equ	1131	;# 
 16520   00046B                     PWM1S1P1L       equ	1131	;# 
 16521   00046C                     PWM1S1P1H       equ	1132	;# 
 16522   00046D                     PWM1S1P2        equ	1133	;# 
 16523   00046D                     PWM1S1P2L       equ	1133	;# 
 16524   00046E                     PWM1S1P2H       equ	1134	;# 
 16525   00046F                     PWM2ERS         equ	1135	;# 
 16526   000470                     PWM2CLK         equ	1136	;# 
 16527   000471                     PWM2LDS         equ	1137	;# 
 16528   000472                     PWM2PR          equ	1138	;# 
 16529   000472                     PWM2PRL         equ	1138	;# 
 16530   000473                     PWM2PRH         equ	1139	;# 
 16531   000474                     PWM2CPRE        equ	1140	;# 
 16532   000475                     PWM2PIPOS       equ	1141	;# 
 16533   000476                     PWM2GIR         equ	1142	;# 
 16534   000477                     PWM2GIE         equ	1143	;# 
 16535   000478                     PWM2CON         equ	1144	;# 
 16536   000479                     PWM2S1CFG       equ	1145	;# 
 16537   00047A                     PWM2S1P1        equ	1146	;# 
 16538   00047A                     PWM2S1P1L       equ	1146	;# 
 16539   00047B                     PWM2S1P1H       equ	1147	;# 
 16540   00047C                     PWM2S1P2        equ	1148	;# 
 16541   00047C                     PWM2S1P2L       equ	1148	;# 
 16542   00047D                     PWM2S1P2H       equ	1149	;# 
 16543   00047E                     PWM3ERS         equ	1150	;# 
 16544   00047F                     PWM3CLK         equ	1151	;# 
 16545   000480                     PWM3LDS         equ	1152	;# 
 16546   000481                     PWM3PR          equ	1153	;# 
 16547   000481                     PWM3PRL         equ	1153	;# 
 16548   000482                     PWM3PRH         equ	1154	;# 
 16549   000483                     PWM3CPRE        equ	1155	;# 
 16550   000484                     PWM3PIPOS       equ	1156	;# 
 16551   000485                     PWM3GIR         equ	1157	;# 
 16552   000486                     PWM3GIE         equ	1158	;# 
 16553   000487                     PWM3CON         equ	1159	;# 
 16554   000488                     PWM3S1CFG       equ	1160	;# 
 16555   000489                     PWM3S1P1        equ	1161	;# 
 16556   000489                     PWM3S1P1L       equ	1161	;# 
 16557   00048A                     PWM3S1P1H       equ	1162	;# 
 16558   00048B                     PWM3S1P2        equ	1163	;# 
 16559   00048B                     PWM3S1P2L       equ	1163	;# 
 16560   00048C                     PWM3S1P2H       equ	1164	;# 
 16561   00048D                     PWM4ERS         equ	1165	;# 
 16562   00048E                     PWM4CLK         equ	1166	;# 
 16563   00048F                     PWM4LDS         equ	1167	;# 
 16564   000490                     PWM4PR          equ	1168	;# 
 16565   000490                     PWM4PRL         equ	1168	;# 
 16566   000491                     PWM4PRH         equ	1169	;# 
 16567   000492                     PWM4CPRE        equ	1170	;# 
 16568   000493                     PWM4PIPOS       equ	1171	;# 
 16569   000494                     PWM4GIR         equ	1172	;# 
 16570   000495                     PWM4GIE         equ	1173	;# 
 16571   000496                     PWM4CON         equ	1174	;# 
 16572   000497                     PWM4S1CFG       equ	1175	;# 
 16573   000498                     PWM4S1P1        equ	1176	;# 
 16574   000498                     PWM4S1P1L       equ	1176	;# 
 16575   000499                     PWM4S1P1H       equ	1177	;# 
 16576   00049A                     PWM4S1P2        equ	1178	;# 
 16577   00049A                     PWM4S1P2L       equ	1178	;# 
 16578   00049B                     PWM4S1P2H       equ	1179	;# 
 16579   00049C                     PWMLOAD         equ	1180	;# 
 16580   00049D                     PWMEN           equ	1181	;# 
 16581   00049E                     PIE0            equ	1182	;# 
 16582   00049F                     PIE1            equ	1183	;# 
 16583   0004A0                     PIE2            equ	1184	;# 
 16584   0004A1                     PIE3            equ	1185	;# 
 16585   0004A2                     PIE4            equ	1186	;# 
 16586   0004A3                     PIE5            equ	1187	;# 
 16587   0004A4                     PIE6            equ	1188	;# 
 16588   0004A5                     PIE7            equ	1189	;# 
 16589   0004A6                     PIE8            equ	1190	;# 
 16590   0004A7                     PIE9            equ	1191	;# 
 16591   0004A8                     PIE10           equ	1192	;# 
 16592   0004A9                     PIE11           equ	1193	;# 
 16593   0004AA                     PIE12           equ	1194	;# 
 16594   0004AB                     PIE13           equ	1195	;# 
 16595   0004AC                     PIE14           equ	1196	;# 
 16596   0004AD                     PIE15           equ	1197	;# 
 16597   0004AE                     PIR0            equ	1198	;# 
 16598   0004AF                     PIR1            equ	1199	;# 
 16599   0004B0                     PIR2            equ	1200	;# 
 16600   0004B1                     PIR3            equ	1201	;# 
 16601   0004B2                     PIR4            equ	1202	;# 
 16602   0004B3                     PIR5            equ	1203	;# 
 16603   0004B4                     PIR6            equ	1204	;# 
 16604   0004B5                     PIR7            equ	1205	;# 
 16605   0004B6                     PIR8            equ	1206	;# 
 16606   0004B7                     PIR9            equ	1207	;# 
 16607   0004B8                     PIR10           equ	1208	;# 
 16608   0004B9                     PIR11           equ	1209	;# 
 16609   0004BA                     PIR12           equ	1210	;# 
 16610   0004BB                     PIR13           equ	1211	;# 
 16611   0004BC                     PIR14           equ	1212	;# 
 16612   0004BD                     PIR15           equ	1213	;# 
 16613   0004BE                     LATA            equ	1214	;# 
 16614   0004BF                     LATB            equ	1215	;# 
 16615   0004C0                     LATC            equ	1216	;# 
 16616   0004C6                     TRISA           equ	1222	;# 
 16617   0004C7                     TRISB           equ	1223	;# 
 16618   0004C8                     TRISC           equ	1224	;# 
 16619   0004CA                     TRISE           equ	1226	;# 
 16620   0004CE                     PORTA           equ	1230	;# 
 16621   0004CF                     PORTB           equ	1231	;# 
 16622   0004D0                     PORTC           equ	1232	;# 
 16623   0004D2                     PORTE           equ	1234	;# 
 16624   0004D6                     INTCON0         equ	1238	;# 
 16625   0004D7                     INTCON1         equ	1239	;# 
 16626   0004D8                     STATUS          equ	1240	;# 
 16627   0004D9                     FSR2            equ	1241	;# 
 16628   0004D9                     FSR2L           equ	1241	;# 
 16629   0004DA                     FSR2H           equ	1242	;# 
 16630   0004DB                     PLUSW2          equ	1243	;# 
 16631   0004DC                     PREINC2         equ	1244	;# 
 16632   0004DD                     POSTDEC2        equ	1245	;# 
 16633   0004DE                     POSTINC2        equ	1246	;# 
 16634   0004DF                     INDF2           equ	1247	;# 
 16635   0004E0                     BSR             equ	1248	;# 
 16636   0004E1                     FSR1            equ	1249	;# 
 16637   0004E1                     FSR1L           equ	1249	;# 
 16638   0004E2                     FSR1H           equ	1250	;# 
 16639   0004E3                     PLUSW1          equ	1251	;# 
 16640   0004E4                     PREINC1         equ	1252	;# 
 16641   0004E5                     POSTDEC1        equ	1253	;# 
 16642   0004E6                     POSTINC1        equ	1254	;# 
 16643   0004E7                     INDF1           equ	1255	;# 
 16644   0004E8                     WREG            equ	1256	;# 
 16645   0004E9                     FSR0            equ	1257	;# 
 16646   0004E9                     FSR0L           equ	1257	;# 
 16647   0004EA                     FSR0H           equ	1258	;# 
 16648   0004EB                     PLUSW0          equ	1259	;# 
 16649   0004EC                     PREINC0         equ	1260	;# 
 16650   0004ED                     POSTDEC0        equ	1261	;# 
 16651   0004EE                     POSTINC0        equ	1262	;# 
 16652   0004EF                     INDF0           equ	1263	;# 
 16653   0004F0                     PCON0           equ	1264	;# 
 16654   0004F1                     PCON1           equ	1265	;# 
 16655   0004F2                     CPUDOZE         equ	1266	;# 
 16656   0004F3                     PROD            equ	1267	;# 
 16657   0004F3                     PRODL           equ	1267	;# 
 16658   0004F4                     PRODH           equ	1268	;# 
 16659   0004F5                     TABLAT          equ	1269	;# 
 16660   0004F6                     TBLPTR          equ	1270	;# 
 16661   0004F6                     TBLPTRL         equ	1270	;# 
 16662   0004F7                     TBLPTRH         equ	1271	;# 
 16663   0004F8                     TBLPTRU         equ	1272	;# 
 16664   0004F9                     PCLAT           equ	1273	;# 
 16665   0004F9                     PCL             equ	1273	;# 
 16666   0004FA                     PCLATH          equ	1274	;# 
 16667   0004FB                     PCLATU          equ	1275	;# 
 16668   0004FC                     STKPTR          equ	1276	;# 
 16669   0004FD                     TOS             equ	1277	;# 
 16670   0004FD                     TOSL            equ	1277	;# 
 16671   0004FE                     TOSH            equ	1278	;# 
 16672   0004FF                     TOSU            equ	1279	;# 
 16673   000038                     BOOTREG         equ	56	;# 
 16674   000039                     CLKRCON         equ	57	;# 
 16675   00003A                     CLKRCLK         equ	58	;# 
 16676   000040                     NVMCON0         equ	64	;# 
 16677   000041                     NVMCON1         equ	65	;# 
 16678   000042                     NVMLOCK         equ	66	;# 
 16679   000043                     NVMADR          equ	67	;# 
 16680   000043                     NVMADRL         equ	67	;# 
 16681   000044                     NVMADRH         equ	68	;# 
 16682   000045                     NVMADRU         equ	69	;# 
 16683   000046                     NVMDAT          equ	70	;# 
 16684   000046                     NVMDATL         equ	70	;# 
 16685   000047                     NVMDATH         equ	71	;# 
 16686   000048                     VREGCON         equ	72	;# 
 16687   000049                     BORCON          equ	73	;# 
 16688   00004A                     HLVDCON0        equ	74	;# 
 16689   00004B                     HLVDCON1        equ	75	;# 
 16690   00004C                     ZCDCON          equ	76	;# 
 16691   000060                     PMD0            equ	96	;# 
 16692   000061                     PMD1            equ	97	;# 
 16693   000062                     PMD2            equ	98	;# 
 16694   000063                     PMD3            equ	99	;# 
 16695   000064                     PMD4            equ	100	;# 
 16696   000065                     PMD5            equ	101	;# 
 16697   000066                     PMD6            equ	102	;# 
 16698   000067                     PMD7            equ	103	;# 
 16699   000068                     PMD8            equ	104	;# 
 16700   00006A                     MD1CON0         equ	106	;# 
 16701   00006B                     MD1CON1         equ	107	;# 
 16702   00006C                     MD1SRC          equ	108	;# 
 16703   00006D                     MD1CARL         equ	109	;# 
 16704   00006E                     MD1CARH         equ	110	;# 
 16705   00006F                     CMOUT           equ	111	;# 
 16706   000070                     CM1CON0         equ	112	;# 
 16707   000071                     CM1CON1         equ	113	;# 
 16708   000072                     CM1NCH          equ	114	;# 
 16709   000073                     CM1PCH          equ	115	;# 
 16710   000074                     CM2CON0         equ	116	;# 
 16711   000075                     CM2CON1         equ	117	;# 
 16712   000076                     CM2NCH          equ	118	;# 
 16713   000077                     CM2PCH          equ	119	;# 
 16714   000078                     WDTCON0         equ	120	;# 
 16715   000079                     WDTCON1         equ	121	;# 
 16716   00007A                     WDTPSL          equ	122	;# 
 16717   00007B                     WDTPSH          equ	123	;# 
 16718   00007C                     WDTTMR          equ	124	;# 
 16719   00007D                     DAC1DAT         equ	125	;# 
 16720   00007D                     DAC1DATL        equ	125	;# 
 16721   00007F                     DAC1CON         equ	127	;# 
 16722   000080                     SPI1RXB         equ	128	;# 
 16723   000081                     SPI1TXB         equ	129	;# 
 16724   000082                     SPI1TCNT        equ	130	;# 
 16725   000082                     SPI1TCNTL       equ	130	;# 
 16726   000083                     SPI1TCNTH       equ	131	;# 
 16727   000084                     SPI1CON0        equ	132	;# 
 16728   000085                     SPI1CON1        equ	133	;# 
 16729   000086                     SPI1CON2        equ	134	;# 
 16730   000087                     SPI1STATUS      equ	135	;# 
 16731   000088                     SPI1TWIDTH      equ	136	;# 
 16732   000089                     SPI1BAUD        equ	137	;# 
 16733   00008A                     SPI1INTF        equ	138	;# 
 16734   00008B                     SPI1INTE        equ	139	;# 
 16735   00008C                     SPI1CLK         equ	140	;# 
 16736   00008D                     SPI2RXB         equ	141	;# 
 16737   00008E                     SPI2TXB         equ	142	;# 
 16738   00008F                     SPI2TCNT        equ	143	;# 
 16739   00008F                     SPI2TCNTL       equ	143	;# 
 16740   000090                     SPI2TCNTH       equ	144	;# 
 16741   000091                     SPI2CON0        equ	145	;# 
 16742   000092                     SPI2CON1        equ	146	;# 
 16743   000093                     SPI2CON2        equ	147	;# 
 16744   000094                     SPI2STATUS      equ	148	;# 
 16745   000095                     SPI2TWIDTH      equ	149	;# 
 16746   000096                     SPI2BAUD        equ	150	;# 
 16747   000097                     SPI2INTF        equ	151	;# 
 16748   000098                     SPI2INTE        equ	152	;# 
 16749   000099                     SPI2CLK         equ	153	;# 
 16750   0000AC                     ACTCON          equ	172	;# 
 16751   0000AD                     OSCCON1         equ	173	;# 
 16752   0000AE                     OSCCON2         equ	174	;# 
 16753   0000AF                     OSCCON3         equ	175	;# 
 16754   0000B0                     OSCTUNE         equ	176	;# 
 16755   0000B1                     OSCFRQ          equ	177	;# 
 16756   0000B1                     OSCFREQ         equ	177	;# 
 16757   0000B2                     OSCSTAT         equ	178	;# 
 16758   0000B2                     OSCSTAT1        equ	178	;# 
 16759   0000B3                     OSCEN           equ	179	;# 
 16760   0000B4                     PRLOCK          equ	180	;# 
 16761   0000B5                     SCANPR          equ	181	;# 
 16762   0000B6                     DMA1PR          equ	182	;# 
 16763   0000B7                     DMA2PR          equ	183	;# 
 16764   0000B8                     DMA3PR          equ	184	;# 
 16765   0000B9                     DMA4PR          equ	185	;# 
 16766   0000BA                     DMA5PR          equ	186	;# 
 16767   0000BB                     DMA6PR          equ	187	;# 
 16768   0000BC                     DMA7PR          equ	188	;# 
 16769   0000BD                     DMA8PR          equ	189	;# 
 16770   0000BE                     MAINPR          equ	190	;# 
 16771   0000BF                     ISRPR           equ	191	;# 
 16772   0000D4                     CLCDATA         equ	212	;# 
 16773   0000D5                     CLCSELECT       equ	213	;# 
 16774   0000D6                     CLCnCON         equ	214	;# 
 16775   0000D7                     CLCnPOL         equ	215	;# 
 16776   0000D8                     CLCnSEL0        equ	216	;# 
 16777   0000D9                     CLCnSEL1        equ	217	;# 
 16778   0000DA                     CLCnSEL2        equ	218	;# 
 16779   0000DB                     CLCnSEL3        equ	219	;# 
 16780   0000DC                     CLCnGLS0        equ	220	;# 
 16781   0000DD                     CLCnGLS1        equ	221	;# 
 16782   0000DE                     CLCnGLS2        equ	222	;# 
 16783   0000DF                     CLCnGLS3        equ	223	;# 
 16784   0000E8                     DMASELECT       equ	232	;# 
 16785   0000E9                     DMAnBUF         equ	233	;# 
 16786   0000EA                     DMAnDCNT        equ	234	;# 
 16787   0000EA                     DMAnDCNTL       equ	234	;# 
 16788   0000EB                     DMAnDCNTH       equ	235	;# 
 16789   0000EC                     DMAnDPTR        equ	236	;# 
 16790   0000EC                     DMAnDPTRL       equ	236	;# 
 16791   0000ED                     DMAnDPTRH       equ	237	;# 
 16792   0000EE                     DMAnDSZ         equ	238	;# 
 16793   0000EE                     DMAnDSZL        equ	238	;# 
 16794   0000EF                     DMAnDSZH        equ	239	;# 
 16795   0000F0                     DMAnDSA         equ	240	;# 
 16796   0000F0                     DMAnDSAL        equ	240	;# 
 16797   0000F1                     DMAnDSAH        equ	241	;# 
 16798   0000F2                     DMAnSCNT        equ	242	;# 
 16799   0000F2                     DMAnSCNTL       equ	242	;# 
 16800   0000F3                     DMAnSCNTH       equ	243	;# 
 16801   0000F4                     DMAnSPTR        equ	244	;# 
 16802   0000F4                     DMAnSPTRL       equ	244	;# 
 16803   0000F5                     DMAnSPTRH       equ	245	;# 
 16804   0000F6                     DMAnSPTRU       equ	246	;# 
 16805   0000F7                     DMAnSSZ         equ	247	;# 
 16806   0000F7                     DMAnSSZL        equ	247	;# 
 16807   0000F8                     DMAnSSZH        equ	248	;# 
 16808   0000F9                     DMAnSSA         equ	249	;# 
 16809   0000F9                     DMAnSSAL        equ	249	;# 
 16810   0000FA                     DMAnSSAH        equ	250	;# 
 16811   0000FB                     DMAnSSAU        equ	251	;# 
 16812   0000FC                     DMAnCON0        equ	252	;# 
 16813   0000FD                     DMAnCON1        equ	253	;# 
 16814   0000FE                     DMAnAIRQ        equ	254	;# 
 16815   0000FF                     DMAnSIRQ        equ	255	;# 
 16816   000100                     C1CONL          equ	256	;# 
 16817   000101                     C1CONH          equ	257	;# 
 16818   000102                     C1CONU          equ	258	;# 
 16819   000103                     C1CONT          equ	259	;# 
 16820   000104                     C1NBTCFGL       equ	260	;# 
 16821   000105                     C1NBTCFGH       equ	261	;# 
 16822   000106                     C1NBTCFGU       equ	262	;# 
 16823   000107                     C1NBTCFGT       equ	263	;# 
 16824   000108                     C1DBTCFGL       equ	264	;# 
 16825   000109                     C1DBTCFGH       equ	265	;# 
 16826   00010A                     C1DBTCFGU       equ	266	;# 
 16827   00010B                     C1DBTCFGT       equ	267	;# 
 16828   00010C                     C1TDCL          equ	268	;# 
 16829   00010D                     C1TDCH          equ	269	;# 
 16830   00010E                     C1TDCU          equ	270	;# 
 16831   000110                     C1TBC           equ	272	;# 
 16832   000110                     C1TBCL          equ	272	;# 
 16833   000111                     C1TBCH          equ	273	;# 
 16834   000112                     C1TBCU          equ	274	;# 
 16835   000113                     C1TBCT          equ	275	;# 
 16836   000114                     C1TSCONL        equ	276	;# 
 16837   000115                     C1TSCONH        equ	277	;# 
 16838   000116                     C1TSCONU        equ	278	;# 
 16839   000117                     C1TSCONT        equ	279	;# 
 16840   000118                     C1VECL          equ	280	;# 
 16841   000119                     C1VECH          equ	281	;# 
 16842   00011A                     C1VECU          equ	282	;# 
 16843   00011B                     C1VECT          equ	283	;# 
 16844   00011C                     C1INTL          equ	284	;# 
 16845   00011D                     C1INTH          equ	285	;# 
 16846   00011E                     C1INTU          equ	286	;# 
 16847   00011F                     C1INTT          equ	287	;# 
 16848   000120                     C1RXIF          equ	288	;# 
 16849   000120                     C1RXIFL         equ	288	;# 
 16850   000121                     C1RXIFH         equ	289	;# 
 16851   000122                     C1RXIFU         equ	290	;# 
 16852   000123                     C1RXIFT         equ	291	;# 
 16853   000124                     C1TXIF          equ	292	;# 
 16854   000124                     C1TXIFL         equ	292	;# 
 16855   000125                     C1TXIFH         equ	293	;# 
 16856   000126                     C1TXIFU         equ	294	;# 
 16857   000127                     C1TXIFT         equ	295	;# 
 16858   000128                     C1RXOVIF        equ	296	;# 
 16859   000128                     C1RXOVIFL       equ	296	;# 
 16860   000129                     C1RXOVIFH       equ	297	;# 
 16861   00012A                     C1RXOVIFU       equ	298	;# 
 16862   00012B                     C1RXOVIFT       equ	299	;# 
 16863   00012C                     C1TXATIF        equ	300	;# 
 16864   00012C                     C1TXATIFL       equ	300	;# 
 16865   00012D                     C1TXATIFH       equ	301	;# 
 16866   00012E                     C1TXATIFU       equ	302	;# 
 16867   00012F                     C1TXATIFT       equ	303	;# 
 16868   000130                     C1TXREQ         equ	304	;# 
 16869   000130                     C1TXREQL        equ	304	;# 
 16870   000131                     C1TXREQH        equ	305	;# 
 16871   000132                     C1TXREQU        equ	306	;# 
 16872   000133                     C1TXREQT        equ	307	;# 
 16873   000134                     C1TRECL         equ	308	;# 
 16874   000135                     C1TRECH         equ	309	;# 
 16875   000136                     C1TRECU         equ	310	;# 
 16876   000137                     C1TRECT         equ	311	;# 
 16877   000138                     C1BDIAG0L       equ	312	;# 
 16878   000139                     C1BDIAG0H       equ	313	;# 
 16879   00013C                     C1BDIAG1L       equ	316	;# 
 16880   00013D                     C1BDIAG1H       equ	317	;# 
 16881   00013E                     C1BDIAG1U       equ	318	;# 
 16882   00013F                     C1BDIAG1T       equ	319	;# 
 16883   000140                     C1TEFCONL       equ	320	;# 
 16884   000141                     C1TEFCONH       equ	321	;# 
 16885   000142                     C1TEFCONU       equ	322	;# 
 16886   000143                     C1TEFCONT       equ	323	;# 
 16887   000144                     C1TEFSTAL       equ	324	;# 
 16888   000145                     C1TEFSTAH       equ	325	;# 
 16889   000146                     C1TEFSTAU       equ	326	;# 
 16890   000147                     C1TEFSTAT       equ	327	;# 
 16891   000148                     C1TEFUA         equ	328	;# 
 16892   000148                     C1TEFUAL        equ	328	;# 
 16893   000149                     C1TEFUAH        equ	329	;# 
 16894   00014A                     C1TEFUAU        equ	330	;# 
 16895   00014B                     C1TEFUAT        equ	331	;# 
 16896   00014C                     C1FIFOBA        equ	332	;# 
 16897   00014C                     C1FIFOBAL       equ	332	;# 
 16898   00014D                     C1FIFOBAH       equ	333	;# 
 16899   00014E                     C1FIFOBAU       equ	334	;# 
 16900   00014F                     C1FIFOBAT       equ	335	;# 
 16901   000150                     C1TXQCONL       equ	336	;# 
 16902   000151                     C1TXQCONH       equ	337	;# 
 16903   000152                     C1TXQCONU       equ	338	;# 
 16904   000153                     C1TXQCONT       equ	339	;# 
 16905   000154                     C1TXQSTAL       equ	340	;# 
 16906   000155                     C1TXQSTAH       equ	341	;# 
 16907   000156                     C1TXQSTAU       equ	342	;# 
 16908   000157                     C1TXQSTAT       equ	343	;# 
 16909   000158                     C1TXQUA         equ	344	;# 
 16910   000158                     C1TXQUAL        equ	344	;# 
 16911   000159                     C1TXQUAH        equ	345	;# 
 16912   00015A                     C1TXQUAU        equ	346	;# 
 16913   00015B                     C1TXQUAT        equ	347	;# 
 16914   00015C                     C1FIFOCON1      equ	348	;# 
 16915   00015C                     C1FIFOCON1L     equ	348	;# 
 16916   00015D                     C1FIFOCON1H     equ	349	;# 
 16917   00015E                     C1FIFOCON1U     equ	350	;# 
 16918   00015F                     C1FIFOCON1T     equ	351	;# 
 16919   000160                     C1FIFOSTA1      equ	352	;# 
 16920   000160                     C1FIFOSTA1L     equ	352	;# 
 16921   000161                     C1FIFOSTA1H     equ	353	;# 
 16922   000162                     C1FIFOSTA1U     equ	354	;# 
 16923   000163                     C1FIFOSTA1T     equ	355	;# 
 16924   000164                     C1FIFOUA1       equ	356	;# 
 16925   000164                     C1FIFOUA1L      equ	356	;# 
 16926   000165                     C1FIFOUA1H      equ	357	;# 
 16927   000166                     C1FIFOUA1U      equ	358	;# 
 16928   000167                     C1FIFOUA1T      equ	359	;# 
 16929   000168                     C1FIFOCON2      equ	360	;# 
 16930   000168                     C1FIFOCON2L     equ	360	;# 
 16931   000169                     C1FIFOCON2H     equ	361	;# 
 16932   00016A                     C1FIFOCON2U     equ	362	;# 
 16933   00016B                     C1FIFOCON2T     equ	363	;# 
 16934   00016C                     C1FIFOSTA2      equ	364	;# 
 16935   00016C                     C1FIFOSTA2L     equ	364	;# 
 16936   00016D                     C1FIFOSTA2H     equ	365	;# 
 16937   00016E                     C1FIFOSTA2U     equ	366	;# 
 16938   00016F                     C1FIFOSTA2T     equ	367	;# 
 16939   000170                     C1FIFOUA2       equ	368	;# 
 16940   000170                     C1FIFOUA2L      equ	368	;# 
 16941   000171                     C1FIFOUA2H      equ	369	;# 
 16942   000172                     C1FIFOUA2U      equ	370	;# 
 16943   000173                     C1FIFOUA2T      equ	371	;# 
 16944   000174                     C1FIFOCON3      equ	372	;# 
 16945   000174                     C1FIFOCON3L     equ	372	;# 
 16946   000175                     C1FIFOCON3H     equ	373	;# 
 16947   000176                     C1FIFOCON3U     equ	374	;# 
 16948   000177                     C1FIFOCON3T     equ	375	;# 
 16949   000178                     C1FIFOSTA3      equ	376	;# 
 16950   000178                     C1FIFOSTA3L     equ	376	;# 
 16951   000179                     C1FIFOSTA3H     equ	377	;# 
 16952   00017A                     C1FIFOSTA3U     equ	378	;# 
 16953   00017B                     C1FIFOSTA3T     equ	379	;# 
 16954   00017C                     C1FIFOUA3       equ	380	;# 
 16955   00017C                     C1FIFOUA3L      equ	380	;# 
 16956   00017D                     C1FIFOUA3H      equ	381	;# 
 16957   00017E                     C1FIFOUA3U      equ	382	;# 
 16958   00017F                     C1FIFOUA3T      equ	383	;# 
 16959   000180                     C1FLTCON0L      equ	384	;# 
 16960   000181                     C1FLTCON0H      equ	385	;# 
 16961   000182                     C1FLTCON0U      equ	386	;# 
 16962   000183                     C1FLTCON0T      equ	387	;# 
 16963   000184                     C1FLTCON1L      equ	388	;# 
 16964   000185                     C1FLTCON1H      equ	389	;# 
 16965   000186                     C1FLTCON1U      equ	390	;# 
 16966   000187                     C1FLTCON1T      equ	391	;# 
 16967   000188                     C1FLTCON2L      equ	392	;# 
 16968   000189                     C1FLTCON2H      equ	393	;# 
 16969   00018A                     C1FLTCON2U      equ	394	;# 
 16970   00018B                     C1FLTCON2T      equ	395	;# 
 16971   00018C                     C1FLTOBJ0       equ	396	;# 
 16972   00018C                     C1FLTOBJ0L      equ	396	;# 
 16973   00018D                     C1FLTOBJ0H      equ	397	;# 
 16974   00018E                     C1FLTOBJ0U      equ	398	;# 
 16975   00018F                     C1FLTOBJ0T      equ	399	;# 
 16976   000190                     C1MASK0         equ	400	;# 
 16977   000190                     C1MASK0L        equ	400	;# 
 16978   000191                     C1MASK0H        equ	401	;# 
 16979   000192                     C1MASK0U        equ	402	;# 
 16980   000193                     C1MASK0T        equ	403	;# 
 16981   000194                     C1FLTOBJ1       equ	404	;# 
 16982   000194                     C1FLTOBJ1L      equ	404	;# 
 16983   000195                     C1FLTOBJ1H      equ	405	;# 
 16984   000196                     C1FLTOBJ1U      equ	406	;# 
 16985   000197                     C1FLTOBJ1T      equ	407	;# 
 16986   000198                     C1MASK1         equ	408	;# 
 16987   000198                     C1MASK1L        equ	408	;# 
 16988   000199                     C1MASK1H        equ	409	;# 
 16989   00019A                     C1MASK1U        equ	410	;# 
 16990   00019B                     C1MASK1T        equ	411	;# 
 16991   00019C                     C1FLTOBJ2       equ	412	;# 
 16992   00019C                     C1FLTOBJ2L      equ	412	;# 
 16993   00019D                     C1FLTOBJ2H      equ	413	;# 
 16994   00019E                     C1FLTOBJ2U      equ	414	;# 
 16995   00019F                     C1FLTOBJ2T      equ	415	;# 
 16996   0001A0                     C1MASK2         equ	416	;# 
 16997   0001A0                     C1MASK2L        equ	416	;# 
 16998   0001A1                     C1MASK2H        equ	417	;# 
 16999   0001A2                     C1MASK2U        equ	418	;# 
 17000   0001A3                     C1MASK2T        equ	419	;# 
 17001   0001A4                     C1FLTOBJ3       equ	420	;# 
 17002   0001A4                     C1FLTOBJ3L      equ	420	;# 
 17003   0001A5                     C1FLTOBJ3H      equ	421	;# 
 17004   0001A6                     C1FLTOBJ3U      equ	422	;# 
 17005   0001A7                     C1FLTOBJ3T      equ	423	;# 
 17006   0001A8                     C1MASK3         equ	424	;# 
 17007   0001A8                     C1MASK3L        equ	424	;# 
 17008   0001A9                     C1MASK3H        equ	425	;# 
 17009   0001AA                     C1MASK3U        equ	426	;# 
 17010   0001AB                     C1MASK3T        equ	427	;# 
 17011   0001AC                     C1FLTOBJ4       equ	428	;# 
 17012   0001AC                     C1FLTOBJ4L      equ	428	;# 
 17013   0001AD                     C1FLTOBJ4H      equ	429	;# 
 17014   0001AE                     C1FLTOBJ4U      equ	430	;# 
 17015   0001AF                     C1FLTOBJ4T      equ	431	;# 
 17016   0001B0                     C1MASK4         equ	432	;# 
 17017   0001B0                     C1MASK4L        equ	432	;# 
 17018   0001B1                     C1MASK4H        equ	433	;# 
 17019   0001B2                     C1MASK4U        equ	434	;# 
 17020   0001B3                     C1MASK4T        equ	435	;# 
 17021   0001B4                     C1FLTOBJ5       equ	436	;# 
 17022   0001B4                     C1FLTOBJ5L      equ	436	;# 
 17023   0001B5                     C1FLTOBJ5H      equ	437	;# 
 17024   0001B6                     C1FLTOBJ5U      equ	438	;# 
 17025   0001B7                     C1FLTOBJ5T      equ	439	;# 
 17026   0001B8                     C1MASK5         equ	440	;# 
 17027   0001B8                     C1MASK5L        equ	440	;# 
 17028   0001B9                     C1MASK5H        equ	441	;# 
 17029   0001BA                     C1MASK5U        equ	442	;# 
 17030   0001BB                     C1MASK5T        equ	443	;# 
 17031   0001BC                     C1FLTOBJ6       equ	444	;# 
 17032   0001BC                     C1FLTOBJ6L      equ	444	;# 
 17033   0001BD                     C1FLTOBJ6H      equ	445	;# 
 17034   0001BE                     C1FLTOBJ6U      equ	446	;# 
 17035   0001BF                     C1FLTOBJ6T      equ	447	;# 
 17036   0001C0                     C1MASK6         equ	448	;# 
 17037   0001C0                     C1MASK6L        equ	448	;# 
 17038   0001C1                     C1MASK6H        equ	449	;# 
 17039   0001C2                     C1MASK6U        equ	450	;# 
 17040   0001C3                     C1MASK6T        equ	451	;# 
 17041   0001C4                     C1FLTOBJ7       equ	452	;# 
 17042   0001C4                     C1FLTOBJ7L      equ	452	;# 
 17043   0001C5                     C1FLTOBJ7H      equ	453	;# 
 17044   0001C6                     C1FLTOBJ7U      equ	454	;# 
 17045   0001C7                     C1FLTOBJ7T      equ	455	;# 
 17046   0001C8                     C1MASK7         equ	456	;# 
 17047   0001C8                     C1MASK7L        equ	456	;# 
 17048   0001C9                     C1MASK7H        equ	457	;# 
 17049   0001CA                     C1MASK7U        equ	458	;# 
 17050   0001CB                     C1MASK7T        equ	459	;# 
 17051   0001CC                     C1FLTOBJ8       equ	460	;# 
 17052   0001CC                     C1FLTOBJ8L      equ	460	;# 
 17053   0001CD                     C1FLTOBJ8H      equ	461	;# 
 17054   0001CE                     C1FLTOBJ8U      equ	462	;# 
 17055   0001CF                     C1FLTOBJ8T      equ	463	;# 
 17056   0001D0                     C1MASK8         equ	464	;# 
 17057   0001D0                     C1MASK8L        equ	464	;# 
 17058   0001D1                     C1MASK8H        equ	465	;# 
 17059   0001D2                     C1MASK8U        equ	466	;# 
 17060   0001D3                     C1MASK8T        equ	467	;# 
 17061   0001D4                     C1FLTOBJ9       equ	468	;# 
 17062   0001D4                     C1FLTOBJ9L      equ	468	;# 
 17063   0001D5                     C1FLTOBJ9H      equ	469	;# 
 17064   0001D6                     C1FLTOBJ9U      equ	470	;# 
 17065   0001D7                     C1FLTOBJ9T      equ	471	;# 
 17066   0001D8                     C1MASK9         equ	472	;# 
 17067   0001D8                     C1MASK9L        equ	472	;# 
 17068   0001D9                     C1MASK9H        equ	473	;# 
 17069   0001DA                     C1MASK9U        equ	474	;# 
 17070   0001DB                     C1MASK9T        equ	475	;# 
 17071   0001DC                     C1FLTOBJ10      equ	476	;# 
 17072   0001DC                     C1FLTOBJ10L     equ	476	;# 
 17073   0001DD                     C1FLTOBJ10H     equ	477	;# 
 17074   0001DE                     C1FLTOBJ10U     equ	478	;# 
 17075   0001DF                     C1FLTOBJ10T     equ	479	;# 
 17076   0001E0                     C1MASK10        equ	480	;# 
 17077   0001E0                     C1MASK10L       equ	480	;# 
 17078   0001E1                     C1MASK10H       equ	481	;# 
 17079   0001E2                     C1MASK10U       equ	482	;# 
 17080   0001E3                     C1MASK10T       equ	483	;# 
 17081   0001E4                     C1FLTOBJ11      equ	484	;# 
 17082   0001E4                     C1FLTOBJ11L     equ	484	;# 
 17083   0001E5                     C1FLTOBJ11H     equ	485	;# 
 17084   0001E6                     C1FLTOBJ11U     equ	486	;# 
 17085   0001E7                     C1FLTOBJ11T     equ	487	;# 
 17086   0001E8                     C1MASK11        equ	488	;# 
 17087   0001E8                     C1MASK11L       equ	488	;# 
 17088   0001E9                     C1MASK11H       equ	489	;# 
 17089   0001EA                     C1MASK11U       equ	490	;# 
 17090   0001EB                     C1MASK11T       equ	491	;# 
 17091   000200                     PPSLOCK         equ	512	;# 
 17092   000201                     RA0PPS          equ	513	;# 
 17093   000202                     RA1PPS          equ	514	;# 
 17094   000203                     RA2PPS          equ	515	;# 
 17095   000204                     RA3PPS          equ	516	;# 
 17096   000205                     RA4PPS          equ	517	;# 
 17097   000206                     RA5PPS          equ	518	;# 
 17098   000207                     RA6PPS          equ	519	;# 
 17099   000208                     RA7PPS          equ	520	;# 
 17100   000209                     RB0PPS          equ	521	;# 
 17101   00020A                     RB1PPS          equ	522	;# 
 17102   00020B                     RB2PPS          equ	523	;# 
 17103   00020C                     RB3PPS          equ	524	;# 
 17104   00020D                     RB4PPS          equ	525	;# 
 17105   00020E                     RB5PPS          equ	526	;# 
 17106   00020F                     RB6PPS          equ	527	;# 
 17107   000210                     RB7PPS          equ	528	;# 
 17108   000211                     RC0PPS          equ	529	;# 
 17109   000212                     RC1PPS          equ	530	;# 
 17110   000213                     RC2PPS          equ	531	;# 
 17111   000214                     RC3PPS          equ	532	;# 
 17112   000215                     RC4PPS          equ	533	;# 
 17113   000216                     RC5PPS          equ	534	;# 
 17114   000217                     RC6PPS          equ	535	;# 
 17115   000218                     RC7PPS          equ	536	;# 
 17116   00023D                     CANRXPPS        equ	573	;# 
 17117   00023E                     INT0PPS         equ	574	;# 
 17118   00023F                     INT1PPS         equ	575	;# 
 17119   000240                     INT2PPS         equ	576	;# 
 17120   000241                     T0CKIPPS        equ	577	;# 
 17121   000242                     T1CKIPPS        equ	578	;# 
 17122   000243                     T1GPPS          equ	579	;# 
 17123   000244                     T3CKIPPS        equ	580	;# 
 17124   000245                     T3GPPS          equ	581	;# 
 17125   000246                     T5CKIPPS        equ	582	;# 
 17126   000247                     T5GPPS          equ	583	;# 
 17127   000248                     T2INPPS         equ	584	;# 
 17128   000249                     T4INPPS         equ	585	;# 
 17129   00024A                     T6INPPS         equ	586	;# 
 17130   00024B                     TUIN0PPS        equ	587	;# 
 17131   00024C                     TUIN1PPS        equ	588	;# 
 17132   00024F                     CCP1PPS         equ	591	;# 
 17133   000250                     CCP2PPS         equ	592	;# 
 17134   000251                     CCP3PPS         equ	593	;# 
 17135   000253                     PWM1ERSPPS      equ	595	;# 
 17136   000254                     PWM2ERSPPS      equ	596	;# 
 17137   000255                     PWM3ERSPPS      equ	597	;# 
 17138   000256                     PWM4ERSPPS      equ	598	;# 
 17139   000257                     PWMIN0PPS       equ	599	;# 
 17140   000258                     PWMIN1PPS       equ	600	;# 
 17141   000259                     SMT1WINPPS      equ	601	;# 
 17142   00025A                     SMT1SIGPPS      equ	602	;# 
 17143   00025B                     CWG1PPS         equ	603	;# 
 17144   00025B                     CWG1INPPS       equ	603	;# 
 17145   00025C                     CWG2PPS         equ	604	;# 
 17146   00025C                     CWG2INPPS       equ	604	;# 
 17147   00025D                     CWG3PPS         equ	605	;# 
 17148   00025D                     CWG3INPPS       equ	605	;# 
 17149   00025E                     MD1CARLPPS      equ	606	;# 
 17150   00025E                     MDCARLPPS       equ	606	;# 
 17151   00025F                     MD1CARHPPS      equ	607	;# 
 17152   00025F                     MDCARHPPS       equ	607	;# 
 17153   000260                     MD1SRCPPS       equ	608	;# 
 17154   000260                     MDSRCPPS        equ	608	;# 
 17155   000261                     CLCIN0PPS       equ	609	;# 
 17156   000262                     CLCIN1PPS       equ	610	;# 
 17157   000263                     CLCIN2PPS       equ	611	;# 
 17158   000264                     CLCIN3PPS       equ	612	;# 
 17159   000265                     CLCIN4PPS       equ	613	;# 
 17160   000266                     CLCIN5PPS       equ	614	;# 
 17161   000267                     CLCIN6PPS       equ	615	;# 
 17162   000268                     CLCIN7PPS       equ	616	;# 
 17163   000269                     ADACTPPS        equ	617	;# 
 17164   00026A                     SPI1SCKPPS      equ	618	;# 
 17165   00026B                     SPI1SDIPPS      equ	619	;# 
 17166   00026C                     SPI1SSPPS       equ	620	;# 
 17167   00026D                     SPI2SCKPPS      equ	621	;# 
 17168   00026E                     SPI2SDIPPS      equ	622	;# 
 17169   00026F                     SPI2SSPPS       equ	623	;# 
 17170   000270                     I2C1SDAPPS      equ	624	;# 
 17171   000271                     I2C1SCLPPS      equ	625	;# 
 17172   000272                     U1RXPPS         equ	626	;# 
 17173   000273                     U1CTSPPS        equ	627	;# 
 17174   000274                     U2RXPPS         equ	628	;# 
 17175   000275                     U2CTSPPS        equ	629	;# 
 17176   000276                     U3RXPPS         equ	630	;# 
 17177   000277                     U3CTSPPS        equ	631	;# 
 17178   000278                     U4RXPPS         equ	632	;# 
 17179   000279                     U4CTSPPS        equ	633	;# 
 17180   00027A                     U5RXPPS         equ	634	;# 
 17181   00027B                     U5CTSPPS        equ	635	;# 
 17182   000286                     RC4I2C          equ	646	;# 
 17183   000287                     RC3I2C          equ	647	;# 
 17184   000288                     RB2I2C          equ	648	;# 
 17185   000289                     RB1I2C          equ	649	;# 
 17186   00028A                     I2C1RXB         equ	650	;# 
 17187   00028B                     I2C1TXB         equ	651	;# 
 17188   00028C                     I2C1CNTL        equ	652	;# 
 17189   00028D                     I2C1CNTH        equ	653	;# 
 17190   00028E                     I2C1ADB0        equ	654	;# 
 17191   00028F                     I2C1ADB1        equ	655	;# 
 17192   000290                     I2C1ADR0        equ	656	;# 
 17193   000291                     I2C1ADR1        equ	657	;# 
 17194   000292                     I2C1ADR2        equ	658	;# 
 17195   000293                     I2C1ADR3        equ	659	;# 
 17196   000294                     I2C1CON0        equ	660	;# 
 17197   000295                     I2C1CON1        equ	661	;# 
 17198   000296                     I2C1CON2        equ	662	;# 
 17199   000297                     I2C1ERR         equ	663	;# 
 17200   000298                     I2C1STAT0       equ	664	;# 
 17201   000299                     I2C1STAT1       equ	665	;# 
 17202   00029A                     I2C1PIR         equ	666	;# 
 17203   00029B                     I2C1PIE         equ	667	;# 
 17204   00029C                     I2C1BTO         equ	668	;# 
 17205   00029D                     I2C1BAUD        equ	669	;# 
 17206   00029E                     I2C1CLK         equ	670	;# 
 17207   00029F                     I2C1BTOC        equ	671	;# 
 17208   0002A1                     U1RXB           equ	673	;# 
 17209   0002A1                     U1RXBL          equ	673	;# 
 17210   0002A2                     U1RXCHK         equ	674	;# 
 17211   0002A3                     U1TXB           equ	675	;# 
 17212   0002A3                     U1TXBL          equ	675	;# 
 17213   0002A4                     U1TXCHK         equ	676	;# 
 17214   0002A5                     U1P1            equ	677	;# 
 17215   0002A5                     U1P1L           equ	677	;# 
 17216   0002A6                     U1P1H           equ	678	;# 
 17217   0002A7                     U1P2            equ	679	;# 
 17218   0002A7                     U1P2L           equ	679	;# 
 17219   0002A8                     U1P2H           equ	680	;# 
 17220   0002A9                     U1P3            equ	681	;# 
 17221   0002A9                     U1P3L           equ	681	;# 
 17222   0002AA                     U1P3H           equ	682	;# 
 17223   0002AB                     U1CON0          equ	683	;# 
 17224   0002AC                     U1CON1          equ	684	;# 
 17225   0002AD                     U1CON2          equ	685	;# 
 17226   0002AE                     U1BRG           equ	686	;# 
 17227   0002AE                     U1BRGL          equ	686	;# 
 17228   0002AF                     U1BRGH          equ	687	;# 
 17229   0002B0                     U1FIFO          equ	688	;# 
 17230   0002B1                     U1UIR           equ	689	;# 
 17231   0002B2                     U1ERRIR         equ	690	;# 
 17232   0002B3                     U1ERRIE         equ	691	;# 
 17233   0002B4                     U2RXB           equ	692	;# 
 17234   0002B4                     U2RXBL          equ	692	;# 
 17235   0002B5                     U2RXCHK         equ	693	;# 
 17236   0002B6                     U2TXB           equ	694	;# 
 17237   0002B6                     U2TXBL          equ	694	;# 
 17238   0002B7                     U2TXCHK         equ	695	;# 
 17239   0002B8                     U2P1            equ	696	;# 
 17240   0002B8                     U2P1L           equ	696	;# 
 17241   0002B9                     U2P1H           equ	697	;# 
 17242   0002BA                     U2P2            equ	698	;# 
 17243   0002BA                     U2P2L           equ	698	;# 
 17244   0002BB                     U2P2H           equ	699	;# 
 17245   0002BC                     U2P3            equ	700	;# 
 17246   0002BC                     U2P3L           equ	700	;# 
 17247   0002BD                     U2P3H           equ	701	;# 
 17248   0002BE                     U2CON0          equ	702	;# 
 17249   0002BF                     U2CON1          equ	703	;# 
 17250   0002C0                     U2CON2          equ	704	;# 
 17251   0002C1                     U2BRG           equ	705	;# 
 17252   0002C1                     U2BRGL          equ	705	;# 
 17253   0002C2                     U2BRGH          equ	706	;# 
 17254   0002C3                     U2FIFO          equ	707	;# 
 17255   0002C4                     U2UIR           equ	708	;# 
 17256   0002C5                     U2ERRIR         equ	709	;# 
 17257   0002C6                     U2ERRIE         equ	710	;# 
 17258   0002C7                     U3RXB           equ	711	;# 
 17259   0002C7                     U3RXBL          equ	711	;# 
 17260   0002C9                     U3TXB           equ	713	;# 
 17261   0002C9                     U3TXBL          equ	713	;# 
 17262   0002CB                     U3P1            equ	715	;# 
 17263   0002CB                     U3P1L           equ	715	;# 
 17264   0002CD                     U3P2            equ	717	;# 
 17265   0002CD                     U3P2L           equ	717	;# 
 17266   0002CF                     U3P3            equ	719	;# 
 17267   0002CF                     U3P3L           equ	719	;# 
 17268   0002D1                     U3CON0          equ	721	;# 
 17269   0002D2                     U3CON1          equ	722	;# 
 17270   0002D3                     U3CON2          equ	723	;# 
 17271   0002D4                     U3BRG           equ	724	;# 
 17272   0002D4                     U3BRGL          equ	724	;# 
 17273   0002D5                     U3BRGH          equ	725	;# 
 17274   0002D6                     U3FIFO          equ	726	;# 
 17275   0002D7                     U3UIR           equ	727	;# 
 17276   0002D8                     U3ERRIR         equ	728	;# 
 17277   0002D9                     U3ERRIE         equ	729	;# 
 17278   0002DA                     U4RXB           equ	730	;# 
 17279   0002DA                     U4RXBL          equ	730	;# 
 17280   0002DC                     U4TXB           equ	732	;# 
 17281   0002DC                     U4TXBL          equ	732	;# 
 17282   0002DE                     U4P1            equ	734	;# 
 17283   0002DE                     U4P1L           equ	734	;# 
 17284   0002E0                     U4P2            equ	736	;# 
 17285   0002E0                     U4P2L           equ	736	;# 
 17286   0002E2                     U4P3            equ	738	;# 
 17287   0002E2                     U4P3L           equ	738	;# 
 17288   0002E4                     U4CON0          equ	740	;# 
 17289   0002E5                     U4CON1          equ	741	;# 
 17290   0002E6                     U4CON2          equ	742	;# 
 17291   0002E7                     U4BRG           equ	743	;# 
 17292   0002E7                     U4BRGL          equ	743	;# 
 17293   0002E8                     U4BRGH          equ	744	;# 
 17294   0002E9                     U4FIFO          equ	745	;# 
 17295   0002EA                     U4UIR           equ	746	;# 
 17296   0002EB                     U4ERRIR         equ	747	;# 
 17297   0002EC                     U4ERRIE         equ	748	;# 
 17298   0002ED                     U5RXB           equ	749	;# 
 17299   0002ED                     U5RXBL          equ	749	;# 
 17300   0002EF                     U5TXB           equ	751	;# 
 17301   0002EF                     U5TXBL          equ	751	;# 
 17302   0002F1                     U5P1            equ	753	;# 
 17303   0002F1                     U5P1L           equ	753	;# 
 17304   0002F3                     U5P2            equ	755	;# 
 17305   0002F3                     U5P2L           equ	755	;# 
 17306   0002F5                     U5P3            equ	757	;# 
 17307   0002F5                     U5P3L           equ	757	;# 
 17308   0002F7                     U5CON0          equ	759	;# 
 17309   0002F8                     U5CON1          equ	760	;# 
 17310   0002F9                     U5CON2          equ	761	;# 
 17311   0002FA                     U5BRG           equ	762	;# 
 17312   0002FA                     U5BRGL          equ	762	;# 
 17313   0002FB                     U5BRGH          equ	763	;# 
 17314   0002FC                     U5FIFO          equ	764	;# 
 17315   0002FD                     U5UIR           equ	765	;# 
 17316   0002FE                     U5ERRIR         equ	766	;# 
 17317   0002FF                     U5ERRIE         equ	767	;# 
 17318   000300                     SMT1TMR         equ	768	;# 
 17319   000300                     SMT1TMRL        equ	768	;# 
 17320   000301                     SMT1TMRH        equ	769	;# 
 17321   000302                     SMT1TMRU        equ	770	;# 
 17322   000303                     SMT1CPR         equ	771	;# 
 17323   000303                     SMT1CPRL        equ	771	;# 
 17324   000304                     SMT1CPRH        equ	772	;# 
 17325   000305                     SMT1CPRU        equ	773	;# 
 17326   000306                     SMT1CPW         equ	774	;# 
 17327   000306                     SMT1CPWL        equ	774	;# 
 17328   000307                     SMT1CPWH        equ	775	;# 
 17329   000308                     SMT1CPWU        equ	776	;# 
 17330   000309                     SMT1PR          equ	777	;# 
 17331   000309                     SMT1PRL         equ	777	;# 
 17332   00030A                     SMT1PRH         equ	778	;# 
 17333   00030B                     SMT1PRU         equ	779	;# 
 17334   00030C                     SMT1CON0        equ	780	;# 
 17335   00030D                     SMT1CON1        equ	781	;# 
 17336   00030E                     SMT1STAT        equ	782	;# 
 17337   00030F                     SMT1CLK         equ	783	;# 
 17338   000310                     SMT1SIG         equ	784	;# 
 17339   000311                     SMT1WIN         equ	785	;# 
 17340   000318                     TMR0L           equ	792	;# 
 17341   000318                     TMR0            equ	792	;# 
 17342   000319                     TMR0H           equ	793	;# 
 17343   000319                     PR0             equ	793	;# 
 17344   00031A                     T0CON0          equ	794	;# 
 17345   00031B                     T0CON1          equ	795	;# 
 17346   00031C                     TMR1            equ	796	;# 
 17347   00031C                     TMR1L           equ	796	;# 
 17348   00031D                     TMR1H           equ	797	;# 
 17349   00031E                     T1CON           equ	798	;# 
 17350   00031E                     TMR1CON         equ	798	;# 
 17351   00031F                     T1GCON          equ	799	;# 
 17352   00031F                     TMR1GCON        equ	799	;# 
 17353   000320                     T1GATE          equ	800	;# 
 17354   000320                     TMR1GATE        equ	800	;# 
 17355   000321                     T1CLK           equ	801	;# 
 17356   000321                     TMR1CLK         equ	801	;# 
 17357   000321                     PR1             equ	801	;# 
 17358   000322                     T2TMR           equ	802	;# 
 17359   000322                     TMR2            equ	802	;# 
 17360   000323                     T2PR            equ	803	;# 
 17361   000323                     PR2             equ	803	;# 
 17362   000324                     T2CON           equ	804	;# 
 17363   000325                     T2HLT           equ	805	;# 
 17364   000326                     T2CLKCON        equ	806	;# 
 17365   000326                     T2CLK           equ	806	;# 
 17366   000327                     T2RST           equ	807	;# 
 17367   000328                     TMR3            equ	808	;# 
 17368   000328                     TMR3L           equ	808	;# 
 17369   000329                     TMR3H           equ	809	;# 
 17370   00032A                     T3CON           equ	810	;# 
 17371   00032A                     TMR3CON         equ	810	;# 
 17372   00032B                     T3GCON          equ	811	;# 
 17373   00032B                     TMR3GCON        equ	811	;# 
 17374   00032C                     T3GATE          equ	812	;# 
 17375   00032C                     TMR3GATE        equ	812	;# 
 17376   00032D                     T3CLK           equ	813	;# 
 17377   00032D                     TMR3CLK         equ	813	;# 
 17378   00032D                     PR3             equ	813	;# 
 17379   00032E                     T4TMR           equ	814	;# 
 17380   00032E                     TMR4            equ	814	;# 
 17381   00032F                     T4PR            equ	815	;# 
 17382   00032F                     PR4             equ	815	;# 
 17383   000330                     T4CON           equ	816	;# 
 17384   000331                     T4HLT           equ	817	;# 
 17385   000332                     T4CLKCON        equ	818	;# 
 17386   000332                     T4CLK           equ	818	;# 
 17387   000333                     T4RST           equ	819	;# 
 17388   000334                     TMR5            equ	820	;# 
 17389   000334                     TMR5L           equ	820	;# 
 17390   000335                     TMR5H           equ	821	;# 
 17391   000336                     T5CON           equ	822	;# 
 17392   000336                     TMR5CON         equ	822	;# 
 17393   000337                     T5GCON          equ	823	;# 
 17394   000337                     TMR5GCON        equ	823	;# 
 17395   000338                     T5GATE          equ	824	;# 
 17396   000338                     TMR5GATE        equ	824	;# 
 17397   000339                     T5CLK           equ	825	;# 
 17398   000339                     TMR5CLK         equ	825	;# 
 17399   000339                     PR5             equ	825	;# 
 17400   00033A                     T6TMR           equ	826	;# 
 17401   00033A                     TMR6            equ	826	;# 
 17402   00033B                     T6PR            equ	827	;# 
 17403   00033B                     PR6             equ	827	;# 
 17404   00033C                     T6CON           equ	828	;# 
 17405   00033D                     T6HLT           equ	829	;# 
 17406   00033E                     T6CLKCON        equ	830	;# 
 17407   00033E                     T6CLK           equ	830	;# 
 17408   00033F                     T6RST           equ	831	;# 
 17409   000340                     CCPR1           equ	832	;# 
 17410   000340                     CCPR1L          equ	832	;# 
 17411   000341                     CCPR1H          equ	833	;# 
 17412   000342                     CCP1CON         equ	834	;# 
 17413   000343                     CCP1CAP         equ	835	;# 
 17414   000344                     CCPR2           equ	836	;# 
 17415   000344                     CCPR2L          equ	836	;# 
 17416   000345                     CCPR2H          equ	837	;# 
 17417   000346                     CCP2CON         equ	838	;# 
 17418   000347                     CCP2CAP         equ	839	;# 
 17419   000348                     CCPR3           equ	840	;# 
 17420   000348                     CCPR3L          equ	840	;# 
 17421   000349                     CCPR3H          equ	841	;# 
 17422   00034A                     CCP3CON         equ	842	;# 
 17423   00034B                     CCP3CAP         equ	843	;# 
 17424   00034C                     CCPTMRS0        equ	844	;# 
 17425   00034F                     CRCDATA         equ	847	;# 
 17426   00034F                     CRCDATAL        equ	847	;# 
 17427   000350                     CRCDATAH        equ	848	;# 
 17428   000351                     CRCDATAU        equ	849	;# 
 17429   000352                     CRCDATAT        equ	850	;# 
 17430   000353                     CRCOUT          equ	851	;# 
 17431   000353                     CRCSHFT         equ	851	;# 
 17432   000353                     CRCXOR          equ	851	;# 
 17433   000353                     CRCOUTL         equ	851	;# 
 17434   000353                     CRCSHFTL        equ	851	;# 
 17435   000353                     CRCSHIFTL       equ	851	;# 
 17436   000353                     CRCXORL         equ	851	;# 
 17437   000354                     CRCOUTH         equ	852	;# 
 17438   000354                     CRCSHFTH        equ	852	;# 
 17439   000354                     CRCSHIFTH       equ	852	;# 
 17440   000354                     CRCXORH         equ	852	;# 
 17441   000355                     CRCOUTU         equ	853	;# 
 17442   000355                     CRCSHFTU        equ	853	;# 
 17443   000355                     CRCSHIFTU       equ	853	;# 
 17444   000355                     CRCXORU         equ	853	;# 
 17445   000356                     CRCOUTT         equ	854	;# 
 17446   000356                     CRCSHFTT        equ	854	;# 
 17447   000356                     CRCSHIFTT       equ	854	;# 
 17448   000356                     CRCXORT         equ	854	;# 
 17449   000357                     CRCCON0         equ	855	;# 
 17450   000358                     CRCCON1         equ	856	;# 
 17451   000359                     CRCCON2         equ	857	;# 
 17452   00035A                     SCANLADR        equ	858	;# 
 17453   00035A                     SCANLADRL       equ	858	;# 
 17454   00035B                     SCANLADRH       equ	859	;# 
 17455   00035C                     SCANLADRU       equ	860	;# 
 17456   00035D                     SCANHADR        equ	861	;# 
 17457   00035D                     SCANHADRL       equ	861	;# 
 17458   00035E                     SCANHADRH       equ	862	;# 
 17459   00035F                     SCANHADRU       equ	863	;# 
 17460   000360                     SCANCON0        equ	864	;# 
 17461   000361                     SCANTRIG        equ	865	;# 
 17462   000362                     IPR0            equ	866	;# 
 17463   000363                     IPR1            equ	867	;# 
 17464   000364                     IPR2            equ	868	;# 
 17465   000365                     IPR3            equ	869	;# 
 17466   000366                     IPR4            equ	870	;# 
 17467   000367                     IPR5            equ	871	;# 
 17468   000368                     IPR6            equ	872	;# 
 17469   000369                     IPR7            equ	873	;# 
 17470   00036A                     IPR8            equ	874	;# 
 17471   00036B                     IPR9            equ	875	;# 
 17472   00036C                     IPR10           equ	876	;# 
 17473   00036D                     IPR11           equ	877	;# 
 17474   00036E                     IPR12           equ	878	;# 
 17475   00036F                     IPR13           equ	879	;# 
 17476   000370                     IPR14           equ	880	;# 
 17477   000371                     IPR15           equ	881	;# 
 17478   000373                     STATUS_CSHAD    equ	883	;# 
 17479   000374                     WREG_CSHAD      equ	884	;# 
 17480   000375                     BSR_CSHAD       equ	885	;# 
 17481   000376                     SHADCON         equ	886	;# 
 17482   000377                     STATUS_SHAD     equ	887	;# 
 17483   000378                     WREG_SHAD       equ	888	;# 
 17484   000379                     BSR_SHAD        equ	889	;# 
 17485   00037A                     PCLATH_SHAD     equ	890	;# 
 17486   00037B                     PCLATU_SHAD     equ	891	;# 
 17487   00037C                     FSR0SH          equ	892	;# 
 17488   00037C                     FSR0L_SHAD      equ	892	;# 
 17489   00037D                     FSR0H_SHAD      equ	893	;# 
 17490   00037E                     FSR1SH          equ	894	;# 
 17491   00037E                     FSR1L_SHAD      equ	894	;# 
 17492   00037F                     FSR1H_SHAD      equ	895	;# 
 17493   000380                     FSR2SH          equ	896	;# 
 17494   000380                     FSR2L_SHAD      equ	896	;# 
 17495   000381                     FSR2H_SHAD      equ	897	;# 
 17496   000382                     PRODSH          equ	898	;# 
 17497   000382                     PRODL_SHAD      equ	898	;# 
 17498   000383                     PRODH_SHAD      equ	899	;# 
 17499   000387                     TU16ACON0       equ	903	;# 
 17500   000388                     TU16ACON1       equ	904	;# 
 17501   000389                     TU16AHLT        equ	905	;# 
 17502   00038A                     TU16APS         equ	906	;# 
 17503   00038B                     TU16ATMR        equ	907	;# 
 17504   00038B                     TU16ACR         equ	907	;# 
 17505   00038B                     TU16ATMRL       equ	907	;# 
 17506   00038B                     TU16ACRL        equ	907	;# 
 17507   00038C                     TU16ATMRH       equ	908	;# 
 17508   00038C                     TU16ACRH        equ	908	;# 
 17509   00038D                     TU16APR         equ	909	;# 
 17510   00038D                     TU16APRL        equ	909	;# 
 17511   00038E                     TU16APRH        equ	910	;# 
 17512   00038F                     TU16ACLK        equ	911	;# 
 17513   000390                     TU16AERS        equ	912	;# 
 17514   000393                     TU16BCON0       equ	915	;# 
 17515   000394                     TU16BCON1       equ	916	;# 
 17516   000395                     TU16BHLT        equ	917	;# 
 17517   000396                     TU16BPS         equ	918	;# 
 17518   000397                     TU16BTMR        equ	919	;# 
 17519   000397                     TU16BCR         equ	919	;# 
 17520   000397                     TU16BTMRL       equ	919	;# 
 17521   000397                     TU16BCRL        equ	919	;# 
 17522   000398                     TU16BTMRH       equ	920	;# 
 17523   000398                     TU16BCRH        equ	920	;# 
 17524   000399                     TU16BPR         equ	921	;# 
 17525   000399                     TU16BPRL        equ	921	;# 
 17526   00039A                     TU16BPRH        equ	922	;# 
 17527   00039B                     TU16BCLK        equ	923	;# 
 17528   00039C                     TU16BERS        equ	924	;# 
 17529   0003BB                     TUCHAIN         equ	955	;# 
 17530   0003BC                     CWG1CLK         equ	956	;# 
 17531   0003BC                     CWG1CLKCON      equ	956	;# 
 17532   0003BD                     CWG1ISM         equ	957	;# 
 17533   0003BE                     CWG1DBR         equ	958	;# 
 17534   0003BF                     CWG1DBF         equ	959	;# 
 17535   0003C0                     CWG1CON0        equ	960	;# 
 17536   0003C1                     CWG1CON1        equ	961	;# 
 17537   0003C2                     CWG1AS0         equ	962	;# 
 17538   0003C3                     CWG1AS1         equ	963	;# 
 17539   0003C4                     CWG1STR         equ	964	;# 
 17540   0003C5                     CWG2CLK         equ	965	;# 
 17541   0003C5                     CWG2CLKCON      equ	965	;# 
 17542   0003C6                     CWG2ISM         equ	966	;# 
 17543   0003C7                     CWG2DBR         equ	967	;# 
 17544   0003C8                     CWG2DBF         equ	968	;# 
 17545   0003C9                     CWG2CON0        equ	969	;# 
 17546   0003CA                     CWG2CON1        equ	970	;# 
 17547   0003CB                     CWG2AS0         equ	971	;# 
 17548   0003CC                     CWG2AS1         equ	972	;# 
 17549   0003CD                     CWG2STR         equ	973	;# 
 17550   0003CE                     CWG3CLK         equ	974	;# 
 17551   0003CE                     CWG3CLKCON      equ	974	;# 
 17552   0003CF                     CWG3ISM         equ	975	;# 
 17553   0003D0                     CWG3DBR         equ	976	;# 
 17554   0003D1                     CWG3DBF         equ	977	;# 
 17555   0003D2                     CWG3CON0        equ	978	;# 
 17556   0003D3                     CWG3CON1        equ	979	;# 
 17557   0003D4                     CWG3AS0         equ	980	;# 
 17558   0003D5                     CWG3AS1         equ	981	;# 
 17559   0003D6                     CWG3STR         equ	982	;# 
 17560   0003D7                     FVRCON          equ	983	;# 
 17561   0003D8                     ADCPCON         equ	984	;# 
 17562   0003D8                     ADCP            equ	984	;# 
 17563   0003D9                     ADLTH           equ	985	;# 
 17564   0003D9                     ADLTHL          equ	985	;# 
 17565   0003DA                     ADLTHH          equ	986	;# 
 17566   0003DB                     ADUTH           equ	987	;# 
 17567   0003DB                     ADUTHL          equ	987	;# 
 17568   0003DC                     ADUTHH          equ	988	;# 
 17569   0003DD                     ADERR           equ	989	;# 
 17570   0003DD                     ADERRL          equ	989	;# 
 17571   0003DE                     ADERRH          equ	990	;# 
 17572   0003DF                     ADSTPT          equ	991	;# 
 17573   0003DF                     ADSTPTL         equ	991	;# 
 17574   0003E0                     ADSTPTH         equ	992	;# 
 17575   0003E1                     ADFLTR          equ	993	;# 
 17576   0003E1                     ADFLTRL         equ	993	;# 
 17577   0003E2                     ADFLTRH         equ	994	;# 
 17578   0003E3                     ADACC           equ	995	;# 
 17579   0003E3                     ADACCL          equ	995	;# 
 17580   0003E4                     ADACCH          equ	996	;# 
 17581   0003E5                     ADACCU          equ	997	;# 
 17582   0003E6                     ADCNT           equ	998	;# 
 17583   0003E7                     ADRPT           equ	999	;# 
 17584   0003E8                     ADPREV          equ	1000	;# 
 17585   0003E8                     ADPREVL         equ	1000	;# 
 17586   0003E9                     ADPREVH         equ	1001	;# 
 17587   0003EA                     ADRES           equ	1002	;# 
 17588   0003EA                     ADRESL          equ	1002	;# 
 17589   0003EB                     ADRESH          equ	1003	;# 
 17590   0003EC                     ADPCH           equ	1004	;# 
 17591   0003EE                     ADACQ           equ	1006	;# 
 17592   0003EE                     ADACQL          equ	1006	;# 
 17593   0003EF                     ADACQH          equ	1007	;# 
 17594   0003F0                     ADCAP           equ	1008	;# 
 17595   0003F1                     ADPRE           equ	1009	;# 
 17596   0003F1                     ADPREL          equ	1009	;# 
 17597   0003F2                     ADPREH          equ	1010	;# 
 17598   0003F3                     ADCON0          equ	1011	;# 
 17599   0003F4                     ADCON1          equ	1012	;# 
 17600   0003F5                     ADCON2          equ	1013	;# 
 17601   0003F6                     ADCON3          equ	1014	;# 
 17602   0003F7                     ADSTAT          equ	1015	;# 
 17603   0003F8                     ADREF           equ	1016	;# 
 17604   0003F9                     ADACT           equ	1017	;# 
 17605   0003FA                     ADCLK           equ	1018	;# 
 17606   0003FB                     ADCTX           equ	1019	;# 
 17607   0003FC                     ADCSEL1         equ	1020	;# 
 17608   0003FD                     ADCSEL2         equ	1021	;# 
 17609   0003FE                     ADCSEL3         equ	1022	;# 
 17610   0003FF                     ADCSEL4         equ	1023	;# 
 17611   000400                     ANSELA          equ	1024	;# 
 17612   000401                     WPUA            equ	1025	;# 
 17613   000402                     ODCONA          equ	1026	;# 
 17614   000403                     SLRCONA         equ	1027	;# 
 17615   000404                     INLVLA          equ	1028	;# 
 17616   000405                     IOCAP           equ	1029	;# 
 17617   000406                     IOCAN           equ	1030	;# 
 17618   000407                     IOCAF           equ	1031	;# 
 17619   000408                     ANSELB          equ	1032	;# 
 17620   000409                     WPUB            equ	1033	;# 
 17621   00040A                     ODCONB          equ	1034	;# 
 17622   00040B                     SLRCONB         equ	1035	;# 
 17623   00040C                     INLVLB          equ	1036	;# 
 17624   00040D                     IOCBP           equ	1037	;# 
 17625   00040E                     IOCBN           equ	1038	;# 
 17626   00040F                     IOCBF           equ	1039	;# 
 17627   000410                     ANSELC          equ	1040	;# 
 17628   000411                     WPUC            equ	1041	;# 
 17629   000412                     ODCONC          equ	1042	;# 
 17630   000413                     SLRCONC         equ	1043	;# 
 17631   000414                     INLVLC          equ	1044	;# 
 17632   000415                     IOCCP           equ	1045	;# 
 17633   000416                     IOCCN           equ	1046	;# 
 17634   000417                     IOCCF           equ	1047	;# 
 17635   000421                     WPUE            equ	1057	;# 
 17636   000424                     INLVLE          equ	1060	;# 
 17637   000425                     IOCEP           equ	1061	;# 
 17638   000426                     IOCEN           equ	1062	;# 
 17639   000427                     IOCEF           equ	1063	;# 
 17640   000440                     NCO1ACC         equ	1088	;# 
 17641   000440                     NCO1ACCL        equ	1088	;# 
 17642   000441                     NCO1ACCH        equ	1089	;# 
 17643   000442                     NCO1ACCU        equ	1090	;# 
 17644   000443                     NCO1INC         equ	1091	;# 
 17645   000443                     NCO1INCL        equ	1091	;# 
 17646   000444                     NCO1INCH        equ	1092	;# 
 17647   000445                     NCO1INCU        equ	1093	;# 
 17648   000446                     NCO1CON         equ	1094	;# 
 17649   000447                     NCO1CLK         equ	1095	;# 
 17650   000448                     NCO2ACC         equ	1096	;# 
 17651   000448                     NCO2ACCL        equ	1096	;# 
 17652   000449                     NCO2ACCH        equ	1097	;# 
 17653   00044A                     NCO2ACCU        equ	1098	;# 
 17654   00044B                     NCO2INC         equ	1099	;# 
 17655   00044B                     NCO2INCL        equ	1099	;# 
 17656   00044C                     NCO2INCH        equ	1100	;# 
 17657   00044D                     NCO2INCU        equ	1101	;# 
 17658   00044E                     NCO2CON         equ	1102	;# 
 17659   00044F                     NCO2CLK         equ	1103	;# 
 17660   000450                     NCO3ACC         equ	1104	;# 
 17661   000450                     NCO3ACCL        equ	1104	;# 
 17662   000451                     NCO3ACCH        equ	1105	;# 
 17663   000452                     NCO3ACCU        equ	1106	;# 
 17664   000453                     NCO3INC         equ	1107	;# 
 17665   000453                     NCO3INCL        equ	1107	;# 
 17666   000454                     NCO3INCH        equ	1108	;# 
 17667   000455                     NCO3INCU        equ	1109	;# 
 17668   000456                     NCO3CON         equ	1110	;# 
 17669   000457                     NCO3CLK         equ	1111	;# 
 17670   000458                     FSCMCON         equ	1112	;# 
 17671   000459                     IVTLOCK         equ	1113	;# 
 17672   00045A                     IVTAD           equ	1114	;# 
 17673   00045A                     IVTADL          equ	1114	;# 
 17674   00045B                     IVTADH          equ	1115	;# 
 17675   00045C                     IVTADU          equ	1116	;# 
 17676   00045D                     IVTBASE         equ	1117	;# 
 17677   00045D                     IVTBASEL        equ	1117	;# 
 17678   00045E                     IVTBASEH        equ	1118	;# 
 17679   00045F                     IVTBASEU        equ	1119	;# 
 17680   000460                     PWM1ERS         equ	1120	;# 
 17681   000461                     PWM1CLK         equ	1121	;# 
 17682   000462                     PWM1LDS         equ	1122	;# 
 17683   000463                     PWM1PR          equ	1123	;# 
 17684   000463                     PWM1PRL         equ	1123	;# 
 17685   000464                     PWM1PRH         equ	1124	;# 
 17686   000465                     PWM1CPRE        equ	1125	;# 
 17687   000466                     PWM1PIPOS       equ	1126	;# 
 17688   000467                     PWM1GIR         equ	1127	;# 
 17689   000468                     PWM1GIE         equ	1128	;# 
 17690   000469                     PWM1CON         equ	1129	;# 
 17691   00046A                     PWM1S1CFG       equ	1130	;# 
 17692   00046B                     PWM1S1P1        equ	1131	;# 
 17693   00046B                     PWM1S1P1L       equ	1131	;# 
 17694   00046C                     PWM1S1P1H       equ	1132	;# 
 17695   00046D                     PWM1S1P2        equ	1133	;# 
 17696   00046D                     PWM1S1P2L       equ	1133	;# 
 17697   00046E                     PWM1S1P2H       equ	1134	;# 
 17698   00046F                     PWM2ERS         equ	1135	;# 
 17699   000470                     PWM2CLK         equ	1136	;# 
 17700   000471                     PWM2LDS         equ	1137	;# 
 17701   000472                     PWM2PR          equ	1138	;# 
 17702   000472                     PWM2PRL         equ	1138	;# 
 17703   000473                     PWM2PRH         equ	1139	;# 
 17704   000474                     PWM2CPRE        equ	1140	;# 
 17705   000475                     PWM2PIPOS       equ	1141	;# 
 17706   000476                     PWM2GIR         equ	1142	;# 
 17707   000477                     PWM2GIE         equ	1143	;# 
 17708   000478                     PWM2CON         equ	1144	;# 
 17709   000479                     PWM2S1CFG       equ	1145	;# 
 17710   00047A                     PWM2S1P1        equ	1146	;# 
 17711   00047A                     PWM2S1P1L       equ	1146	;# 
 17712   00047B                     PWM2S1P1H       equ	1147	;# 
 17713   00047C                     PWM2S1P2        equ	1148	;# 
 17714   00047C                     PWM2S1P2L       equ	1148	;# 
 17715   00047D                     PWM2S1P2H       equ	1149	;# 
 17716   00047E                     PWM3ERS         equ	1150	;# 
 17717   00047F                     PWM3CLK         equ	1151	;# 
 17718   000480                     PWM3LDS         equ	1152	;# 
 17719   000481                     PWM3PR          equ	1153	;# 
 17720   000481                     PWM3PRL         equ	1153	;# 
 17721   000482                     PWM3PRH         equ	1154	;# 
 17722   000483                     PWM3CPRE        equ	1155	;# 
 17723   000484                     PWM3PIPOS       equ	1156	;# 
 17724   000485                     PWM3GIR         equ	1157	;# 
 17725   000486                     PWM3GIE         equ	1158	;# 
 17726   000487                     PWM3CON         equ	1159	;# 
 17727   000488                     PWM3S1CFG       equ	1160	;# 
 17728   000489                     PWM3S1P1        equ	1161	;# 
 17729   000489                     PWM3S1P1L       equ	1161	;# 
 17730   00048A                     PWM3S1P1H       equ	1162	;# 
 17731   00048B                     PWM3S1P2        equ	1163	;# 
 17732   00048B                     PWM3S1P2L       equ	1163	;# 
 17733   00048C                     PWM3S1P2H       equ	1164	;# 
 17734   00048D                     PWM4ERS         equ	1165	;# 
 17735   00048E                     PWM4CLK         equ	1166	;# 
 17736   00048F                     PWM4LDS         equ	1167	;# 
 17737   000490                     PWM4PR          equ	1168	;# 
 17738   000490                     PWM4PRL         equ	1168	;# 
 17739   000491                     PWM4PRH         equ	1169	;# 
 17740   000492                     PWM4CPRE        equ	1170	;# 
 17741   000493                     PWM4PIPOS       equ	1171	;# 
 17742   000494                     PWM4GIR         equ	1172	;# 
 17743   000495                     PWM4GIE         equ	1173	;# 
 17744   000496                     PWM4CON         equ	1174	;# 
 17745   000497                     PWM4S1CFG       equ	1175	;# 
 17746   000498                     PWM4S1P1        equ	1176	;# 
 17747   000498                     PWM4S1P1L       equ	1176	;# 
 17748   000499                     PWM4S1P1H       equ	1177	;# 
 17749   00049A                     PWM4S1P2        equ	1178	;# 
 17750   00049A                     PWM4S1P2L       equ	1178	;# 
 17751   00049B                     PWM4S1P2H       equ	1179	;# 
 17752   00049C                     PWMLOAD         equ	1180	;# 
 17753   00049D                     PWMEN           equ	1181	;# 
 17754   00049E                     PIE0            equ	1182	;# 
 17755   00049F                     PIE1            equ	1183	;# 
 17756   0004A0                     PIE2            equ	1184	;# 
 17757   0004A1                     PIE3            equ	1185	;# 
 17758   0004A2                     PIE4            equ	1186	;# 
 17759   0004A3                     PIE5            equ	1187	;# 
 17760   0004A4                     PIE6            equ	1188	;# 
 17761   0004A5                     PIE7            equ	1189	;# 
 17762   0004A6                     PIE8            equ	1190	;# 
 17763   0004A7                     PIE9            equ	1191	;# 
 17764   0004A8                     PIE10           equ	1192	;# 
 17765   0004A9                     PIE11           equ	1193	;# 
 17766   0004AA                     PIE12           equ	1194	;# 
 17767   0004AB                     PIE13           equ	1195	;# 
 17768   0004AC                     PIE14           equ	1196	;# 
 17769   0004AD                     PIE15           equ	1197	;# 
 17770   0004AE                     PIR0            equ	1198	;# 
 17771   0004AF                     PIR1            equ	1199	;# 
 17772   0004B0                     PIR2            equ	1200	;# 
 17773   0004B1                     PIR3            equ	1201	;# 
 17774   0004B2                     PIR4            equ	1202	;# 
 17775   0004B3                     PIR5            equ	1203	;# 
 17776   0004B4                     PIR6            equ	1204	;# 
 17777   0004B5                     PIR7            equ	1205	;# 
 17778   0004B6                     PIR8            equ	1206	;# 
 17779   0004B7                     PIR9            equ	1207	;# 
 17780   0004B8                     PIR10           equ	1208	;# 
 17781   0004B9                     PIR11           equ	1209	;# 
 17782   0004BA                     PIR12           equ	1210	;# 
 17783   0004BB                     PIR13           equ	1211	;# 
 17784   0004BC                     PIR14           equ	1212	;# 
 17785   0004BD                     PIR15           equ	1213	;# 
 17786   0004BE                     LATA            equ	1214	;# 
 17787   0004BF                     LATB            equ	1215	;# 
 17788   0004C0                     LATC            equ	1216	;# 
 17789   0004C6                     TRISA           equ	1222	;# 
 17790   0004C7                     TRISB           equ	1223	;# 
 17791   0004C8                     TRISC           equ	1224	;# 
 17792   0004CA                     TRISE           equ	1226	;# 
 17793   0004CE                     PORTA           equ	1230	;# 
 17794   0004CF                     PORTB           equ	1231	;# 
 17795   0004D0                     PORTC           equ	1232	;# 
 17796   0004D2                     PORTE           equ	1234	;# 
 17797   0004D6                     INTCON0         equ	1238	;# 
 17798   0004D7                     INTCON1         equ	1239	;# 
 17799   0004D8                     STATUS          equ	1240	;# 
 17800   0004D9                     FSR2            equ	1241	;# 
 17801   0004D9                     FSR2L           equ	1241	;# 
 17802   0004DA                     FSR2H           equ	1242	;# 
 17803   0004DB                     PLUSW2          equ	1243	;# 
 17804   0004DC                     PREINC2         equ	1244	;# 
 17805   0004DD                     POSTDEC2        equ	1245	;# 
 17806   0004DE                     POSTINC2        equ	1246	;# 
 17807   0004DF                     INDF2           equ	1247	;# 
 17808   0004E0                     BSR             equ	1248	;# 
 17809   0004E1                     FSR1            equ	1249	;# 
 17810   0004E1                     FSR1L           equ	1249	;# 
 17811   0004E2                     FSR1H           equ	1250	;# 
 17812   0004E3                     PLUSW1          equ	1251	;# 
 17813   0004E4                     PREINC1         equ	1252	;# 
 17814   0004E5                     POSTDEC1        equ	1253	;# 
 17815   0004E6                     POSTINC1        equ	1254	;# 
 17816   0004E7                     INDF1           equ	1255	;# 
 17817   0004E8                     WREG            equ	1256	;# 
 17818   0004E9                     FSR0            equ	1257	;# 
 17819   0004E9                     FSR0L           equ	1257	;# 
 17820   0004EA                     FSR0H           equ	1258	;# 
 17821   0004EB                     PLUSW0          equ	1259	;# 
 17822   0004EC                     PREINC0         equ	1260	;# 
 17823   0004ED                     POSTDEC0        equ	1261	;# 
 17824   0004EE                     POSTINC0        equ	1262	;# 
 17825   0004EF                     INDF0           equ	1263	;# 
 17826   0004F0                     PCON0           equ	1264	;# 
 17827   0004F1                     PCON1           equ	1265	;# 
 17828   0004F2                     CPUDOZE         equ	1266	;# 
 17829   0004F3                     PROD            equ	1267	;# 
 17830   0004F3                     PRODL           equ	1267	;# 
 17831   0004F4                     PRODH           equ	1268	;# 
 17832   0004F5                     TABLAT          equ	1269	;# 
 17833   0004F6                     TBLPTR          equ	1270	;# 
 17834   0004F6                     TBLPTRL         equ	1270	;# 
 17835   0004F7                     TBLPTRH         equ	1271	;# 
 17836   0004F8                     TBLPTRU         equ	1272	;# 
 17837   0004F9                     PCLAT           equ	1273	;# 
 17838   0004F9                     PCL             equ	1273	;# 
 17839   0004FA                     PCLATH          equ	1274	;# 
 17840   0004FB                     PCLATU          equ	1275	;# 
 17841   0004FC                     STKPTR          equ	1276	;# 
 17842   0004FD                     TOS             equ	1277	;# 
 17843   0004FD                     TOSL            equ	1277	;# 
 17844   0004FE                     TOSH            equ	1278	;# 
 17845   0004FF                     TOSU            equ	1279	;# 
 17846   000038                     BOOTREG         equ	56	;# 
 17847   000039                     CLKRCON         equ	57	;# 
 17848   00003A                     CLKRCLK         equ	58	;# 
 17849   000040                     NVMCON0         equ	64	;# 
 17850   000041                     NVMCON1         equ	65	;# 
 17851   000042                     NVMLOCK         equ	66	;# 
 17852   000043                     NVMADR          equ	67	;# 
 17853   000043                     NVMADRL         equ	67	;# 
 17854   000044                     NVMADRH         equ	68	;# 
 17855   000045                     NVMADRU         equ	69	;# 
 17856   000046                     NVMDAT          equ	70	;# 
 17857   000046                     NVMDATL         equ	70	;# 
 17858   000047                     NVMDATH         equ	71	;# 
 17859   000048                     VREGCON         equ	72	;# 
 17860   000049                     BORCON          equ	73	;# 
 17861   00004A                     HLVDCON0        equ	74	;# 
 17862   00004B                     HLVDCON1        equ	75	;# 
 17863   00004C                     ZCDCON          equ	76	;# 
 17864   000060                     PMD0            equ	96	;# 
 17865   000061                     PMD1            equ	97	;# 
 17866   000062                     PMD2            equ	98	;# 
 17867   000063                     PMD3            equ	99	;# 
 17868   000064                     PMD4            equ	100	;# 
 17869   000065                     PMD5            equ	101	;# 
 17870   000066                     PMD6            equ	102	;# 
 17871   000067                     PMD7            equ	103	;# 
 17872   000068                     PMD8            equ	104	;# 
 17873   00006A                     MD1CON0         equ	106	;# 
 17874   00006B                     MD1CON1         equ	107	;# 
 17875   00006C                     MD1SRC          equ	108	;# 
 17876   00006D                     MD1CARL         equ	109	;# 
 17877   00006E                     MD1CARH         equ	110	;# 
 17878   00006F                     CMOUT           equ	111	;# 
 17879   000070                     CM1CON0         equ	112	;# 
 17880   000071                     CM1CON1         equ	113	;# 
 17881   000072                     CM1NCH          equ	114	;# 
 17882   000073                     CM1PCH          equ	115	;# 
 17883   000074                     CM2CON0         equ	116	;# 
 17884   000075                     CM2CON1         equ	117	;# 
 17885   000076                     CM2NCH          equ	118	;# 
 17886   000077                     CM2PCH          equ	119	;# 
 17887   000078                     WDTCON0         equ	120	;# 
 17888   000079                     WDTCON1         equ	121	;# 
 17889   00007A                     WDTPSL          equ	122	;# 
 17890   00007B                     WDTPSH          equ	123	;# 
 17891   00007C                     WDTTMR          equ	124	;# 
 17892   00007D                     DAC1DAT         equ	125	;# 
 17893   00007D                     DAC1DATL        equ	125	;# 
 17894   00007F                     DAC1CON         equ	127	;# 
 17895   000080                     SPI1RXB         equ	128	;# 
 17896   000081                     SPI1TXB         equ	129	;# 
 17897   000082                     SPI1TCNT        equ	130	;# 
 17898   000082                     SPI1TCNTL       equ	130	;# 
 17899   000083                     SPI1TCNTH       equ	131	;# 
 17900   000084                     SPI1CON0        equ	132	;# 
 17901   000085                     SPI1CON1        equ	133	;# 
 17902   000086                     SPI1CON2        equ	134	;# 
 17903   000087                     SPI1STATUS      equ	135	;# 
 17904   000088                     SPI1TWIDTH      equ	136	;# 
 17905   000089                     SPI1BAUD        equ	137	;# 
 17906   00008A                     SPI1INTF        equ	138	;# 
 17907   00008B                     SPI1INTE        equ	139	;# 
 17908   00008C                     SPI1CLK         equ	140	;# 
 17909   00008D                     SPI2RXB         equ	141	;# 
 17910   00008E                     SPI2TXB         equ	142	;# 
 17911   00008F                     SPI2TCNT        equ	143	;# 
 17912   00008F                     SPI2TCNTL       equ	143	;# 
 17913   000090                     SPI2TCNTH       equ	144	;# 
 17914   000091                     SPI2CON0        equ	145	;# 
 17915   000092                     SPI2CON1        equ	146	;# 
 17916   000093                     SPI2CON2        equ	147	;# 
 17917   000094                     SPI2STATUS      equ	148	;# 
 17918   000095                     SPI2TWIDTH      equ	149	;# 
 17919   000096                     SPI2BAUD        equ	150	;# 
 17920   000097                     SPI2INTF        equ	151	;# 
 17921   000098                     SPI2INTE        equ	152	;# 
 17922   000099                     SPI2CLK         equ	153	;# 
 17923   0000AC                     ACTCON          equ	172	;# 
 17924   0000AD                     OSCCON1         equ	173	;# 
 17925   0000AE                     OSCCON2         equ	174	;# 
 17926   0000AF                     OSCCON3         equ	175	;# 
 17927   0000B0                     OSCTUNE         equ	176	;# 
 17928   0000B1                     OSCFRQ          equ	177	;# 
 17929   0000B1                     OSCFREQ         equ	177	;# 
 17930   0000B2                     OSCSTAT         equ	178	;# 
 17931   0000B2                     OSCSTAT1        equ	178	;# 
 17932   0000B3                     OSCEN           equ	179	;# 
 17933   0000B4                     PRLOCK          equ	180	;# 
 17934   0000B5                     SCANPR          equ	181	;# 
 17935   0000B6                     DMA1PR          equ	182	;# 
 17936   0000B7                     DMA2PR          equ	183	;# 
 17937   0000B8                     DMA3PR          equ	184	;# 
 17938   0000B9                     DMA4PR          equ	185	;# 
 17939   0000BA                     DMA5PR          equ	186	;# 
 17940   0000BB                     DMA6PR          equ	187	;# 
 17941   0000BC                     DMA7PR          equ	188	;# 
 17942   0000BD                     DMA8PR          equ	189	;# 
 17943   0000BE                     MAINPR          equ	190	;# 
 17944   0000BF                     ISRPR           equ	191	;# 
 17945   0000D4                     CLCDATA         equ	212	;# 
 17946   0000D5                     CLCSELECT       equ	213	;# 
 17947   0000D6                     CLCnCON         equ	214	;# 
 17948   0000D7                     CLCnPOL         equ	215	;# 
 17949   0000D8                     CLCnSEL0        equ	216	;# 
 17950   0000D9                     CLCnSEL1        equ	217	;# 
 17951   0000DA                     CLCnSEL2        equ	218	;# 
 17952   0000DB                     CLCnSEL3        equ	219	;# 
 17953   0000DC                     CLCnGLS0        equ	220	;# 
 17954   0000DD                     CLCnGLS1        equ	221	;# 
 17955   0000DE                     CLCnGLS2        equ	222	;# 
 17956   0000DF                     CLCnGLS3        equ	223	;# 
 17957   0000E8                     DMASELECT       equ	232	;# 
 17958   0000E9                     DMAnBUF         equ	233	;# 
 17959   0000EA                     DMAnDCNT        equ	234	;# 
 17960   0000EA                     DMAnDCNTL       equ	234	;# 
 17961   0000EB                     DMAnDCNTH       equ	235	;# 
 17962   0000EC                     DMAnDPTR        equ	236	;# 
 17963   0000EC                     DMAnDPTRL       equ	236	;# 
 17964   0000ED                     DMAnDPTRH       equ	237	;# 
 17965   0000EE                     DMAnDSZ         equ	238	;# 
 17966   0000EE                     DMAnDSZL        equ	238	;# 
 17967   0000EF                     DMAnDSZH        equ	239	;# 
 17968   0000F0                     DMAnDSA         equ	240	;# 
 17969   0000F0                     DMAnDSAL        equ	240	;# 
 17970   0000F1                     DMAnDSAH        equ	241	;# 
 17971   0000F2                     DMAnSCNT        equ	242	;# 
 17972   0000F2                     DMAnSCNTL       equ	242	;# 
 17973   0000F3                     DMAnSCNTH       equ	243	;# 
 17974   0000F4                     DMAnSPTR        equ	244	;# 
 17975   0000F4                     DMAnSPTRL       equ	244	;# 
 17976   0000F5                     DMAnSPTRH       equ	245	;# 
 17977   0000F6                     DMAnSPTRU       equ	246	;# 
 17978   0000F7                     DMAnSSZ         equ	247	;# 
 17979   0000F7                     DMAnSSZL        equ	247	;# 
 17980   0000F8                     DMAnSSZH        equ	248	;# 
 17981   0000F9                     DMAnSSA         equ	249	;# 
 17982   0000F9                     DMAnSSAL        equ	249	;# 
 17983   0000FA                     DMAnSSAH        equ	250	;# 
 17984   0000FB                     DMAnSSAU        equ	251	;# 
 17985   0000FC                     DMAnCON0        equ	252	;# 
 17986   0000FD                     DMAnCON1        equ	253	;# 
 17987   0000FE                     DMAnAIRQ        equ	254	;# 
 17988   0000FF                     DMAnSIRQ        equ	255	;# 
 17989   000100                     C1CONL          equ	256	;# 
 17990   000101                     C1CONH          equ	257	;# 
 17991   000102                     C1CONU          equ	258	;# 
 17992   000103                     C1CONT          equ	259	;# 
 17993   000104                     C1NBTCFGL       equ	260	;# 
 17994   000105                     C1NBTCFGH       equ	261	;# 
 17995   000106                     C1NBTCFGU       equ	262	;# 
 17996   000107                     C1NBTCFGT       equ	263	;# 
 17997   000108                     C1DBTCFGL       equ	264	;# 
 17998   000109                     C1DBTCFGH       equ	265	;# 
 17999   00010A                     C1DBTCFGU       equ	266	;# 
 18000   00010B                     C1DBTCFGT       equ	267	;# 
 18001   00010C                     C1TDCL          equ	268	;# 
 18002   00010D                     C1TDCH          equ	269	;# 
 18003   00010E                     C1TDCU          equ	270	;# 
 18004   000110                     C1TBC           equ	272	;# 
 18005   000110                     C1TBCL          equ	272	;# 
 18006   000111                     C1TBCH          equ	273	;# 
 18007   000112                     C1TBCU          equ	274	;# 
 18008   000113                     C1TBCT          equ	275	;# 
 18009   000114                     C1TSCONL        equ	276	;# 
 18010   000115                     C1TSCONH        equ	277	;# 
 18011   000116                     C1TSCONU        equ	278	;# 
 18012   000117                     C1TSCONT        equ	279	;# 
 18013   000118                     C1VECL          equ	280	;# 
 18014   000119                     C1VECH          equ	281	;# 
 18015   00011A                     C1VECU          equ	282	;# 
 18016   00011B                     C1VECT          equ	283	;# 
 18017   00011C                     C1INTL          equ	284	;# 
 18018   00011D                     C1INTH          equ	285	;# 
 18019   00011E                     C1INTU          equ	286	;# 
 18020   00011F                     C1INTT          equ	287	;# 
 18021   000120                     C1RXIF          equ	288	;# 
 18022   000120                     C1RXIFL         equ	288	;# 
 18023   000121                     C1RXIFH         equ	289	;# 
 18024   000122                     C1RXIFU         equ	290	;# 
 18025   000123                     C1RXIFT         equ	291	;# 
 18026   000124                     C1TXIF          equ	292	;# 
 18027   000124                     C1TXIFL         equ	292	;# 
 18028   000125                     C1TXIFH         equ	293	;# 
 18029   000126                     C1TXIFU         equ	294	;# 
 18030   000127                     C1TXIFT         equ	295	;# 
 18031   000128                     C1RXOVIF        equ	296	;# 
 18032   000128                     C1RXOVIFL       equ	296	;# 
 18033   000129                     C1RXOVIFH       equ	297	;# 
 18034   00012A                     C1RXOVIFU       equ	298	;# 
 18035   00012B                     C1RXOVIFT       equ	299	;# 
 18036   00012C                     C1TXATIF        equ	300	;# 
 18037   00012C                     C1TXATIFL       equ	300	;# 
 18038   00012D                     C1TXATIFH       equ	301	;# 
 18039   00012E                     C1TXATIFU       equ	302	;# 
 18040   00012F                     C1TXATIFT       equ	303	;# 
 18041   000130                     C1TXREQ         equ	304	;# 
 18042   000130                     C1TXREQL        equ	304	;# 
 18043   000131                     C1TXREQH        equ	305	;# 
 18044   000132                     C1TXREQU        equ	306	;# 
 18045   000133                     C1TXREQT        equ	307	;# 
 18046   000134                     C1TRECL         equ	308	;# 
 18047   000135                     C1TRECH         equ	309	;# 
 18048   000136                     C1TRECU         equ	310	;# 
 18049   000137                     C1TRECT         equ	311	;# 
 18050   000138                     C1BDIAG0L       equ	312	;# 
 18051   000139                     C1BDIAG0H       equ	313	;# 
 18052   00013C                     C1BDIAG1L       equ	316	;# 
 18053   00013D                     C1BDIAG1H       equ	317	;# 
 18054   00013E                     C1BDIAG1U       equ	318	;# 
 18055   00013F                     C1BDIAG1T       equ	319	;# 
 18056   000140                     C1TEFCONL       equ	320	;# 
 18057   000141                     C1TEFCONH       equ	321	;# 
 18058   000142                     C1TEFCONU       equ	322	;# 
 18059   000143                     C1TEFCONT       equ	323	;# 
 18060   000144                     C1TEFSTAL       equ	324	;# 
 18061   000145                     C1TEFSTAH       equ	325	;# 
 18062   000146                     C1TEFSTAU       equ	326	;# 
 18063   000147                     C1TEFSTAT       equ	327	;# 
 18064   000148                     C1TEFUA         equ	328	;# 
 18065   000148                     C1TEFUAL        equ	328	;# 
 18066   000149                     C1TEFUAH        equ	329	;# 
 18067   00014A                     C1TEFUAU        equ	330	;# 
 18068   00014B                     C1TEFUAT        equ	331	;# 
 18069   00014C                     C1FIFOBA        equ	332	;# 
 18070   00014C                     C1FIFOBAL       equ	332	;# 
 18071   00014D                     C1FIFOBAH       equ	333	;# 
 18072   00014E                     C1FIFOBAU       equ	334	;# 
 18073   00014F                     C1FIFOBAT       equ	335	;# 
 18074   000150                     C1TXQCONL       equ	336	;# 
 18075   000151                     C1TXQCONH       equ	337	;# 
 18076   000152                     C1TXQCONU       equ	338	;# 
 18077   000153                     C1TXQCONT       equ	339	;# 
 18078   000154                     C1TXQSTAL       equ	340	;# 
 18079   000155                     C1TXQSTAH       equ	341	;# 
 18080   000156                     C1TXQSTAU       equ	342	;# 
 18081   000157                     C1TXQSTAT       equ	343	;# 
 18082   000158                     C1TXQUA         equ	344	;# 
 18083   000158                     C1TXQUAL        equ	344	;# 
 18084   000159                     C1TXQUAH        equ	345	;# 
 18085   00015A                     C1TXQUAU        equ	346	;# 
 18086   00015B                     C1TXQUAT        equ	347	;# 
 18087   00015C                     C1FIFOCON1      equ	348	;# 
 18088   00015C                     C1FIFOCON1L     equ	348	;# 
 18089   00015D                     C1FIFOCON1H     equ	349	;# 
 18090   00015E                     C1FIFOCON1U     equ	350	;# 
 18091   00015F                     C1FIFOCON1T     equ	351	;# 
 18092   000160                     C1FIFOSTA1      equ	352	;# 
 18093   000160                     C1FIFOSTA1L     equ	352	;# 
 18094   000161                     C1FIFOSTA1H     equ	353	;# 
 18095   000162                     C1FIFOSTA1U     equ	354	;# 
 18096   000163                     C1FIFOSTA1T     equ	355	;# 
 18097   000164                     C1FIFOUA1       equ	356	;# 
 18098   000164                     C1FIFOUA1L      equ	356	;# 
 18099   000165                     C1FIFOUA1H      equ	357	;# 
 18100   000166                     C1FIFOUA1U      equ	358	;# 
 18101   000167                     C1FIFOUA1T      equ	359	;# 
 18102   000168                     C1FIFOCON2      equ	360	;# 
 18103   000168                     C1FIFOCON2L     equ	360	;# 
 18104   000169                     C1FIFOCON2H     equ	361	;# 
 18105   00016A                     C1FIFOCON2U     equ	362	;# 
 18106   00016B                     C1FIFOCON2T     equ	363	;# 
 18107   00016C                     C1FIFOSTA2      equ	364	;# 
 18108   00016C                     C1FIFOSTA2L     equ	364	;# 
 18109   00016D                     C1FIFOSTA2H     equ	365	;# 
 18110   00016E                     C1FIFOSTA2U     equ	366	;# 
 18111   00016F                     C1FIFOSTA2T     equ	367	;# 
 18112   000170                     C1FIFOUA2       equ	368	;# 
 18113   000170                     C1FIFOUA2L      equ	368	;# 
 18114   000171                     C1FIFOUA2H      equ	369	;# 
 18115   000172                     C1FIFOUA2U      equ	370	;# 
 18116   000173                     C1FIFOUA2T      equ	371	;# 
 18117   000174                     C1FIFOCON3      equ	372	;# 
 18118   000174                     C1FIFOCON3L     equ	372	;# 
 18119   000175                     C1FIFOCON3H     equ	373	;# 
 18120   000176                     C1FIFOCON3U     equ	374	;# 
 18121   000177                     C1FIFOCON3T     equ	375	;# 
 18122   000178                     C1FIFOSTA3      equ	376	;# 
 18123   000178                     C1FIFOSTA3L     equ	376	;# 
 18124   000179                     C1FIFOSTA3H     equ	377	;# 
 18125   00017A                     C1FIFOSTA3U     equ	378	;# 
 18126   00017B                     C1FIFOSTA3T     equ	379	;# 
 18127   00017C                     C1FIFOUA3       equ	380	;# 
 18128   00017C                     C1FIFOUA3L      equ	380	;# 
 18129   00017D                     C1FIFOUA3H      equ	381	;# 
 18130   00017E                     C1FIFOUA3U      equ	382	;# 
 18131   00017F                     C1FIFOUA3T      equ	383	;# 
 18132   000180                     C1FLTCON0L      equ	384	;# 
 18133   000181                     C1FLTCON0H      equ	385	;# 
 18134   000182                     C1FLTCON0U      equ	386	;# 
 18135   000183                     C1FLTCON0T      equ	387	;# 
 18136   000184                     C1FLTCON1L      equ	388	;# 
 18137   000185                     C1FLTCON1H      equ	389	;# 
 18138   000186                     C1FLTCON1U      equ	390	;# 
 18139   000187                     C1FLTCON1T      equ	391	;# 
 18140   000188                     C1FLTCON2L      equ	392	;# 
 18141   000189                     C1FLTCON2H      equ	393	;# 
 18142   00018A                     C1FLTCON2U      equ	394	;# 
 18143   00018B                     C1FLTCON2T      equ	395	;# 
 18144   00018C                     C1FLTOBJ0       equ	396	;# 
 18145   00018C                     C1FLTOBJ0L      equ	396	;# 
 18146   00018D                     C1FLTOBJ0H      equ	397	;# 
 18147   00018E                     C1FLTOBJ0U      equ	398	;# 
 18148   00018F                     C1FLTOBJ0T      equ	399	;# 
 18149   000190                     C1MASK0         equ	400	;# 
 18150   000190                     C1MASK0L        equ	400	;# 
 18151   000191                     C1MASK0H        equ	401	;# 
 18152   000192                     C1MASK0U        equ	402	;# 
 18153   000193                     C1MASK0T        equ	403	;# 
 18154   000194                     C1FLTOBJ1       equ	404	;# 
 18155   000194                     C1FLTOBJ1L      equ	404	;# 
 18156   000195                     C1FLTOBJ1H      equ	405	;# 
 18157   000196                     C1FLTOBJ1U      equ	406	;# 
 18158   000197                     C1FLTOBJ1T      equ	407	;# 
 18159   000198                     C1MASK1         equ	408	;# 
 18160   000198                     C1MASK1L        equ	408	;# 
 18161   000199                     C1MASK1H        equ	409	;# 
 18162   00019A                     C1MASK1U        equ	410	;# 
 18163   00019B                     C1MASK1T        equ	411	;# 
 18164   00019C                     C1FLTOBJ2       equ	412	;# 
 18165   00019C                     C1FLTOBJ2L      equ	412	;# 
 18166   00019D                     C1FLTOBJ2H      equ	413	;# 
 18167   00019E                     C1FLTOBJ2U      equ	414	;# 
 18168   00019F                     C1FLTOBJ2T      equ	415	;# 
 18169   0001A0                     C1MASK2         equ	416	;# 
 18170   0001A0                     C1MASK2L        equ	416	;# 
 18171   0001A1                     C1MASK2H        equ	417	;# 
 18172   0001A2                     C1MASK2U        equ	418	;# 
 18173   0001A3                     C1MASK2T        equ	419	;# 
 18174   0001A4                     C1FLTOBJ3       equ	420	;# 
 18175   0001A4                     C1FLTOBJ3L      equ	420	;# 
 18176   0001A5                     C1FLTOBJ3H      equ	421	;# 
 18177   0001A6                     C1FLTOBJ3U      equ	422	;# 
 18178   0001A7                     C1FLTOBJ3T      equ	423	;# 
 18179   0001A8                     C1MASK3         equ	424	;# 
 18180   0001A8                     C1MASK3L        equ	424	;# 
 18181   0001A9                     C1MASK3H        equ	425	;# 
 18182   0001AA                     C1MASK3U        equ	426	;# 
 18183   0001AB                     C1MASK3T        equ	427	;# 
 18184   0001AC                     C1FLTOBJ4       equ	428	;# 
 18185   0001AC                     C1FLTOBJ4L      equ	428	;# 
 18186   0001AD                     C1FLTOBJ4H      equ	429	;# 
 18187   0001AE                     C1FLTOBJ4U      equ	430	;# 
 18188   0001AF                     C1FLTOBJ4T      equ	431	;# 
 18189   0001B0                     C1MASK4         equ	432	;# 
 18190   0001B0                     C1MASK4L        equ	432	;# 
 18191   0001B1                     C1MASK4H        equ	433	;# 
 18192   0001B2                     C1MASK4U        equ	434	;# 
 18193   0001B3                     C1MASK4T        equ	435	;# 
 18194   0001B4                     C1FLTOBJ5       equ	436	;# 
 18195   0001B4                     C1FLTOBJ5L      equ	436	;# 
 18196   0001B5                     C1FLTOBJ5H      equ	437	;# 
 18197   0001B6                     C1FLTOBJ5U      equ	438	;# 
 18198   0001B7                     C1FLTOBJ5T      equ	439	;# 
 18199   0001B8                     C1MASK5         equ	440	;# 
 18200   0001B8                     C1MASK5L        equ	440	;# 
 18201   0001B9                     C1MASK5H        equ	441	;# 
 18202   0001BA                     C1MASK5U        equ	442	;# 
 18203   0001BB                     C1MASK5T        equ	443	;# 
 18204   0001BC                     C1FLTOBJ6       equ	444	;# 
 18205   0001BC                     C1FLTOBJ6L      equ	444	;# 
 18206   0001BD                     C1FLTOBJ6H      equ	445	;# 
 18207   0001BE                     C1FLTOBJ6U      equ	446	;# 
 18208   0001BF                     C1FLTOBJ6T      equ	447	;# 
 18209   0001C0                     C1MASK6         equ	448	;# 
 18210   0001C0                     C1MASK6L        equ	448	;# 
 18211   0001C1                     C1MASK6H        equ	449	;# 
 18212   0001C2                     C1MASK6U        equ	450	;# 
 18213   0001C3                     C1MASK6T        equ	451	;# 
 18214   0001C4                     C1FLTOBJ7       equ	452	;# 
 18215   0001C4                     C1FLTOBJ7L      equ	452	;# 
 18216   0001C5                     C1FLTOBJ7H      equ	453	;# 
 18217   0001C6                     C1FLTOBJ7U      equ	454	;# 
 18218   0001C7                     C1FLTOBJ7T      equ	455	;# 
 18219   0001C8                     C1MASK7         equ	456	;# 
 18220   0001C8                     C1MASK7L        equ	456	;# 
 18221   0001C9                     C1MASK7H        equ	457	;# 
 18222   0001CA                     C1MASK7U        equ	458	;# 
 18223   0001CB                     C1MASK7T        equ	459	;# 
 18224   0001CC                     C1FLTOBJ8       equ	460	;# 
 18225   0001CC                     C1FLTOBJ8L      equ	460	;# 
 18226   0001CD                     C1FLTOBJ8H      equ	461	;# 
 18227   0001CE                     C1FLTOBJ8U      equ	462	;# 
 18228   0001CF                     C1FLTOBJ8T      equ	463	;# 
 18229   0001D0                     C1MASK8         equ	464	;# 
 18230   0001D0                     C1MASK8L        equ	464	;# 
 18231   0001D1                     C1MASK8H        equ	465	;# 
 18232   0001D2                     C1MASK8U        equ	466	;# 
 18233   0001D3                     C1MASK8T        equ	467	;# 
 18234   0001D4                     C1FLTOBJ9       equ	468	;# 
 18235   0001D4                     C1FLTOBJ9L      equ	468	;# 
 18236   0001D5                     C1FLTOBJ9H      equ	469	;# 
 18237   0001D6                     C1FLTOBJ9U      equ	470	;# 
 18238   0001D7                     C1FLTOBJ9T      equ	471	;# 
 18239   0001D8                     C1MASK9         equ	472	;# 
 18240   0001D8                     C1MASK9L        equ	472	;# 
 18241   0001D9                     C1MASK9H        equ	473	;# 
 18242   0001DA                     C1MASK9U        equ	474	;# 
 18243   0001DB                     C1MASK9T        equ	475	;# 
 18244   0001DC                     C1FLTOBJ10      equ	476	;# 
 18245   0001DC                     C1FLTOBJ10L     equ	476	;# 
 18246   0001DD                     C1FLTOBJ10H     equ	477	;# 
 18247   0001DE                     C1FLTOBJ10U     equ	478	;# 
 18248   0001DF                     C1FLTOBJ10T     equ	479	;# 
 18249   0001E0                     C1MASK10        equ	480	;# 
 18250   0001E0                     C1MASK10L       equ	480	;# 
 18251   0001E1                     C1MASK10H       equ	481	;# 
 18252   0001E2                     C1MASK10U       equ	482	;# 
 18253   0001E3                     C1MASK10T       equ	483	;# 
 18254   0001E4                     C1FLTOBJ11      equ	484	;# 
 18255   0001E4                     C1FLTOBJ11L     equ	484	;# 
 18256   0001E5                     C1FLTOBJ11H     equ	485	;# 
 18257   0001E6                     C1FLTOBJ11U     equ	486	;# 
 18258   0001E7                     C1FLTOBJ11T     equ	487	;# 
 18259   0001E8                     C1MASK11        equ	488	;# 
 18260   0001E8                     C1MASK11L       equ	488	;# 
 18261   0001E9                     C1MASK11H       equ	489	;# 
 18262   0001EA                     C1MASK11U       equ	490	;# 
 18263   0001EB                     C1MASK11T       equ	491	;# 
 18264   000200                     PPSLOCK         equ	512	;# 
 18265   000201                     RA0PPS          equ	513	;# 
 18266   000202                     RA1PPS          equ	514	;# 
 18267   000203                     RA2PPS          equ	515	;# 
 18268   000204                     RA3PPS          equ	516	;# 
 18269   000205                     RA4PPS          equ	517	;# 
 18270   000206                     RA5PPS          equ	518	;# 
 18271   000207                     RA6PPS          equ	519	;# 
 18272   000208                     RA7PPS          equ	520	;# 
 18273   000209                     RB0PPS          equ	521	;# 
 18274   00020A                     RB1PPS          equ	522	;# 
 18275   00020B                     RB2PPS          equ	523	;# 
 18276   00020C                     RB3PPS          equ	524	;# 
 18277   00020D                     RB4PPS          equ	525	;# 
 18278   00020E                     RB5PPS          equ	526	;# 
 18279   00020F                     RB6PPS          equ	527	;# 
 18280   000210                     RB7PPS          equ	528	;# 
 18281   000211                     RC0PPS          equ	529	;# 
 18282   000212                     RC1PPS          equ	530	;# 
 18283   000213                     RC2PPS          equ	531	;# 
 18284   000214                     RC3PPS          equ	532	;# 
 18285   000215                     RC4PPS          equ	533	;# 
 18286   000216                     RC5PPS          equ	534	;# 
 18287   000217                     RC6PPS          equ	535	;# 
 18288   000218                     RC7PPS          equ	536	;# 
 18289   00023D                     CANRXPPS        equ	573	;# 
 18290   00023E                     INT0PPS         equ	574	;# 
 18291   00023F                     INT1PPS         equ	575	;# 
 18292   000240                     INT2PPS         equ	576	;# 
 18293   000241                     T0CKIPPS        equ	577	;# 
 18294   000242                     T1CKIPPS        equ	578	;# 
 18295   000243                     T1GPPS          equ	579	;# 
 18296   000244                     T3CKIPPS        equ	580	;# 
 18297   000245                     T3GPPS          equ	581	;# 
 18298   000246                     T5CKIPPS        equ	582	;# 
 18299   000247                     T5GPPS          equ	583	;# 
 18300   000248                     T2INPPS         equ	584	;# 
 18301   000249                     T4INPPS         equ	585	;# 
 18302   00024A                     T6INPPS         equ	586	;# 
 18303   00024B                     TUIN0PPS        equ	587	;# 
 18304   00024C                     TUIN1PPS        equ	588	;# 
 18305   00024F                     CCP1PPS         equ	591	;# 
 18306   000250                     CCP2PPS         equ	592	;# 
 18307   000251                     CCP3PPS         equ	593	;# 
 18308   000253                     PWM1ERSPPS      equ	595	;# 
 18309   000254                     PWM2ERSPPS      equ	596	;# 
 18310   000255                     PWM3ERSPPS      equ	597	;# 
 18311   000256                     PWM4ERSPPS      equ	598	;# 
 18312   000257                     PWMIN0PPS       equ	599	;# 
 18313   000258                     PWMIN1PPS       equ	600	;# 
 18314   000259                     SMT1WINPPS      equ	601	;# 
 18315   00025A                     SMT1SIGPPS      equ	602	;# 
 18316   00025B                     CWG1PPS         equ	603	;# 
 18317   00025B                     CWG1INPPS       equ	603	;# 
 18318   00025C                     CWG2PPS         equ	604	;# 
 18319   00025C                     CWG2INPPS       equ	604	;# 
 18320   00025D                     CWG3PPS         equ	605	;# 
 18321   00025D                     CWG3INPPS       equ	605	;# 
 18322   00025E                     MD1CARLPPS      equ	606	;# 
 18323   00025E                     MDCARLPPS       equ	606	;# 
 18324   00025F                     MD1CARHPPS      equ	607	;# 
 18325   00025F                     MDCARHPPS       equ	607	;# 
 18326   000260                     MD1SRCPPS       equ	608	;# 
 18327   000260                     MDSRCPPS        equ	608	;# 
 18328   000261                     CLCIN0PPS       equ	609	;# 
 18329   000262                     CLCIN1PPS       equ	610	;# 
 18330   000263                     CLCIN2PPS       equ	611	;# 
 18331   000264                     CLCIN3PPS       equ	612	;# 
 18332   000265                     CLCIN4PPS       equ	613	;# 
 18333   000266                     CLCIN5PPS       equ	614	;# 
 18334   000267                     CLCIN6PPS       equ	615	;# 
 18335   000268                     CLCIN7PPS       equ	616	;# 
 18336   000269                     ADACTPPS        equ	617	;# 
 18337   00026A                     SPI1SCKPPS      equ	618	;# 
 18338   00026B                     SPI1SDIPPS      equ	619	;# 
 18339   00026C                     SPI1SSPPS       equ	620	;# 
 18340   00026D                     SPI2SCKPPS      equ	621	;# 
 18341   00026E                     SPI2SDIPPS      equ	622	;# 
 18342   00026F                     SPI2SSPPS       equ	623	;# 
 18343   000270                     I2C1SDAPPS      equ	624	;# 
 18344   000271                     I2C1SCLPPS      equ	625	;# 
 18345   000272                     U1RXPPS         equ	626	;# 
 18346   000273                     U1CTSPPS        equ	627	;# 
 18347   000274                     U2RXPPS         equ	628	;# 
 18348   000275                     U2CTSPPS        equ	629	;# 
 18349   000276                     U3RXPPS         equ	630	;# 
 18350   000277                     U3CTSPPS        equ	631	;# 
 18351   000278                     U4RXPPS         equ	632	;# 
 18352   000279                     U4CTSPPS        equ	633	;# 
 18353   00027A                     U5RXPPS         equ	634	;# 
 18354   00027B                     U5CTSPPS        equ	635	;# 
 18355   000286                     RC4I2C          equ	646	;# 
 18356   000287                     RC3I2C          equ	647	;# 
 18357   000288                     RB2I2C          equ	648	;# 
 18358   000289                     RB1I2C          equ	649	;# 
 18359   00028A                     I2C1RXB         equ	650	;# 
 18360   00028B                     I2C1TXB         equ	651	;# 
 18361   00028C                     I2C1CNTL        equ	652	;# 
 18362   00028D                     I2C1CNTH        equ	653	;# 
 18363   00028E                     I2C1ADB0        equ	654	;# 
 18364   00028F                     I2C1ADB1        equ	655	;# 
 18365   000290                     I2C1ADR0        equ	656	;# 
 18366   000291                     I2C1ADR1        equ	657	;# 
 18367   000292                     I2C1ADR2        equ	658	;# 
 18368   000293                     I2C1ADR3        equ	659	;# 
 18369   000294                     I2C1CON0        equ	660	;# 
 18370   000295                     I2C1CON1        equ	661	;# 
 18371   000296                     I2C1CON2        equ	662	;# 
 18372   000297                     I2C1ERR         equ	663	;# 
 18373   000298                     I2C1STAT0       equ	664	;# 
 18374   000299                     I2C1STAT1       equ	665	;# 
 18375   00029A                     I2C1PIR         equ	666	;# 
 18376   00029B                     I2C1PIE         equ	667	;# 
 18377   00029C                     I2C1BTO         equ	668	;# 
 18378   00029D                     I2C1BAUD        equ	669	;# 
 18379   00029E                     I2C1CLK         equ	670	;# 
 18380   00029F                     I2C1BTOC        equ	671	;# 
 18381   0002A1                     U1RXB           equ	673	;# 
 18382   0002A1                     U1RXBL          equ	673	;# 
 18383   0002A2                     U1RXCHK         equ	674	;# 
 18384   0002A3                     U1TXB           equ	675	;# 
 18385   0002A3                     U1TXBL          equ	675	;# 
 18386   0002A4                     U1TXCHK         equ	676	;# 
 18387   0002A5                     U1P1            equ	677	;# 
 18388   0002A5                     U1P1L           equ	677	;# 
 18389   0002A6                     U1P1H           equ	678	;# 
 18390   0002A7                     U1P2            equ	679	;# 
 18391   0002A7                     U1P2L           equ	679	;# 
 18392   0002A8                     U1P2H           equ	680	;# 
 18393   0002A9                     U1P3            equ	681	;# 
 18394   0002A9                     U1P3L           equ	681	;# 
 18395   0002AA                     U1P3H           equ	682	;# 
 18396   0002AB                     U1CON0          equ	683	;# 
 18397   0002AC                     U1CON1          equ	684	;# 
 18398   0002AD                     U1CON2          equ	685	;# 
 18399   0002AE                     U1BRG           equ	686	;# 
 18400   0002AE                     U1BRGL          equ	686	;# 
 18401   0002AF                     U1BRGH          equ	687	;# 
 18402   0002B0                     U1FIFO          equ	688	;# 
 18403   0002B1                     U1UIR           equ	689	;# 
 18404   0002B2                     U1ERRIR         equ	690	;# 
 18405   0002B3                     U1ERRIE         equ	691	;# 
 18406   0002B4                     U2RXB           equ	692	;# 
 18407   0002B4                     U2RXBL          equ	692	;# 
 18408   0002B5                     U2RXCHK         equ	693	;# 
 18409   0002B6                     U2TXB           equ	694	;# 
 18410   0002B6                     U2TXBL          equ	694	;# 
 18411   0002B7                     U2TXCHK         equ	695	;# 
 18412   0002B8                     U2P1            equ	696	;# 
 18413   0002B8                     U2P1L           equ	696	;# 
 18414   0002B9                     U2P1H           equ	697	;# 
 18415   0002BA                     U2P2            equ	698	;# 
 18416   0002BA                     U2P2L           equ	698	;# 
 18417   0002BB                     U2P2H           equ	699	;# 
 18418   0002BC                     U2P3            equ	700	;# 
 18419   0002BC                     U2P3L           equ	700	;# 
 18420   0002BD                     U2P3H           equ	701	;# 
 18421   0002BE                     U2CON0          equ	702	;# 
 18422   0002BF                     U2CON1          equ	703	;# 
 18423   0002C0                     U2CON2          equ	704	;# 
 18424   0002C1                     U2BRG           equ	705	;# 
 18425   0002C1                     U2BRGL          equ	705	;# 
 18426   0002C2                     U2BRGH          equ	706	;# 
 18427   0002C3                     U2FIFO          equ	707	;# 
 18428   0002C4                     U2UIR           equ	708	;# 
 18429   0002C5                     U2ERRIR         equ	709	;# 
 18430   0002C6                     U2ERRIE         equ	710	;# 
 18431   0002C7                     U3RXB           equ	711	;# 
 18432   0002C7                     U3RXBL          equ	711	;# 
 18433   0002C9                     U3TXB           equ	713	;# 
 18434   0002C9                     U3TXBL          equ	713	;# 
 18435   0002CB                     U3P1            equ	715	;# 
 18436   0002CB                     U3P1L           equ	715	;# 
 18437   0002CD                     U3P2            equ	717	;# 
 18438   0002CD                     U3P2L           equ	717	;# 
 18439   0002CF                     U3P3            equ	719	;# 
 18440   0002CF                     U3P3L           equ	719	;# 
 18441   0002D1                     U3CON0          equ	721	;# 
 18442   0002D2                     U3CON1          equ	722	;# 
 18443   0002D3                     U3CON2          equ	723	;# 
 18444   0002D4                     U3BRG           equ	724	;# 
 18445   0002D4                     U3BRGL          equ	724	;# 
 18446   0002D5                     U3BRGH          equ	725	;# 
 18447   0002D6                     U3FIFO          equ	726	;# 
 18448   0002D7                     U3UIR           equ	727	;# 
 18449   0002D8                     U3ERRIR         equ	728	;# 
 18450   0002D9                     U3ERRIE         equ	729	;# 
 18451   0002DA                     U4RXB           equ	730	;# 
 18452   0002DA                     U4RXBL          equ	730	;# 
 18453   0002DC                     U4TXB           equ	732	;# 
 18454   0002DC                     U4TXBL          equ	732	;# 
 18455   0002DE                     U4P1            equ	734	;# 
 18456   0002DE                     U4P1L           equ	734	;# 
 18457   0002E0                     U4P2            equ	736	;# 
 18458   0002E0                     U4P2L           equ	736	;# 
 18459   0002E2                     U4P3            equ	738	;# 
 18460   0002E2                     U4P3L           equ	738	;# 
 18461   0002E4                     U4CON0          equ	740	;# 
 18462   0002E5                     U4CON1          equ	741	;# 
 18463   0002E6                     U4CON2          equ	742	;# 
 18464   0002E7                     U4BRG           equ	743	;# 
 18465   0002E7                     U4BRGL          equ	743	;# 
 18466   0002E8                     U4BRGH          equ	744	;# 
 18467   0002E9                     U4FIFO          equ	745	;# 
 18468   0002EA                     U4UIR           equ	746	;# 
 18469   0002EB                     U4ERRIR         equ	747	;# 
 18470   0002EC                     U4ERRIE         equ	748	;# 
 18471   0002ED                     U5RXB           equ	749	;# 
 18472   0002ED                     U5RXBL          equ	749	;# 
 18473   0002EF                     U5TXB           equ	751	;# 
 18474   0002EF                     U5TXBL          equ	751	;# 
 18475   0002F1                     U5P1            equ	753	;# 
 18476   0002F1                     U5P1L           equ	753	;# 
 18477   0002F3                     U5P2            equ	755	;# 
 18478   0002F3                     U5P2L           equ	755	;# 
 18479   0002F5                     U5P3            equ	757	;# 
 18480   0002F5                     U5P3L           equ	757	;# 
 18481   0002F7                     U5CON0          equ	759	;# 
 18482   0002F8                     U5CON1          equ	760	;# 
 18483   0002F9                     U5CON2          equ	761	;# 
 18484   0002FA                     U5BRG           equ	762	;# 
 18485   0002FA                     U5BRGL          equ	762	;# 
 18486   0002FB                     U5BRGH          equ	763	;# 
 18487   0002FC                     U5FIFO          equ	764	;# 
 18488   0002FD                     U5UIR           equ	765	;# 
 18489   0002FE                     U5ERRIR         equ	766	;# 
 18490   0002FF                     U5ERRIE         equ	767	;# 
 18491   000300                     SMT1TMR         equ	768	;# 
 18492   000300                     SMT1TMRL        equ	768	;# 
 18493   000301                     SMT1TMRH        equ	769	;# 
 18494   000302                     SMT1TMRU        equ	770	;# 
 18495   000303                     SMT1CPR         equ	771	;# 
 18496   000303                     SMT1CPRL        equ	771	;# 
 18497   000304                     SMT1CPRH        equ	772	;# 
 18498   000305                     SMT1CPRU        equ	773	;# 
 18499   000306                     SMT1CPW         equ	774	;# 
 18500   000306                     SMT1CPWL        equ	774	;# 
 18501   000307                     SMT1CPWH        equ	775	;# 
 18502   000308                     SMT1CPWU        equ	776	;# 
 18503   000309                     SMT1PR          equ	777	;# 
 18504   000309                     SMT1PRL         equ	777	;# 
 18505   00030A                     SMT1PRH         equ	778	;# 
 18506   00030B                     SMT1PRU         equ	779	;# 
 18507   00030C                     SMT1CON0        equ	780	;# 
 18508   00030D                     SMT1CON1        equ	781	;# 
 18509   00030E                     SMT1STAT        equ	782	;# 
 18510   00030F                     SMT1CLK         equ	783	;# 
 18511   000310                     SMT1SIG         equ	784	;# 
 18512   000311                     SMT1WIN         equ	785	;# 
 18513   000318                     TMR0L           equ	792	;# 
 18514   000318                     TMR0            equ	792	;# 
 18515   000319                     TMR0H           equ	793	;# 
 18516   000319                     PR0             equ	793	;# 
 18517   00031A                     T0CON0          equ	794	;# 
 18518   00031B                     T0CON1          equ	795	;# 
 18519   00031C                     TMR1            equ	796	;# 
 18520   00031C                     TMR1L           equ	796	;# 
 18521   00031D                     TMR1H           equ	797	;# 
 18522   00031E                     T1CON           equ	798	;# 
 18523   00031E                     TMR1CON         equ	798	;# 
 18524   00031F                     T1GCON          equ	799	;# 
 18525   00031F                     TMR1GCON        equ	799	;# 
 18526   000320                     T1GATE          equ	800	;# 
 18527   000320                     TMR1GATE        equ	800	;# 
 18528   000321                     T1CLK           equ	801	;# 
 18529   000321                     TMR1CLK         equ	801	;# 
 18530   000321                     PR1             equ	801	;# 
 18531   000322                     T2TMR           equ	802	;# 
 18532   000322                     TMR2            equ	802	;# 
 18533   000323                     T2PR            equ	803	;# 
 18534   000323                     PR2             equ	803	;# 
 18535   000324                     T2CON           equ	804	;# 
 18536   000325                     T2HLT           equ	805	;# 
 18537   000326                     T2CLKCON        equ	806	;# 
 18538   000326                     T2CLK           equ	806	;# 
 18539   000327                     T2RST           equ	807	;# 
 18540   000328                     TMR3            equ	808	;# 
 18541   000328                     TMR3L           equ	808	;# 
 18542   000329                     TMR3H           equ	809	;# 
 18543   00032A                     T3CON           equ	810	;# 
 18544   00032A                     TMR3CON         equ	810	;# 
 18545   00032B                     T3GCON          equ	811	;# 
 18546   00032B                     TMR3GCON        equ	811	;# 
 18547   00032C                     T3GATE          equ	812	;# 
 18548   00032C                     TMR3GATE        equ	812	;# 
 18549   00032D                     T3CLK           equ	813	;# 
 18550   00032D                     TMR3CLK         equ	813	;# 
 18551   00032D                     PR3             equ	813	;# 
 18552   00032E                     T4TMR           equ	814	;# 
 18553   00032E                     TMR4            equ	814	;# 
 18554   00032F                     T4PR            equ	815	;# 
 18555   00032F                     PR4             equ	815	;# 
 18556   000330                     T4CON           equ	816	;# 
 18557   000331                     T4HLT           equ	817	;# 
 18558   000332                     T4CLKCON        equ	818	;# 
 18559   000332                     T4CLK           equ	818	;# 
 18560   000333                     T4RST           equ	819	;# 
 18561   000334                     TMR5            equ	820	;# 
 18562   000334                     TMR5L           equ	820	;# 
 18563   000335                     TMR5H           equ	821	;# 
 18564   000336                     T5CON           equ	822	;# 
 18565   000336                     TMR5CON         equ	822	;# 
 18566   000337                     T5GCON          equ	823	;# 
 18567   000337                     TMR5GCON        equ	823	;# 
 18568   000338                     T5GATE          equ	824	;# 
 18569   000338                     TMR5GATE        equ	824	;# 
 18570   000339                     T5CLK           equ	825	;# 
 18571   000339                     TMR5CLK         equ	825	;# 
 18572   000339                     PR5             equ	825	;# 
 18573   00033A                     T6TMR           equ	826	;# 
 18574   00033A                     TMR6            equ	826	;# 
 18575   00033B                     T6PR            equ	827	;# 
 18576   00033B                     PR6             equ	827	;# 
 18577   00033C                     T6CON           equ	828	;# 
 18578   00033D                     T6HLT           equ	829	;# 
 18579   00033E                     T6CLKCON        equ	830	;# 
 18580   00033E                     T6CLK           equ	830	;# 
 18581   00033F                     T6RST           equ	831	;# 
 18582   000340                     CCPR1           equ	832	;# 
 18583   000340                     CCPR1L          equ	832	;# 
 18584   000341                     CCPR1H          equ	833	;# 
 18585   000342                     CCP1CON         equ	834	;# 
 18586   000343                     CCP1CAP         equ	835	;# 
 18587   000344                     CCPR2           equ	836	;# 
 18588   000344                     CCPR2L          equ	836	;# 
 18589   000345                     CCPR2H          equ	837	;# 
 18590   000346                     CCP2CON         equ	838	;# 
 18591   000347                     CCP2CAP         equ	839	;# 
 18592   000348                     CCPR3           equ	840	;# 
 18593   000348                     CCPR3L          equ	840	;# 
 18594   000349                     CCPR3H          equ	841	;# 
 18595   00034A                     CCP3CON         equ	842	;# 
 18596   00034B                     CCP3CAP         equ	843	;# 
 18597   00034C                     CCPTMRS0        equ	844	;# 
 18598   00034F                     CRCDATA         equ	847	;# 
 18599   00034F                     CRCDATAL        equ	847	;# 
 18600   000350                     CRCDATAH        equ	848	;# 
 18601   000351                     CRCDATAU        equ	849	;# 
 18602   000352                     CRCDATAT        equ	850	;# 
 18603   000353                     CRCOUT          equ	851	;# 
 18604   000353                     CRCSHFT         equ	851	;# 
 18605   000353                     CRCXOR          equ	851	;# 
 18606   000353                     CRCOUTL         equ	851	;# 
 18607   000353                     CRCSHFTL        equ	851	;# 
 18608   000353                     CRCSHIFTL       equ	851	;# 
 18609   000353                     CRCXORL         equ	851	;# 
 18610   000354                     CRCOUTH         equ	852	;# 
 18611   000354                     CRCSHFTH        equ	852	;# 
 18612   000354                     CRCSHIFTH       equ	852	;# 
 18613   000354                     CRCXORH         equ	852	;# 
 18614   000355                     CRCOUTU         equ	853	;# 
 18615   000355                     CRCSHFTU        equ	853	;# 
 18616   000355                     CRCSHIFTU       equ	853	;# 
 18617   000355                     CRCXORU         equ	853	;# 
 18618   000356                     CRCOUTT         equ	854	;# 
 18619   000356                     CRCSHFTT        equ	854	;# 
 18620   000356                     CRCSHIFTT       equ	854	;# 
 18621   000356                     CRCXORT         equ	854	;# 
 18622   000357                     CRCCON0         equ	855	;# 
 18623   000358                     CRCCON1         equ	856	;# 
 18624   000359                     CRCCON2         equ	857	;# 
 18625   00035A                     SCANLADR        equ	858	;# 
 18626   00035A                     SCANLADRL       equ	858	;# 
 18627   00035B                     SCANLADRH       equ	859	;# 
 18628   00035C                     SCANLADRU       equ	860	;# 
 18629   00035D                     SCANHADR        equ	861	;# 
 18630   00035D                     SCANHADRL       equ	861	;# 
 18631   00035E                     SCANHADRH       equ	862	;# 
 18632   00035F                     SCANHADRU       equ	863	;# 
 18633   000360                     SCANCON0        equ	864	;# 
 18634   000361                     SCANTRIG        equ	865	;# 
 18635   000362                     IPR0            equ	866	;# 
 18636   000363                     IPR1            equ	867	;# 
 18637   000364                     IPR2            equ	868	;# 
 18638   000365                     IPR3            equ	869	;# 
 18639   000366                     IPR4            equ	870	;# 
 18640   000367                     IPR5            equ	871	;# 
 18641   000368                     IPR6            equ	872	;# 
 18642   000369                     IPR7            equ	873	;# 
 18643   00036A                     IPR8            equ	874	;# 
 18644   00036B                     IPR9            equ	875	;# 
 18645   00036C                     IPR10           equ	876	;# 
 18646   00036D                     IPR11           equ	877	;# 
 18647   00036E                     IPR12           equ	878	;# 
 18648   00036F                     IPR13           equ	879	;# 
 18649   000370                     IPR14           equ	880	;# 
 18650   000371                     IPR15           equ	881	;# 
 18651   000373                     STATUS_CSHAD    equ	883	;# 
 18652   000374                     WREG_CSHAD      equ	884	;# 
 18653   000375                     BSR_CSHAD       equ	885	;# 
 18654   000376                     SHADCON         equ	886	;# 
 18655   000377                     STATUS_SHAD     equ	887	;# 
 18656   000378                     WREG_SHAD       equ	888	;# 
 18657   000379                     BSR_SHAD        equ	889	;# 
 18658   00037A                     PCLATH_SHAD     equ	890	;# 
 18659   00037B                     PCLATU_SHAD     equ	891	;# 
 18660   00037C                     FSR0SH          equ	892	;# 
 18661   00037C                     FSR0L_SHAD      equ	892	;# 
 18662   00037D                     FSR0H_SHAD      equ	893	;# 
 18663   00037E                     FSR1SH          equ	894	;# 
 18664   00037E                     FSR1L_SHAD      equ	894	;# 
 18665   00037F                     FSR1H_SHAD      equ	895	;# 
 18666   000380                     FSR2SH          equ	896	;# 
 18667   000380                     FSR2L_SHAD      equ	896	;# 
 18668   000381                     FSR2H_SHAD      equ	897	;# 
 18669   000382                     PRODSH          equ	898	;# 
 18670   000382                     PRODL_SHAD      equ	898	;# 
 18671   000383                     PRODH_SHAD      equ	899	;# 
 18672   000387                     TU16ACON0       equ	903	;# 
 18673   000388                     TU16ACON1       equ	904	;# 
 18674   000389                     TU16AHLT        equ	905	;# 
 18675   00038A                     TU16APS         equ	906	;# 
 18676   00038B                     TU16ATMR        equ	907	;# 
 18677   00038B                     TU16ACR         equ	907	;# 
 18678   00038B                     TU16ATMRL       equ	907	;# 
 18679   00038B                     TU16ACRL        equ	907	;# 
 18680   00038C                     TU16ATMRH       equ	908	;# 
 18681   00038C                     TU16ACRH        equ	908	;# 
 18682   00038D                     TU16APR         equ	909	;# 
 18683   00038D                     TU16APRL        equ	909	;# 
 18684   00038E                     TU16APRH        equ	910	;# 
 18685   00038F                     TU16ACLK        equ	911	;# 
 18686   000390                     TU16AERS        equ	912	;# 
 18687   000393                     TU16BCON0       equ	915	;# 
 18688   000394                     TU16BCON1       equ	916	;# 
 18689   000395                     TU16BHLT        equ	917	;# 
 18690   000396                     TU16BPS         equ	918	;# 
 18691   000397                     TU16BTMR        equ	919	;# 
 18692   000397                     TU16BCR         equ	919	;# 
 18693   000397                     TU16BTMRL       equ	919	;# 
 18694   000397                     TU16BCRL        equ	919	;# 
 18695   000398                     TU16BTMRH       equ	920	;# 
 18696   000398                     TU16BCRH        equ	920	;# 
 18697   000399                     TU16BPR         equ	921	;# 
 18698   000399                     TU16BPRL        equ	921	;# 
 18699   00039A                     TU16BPRH        equ	922	;# 
 18700   00039B                     TU16BCLK        equ	923	;# 
 18701   00039C                     TU16BERS        equ	924	;# 
 18702   0003BB                     TUCHAIN         equ	955	;# 
 18703   0003BC                     CWG1CLK         equ	956	;# 
 18704   0003BC                     CWG1CLKCON      equ	956	;# 
 18705   0003BD                     CWG1ISM         equ	957	;# 
 18706   0003BE                     CWG1DBR         equ	958	;# 
 18707   0003BF                     CWG1DBF         equ	959	;# 
 18708   0003C0                     CWG1CON0        equ	960	;# 
 18709   0003C1                     CWG1CON1        equ	961	;# 
 18710   0003C2                     CWG1AS0         equ	962	;# 
 18711   0003C3                     CWG1AS1         equ	963	;# 
 18712   0003C4                     CWG1STR         equ	964	;# 
 18713   0003C5                     CWG2CLK         equ	965	;# 
 18714   0003C5                     CWG2CLKCON      equ	965	;# 
 18715   0003C6                     CWG2ISM         equ	966	;# 
 18716   0003C7                     CWG2DBR         equ	967	;# 
 18717   0003C8                     CWG2DBF         equ	968	;# 
 18718   0003C9                     CWG2CON0        equ	969	;# 
 18719   0003CA                     CWG2CON1        equ	970	;# 
 18720   0003CB                     CWG2AS0         equ	971	;# 
 18721   0003CC                     CWG2AS1         equ	972	;# 
 18722   0003CD                     CWG2STR         equ	973	;# 
 18723   0003CE                     CWG3CLK         equ	974	;# 
 18724   0003CE                     CWG3CLKCON      equ	974	;# 
 18725   0003CF                     CWG3ISM         equ	975	;# 
 18726   0003D0                     CWG3DBR         equ	976	;# 
 18727   0003D1                     CWG3DBF         equ	977	;# 
 18728   0003D2                     CWG3CON0        equ	978	;# 
 18729   0003D3                     CWG3CON1        equ	979	;# 
 18730   0003D4                     CWG3AS0         equ	980	;# 
 18731   0003D5                     CWG3AS1         equ	981	;# 
 18732   0003D6                     CWG3STR         equ	982	;# 
 18733   0003D7                     FVRCON          equ	983	;# 
 18734   0003D8                     ADCPCON         equ	984	;# 
 18735   0003D8                     ADCP            equ	984	;# 
 18736   0003D9                     ADLTH           equ	985	;# 
 18737   0003D9                     ADLTHL          equ	985	;# 
 18738   0003DA                     ADLTHH          equ	986	;# 
 18739   0003DB                     ADUTH           equ	987	;# 
 18740   0003DB                     ADUTHL          equ	987	;# 
 18741   0003DC                     ADUTHH          equ	988	;# 
 18742   0003DD                     ADERR           equ	989	;# 
 18743   0003DD                     ADERRL          equ	989	;# 
 18744   0003DE                     ADERRH          equ	990	;# 
 18745   0003DF                     ADSTPT          equ	991	;# 
 18746   0003DF                     ADSTPTL         equ	991	;# 
 18747   0003E0                     ADSTPTH         equ	992	;# 
 18748   0003E1                     ADFLTR          equ	993	;# 
 18749   0003E1                     ADFLTRL         equ	993	;# 
 18750   0003E2                     ADFLTRH         equ	994	;# 
 18751   0003E3                     ADACC           equ	995	;# 
 18752   0003E3                     ADACCL          equ	995	;# 
 18753   0003E4                     ADACCH          equ	996	;# 
 18754   0003E5                     ADACCU          equ	997	;# 
 18755   0003E6                     ADCNT           equ	998	;# 
 18756   0003E7                     ADRPT           equ	999	;# 
 18757   0003E8                     ADPREV          equ	1000	;# 
 18758   0003E8                     ADPREVL         equ	1000	;# 
 18759   0003E9                     ADPREVH         equ	1001	;# 
 18760   0003EA                     ADRES           equ	1002	;# 
 18761   0003EA                     ADRESL          equ	1002	;# 
 18762   0003EB                     ADRESH          equ	1003	;# 
 18763   0003EC                     ADPCH           equ	1004	;# 
 18764   0003EE                     ADACQ           equ	1006	;# 
 18765   0003EE                     ADACQL          equ	1006	;# 
 18766   0003EF                     ADACQH          equ	1007	;# 
 18767   0003F0                     ADCAP           equ	1008	;# 
 18768   0003F1                     ADPRE           equ	1009	;# 
 18769   0003F1                     ADPREL          equ	1009	;# 
 18770   0003F2                     ADPREH          equ	1010	;# 
 18771   0003F3                     ADCON0          equ	1011	;# 
 18772   0003F4                     ADCON1          equ	1012	;# 
 18773   0003F5                     ADCON2          equ	1013	;# 
 18774   0003F6                     ADCON3          equ	1014	;# 
 18775   0003F7                     ADSTAT          equ	1015	;# 
 18776   0003F8                     ADREF           equ	1016	;# 
 18777   0003F9                     ADACT           equ	1017	;# 
 18778   0003FA                     ADCLK           equ	1018	;# 
 18779   0003FB                     ADCTX           equ	1019	;# 
 18780   0003FC                     ADCSEL1         equ	1020	;# 
 18781   0003FD                     ADCSEL2         equ	1021	;# 
 18782   0003FE                     ADCSEL3         equ	1022	;# 
 18783   0003FF                     ADCSEL4         equ	1023	;# 
 18784   000400                     ANSELA          equ	1024	;# 
 18785   000401                     WPUA            equ	1025	;# 
 18786   000402                     ODCONA          equ	1026	;# 
 18787   000403                     SLRCONA         equ	1027	;# 
 18788   000404                     INLVLA          equ	1028	;# 
 18789   000405                     IOCAP           equ	1029	;# 
 18790   000406                     IOCAN           equ	1030	;# 
 18791   000407                     IOCAF           equ	1031	;# 
 18792   000408                     ANSELB          equ	1032	;# 
 18793   000409                     WPUB            equ	1033	;# 
 18794   00040A                     ODCONB          equ	1034	;# 
 18795   00040B                     SLRCONB         equ	1035	;# 
 18796   00040C                     INLVLB          equ	1036	;# 
 18797   00040D                     IOCBP           equ	1037	;# 
 18798   00040E                     IOCBN           equ	1038	;# 
 18799   00040F                     IOCBF           equ	1039	;# 
 18800   000410                     ANSELC          equ	1040	;# 
 18801   000411                     WPUC            equ	1041	;# 
 18802   000412                     ODCONC          equ	1042	;# 
 18803   000413                     SLRCONC         equ	1043	;# 
 18804   000414                     INLVLC          equ	1044	;# 
 18805   000415                     IOCCP           equ	1045	;# 
 18806   000416                     IOCCN           equ	1046	;# 
 18807   000417                     IOCCF           equ	1047	;# 
 18808   000421                     WPUE            equ	1057	;# 
 18809   000424                     INLVLE          equ	1060	;# 
 18810   000425                     IOCEP           equ	1061	;# 
 18811   000426                     IOCEN           equ	1062	;# 
 18812   000427                     IOCEF           equ	1063	;# 
 18813   000440                     NCO1ACC         equ	1088	;# 
 18814   000440                     NCO1ACCL        equ	1088	;# 
 18815   000441                     NCO1ACCH        equ	1089	;# 
 18816   000442                     NCO1ACCU        equ	1090	;# 
 18817   000443                     NCO1INC         equ	1091	;# 
 18818   000443                     NCO1INCL        equ	1091	;# 
 18819   000444                     NCO1INCH        equ	1092	;# 
 18820   000445                     NCO1INCU        equ	1093	;# 
 18821   000446                     NCO1CON         equ	1094	;# 
 18822   000447                     NCO1CLK         equ	1095	;# 
 18823   000448                     NCO2ACC         equ	1096	;# 
 18824   000448                     NCO2ACCL        equ	1096	;# 
 18825   000449                     NCO2ACCH        equ	1097	;# 
 18826   00044A                     NCO2ACCU        equ	1098	;# 
 18827   00044B                     NCO2INC         equ	1099	;# 
 18828   00044B                     NCO2INCL        equ	1099	;# 
 18829   00044C                     NCO2INCH        equ	1100	;# 
 18830   00044D                     NCO2INCU        equ	1101	;# 
 18831   00044E                     NCO2CON         equ	1102	;# 
 18832   00044F                     NCO2CLK         equ	1103	;# 
 18833   000450                     NCO3ACC         equ	1104	;# 
 18834   000450                     NCO3ACCL        equ	1104	;# 
 18835   000451                     NCO3ACCH        equ	1105	;# 
 18836   000452                     NCO3ACCU        equ	1106	;# 
 18837   000453                     NCO3INC         equ	1107	;# 
 18838   000453                     NCO3INCL        equ	1107	;# 
 18839   000454                     NCO3INCH        equ	1108	;# 
 18840   000455                     NCO3INCU        equ	1109	;# 
 18841   000456                     NCO3CON         equ	1110	;# 
 18842   000457                     NCO3CLK         equ	1111	;# 
 18843   000458                     FSCMCON         equ	1112	;# 
 18844   000459                     IVTLOCK         equ	1113	;# 
 18845   00045A                     IVTAD           equ	1114	;# 
 18846   00045A                     IVTADL          equ	1114	;# 
 18847   00045B                     IVTADH          equ	1115	;# 
 18848   00045C                     IVTADU          equ	1116	;# 
 18849   00045D                     IVTBASE         equ	1117	;# 
 18850   00045D                     IVTBASEL        equ	1117	;# 
 18851   00045E                     IVTBASEH        equ	1118	;# 
 18852   00045F                     IVTBASEU        equ	1119	;# 
 18853   000460                     PWM1ERS         equ	1120	;# 
 18854   000461                     PWM1CLK         equ	1121	;# 
 18855   000462                     PWM1LDS         equ	1122	;# 
 18856   000463                     PWM1PR          equ	1123	;# 
 18857   000463                     PWM1PRL         equ	1123	;# 
 18858   000464                     PWM1PRH         equ	1124	;# 
 18859   000465                     PWM1CPRE        equ	1125	;# 
 18860   000466                     PWM1PIPOS       equ	1126	;# 
 18861   000467                     PWM1GIR         equ	1127	;# 
 18862   000468                     PWM1GIE         equ	1128	;# 
 18863   000469                     PWM1CON         equ	1129	;# 
 18864   00046A                     PWM1S1CFG       equ	1130	;# 
 18865   00046B                     PWM1S1P1        equ	1131	;# 
 18866   00046B                     PWM1S1P1L       equ	1131	;# 
 18867   00046C                     PWM1S1P1H       equ	1132	;# 
 18868   00046D                     PWM1S1P2        equ	1133	;# 
 18869   00046D                     PWM1S1P2L       equ	1133	;# 
 18870   00046E                     PWM1S1P2H       equ	1134	;# 
 18871   00046F                     PWM2ERS         equ	1135	;# 
 18872   000470                     PWM2CLK         equ	1136	;# 
 18873   000471                     PWM2LDS         equ	1137	;# 
 18874   000472                     PWM2PR          equ	1138	;# 
 18875   000472                     PWM2PRL         equ	1138	;# 
 18876   000473                     PWM2PRH         equ	1139	;# 
 18877   000474                     PWM2CPRE        equ	1140	;# 
 18878   000475                     PWM2PIPOS       equ	1141	;# 
 18879   000476                     PWM2GIR         equ	1142	;# 
 18880   000477                     PWM2GIE         equ	1143	;# 
 18881   000478                     PWM2CON         equ	1144	;# 
 18882   000479                     PWM2S1CFG       equ	1145	;# 
 18883   00047A                     PWM2S1P1        equ	1146	;# 
 18884   00047A                     PWM2S1P1L       equ	1146	;# 
 18885   00047B                     PWM2S1P1H       equ	1147	;# 
 18886   00047C                     PWM2S1P2        equ	1148	;# 
 18887   00047C                     PWM2S1P2L       equ	1148	;# 
 18888   00047D                     PWM2S1P2H       equ	1149	;# 
 18889   00047E                     PWM3ERS         equ	1150	;# 
 18890   00047F                     PWM3CLK         equ	1151	;# 
 18891   000480                     PWM3LDS         equ	1152	;# 
 18892   000481                     PWM3PR          equ	1153	;# 
 18893   000481                     PWM3PRL         equ	1153	;# 
 18894   000482                     PWM3PRH         equ	1154	;# 
 18895   000483                     PWM3CPRE        equ	1155	;# 
 18896   000484                     PWM3PIPOS       equ	1156	;# 
 18897   000485                     PWM3GIR         equ	1157	;# 
 18898   000486                     PWM3GIE         equ	1158	;# 
 18899   000487                     PWM3CON         equ	1159	;# 
 18900   000488                     PWM3S1CFG       equ	1160	;# 
 18901   000489                     PWM3S1P1        equ	1161	;# 
 18902   000489                     PWM3S1P1L       equ	1161	;# 
 18903   00048A                     PWM3S1P1H       equ	1162	;# 
 18904   00048B                     PWM3S1P2        equ	1163	;# 
 18905   00048B                     PWM3S1P2L       equ	1163	;# 
 18906   00048C                     PWM3S1P2H       equ	1164	;# 
 18907   00048D                     PWM4ERS         equ	1165	;# 
 18908   00048E                     PWM4CLK         equ	1166	;# 
 18909   00048F                     PWM4LDS         equ	1167	;# 
 18910   000490                     PWM4PR          equ	1168	;# 
 18911   000490                     PWM4PRL         equ	1168	;# 
 18912   000491                     PWM4PRH         equ	1169	;# 
 18913   000492                     PWM4CPRE        equ	1170	;# 
 18914   000493                     PWM4PIPOS       equ	1171	;# 
 18915   000494                     PWM4GIR         equ	1172	;# 
 18916   000495                     PWM4GIE         equ	1173	;# 
 18917   000496                     PWM4CON         equ	1174	;# 
 18918   000497                     PWM4S1CFG       equ	1175	;# 
 18919   000498                     PWM4S1P1        equ	1176	;# 
 18920   000498                     PWM4S1P1L       equ	1176	;# 
 18921   000499                     PWM4S1P1H       equ	1177	;# 
 18922   00049A                     PWM4S1P2        equ	1178	;# 
 18923   00049A                     PWM4S1P2L       equ	1178	;# 
 18924   00049B                     PWM4S1P2H       equ	1179	;# 
 18925   00049C                     PWMLOAD         equ	1180	;# 
 18926   00049D                     PWMEN           equ	1181	;# 
 18927   00049E                     PIE0            equ	1182	;# 
 18928   00049F                     PIE1            equ	1183	;# 
 18929   0004A0                     PIE2            equ	1184	;# 
 18930   0004A1                     PIE3            equ	1185	;# 
 18931   0004A2                     PIE4            equ	1186	;# 
 18932   0004A3                     PIE5            equ	1187	;# 
 18933   0004A4                     PIE6            equ	1188	;# 
 18934   0004A5                     PIE7            equ	1189	;# 
 18935   0004A6                     PIE8            equ	1190	;# 
 18936   0004A7                     PIE9            equ	1191	;# 
 18937   0004A8                     PIE10           equ	1192	;# 
 18938   0004A9                     PIE11           equ	1193	;# 
 18939   0004AA                     PIE12           equ	1194	;# 
 18940   0004AB                     PIE13           equ	1195	;# 
 18941   0004AC                     PIE14           equ	1196	;# 
 18942   0004AD                     PIE15           equ	1197	;# 
 18943   0004AE                     PIR0            equ	1198	;# 
 18944   0004AF                     PIR1            equ	1199	;# 
 18945   0004B0                     PIR2            equ	1200	;# 
 18946   0004B1                     PIR3            equ	1201	;# 
 18947   0004B2                     PIR4            equ	1202	;# 
 18948   0004B3                     PIR5            equ	1203	;# 
 18949   0004B4                     PIR6            equ	1204	;# 
 18950   0004B5                     PIR7            equ	1205	;# 
 18951   0004B6                     PIR8            equ	1206	;# 
 18952   0004B7                     PIR9            equ	1207	;# 
 18953   0004B8                     PIR10           equ	1208	;# 
 18954   0004B9                     PIR11           equ	1209	;# 
 18955   0004BA                     PIR12           equ	1210	;# 
 18956   0004BB                     PIR13           equ	1211	;# 
 18957   0004BC                     PIR14           equ	1212	;# 
 18958   0004BD                     PIR15           equ	1213	;# 
 18959   0004BE                     LATA            equ	1214	;# 
 18960   0004BF                     LATB            equ	1215	;# 
 18961   0004C0                     LATC            equ	1216	;# 
 18962   0004C6                     TRISA           equ	1222	;# 
 18963   0004C7                     TRISB           equ	1223	;# 
 18964   0004C8                     TRISC           equ	1224	;# 
 18965   0004CA                     TRISE           equ	1226	;# 
 18966   0004CE                     PORTA           equ	1230	;# 
 18967   0004CF                     PORTB           equ	1231	;# 
 18968   0004D0                     PORTC           equ	1232	;# 
 18969   0004D2                     PORTE           equ	1234	;# 
 18970   0004D6                     INTCON0         equ	1238	;# 
 18971   0004D7                     INTCON1         equ	1239	;# 
 18972   0004D8                     STATUS          equ	1240	;# 
 18973   0004D9                     FSR2            equ	1241	;# 
 18974   0004D9                     FSR2L           equ	1241	;# 
 18975   0004DA                     FSR2H           equ	1242	;# 
 18976   0004DB                     PLUSW2          equ	1243	;# 
 18977   0004DC                     PREINC2         equ	1244	;# 
 18978   0004DD                     POSTDEC2        equ	1245	;# 
 18979   0004DE                     POSTINC2        equ	1246	;# 
 18980   0004DF                     INDF2           equ	1247	;# 
 18981   0004E0                     BSR             equ	1248	;# 
 18982   0004E1                     FSR1            equ	1249	;# 
 18983   0004E1                     FSR1L           equ	1249	;# 
 18984   0004E2                     FSR1H           equ	1250	;# 
 18985   0004E3                     PLUSW1          equ	1251	;# 
 18986   0004E4                     PREINC1         equ	1252	;# 
 18987   0004E5                     POSTDEC1        equ	1253	;# 
 18988   0004E6                     POSTINC1        equ	1254	;# 
 18989   0004E7                     INDF1           equ	1255	;# 
 18990   0004E8                     WREG            equ	1256	;# 
 18991   0004E9                     FSR0            equ	1257	;# 
 18992   0004E9                     FSR0L           equ	1257	;# 
 18993   0004EA                     FSR0H           equ	1258	;# 
 18994   0004EB                     PLUSW0          equ	1259	;# 
 18995   0004EC                     PREINC0         equ	1260	;# 
 18996   0004ED                     POSTDEC0        equ	1261	;# 
 18997   0004EE                     POSTINC0        equ	1262	;# 
 18998   0004EF                     INDF0           equ	1263	;# 
 18999   0004F0                     PCON0           equ	1264	;# 
 19000   0004F1                     PCON1           equ	1265	;# 
 19001   0004F2                     CPUDOZE         equ	1266	;# 
 19002   0004F3                     PROD            equ	1267	;# 
 19003   0004F3                     PRODL           equ	1267	;# 
 19004   0004F4                     PRODH           equ	1268	;# 
 19005   0004F5                     TABLAT          equ	1269	;# 
 19006   0004F6                     TBLPTR          equ	1270	;# 
 19007   0004F6                     TBLPTRL         equ	1270	;# 
 19008   0004F7                     TBLPTRH         equ	1271	;# 
 19009   0004F8                     TBLPTRU         equ	1272	;# 
 19010   0004F9                     PCLAT           equ	1273	;# 
 19011   0004F9                     PCL             equ	1273	;# 
 19012   0004FA                     PCLATH          equ	1274	;# 
 19013   0004FB                     PCLATU          equ	1275	;# 
 19014   0004FC                     STKPTR          equ	1276	;# 
 19015   0004FD                     TOS             equ	1277	;# 
 19016   0004FD                     TOSL            equ	1277	;# 
 19017   0004FE                     TOSH            equ	1278	;# 
 19018   0004FF                     TOSU            equ	1279	;# 
 19019   3803FA                     	org	1018	;# 
 19020   3803FA  FF                 	db	255	;# 
 19021                           
 19022                           	psect	idataBANK5
 19023   008358                     __pidataBANK5:
 19024                           	callstack 0
 19025                           
 19026                           ;initializer for _flashBuffer
 19027   008358  00                 	db	0
 19028   008359  37                 	db	55
 19029                           
 19030                           	psect	mediumconst
 19031   00FE58                     __pmediumconst:
 19032                           	callstack 0
 19033   00FE58  00                 	db	0
 19034   00FE59                     _priorities:
 19035                           	callstack 0
 19036   00FE59  01                 	db	1
 19037   00FE5A  01                 	db	1
 19038   00FE5B  03                 	db	3
 19039   00FE5C  02                 	db	2
 19040   00FE5D  02                 	db	2
 19041   00FE5E  02                 	db	2
 19042   00FE5F  02                 	db	2
 19043   00FE60  03                 	db	3
 19044   00FE61  02                 	db	2
 19045   00FE62  02                 	db	2
 19046   00FE63  03                 	db	3
 19047   00FE64  01                 	db	1
 19048   00FE65  00                 	db	0
 19049   00FE66  00                 	db	0
 19050   00FE67  01                 	db	1
 19051   00FE68  01                 	db	1
 19052   00FE69  01                 	db	1
 19053   00FE6A  01                 	db	1
 19054   00FE6B  01                 	db	1
 19055   00FE6C  01                 	db	1
 19056   00FE6D  01                 	db	1
 19057   00FE6E  01                 	db	1
 19058   00FE6F  01                 	db	1
 19059   00FE70  01                 	db	1
 19060   00FE71  01                 	db	1
 19061   00FE72  01                 	db	1
 19062   00FE73  01                 	db	1
 19063   00FE74  01                 	db	1
 19064   00FE75  01                 	db	1
 19065   00FE76  01                 	db	1
 19066   00FE77  01                 	db	1
 19067   00FE78  01                 	db	1
 19068   00FE79  01                 	db	1
 19069   00FE7A  01                 	db	1
 19070   00FE7B  01                 	db	1
 19071   00FE7C  01                 	db	1
 19072   00FE7D  01                 	db	1
 19073   00FE7E  01                 	db	1
 19074   00FE7F  01                 	db	1
 19075   00FE80  01                 	db	1
 19076   00FE81  01                 	db	1
 19077   00FE82  01                 	db	1
 19078   00FE83  01                 	db	1
 19079   00FE84  01                 	db	1
 19080   00FE85  01                 	db	1
 19081   00FE86  01                 	db	1
 19082   00FE87  01                 	db	1
 19083   00FE88  01                 	db	1
 19084   00FE89  01                 	db	1
 19085   00FE8A  01                 	db	1
 19086   00FE8B  01                 	db	1
 19087   00FE8C  01                 	db	1
 19088   00FE8D  01                 	db	1
 19089   00FE8E  01                 	db	1
 19090   00FE8F  01                 	db	1
 19091   00FE90  01                 	db	1
 19092   00FE91  01                 	db	1
 19093   00FE92  01                 	db	1
 19094   00FE93  01                 	db	1
 19095   00FE94  01                 	db	1
 19096   00FE95  01                 	db	1
 19097   00FE96  01                 	db	1
 19098   00FE97  01                 	db	1
 19099   00FE98  00                 	db	0
 19100   00FE99  01                 	db	1
 19101   00FE9A  01                 	db	1
 19102   00FE9B  01                 	db	1
 19103   00FE9C  01                 	db	1
 19104   00FE9D  01                 	db	1
 19105   00FE9E  01                 	db	1
 19106   00FE9F  01                 	db	1
 19107   00FEA0  01                 	db	1
 19108   00FEA1  01                 	db	1
 19109   00FEA2  00                 	db	0
 19110   00FEA3  01                 	db	1
 19111   00FEA4  01                 	db	1
 19112   00FEA5  00                 	db	0
 19113   00FEA6  00                 	db	0
 19114   00FEA7  00                 	db	0
 19115   00FEA8  00                 	db	0
 19116   00FEA9  00                 	db	0
 19117   00FEAA  00                 	db	0
 19118   00FEAB  00                 	db	0
 19119   00FEAC  00                 	db	0
 19120   00FEAD  00                 	db	0
 19121   00FEAE  00                 	db	0
 19122   00FEAF  00                 	db	0
 19123   00FEB0  00                 	db	0
 19124   00FEB1  00                 	db	0
 19125   00FEB2  00                 	db	0
 19126   00FEB3  00                 	db	0
 19127   00FEB4  00                 	db	0
 19128   00FEB5  00                 	db	0
 19129   00FEB6  01                 	db	1
 19130   00FEB7  01                 	db	1
 19131   00FEB8  01                 	db	1
 19132   00FEB9  01                 	db	1
 19133   00FEBA  01                 	db	1
 19134   00FEBB  03                 	db	3
 19135   00FEBC  01                 	db	1
 19136   00FEBD  01                 	db	1
 19137   00FEBE  01                 	db	1
 19138   00FEBF  01                 	db	1
 19139   00FEC0  01                 	db	1
 19140   00FEC1  01                 	db	1
 19141   00FEC2  01                 	db	1
 19142   00FEC3  01                 	db	1
 19143   00FEC4  00                 	db	0
 19144   00FEC5  00                 	db	0
 19145   00FEC6  00                 	db	0
 19146   00FEC7  00                 	db	0
 19147   00FEC8  00                 	db	0
 19148   00FEC9  00                 	db	0
 19149   00FECA  00                 	db	0
 19150   00FECB  00                 	db	0
 19151   00FECC  01                 	db	1
 19152   00FECD  00                 	db	0
 19153   00FECE  01                 	db	1
 19154   00FECF  01                 	db	1
 19155   00FED0  01                 	db	1
 19156   00FED1  01                 	db	1
 19157   00FED2  01                 	db	1
 19158   00FED3  01                 	db	1
 19159   00FED4  00                 	db	0
 19160   00FED5  01                 	db	1
 19161   00FED6  01                 	db	1
 19162   00FED7  01                 	db	1
 19163   00FED8  01                 	db	1
 19164   00FED9  01                 	db	1
 19165   00FEDA  01                 	db	1
 19166   00FEDB  01                 	db	1
 19167   00FEDC  00                 	db	0
 19168   00FEDD  01                 	db	1
 19169   00FEDE  01                 	db	1
 19170   00FEDF  01                 	db	1
 19171   00FEE0  01                 	db	1
 19172   00FEE1  01                 	db	1
 19173   00FEE2  01                 	db	1
 19174   00FEE3  00                 	db	0
 19175   00FEE4  01                 	db	1
 19176   00FEE5  00                 	db	0
 19177   00FEE6  00                 	db	0
 19178   00FEE7  00                 	db	0
 19179   00FEE8  00                 	db	0
 19180   00FEE9  00                 	db	0
 19181   00FEEA  00                 	db	0
 19182   00FEEB  00                 	db	0
 19183   00FEEC  00                 	db	0
 19184   00FEED  00                 	db	0
 19185   00FEEE  00                 	db	0
 19186   00FEEF  00                 	db	0
 19187   00FEF0  00                 	db	0
 19188   00FEF1  00                 	db	0
 19189   00FEF2  00                 	db	0
 19190   00FEF3  00                 	db	0
 19191   00FEF4  00                 	db	0
 19192   00FEF5  01                 	db	1
 19193   00FEF6  01                 	db	1
 19194   00FEF7  01                 	db	1
 19195   00FEF8  01                 	db	1
 19196   00FEF9  01                 	db	1
 19197   00FEFA  01                 	db	1
 19198   00FEFB  01                 	db	1
 19199   00FEFC  01                 	db	1
 19200   00FEFD  01                 	db	1
 19201   00FEFE  01                 	db	1
 19202   00FEFF  01                 	db	1
 19203   00FF00  00                 	db	0
 19204   00FF01  00                 	db	0
 19205   00FF02  01                 	db	1
 19206   00FF03  01                 	db	1
 19207   00FF04  00                 	db	0
 19208   00FF05  00                 	db	0
 19209   00FF06  00                 	db	0
 19210   00FF07  00                 	db	0
 19211   00FF08  00                 	db	0
 19212   00FF09  00                 	db	0
 19213   00FF0A  00                 	db	0
 19214   00FF0B  00                 	db	0
 19215   00FF0C  01                 	db	1
 19216   00FF0D  00                 	db	0
 19217   00FF0E  00                 	db	0
 19218   00FF0F  01                 	db	1
 19219   00FF10  01                 	db	1
 19220   00FF11  01                 	db	1
 19221   00FF12  00                 	db	0
 19222   00FF13  00                 	db	0
 19223   00FF14  00                 	db	0
 19224   00FF15  01                 	db	1
 19225   00FF16  01                 	db	1
 19226   00FF17  01                 	db	1
 19227   00FF18  01                 	db	1
 19228   00FF19  01                 	db	1
 19229   00FF1A  01                 	db	1
 19230   00FF1B  01                 	db	1
 19231   00FF1C  00                 	db	0
 19232   00FF1D  01                 	db	1
 19233   00FF1E  01                 	db	1
 19234   00FF1F  01                 	db	1
 19235   00FF20  01                 	db	1
 19236   00FF21  01                 	db	1
 19237   00FF22  01                 	db	1
 19238   00FF23  01                 	db	1
 19239   00FF24  01                 	db	1
 19240   00FF25  00                 	db	0
 19241   00FF26  00                 	db	0
 19242   00FF27  00                 	db	0
 19243   00FF28  00                 	db	0
 19244   00FF29  00                 	db	0
 19245   00FF2A  00                 	db	0
 19246   00FF2B  01                 	db	1
 19247   00FF2C  01                 	db	1
 19248   00FF2D  00                 	db	0
 19249   00FF2E  00                 	db	0
 19250   00FF2F  01                 	db	1
 19251   00FF30  01                 	db	1
 19252   00FF31  01                 	db	1
 19253   00FF32  00                 	db	0
 19254   00FF33  00                 	db	0
 19255   00FF34  00                 	db	0
 19256   00FF35  01                 	db	1
 19257   00FF36  01                 	db	1
 19258   00FF37  00                 	db	0
 19259   00FF38  01                 	db	1
 19260   00FF39  01                 	db	1
 19261   00FF3A  01                 	db	1
 19262   00FF3B  00                 	db	0
 19263   00FF3C  00                 	db	0
 19264   00FF3D  01                 	db	1
 19265   00FF3E  00                 	db	0
 19266   00FF3F  01                 	db	1
 19267   00FF40  01                 	db	1
 19268   00FF41  01                 	db	1
 19269   00FF42  01                 	db	1
 19270   00FF43  01                 	db	1
 19271   00FF44  00                 	db	0
 19272   00FF45  00                 	db	0
 19273   00FF46  00                 	db	0
 19274   00FF47  00                 	db	0
 19275   00FF48  00                 	db	0
 19276   00FF49  00                 	db	0
 19277   00FF4A  00                 	db	0
 19278   00FF4B  00                 	db	0
 19279   00FF4C  00                 	db	0
 19280   00FF4D  00                 	db	0
 19281   00FF4E  00                 	db	0
 19282   00FF4F  00                 	db	0
 19283   00FF50  00                 	db	0
 19284   00FF51  00                 	db	0
 19285   00FF52  00                 	db	0
 19286   00FF53  01                 	db	1
 19287   00FF54  00                 	db	0
 19288   00FF55  00                 	db	0
 19289   00FF56  00                 	db	0
 19290   00FF57  00                 	db	0
 19291   00FF58  00                 	db	0
 19292   00FF59                     __end_of_priorities:
 19293                           	callstack 0
 19294   00FF59                     _defaultColours:
 19295                           	callstack 0
 19296   00FF59  00                 	db	0
 19297   00FF5A  00                 	db	0
 19298   00FF5B  00                 	db	0
 19299   00FF5C  07                 	db	7
 19300   00FF5D  07                 	db	7
 19301   00FF5E  07                 	db	7
 19302   00FF5F  07                 	db	7
 19303   00FF60  00                 	db	0
 19304   00FF61  00                 	db	0
 19305   00FF62  00                 	db	0
 19306   00FF63  07                 	db	7
 19307   00FF64  00                 	db	0
 19308   00FF65  00                 	db	0
 19309   00FF66  00                 	db	0
 19310   00FF67  07                 	db	7
 19311   00FF68  3F                 	db	63
 19312   00FF69  1F                 	db	31
 19313   00FF6A  00                 	db	0
 19314   00FF6B  27                 	db	39
 19315   00FF6C  00                 	db	0
 19316   00FF6D  27                 	db	39
 19317   00FF6E  00                 	db	0
 19318   00FF6F  27                 	db	39
 19319   00FF70  27                 	db	39
 19320   00FF71  0F                 	db	15
 19321   00FF72  0F                 	db	15
 19322   00FF73  0F                 	db	15
 19323   00FF74  FF                 	db	255
 19324   00FF75  00                 	db	0
 19325   00FF76  00                 	db	0
 19326   00FF77  00                 	db	0
 19327   00FF78  FF                 	db	255
 19328   00FF79  00                 	db	0
 19329   00FF7A  00                 	db	0
 19330   00FF7B  00                 	db	0
 19331   00FF7C  FF                 	db	255
 19332   00FF7D  FF                 	db	255
 19333   00FF7E  FF                 	db	255
 19334   00FF7F  00                 	db	0
 19335   00FF80  FF                 	db	255
 19336   00FF81  00                 	db	0
 19337   00FF82  FF                 	db	255
 19338   00FF83  00                 	db	0
 19339   00FF84  FF                 	db	255
 19340   00FF85  FF                 	db	255
 19341   00FF86  FF                 	db	255
 19342   00FF87  FF                 	db	255
 19343   00FF88  FF                 	db	255
 19344   00FF89                     __end_of_defaultColours:
 19345                           	callstack 0
 19346   000820                     _paramBlock_absaddr set	2080
 19347   00FF89                     _services:
 19348                           	callstack 0
 19349   00FF89  EB                 	db	low _canService
 19350   00FF8A  FF                 	db	high _canService
 19351   00FF8B  DD                 	db	low _mnsService
 19352   00FF8C  FF                 	db	high _mnsService
 19353   00FF8D  CF                 	db	low _nvService
 19354   00FF8E  FF                 	db	high _nvService
 19355   00FF8F  C1                 	db	low _bootService
 19356   00FF90  FF                 	db	high _bootService
 19357   00FF91  B3                 	db	low _eventTeachService
 19358   00FF92  FF                 	db	high _eventTeachService
 19359   00FF93  A5                 	db	low _eventConsumerService
 19360   00FF94  FF                 	db	high _eventConsumerService
 19361   00FF95                     __end_of_services:
 19362                           	callstack 0
 19363   00FF95                     _bl_version:
 19364                           	callstack 0
 19365   00FF95  42                 	db	66
 19366   00FF96  4C                 	db	76
 19367   00FF97  5F                 	db	95
 19368   00FF98  56                 	db	86
 19369   00FF99  45                 	db	69
 19370   00FF9A  52                 	db	82
 19371   00FF9B  53                 	db	83
 19372   00FF9C  49                 	db	73
 19373   00FF9D  4F                 	db	79
 19374   00FF9E  4E                 	db	78
 19375   00FF9F  3D                 	db	61
 19376   00FFA0                     __end_of_bl_version:
 19377                           	callstack 0
 19378   000848                     _name_absaddr   set	2120
 19379   00FFA0                     _canPri:
 19380                           	callstack 0
 19381   00FFA0  0B                 	db	11
 19382   00FFA1  0A                 	db	10
 19383   00FFA2  09                 	db	9
 19384   00FFA3  08                 	db	8
 19385   00FFA4  00                 	db	0
 19386   00FFA5                     __end_of_canPri:
 19387                           	callstack 0
 19388   00FFA5                     _eventConsumerService:
 19389                           	callstack 0
 19390   00FFA5  06                 	db	6
 19391   00FFA6  02                 	db	2
 19392   00FFA7  00                 	db	0
 19393   00FFA8  00                 	db	0
 19394   00FFA9  00                 	db	low _consumerPowerUp
 19395   00FFAA  7E                 	db	high _consumerPowerUp
 19396   00FFAB  B8                 	db	low _consumerProcessMessage
 19397   00FFAC  3C                 	db	high _consumerProcessMessage
 19398   00FFAD  00                 	db	0
 19399   00FFAE  00                 	db	0
 19400   00FFAF  4C                 	db	low _consumerEsdData
 19401   00FFB0  82                 	db	high _consumerEsdData
 19402   00FFB1  CC                 	db	low _consumerGetDiagnostic
 19403   00FFB2  7F                 	db	high _consumerGetDiagnostic
 19404   00FFB3                     __end_of_eventConsumerService:
 19405                           	callstack 0
 19406   00FFB3                     _eventTeachService:
 19407                           	callstack 0
 19408   00FFB3  04                 	db	4
 19409   00FFB4  01                 	db	1
 19410   00FFB5  2E                 	db	low _teachFactoryReset
 19411   00FFB6  83                 	db	high _teachFactoryReset
 19412   00FFB7  88                 	db	low _teachPowerUp
 19413   00FFB8  7D                 	db	high _teachPowerUp
 19414   00FFB9  F8                 	db	low _teachProcessMessage
 19415   00FFBA  16                 	db	high _teachProcessMessage
 19416   00FFBB  00                 	db	0
 19417   00FFBC  00                 	db	0
 19418   00FFBD  3C                 	db	low _teachGetESDdata
 19419   00FFBE  7F                 	db	high _teachGetESDdata
 19420   00FFBF  FC                 	db	low _teachGetDiagnostic
 19421   00FFC0  7F                 	db	high _teachGetDiagnostic
 19422   00FFC1                     __end_of_eventTeachService:
 19423                           	callstack 0
 19424   00FFC1                     _bootService:
 19425                           	callstack 0
 19426   00FFC1  0A                 	db	10
 19427   00FFC2  03                 	db	3
 19428   00FFC3  00                 	db	0
 19429   00FFC4  00                 	db	0
 19430   00FFC5  FC                 	db	low _bootPowerUp
 19431   00FFC6  5B                 	db	high _bootPowerUp
 19432   00FFC7  9A                 	db	low _bootProcessMessage
 19433   00FFC8  6B                 	db	high _bootProcessMessage
 19434   00FFC9  00                 	db	0
 19435   00FFCA  00                 	db	0
 19436   00FFCB  D4                 	db	low _bootEsdData
 19437   00FFCC  7E                 	db	high _bootEsdData
 19438   00FFCD  00                 	db	0
 19439   00FFCE  00                 	db	0
 19440   00FFCF                     __end_of_bootService:
 19441                           	callstack 0
 19442   00FFCF                     _nvService:
 19443                           	callstack 0
 19444   00FFCF  02                 	db	2
 19445   00FFD0  02                 	db	2
 19446   00FFD1  48                 	db	low _nvFactoryReset
 19447   00FFD2  7D                 	db	high _nvFactoryReset
 19448   00FFD3  C6                 	db	low _nvPowerUp
 19449   00FFD4  7D                 	db	high _nvPowerUp
 19450   00FFD5  98                 	db	low _nvProcessMessage
 19451   00FFD6  32                 	db	high _nvProcessMessage
 19452   00FFD7  00                 	db	0
 19453   00FFD8  00                 	db	0
 19454   00FFD9  CA                 	db	low _nvGetESDdata
 19455   00FFDA  81                 	db	high _nvGetESDdata
 19456   00FFDB  6C                 	db	low _nvGetDiagnostic
 19457   00FFDC  7F                 	db	high _nvGetDiagnostic
 19458   00FFDD                     __end_of_nvService:
 19459                           	callstack 0
 19460   00FFDD                     _mnsService:
 19461                           	callstack 0
 19462   00FFDD  01                 	db	1
 19463   00FFDE  02                 	db	2
 19464   00FFDF  26                 	db	low _mnsFactoryReset
 19465   00FFE0  76                 	db	high _mnsFactoryReset
 19466   00FFE1  16                 	db	low _mnsPowerUp
 19467   00FFE2  4F                 	db	high _mnsPowerUp
 19468   00FFE3  06                 	db	low _mnsProcessMessage
 19469   00FFE4  0A                 	db	high _mnsProcessMessage
 19470   00FFE5  00                 	db	low _mnsPoll
 19471   00FFE6  26                 	db	high _mnsPoll
 19472   00FFE7  00                 	db	0
 19473   00FFE8  00                 	db	0
 19474   00FFE9  9C                 	db	low _mnsGetDiagnostic
 19475   00FFEA  7F                 	db	high _mnsGetDiagnostic
 19476   00FFEB                     __end_of_mnsService:
 19477                           	callstack 0
 19478   00FFEB                     _canService:
 19479                           	callstack 0
 19480   00FFEB  03                 	db	3
 19481   00FFEC  02                 	db	2
 19482   00FFED  68                 	db	low _canFactoryReset
 19483   00FFEE  82                 	db	high _canFactoryReset
 19484   00FFEF  4A                 	db	low _canPowerUp
 19485   00FFF0  4C                 	db	high _canPowerUp
 19486   00FFF1  E4                 	db	low _canProcessMessage
 19487   00FFF2  5C                 	db	high _canProcessMessage
 19488   00FFF3  28                 	db	low _canPoll
 19489   00FFF4  83                 	db	high _canPoll
 19490   00FFF5  EC                 	db	low _canEsdData
 19491   00FFF6  81                 	db	high _canEsdData
 19492   00FFF7  F4                 	db	low _canGetDiagnostic
 19493   00FFF8  65                 	db	high _canGetDiagnostic
 19494   00FFF9                     __end_of_canService:
 19495                           	callstack 0
 19496   00FFF9                     _canTransport:
 19497                           	callstack 0
 19498   00FFF9  9E                 	db	low _canSendMessage
 19499   00FFFA  2A                 	db	high _canSendMessage
 19500   00FFFB  3E                 	db	low _canReceiveMessage
 19501   00FFFC  42                 	db	high _canReceiveMessage
 19502   00FFFD  E0                 	db	low _canWaitForTxQueueToDrain
 19503   00FFFE  82                 	db	high _canWaitForTxQueueToDrain
 19504   00FFFF                     __end_of_canTransport:
 19505                           	callstack 0
 19506   000820                     _paramBlock_absaddr set	2080
 19507   00FFFF  00                 	db	0	; dummy byte at the end
 19508   00FE58                     __smallconst    set	__pmediumconst
 19509   00FE58                     __mediumconst   set	__pmediumconst
 19510   000003                     __activetblptr  equ	3
 19511                           
 19512                           	psect	_paramBlock_text
 19513   000820                     __p_paramBlock_text:
 19514                           	callstack 0
 19515   000820                     _paramBlock:
 19516                           	callstack 0
 19517   000820  A5                 	db	165
 19518   000821  61                 	db	97
 19519   000822  FC                 	db	252
 19520   000823  FF                 	db	255
 19521   000824  FC                 	db	252
 19522   000825  31                 	db	49
 19523   000826  01                 	db	1
 19524   000827  09                 	db	9
 19525   000828  17                 	db	23
 19526   000829  01                 	db	1
 19527   00082A  00                 	db	0
 19528   00082B  08                 	db	8
 19529   00082C  00                 	db	0
 19530   00082D  00                 	db	0
 19531   00082E  00                 	db	0
 19532   00082F  00                 	db	0
 19533   000830  00                 	db	0
 19534   000831  00                 	db	0
 19535   000832  01                 	db	1
 19536   000833  01                 	db	1
 19537   000834  00                 	db	0
 19538   000835  00                 	db	0
 19539   000836  00                 	db	0
 19540   000837  00                 	db	0
 19541   000838  14                 	db	20
 19542   000839  00                 	db	0
 19543   00083A  48                 	db	72
 19544   00083B  08                 	db	8
 19545   00083C  00                 	db	0
 19546   00083D  00                 	db	0
 19547   00083E  BE                 	db	190
 19548   00083F  04                 	db	4
 19549   000840                     __end_of_paramBlock:
 19550                           	callstack 0
 19551   000848                     _name_absaddr   set	2120
 19552                           
 19553                           	psect	_name_text
 19554   000848                     __p_name_text:
 19555                           	callstack 0
 19556   000848                     _name:
 19557                           	callstack 0
 19558   000848  41                 	db	65
 19559   000849  52                 	db	82
 19560   00084A  47                 	db	71
 19561   00084B  42                 	db	66
 19562   00084C  20                 	db	32
 19563   00084D  20                 	db	32
 19564   00084E  20                 	db	32
 19565   00084F  00                 	db	0
 19566   000850                     __end_of_name:
 19567                           	callstack 0
 19568   000043                     _NVMADR         set	67
 19569   000082                     _SPI1TCNT       set	130
 19570   0000AF                     _OSCCON3bits    set	175
 19571   0000AD                     _OSCCON1bits    set	173
 19572   000042                     _NVMLOCK        set	66
 19573   000046                     _NVMDATL        set	70
 19574   000043                     _NVMADRL        set	67
 19575   000044                     _NVMADRH        set	68
 19576   000045                     _NVMADRU        set	69
 19577   000040                     _NVMCON0bits    set	64
 19578   000041                     _NVMCON1bits    set	65
 19579   000081                     _SPI1TXB        set	129
 19580   00006A                     _MD1CON0bits    set	106
 19581   00006C                     _MD1SRC         set	108
 19582   00006D                     _MD1CARL        set	109
 19583   00006E                     _MD1CARH        set	110
 19584   00006B                     _MD1CON1        set	107
 19585   00006A                     _MD1CON0        set	106
 19586   0000DF                     _CLCnGLS3       set	223
 19587   0000DE                     _CLCnGLS2       set	222
 19588   0000DD                     _CLCnGLS1       set	221
 19589   0000DC                     _CLCnGLS0       set	220
 19590   0000DB                     _CLCnSEL3       set	219
 19591   0000DA                     _CLCnSEL2       set	218
 19592   0000D9                     _CLCnSEL1       set	217
 19593   0000D8                     _CLCnSEL0       set	216
 19594   0000D7                     _CLCnPOL        set	215
 19595   0000D6                     _CLCnCON        set	214
 19596   0000D5                     _CLCSELECT      set	213
 19597   00008A                     _SPI1INTF       set	138
 19598   000089                     _SPI1BAUDbits   set	137
 19599   00008C                     _SPI1CLKbits    set	140
 19600   000086                     _SPI1CON2bits   set	134
 19601   000085                     _SPI1CON1bits   set	133
 19602   000088                     _SPI1TWIDTHbits set	136
 19603   000084                     _SPI1CON0bits   set	132
 19604   000158                     _C1TXQUA        set	344
 19605   00017C                     _C1FIFOUA3      set	380
 19606   000170                     _C1FIFOUA2      set	368
 19607   000164                     _C1FIFOUA1      set	356
 19608   00014C                     _C1FIFOBA       set	332
 19609   000102                     _C1CONUbits     set	258
 19610   000103                     _C1CONTbits     set	259
 19611   000175                     _C1FIFOCON3Hbits set	373
 19612   000179                     _C1FIFOSTA3Hbits set	377
 19613   00016D                     _C1FIFOSTA2Hbits set	365
 19614   00016C                     _C1FIFOSTA2Lbits set	364
 19615   000138                     _C1BDIAG0Lbits  set	312
 19616   000139                     _C1BDIAG0Hbits  set	313
 19617   000136                     _C1TRECU        set	310
 19618   000160                     _C1FIFOSTA1Lbits set	352
 19619   00015D                     _C1FIFOCON1Hbits set	349
 19620   00011D                     _C1INTHbits     set	285
 19621   000178                     _C1FIFOSTA3Lbits set	376
 19622   00011F                     _C1INTTbits     set	287
 19623   00011E                     _C1INTUbits     set	286
 19624   000180                     _C1FLTCON0L     set	384
 19625   000193                     _C1MASK0T       set	403
 19626   000192                     _C1MASK0U       set	402
 19627   000191                     _C1MASK0H       set	401
 19628   000190                     _C1MASK0L       set	400
 19629   00018F                     _C1FLTOBJ0T     set	399
 19630   00018E                     _C1FLTOBJ0U     set	398
 19631   00018D                     _C1FLTOBJ0H     set	397
 19632   00018C                     _C1FLTOBJ0L     set	396
 19633   000177                     _C1FIFOCON3T    set	375
 19634   000176                     _C1FIFOCON3U    set	374
 19635   000175                     _C1FIFOCON3H    set	373
 19636   000174                     _C1FIFOCON3L    set	372
 19637   00016B                     _C1FIFOCON2T    set	363
 19638   00016A                     _C1FIFOCON2U    set	362
 19639   000169                     _C1FIFOCON2H    set	361
 19640   000168                     _C1FIFOCON2L    set	360
 19641   00015F                     _C1FIFOCON1T    set	351
 19642   00015E                     _C1FIFOCON1U    set	350
 19643   00015D                     _C1FIFOCON1H    set	349
 19644   00015C                     _C1FIFOCON1L    set	348
 19645   000153                     _C1TXQCONT      set	339
 19646   000152                     _C1TXQCONU      set	338
 19647   000151                     _C1TXQCONH      set	337
 19648   000150                     _C1TXQCONL      set	336
 19649   000107                     _C1NBTCFGT      set	263
 19650   000106                     _C1NBTCFGU      set	262
 19651   000105                     _C1NBTCFGH      set	261
 19652   000104                     _C1NBTCFGL      set	260
 19653   000103                     _C1CONT         set	259
 19654   000102                     _C1CONU         set	258
 19655   000101                     _C1CONH         set	257
 19656   000100                     _C1CONL         set	256
 19657   000101                     _C1CONHbits     set	257
 19658   00023D                     _CANRXPPS       set	573
 19659   00020B                     _RB2PPS         set	523
 19660   000217                     _RC6PPS         set	535
 19661   000216                     _RC5PPS         set	534
 19662   000215                     _RC4PPS         set	533
 19663   000214                     _RC3PPS         set	532
 19664   000213                     _RC2PPS         set	531
 19665   000212                     _RC1PPS         set	530
 19666   000211                     _RC0PPS         set	529
 19667   000318                     _TMR0L          set	792
 19668   000319                     _TMR0H          set	793
 19669   00031A                     _T0CON0bits     set	794
 19670   00031B                     _T0CON1bits     set	795
 19671   000362                     _IPR0bits       set	866
 19672   000367                     _IPR5           set	871
 19673   000330                     _T4CONbits      set	816
 19674   000324                     _T2CONbits      set	804
 19675   00032F                     _T4PR           set	815
 19676   000333                     _T4RST          set	819
 19677   000331                     _T4HLT          set	817
 19678   000332                     _T4CLKCON       set	818
 19679   000330                     _T4CON          set	816
 19680   000323                     _T2PR           set	803
 19681   000327                     _T2RST          set	807
 19682   000325                     _T2HLT          set	805
 19683   000326                     _T2CLKCON       set	806
 19684   000324                     _T2CON          set	804
 19685   001B2F                     _TMR0IP         set	6959
 19686   00250F                     _TMR0IE         set	9487
 19687   00258F                     _TMR0IF         set	9615
 19688   000459                     _IVTLOCKbits    set	1113
 19689   000459                     _IVTLOCK        set	1113
 19690   00045D                     _IVTBASEL       set	1117
 19691   00045E                     _IVTBASEH       set	1118
 19692   00045F                     _IVTBASEU       set	1119
 19693   0004BF                     _LATBbits       set	1215
 19694   0004C6                     _TRISAbits      set	1222
 19695   0004F5                     _TABLAT         set	1269
 19696   0004F6                     _TBLPTRL        set	1270
 19697   0004F7                     _TBLPTRH        set	1271
 19698   0004F8                     _TBLPTRU        set	1272
 19699   0004CE                     _PORTAbits      set	1230
 19700   00049E                     _PIE0bits       set	1182
 19701   0004AE                     _PIR0bits       set	1198
 19702   0004C7                     _TRISBbits      set	1223
 19703   0004C0                     _LATCbits       set	1216
 19704   0004B1                     _PIR3bits       set	1201
 19705   0004C8                     _TRISC          set	1224
 19706   0004D6                     _INTCON0bits    set	1238
 19707   000410                     _ANSELC         set	1040
 19708   000408                     _ANSELB         set	1032
 19709   000400                     _ANSELA         set	1024
 19710                           
 19711                           ; #config settings
 19712                           
 19713                           	psect	cinit
 19714   007286                     __pcinit:
 19715                           	callstack 0
 19716   007286                     start_initialization:
 19717                           	callstack 0
 19718   007286                     __initialization:
 19719                           	callstack 0
 19720                           
 19721                           ; Initialize objects allocated to BANK5 (2 bytes)
 19722                           ; load TBLPTR registers with __pidataBANK5
 19723   007286  0E58               	movlw	low __pidataBANK5
 19724   007288  6EF6               	movwf	tblptrl,c
 19725   00728A  0E83               	movlw	high __pidataBANK5
 19726   00728C  6EF7               	movwf	tblptrh,c
 19727   00728E  0E00               	movlw	low (__pidataBANK5 shr (0+16))
 19728   007290  6EF8               	movwf	tblptru,c
 19729   007292  0009               	tblrd		*+	;fetch initializer
 19730   007294  C4F5 F5FD          	movff	tablat,__pdataBANK5
 19731   007298  0009               	tblrd		*+	;fetch initializer
 19732   00729A  C4F5 F5FE          	movff	tablat,__pdataBANK5+1
 19733                           
 19734                           ; Clear objects allocated to BIGRAM (1405 bytes)
 19735   00729E  EE02  F0FC         	lfsr	0,__pbssBIGRAM
 19736   0072A2  EE11 F17D          	lfsr	1,1405
 19737   0072A6                     clear_0:
 19738   0072A6  6AEE               	clrf	postinc0,c
 19739   0072A8  50E5               	movf	postdec1,w,c
 19740   0072AA  50E1               	movf	fsr1l,w,c
 19741   0072AC  E1FC               	bnz	clear_0
 19742   0072AE  50E2               	movf	fsr1h,w,c
 19743   0072B0  E1FA               	bnz	clear_0
 19744                           
 19745                           ; Clear objects allocated to BANK8 (252 bytes)
 19746   0072B2  EE02  F000         	lfsr	0,__pbssBANK8
 19747   0072B6  0EFC               	movlw	252
 19748   0072B8                     clear_1:
 19749   0072B8  6AEE               	clrf	postinc0,c
 19750   0072BA  06E8               	decf	wreg,f,c
 19751   0072BC  E1FD               	bnz	clear_1
 19752                           
 19753                           ; Clear objects allocated to BANK7 (255 bytes)
 19754   0072BE  EE01  F300         	lfsr	0,__pbssBANK7
 19755   0072C2  EE10 F0FF          	lfsr	1,255
 19756   0072C6                     clear_2:
 19757   0072C6  6AEE               	clrf	postinc0,c
 19758   0072C8  50E5               	movf	postdec1,w,c
 19759   0072CA  50E1               	movf	fsr1l,w,c
 19760   0072CC  E1FC               	bnz	clear_2
 19761   0072CE  50E2               	movf	fsr1h,w,c
 19762   0072D0  E1FA               	bnz	clear_2
 19763                           
 19764                           ; Clear objects allocated to BANK6 (189 bytes)
 19765   0072D2  EE01  F200         	lfsr	0,__pbssBANK6
 19766   0072D6  0EBD               	movlw	189
 19767   0072D8                     clear_3:
 19768   0072D8  6AEE               	clrf	postinc0,c
 19769   0072DA  06E8               	decf	wreg,f,c
 19770   0072DC  E1FD               	bnz	clear_3
 19771                           
 19772                           ; Clear objects allocated to BANK5 (112 bytes)
 19773   0072DE  EE01  F160         	lfsr	0,__pbssBANK5
 19774   0072E2  0E70               	movlw	112
 19775   0072E4                     clear_4:
 19776   0072E4  6AEE               	clrf	postinc0,c
 19777   0072E6  06E8               	decf	wreg,f,c
 19778   0072E8  E1FD               	bnz	clear_4
 19779                           
 19780                           ;
 19781                           ; Setup IVTBASE
 19782                           ;
 19783   00045D                     IVTBASEL        equ	1117
 19784   00045E                     IVTBASEH        equ	1118
 19785   00045F                     IVTBASEU        equ	1119
 19786   0072EA  0104               	movlb	4
 19787   0072EC  0E00               	movlw	(ivt0x900_base shr 0)& (0+255)
 19788   0072EE  6F5D               	movwf	93,b
 19789   0072F0  0E09               	movlw	(ivt0x900_base shr (0+8))& (0+255)
 19790   0072F2  6F5E               	movwf	94,b
 19791   0072F4  0E00               	movlw	(ivt0x900_base shr (0+16))& (0+255)
 19792   0072F6  6F5F               	movwf	95,b
 19793   0072F8                     end_of_initialization:
 19794                           	callstack 0
 19795   0072F8                     __end_of__initialization:
 19796                           	callstack 0
 19797   0072F8  0100               	movlb	0
 19798   0072FA  EF94  F031         	goto	_main	;jump to C main() function
 19799                           
 19800                           	psect	bssBANK5
 19801   000560                     __pbssBANK5:
 19802                           	callstack 0
 19803   000560                     _timedResponseTime:
 19804                           	callstack 0
 19805   000560                     	ds	4
 19806   000564                     _ledTimer:
 19807                           	callstack 0
 19808   000564                     	ds	4
 19809   000568                     _uptimeTimer:
 19810                           	callstack 0
 19811   000568                     	ds	4
 19812   00056C                     _heartbeatTimer:
 19813                           	callstack 0
 19814   00056C                     	ds	4
 19815   000570                     _pbTimer:
 19816                           	callstack 0
 19817   000570                     	ds	4
 19818   000574                     _enumerationStartTime:
 19819                           	callstack 0
 19820   000574                     	ds	4
 19821   000578                     _subtestTime:
 19822                           	callstack 0
 19823   000578                     	ds	4
 19824   00057C                     _testTime:
 19825                           	callstack 0
 19826   00057C                     	ds	4
 19827   000580                     _flashTime:
 19828                           	callstack 0
 19829   000580                     	ds	4
 19830   000584                     _flashBlock:
 19831                           	callstack 0
 19832   000584                     	ds	3
 19833   000587                     _timedResponseCallback:
 19834                           	callstack 0
 19835   000587                     	ds	2
 19836   000589                     _flashCounter:
 19837                           	callstack 0
 19838   000589                     	ds	2
 19839   00058B                     _ledState:
 19840                           	callstack 0
 19841   00058B                     	ds	2
 19842   00058D                     _previousNN:
 19843                           	callstack 0
 19844   00058D                     	ds	2
 19845   00058F                     _nn:
 19846                           	callstack 0
 19847   00058F                     	ds	2
 19848   000591                     _transport:
 19849                           	callstack 0
 19850   000591                     	ds	2
 19851   000593                     _timedResponseDelay:
 19852                           	callstack 0
 19853   000593                     	ds	1
 19854   000594                     _eeBootFlag:
 19855                           	callstack 0
 19856   000594                     	ds	1
 19857   000595                     _timedResponseStep:
 19858                           	callstack 0
 19859   000595                     	ds	1
 19860   000596                     _timedResponseType:
 19861                           	callstack 0
 19862   000596                     	ds	1
 19863   000597                     _timedResponseAllServicesFlag:
 19864                           	callstack 0
 19865   000597                     	ds	1
 19866   000598                     _timedResponseServiceIndex:
 19867                           	callstack 0
 19868   000598                     	ds	1
 19869   000599                     _timerExtension2:
 19870                           	callstack 0
 19871   000599                     	ds	1
 19872   00059A                     _timerExtension1:
 19873                           	callstack 0
 19874   00059A                     	ds	1
 19875   00059B                     _flashFlags:
 19876                           	callstack 0
 19877   00059B                     	ds	1
 19878   00059C                     _heartbeatSequence:
 19879                           	callstack 0
 19880   00059C                     	ds	1
 19881   00059D                     _pbWasPushed:
 19882                           	callstack 0
 19883   00059D                     	ds	1
 19884   00059E                     _setupModePreviousMode:
 19885                           	callstack 0
 19886   00059E                     	ds	1
 19887   00059F                     _last_mode_flags:
 19888                           	callstack 0
 19889   00059F                     	ds	1
 19890   0005A0                     _last_mode_state:
 19891                           	callstack 0
 19892   0005A0                     	ds	1
 19893   0005A1                     _mode_state:
 19894                           	callstack 0
 19895   0005A1                     	ds	1
 19896   0005A2                     _timedResponseOpcode:
 19897                           	callstack 0
 19898   0005A2                     	ds	1
 19899   0005A3                     _errno:
 19900                           	callstack 0
 19901   0005A3                     	ds	1
 19902   0005A4                     _mode_flags:
 19903                           	callstack 0
 19904   0005A4                     	ds	1
 19905   0005A5                     _enumerationState:
 19906                           	callstack 0
 19907   0005A5                     	ds	1
 19908   0005A6                     _EnumerationState:
 19909                           	callstack 0
 19910   0005A6                     	ds	1
 19911   0005A7                     _canTransmitFailed:
 19912                           	callstack 0
 19913   0005A7                     	ds	1
 19914   0005A8                     _canId:
 19915                           	callstack 0
 19916   0005A8                     	ds	1
 19917   0005A9                     _bootloaderVersion:
 19918                           	callstack 0
 19919   0005A9                     	ds	1
 19920   0005AA                     _bootloaderType:
 19921                           	callstack 0
 19922   0005AA                     	ds	1
 19923   0005AB                     _refreshRequired:
 19924                           	callstack 0
 19925   0005AB                     	ds	1
 19926   0005AC                     _flashState:
 19927                           	callstack 0
 19928   0005AC                     	ds	1
 19929   0005AD                     _mnsDiagnostics:
 19930                           	callstack 0
 19931   0005AD                     	ds	14
 19932   0005BB                     _nvDiagnostics:
 19933                           	callstack 0
 19934   0005BB                     	ds	6
 19935   0005C1                     _consumerDiagnostics:
 19936                           	callstack 0
 19937   0005C1                     	ds	6
 19938   0005C7                     _rxQueue:
 19939                           	callstack 0
 19940   0005C7                     	ds	5
 19941   0005CC                     _teachDiagnostics:
 19942                           	callstack 0
 19943   0005CC                     	ds	4
 19944                           
 19945                           	psect	dataBANK5
 19946   0005FD                     __pdataBANK5:
 19947                           	callstack 0
 19948   0005FD                     _flashBuffer:
 19949                           	callstack 0
 19950   0005FD                     	ds	2
 19951                           
 19952                           	psect	bssBANK6
 19953   000600                     __pbssBANK6:
 19954                           	callstack 0
 19955   000600                     _nvCache:
 19956                           	callstack 0
 19957   000600                     	ds	50
 19958   000632                     _enumerationResults:
 19959                           	callstack 0
 19960   000632                     	ds	16
 19961   000642                     _flashFlushTime:
 19962                           	callstack 0
 19963   000642                     	ds	4
 19964   000646                     _rxBuffers:
 19965                           	callstack 0
 19966   000646                     	ds	72
 19967   00068E                     _canDiagnostics:
 19968                           	callstack 0
 19969   00068E                     	ds	38
 19970   0006B4                     _tmpMessage:
 19971                           	callstack 0
 19972   0006B4                     	ds	9
 19973                           
 19974                           	psect	bssBANK7
 19975   000700                     __pbssBANK7:
 19976                           	callstack 0
 19977   000700                     _ledPaletteIndexes:
 19978                           	callstack 0
 19979   000700                     	ds	255
 19980                           
 19981                           	psect	bssBANK8
 19982   000800                     __pbssBANK8:
 19983                           	callstack 0
 19984   000800                     _evs:
 19985                           	callstack 0
 19986   000800                     	ds	252
 19987                           
 19988                           	psect	bssBIGRAM
 19989   0008FC                     __pbssBIGRAM:
 19990                           	callstack 0
 19991   0008FC                     _leds:
 19992                           	callstack 0
 19993   0008FC                     	ds	765
 19994   000BF9                     _eventChains:
 19995                           	callstack 0
 19996   000BF9                     	ds	640
 19997                           
 19998                           	psect	cstackBANK5
 19999   0005D0                     __pcstackBANK5:
 20000                           	callstack 0
 20001   0005D0                     ??_mnsProcessMessage:
 20002                           
 20003                           ; 1 bytes @ 0x0
 20004   0005D0                     	ds	30
 20005   0005EE                     ??_poll:
 20006                           
 20007                           ; 1 bytes @ 0x1E
 20008   0005EE                     	ds	4
 20009   0005F2                     poll@handled:
 20010                           	callstack 0
 20011                           
 20012                           ; 1 bytes @ 0x22
 20013   0005F2                     	ds	1
 20014   0005F3                     poll@i:
 20015                           	callstack 0
 20016                           
 20017                           ; 1 bytes @ 0x23
 20018   0005F3                     	ds	1
 20019   0005F4                     poll@m:
 20020                           	callstack 0
 20021                           
 20022                           ; 9 bytes @ 0x24
 20023   0005F4                     	ds	9
 20024                           
 20025                           	psect	cstackCOMRAM
 20026   000501                     __pcstackCOMRAM:
 20027                           	callstack 0
 20028   000501                     ?_getNV:
 20029                           	callstack 0
 20030   000501                     ?_getNextWriteMessage:
 20031                           	callstack 0
 20032   000501                     ?_pop:
 20033                           	callstack 0
 20034   000501                     ?___awdiv:
 20035                           	callstack 0
 20036   000501                     ?___awmod:
 20037                           	callstack 0
 20038   000501                     ?_tickGet:
 20039                           	callstack 0
 20040   000501                     ?___lmul:
 20041                           	callstack 0
 20042   000501                     initARGB@ledno:
 20043                           	callstack 0
 20044   000501                     updateLedRange@end_ledno:
 20045                           	callstack 0
 20046   000501                     APP_nvValidate@value:
 20047                           	callstack 0
 20048   000501                     APP_nvValueChanged@value:
 20049                           	callstack 0
 20050   000501                     bootEsdData@id:
 20051                           	callstack 0
 20052   000501                     canEsdData@id:
 20053                           	callstack 0
 20054   000501                     CAN1_OperationModeSet@status:
 20055                           	callstack 0
 20056   000501                     consumerPowerUp@temp:
 20057                           	callstack 0
 20058   000501                     isConsumedEvent@eventIndex:
 20059                           	callstack 0
 20060   000501                     consumerEsdData@index:
 20061                           	callstack 0
 20062   000501                     teachGetESDdata@id:
 20063                           	callstack 0
 20064   000501                     evtIdxToTableIndex@evtIdx:
 20065                           	callstack 0
 20066   000501                     tableIndexToEvtIdx@tableIndex:
 20067                           	callstack 0
 20068   000501                     nvGetESDdata@id:
 20069                           	callstack 0
 20070   000501                     setTimedResponseDelay@delay:
 20071                           	callstack 0
 20072   000501                     _isEvent$5760:
 20073                           	callstack 0
 20074   000501                     APP_preProcessMessage@m:
 20075                           	callstack 0
 20076   000501                     APP_postProcessMessage@m:
 20077                           	callstack 0
 20078   000501                     refreshString@offset:
 20079                           	callstack 0
 20080   000501                     prepareSelfEnumResponse@txFifoObj:
 20081                           	callstack 0
 20082   000501                     sendRTR@txFifoObj:
 20083                           	callstack 0
 20084   000501                     getNextWriteMessage@q:
 20085                           	callstack 0
 20086   000501                     pop@q:
 20087                           	callstack 0
 20088   000501                     ___awdiv@dividend:
 20089                           	callstack 0
 20090   000501                     ___awmod@dividend:
 20091                           	callstack 0
 20092   000501                     memcpy@d1:
 20093                           	callstack 0
 20094   000501                     EEPROM_Read@index:
 20095                           	callstack 0
 20096   000501                     EEPROM_WriteNoVerify@index:
 20097                           	callstack 0
 20098   000501                     FLASH_Read@address:
 20099                           	callstack 0
 20100   000501                     ___lmul@multiplier:
 20101                           	callstack 0
 20102   000501                     ??_getNumTxBuffersInUse:
 20103   000501                     ??_getNumRxBuffersInUse:
 20104   000501                     ??_have:
 20105   000501                     ??_findServiceIndex:
 20106   000501                     ??_showStatus:
 20107   000501                     ??_eraseFlashBlock:
 20108   000501                     ??_loadFlashBlock:
 20109   000501                     ??_initTicker:
 20110   000501                     
 20111                           ; 1 bytes @ 0x0
 20112   000501                     	ds	1
 20113   000502                     updateLedRange@colourIndexPair:
 20114                           	callstack 0
 20115   000502                     APP_nvValueChanged@oldValue:
 20116                           	callstack 0
 20117   000502                     CAN1_OperationModeSet@requestMode:
 20118                           	callstack 0
 20119   000502                     initTicker@priority:
 20120                           	callstack 0
 20121   000502                     isEvent@opc:
 20122                           	callstack 0
 20123   000502                     
 20124                           ; 1 bytes @ 0x1
 20125   000502                     	ds	1
 20126   000503                     updateLedRange@start_ledno:
 20127                           	callstack 0
 20128   000503                     showStatus@s:
 20129                           	callstack 0
 20130   000503                     initTicker@divider:
 20131                           	callstack 0
 20132   000503                     findServiceIndex@serviceType:
 20133                           	callstack 0
 20134   000503                     have@id:
 20135                           	callstack 0
 20136   000503                     ___awdiv@divisor:
 20137                           	callstack 0
 20138   000503                     ___awmod@divisor:
 20139                           	callstack 0
 20140   000503                     memcpy@s1:
 20141                           	callstack 0
 20142   000503                     ??_getNV:
 20143   000503                     ??_getNextWriteMessage:
 20144   000503                     ??_pop:
 20145   000503                     
 20146                           ; 1 bytes @ 0x2
 20147   000503                     	ds	1
 20148   000504                     updateLedRange@ledno:
 20149                           	callstack 0
 20150   000504                     getNV@index:
 20151                           	callstack 0
 20152   000504                     EEPROM_WriteNoVerify@value:
 20153                           	callstack 0
 20154   000504                     eraseFlashBlock@interruptEnabled:
 20155                           	callstack 0
 20156   000504                     initTicker@i:
 20157                           	callstack 0
 20158   000504                     findServiceIndex@i:
 20159                           	callstack 0
 20160   000504                     have@i:
 20161                           	callstack 0
 20162   000504                     ??_EEPROM_Read:
 20163   000504                     ??_FLASH_Read:
 20164                           
 20165                           ; 1 bytes @ 0x3
 20166   000504                     	ds	1
 20167   000505                     doFlash@order:
 20168                           	callstack 0
 20169   000505                     getParameterFlags@flags:
 20170                           	callstack 0
 20171   000505                     flushFlashBlock@interruptEnabled:
 20172                           	callstack 0
 20173   000505                     tickGet@IntFlag2:
 20174                           	callstack 0
 20175   000505                     startTimedResponse@serviceIndex:
 20176                           	callstack 0
 20177   000505                     ___awdiv@counter:
 20178                           	callstack 0
 20179   000505                     ___awmod@counter:
 20180                           	callstack 0
 20181   000505                     getNumTxBuffersInUse@i16:
 20182                           	callstack 0
 20183   000505                     getNumRxBuffersInUse@i16:
 20184                           	callstack 0
 20185   000505                     memcpy@n:
 20186                           	callstack 0
 20187   000505                     ___lmul@multiplicand:
 20188                           	callstack 0
 20189   000505                     ??_EEPROM_WriteNoVerify:
 20190   000505                     
 20191                           ; 1 bytes @ 0x4
 20192   000505                     	ds	1
 20193   000506                     doFlash@ledno:
 20194                           	callstack 0
 20195   000506                     tickGet@IntFlag1:
 20196                           	callstack 0
 20197   000506                     ___awdiv@sign:
 20198                           	callstack 0
 20199   000506                     ___awmod@sign:
 20200                           	callstack 0
 20201   000506                     startTimedResponse@callback:
 20202                           	callstack 0
 20203   000506                     FLASH_Write@index:
 20204                           	callstack 0
 20205   000506                     ??_getParameter:
 20206                           
 20207                           ; 1 bytes @ 0x5
 20208   000506                     	ds	1
 20209   000507                     ?_readNVM:
 20210                           	callstack 0
 20211   000507                     ?_canGetDiagnostic:
 20212                           	callstack 0
 20213   000507                     ?_consumerGetDiagnostic:
 20214                           	callstack 0
 20215   000507                     ?_teachGetDiagnostic:
 20216                           	callstack 0
 20217   000507                     ?_mnsGetDiagnostic:
 20218                           	callstack 0
 20219   000507                     ?_nvGetDiagnostic:
 20220                           	callstack 0
 20221   000507                     ___awdiv@quotient:
 20222                           	callstack 0
 20223   000507                     memcpy@d:
 20224                           	callstack 0
 20225   000507                     readNVM@index:
 20226                           	callstack 0
 20227   000507                     tickGet@currentTime:
 20228                           	callstack 0
 20229   000507                     
 20230                           ; 1 bytes @ 0x6
 20231   000507                     	ds	1
 20232   000508                     EEPROM_WriteNoVerify@interruptEnabled:
 20233                           	callstack 0
 20234   000508                     startTimedResponse@type:
 20235                           	callstack 0
 20236   000508                     pop@ret:
 20237                           	callstack 0
 20238   000508                     
 20239                           ; 1 bytes @ 0x7
 20240   000508                     	ds	1
 20241   000509                     consumerGetDiagnostic@index:
 20242                           	callstack 0
 20243   000509                     teachGetDiagnostic@index:
 20244                           	callstack 0
 20245   000509                     mnsGetDiagnostic@index:
 20246                           	callstack 0
 20247   000509                     getParameter@idx:
 20248                           	callstack 0
 20249   000509                     nvGetDiagnostic@index:
 20250                           	callstack 0
 20251   000509                     FLASH_Write@value:
 20252                           	callstack 0
 20253   000509                     memcpy@s:
 20254                           	callstack 0
 20255   000509                     EEPROM_Write@index:
 20256                           	callstack 0
 20257   000509                     ___lmul@product:
 20258                           	callstack 0
 20259   000509                     ??_canGetDiagnostic:
 20260   000509                     ??_APP_nvDefault:
 20261   000509                     
 20262                           ; 1 bytes @ 0x8
 20263   000509                     	ds	1
 20264   00050A                     canGetDiagnostic@index:
 20265                           	callstack 0
 20266   00050A                     ??_readNVM:
 20267   00050A                     ??_FLASH_Write:
 20268                           
 20269                           ; 1 bytes @ 0x9
 20270   00050A                     	ds	1
 20271   00050B                     ?___lldiv:
 20272                           	callstack 0
 20273   00050B                     APP_nvDefault@index:
 20274                           	callstack 0
 20275   00050B                     startEnumeration@txWaiting:
 20276                           	callstack 0
 20277   00050B                     memcpy@tmp:
 20278                           	callstack 0
 20279   00050B                     ___lldiv@dividend:
 20280                           	callstack 0
 20281   00050B                     ??_handleSelfEnumeration:
 20282   00050B                     ??_APP_testMode:
 20283   00050B                     ??_loop:
 20284   00050B                     ??_leds_poll:
 20285                           
 20286                           ; 1 bytes @ 0xA
 20287   00050B                     	ds	1
 20288   00050C                     startEnumeration@i:
 20289                           	callstack 0
 20290   00050C                     getNextWriteMessage@wr:
 20291                           	callstack 0
 20292   00050C                     EEPROM_Write@value:
 20293                           	callstack 0
 20294   00050C                     readNVM@type:
 20295                           	callstack 0
 20296                           
 20297                           ; 1 bytes @ 0xB
 20298   00050C                     	ds	1
 20299   00050D                     ?_getEN:
 20300                           	callstack 0
 20301   00050D                     ?_getNN:
 20302                           	callstack 0
 20303   00050D                     ?_getEv:
 20304                           	callstack 0
 20305   00050D                     bootPowerUp@b:
 20306                           	callstack 0
 20307   00050D                     getEv@evNum:
 20308                           	callstack 0
 20309   00050D                     mnsPowerUp@i:
 20310                           	callstack 0
 20311   00050D                     canPowerUp@temp:
 20312                           	callstack 0
 20313   00050D                     canSendMessage@mp:
 20314                           	callstack 0
 20315   00050D                     ??_getEVs:
 20316   00050D                     ??_loadNvCache:
 20317   00050D                     
 20318                           ; 1 bytes @ 0xC
 20319   00050D                     	ds	1
 20320   00050E                     bootPowerUp@found:
 20321                           	callstack 0
 20322   00050E                     mnsPowerUp@temp:
 20323                           	callstack 0
 20324   00050E                     writeNVM@index:
 20325                           	callstack 0
 20326                           
 20327                           ; 3 bytes @ 0xD
 20328   00050E                     	ds	1
 20329   00050F                     APP_testMode@c:
 20330                           	callstack 0
 20331   00050F                     bootPowerUp@i:
 20332                           	callstack 0
 20333   00050F                     handleSelfEnumeration@receivedCanId:
 20334                           	callstack 0
 20335   00050F                     loadNvCache@temp:
 20336                           	callstack 0
 20337   00050F                     ___lldiv@divisor:
 20338                           	callstack 0
 20339   00050F                     ??_canSendMessage:
 20340   00050F                     ??_getEN:
 20341   00050F                     ??_getNN:
 20342   00050F                     ??_getEv:
 20343                           
 20344                           ; 1 bytes @ 0xE
 20345   00050F                     	ds	1
 20346   000510                     APP_testMode@step:
 20347                           	callstack 0
 20348   000510                     canReceiveMessage@m:
 20349                           	callstack 0
 20350   000510                     bootPowerUp@a:
 20351                           	callstack 0
 20352                           
 20353                           ; 3 bytes @ 0xF
 20354   000510                     	ds	1
 20355   000511                     APP_testMode@i:
 20356                           	callstack 0
 20357   000511                     loadNvCache@i:
 20358                           	callstack 0
 20359   000511                     writeNVM@value:
 20360                           	callstack 0
 20361                           
 20362                           ; 1 bytes @ 0x10
 20363   000511                     	ds	1
 20364   000512                     nvPowerUp@i:
 20365                           	callstack 0
 20366   000512                     ??_writeNVM:
 20367   000512                     ??_canReceiveMessage:
 20368   000512                     
 20369                           ; 1 bytes @ 0x11
 20370   000512                     	ds	1
 20371   000513                     canReceiveMessage@incomingCanId:
 20372                           	callstack 0
 20373   000513                     ___lldiv@quotient:
 20374                           	callstack 0
 20375   000513                     
 20376                           ; 1 bytes @ 0x12
 20377   000513                     	ds	1
 20378   000514                     writeNVM@type:
 20379                           	callstack 0
 20380   000514                     canReceiveMessage@mp:
 20381                           	callstack 0
 20382                           
 20383                           ; 2 bytes @ 0x13
 20384   000514                     	ds	1
 20385   000515                     setNewCanId@newCanId:
 20386                           	callstack 0
 20387   000515                     writeEv@evNum:
 20388                           	callstack 0
 20389   000515                     setNV@value:
 20390                           	callstack 0
 20391   000515                     canSendMessage@temp:
 20392                           	callstack 0
 20393   000515                     ??_nvFactoryReset:
 20394                           
 20395                           ; 1 bytes @ 0x14
 20396   000515                     	ds	1
 20397   000516                     writeEv@evVal:
 20398                           	callstack 0
 20399   000516                     canReceiveMessage@temp:
 20400                           	callstack 0
 20401   000516                     getNN@hi:
 20402                           	callstack 0
 20403   000516                     getEN@hi:
 20404                           	callstack 0
 20405   000516                     ??_processEnumeration:
 20406   000516                     ??_setNV:
 20407                           
 20408                           ; 1 bytes @ 0x15
 20409   000516                     	ds	1
 20410   000517                     nvFactoryReset@i:
 20411                           	callstack 0
 20412   000517                     ___lldiv@counter:
 20413                           	callstack 0
 20414   000517                     canSendMessage@m:
 20415                           	callstack 0
 20416   000517                     ??_writeEv:
 20417                           
 20418                           ; 1 bytes @ 0x16
 20419   000517                     	ds	1
 20420   000518                     setNV@oldValue:
 20421                           	callstack 0
 20422   000518                     canReceiveMessage@rxFifoObj:
 20423                           	callstack 0
 20424   000518                     getNN@lo:
 20425                           	callstack 0
 20426   000518                     getEN@lo:
 20427                           	callstack 0
 20428   000518                     ??_pbDownTimer:
 20429   000518                     ??_pbUpTimer:
 20430                           
 20431                           ; 1 bytes @ 0x17
 20432   000518                     	ds	1
 20433   000519                     setNV@index:
 20434                           	callstack 0
 20435   000519                     canSendMessage@txFifoObj:
 20436                           	callstack 0
 20437                           
 20438                           ; 2 bytes @ 0x18
 20439   000519                     	ds	1
 20440   00051A                     processEnumeration@enumResult:
 20441                           	callstack 0
 20442   00051A                     getEVs@tableIndex:
 20443                           	callstack 0
 20444   00051A                     getNN@flags:
 20445                           	callstack 0
 20446   00051A                     getEN@tableIndex:
 20447                           	callstack 0
 20448                           
 20449                           ; 1 bytes @ 0x19
 20450   00051A                     	ds	1
 20451   00051B                     processEnumeration@newCanId:
 20452                           	callstack 0
 20453   00051B                     getEVs@evIdx:
 20454                           	callstack 0
 20455   00051B                     getNN@tableIndex:
 20456                           	callstack 0
 20457   00051B                     sendMessage@len:
 20458                           	callstack 0
 20459                           
 20460                           ; 1 bytes @ 0x1A
 20461   00051B                     	ds	1
 20462   00051C                     processEnumeration@i:
 20463                           	callstack 0
 20464   00051C                     getEv@tableIndex:
 20465                           	callstack 0
 20466   00051C                     pbDownTimer@timeout:
 20467                           	callstack 0
 20468   00051C                     pbUpTimer@timeout:
 20469                           	callstack 0
 20470   00051C                     sendMessage@data1:
 20471                           	callstack 0
 20472   00051C                     APP_processConsumedEvent@m:
 20473                           	callstack 0
 20474   00051C                     getHash@nn:
 20475                           	callstack 0
 20476                           
 20477                           ; 2 bytes @ 0x1B
 20478   00051C                     	ds	1
 20479   00051D                     sendMessage@data2:
 20480                           	callstack 0
 20481   00051D                     
 20482                           ; 1 bytes @ 0x1C
 20483   00051D                     	ds	1
 20484   00051E                     APP_processConsumedEvent@tableIndex:
 20485                           	callstack 0
 20486   00051E                     sendMessage@data3:
 20487                           	callstack 0
 20488   00051E                     getHash@en:
 20489                           	callstack 0
 20490   00051E                     
 20491                           ; 1 bytes @ 0x1D
 20492   00051E                     	ds	1
 20493   00051F                     APP_processConsumedEvent@onOff:
 20494                           	callstack 0
 20495   00051F                     sendMessage@data4:
 20496                           	callstack 0
 20497                           
 20498                           ; 1 bytes @ 0x1E
 20499   00051F                     	ds	1
 20500   000520                     APP_processConsumedEvent@action:
 20501                           	callstack 0
 20502   000520                     sendMessage@data5:
 20503                           	callstack 0
 20504   000520                     ??_getHash:
 20505                           
 20506                           ; 1 bytes @ 0x1F
 20507   000520                     	ds	1
 20508   000521                     APP_processConsumedEvent@start_ledno:
 20509                           	callstack 0
 20510   000521                     getHash@hash:
 20511                           	callstack 0
 20512   000521                     sendMessage@data6:
 20513                           	callstack 0
 20514                           
 20515                           ; 1 bytes @ 0x20
 20516   000521                     	ds	1
 20517   000522                     APP_processConsumedEvent@end_ledno:
 20518                           	callstack 0
 20519   000522                     sendMessage@data7:
 20520                           	callstack 0
 20521   000522                     findEvent@nodeNumber:
 20522                           	callstack 0
 20523   000522                     ??_rebuildHashtable:
 20524                           
 20525                           ; 1 bytes @ 0x21
 20526   000522                     	ds	1
 20527   000523                     APP_processConsumedEvent@colourPixelIndexPair:
 20528                           	callstack 0
 20529   000523                     ??_sendMessage:
 20530                           
 20531                           ; 1 bytes @ 0x22
 20532   000523                     	ds	1
 20533   000524                     APP_processConsumedEvent@ev:
 20534                           	callstack 0
 20535   000524                     writeEv@tableIndex:
 20536                           	callstack 0
 20537   000524                     findEvent@eventNumber:
 20538                           	callstack 0
 20539                           
 20540                           ; 2 bytes @ 0x23
 20541   000524                     	ds	1
 20542   000525                     rebuildHashtable@hash:
 20543                           	callstack 0
 20544   000525                     sendMessage@opc:
 20545                           	callstack 0
 20546                           
 20547                           ; 1 bytes @ 0x24
 20548   000525                     	ds	1
 20549   000526                     rebuildHashtable@tableIndex:
 20550                           	callstack 0
 20551   000526                     sendMessage2@data1:
 20552                           	callstack 0
 20553   000526                     sendMessage3@data1:
 20554                           	callstack 0
 20555   000526                     sendMessage4@data1:
 20556                           	callstack 0
 20557   000526                     sendMessage5@data1:
 20558                           	callstack 0
 20559   000526                     sendMessage6@data1:
 20560                           	callstack 0
 20561   000526                     sendMessage7@data1:
 20562                           	callstack 0
 20563   000526                     ??_findEvent:
 20564                           
 20565                           ; 1 bytes @ 0x25
 20566   000526                     	ds	1
 20567   000527                     rebuildHashtable@chainIdx:
 20568                           	callstack 0
 20569   000527                     sendMessage2@data2:
 20570                           	callstack 0
 20571   000527                     sendMessage3@data2:
 20572                           	callstack 0
 20573   000527                     sendMessage4@data2:
 20574                           	callstack 0
 20575   000527                     sendMessage5@data2:
 20576                           	callstack 0
 20577   000527                     sendMessage6@data2:
 20578                           	callstack 0
 20579   000527                     sendMessage7@data2:
 20580                           	callstack 0
 20581                           
 20582                           ; 1 bytes @ 0x26
 20583   000527                     	ds	1
 20584   000528                     teachPowerUp@i:
 20585                           	callstack 0
 20586   000528                     sendMessage2@opc:
 20587                           	callstack 0
 20588   000528                     sendMessage3@data3:
 20589                           	callstack 0
 20590   000528                     sendMessage4@data3:
 20591                           	callstack 0
 20592   000528                     sendMessage5@data3:
 20593                           	callstack 0
 20594   000528                     sendMessage6@data3:
 20595                           	callstack 0
 20596   000528                     sendMessage7@data3:
 20597                           	callstack 0
 20598   000528                     findEvent@nn:
 20599                           	callstack 0
 20600   000528                     ??_removeTableEntry:
 20601   000528                     
 20602                           ; 1 bytes @ 0x27
 20603   000528                     	ds	1
 20604   000529                     sendMessage3@opc:
 20605                           	callstack 0
 20606   000529                     sendMessage4@data4:
 20607                           	callstack 0
 20608   000529                     sendMessage5@data4:
 20609                           	callstack 0
 20610   000529                     sendMessage6@data4:
 20611                           	callstack 0
 20612   000529                     sendMessage7@data4:
 20613                           	callstack 0
 20614   000529                     ??_powerUp:
 20615                           
 20616                           ; 1 bytes @ 0x28
 20617   000529                     	ds	1
 20618   00052A                     sendMessage4@opc:
 20619                           	callstack 0
 20620   00052A                     sendMessage5@data5:
 20621                           	callstack 0
 20622   00052A                     sendMessage6@data5:
 20623                           	callstack 0
 20624   00052A                     sendMessage7@data5:
 20625                           	callstack 0
 20626   00052A                     doNnevn@eventNumber:
 20627                           	callstack 0
 20628   00052A                     doRqevn@eventNumber:
 20629                           	callstack 0
 20630   00052A                     findEvent@en:
 20631                           	callstack 0
 20632   00052A                     
 20633                           ; 1 bytes @ 0x29
 20634   00052A                     	ds	1
 20635   00052B                     sendMessage5@opc:
 20636                           	callstack 0
 20637   00052B                     sendMessage6@data6:
 20638                           	callstack 0
 20639   00052B                     sendMessage7@data6:
 20640                           	callstack 0
 20641   00052B                     
 20642                           ; 1 bytes @ 0x2A
 20643   00052B                     	ds	1
 20644   00052C                     doNnevn@count:
 20645                           	callstack 0
 20646   00052C                     doRqevn@count:
 20647                           	callstack 0
 20648   00052C                     doReval@evNum:
 20649                           	callstack 0
 20650   00052C                     findEvent@hash:
 20651                           	callstack 0
 20652   00052C                     sendMessage6@opc:
 20653                           	callstack 0
 20654   00052C                     sendMessage7@data7:
 20655                           	callstack 0
 20656   00052C                     doNenrd@nodeNumber:
 20657                           	callstack 0
 20658   00052C                     checkLen@m:
 20659                           	callstack 0
 20660   00052C                     ??_mnsPoll:
 20661                           
 20662                           ; 1 bytes @ 0x2B
 20663   00052C                     	ds	1
 20664   00052D                     doNnevn@i:
 20665                           	callstack 0
 20666   00052D                     doRqevn@i:
 20667                           	callstack 0
 20668   00052D                     doReval@evIndex:
 20669                           	callstack 0
 20670   00052D                     findEvent@chainIdx:
 20671                           	callstack 0
 20672   00052D                     powerUp@i:
 20673                           	callstack 0
 20674   00052D                     sendMessage7@opc:
 20675                           	callstack 0
 20676   00052D                     
 20677                           ; 1 bytes @ 0x2C
 20678   00052D                     	ds	1
 20679   00052E                     doReval@enNum:
 20680                           	callstack 0
 20681   00052E                     findEvent@tableIndex:
 20682                           	callstack 0
 20683   00052E                     mnsTRallDiagnosticsCallback@serviceIndex:
 20684                           	callstack 0
 20685   00052E                     nvTRnvrdCallback@serviceIndex:
 20686                           	callstack 0
 20687   00052E                     checkLen@needed:
 20688                           	callstack 0
 20689   00052E                     doNenrd@eventNumber:
 20690                           	callstack 0
 20691                           
 20692                           ; 2 bytes @ 0x2D
 20693   00052E                     	ds	1
 20694   00052F                     nerdCallback@step:
 20695                           	callstack 0
 20696   00052F                     doReval@tableIndex:
 20697                           	callstack 0
 20698   00052F                     reqevCallback@step:
 20699                           	callstack 0
 20700   00052F                     mnsTRserviceDiscoveryCallback@step:
 20701                           	callstack 0
 20702   00052F                     mnsTRallDiagnosticsCallback@step:
 20703                           	callstack 0
 20704   00052F                     mnsTRrqnpnCallback@step:
 20705                           	callstack 0
 20706   00052F                     nvTRnvrdCallback@step:
 20707                           	callstack 0
 20708   00052F                     checkLen@service:
 20709                           	callstack 0
 20710   00052F                     doReqev@nodeNumber:
 20711                           	callstack 0
 20712   00052F                     addEvent@nodeNumber:
 20713                           	callstack 0
 20714                           
 20715                           ; 2 bytes @ 0x2E
 20716   00052F                     	ds	1
 20717   000530                     doNenrd@index:
 20718                           	callstack 0
 20719   000530                     nerdCallback@nodeNumber:
 20720                           	callstack 0
 20721   000530                     doReval@evVal:
 20722                           	callstack 0
 20723   000530                     nvTRnvrdCallback@valueOrError:
 20724                           	callstack 0
 20725   000530                     ??_reqevCallback:
 20726   000530                     ??_mnsTRallDiagnosticsCallback:
 20727   000530                     ??_mnsTRserviceDiscoveryCallback:
 20728   000530                     
 20729                           ; 1 bytes @ 0x2F
 20730   000530                     	ds	1
 20731   000531                     doNenrd@tableIndex:
 20732                           	callstack 0
 20733   000531                     consumerEventCheckLen@m:
 20734                           	callstack 0
 20735   000531                     teachCheckLen@m:
 20736                           	callstack 0
 20737   000531                     doReqev@eventNumber:
 20738                           	callstack 0
 20739   000531                     addEvent@eventNumber:
 20740                           	callstack 0
 20741                           
 20742                           ; 2 bytes @ 0x30
 20743   000531                     	ds	1
 20744   000532                     nerdCallback@eventNumber:
 20745                           	callstack 0
 20746                           
 20747                           ; 2 bytes @ 0x31
 20748   000532                     	ds	1
 20749   000533                     consumerEventCheckLen@needed:
 20750                           	callstack 0
 20751   000533                     teachCheckLen@needed:
 20752                           	callstack 0
 20753   000533                     doReqev@evNum:
 20754                           	callstack 0
 20755   000533                     addEvent@evNum:
 20756                           	callstack 0
 20757                           
 20758                           ; 1 bytes @ 0x32
 20759   000533                     	ds	1
 20760   000534                     teachCheckLen@learn:
 20761                           	callstack 0
 20762   000534                     removeTableEntry@i:
 20763                           	callstack 0
 20764   000534                     addEvent@evVal:
 20765                           	callstack 0
 20766   000534                     doReqev@evVal:
 20767                           	callstack 0
 20768   000534                     mnsTRallDiagnosticsCallback@d:
 20769                           	callstack 0
 20770   000534                     
 20771                           ; 1 bytes @ 0x33
 20772   000534                     	ds	1
 20773   000535                     reqevCallback@nEv:
 20774                           	callstack 0
 20775   000535                     removeTableEntry@tableIndex:
 20776                           	callstack 0
 20777   000535                     addEvent@forceOwnNN:
 20778                           	callstack 0
 20779   000535                     
 20780                           ; 1 bytes @ 0x34
 20781   000535                     	ds	1
 20782   000536                     clearAllEvents@tableIndex:
 20783                           	callstack 0
 20784   000536                     doReqev@tableIndex:
 20785                           	callstack 0
 20786   000536                     reqevCallback@eventNumber:
 20787                           	callstack 0
 20788   000536                     removeEvent@nodeNumber:
 20789                           	callstack 0
 20790   000536                     ??_addEvent:
 20791                           
 20792                           ; 1 bytes @ 0x35
 20793   000536                     	ds	1
 20794   000537                     ??_factoryReset:
 20795                           
 20796                           ; 1 bytes @ 0x36
 20797   000537                     	ds	1
 20798   000538                     reqevCallback@ev:
 20799                           	callstack 0
 20800   000538                     removeEvent@eventNumber:
 20801                           	callstack 0
 20802                           
 20803                           ; 2 bytes @ 0x37
 20804   000538                     	ds	2
 20805   00053A                     removeEvent@tableIndex:
 20806                           	callstack 0
 20807   00053A                     reqevCallback@nodeNumber:
 20808                           	callstack 0
 20809   00053A                     
 20810                           ; 1 bytes @ 0x39
 20811   00053A                     	ds	1
 20812   00053B                     factoryReset@i:
 20813                           	callstack 0
 20814   00053B                     doEvuln@nodeNumber:
 20815                           	callstack 0
 20816                           
 20817                           ; 2 bytes @ 0x3A
 20818   00053B                     	ds	1
 20819   00053C                     reqevCallback@tableIndex:
 20820                           	callstack 0
 20821   00053C                     checkPowerOnPb@i:
 20822                           	callstack 0
 20823   00053C                     
 20824                           ; 1 bytes @ 0x3B
 20825   00053C                     	ds	1
 20826   00053D                     doEvuln@eventNumber:
 20827                           	callstack 0
 20828   00053D                     ??_pollTimedResponse:
 20829                           
 20830                           ; 1 bytes @ 0x3C
 20831   00053D                     	ds	2
 20832   00053F                     doEvuln@result:
 20833                           	callstack 0
 20834   00053F                     pollTimedResponse@result:
 20835                           	callstack 0
 20836   00053F                     
 20837                           ; 1 bytes @ 0x3E
 20838   00053F                     	ds	4
 20839   000543                     addEvent@en:
 20840                           	callstack 0
 20841                           
 20842                           ; 2 bytes @ 0x42
 20843   000543                     	ds	2
 20844   000545                     addEvent@e:
 20845                           	callstack 0
 20846                           
 20847                           ; 1 bytes @ 0x44
 20848   000545                     	ds	1
 20849   000546                     addEvent@tableIndex:
 20850                           	callstack 0
 20851                           
 20852                           ; 1 bytes @ 0x45
 20853   000546                     	ds	1
 20854   000547                     APP_addEvent@nodeNumber:
 20855                           	callstack 0
 20856                           
 20857                           ; 2 bytes @ 0x46
 20858   000547                     	ds	2
 20859   000549                     APP_addEvent@eventNumber:
 20860                           	callstack 0
 20861                           
 20862                           ; 2 bytes @ 0x48
 20863   000549                     	ds	2
 20864   00054B                     APP_addEvent@evNum:
 20865                           	callstack 0
 20866                           
 20867                           ; 1 bytes @ 0x4A
 20868   00054B                     	ds	1
 20869   00054C                     APP_addEvent@evVal:
 20870                           	callstack 0
 20871                           
 20872                           ; 1 bytes @ 0x4B
 20873   00054C                     	ds	1
 20874   00054D                     APP_addEvent@forceOwnNN:
 20875                           	callstack 0
 20876                           
 20877                           ; 1 bytes @ 0x4C
 20878   00054D                     	ds	1
 20879   00054E                     doEvlrn@nodeNumber:
 20880                           	callstack 0
 20881   00054E                     
 20882                           ; 1 bytes @ 0x4D
 20883   00054E                     	ds	2
 20884   000550                     doEvlrn@eventNumber:
 20885                           	callstack 0
 20886                           
 20887                           ; 2 bytes @ 0x4F
 20888   000550                     	ds	2
 20889   000552                     doEvlrn@evNum:
 20890                           	callstack 0
 20891                           
 20892                           ; 1 bytes @ 0x51
 20893   000552                     	ds	1
 20894   000553                     doEvlrn@evVal:
 20895                           	callstack 0
 20896                           
 20897                           ; 1 bytes @ 0x52
 20898   000553                     	ds	1
 20899   000554                     bootProcessMessage@m:
 20900                           	callstack 0
 20901   000554                     canProcessMessage@m:
 20902                           	callstack 0
 20903   000554                     consumerProcessMessage@m:
 20904                           	callstack 0
 20905   000554                     teachProcessMessage@m:
 20906                           	callstack 0
 20907   000554                     mnsProcessMessage@m:
 20908                           	callstack 0
 20909   000554                     nvProcessMessage@m:
 20910                           	callstack 0
 20911   000554                     
 20912                           ; 1 bytes @ 0x53
 20913   000554                     	ds	2
 20914   000556                     mnsProcessMessage@i:
 20915                           	callstack 0
 20916   000556                     ??_bootProcessMessage:
 20917   000556                     ??_canProcessMessage:
 20918   000556                     ??_consumerProcessMessage:
 20919   000556                     ??_teachProcessMessage:
 20920   000556                     ??_nvProcessMessage:
 20921                           
 20922                           ; 1 bytes @ 0x55
 20923   000556                     	ds	1
 20924   000557                     _mnsProcessMessage$4430:
 20925                           	callstack 0
 20926                           
 20927                           ; 1 bytes @ 0x56
 20928   000557                     	ds	1
 20929   000558                     mnsProcessMessage@d:
 20930                           	callstack 0
 20931   000558                     nvProcessMessage@valueOrError:
 20932                           	callstack 0
 20933                           
 20934                           ; 2 bytes @ 0x57
 20935   000558                     	ds	1
 20936   000559                     consumerProcessMessage@enn:
 20937                           	callstack 0
 20938                           
 20939                           ; 2 bytes @ 0x58
 20940   000559                     	ds	1
 20941   00055A                     mnsProcessMessage@newMode:
 20942                           	callstack 0
 20943                           
 20944                           ; 1 bytes @ 0x59
 20945   00055A                     	ds	1
 20946   00055B                     consumerProcessMessage@ret:
 20947                           	callstack 0
 20948                           
 20949                           ; 1 bytes @ 0x5A
 20950   00055B                     	ds	1
 20951   00055C                     consumerProcessMessage@tableIndex:
 20952                           	callstack 0
 20953                           
 20954                           ; 1 bytes @ 0x5B
 20955   00055C                     	ds	1
 20956   00055D                     main@i:
 20957                           	callstack 0
 20958   00055D                     
 20959                           ; 1 bytes @ 0x5C
 20960   00055D                     	ds	1
 20961   00055E                     main@t1:
 20962                           	callstack 0
 20963                           
 20964                           ; 1 bytes @ 0x5D
 20965   00055E                     	ds	1
 20966   00055F                     main@t2:
 20967                           	callstack 0
 20968                           
 20969                           ; 1 bytes @ 0x5E
 20970   00055F                     	ds	1
 20971                           
 20972 ;;
 20973 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 20974 ;;
 20975 ;; *************** function _main *****************
 20976 ;; Defined at:
 20977 ;;		line 1261 in file "../../VLCBlib_PIC/vlcb.c"
 20978 ;; Parameters:    Size  Location     Type
 20979 ;;		None
 20980 ;; Auto vars:     Size  Location     Type
 20981 ;;  t2              1   94[COMRAM] unsigned char 
 20982 ;;  t1              1   93[COMRAM] unsigned char 
 20983 ;;  i               1   92[COMRAM] unsigned char 
 20984 ;; Return value:  Size  Location     Type
 20985 ;;                  1    wreg      void 
 20986 ;; Registers used:
 20987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20988 ;; Tracked objects:
 20989 ;;		On entry : 0/0
 20990 ;;		On exit  : 0/0
 20991 ;;		Unchanged: 0/0
 20992 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 20993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20994 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20996 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20997 ;;Total ram usage:        3 bytes
 20998 ;; Hardware stack levels required when called: 12
 20999 ;; This function calls:
 21000 ;;		_checkPowerOnPb
 21001 ;;		_factoryReset
 21002 ;;		_initRomOps
 21003 ;;		_loop
 21004 ;;		_poll
 21005 ;;		_powerUp
 21006 ;;		_readNVM
 21007 ;;		_setup
 21008 ;; This function is called by:
 21009 ;;		Startup code after reset
 21010 ;; This function uses a non-reentrant model
 21011 ;;
 21012                           
 21013                           	psect	text0
 21014   006328                     __ptext0:
 21015                           	callstack 0
 21016   006328                     _main:
 21017                           	callstack 115
 21018   006328                     
 21019                           ;../../VLCBlib_PIC/vlcb.c: 1262:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1263:     uint
      +                          8_t t1,t2;;../../VLCBlib_PIC/vlcb.c: 1272:     OSCCON1bits.NOSC = 2;
 21020   006328  0100               	movlb	0	; () banked
 21021   00632A  51AD               	movf	173,w,b	;volatile
 21022   00632C  0B8F               	andlw	-113
 21023   00632E  0920               	iorlw	32
 21024   006330  6FAD               	movwf	173,b	;volatile
 21025                           
 21026                           ;../../VLCBlib_PIC/vlcb.c: 1273:     OSCCON1bits.NDIV = 0;
 21027   006332  0EF0               	movlw	-16
 21028   006334  17AD               	andwf	173,f,b	;volatile
 21029   006336                     l2071:
 21030                           
 21031                           ; BSR set to: 0
 21032                           ;../../VLCBlib_PIC/vlcb.c: 1280:     while ( ! OSCCON3bits.ORDY) {
 21033   006336  A9AF               	btfss	175,4,b	;volatile
 21034   006338  EFA0  F031         	goto	u8671
 21035   00633C  EFA2  F031         	goto	u8670
 21036   006340                     u8671:
 21037   006340  EF9B  F031         	goto	l2071
 21038   006344                     u8670:
 21039   006344                     
 21040                           ; BSR set to: 0
 21041                           ;../../VLCBlib_PIC/vlcb.c: 1289:     for (t1=0; t1<64; t1++) {
 21042   006344  6A5E               	clrf	main@t1^(0+1280),c
 21043   006346                     l2074:
 21044                           
 21045                           ;../../VLCBlib_PIC/vlcb.c: 1290:         for (t2=0; t2<255; t2++) {
 21046   006346  6A5F               	clrf	main@t2^(0+1280),c
 21047   006348                     l2076:
 21048                           
 21049                           ;../../VLCBlib_PIC/vlcb.c: 1291:             for (i=0; i<255; i++) {
 21050   006348  6A5D               	clrf	main@i^(0+1280),c
 21051   00634A                     l2078:
 21052                           
 21053                           ;../../VLCBlib_PIC/vlcb.c: 1293:                 (LATBbits.LATB7=0);
 21054   00634A  9EBF               	bcf	191,7,c	;volatile
 21055   00634C                     
 21056                           ;../../VLCBlib_PIC/vlcb.c: 1294:             }
 21057   00634C  2A5D               	incf	main@i^(0+1280),f,c
 21058   00634E  285D               	incf	main@i^(0+1280),w,c
 21059   006350  A4D8               	btfss	status,2,c
 21060   006352  EFAD  F031         	goto	u8681
 21061   006356  EFAF  F031         	goto	u8680
 21062   00635A                     u8681:
 21063   00635A  EFA5  F031         	goto	l2078
 21064   00635E                     u8680:
 21065   00635E                     
 21066                           ;../../VLCBlib_PIC/vlcb.c: 1295:         }
 21067   00635E  2A5F               	incf	main@t2^(0+1280),f,c
 21068   006360  285F               	incf	main@t2^(0+1280),w,c
 21069   006362  A4D8               	btfss	status,2,c
 21070   006364  EFB6  F031         	goto	u8691
 21071   006368  EFB8  F031         	goto	u8690
 21072   00636C                     u8691:
 21073   00636C  EFA4  F031         	goto	l2076
 21074   006370                     u8690:
 21075   006370                     
 21076                           ;../../VLCBlib_PIC/vlcb.c: 1296:     }
 21077   006370  2A5E               	incf	main@t1^(0+1280),f,c
 21078   006372  0E3F               	movlw	63
 21079   006374  645E               	cpfsgt	main@t1^(0+1280),c
 21080   006376  EFBF  F031         	goto	u8701
 21081   00637A  EFC1  F031         	goto	u8700
 21082   00637E                     u8701:
 21083   00637E  EFA3  F031         	goto	l2074
 21084   006382                     u8700:
 21085   006382                     
 21086                           ;../../VLCBlib_PIC/vlcb.c: 1306:     IVTBASEU = 0x00;
 21087   006382  0104               	movlb	4	; () banked
 21088   006384  6B5F               	clrf	95,b	;volatile
 21089   006386                     
 21090                           ; BSR set to: 4
 21091                           ;../../VLCBlib_PIC/vlcb.c: 1307:     IVTBASEH = 0x09;
 21092   006386  0E09               	movlw	9
 21093   006388  6F5E               	movwf	94,b	;volatile
 21094   00638A                     
 21095                           ; BSR set to: 4
 21096                           ;../../VLCBlib_PIC/vlcb.c: 1308:     IVTBASEL = 0x00;
 21097   00638A  6B5D               	clrf	93,b	;volatile
 21098                           
 21099                           ;../../VLCBlib_PIC/vlcb.c: 1310:     IVTLOCK = 0x55;
 21100   00638C  0E55               	movlw	85
 21101   00638E  6F59               	movwf	89,b	;volatile
 21102                           
 21103                           ;../../VLCBlib_PIC/vlcb.c: 1311:     IVTLOCK = 0xAA;
 21104   006390  0EAA               	movlw	170
 21105   006392  6F59               	movwf	89,b	;volatile
 21106   006394                     
 21107                           ; BSR set to: 4
 21108                           ;../../VLCBlib_PIC/vlcb.c: 1312:     IVTLOCKbits.IVTLOCKED = 0x01;
 21109   006394  8159               	bsf	89,0,b	;volatile
 21110   006396                     
 21111                           ; BSR set to: 4
 21112                           ;../../VLCBlib_PIC/vlcb.c: 1324:     initRomOps();
 21113   006396  EC4E  F041         	call	_initRomOps	;wreg free
 21114   00639A                     
 21115                           ;../../VLCBlib_PIC/vlcb.c: 1326:     if (readNVM(EEPROM_NVM_TYPE, 0x3FA) != 1) {
 21116   00639A  0EFA               	movlw	250
 21117   00639C  6E07               	movwf	readNVM@index^(0+1280),c
 21118   00639E  0E03               	movlw	3
 21119   0063A0  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21120   0063A2  0E00               	movlw	0
 21121   0063A4  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21122   0063A6  0E00               	movlw	0
 21123   0063A8  EC6C  F03A         	call	_readNVM
 21124   0063AC  0407               	decf	?_readNVM^(0+1280),w,c
 21125   0063AE  1008               	iorwf	(?_readNVM+1)^(0+1280),w,c
 21126   0063B0  B4D8               	btfsc	status,2,c
 21127   0063B2  EFDD  F031         	goto	u8711
 21128   0063B6  EFDF  F031         	goto	u8710
 21129   0063BA                     u8711:
 21130   0063BA  EFE1  F031         	goto	l2080
 21131   0063BE                     u8710:
 21132   0063BE                     
 21133                           ;../../VLCBlib_PIC/vlcb.c: 1327:         factoryReset();
 21134   0063BE  EC19  F02B         	call	_factoryReset	;wreg free
 21135   0063C2                     l2080:
 21136                           
 21137                           ;../../VLCBlib_PIC/vlcb.c: 1331:     powerUp();
 21138   0063C2  EC16  F02C         	call	_powerUp	;wreg free
 21139   0063C6                     
 21140                           ;../../VLCBlib_PIC/vlcb.c: 1334:     {INTCON0bits.GIE = 1;};
 21141   0063C6  8ED6               	bsf	214,7,c	;volatile
 21142                           
 21143                           ;../../VLCBlib_PIC/vlcb.c: 1335:     checkPowerOnPb();
 21144   0063C8  EC4D  F033         	call	_checkPowerOnPb	;wreg free
 21145   0063CC                     
 21146                           ;../../VLCBlib_PIC/vlcb.c: 1338:     {INTCON0bits.GIE = 0;};
 21147   0063CC  9ED6               	bcf	214,7,c	;volatile
 21148   0063CE                     
 21149                           ;../../VLCBlib_PIC/vlcb.c: 1339:     setup();
 21150   0063CE  ECDE  F026         	call	_setup	;wreg free
 21151   0063D2                     
 21152                           ;../../VLCBlib_PIC/vlcb.c: 1342:     {INTCON0bits.GIE = 1;};
 21153   0063D2  8ED6               	bsf	214,7,c	;volatile
 21154   0063D4                     l11131:
 21155                           
 21156                           ;../../VLCBlib_PIC/vlcb.c: 1346:         poll();
 21157   0063D4  EC63  F017         	call	_poll	;wreg free
 21158   0063D8                     
 21159                           ;../../VLCBlib_PIC/vlcb.c: 1347:         loop();
 21160   0063D8  ECD5  F03C         	call	_loop	;wreg free
 21161   0063DC  EFEA  F031         	goto	l11131
 21162   0063E0  EF01  F005         	goto	start
 21163   0063E4                     __end_of_main:
 21164                           	callstack 0
 21165                           
 21166 ;; *************** function _setup *****************
 21167 ;; Defined at:
 21168 ;;		line 212 in file "../main.c"
 21169 ;; Parameters:    Size  Location     Type
 21170 ;;		None
 21171 ;; Auto vars:     Size  Location     Type
 21172 ;;		None
 21173 ;; Return value:  Size  Location     Type
 21174 ;;                  1    wreg      void 
 21175 ;; Registers used:
 21176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21177 ;; Tracked objects:
 21178 ;;		On entry : 0/0
 21179 ;;		On exit  : 0/0
 21180 ;;		Unchanged: 0/0
 21181 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21186 ;;Total ram usage:        0 bytes
 21187 ;; Hardware stack levels used: 1
 21188 ;; Hardware stack levels required when called: 2
 21189 ;; This function calls:
 21190 ;;		_initARGB
 21191 ;;		_setTimedResponseDelay
 21192 ;;		_tickGet
 21193 ;;		_updateLedRange
 21194 ;; This function is called by:
 21195 ;;		_main
 21196 ;; This function uses a non-reentrant model
 21197 ;;
 21198                           
 21199                           	psect	text1
 21200   004DBC                     __ptext1:
 21201                           	callstack 0
 21202   004DBC                     _setup:
 21203                           	callstack 124
 21204   004DBC                     
 21205                           ;../main.c: 214:     transport = &canTransport;
 21206   004DBC  0EF9               	movlw	low _canTransport
 21207   004DBE  0105               	movlb	5	; () banked
 21208   004DC0  6F91               	movwf	_transport& (0+255),b
 21209   004DC2  0EFF               	movlw	high _canTransport
 21210   004DC4  6F92               	movwf	(_transport+1)& (0+255),b
 21211   004DC6                     
 21212                           ; BSR set to: 5
 21213                           ;../main.c: 219:     setTimedResponseDelay(5);
 21214   004DC6  0E05               	movlw	5
 21215   004DC8  EC83  F041         	call	_setTimedResponseDelay
 21216   004DCC                     
 21217                           ;../main.c: 221:     initARGB();
 21218   004DCC  EC6B  F025         	call	_initARGB	;wreg free
 21219   004DD0                     
 21220                           ;../main.c: 223:     ANSELA = 0x00;
 21221   004DD0  0104               	movlb	4	; () banked
 21222   004DD2  6B00               	clrf	0,b	;volatile
 21223   004DD4                     
 21224                           ; BSR set to: 4
 21225                           ;../main.c: 224:     ANSELB = 0x00;
 21226   004DD4  6B08               	clrf	8,b	;volatile
 21227   004DD6                     
 21228                           ; BSR set to: 4
 21229                           ;../main.c: 225:     ANSELC = 0x00;
 21230   004DD6  6B10               	clrf	16,b	;volatile
 21231   004DD8                     
 21232                           ; BSR set to: 4
 21233                           ;../main.c: 228:     (INTCON0bits.GIE = 1);
 21234   004DD8  8ED6               	bsf	214,7,c	;volatile
 21235   004DDA                     
 21236                           ; BSR set to: 4
 21237                           ;../main.c: 229:     flashTime.val = tickGet();
 21238   004DDA  ECF7  F039         	call	_tickGet	;wreg free
 21239   004DDE  C501  F580         	movff	?_tickGet,_flashTime
 21240   004DE2  C502  F581         	movff	?_tickGet+1,_flashTime+1
 21241   004DE6  C503  F582         	movff	?_tickGet+2,_flashTime+2
 21242   004DEA  C504  F583         	movff	?_tickGet+3,_flashTime+3
 21243   004DEE                     
 21244                           ;../main.c: 231:     updateLedRange(0, 2, (PaletteIndex)(uint8_t)0x00);
 21245   004DEE  0E02               	movlw	2
 21246   004DF0  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21247   004DF2  0E00               	movlw	0
 21248   004DF4  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21249   004DF6  0E00               	movlw	0
 21250   004DF8  EC82  F03E         	call	_updateLedRange
 21251   004DFC                     
 21252                           ;../main.c: 232:     updateLedRange(3, 5, (PaletteIndex)(uint8_t)0x11);
 21253   004DFC  0E05               	movlw	5
 21254   004DFE  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21255   004E00  0E11               	movlw	17
 21256   004E02  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21257   004E04  0E03               	movlw	3
 21258   004E06  EC82  F03E         	call	_updateLedRange
 21259   004E0A                     
 21260                           ;../main.c: 233:     updateLedRange(6, 8, (PaletteIndex)(uint8_t)0x88);
 21261   004E0A  0E08               	movlw	8
 21262   004E0C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21263   004E0E  0E88               	movlw	136
 21264   004E10  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21265   004E12  0E06               	movlw	6
 21266   004E14  EC82  F03E         	call	_updateLedRange
 21267   004E18                     
 21268                           ;../main.c: 234:     updateLedRange(9, 11, (PaletteIndex)(uint8_t)0xFF);
 21269   004E18  0E0B               	movlw	11
 21270   004E1A  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21271   004E1C  0EFF               	movlw	255
 21272   004E1E  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21273   004E20  0E09               	movlw	9
 21274   004E22  EC82  F03E         	call	_updateLedRange
 21275   004E26                     
 21276                           ;../main.c: 235:     updateLedRange(12, 14, (PaletteIndex)(uint8_t)0x22);
 21277   004E26  0E0E               	movlw	14
 21278   004E28  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21279   004E2A  0E22               	movlw	34
 21280   004E2C  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21281   004E2E  0E0C               	movlw	12
 21282   004E30  EC82  F03E         	call	_updateLedRange
 21283   004E34                     
 21284                           ;../main.c: 236:     updateLedRange(15, 17, (PaletteIndex)(uint8_t)0x33);
 21285   004E34  0E11               	movlw	17
 21286   004E36  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21287   004E38  0E33               	movlw	51
 21288   004E3A  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21289   004E3C  0E0F               	movlw	15
 21290   004E3E  EC82  F03E         	call	_updateLedRange
 21291   004E42                     
 21292                           ;../main.c: 237:     updateLedRange(18, 20, (PaletteIndex)(uint8_t)0x44);
 21293   004E42  0E14               	movlw	20
 21294   004E44  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21295   004E46  0E44               	movlw	68
 21296   004E48  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21297   004E4A  0E12               	movlw	18
 21298   004E4C  EC82  F03E         	call	_updateLedRange
 21299   004E50                     
 21300                           ;../main.c: 238:     updateLedRange(21, 23, (PaletteIndex)(uint8_t)0x55);
 21301   004E50  0E17               	movlw	23
 21302   004E52  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21303   004E54  0E55               	movlw	85
 21304   004E56  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21305   004E58  0E15               	movlw	21
 21306   004E5A  EC82  F03E         	call	_updateLedRange
 21307   004E5E                     
 21308                           ;../main.c: 239:     updateLedRange(24, 26, (PaletteIndex)(uint8_t)0x66);
 21309   004E5E  0E1A               	movlw	26
 21310   004E60  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21311   004E62  0E66               	movlw	102
 21312   004E64  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21313   004E66  0E18               	movlw	24
 21314   004E68  EC82  F03E         	call	_updateLedRange
 21315   004E6C                     
 21316                           ;../main.c: 240:     updateLedRange(27, 29, (PaletteIndex)(uint8_t)0x77);
 21317   004E6C  0E1D               	movlw	29
 21318   004E6E  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21319   004E70  0E77               	movlw	119
 21320   004E72  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21321   004E74  0E1B               	movlw	27
 21322   004E76  EC82  F03E         	call	_updateLedRange
 21323   004E7A                     
 21324                           ;../main.c: 241:     updateLedRange(30, 32, (PaletteIndex)(uint8_t)0x99);
 21325   004E7A  0E20               	movlw	32
 21326   004E7C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21327   004E7E  0E99               	movlw	153
 21328   004E80  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21329   004E82  0E1E               	movlw	30
 21330   004E84  EC82  F03E         	call	_updateLedRange
 21331   004E88                     
 21332                           ;../main.c: 242:     updateLedRange(33, 35, (PaletteIndex)(uint8_t)0xAA);
 21333   004E88  0E23               	movlw	35
 21334   004E8A  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21335   004E8C  0EAA               	movlw	170
 21336   004E8E  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21337   004E90  0E21               	movlw	33
 21338   004E92  EC82  F03E         	call	_updateLedRange
 21339   004E96                     
 21340                           ;../main.c: 243:     updateLedRange(36, 38, (PaletteIndex)(uint8_t)0xBB);
 21341   004E96  0E26               	movlw	38
 21342   004E98  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21343   004E9A  0EBB               	movlw	187
 21344   004E9C  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21345   004E9E  0E24               	movlw	36
 21346   004EA0  EC82  F03E         	call	_updateLedRange
 21347   004EA4                     
 21348                           ;../main.c: 244:     updateLedRange(39, 41, (PaletteIndex)(uint8_t)0xCC);
 21349   004EA4  0E29               	movlw	41
 21350   004EA6  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21351   004EA8  0ECC               	movlw	204
 21352   004EAA  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21353   004EAC  0E27               	movlw	39
 21354   004EAE  EC82  F03E         	call	_updateLedRange
 21355   004EB2                     
 21356                           ;../main.c: 245:     updateLedRange(42, 44, (PaletteIndex)(uint8_t)0xDD);
 21357   004EB2  0E2C               	movlw	44
 21358   004EB4  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21359   004EB6  0EDD               	movlw	221
 21360   004EB8  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21361   004EBA  0E2A               	movlw	42
 21362   004EBC  EC82  F03E         	call	_updateLedRange
 21363   004EC0                     
 21364                           ;../main.c: 246:     updateLedRange(45, 47, (PaletteIndex)(uint8_t)0xEE);
 21365   004EC0  0E2F               	movlw	47
 21366   004EC2  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21367   004EC4  0EEE               	movlw	238
 21368   004EC6  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21369   004EC8  0E2D               	movlw	45
 21370   004ECA  EC82  F03E         	call	_updateLedRange
 21371   004ECE                     
 21372                           ;../main.c: 247:     updateLedRange(48, 50, (PaletteIndex)(uint8_t)0x28);
 21373   004ECE  0E32               	movlw	50
 21374   004ED0  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21375   004ED2  0E28               	movlw	40
 21376   004ED4  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21377   004ED6  0E30               	movlw	48
 21378   004ED8  EC82  F03E         	call	_updateLedRange
 21379   004EDC                     
 21380                           ;../main.c: 248:     updateLedRange(51, 53, (PaletteIndex)(uint8_t)0x40);
 21381   004EDC  0E35               	movlw	53
 21382   004EDE  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21383   004EE0  0E40               	movlw	64
 21384   004EE2  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21385   004EE4  0E33               	movlw	51
 21386   004EE6  EC82  F03E         	call	_updateLedRange
 21387   004EEA                     
 21388                           ;../main.c: 249:     updateLedRange(54, 56, (PaletteIndex)(uint8_t)0x23);
 21389   004EEA  0E38               	movlw	56
 21390   004EEC  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21391   004EEE  0E23               	movlw	35
 21392   004EF0  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21393   004EF2  0E36               	movlw	54
 21394   004EF4  EC82  F03E         	call	_updateLedRange
 21395   004EF8                     
 21396                           ;../main.c: 250:     updateLedRange(57, 254, (PaletteIndex)(uint8_t)0x11);
 21397   004EF8  0EFE               	movlw	254
 21398   004EFA  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21399   004EFC  0E11               	movlw	17
 21400   004EFE  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21401   004F00  0E39               	movlw	57
 21402   004F02  EC82  F03E         	call	_updateLedRange
 21403   004F06                     
 21404                           ;../main.c: 251:     updateLedRange(70, 74, (PaletteIndex)(uint8_t)0x22);
 21405   004F06  0E4A               	movlw	74
 21406   004F08  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 21407   004F0A  0E22               	movlw	34
 21408   004F0C  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 21409   004F0E  0E46               	movlw	70
 21410   004F10  EC82  F03E         	call	_updateLedRange
 21411   004F14  0012               	return		;funcret
 21412   004F16                     __end_of_setup:
 21413                           	callstack 0
 21414                           
 21415 ;; *************** function _setTimedResponseDelay *****************
 21416 ;; Defined at:
 21417 ;;		line 911 in file "../../VLCBlib_PIC/vlcb.c"
 21418 ;; Parameters:    Size  Location     Type
 21419 ;;  delay           1    wreg     unsigned char 
 21420 ;; Auto vars:     Size  Location     Type
 21421 ;;  delay           1    0[COMRAM] unsigned char 
 21422 ;; Return value:  Size  Location     Type
 21423 ;;                  1    wreg      void 
 21424 ;; Registers used:
 21425 ;;		wreg
 21426 ;; Tracked objects:
 21427 ;;		On entry : 0/0
 21428 ;;		On exit  : 0/0
 21429 ;;		Unchanged: 0/0
 21430 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21434 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21435 ;;Total ram usage:        1 bytes
 21436 ;; Hardware stack levels used: 1
 21437 ;; Hardware stack levels required when called: 1
 21438 ;; This function calls:
 21439 ;;		Nothing
 21440 ;; This function is called by:
 21441 ;;		_setup
 21442 ;; This function uses a non-reentrant model
 21443 ;;
 21444                           
 21445                           	psect	text2
 21446   008306                     __ptext2:
 21447                           	callstack 0
 21448   008306                     _setTimedResponseDelay:
 21449                           	callstack 124
 21450                           
 21451                           ;incstack = 0
 21452                           ;setTimedResponseDelay@delay stored from wreg
 21453   008306  6E01               	movwf	setTimedResponseDelay@delay^(0+1280),c
 21454   008308                     
 21455                           ;../../VLCBlib_PIC/vlcb.c: 912:     timedResponseDelay = delay;
 21456   008308  C501  F593         	movff	setTimedResponseDelay@delay,_timedResponseDelay
 21457   00830C  0012               	return		;funcret
 21458   00830E                     __end_of_setTimedResponseDelay:
 21459                           	callstack 0
 21460                           
 21461 ;; *************** function _powerUp *****************
 21462 ;; Defined at:
 21463 ;;		line 886 in file "../../VLCBlib_PIC/vlcb.c"
 21464 ;; Parameters:    Size  Location     Type
 21465 ;;		None
 21466 ;; Auto vars:     Size  Location     Type
 21467 ;;  i               1   44[COMRAM] unsigned char 
 21468 ;;  divider         1    0        unsigned char 
 21469 ;; Return value:  Size  Location     Type
 21470 ;;                  1    wreg      void 
 21471 ;; Registers used:
 21472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21473 ;; Tracked objects:
 21474 ;;		On entry : 0/0
 21475 ;;		On exit  : 0/0
 21476 ;;		Unchanged: 0/0
 21477 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21480 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21481 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21482 ;;Total ram usage:        5 bytes
 21483 ;; Hardware stack levels used: 1
 21484 ;; Hardware stack levels required when called: 6
 21485 ;; This function calls:
 21486 ;;		_bootPowerUp
 21487 ;;		_canPowerUp
 21488 ;;		_consumerPowerUp
 21489 ;;		_initTicker
 21490 ;;		_initTimedResponse
 21491 ;;		_leds_powerUp
 21492 ;;		_mnsPowerUp
 21493 ;;		_nvPowerUp
 21494 ;;		_teachPowerUp
 21495 ;; This function is called by:
 21496 ;;		_main
 21497 ;; This function uses a non-reentrant model
 21498 ;;
 21499                           
 21500                           	psect	text3
 21501   00582C                     __ptext3:
 21502                           	callstack 0
 21503   00582C                     _powerUp:
 21504                           	callstack 120
 21505   00582C                     
 21506                           ;../../VLCBlib_PIC/vlcb.c: 887:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 888:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 891:     initTicker(0);
 21507   00582C  0E00               	movlw	0
 21508   00582E  EC16  F03C         	call	_initTicker
 21509   005832                     
 21510                           ;../../VLCBlib_PIC/vlcb.c: 892:     initTimedResponse();
 21511   005832  EC8B  F041         	call	_initTimedResponse	;wreg free
 21512   005836                     
 21513                           ;../../VLCBlib_PIC/vlcb.c: 893:     leds_powerUp();
 21514   005836  ECAB  F040         	call	_leds_powerUp	;wreg free
 21515   00583A                     
 21516                           ;../../VLCBlib_PIC/vlcb.c: 894:     timedResponseDelay = 5;
 21517   00583A  0E05               	movlw	5
 21518   00583C  0105               	movlb	5	; () banked
 21519   00583E  6F93               	movwf	_timedResponseDelay& (0+255),b
 21520   005840                     
 21521                           ; BSR set to: 5
 21522                           ;../../VLCBlib_PIC/vlcb.c: 896:     for (i=0; i<6; i++) {
 21523   005840  6A2D               	clrf	powerUp@i^(0+1280),c
 21524   005842                     l10941:
 21525                           
 21526                           ;../../VLCBlib_PIC/vlcb.c: 897:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
 21527   005842  502D               	movf	powerUp@i^(0+1280),w,c
 21528   005844  0D02               	mullw	2
 21529   005846  0E89               	movlw	low _services
 21530   005848  24F3               	addwf	243,w,c
 21531   00584A  6EF6               	movwf	tblptrl,c
 21532   00584C  0EFF               	movlw	high _services
 21533   00584E  20F4               	addwfc	244,w,c
 21534   005850  6EF7               	movwf	tblptrh,c
 21535   005852                     	if	1	;There are 3 active tblptr bytes
 21536   005852  6AF8               	clrf	tblptru,c
 21537   005854  0E00               	movlw	low (__mediumconst shr (0+16))
 21538   005856  22F8               	addwfc	tblptru,f,c
 21539   005858                     	endif
 21540   005858  0009               	tblrd		*+
 21541   00585A  50F5               	movf	tablat,w,c
 21542   00585C  0009               	tblrd		*+
 21543   00585E  10F5               	iorwf	tablat,w,c
 21544   005860  B4D8               	btfsc	status,2,c
 21545   005862  EF35  F02C         	goto	u8331
 21546   005866  EF37  F02C         	goto	u8330
 21547   00586A                     u8331:
 21548   00586A  EF88  F02C         	goto	l10947
 21549   00586E                     u8330:
 21550   00586E  502D               	movf	powerUp@i^(0+1280),w,c
 21551   005870  0D02               	mullw	2
 21552   005872  0E89               	movlw	low _services
 21553   005874  24F3               	addwf	243,w,c
 21554   005876  6EF6               	movwf	tblptrl,c
 21555   005878  0EFF               	movlw	high _services
 21556   00587A  20F4               	addwfc	244,w,c
 21557   00587C  6EF7               	movwf	tblptrh,c
 21558   00587E                     	if	1	;There are 3 active tblptr bytes
 21559   00587E  6AF8               	clrf	tblptru,c
 21560   005880  0E00               	movlw	low (__mediumconst shr (0+16))
 21561   005882  22F8               	addwfc	tblptru,f,c
 21562   005884                     	endif
 21563   005884  0009               	tblrd		*+
 21564   005886  C4F5 F529          	movff	tablat,??_powerUp
 21565   00588A  0009               	tblrd		*+
 21566   00588C  C4F5 F52A          	movff	tablat,??_powerUp+1
 21567   005890  0E04               	movlw	4
 21568   005892  2629               	addwf	??_powerUp^(0+1280),f,c
 21569   005894  0E00               	movlw	0
 21570   005896  222A               	addwfc	(??_powerUp+1)^(0+1280),f,c
 21571   005898  C529  F4F6         	movff	??_powerUp,tblptrl
 21572   00589C  C52A  F4F7         	movff	??_powerUp+1,tblptrh
 21573   0058A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21574   0058A0  6AF8               	clrf	tblptru,c
 21575   0058A2                     	endif
 21576   0058A2                     	if	0	;tblptru may be non-zero
 21577   0058A2                     	endif
 21578   0058A2  0009               	tblrd		*+
 21579   0058A4  50F5               	movf	tablat,w,c
 21580   0058A6  0009               	tblrd		*+
 21581   0058A8  10F5               	iorwf	tablat,w,c
 21582   0058AA  B4D8               	btfsc	status,2,c
 21583   0058AC  EF5A  F02C         	goto	u8341
 21584   0058B0  EF5C  F02C         	goto	u8340
 21585   0058B4                     u8341:
 21586   0058B4  EF88  F02C         	goto	l10947
 21587   0058B8                     u8340:
 21588   0058B8                     
 21589                           ;../../VLCBlib_PIC/vlcb.c: 898:             services[i]->powerUp();
 21590   0058B8  502D               	movf	powerUp@i^(0+1280),w,c
 21591   0058BA  0D02               	mullw	2
 21592   0058BC  0E89               	movlw	low _services
 21593   0058BE  24F3               	addwf	243,w,c
 21594   0058C0  6EF6               	movwf	tblptrl,c
 21595   0058C2  0EFF               	movlw	high _services
 21596   0058C4  20F4               	addwfc	244,w,c
 21597   0058C6  6EF7               	movwf	tblptrh,c
 21598   0058C8                     	if	1	;There are 3 active tblptr bytes
 21599   0058C8  6AF8               	clrf	tblptru,c
 21600   0058CA  0E00               	movlw	low (__mediumconst shr (0+16))
 21601   0058CC  22F8               	addwfc	tblptru,f,c
 21602   0058CE                     	endif
 21603   0058CE  0009               	tblrd		*+
 21604   0058D0  C4F5 F529          	movff	tablat,??_powerUp
 21605   0058D4  0009               	tblrd		*+
 21606   0058D6  C4F5 F52A          	movff	tablat,??_powerUp+1
 21607   0058DA  0E04               	movlw	4
 21608   0058DC  2629               	addwf	??_powerUp^(0+1280),f,c
 21609   0058DE  0E00               	movlw	0
 21610   0058E0  222A               	addwfc	(??_powerUp+1)^(0+1280),f,c
 21611   0058E2  C529  F4F6         	movff	??_powerUp,tblptrl
 21612   0058E6  C52A  F4F7         	movff	??_powerUp+1,tblptrh
 21613   0058EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21614   0058EA  6AF8               	clrf	tblptru,c
 21615   0058EC                     	endif
 21616   0058EC                     	if	0	;tblptru may be non-zero
 21617   0058EC                     	endif
 21618   0058EC  0009               	tblrd		*+
 21619   0058EE  C4F5 F52B          	movff	tablat,??_powerUp+2
 21620   0058F2  0009               	tblrd		*+
 21621   0058F4  C4F5 F52C          	movff	tablat,??_powerUp+3
 21622   0058F8  D802               	call	u8358
 21623   0058FA  EF88  F02C         	goto	u8359
 21624   0058FE                     u8358:
 21625   0058FE  0005               	push	
 21626   005900  6EFA               	movwf	pclath,c
 21627   005902  502B               	movf	(??_powerUp+2)^(0+1280),w,c
 21628   005904  6EFD               	movwf	tosl,c
 21629   005906  502C               	movf	(??_powerUp+3)^(0+1280),w,c
 21630   005908  6EFE               	movwf	tosh,c
 21631   00590A  6AFF               	clrf	tosu,c
 21632   00590C  50FA               	movf	pclath,w,c
 21633   00590E  0012               	return		;indir
 21634   005910                     u8359:
 21635   005910                     l10947:
 21636                           
 21637                           ;../../VLCBlib_PIC/vlcb.c: 900:     }
 21638   005910  2A2D               	incf	powerUp@i^(0+1280),f,c
 21639   005912  0E05               	movlw	5
 21640   005914  642D               	cpfsgt	powerUp@i^(0+1280),c
 21641   005916  EF8F  F02C         	goto	u8361
 21642   00591A  EF91  F02C         	goto	u8360
 21643   00591E                     u8361:
 21644   00591E  EF21  F02C         	goto	l10941
 21645   005922                     u8360:
 21646   005922  0012               	return		;funcret
 21647   005924                     __end_of_powerUp:
 21648                           	callstack 0
 21649                           
 21650 ;; *************** function _nvPowerUp *****************
 21651 ;; Defined at:
 21652 ;;		line 136 in file "../../VLCBlib_PIC/nv.c"
 21653 ;; Parameters:    Size  Location     Type
 21654 ;;		None
 21655 ;; Auto vars:     Size  Location     Type
 21656 ;;  i               1   17[COMRAM] unsigned char 
 21657 ;; Return value:  Size  Location     Type
 21658 ;;                  1    wreg      void 
 21659 ;; Registers used:
 21660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21661 ;; Tracked objects:
 21662 ;;		On entry : 0/0
 21663 ;;		On exit  : 0/0
 21664 ;;		Unchanged: 0/0
 21665 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21667 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21669 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21670 ;;Total ram usage:        1 bytes
 21671 ;; Hardware stack levels used: 1
 21672 ;; Hardware stack levels required when called: 4
 21673 ;; This function calls:
 21674 ;;		_loadNvCache
 21675 ;; This function is called by:
 21676 ;;		_powerUp
 21677 ;; This function uses a non-reentrant model
 21678 ;;
 21679                           
 21680                           	psect	text4
 21681   007DC6                     __ptext4:
 21682                           	callstack 0
 21683   007DC6                     _nvPowerUp:
 21684                           	callstack 121
 21685   007DC6                     
 21686                           ;../../VLCBlib_PIC/nv.c: 138:     uint8_t i;;../../VLCBlib_PIC/nv.c: 139:     for (i=1; 
      +                          i <= 2; i++) {
 21687   007DC6  0E01               	movlw	1
 21688   007DC8  6E12               	movwf	nvPowerUp@i^(0+1280),c
 21689   007DCA                     l10591:
 21690                           
 21691                           ;../../VLCBlib_PIC/nv.c: 140:         nvDiagnostics[i].asUint = 0;
 21692   007DCA  5012               	movf	nvPowerUp@i^(0+1280),w,c
 21693   007DCC  0D02               	mullw	2
 21694   007DCE  0EBB               	movlw	low _nvDiagnostics
 21695   007DD0  24F3               	addwf	243,w,c
 21696   007DD2  6ED9               	movwf	fsr2l,c
 21697   007DD4  0E05               	movlw	high _nvDiagnostics
 21698   007DD6  20F4               	addwfc	prodh,w,c
 21699   007DD8  6EDA               	movwf	fsr2h,c
 21700   007DDA  6ADE               	clrf	postinc2,c
 21701   007DDC  6ADD               	clrf	postdec2,c
 21702   007DDE                     
 21703                           ;../../VLCBlib_PIC/nv.c: 141:     }
 21704   007DDE  2A12               	incf	nvPowerUp@i^(0+1280),f,c
 21705   007DE0  0E02               	movlw	2
 21706   007DE2  6412               	cpfsgt	nvPowerUp@i^(0+1280),c
 21707   007DE4  EFF6  F03E         	goto	u8031
 21708   007DE8  EFF8  F03E         	goto	u8030
 21709   007DEC                     u8031:
 21710   007DEC  EFE5  F03E         	goto	l10591
 21711   007DF0                     u8030:
 21712   007DF0                     
 21713                           ;../../VLCBlib_PIC/nv.c: 142:     nvDiagnostics[0x00].asUint = 2;
 21714   007DF0  0E00               	movlw	0
 21715   007DF2  0105               	movlb	5	; () banked
 21716   007DF4  6FBC               	movwf	(_nvDiagnostics+1)& (0+255),b
 21717   007DF6  0E02               	movlw	2
 21718   007DF8  6FBB               	movwf	_nvDiagnostics& (0+255),b
 21719   007DFA                     
 21720                           ; BSR set to: 5
 21721                           ;../../VLCBlib_PIC/nv.c: 145:     loadNvCache();
 21722   007DFA  ECE5  F03B         	call	_loadNvCache	;wreg free
 21723   007DFE  0012               	return		;funcret
 21724   007E00                     __end_of_nvPowerUp:
 21725                           	callstack 0
 21726                           
 21727 ;; *************** function _mnsPowerUp *****************
 21728 ;; Defined at:
 21729 ;;		line 297 in file "../../VLCBlib_PIC/mns.c"
 21730 ;; Parameters:    Size  Location     Type
 21731 ;;		None
 21732 ;; Auto vars:     Size  Location     Type
 21733 ;;  temp            2   13[COMRAM] int 
 21734 ;;  i               1   12[COMRAM] unsigned char 
 21735 ;; Return value:  Size  Location     Type
 21736 ;;                  1    wreg      void 
 21737 ;; Registers used:
 21738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21739 ;; Tracked objects:
 21740 ;;		On entry : 0/0
 21741 ;;		On exit  : 0/0
 21742 ;;		Unchanged: 0/0
 21743 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21745 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21747 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21748 ;;Total ram usage:        3 bytes
 21749 ;; Hardware stack levels used: 1
 21750 ;; Hardware stack levels required when called: 3
 21751 ;; This function calls:
 21752 ;;		_readNVM
 21753 ;;		_setLEDsByMode
 21754 ;;		_tickGet
 21755 ;; This function is called by:
 21756 ;;		_powerUp
 21757 ;; This function uses a non-reentrant model
 21758 ;;
 21759                           
 21760                           	psect	text5
 21761   004F16                     __ptext5:
 21762                           	callstack 0
 21763   004F16                     _mnsPowerUp:
 21764                           	callstack 122
 21765   004F16                     
 21766                           ;../../VLCBlib_PIC/mns.c: 298:     int temp;;../../VLCBlib_PIC/mns.c: 299:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 301:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
 21767   004F16  0EFD               	movlw	253
 21768   004F18  6E07               	movwf	readNVM@index^(0+1280),c
 21769   004F1A  0E03               	movlw	3
 21770   004F1C  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21771   004F1E  0E00               	movlw	0
 21772   004F20  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21773   004F22  0E00               	movlw	0
 21774   004F24  EC6C  F03A         	call	_readNVM
 21775   004F28  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21776   004F2C  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21777   004F30                     
 21778                           ;../../VLCBlib_PIC/mns.c: 302:     if (temp < 0) {
 21779   004F30  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21780   004F32  EF9F  F027         	goto	u7420
 21781   004F36  EF9D  F027         	goto	u7421
 21782   004F3A                     u7421:
 21783   004F3A  EFA4  F027         	goto	l1273
 21784   004F3E                     u7420:
 21785   004F3E                     l10059:
 21786                           
 21787                           ;../../VLCBlib_PIC/mns.c: 303:         nn.bytes.hi = 0;
 21788   004F3E  0105               	movlb	5	; () banked
 21789   004F40  6B90               	clrf	(_nn+1)& (0+255),b
 21790                           
 21791                           ;../../VLCBlib_PIC/mns.c: 304:         nn.bytes.lo = 0;
 21792   004F42  6B8F               	clrf	_nn& (0+255),b
 21793                           
 21794                           ;../../VLCBlib_PIC/mns.c: 305:     } else {
 21795   004F44  EFBE  F027         	goto	l10067
 21796   004F48                     l1273:
 21797                           
 21798                           ;../../VLCBlib_PIC/mns.c: 306:         nn.bytes.hi = (uint8_t)temp;
 21799   004F48  C50E  F590         	movff	mnsPowerUp@temp,_nn+1
 21800   004F4C                     
 21801                           ;../../VLCBlib_PIC/mns.c: 307:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
 21802   004F4C  0EFC               	movlw	252
 21803   004F4E  6E07               	movwf	readNVM@index^(0+1280),c
 21804   004F50  0E03               	movlw	3
 21805   004F52  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21806   004F54  0E00               	movlw	0
 21807   004F56  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21808   004F58  0E00               	movlw	0
 21809   004F5A  EC6C  F03A         	call	_readNVM
 21810   004F5E  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21811   004F62  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21812   004F66                     
 21813                           ;../../VLCBlib_PIC/mns.c: 308:         if (temp < 0) {
 21814   004F66  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21815   004F68  EFBA  F027         	goto	u7430
 21816   004F6C  EFB8  F027         	goto	u7431
 21817   004F70                     u7431:
 21818   004F70  EFBC  F027         	goto	l1275
 21819   004F74                     u7430:
 21820   004F74  EF9F  F027         	goto	l10059
 21821   004F78                     l1275:
 21822                           
 21823                           ;../../VLCBlib_PIC/mns.c: 312:             nn.bytes.lo = (uint8_t)temp;
 21824   004F78  C50E  F58F         	movff	mnsPowerUp@temp,_nn
 21825   004F7C                     l10067:
 21826                           
 21827                           ;../../VLCBlib_PIC/mns.c: 315:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
 21828   004F7C  0EFB               	movlw	251
 21829   004F7E  6E07               	movwf	readNVM@index^(0+1280),c
 21830   004F80  0E03               	movlw	3
 21831   004F82  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21832   004F84  0E00               	movlw	0
 21833   004F86  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21834   004F88  0E00               	movlw	0
 21835   004F8A  EC6C  F03A         	call	_readNVM
 21836   004F8E  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21837   004F92  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21838   004F96                     
 21839                           ;../../VLCBlib_PIC/mns.c: 316:     if (temp < 0) {
 21840   004F96  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21841   004F98  EFD2  F027         	goto	u7440
 21842   004F9C  EFD0  F027         	goto	u7441
 21843   004FA0                     u7441:
 21844   004FA0  EFD6  F027         	goto	l1277
 21845   004FA4                     u7440:
 21846   004FA4                     
 21847                           ;../../VLCBlib_PIC/mns.c: 317:         mode_state = MODE_UNINITIALISED;
 21848   004FA4  0105               	movlb	5	; () banked
 21849   004FA6  69A1               	setf	_mode_state& (0+255),b
 21850                           
 21851                           ;../../VLCBlib_PIC/mns.c: 318:     } else {
 21852   004FA8  EFD8  F027         	goto	l1278
 21853   004FAC                     l1277:
 21854                           
 21855                           ;../../VLCBlib_PIC/mns.c: 319:         mode_state = (uint8_t)temp;
 21856   004FAC  C50E  F5A1         	movff	mnsPowerUp@temp,_mode_state
 21857   004FB0                     l1278:
 21858                           
 21859                           ;../../VLCBlib_PIC/mns.c: 321:     setupModePreviousMode = mode_state;
 21860   004FB0  C5A1  F59E         	movff	_mode_state,_setupModePreviousMode
 21861   004FB4                     
 21862                           ;../../VLCBlib_PIC/mns.c: 322:     temp = readNVM(EEPROM_NVM_TYPE, 0x3F9);
 21863   004FB4  0EF9               	movlw	249
 21864   004FB6  6E07               	movwf	readNVM@index^(0+1280),c
 21865   004FB8  0E03               	movlw	3
 21866   004FBA  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21867   004FBC  0E00               	movlw	0
 21868   004FBE  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21869   004FC0  0E00               	movlw	0
 21870   004FC2  EC6C  F03A         	call	_readNVM
 21871   004FC6  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21872   004FCA  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21873   004FCE                     
 21874                           ;../../VLCBlib_PIC/mns.c: 323:     if (temp < 0) {
 21875   004FCE  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21876   004FD0  EFEE  F027         	goto	u7450
 21877   004FD4  EFEC  F027         	goto	u7451
 21878   004FD8                     u7451:
 21879   004FD8  EFF2  F027         	goto	l1279
 21880   004FDC                     u7450:
 21881   004FDC                     
 21882                           ;../../VLCBlib_PIC/mns.c: 324:         mode_flags = 0;
 21883   004FDC  0105               	movlb	5	; () banked
 21884   004FDE  6BA4               	clrf	_mode_flags& (0+255),b
 21885                           
 21886                           ;../../VLCBlib_PIC/mns.c: 325:     } else {
 21887   004FE0  EFF4  F027         	goto	l10079
 21888   004FE4                     l1279:
 21889                           
 21890                           ;../../VLCBlib_PIC/mns.c: 326:         mode_flags = (uint8_t)temp;
 21891   004FE4  C50E  F5A4         	movff	mnsPowerUp@temp,_mode_flags
 21892   004FE8                     l10079:
 21893                           
 21894                           ;../../VLCBlib_PIC/mns.c: 328:     mode_flags &= ~8;
 21895   004FE8  0105               	movlb	5	; () banked
 21896   004FEA  97A4               	bcf	_mode_flags& (0+255),3,b
 21897                           
 21898                           ;../../VLCBlib_PIC/mns.c: 330:     mode_flags |= 8;
 21899   004FEC  87A4               	bsf	_mode_flags& (0+255),3,b
 21900   004FEE                     
 21901                           ; BSR set to: 5
 21902                           ;../../VLCBlib_PIC/mns.c: 332:     last_mode_flags = mode_flags;
 21903   004FEE  C5A4  F59F         	movff	_mode_flags,_last_mode_flags
 21904   004FF2                     
 21905                           ; BSR set to: 5
 21906                           ;../../VLCBlib_PIC/mns.c: 333:     setLEDsByMode();
 21907   004FF2  EC3E  F03E         	call	_setLEDsByMode	;wreg free
 21908   004FF6                     
 21909                           ;../../VLCBlib_PIC/mns.c: 335:     pbTimer.val = tickGet();
 21910   004FF6  ECF7  F039         	call	_tickGet	;wreg free
 21911   004FFA  C501  F570         	movff	?_tickGet,_pbTimer
 21912   004FFE  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 21913   005002  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 21914   005006  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 21915   00500A                     
 21916                           ;../../VLCBlib_PIC/mns.c: 336:     pbWasPushed = FALSE;
 21917   00500A  0105               	movlb	5	; () banked
 21918   00500C  6B9D               	clrf	_pbWasPushed& (0+255),b
 21919   00500E                     
 21920                           ; BSR set to: 5
 21921                           ;../../VLCBlib_PIC/mns.c: 340:     for (i=1; i<= 6; i++) {
 21922   00500E  0E01               	movlw	1
 21923   005010  6E0D               	movwf	mnsPowerUp@i^(0+1280),c
 21924   005012                     l10095:
 21925                           
 21926                           ;../../VLCBlib_PIC/mns.c: 341:         mnsDiagnostics[i].asInt = 0;
 21927   005012  500D               	movf	mnsPowerUp@i^(0+1280),w,c
 21928   005014  0D02               	mullw	2
 21929   005016  0EAD               	movlw	low _mnsDiagnostics
 21930   005018  24F3               	addwf	243,w,c
 21931   00501A  6ED9               	movwf	fsr2l,c
 21932   00501C  0E05               	movlw	high _mnsDiagnostics
 21933   00501E  20F4               	addwfc	prodh,w,c
 21934   005020  6EDA               	movwf	fsr2h,c
 21935   005022  6ADE               	clrf	postinc2,c
 21936   005024  6ADD               	clrf	postdec2,c
 21937   005026                     
 21938                           ;../../VLCBlib_PIC/mns.c: 342:     }
 21939   005026  2A0D               	incf	mnsPowerUp@i^(0+1280),f,c
 21940   005028  0E06               	movlw	6
 21941   00502A  640D               	cpfsgt	mnsPowerUp@i^(0+1280),c
 21942   00502C  EF1A  F028         	goto	u7461
 21943   005030  EF1C  F028         	goto	u7460
 21944   005034                     u7461:
 21945   005034  EF09  F028         	goto	l10095
 21946   005038                     u7460:
 21947   005038                     
 21948                           ;../../VLCBlib_PIC/mns.c: 343:     mnsDiagnostics[0x00].asInt = 6;
 21949   005038  0E00               	movlw	0
 21950   00503A  0105               	movlb	5	; () banked
 21951   00503C  6FAE               	movwf	(_mnsDiagnostics+1)& (0+255),b
 21952   00503E  0E06               	movlw	6
 21953   005040  6FAD               	movwf	_mnsDiagnostics& (0+255),b
 21954   005042                     
 21955                           ; BSR set to: 5
 21956                           ;../../VLCBlib_PIC/mns.c: 345:     heartbeatSequence = 0;
 21957   005042  6B9C               	clrf	_heartbeatSequence& (0+255),b
 21958                           
 21959                           ;../../VLCBlib_PIC/mns.c: 346:     heartbeatTimer.val = 0;
 21960   005044  0E00               	movlw	0
 21961   005046  6F6C               	movwf	_heartbeatTimer& (0+255),b
 21962   005048  0E00               	movlw	0
 21963   00504A  6F6D               	movwf	(_heartbeatTimer+1)& (0+255),b
 21964   00504C  0E00               	movlw	0
 21965   00504E  6F6E               	movwf	(_heartbeatTimer+2)& (0+255),b
 21966   005050  0E00               	movlw	0
 21967   005052  6F6F               	movwf	(_heartbeatTimer+3)& (0+255),b
 21968                           
 21969                           ;../../VLCBlib_PIC/mns.c: 347:     uptimeTimer.val = 0;
 21970   005054  0E00               	movlw	0
 21971   005056  6F68               	movwf	_uptimeTimer& (0+255),b
 21972   005058  0E00               	movlw	0
 21973   00505A  6F69               	movwf	(_uptimeTimer+1)& (0+255),b
 21974   00505C  0E00               	movlw	0
 21975   00505E  6F6A               	movwf	(_uptimeTimer+2)& (0+255),b
 21976   005060  0E00               	movlw	0
 21977   005062  6F6B               	movwf	(_uptimeTimer+3)& (0+255),b
 21978   005064                     
 21979                           ; BSR set to: 5
 21980   005064  0012               	return		;funcret
 21981   005066                     __end_of_mnsPowerUp:
 21982                           	callstack 0
 21983                           
 21984 ;; *************** function _consumerPowerUp *****************
 21985 ;; Defined at:
 21986 ;;		line 92 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 21987 ;; Parameters:    Size  Location     Type
 21988 ;;		None
 21989 ;; Auto vars:     Size  Location     Type
 21990 ;;  temp            1    0[COMRAM] unsigned char 
 21991 ;; Return value:  Size  Location     Type
 21992 ;;                  1    wreg      void 
 21993 ;; Registers used:
 21994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21995 ;; Tracked objects:
 21996 ;;		On entry : 0/0
 21997 ;;		On exit  : 0/0
 21998 ;;		Unchanged: 0/0
 21999 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22004 ;;Total ram usage:        1 bytes
 22005 ;; Hardware stack levels used: 1
 22006 ;; Hardware stack levels required when called: 1
 22007 ;; This function calls:
 22008 ;;		Nothing
 22009 ;; This function is called by:
 22010 ;;		_powerUp
 22011 ;; This function uses a non-reentrant model
 22012 ;;
 22013                           
 22014                           	psect	text6
 22015   007E00                     __ptext6:
 22016                           	callstack 0
 22017   007E00                     _consumerPowerUp:
 22018                           	callstack 124
 22019   007E00                     
 22020                           ;../../VLCBlib_PIC/event_consumer_simple.c: 94:     uint8_t temp;;../../VLCBlib_PIC/even
      +                          t_consumer_simple.c: 96:     for (temp=1; temp<=2; temp++) {
 22021   007E00  0E01               	movlw	1
 22022   007E02  6E01               	movwf	consumerPowerUp@temp^(0+1280),c
 22023   007E04                     l9669:
 22024                           
 22025                           ;../../VLCBlib_PIC/event_consumer_simple.c: 97:         consumerDiagnostics[temp].asUint
      +                           = 0;
 22026   007E04  5001               	movf	consumerPowerUp@temp^(0+1280),w,c
 22027   007E06  0D02               	mullw	2
 22028   007E08  0EC1               	movlw	low _consumerDiagnostics
 22029   007E0A  24F3               	addwf	243,w,c
 22030   007E0C  6ED9               	movwf	fsr2l,c
 22031   007E0E  0E05               	movlw	high _consumerDiagnostics
 22032   007E10  20F4               	addwfc	prodh,w,c
 22033   007E12  6EDA               	movwf	fsr2h,c
 22034   007E14  6ADE               	clrf	postinc2,c
 22035   007E16  6ADD               	clrf	postdec2,c
 22036   007E18                     
 22037                           ;../../VLCBlib_PIC/event_consumer_simple.c: 98:     }
 22038   007E18  2A01               	incf	consumerPowerUp@temp^(0+1280),f,c
 22039   007E1A  0E02               	movlw	2
 22040   007E1C  6401               	cpfsgt	consumerPowerUp@temp^(0+1280),c
 22041   007E1E  EF13  F03F         	goto	u6911
 22042   007E22  EF15  F03F         	goto	u6910
 22043   007E26                     u6911:
 22044   007E26  EF02  F03F         	goto	l9669
 22045   007E2A                     u6910:
 22046   007E2A                     
 22047                           ;../../VLCBlib_PIC/event_consumer_simple.c: 99:     consumerDiagnostics[0].asUint = 2;
 22048   007E2A  0E00               	movlw	0
 22049   007E2C  0105               	movlb	5	; () banked
 22050   007E2E  6FC2               	movwf	(_consumerDiagnostics+1)& (0+255),b
 22051   007E30  0E02               	movlw	2
 22052   007E32  6FC1               	movwf	_consumerDiagnostics& (0+255),b
 22053   007E34                     
 22054                           ; BSR set to: 5
 22055   007E34  0012               	return		;funcret
 22056   007E36                     __end_of_consumerPowerUp:
 22057                           	callstack 0
 22058                           
 22059 ;; *************** function _canPowerUp *****************
 22060 ;; Defined at:
 22061 ;;		line 254 in file "../../VLCBlib_PIC/can18_can_2.c"
 22062 ;; Parameters:    Size  Location     Type
 22063 ;;		None
 22064 ;; Auto vars:     Size  Location     Type
 22065 ;;  temp            2   12[COMRAM] int 
 22066 ;;  txFifoObj       2    0        PTR unsigned char 
 22067 ;; Return value:  Size  Location     Type
 22068 ;;                  1    wreg      void 
 22069 ;; Registers used:
 22070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22071 ;; Tracked objects:
 22072 ;;		On entry : 0/0
 22073 ;;		On exit  : 0/0
 22074 ;;		Unchanged: 0/0
 22075 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22079 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22080 ;;Total ram usage:        2 bytes
 22081 ;; Hardware stack levels used: 1
 22082 ;; Hardware stack levels required when called: 3
 22083 ;; This function calls:
 22084 ;;		_CAN1_OperationModeSet
 22085 ;;		_prepareSelfEnumResponse
 22086 ;;		_readNVM
 22087 ;;		_tickGet
 22088 ;; This function is called by:
 22089 ;;		_powerUp
 22090 ;; This function uses a non-reentrant model
 22091 ;;
 22092                           
 22093                           	psect	text7
 22094   004C4A                     __ptext7:
 22095                           	callstack 0
 22096   004C4A                     _canPowerUp:
 22097                           	callstack 122
 22098   004C4A                     
 22099                           ;../../VLCBlib_PIC/can18_can_2.c: 255:     int temp;;../../VLCBlib_PIC/can18_can_2.c: 25
      +                          6:     uint8_t* txFifoObj;;../../VLCBlib_PIC/can18_can_2.c: 259:     rxQueue.readIndex =
      +                           0;
 22100   004C4A  0105               	movlb	5	; () banked
 22101   004C4C  6BC9               	clrf	(_rxQueue+2)& (0+255),b
 22102                           
 22103                           ;../../VLCBlib_PIC/can18_can_2.c: 260:     rxQueue.writeIndex = 0;
 22104   004C4E  6BCA               	clrf	(_rxQueue+3)& (0+255),b
 22105   004C50                     
 22106                           ; BSR set to: 5
 22107                           ;../../VLCBlib_PIC/can18_can_2.c: 261:     rxQueue.messages = rxBuffers;
 22108   004C50  0E46               	movlw	low _rxBuffers
 22109   004C52  6FC7               	movwf	_rxQueue& (0+255),b
 22110   004C54  0E06               	movlw	high _rxBuffers
 22111   004C56  6FC8               	movwf	(_rxQueue+1)& (0+255),b
 22112   004C58                     
 22113                           ; BSR set to: 5
 22114                           ;../../VLCBlib_PIC/can18_can_2.c: 262:     rxQueue.size = 8;
 22115   004C58  0E08               	movlw	8
 22116   004C5A  6FCB               	movwf	(_rxQueue+4)& (0+255),b
 22117   004C5C                     
 22118                           ; BSR set to: 5
 22119                           ;../../VLCBlib_PIC/can18_can_2.c: 264:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
 22120   004C5C  0EFE               	movlw	254
 22121   004C5E  6E07               	movwf	readNVM@index^(0+1280),c
 22122   004C60  0E03               	movlw	3
 22123   004C62  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22124   004C64  0E00               	movlw	0
 22125   004C66  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22126   004C68  0E00               	movlw	0
 22127   004C6A  EC6C  F03A         	call	_readNVM
 22128   004C6E  C507  F50D         	movff	?_readNVM,canPowerUp@temp
 22129   004C72  C508  F50E         	movff	?_readNVM+1,canPowerUp@temp+1
 22130   004C76                     
 22131                           ;../../VLCBlib_PIC/can18_can_2.c: 265:     if (temp < 0) {
 22132   004C76  BE0E               	btfsc	(canPowerUp@temp+1)^(0+1280),7,c
 22133   004C78  EF42  F026         	goto	u6790
 22134   004C7C  EF40  F026         	goto	u6791
 22135   004C80                     u6791:
 22136   004C80  EF46  F026         	goto	l548
 22137   004C84                     u6790:
 22138   004C84                     
 22139                           ;../../VLCBlib_PIC/can18_can_2.c: 267:         canId = 0;
 22140   004C84  0105               	movlb	5	; () banked
 22141   004C86  6BA8               	clrf	_canId& (0+255),b
 22142                           
 22143                           ;../../VLCBlib_PIC/can18_can_2.c: 268:     } else {
 22144   004C88  EF48  F026         	goto	l9425
 22145   004C8C                     l548:
 22146                           
 22147                           ;../../VLCBlib_PIC/can18_can_2.c: 269:         canId = (uint8_t)temp;
 22148   004C8C  C50D  F5A8         	movff	canPowerUp@temp,_canId
 22149   004C90                     l9425:
 22150                           
 22151                           ;../../VLCBlib_PIC/can18_can_2.c: 273:     for (temp=1; temp<18; temp++) {
 22152   004C90  0E00               	movlw	0
 22153   004C92  6E0E               	movwf	(canPowerUp@temp+1)^(0+1280),c
 22154   004C94  0E01               	movlw	1
 22155   004C96  6E0D               	movwf	canPowerUp@temp^(0+1280),c
 22156   004C98                     l9431:
 22157                           
 22158                           ;../../VLCBlib_PIC/can18_can_2.c: 274:         canDiagnostics[temp].asUint = 0;
 22159   004C98  90D8               	bcf	status,0,c
 22160   004C9A  340D               	rlcf	canPowerUp@temp^(0+1280),w,c
 22161   004C9C  6ED9               	movwf	fsr2l,c
 22162   004C9E  340E               	rlcf	(canPowerUp@temp+1)^(0+1280),w,c
 22163   004CA0  6EDA               	movwf	fsr2h,c
 22164   004CA2  0E8E               	movlw	low _canDiagnostics
 22165   004CA4  26D9               	addwf	fsr2l,f,c
 22166   004CA6  0E06               	movlw	high _canDiagnostics
 22167   004CA8  22DA               	addwfc	fsr2h,f,c
 22168   004CAA  6ADE               	clrf	postinc2,c
 22169   004CAC  6ADD               	clrf	postdec2,c
 22170   004CAE                     
 22171                           ;../../VLCBlib_PIC/can18_can_2.c: 275:     }
 22172   004CAE  4A0D               	infsnz	canPowerUp@temp^(0+1280),f,c
 22173   004CB0  2A0E               	incf	(canPowerUp@temp+1)^(0+1280),f,c
 22174   004CB2  BE0E               	btfsc	(canPowerUp@temp+1)^(0+1280),7,c
 22175   004CB4  EF65  F026         	goto	u6801
 22176   004CB8  500E               	movf	(canPowerUp@temp+1)^(0+1280),w,c
 22177   004CBA  E109               	bnz	u6800
 22178   004CBC  0E12               	movlw	18
 22179   004CBE  5C0D               	subwf	canPowerUp@temp^(0+1280),w,c
 22180   004CC0  A0D8               	btfss	status,0,c
 22181   004CC2  EF65  F026         	goto	u6801
 22182   004CC6  EF67  F026         	goto	u6800
 22183   004CCA                     u6801:
 22184   004CCA  EF4C  F026         	goto	l9431
 22185   004CCE                     u6800:
 22186   004CCE                     
 22187                           ;../../VLCBlib_PIC/can18_can_2.c: 276:     canDiagnostics[0x00].asUint = 18;
 22188   004CCE  0E00               	movlw	0
 22189   004CD0  0106               	movlb	6	; () banked
 22190   004CD2  6F8F               	movwf	(_canDiagnostics+1)& (0+255),b
 22191   004CD4  0E12               	movlw	18
 22192   004CD6  6F8E               	movwf	_canDiagnostics& (0+255),b
 22193   004CD8                     
 22194                           ; BSR set to: 6
 22195                           ;../../VLCBlib_PIC/can18_can_2.c: 279:     canTransmitFailed=0;
 22196   004CD8  0105               	movlb	5	; () banked
 22197   004CDA  6BA7               	clrf	_canTransmitFailed& (0+255),b
 22198                           
 22199                           ;../../VLCBlib_PIC/can18_can_2.c: 282:     RB2PPS = 0x46;
 22200   004CDC  0E46               	movlw	70
 22201   004CDE  0102               	movlb	2	; () banked
 22202   004CE0  6F0B               	movwf	11,b	;volatile
 22203                           
 22204                           ;../../VLCBlib_PIC/can18_can_2.c: 283:     CANRXPPS = 013 ;
 22205   004CE2  0E0B               	movlw	11
 22206   004CE4  6F3D               	movwf	61,b	;volatile
 22207   004CE6                     
 22208                           ; BSR set to: 2
 22209                           ;../../VLCBlib_PIC/can18_can_2.c: 284:     TRISBbits.TRISB2 = 0;
 22210   004CE6  94C7               	bcf	199,2,c	;volatile
 22211   004CE8                     
 22212                           ; BSR set to: 2
 22213                           ;../../VLCBlib_PIC/can18_can_2.c: 285:     TRISBbits.TRISB3 = 1;
 22214   004CE8  86C7               	bsf	199,3,c	;volatile
 22215   004CEA                     
 22216                           ; BSR set to: 2
 22217                           ;../../VLCBlib_PIC/can18_can_2.c: 286:     IPR5 = 0;
 22218   004CEA  0103               	movlb	3	; () banked
 22219   004CEC  6B67               	clrf	103,b	;volatile
 22220   004CEE                     
 22221                           ; BSR set to: 3
 22222                           ;../../VLCBlib_PIC/can18_can_2.c: 288:     C1CONHbits.ON = 1;
 22223   004CEE  0101               	movlb	1	; () banked
 22224   004CF0  8F01               	bsf	1,7,b	;volatile
 22225   004CF2                     
 22226                           ; BSR set to: 1
 22227                           ;../../VLCBlib_PIC/can18_can_2.c: 291:     if (CAN_OP_MODE_REQUEST_SUCCESS == CAN1_Opera
      +                          tionModeSet(CAN_CONFIGURATION_MODE)) {
 22228   004CF2  0E04               	movlw	4
 22229   004CF4  EC03  F038         	call	_CAN1_OperationModeSet
 22230   004CF8  0900               	iorlw	0
 22231   004CFA  A4D8               	btfss	status,2,c
 22232   004CFC  EF82  F026         	goto	u6811
 22233   004D00  EF84  F026         	goto	u6810
 22234   004D04                     u6811:
 22235   004D04  EFC7  F026         	goto	l9535
 22236   004D08                     u6810:
 22237   004D08                     
 22238                           ;../../VLCBlib_PIC/can18_can_2.c: 295:         C1FIFOBA = 0x3BB0;
 22239   004D08  0EB0               	movlw	176
 22240   004D0A  0101               	movlb	1	; () banked
 22241   004D0C  6F4C               	movwf	76,b	;volatile
 22242   004D0E  0E3B               	movlw	59
 22243   004D10  6F4D               	movwf	77,b	;volatile
 22244   004D12  0E00               	movlw	0
 22245   004D14  6F4E               	movwf	78,b	;volatile
 22246   004D16  0E00               	movlw	0
 22247   004D18  6F4F               	movwf	79,b	;volatile
 22248   004D1A                     
 22249                           ; BSR set to: 1
 22250                           ;../../VLCBlib_PIC/can18_can_2.c: 297:         C1CONL = 0x00;
 22251   004D1A  6B00               	clrf	0,b	;volatile
 22252                           
 22253                           ;../../VLCBlib_PIC/can18_can_2.c: 298:         C1CONH = 0x87;
 22254   004D1C  0E87               	movlw	135
 22255   004D1E  6F01               	movwf	1,b	;volatile
 22256                           
 22257                           ;../../VLCBlib_PIC/can18_can_2.c: 299:         C1CONU = 0x10;
 22258   004D20  0E10               	movlw	16
 22259   004D22  6F02               	movwf	2,b	;volatile
 22260                           
 22261                           ;../../VLCBlib_PIC/can18_can_2.c: 300:         C1CONT = 0x50;
 22262   004D24  0E50               	movlw	80
 22263   004D26  6F03               	movwf	3,b	;volatile
 22264   004D28                     
 22265                           ; BSR set to: 1
 22266                           ;../../VLCBlib_PIC/can18_can_2.c: 301:         C1NBTCFGL = 0x00;
 22267   004D28  6B04               	clrf	4,b	;volatile
 22268                           
 22269                           ;../../VLCBlib_PIC/can18_can_2.c: 302:         C1NBTCFGH = 0x03;
 22270   004D2A  0E03               	movlw	3
 22271   004D2C  6F05               	movwf	5,b	;volatile
 22272                           
 22273                           ;../../VLCBlib_PIC/can18_can_2.c: 303:         C1NBTCFGU = 0x02;
 22274   004D2E  0E02               	movlw	2
 22275   004D30  6F06               	movwf	6,b	;volatile
 22276                           
 22277                           ;../../VLCBlib_PIC/can18_can_2.c: 304:         C1NBTCFGT = 0x3F;
 22278   004D32  0E3F               	movlw	63
 22279   004D34  6F07               	movwf	7,b	;volatile
 22280                           
 22281                           ;../../VLCBlib_PIC/can18_can_2.c: 306:         C1TXQCONL = 0x10;
 22282   004D36  0E10               	movlw	16
 22283   004D38  6F50               	movwf	80,b	;volatile
 22284                           
 22285                           ;../../VLCBlib_PIC/can18_can_2.c: 307:         C1TXQCONH = 0x04;
 22286   004D3A  0E04               	movlw	4
 22287   004D3C  6F51               	movwf	81,b	;volatile
 22288                           
 22289                           ;../../VLCBlib_PIC/can18_can_2.c: 308:         C1TXQCONU = 0x6F;
 22290   004D3E  0E6F               	movlw	111
 22291   004D40  6F52               	movwf	82,b	;volatile
 22292   004D42                     
 22293                           ; BSR set to: 1
 22294   004D42  0E03               	movlw	3
 22295   004D44  6F53               	movwf	83,b	;volatile
 22296   004D46                     
 22297                           ; BSR set to: 1
 22298                           ;../../VLCBlib_PIC/can18_can_2.c: 314:         C1FIFOCON1L = 0x80;
 22299   004D46  0E80               	movlw	128
 22300   004D48  6F5C               	movwf	92,b	;volatile
 22301   004D4A                     
 22302                           ; BSR set to: 1
 22303                           ;../../VLCBlib_PIC/can18_can_2.c: 315:         C1FIFOCON1H = 0x04;
 22304   004D4A  0E04               	movlw	4
 22305   004D4C  6F5D               	movwf	93,b	;volatile
 22306   004D4E                     
 22307                           ; BSR set to: 1
 22308                           ;../../VLCBlib_PIC/can18_can_2.c: 316:         C1FIFOCON1U = 0x6F;
 22309   004D4E  0E6F               	movlw	111
 22310   004D50  6F5E               	movwf	94,b	;volatile
 22311   004D52                     
 22312                           ; BSR set to: 1
 22313   004D52  6B5F               	clrf	95,b	;volatile
 22314   004D54                     
 22315                           ; BSR set to: 1
 22316                           ;../../VLCBlib_PIC/can18_can_2.c: 322:         C1FIFOCON2L = 0x80;
 22317   004D54  0E80               	movlw	128
 22318   004D56  6F68               	movwf	104,b	;volatile
 22319   004D58                     
 22320                           ; BSR set to: 1
 22321                           ;../../VLCBlib_PIC/can18_can_2.c: 323:         C1FIFOCON2H = 0x04;
 22322   004D58  0E04               	movlw	4
 22323   004D5A  6F69               	movwf	105,b	;volatile
 22324   004D5C                     
 22325                           ; BSR set to: 1
 22326                           ;../../VLCBlib_PIC/can18_can_2.c: 324:         C1FIFOCON2U = 0x60;
 22327   004D5C  0E60               	movlw	96
 22328   004D5E  6F6A               	movwf	106,b	;volatile
 22329   004D60                     
 22330                           ; BSR set to: 1
 22331   004D60  0E1F               	movlw	31
 22332   004D62  6F6B               	movwf	107,b	;volatile
 22333   004D64                     
 22334                           ; BSR set to: 1
 22335                           ;../../VLCBlib_PIC/can18_can_2.c: 330:         C1FIFOCON3L = 0x08;
 22336   004D64  0E08               	movlw	8
 22337   004D66  6F74               	movwf	116,b	;volatile
 22338   004D68                     
 22339                           ; BSR set to: 1
 22340                           ;../../VLCBlib_PIC/can18_can_2.c: 331:         C1FIFOCON3H = 0x04;
 22341   004D68  0E04               	movlw	4
 22342   004D6A  6F75               	movwf	117,b	;volatile
 22343   004D6C                     
 22344                           ; BSR set to: 1
 22345                           ;../../VLCBlib_PIC/can18_can_2.c: 332:         C1FIFOCON3U = 0x00;
 22346   004D6C  6B76               	clrf	118,b	;volatile
 22347   004D6E                     
 22348                           ; BSR set to: 1
 22349   004D6E  0E1F               	movlw	31
 22350   004D70  6F77               	movwf	119,b	;volatile
 22351   004D72                     
 22352                           ; BSR set to: 1
 22353                           ;../../VLCBlib_PIC/can18_can_2.c: 338:         C1FLTOBJ0L = 0x00;
 22354   004D72  6B8C               	clrf	140,b	;volatile
 22355   004D74                     
 22356                           ; BSR set to: 1
 22357                           ;../../VLCBlib_PIC/can18_can_2.c: 339:         C1FLTOBJ0H = 0x00;
 22358   004D74  6B8D               	clrf	141,b	;volatile
 22359   004D76                     
 22360                           ; BSR set to: 1
 22361                           ;../../VLCBlib_PIC/can18_can_2.c: 340:         C1FLTOBJ0U = 0x00;
 22362   004D76  6B8E               	clrf	142,b	;volatile
 22363   004D78                     
 22364                           ; BSR set to: 1
 22365                           ;../../VLCBlib_PIC/can18_can_2.c: 341:         C1FLTOBJ0T = 0x00;
 22366   004D78  6B8F               	clrf	143,b	;volatile
 22367   004D7A                     
 22368                           ; BSR set to: 1
 22369                           ;../../VLCBlib_PIC/can18_can_2.c: 342:         C1MASK0L = 0x00;
 22370   004D7A  6B90               	clrf	144,b	;volatile
 22371   004D7C                     
 22372                           ; BSR set to: 1
 22373                           ;../../VLCBlib_PIC/can18_can_2.c: 343:         C1MASK0H = 0x00;
 22374   004D7C  6B91               	clrf	145,b	;volatile
 22375   004D7E                     
 22376                           ; BSR set to: 1
 22377                           ;../../VLCBlib_PIC/can18_can_2.c: 344:         C1MASK0U = 0x00;
 22378   004D7E  6B92               	clrf	146,b	;volatile
 22379   004D80                     
 22380                           ; BSR set to: 1
 22381                           ;../../VLCBlib_PIC/can18_can_2.c: 345:         C1MASK0T = 0x40;
 22382   004D80  0E40               	movlw	64
 22383   004D82  6F93               	movwf	147,b	;volatile
 22384   004D84                     
 22385                           ; BSR set to: 1
 22386                           ;../../VLCBlib_PIC/can18_can_2.c: 346:         C1FLTCON0L = 0x83;
 22387   004D84  0E83               	movlw	131
 22388   004D86  6F80               	movwf	128,b	;volatile
 22389   004D88                     
 22390                           ; BSR set to: 1
 22391                           ;../../VLCBlib_PIC/can18_can_2.c: 349:         (void)CAN1_OperationModeSet(CAN_NORMAL_2_
      +                          0_MODE);
 22392   004D88  0E06               	movlw	6
 22393   004D8A  EC03  F038         	call	_CAN1_OperationModeSet
 22394   004D8E                     l9535:
 22395                           
 22396                           ;../../VLCBlib_PIC/can18_can_2.c: 353:     prepareSelfEnumResponse();
 22397   004D8E  EC7F  F039         	call	_prepareSelfEnumResponse	;wreg free
 22398   004D92                     
 22399                           ;../../VLCBlib_PIC/can18_can_2.c: 355:     enumerationState = NO_ENUMERATION;
 22400   004D92  0105               	movlb	5	; () banked
 22401   004D94  6BA5               	clrf	_enumerationState& (0+255),b
 22402   004D96                     
 22403                           ; BSR set to: 5
 22404                           ;../../VLCBlib_PIC/can18_can_2.c: 356:     enumerationStartTime.val = tickGet();
 22405   004D96  ECF7  F039         	call	_tickGet	;wreg free
 22406   004D9A  C501  F574         	movff	?_tickGet,_enumerationStartTime
 22407   004D9E  C502  F575         	movff	?_tickGet+1,_enumerationStartTime+1
 22408   004DA2  C503  F576         	movff	?_tickGet+2,_enumerationStartTime+2
 22409   004DA6  C504  F577         	movff	?_tickGet+3,_enumerationStartTime+3
 22410   004DAA                     
 22411                           ;../../VLCBlib_PIC/can18_can_2.c: 358:     IPR0bits.CANIP = 0;
 22412   004DAA  0103               	movlb	3	; () banked
 22413   004DAC  9D62               	bcf	98,6,b	;volatile
 22414   004DAE                     
 22415                           ; BSR set to: 3
 22416                           ;../../VLCBlib_PIC/can18_can_2.c: 359:     PIR0bits.CANIF = 0;
 22417   004DAE  9CAE               	bcf	174,6,c	;volatile
 22418   004DB0                     
 22419                           ; BSR set to: 3
 22420                           ;../../VLCBlib_PIC/can18_can_2.c: 360:     C1INTUbits.TXIE = 1;
 22421   004DB0  0101               	movlb	1	; () banked
 22422   004DB2  811E               	bsf	30,0,b	;volatile
 22423   004DB4                     
 22424                           ; BSR set to: 1
 22425                           ;../../VLCBlib_PIC/can18_can_2.c: 361:     C1INTTbits.RXOVIE = 1;
 22426   004DB4  871F               	bsf	31,3,b	;volatile
 22427   004DB6                     
 22428                           ; BSR set to: 1
 22429                           ;../../VLCBlib_PIC/can18_can_2.c: 362:     C1INTTbits.IVMIE = 1;
 22430   004DB6  8F1F               	bsf	31,7,b	;volatile
 22431   004DB8                     
 22432                           ; BSR set to: 1
 22433                           ;../../VLCBlib_PIC/can18_can_2.c: 364:     PIE0bits.CANIE = 1;
 22434   004DB8  8C9E               	bsf	158,6,c	;volatile
 22435   004DBA                     
 22436                           ; BSR set to: 1
 22437   004DBA  0012               	return		;funcret
 22438   004DBC                     __end_of_canPowerUp:
 22439                           	callstack 0
 22440                           
 22441 ;; *************** function _bootPowerUp *****************
 22442 ;; Defined at:
 22443 ;;		line 197 in file "../../VLCBlib_PIC/boot.c"
 22444 ;; Parameters:    Size  Location     Type
 22445 ;;		None
 22446 ;; Auto vars:     Size  Location     Type
 22447 ;;  a               3   15[COMRAM] unsigned um
 22448 ;;  i               1   14[COMRAM] unsigned char 
 22449 ;;  found           1   13[COMRAM] unsigned char 
 22450 ;;  b               1   12[COMRAM] unsigned char 
 22451 ;; Return value:  Size  Location     Type
 22452 ;;                  1    wreg      void 
 22453 ;; Registers used:
 22454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22455 ;; Tracked objects:
 22456 ;;		On entry : 0/0
 22457 ;;		On exit  : 0/0
 22458 ;;		Unchanged: 0/0
 22459 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22461 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22463 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22464 ;;Total ram usage:        6 bytes
 22465 ;; Hardware stack levels used: 1
 22466 ;; Hardware stack levels required when called: 3
 22467 ;; This function calls:
 22468 ;;		_readNVM
 22469 ;; This function is called by:
 22470 ;;		_powerUp
 22471 ;; This function uses a non-reentrant model
 22472 ;;
 22473                           
 22474                           	psect	text8
 22475   005BFC                     __ptext8:
 22476                           	callstack 0
 22477   005BFC                     _bootPowerUp:
 22478                           	callstack 122
 22479   005BFC                     
 22480                           ;../../VLCBlib_PIC/boot.c: 198:     uint24_t a;;../../VLCBlib_PIC/boot.c: 199:     uint8
      +                          _t i;;../../VLCBlib_PIC/boot.c: 200:     uint8_t b;;../../VLCBlib_PIC/boot.c: 201:     u
      +                          int8_t found;;../../VLCBlib_PIC/boot.c: 203:     bootloaderType = BL_TYPE_Unknown;
 22481   005BFC  0105               	movlb	5	; () banked
 22482   005BFE  6BAA               	clrf	_bootloaderType& (0+255),b
 22483                           
 22484                           ;../../VLCBlib_PIC/boot.c: 204:     bootloaderVersion = 0;
 22485   005C00  6BA9               	clrf	_bootloaderVersion& (0+255),b
 22486   005C02                     
 22487                           ; BSR set to: 5
 22488                           ;../../VLCBlib_PIC/boot.c: 207:     for (a=0; a<0x7FF; a++) {
 22489   005C02  0E00               	movlw	0
 22490   005C04  6E10               	movwf	bootPowerUp@a^(0+1280),c
 22491   005C06  0E00               	movlw	0
 22492   005C08  6E11               	movwf	(bootPowerUp@a+1)^(0+1280),c
 22493   005C0A  0E00               	movlw	0
 22494   005C0C  6E12               	movwf	(bootPowerUp@a+2)^(0+1280),c
 22495   005C0E                     l9351:
 22496   005C0E                     
 22497                           ;../../VLCBlib_PIC/boot.c: 209:         for (i=0; i<11; i++) {
 22498   005C0E  6A0F               	clrf	bootPowerUp@i^(0+1280),c
 22499   005C10                     l9359:
 22500                           
 22501                           ;../../VLCBlib_PIC/boot.c: 210:             b = (uint8_t)readNVM(FLASH_NVM_TYPE, a+i);
 22502   005C10  500F               	movf	bootPowerUp@i^(0+1280),w,c
 22503   005C12  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 22504   005C14  6E07               	movwf	readNVM@index^(0+1280),c
 22505   005C16  0E00               	movlw	0
 22506   005C18  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 22507   005C1A  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22508   005C1C  0E00               	movlw	0
 22509   005C1E  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 22510   005C20  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22511   005C22  0E01               	movlw	1
 22512   005C24  EC6C  F03A         	call	_readNVM
 22513   005C28  5007               	movf	?_readNVM^(0+1280),w,c
 22514   005C2A  6E0D               	movwf	bootPowerUp@b^(0+1280),c
 22515   005C2C                     
 22516                           ;../../VLCBlib_PIC/boot.c: 211:             if (b != bl_version[i]) {
 22517   005C2C  0E95               	movlw	low _bl_version
 22518   005C2E  240F               	addwf	bootPowerUp@i^(0+1280),w,c
 22519   005C30  6EF6               	movwf	tblptrl,c
 22520   005C32  6AF7               	clrf	tblptrh,c
 22521   005C34  0EFF               	movlw	high _bl_version
 22522   005C36  22F7               	addwfc	tblptrh,f,c
 22523   005C38                     	if	1	;There are 3 active tblptr bytes
 22524   005C38  6AF8               	clrf	tblptru,c
 22525   005C3A  0E00               	movlw	low (__mediumconst shr (0+16))
 22526   005C3C  22F8               	addwfc	tblptru,f,c
 22527   005C3E                     	endif
 22528   005C3E  0008               	tblrd		*
 22529   005C40  50F5               	movf	tablat,w,c
 22530   005C42  180D               	xorwf	bootPowerUp@b^(0+1280),w,c
 22531   005C44  B4D8               	btfsc	status,2,c
 22532   005C46  EF27  F02E         	goto	u6731
 22533   005C4A  EF29  F02E         	goto	u6730
 22534   005C4E                     u6731:
 22535   005C4E  EF2C  F02E         	goto	l9367
 22536   005C52                     u6730:
 22537   005C52                     
 22538                           ;../../VLCBlib_PIC/boot.c: 212:                 found = 0;
 22539   005C52  6A0E               	clrf	bootPowerUp@found^(0+1280),c
 22540                           
 22541                           ;../../VLCBlib_PIC/boot.c: 213:                 break;
 22542   005C54  EF37  F02E         	goto	l9373
 22543   005C58                     l9367:
 22544                           
 22545                           ;../../VLCBlib_PIC/boot.c: 215:                 found = 1;
 22546   005C58  0E01               	movlw	1
 22547   005C5A  6E0E               	movwf	bootPowerUp@found^(0+1280),c
 22548   005C5C                     
 22549                           ;../../VLCBlib_PIC/boot.c: 217:         }
 22550   005C5C  2A0F               	incf	bootPowerUp@i^(0+1280),f,c
 22551   005C5E  0E0A               	movlw	10
 22552   005C60  640F               	cpfsgt	bootPowerUp@i^(0+1280),c
 22553   005C62  EF35  F02E         	goto	u6741
 22554   005C66  EF37  F02E         	goto	u6740
 22555   005C6A                     u6741:
 22556   005C6A  EF08  F02E         	goto	l9359
 22557   005C6E                     u6740:
 22558   005C6E                     l9373:
 22559                           
 22560                           ;../../VLCBlib_PIC/boot.c: 218:         if (found) {
 22561   005C6E  500E               	movf	bootPowerUp@found^(0+1280),w,c
 22562   005C70  B4D8               	btfsc	status,2,c
 22563   005C72  EF3D  F02E         	goto	u6751
 22564   005C76  EF3F  F02E         	goto	u6750
 22565   005C7A                     u6751:
 22566   005C7A  EF5F  F02E         	goto	l318
 22567   005C7E                     u6750:
 22568   005C7E                     
 22569                           ;../../VLCBlib_PIC/boot.c: 219:             bootloaderType = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, a+11);
 22570   005C7E  0E0B               	movlw	11
 22571   005C80  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 22572   005C82  6E07               	movwf	readNVM@index^(0+1280),c
 22573   005C84  0E00               	movlw	0
 22574   005C86  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 22575   005C88  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22576   005C8A  0E00               	movlw	0
 22577   005C8C  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 22578   005C8E  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22579   005C90  0E01               	movlw	1
 22580   005C92  EC6C  F03A         	call	_readNVM
 22581   005C96  5007               	movf	?_readNVM^(0+1280),w,c
 22582   005C98  0105               	movlb	5	; () banked
 22583   005C9A  6FAA               	movwf	_bootloaderType& (0+255),b
 22584                           
 22585                           ;../../VLCBlib_PIC/boot.c: 220:             bootloaderVersion = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, a+12);
 22586   005C9C  0E0C               	movlw	12
 22587   005C9E  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 22588   005CA0  6E07               	movwf	readNVM@index^(0+1280),c
 22589   005CA2  0E00               	movlw	0
 22590   005CA4  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 22591   005CA6  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22592   005CA8  0E00               	movlw	0
 22593   005CAA  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 22594   005CAC  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22595   005CAE  0E01               	movlw	1
 22596   005CB0  EC6C  F03A         	call	_readNVM
 22597   005CB4  5007               	movf	?_readNVM^(0+1280),w,c
 22598   005CB6  0105               	movlb	5	; () banked
 22599   005CB8  6FA9               	movwf	_bootloaderVersion& (0+255),b
 22600   005CBA  EF71  F02E         	goto	l319
 22601   005CBE                     l318:
 22602                           
 22603                           ;../../VLCBlib_PIC/boot.c: 223:     }
 22604   005CBE  0E01               	movlw	1
 22605   005CC0  2610               	addwf	bootPowerUp@a^(0+1280),f,c
 22606   005CC2  0E00               	movlw	0
 22607   005CC4  2211               	addwfc	(bootPowerUp@a+1)^(0+1280),f,c
 22608   005CC6  0E00               	movlw	0
 22609   005CC8  2212               	addwfc	(bootPowerUp@a+2)^(0+1280),f,c
 22610   005CCA  5012               	movf	(bootPowerUp@a+2)^(0+1280),w,c
 22611   005CCC  E10A               	bnz	u6760
 22612   005CCE  2810               	incf	bootPowerUp@a^(0+1280),w,c
 22613   005CD0  0E07               	movlw	7
 22614   005CD2  5811               	subwfb	(bootPowerUp@a+1)^(0+1280),w,c
 22615   005CD4  A0D8               	btfss	status,0,c
 22616   005CD6  EF6F  F02E         	goto	u6761
 22617   005CDA  EF71  F02E         	goto	u6760
 22618   005CDE                     u6761:
 22619   005CDE  EF07  F02E         	goto	l9351
 22620   005CE2                     u6760:
 22621   005CE2                     l319:
 22622   005CE2  0012               	return		;funcret
 22623   005CE4                     __end_of_bootPowerUp:
 22624                           	callstack 0
 22625                           
 22626 ;; *************** function _teachPowerUp *****************
 22627 ;; Defined at:
 22628 ;;		line 197 in file "../../VLCBlib_PIC/event_teach_simple.c"
 22629 ;; Parameters:    Size  Location     Type
 22630 ;;		None
 22631 ;; Auto vars:     Size  Location     Type
 22632 ;;  i               1   39[COMRAM] unsigned char 
 22633 ;; Return value:  Size  Location     Type
 22634 ;;                  1    wreg      void 
 22635 ;; Registers used:
 22636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22637 ;; Tracked objects:
 22638 ;;		On entry : 0/0
 22639 ;;		On exit  : 0/0
 22640 ;;		Unchanged: 0/0
 22641 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22645 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22646 ;;Total ram usage:        1 bytes
 22647 ;; Hardware stack levels used: 1
 22648 ;; Hardware stack levels required when called: 5
 22649 ;; This function calls:
 22650 ;;		_rebuildHashtable
 22651 ;; This function is called by:
 22652 ;;		_powerUp
 22653 ;; This function uses a non-reentrant model
 22654 ;;
 22655                           
 22656                           	psect	text9
 22657   007D88                     __ptext9:
 22658                           	callstack 0
 22659   007D88                     _teachPowerUp:
 22660                           	callstack 120
 22661   007D88                     
 22662                           ;../../VLCBlib_PIC/event_teach_simple.c: 198:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 201:     rebuildHashtable();
 22663   007D88  EC98  F02B         	call	_rebuildHashtable	;wreg free
 22664   007D8C                     
 22665                           ;../../VLCBlib_PIC/event_teach_simple.c: 205:     for (i=1; i<= 1; i++) {
 22666   007D8C  0E01               	movlw	1
 22667   007D8E  6E28               	movwf	teachPowerUp@i^(0+1280),c
 22668   007D90                     l9773:
 22669                           
 22670                           ;../../VLCBlib_PIC/event_teach_simple.c: 206:         teachDiagnostics[i].asUint = 0;
 22671   007D90  5028               	movf	teachPowerUp@i^(0+1280),w,c
 22672   007D92  0D02               	mullw	2
 22673   007D94  0ECC               	movlw	low _teachDiagnostics
 22674   007D96  24F3               	addwf	243,w,c
 22675   007D98  6ED9               	movwf	fsr2l,c
 22676   007D9A  0E05               	movlw	high _teachDiagnostics
 22677   007D9C  20F4               	addwfc	prodh,w,c
 22678   007D9E  6EDA               	movwf	fsr2h,c
 22679   007DA0  6ADE               	clrf	postinc2,c
 22680   007DA2  6ADD               	clrf	postdec2,c
 22681   007DA4                     
 22682                           ;../../VLCBlib_PIC/event_teach_simple.c: 207:     }
 22683   007DA4  2A28               	incf	teachPowerUp@i^(0+1280),f,c
 22684   007DA6  0E01               	movlw	1
 22685   007DA8  6428               	cpfsgt	teachPowerUp@i^(0+1280),c
 22686   007DAA  EFD9  F03E         	goto	u7041
 22687   007DAE  EFDB  F03E         	goto	u7040
 22688   007DB2                     u7041:
 22689   007DB2  EFC8  F03E         	goto	l9773
 22690   007DB6                     u7040:
 22691   007DB6                     
 22692                           ;../../VLCBlib_PIC/event_teach_simple.c: 208:     teachDiagnostics[0x00].asUint = 1;
 22693   007DB6  0E00               	movlw	0
 22694   007DB8  0105               	movlb	5	; () banked
 22695   007DBA  6FCD               	movwf	(_teachDiagnostics+1)& (0+255),b
 22696   007DBC  0E01               	movlw	1
 22697   007DBE  6FCC               	movwf	_teachDiagnostics& (0+255),b
 22698   007DC0                     
 22699                           ; BSR set to: 5
 22700                           ;../../VLCBlib_PIC/event_teach_simple.c: 210:     errno = 0;
 22701   007DC0  6BA3               	clrf	_errno& (0+255),b
 22702   007DC2                     
 22703                           ; BSR set to: 5
 22704                           ;../../VLCBlib_PIC/event_teach_simple.c: 211:     mode_flags &= ~1;
 22705   007DC2  91A4               	bcf	_mode_flags& (0+255),0,b
 22706   007DC4                     
 22707                           ; BSR set to: 5
 22708   007DC4  0012               	return		;funcret
 22709   007DC6                     __end_of_teachPowerUp:
 22710                           	callstack 0
 22711                           
 22712 ;; *************** function _loadNvCache *****************
 22713 ;; Defined at:
 22714 ;;		line 162 in file "../../VLCBlib_PIC/nv.c"
 22715 ;; Parameters:    Size  Location     Type
 22716 ;;		None
 22717 ;; Auto vars:     Size  Location     Type
 22718 ;;  temp            2   14[COMRAM] short 
 22719 ;;  i               1   16[COMRAM] unsigned char 
 22720 ;; Return value:  Size  Location     Type
 22721 ;;                  1    wreg      void 
 22722 ;; Registers used:
 22723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22724 ;; Tracked objects:
 22725 ;;		On entry : 0/0
 22726 ;;		On exit  : 0/0
 22727 ;;		Unchanged: 0/0
 22728 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22730 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22731 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22732 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22733 ;;Total ram usage:        5 bytes
 22734 ;; Hardware stack levels used: 1
 22735 ;; Hardware stack levels required when called: 3
 22736 ;; This function calls:
 22737 ;;		_readNVM
 22738 ;; This function is called by:
 22739 ;;		_nvPowerUp
 22740 ;; This function uses a non-reentrant model
 22741 ;;
 22742                           
 22743                           	psect	text10
 22744   0077CA                     __ptext10:
 22745                           	callstack 0
 22746   0077CA                     _loadNvCache:
 22747                           	callstack 121
 22748   0077CA                     
 22749                           ;../../VLCBlib_PIC/nv.c: 163:     uint8_t i;;../../VLCBlib_PIC/nv.c: 164:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 166:     for (i=1; i<= 49; i++) {
 22750   0077CA  0E01               	movlw	1
 22751   0077CC  6E11               	movwf	loadNvCache@i^(0+1280),c
 22752   0077CE                     l8979:
 22753                           
 22754                           ;../../VLCBlib_PIC/nv.c: 167:         temp = readNVM(EEPROM_NVM_TYPE, 0x200 +i);
 22755   0077CE  0E00               	movlw	0
 22756   0077D0  2411               	addwf	loadNvCache@i^(0+1280),w,c
 22757   0077D2  6E0D               	movwf	??_loadNvCache^(0+1280),c
 22758   0077D4  6A0E               	clrf	(??_loadNvCache+1)^(0+1280),c
 22759   0077D6  0E02               	movlw	2
 22760   0077D8  220E               	addwfc	(??_loadNvCache+1)^(0+1280),f,c
 22761   0077DA  C50D  F507         	movff	??_loadNvCache,readNVM@index
 22762   0077DE  C50E  F508         	movff	??_loadNvCache+1,readNVM@index+1
 22763   0077E2  6A09               	clrf	(readNVM@index+2)^(0+1280),c
 22764   0077E4  BE08               	btfsc	(readNVM@index+1)^(0+1280),7,c
 22765   0077E6  0609               	decf	(readNVM@index+2)^(0+1280),f,c
 22766   0077E8  0E00               	movlw	0
 22767   0077EA  EC6C  F03A         	call	_readNVM
 22768   0077EE  C507  F50F         	movff	?_readNVM,loadNvCache@temp
 22769   0077F2  C508  F510         	movff	?_readNVM+1,loadNvCache@temp+1
 22770   0077F6                     
 22771                           ;../../VLCBlib_PIC/nv.c: 168:         if (temp < 0) {
 22772   0077F6  BE10               	btfsc	(loadNvCache@temp+1)^(0+1280),7,c
 22773   0077F8  EF02  F03C         	goto	u6330
 22774   0077FC  EF00  F03C         	goto	u6331
 22775   007800                     u6331:
 22776   007800  EF04  F03C         	goto	l8985
 22777   007804                     u6330:
 22778   007804  EF0C  F03C         	goto	l8987
 22779   007808                     l8985:
 22780                           
 22781                           ;../../VLCBlib_PIC/nv.c: 171:             nvCache[i] = (uint8_t)temp;
 22782   007808  0E00               	movlw	low _nvCache
 22783   00780A  2411               	addwf	loadNvCache@i^(0+1280),w,c
 22784   00780C  6ED9               	movwf	fsr2l,c
 22785   00780E  6ADA               	clrf	fsr2h,c
 22786   007810  0E06               	movlw	high _nvCache
 22787   007812  22DA               	addwfc	fsr2h,f,c
 22788   007814  C50F  F4DF         	movff	loadNvCache@temp,indf2
 22789   007818                     l8987:
 22790                           
 22791                           ;../../VLCBlib_PIC/nv.c: 173:     }
 22792   007818  2A11               	incf	loadNvCache@i^(0+1280),f,c
 22793   00781A  0E31               	movlw	49
 22794   00781C  6411               	cpfsgt	loadNvCache@i^(0+1280),c
 22795   00781E  EF13  F03C         	goto	u6341
 22796   007822  EF15  F03C         	goto	u6340
 22797   007826                     u6341:
 22798   007826  EFE7  F03B         	goto	l8979
 22799   00782A                     u6340:
 22800   00782A  0012               	return		;funcret
 22801   00782C                     __end_of_loadNvCache:
 22802                           	callstack 0
 22803                           
 22804 ;; *************** function _leds_powerUp *****************
 22805 ;; Defined at:
 22806 ;;		line 77 in file "../../VLCBlib_PIC/statusLeds2.c"
 22807 ;; Parameters:    Size  Location     Type
 22808 ;;		None
 22809 ;; Auto vars:     Size  Location     Type
 22810 ;;		None
 22811 ;; Return value:  Size  Location     Type
 22812 ;;                  1    wreg      void 
 22813 ;; Registers used:
 22814 ;;		wreg, status,2, status,0, cstack
 22815 ;; Tracked objects:
 22816 ;;		On entry : 0/0
 22817 ;;		On exit  : 0/0
 22818 ;;		Unchanged: 0/0
 22819 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22824 ;;Total ram usage:        0 bytes
 22825 ;; Hardware stack levels used: 1
 22826 ;; Hardware stack levels required when called: 2
 22827 ;; This function calls:
 22828 ;;		_tickGet
 22829 ;; This function is called by:
 22830 ;;		_powerUp
 22831 ;; This function uses a non-reentrant model
 22832 ;;
 22833                           
 22834                           	psect	text11
 22835   008156                     __ptext11:
 22836                           	callstack 0
 22837   008156                     _leds_powerUp:
 22838                           	callstack 123
 22839   008156                     
 22840                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     {ANSELA=ANSELB=0; TRISBbits.TRISB6=TRISBbits.T
      +                          RISB7=0,TRISAbits.TRISA2=1;};
 22841   008156  0104               	movlb	4	; () banked
 22842   008158  6B08               	clrf	8,b	;volatile
 22843   00815A  6B00               	clrf	0,b	;volatile
 22844   00815C  9EC7               	bcf	199,7,c	;volatile
 22845   00815E  9CC7               	bcf	199,6,c	;volatile
 22846   008160  84C6               	bsf	198,2,c	;volatile
 22847                           
 22848                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[0] = 0;
 22849   008162  0105               	movlb	5	; () banked
 22850   008164  6B89               	clrf	_flashCounter& (0+255),b
 22851                           
 22852                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     flashCounter[1] = 0;
 22853   008166  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 22854   008168                     
 22855                           ; BSR set to: 5
 22856                           ;../../VLCBlib_PIC/statusLeds2.c: 82:     ledTimer.val = tickGet();
 22857   008168  ECF7  F039         	call	_tickGet	;wreg free
 22858   00816C  C501  F564         	movff	?_tickGet,_ledTimer
 22859   008170  C502  F565         	movff	?_tickGet+1,_ledTimer+1
 22860   008174  C503  F566         	movff	?_tickGet+2,_ledTimer+2
 22861   008178  C504  F567         	movff	?_tickGet+3,_ledTimer+3
 22862   00817C  0012               	return		;funcret
 22863   00817E                     __end_of_leds_powerUp:
 22864                           	callstack 0
 22865                           
 22866 ;; *************** function _initTimedResponse *****************
 22867 ;; Defined at:
 22868 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
 22869 ;; Parameters:    Size  Location     Type
 22870 ;;		None
 22871 ;; Auto vars:     Size  Location     Type
 22872 ;;		None
 22873 ;; Return value:  Size  Location     Type
 22874 ;;                  1    wreg      void 
 22875 ;; Registers used:
 22876 ;;		None
 22877 ;; Tracked objects:
 22878 ;;		On entry : 0/0
 22879 ;;		On exit  : 0/0
 22880 ;;		Unchanged: 0/0
 22881 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22886 ;;Total ram usage:        0 bytes
 22887 ;; Hardware stack levels used: 1
 22888 ;; Hardware stack levels required when called: 1
 22889 ;; This function calls:
 22890 ;;		Nothing
 22891 ;; This function is called by:
 22892 ;;		_powerUp
 22893 ;; This function uses a non-reentrant model
 22894 ;;
 22895                           
 22896                           	psect	text12
 22897   008316                     __ptext12:
 22898                           	callstack 0
 22899   008316                     _initTimedResponse:
 22900                           	callstack 124
 22901   008316                     
 22902                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
 22903   008316  0105               	movlb	5	; () banked
 22904   008318  6996               	setf	_timedResponseType& (0+255),b
 22905   00831A                     
 22906                           ; BSR set to: 5
 22907   00831A  0012               	return		;funcret
 22908   00831C                     __end_of_initTimedResponse:
 22909                           	callstack 0
 22910                           
 22911 ;; *************** function _initTicker *****************
 22912 ;; Defined at:
 22913 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
 22914 ;; Parameters:    Size  Location     Type
 22915 ;;  priority        1    wreg     unsigned char 
 22916 ;; Auto vars:     Size  Location     Type
 22917 ;;  priority        1    1[COMRAM] unsigned char 
 22918 ;;  i               1    3[COMRAM] unsigned char 
 22919 ;;  divider         1    2[COMRAM] unsigned char 
 22920 ;; Return value:  Size  Location     Type
 22921 ;;                  1    wreg      void 
 22922 ;; Registers used:
 22923 ;;		wreg, status,2, status,0
 22924 ;; Tracked objects:
 22925 ;;		On entry : 0/0
 22926 ;;		On exit  : 0/0
 22927 ;;		Unchanged: 0/0
 22928 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22930 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22931 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22932 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22933 ;;Total ram usage:        4 bytes
 22934 ;; Hardware stack levels used: 1
 22935 ;; Hardware stack levels required when called: 1
 22936 ;; This function calls:
 22937 ;;		Nothing
 22938 ;; This function is called by:
 22939 ;;		_powerUp
 22940 ;; This function uses a non-reentrant model
 22941 ;;
 22942                           
 22943                           	psect	text13
 22944   00782C                     __ptext13:
 22945                           	callstack 0
 22946   00782C                     _initTicker:
 22947                           	callstack 124
 22948                           
 22949                           ; BSR set to: 5
 22950                           ;incstack = 0
 22951                           ;initTicker@priority stored from wreg
 22952   00782C  6E02               	movwf	initTicker@priority^(0+1280),c
 22953   00782E                     
 22954                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
 22955   00782E  6A03               	clrf	initTicker@divider^(0+1280),c
 22956   007830                     
 22957                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
 22958   007830  0E40               	movlw	64
 22959   007832  6E04               	movwf	initTicker@i^(0+1280),c
 22960   007834                     l10751:
 22961                           
 22962                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
 22963   007834  2A03               	incf	initTicker@divider^(0+1280),f,c
 22964   007836  90D8               	bcf	status,0,c
 22965   007838  3204               	rrcf	initTicker@i^(0+1280),f,c
 22966   00783A  5004               	movf	initTicker@i^(0+1280),w,c
 22967   00783C  A4D8               	btfss	status,2,c
 22968   00783E  EF23  F03C         	goto	u8161
 22969   007842  EF25  F03C         	goto	u8160
 22970   007846                     u8161:
 22971   007846  EF1A  F03C         	goto	l10751
 22972   00784A                     u8160:
 22973   00784A                     
 22974                           ;../../VLCBlib_PIC/ticktime.c: 122:     T0CON1bits.CKPS = (uint8_t)(0b00000000 | (divide
      +                          r+1));
 22975   00784A  C503  F501         	movff	initTicker@divider,??_initTicker
 22976   00784E  0E01               	movlw	1
 22977   007850  2601               	addwf	??_initTicker^(0+1280),f,c
 22978   007852  0103               	movlb	3	; () banked
 22979   007854  511B               	movf	27,w,b	;volatile
 22980   007856  1801               	xorwf	??_initTicker^(0+1280),w,c
 22981   007858  0BF0               	andlw	-16
 22982   00785A  1801               	xorwf	??_initTicker^(0+1280),w,c
 22983   00785C  6F1B               	movwf	27,b	;volatile
 22984   00785E                     
 22985                           ; BSR set to: 3
 22986                           ;../../VLCBlib_PIC/ticktime.c: 123:     T0CON0bits.MD16 = 1;
 22987   00785E  891A               	bsf	26,4,b	;volatile
 22988   007860                     
 22989                           ; BSR set to: 3
 22990                           ;../../VLCBlib_PIC/ticktime.c: 124:     T0CON1bits.CS = 2;
 22991   007860  511B               	movf	27,w,b	;volatile
 22992   007862  0B1F               	andlw	-225
 22993   007864  0940               	iorlw	64
 22994   007866  6F1B               	movwf	27,b	;volatile
 22995   007868                     
 22996                           ; BSR set to: 3
 22997                           ;../../VLCBlib_PIC/ticktime.c: 125:     TMR0H = 0;
 22998   007868  6B19               	clrf	25,b	;volatile
 22999   00786A                     
 23000                           ; BSR set to: 3
 23001                           ;../../VLCBlib_PIC/ticktime.c: 126:     TMR0L = 0;
 23002   00786A  6B18               	clrf	24,b	;volatile
 23003   00786C                     
 23004                           ; BSR set to: 3
 23005                           ;../../VLCBlib_PIC/ticktime.c: 127:     TMR0IP = (__bit)priority;
 23006   00786C  B002               	btfsc	initTicker@priority^(0+1280),0,c
 23007   00786E  EF3B  F03C         	goto	u8171
 23008   007872  EF3E  F03C         	goto	u8170
 23009   007876                     u8171:
 23010   007876  8F65               	bsf	101,7,b	;volatile
 23011   007878  EF40  F03C         	goto	u8185
 23012   00787C                     u8170:
 23013   00787C  0103               	movlb	3	; () banked
 23014   00787E  9F65               	bcf	101,7,b	;volatile
 23015   007880                     u8185:
 23016   007880                     
 23017                           ; BSR set to: 3
 23018                           ;../../VLCBlib_PIC/ticktime.c: 128:     TMR0IF = 0;
 23019   007880  9EB1               	bcf	1201,7,c	;volatile
 23020   007882                     
 23021                           ; BSR set to: 3
 23022                           ;../../VLCBlib_PIC/ticktime.c: 129:     TMR0IE = 1;
 23023   007882  8EA1               	bsf	1185,7,c	;volatile
 23024   007884                     
 23025                           ; BSR set to: 3
 23026                           ;../../VLCBlib_PIC/ticktime.c: 130:     T0CON0bits.EN = 1;
 23027   007884  8F1A               	bsf	26,7,b	;volatile
 23028   007886                     
 23029                           ; BSR set to: 3
 23030                           ;../../VLCBlib_PIC/ticktime.c: 132:     timerExtension1 = 0;
 23031   007886  0105               	movlb	5	; () banked
 23032   007888  6B9A               	clrf	_timerExtension1& (0+255),b	;volatile
 23033   00788A                     
 23034                           ; BSR set to: 5
 23035                           ;../../VLCBlib_PIC/ticktime.c: 133:     timerExtension2 = 0;
 23036   00788A  6B99               	clrf	_timerExtension2& (0+255),b	;volatile
 23037   00788C                     
 23038                           ; BSR set to: 5
 23039   00788C  0012               	return		;funcret
 23040   00788E                     __end_of_initTicker:
 23041                           	callstack 0
 23042                           
 23043 ;; *************** function _CAN1_OperationModeSet *****************
 23044 ;; Defined at:
 23045 ;;		line 919 in file "../../VLCBlib_PIC/can18_can_2.c"
 23046 ;; Parameters:    Size  Location     Type
 23047 ;;  requestMode     1    wreg     const enum E23640
 23048 ;; Auto vars:     Size  Location     Type
 23049 ;;  requestMode     1    1[COMRAM] const enum E23640
 23050 ;;  status          1    0[COMRAM] enum E23649
 23051 ;; Return value:  Size  Location     Type
 23052 ;;                  1    wreg      enum E23649
 23053 ;; Registers used:
 23054 ;;		wreg, status,2, status,0, cstack
 23055 ;; Tracked objects:
 23056 ;;		On entry : 0/0
 23057 ;;		On exit  : 0/0
 23058 ;;		Unchanged: 0/0
 23059 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23061 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23063 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23064 ;;Total ram usage:        2 bytes
 23065 ;; Hardware stack levels used: 1
 23066 ;; Hardware stack levels required when called: 2
 23067 ;; This function calls:
 23068 ;;		_CAN1_OperationModeGet
 23069 ;; This function is called by:
 23070 ;;		_canPowerUp
 23071 ;; This function uses a non-reentrant model
 23072 ;;
 23073                           
 23074                           	psect	text14
 23075   007006                     __ptext14:
 23076                           	callstack 0
 23077   007006                     _CAN1_OperationModeSet:
 23078                           	callstack 122
 23079                           
 23080                           ; BSR set to: 5
 23081                           ;incstack = 0
 23082                           ;CAN1_OperationModeSet@requestMode stored from wreg
 23083   007006  6E02               	movwf	CAN1_OperationModeSet@requestMode^(0+1280),c
 23084   007008                     
 23085                           ;../../VLCBlib_PIC/can18_can_2.c: 919: enum CAN_OP_MODE_STATUS CAN1_OperationModeSet(con
      +                          st enum CAN_OP_MODES requestMode);../../VLCBlib_PIC/can18_can_2.c: 920: {;../../VLCBlib_
      +                          PIC/can18_can_2.c: 921:     enum CAN_OP_MODE_STATUS status = CAN_OP_MODE_REQUEST_SUCCESS
      +                          ;
 23086   007008  6A01               	clrf	CAN1_OperationModeSet@status^(0+1280),c
 23087   00700A                     
 23088                           ;../../VLCBlib_PIC/can18_can_2.c: 923:     if ((CAN1_OperationModeGet() == CAN_CONFIGURA
      +                          TION_MODE)
 23089   00700A  EC79  F041         	call	_CAN1_OperationModeGet	;wreg free
 23090   00700E  0A04               	xorlw	4
 23091   007010  B4D8               	btfsc	status,2,c
 23092   007012  EF0D  F038         	goto	u5811
 23093   007016  EF0F  F038         	goto	u5810
 23094   00701A                     u5811:
 23095   00701A  EF20  F038         	goto	l8489
 23096   00701E                     u5810:
 23097   00701E  0402               	decf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 23098   007020  B4D8               	btfsc	status,2,c
 23099   007022  EF15  F038         	goto	u5821
 23100   007026  EF17  F038         	goto	u5820
 23101   00702A                     u5821:
 23102   00702A  EF20  F038         	goto	l8489
 23103   00702E                     u5820:
 23104   00702E  0E04               	movlw	4
 23105   007030  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 23106   007032  A4D8               	btfss	status,2,c
 23107   007034  EF1E  F038         	goto	u5831
 23108   007038  EF20  F038         	goto	u5830
 23109   00703C                     u5831:
 23110   00703C  EF40  F038         	goto	l8495
 23111   007040                     u5830:
 23112   007040                     l8489:
 23113                           
 23114                           ;../../VLCBlib_PIC/can18_can_2.c: 926:     {;../../VLCBlib_PIC/can18_can_2.c: 927:      
      +                             C1CONTbits.REQOP = (unsigned char)requestMode;
 23115   007040  0101               	movlb	1	; () banked
 23116   007042  5103               	movf	3,w,b	;volatile
 23117   007044  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 23118   007046  0BF8               	andlw	-8
 23119   007048  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 23120   00704A  6F03               	movwf	3,b	;volatile
 23121                           
 23122                           ;../../VLCBlib_PIC/can18_can_2.c: 929:         while (C1CONUbits.OPMOD != requestMode)
 23123   00704C  EF33  F038         	goto	l8493
 23124   007050                     l732:
 23125                           
 23126                           ; BSR set to: 1
 23127                           ;../../VLCBlib_PIC/can18_can_2.c: 930:         {;../../VLCBlib_PIC/can18_can_2.c: 932:  
      +                                     if (C1INTHbits.SERRIF == 1)
 23128   007050  A91D               	btfss	29,4,b	;volatile
 23129   007052  EF2D  F038         	goto	u5841
 23130   007056  EF2F  F038         	goto	u5840
 23131   00705A                     u5841:
 23132   00705A  EF33  F038         	goto	l8493
 23133   00705E                     u5840:
 23134   00705E                     
 23135                           ; BSR set to: 1
 23136                           ;../../VLCBlib_PIC/can18_can_2.c: 933:             {;../../VLCBlib_PIC/can18_can_2.c: 93
      +                          4:                 status = CAN_OP_MODE_SYS_ERROR_OCCURED;
 23137   00705E  0E02               	movlw	2
 23138   007060  6E01               	movwf	CAN1_OperationModeSet@status^(0+1280),c
 23139                           
 23140                           ;../../VLCBlib_PIC/can18_can_2.c: 935:                 break;
 23141   007062  EF42  F038         	goto	l735
 23142   007066                     l8493:
 23143                           
 23144                           ; BSR set to: 1
 23145                           ;../../VLCBlib_PIC/can18_can_2.c: 929:         while (C1CONUbits.OPMOD != requestMode)
 23146   007066  3902               	swapf	2,w,b	;volatile
 23147   007068  32E8               	rrcf	wreg,f,c
 23148   00706A  0B07               	andlw	7
 23149   00706C  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 23150   00706E  A4D8               	btfss	status,2,c
 23151   007070  EF3C  F038         	goto	u5851
 23152   007074  EF3E  F038         	goto	u5850
 23153   007078                     u5851:
 23154   007078  EF28  F038         	goto	l732
 23155   00707C                     u5850:
 23156   00707C  EF42  F038         	goto	l735
 23157   007080                     l8495:
 23158                           
 23159                           ;../../VLCBlib_PIC/can18_can_2.c: 940:     {;../../VLCBlib_PIC/can18_can_2.c: 941:      
      +                             status = CAN_OP_MODE_REQUEST_FAIL;
 23160   007080  0E01               	movlw	1
 23161   007082  6E01               	movwf	CAN1_OperationModeSet@status^(0+1280),c
 23162   007084                     l735:
 23163                           
 23164                           ;../../VLCBlib_PIC/can18_can_2.c: 944:     return status;
 23165   007084  5001               	movf	CAN1_OperationModeSet@status^(0+1280),w,c
 23166   007086  0012               	return		;funcret
 23167   007088                     __end_of_CAN1_OperationModeSet:
 23168                           	callstack 0
 23169                           
 23170 ;; *************** function _CAN1_OperationModeGet *****************
 23171 ;; Defined at:
 23172 ;;		line 952 in file "../../VLCBlib_PIC/can18_can_2.c"
 23173 ;; Parameters:    Size  Location     Type
 23174 ;;		None
 23175 ;; Auto vars:     Size  Location     Type
 23176 ;;		None
 23177 ;; Return value:  Size  Location     Type
 23178 ;;                  1    wreg      enum E23640
 23179 ;; Registers used:
 23180 ;;		wreg, status,2, status,0
 23181 ;; Tracked objects:
 23182 ;;		On entry : 0/0
 23183 ;;		On exit  : 0/0
 23184 ;;		Unchanged: 0/0
 23185 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23190 ;;Total ram usage:        0 bytes
 23191 ;; Hardware stack levels used: 1
 23192 ;; Hardware stack levels required when called: 1
 23193 ;; This function calls:
 23194 ;;		Nothing
 23195 ;; This function is called by:
 23196 ;;		_CAN1_OperationModeSet
 23197 ;; This function uses a non-reentrant model
 23198 ;;
 23199                           
 23200                           	psect	text15
 23201   0082F2                     __ptext15:
 23202                           	callstack 0
 23203   0082F2                     _CAN1_OperationModeGet:
 23204                           	callstack 122
 23205   0082F2                     
 23206                           ;../../VLCBlib_PIC/can18_can_2.c: 954:     return C1CONUbits.OPMOD;
 23207   0082F2  0101               	movlb	1	; () banked
 23208   0082F4  3902               	swapf	2,w,b	;volatile
 23209   0082F6  32E8               	rrcf	wreg,f,c
 23210   0082F8  0B07               	andlw	7
 23211   0082FA                     
 23212                           ; BSR set to: 1
 23213   0082FA  0012               	return		;funcret
 23214   0082FC                     __end_of_CAN1_OperationModeGet:
 23215                           	callstack 0
 23216                           
 23217 ;; *************** function _poll *****************
 23218 ;; Defined at:
 23219 ;;		line 1005 in file "../../VLCBlib_PIC/vlcb.c"
 23220 ;; Parameters:    Size  Location     Type
 23221 ;;		None
 23222 ;; Auto vars:     Size  Location     Type
 23223 ;;  m               9   36[BANK5 ] struct Message
 23224 ;;  i               1   35[BANK5 ] unsigned char 
 23225 ;;  handled         1   34[BANK5 ] enum E23340
 23226 ;; Return value:  Size  Location     Type
 23227 ;;                  1    wreg      void 
 23228 ;; Registers used:
 23229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23230 ;; Tracked objects:
 23231 ;;		On entry : 0/0
 23232 ;;		On exit  : 0/0
 23233 ;;		Unchanged: 0/0
 23234 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23236 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23237 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23238 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23239 ;;Total ram usage:       15 bytes
 23240 ;; Hardware stack levels used: 1
 23241 ;; Hardware stack levels required when called: 11
 23242 ;; This function calls:
 23243 ;;		NULL
 23244 ;;		_APP_postProcessMessage
 23245 ;;		_APP_preProcessMessage
 23246 ;;		___lmul
 23247 ;;		_bootProcessMessage
 23248 ;;		_canPoll
 23249 ;;		_canProcessMessage
 23250 ;;		_canReceiveMessage
 23251 ;;		_consumerProcessMessage
 23252 ;;		_flushFlashBlock
 23253 ;;		_leds_poll
 23254 ;;		_mnsPoll
 23255 ;;		_mnsProcessMessage
 23256 ;;		_nvProcessMessage
 23257 ;;		_pollTimedResponse
 23258 ;;		_showStatus
 23259 ;;		_teachProcessMessage
 23260 ;;		_tickGet
 23261 ;; This function is called by:
 23262 ;;		_main
 23263 ;; This function uses a non-reentrant model
 23264 ;;
 23265                           
 23266                           	psect	text16
 23267   002EC6                     __ptext16:
 23268                           	callstack 0
 23269   002EC6                     _poll:
 23270                           	callstack 115
 23271   002EC6                     
 23272                           ;../../VLCBlib_PIC/vlcb.c: 1006:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1007:     Mess
      +                          age m;;../../VLCBlib_PIC/vlcb.c: 1008:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 
      +                          1011:     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000
      +                          )) {
 23273   002EC6  ECF7  F039         	call	_tickGet	;wreg free
 23274   002ECA  0105               	movlb	5	; () banked
 23275   002ECC  5160               	movf	_timedResponseTime& (0+255),w,b
 23276   002ECE  5C01               	subwf	?_tickGet^(0+1280),w,c
 23277   002ED0  6FEE               	movwf	??_poll& (0+255),b
 23278   002ED2  5161               	movf	(_timedResponseTime+1)& (0+255),w,b
 23279   002ED4  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 23280   002ED6  6FEF               	movwf	(??_poll+1)& (0+255),b
 23281   002ED8  5162               	movf	(_timedResponseTime+2)& (0+255),w,b
 23282   002EDA  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 23283   002EDC  6FF0               	movwf	(??_poll+2)& (0+255),b
 23284   002EDE  5163               	movf	(_timedResponseTime+3)& (0+255),w,b
 23285   002EE0  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 23286   002EE2  6FF1               	movwf	(??_poll+3)& (0+255),b
 23287   002EE4  5193               	movf	_timedResponseDelay& (0+255),w,b
 23288   002EE6  6E01               	movwf	___lmul@multiplier^(0+1280),c
 23289   002EE8  6A02               	clrf	(___lmul@multiplier+1)^(0+1280),c
 23290   002EEA  6A03               	clrf	(___lmul@multiplier+2)^(0+1280),c
 23291   002EEC  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 23292   002EEE  0E3E               	movlw	62
 23293   002EF0  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 23294   002EF2  0E00               	movlw	0
 23295   002EF4  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 23296   002EF6  0E00               	movlw	0
 23297   002EF8  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 23298   002EFA  0E00               	movlw	0
 23299   002EFC  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 23300   002EFE  EC49  F03B         	call	___lmul	;wreg free
 23301   002F02  0105               	movlb	5	; () banked
 23302   002F04  51EE               	movf	??_poll& (0+255),w,b
 23303   002F06  5C01               	subwf	?___lmul^(0+1280),w,c
 23304   002F08  51EF               	movf	(??_poll+1)& (0+255),w,b
 23305   002F0A  5802               	subwfb	(?___lmul+1)^(0+1280),w,c
 23306   002F0C  51F0               	movf	(??_poll+2)& (0+255),w,b
 23307   002F0E  5803               	subwfb	(?___lmul+2)^(0+1280),w,c
 23308   002F10  51F1               	movf	(??_poll+3)& (0+255),w,b
 23309   002F12  5804               	subwfb	(?___lmul+3)^(0+1280),w,c
 23310   002F14  B0D8               	btfsc	status,0,c
 23311   002F16  EF8F  F017         	goto	u8441
 23312   002F1A  EF91  F017         	goto	u8440
 23313   002F1E                     u8441:
 23314   002F1E  EF9D  F017         	goto	l10987
 23315   002F22                     u8440:
 23316   002F22                     
 23317                           ; BSR set to: 5
 23318                           ;../../VLCBlib_PIC/vlcb.c: 1012:         pollTimedResponse();
 23319   002F22  ECD5  F030         	call	_pollTimedResponse	;wreg free
 23320   002F26                     
 23321                           ;../../VLCBlib_PIC/vlcb.c: 1013:         timedResponseTime.val = tickGet();
 23322   002F26  ECF7  F039         	call	_tickGet	;wreg free
 23323   002F2A  C501  F560         	movff	?_tickGet,_timedResponseTime
 23324   002F2E  C502  F561         	movff	?_tickGet+1,_timedResponseTime+1
 23325   002F32  C503  F562         	movff	?_tickGet+2,_timedResponseTime+2
 23326   002F36  C504  F563         	movff	?_tickGet+3,_timedResponseTime+3
 23327   002F3A                     l10987:
 23328                           
 23329                           ;../../VLCBlib_PIC/vlcb.c: 1015:     if ((tickGet() - flashFlushTime.val) > 62500) {
 23330   002F3A  ECF7  F039         	call	_tickGet	;wreg free
 23331   002F3E  0106               	movlb	6	; () banked
 23332   002F40  5142               	movf	_flashFlushTime& (0+255),w,b
 23333   002F42  5C01               	subwf	?_tickGet^(0+1280),w,c
 23334   002F44  0105               	movlb	5	; () banked
 23335   002F46  6FEE               	movwf	??_poll& (0+255),b
 23336   002F48  0106               	movlb	6	; () banked
 23337   002F4A  5143               	movf	(_flashFlushTime+1)& (0+255),w,b
 23338   002F4C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 23339   002F4E  0105               	movlb	5	; () banked
 23340   002F50  6FEF               	movwf	(??_poll+1)& (0+255),b
 23341   002F52  0106               	movlb	6	; () banked
 23342   002F54  5144               	movf	(_flashFlushTime+2)& (0+255),w,b
 23343   002F56  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 23344   002F58  0105               	movlb	5	; () banked
 23345   002F5A  6FF0               	movwf	(??_poll+2)& (0+255),b
 23346   002F5C  0106               	movlb	6	; () banked
 23347   002F5E  5145               	movf	(_flashFlushTime+3)& (0+255),w,b
 23348   002F60  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 23349   002F62  0105               	movlb	5	; () banked
 23350   002F64  6FF1               	movwf	(??_poll+3)& (0+255),b
 23351   002F66  51F1               	movf	(??_poll+3)& (0+255),w,b
 23352   002F68  11F0               	iorwf	(??_poll+2)& (0+255),w,b
 23353   002F6A  E10B               	bnz	u8450
 23354   002F6C  0E25               	movlw	37
 23355   002F6E  5DEE               	subwf	??_poll& (0+255),w,b
 23356   002F70  0EF4               	movlw	244
 23357   002F72  59EF               	subwfb	(??_poll+1)& (0+255),w,b
 23358   002F74  A0D8               	btfss	status,0,c
 23359   002F76  EFBF  F017         	goto	u8451
 23360   002F7A  EFC1  F017         	goto	u8450
 23361   002F7E                     u8451:
 23362   002F7E  EFCD  F017         	goto	l10993
 23363   002F82                     u8450:
 23364   002F82                     
 23365                           ; BSR set to: 5
 23366                           ;../../VLCBlib_PIC/vlcb.c: 1016:         flushFlashBlock();
 23367   002F82  ECE4  F034         	call	_flushFlashBlock	;wreg free
 23368   002F86                     
 23369                           ;../../VLCBlib_PIC/vlcb.c: 1017:         flashFlushTime.val = tickGet();
 23370   002F86  ECF7  F039         	call	_tickGet	;wreg free
 23371   002F8A  C501  F642         	movff	?_tickGet,_flashFlushTime
 23372   002F8E  C502  F643         	movff	?_tickGet+1,_flashFlushTime+1
 23373   002F92  C503  F644         	movff	?_tickGet+2,_flashFlushTime+2
 23374   002F96  C504  F645         	movff	?_tickGet+3,_flashFlushTime+3
 23375   002F9A                     l10993:
 23376                           
 23377                           ;../../VLCBlib_PIC/vlcb.c: 1020:     for (i=0; i<6; i++) {
 23378   002F9A  0105               	movlb	5	; () banked
 23379   002F9C  6BF3               	clrf	poll@i& (0+255),b
 23380   002F9E                     l10999:
 23381                           
 23382                           ; BSR set to: 5
 23383                           ;../../VLCBlib_PIC/vlcb.c: 1021:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
 23384   002F9E  51F3               	movf	poll@i& (0+255),w,b
 23385   002FA0  0D02               	mullw	2
 23386   002FA2  0E89               	movlw	low _services
 23387   002FA4  24F3               	addwf	243,w,c
 23388   002FA6  6EF6               	movwf	tblptrl,c
 23389   002FA8  0EFF               	movlw	high _services
 23390   002FAA  20F4               	addwfc	244,w,c
 23391   002FAC  6EF7               	movwf	tblptrh,c
 23392   002FAE                     	if	1	;There are 3 active tblptr bytes
 23393   002FAE  6AF8               	clrf	tblptru,c
 23394   002FB0  0E00               	movlw	low (__mediumconst shr (0+16))
 23395   002FB2  22F8               	addwfc	tblptru,f,c
 23396   002FB4                     	endif
 23397   002FB4  0009               	tblrd		*+
 23398   002FB6  50F5               	movf	tablat,w,c
 23399   002FB8  0009               	tblrd		*+
 23400   002FBA  10F5               	iorwf	tablat,w,c
 23401   002FBC  B4D8               	btfsc	status,2,c
 23402   002FBE  EFE3  F017         	goto	u8461
 23403   002FC2  EFE5  F017         	goto	u8460
 23404   002FC6                     u8461:
 23405   002FC6  EF36  F018         	goto	l11005
 23406   002FCA                     u8460:
 23407   002FCA                     
 23408                           ; BSR set to: 5
 23409   002FCA  51F3               	movf	poll@i& (0+255),w,b
 23410   002FCC  0D02               	mullw	2
 23411   002FCE  0E89               	movlw	low _services
 23412   002FD0  24F3               	addwf	243,w,c
 23413   002FD2  6EF6               	movwf	tblptrl,c
 23414   002FD4  0EFF               	movlw	high _services
 23415   002FD6  20F4               	addwfc	244,w,c
 23416   002FD8  6EF7               	movwf	tblptrh,c
 23417   002FDA                     	if	1	;There are 3 active tblptr bytes
 23418   002FDA  6AF8               	clrf	tblptru,c
 23419   002FDC  0E00               	movlw	low (__mediumconst shr (0+16))
 23420   002FDE  22F8               	addwfc	tblptru,f,c
 23421   002FE0                     	endif
 23422   002FE0  0009               	tblrd		*+
 23423   002FE2  C4F5 F5EE          	movff	tablat,??_poll
 23424   002FE6  0009               	tblrd		*+
 23425   002FE8  C4F5 F5EF          	movff	tablat,??_poll+1
 23426   002FEC  0E08               	movlw	8
 23427   002FEE  27EE               	addwf	??_poll& (0+255),f,b
 23428   002FF0  0E00               	movlw	0
 23429   002FF2  23EF               	addwfc	(??_poll+1)& (0+255),f,b
 23430   002FF4  C5EE  F4F6         	movff	??_poll,tblptrl
 23431   002FF8  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23432   002FFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23433   002FFC  6AF8               	clrf	tblptru,c
 23434   002FFE                     	endif
 23435   002FFE                     	if	0	;tblptru may be non-zero
 23436   002FFE                     	endif
 23437   002FFE  0009               	tblrd		*+
 23438   003000  50F5               	movf	tablat,w,c
 23439   003002  0009               	tblrd		*+
 23440   003004  10F5               	iorwf	tablat,w,c
 23441   003006  B4D8               	btfsc	status,2,c
 23442   003008  EF08  F018         	goto	u8471
 23443   00300C  EF0A  F018         	goto	u8470
 23444   003010                     u8471:
 23445   003010  EF36  F018         	goto	l11005
 23446   003014                     u8470:
 23447   003014                     
 23448                           ; BSR set to: 5
 23449                           ;../../VLCBlib_PIC/vlcb.c: 1022:             services[i]->poll();
 23450   003014  51F3               	movf	poll@i& (0+255),w,b
 23451   003016  0D02               	mullw	2
 23452   003018  0E89               	movlw	low _services
 23453   00301A  24F3               	addwf	243,w,c
 23454   00301C  6EF6               	movwf	tblptrl,c
 23455   00301E  0EFF               	movlw	high _services
 23456   003020  20F4               	addwfc	244,w,c
 23457   003022  6EF7               	movwf	tblptrh,c
 23458   003024                     	if	1	;There are 3 active tblptr bytes
 23459   003024  6AF8               	clrf	tblptru,c
 23460   003026  0E00               	movlw	low (__mediumconst shr (0+16))
 23461   003028  22F8               	addwfc	tblptru,f,c
 23462   00302A                     	endif
 23463   00302A  0009               	tblrd		*+
 23464   00302C  C4F5 F5EE          	movff	tablat,??_poll
 23465   003030  0009               	tblrd		*+
 23466   003032  C4F5 F5EF          	movff	tablat,??_poll+1
 23467   003036  0E08               	movlw	8
 23468   003038  27EE               	addwf	??_poll& (0+255),f,b
 23469   00303A  0E00               	movlw	0
 23470   00303C  23EF               	addwfc	(??_poll+1)& (0+255),f,b
 23471   00303E  C5EE  F4F6         	movff	??_poll,tblptrl
 23472   003042  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23473   003046                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23474   003046  6AF8               	clrf	tblptru,c
 23475   003048                     	endif
 23476   003048                     	if	0	;tblptru may be non-zero
 23477   003048                     	endif
 23478   003048  0009               	tblrd		*+
 23479   00304A  C4F5 F5F0          	movff	tablat,??_poll+2
 23480   00304E  0009               	tblrd		*+
 23481   003050  C4F5 F5F1          	movff	tablat,??_poll+3
 23482   003054  D802               	call	u8488
 23483   003056  EF36  F018         	goto	u8489
 23484   00305A                     u8488:
 23485   00305A  0005               	push	
 23486   00305C  6EFA               	movwf	pclath,c
 23487   00305E  51F0               	movf	(??_poll+2)& (0+255),w,b
 23488   003060  6EFD               	movwf	tosl,c
 23489   003062  51F1               	movf	(??_poll+3)& (0+255),w,b
 23490   003064  6EFE               	movwf	tosh,c
 23491   003066  6AFF               	clrf	tosu,c
 23492   003068  50FA               	movf	pclath,w,c
 23493   00306A  0012               	return		;indir
 23494   00306C                     u8489:
 23495   00306C                     l11005:
 23496                           
 23497                           ;../../VLCBlib_PIC/vlcb.c: 1024:     }
 23498   00306C  0105               	movlb	5	; () banked
 23499   00306E  2BF3               	incf	poll@i& (0+255),f,b
 23500   003070                     
 23501                           ; BSR set to: 5
 23502   003070  0E05               	movlw	5
 23503   003072  65F3               	cpfsgt	poll@i& (0+255),b
 23504   003074  EF3E  F018         	goto	u8491
 23505   003078  EF40  F018         	goto	u8490
 23506   00307C                     u8491:
 23507   00307C  EFCF  F017         	goto	l10999
 23508   003080                     u8490:
 23509   003080                     
 23510                           ; BSR set to: 5
 23511                           ;../../VLCBlib_PIC/vlcb.c: 1026:     leds_poll();
 23512   003080  EC22  F01B         	call	_leds_poll	;wreg free
 23513   003084                     
 23514                           ;../../VLCBlib_PIC/vlcb.c: 1029:     handled = NOT_PROCESSED;
 23515   003084  0105               	movlb	5	; () banked
 23516   003086  6BF2               	clrf	poll@handled& (0+255),b
 23517   003088                     
 23518                           ; BSR set to: 5
 23519                           ;../../VLCBlib_PIC/vlcb.c: 1030:     if (transport != ((void*)0)) {
 23520   003088  5191               	movf	_transport& (0+255),w,b
 23521   00308A  1192               	iorwf	(_transport+1)& (0+255),w,b
 23522   00308C  B4D8               	btfsc	status,2,c
 23523   00308E  EF4B  F018         	goto	u8501
 23524   003092  EF4D  F018         	goto	u8500
 23525   003096                     u8501:
 23526   003096  EF3D  F019         	goto	l11047
 23527   00309A                     u8500:
 23528   00309A                     
 23529                           ; BSR set to: 5
 23530                           ;../../VLCBlib_PIC/vlcb.c: 1031:         if (transport->receiveMessage != ((void*)0)) {
 23531   00309A  0E02               	movlw	2
 23532   00309C  2591               	addwf	_transport& (0+255),w,b
 23533   00309E  6FEE               	movwf	??_poll& (0+255),b
 23534   0030A0  0E00               	movlw	0
 23535   0030A2  2192               	addwfc	(_transport+1)& (0+255),w,b
 23536   0030A4  6FEF               	movwf	(??_poll+1)& (0+255),b
 23537   0030A6  C5EE  F4F6         	movff	??_poll,tblptrl
 23538   0030AA  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23539   0030AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23540   0030AE  6AF8               	clrf	tblptru,c
 23541   0030B0                     	endif
 23542   0030B0                     	if	0	;tblptru may be non-zero
 23543   0030B0                     	endif
 23544   0030B0  0009               	tblrd		*+
 23545   0030B2  50F5               	movf	tablat,w,c
 23546   0030B4  0009               	tblrd		*+
 23547   0030B6  10F5               	iorwf	tablat,w,c
 23548   0030B8  B4D8               	btfsc	status,2,c
 23549   0030BA  EF61  F018         	goto	u8511
 23550   0030BE  EF63  F018         	goto	u8510
 23551   0030C2                     u8511:
 23552   0030C2  EF3D  F019         	goto	l11047
 23553   0030C6                     u8510:
 23554   0030C6                     
 23555                           ; BSR set to: 5
 23556                           ;../../VLCBlib_PIC/vlcb.c: 1032:             if (transport->receiveMessage(&m)) {
 23557   0030C6  0EF4               	movlw	low poll@m
 23558   0030C8  6E10               	movwf	canReceiveMessage@m^(0+1280),c
 23559   0030CA  0E05               	movlw	high poll@m
 23560   0030CC  6E11               	movwf	(canReceiveMessage@m+1)^(0+1280),c
 23561   0030CE  0E02               	movlw	2
 23562   0030D0  2591               	addwf	_transport& (0+255),w,b
 23563   0030D2  6FEE               	movwf	??_poll& (0+255),b
 23564   0030D4  0E00               	movlw	0
 23565   0030D6  2192               	addwfc	(_transport+1)& (0+255),w,b
 23566   0030D8  6FEF               	movwf	(??_poll+1)& (0+255),b
 23567   0030DA  C5EE  F4F6         	movff	??_poll,tblptrl
 23568   0030DE  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23569   0030E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23570   0030E2  6AF8               	clrf	tblptru,c
 23571   0030E4                     	endif
 23572   0030E4                     	if	0	;tblptru may be non-zero
 23573   0030E4                     	endif
 23574   0030E4  0009               	tblrd		*+
 23575   0030E6  C4F5 F5F0          	movff	tablat,??_poll+2
 23576   0030EA  0009               	tblrd		*+
 23577   0030EC  C4F5 F5F1          	movff	tablat,??_poll+3
 23578   0030F0  D802               	call	u8528
 23579   0030F2  EF84  F018         	goto	u8529
 23580   0030F6                     u8528:
 23581   0030F6  0005               	push	
 23582   0030F8  6EFA               	movwf	pclath,c
 23583   0030FA  51F0               	movf	(??_poll+2)& (0+255),w,b
 23584   0030FC  6EFD               	movwf	tosl,c
 23585   0030FE  51F1               	movf	(??_poll+3)& (0+255),w,b
 23586   003100  6EFE               	movwf	tosh,c
 23587   003102  6AFF               	clrf	tosu,c
 23588   003104  50FA               	movf	pclath,w,c
 23589   003106  0012               	return		;indir
 23590   003108                     u8529:
 23591   003108  0900               	iorlw	0
 23592   00310A  B4D8               	btfsc	status,2,c
 23593   00310C  EF8A  F018         	goto	u8531
 23594   003110  EF8C  F018         	goto	u8530
 23595   003114                     u8531:
 23596   003114  EF3D  F019         	goto	l11047
 23597   003118                     u8530:
 23598   003118                     
 23599                           ;../../VLCBlib_PIC/vlcb.c: 1033:                 if (m.len > 0) {
 23600   003118  0105               	movlb	5	; () banked
 23601   00311A  51F4               	movf	poll@m& (0+255),w,b
 23602   00311C  B4D8               	btfsc	status,2,c
 23603   00311E  EF93  F018         	goto	u8541
 23604   003122  EF95  F018         	goto	u8540
 23605   003126                     u8541:
 23606   003126  EF3D  F019         	goto	l11047
 23607   00312A                     u8540:
 23608   00312A                     
 23609                           ; BSR set to: 5
 23610                           ;../../VLCBlib_PIC/vlcb.c: 1034:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
 23611   00312A  0E07               	movlw	7
 23612   00312C  EC33  F028         	call	_showStatus
 23613                           
 23614                           ;../../VLCBlib_PIC/vlcb.c: 1035:                     handled = APP_preProcessMessage(&m)
      +                          ;
 23615   003130  0EF4               	movlw	low poll@m
 23616   003132  6E01               	movwf	APP_preProcessMessage@m^(0+1280),c
 23617   003134  0E05               	movlw	high poll@m
 23618   003136  6E02               	movwf	(APP_preProcessMessage@m+1)^(0+1280),c
 23619   003138  ECA6  F041         	call	_APP_preProcessMessage	;wreg free
 23620   00313C  0105               	movlb	5	; () banked
 23621   00313E  6FF2               	movwf	poll@handled& (0+255),b
 23622   003140                     
 23623                           ; BSR set to: 5
 23624                           ;../../VLCBlib_PIC/vlcb.c: 1036:                     if (handled == NOT_PROCESSED) {
 23625   003140  51F2               	movf	poll@handled& (0+255),w,b
 23626   003142  A4D8               	btfss	status,2,c
 23627   003144  EFA6  F018         	goto	u8551
 23628   003148  EFA8  F018         	goto	u8550
 23629   00314C                     u8551:
 23630   00314C  EF3D  F019         	goto	l11047
 23631   003150                     u8550:
 23632   003150                     
 23633                           ; BSR set to: 5
 23634                           ;../../VLCBlib_PIC/vlcb.c: 1037:                         for (i=0; i<6; i++) {
 23635   003150  6BF3               	clrf	poll@i& (0+255),b
 23636   003152                     l11031:
 23637                           
 23638                           ; BSR set to: 5
 23639                           ;../../VLCBlib_PIC/vlcb.c: 1038:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
 23640   003152  51F3               	movf	poll@i& (0+255),w,b
 23641   003154  0D02               	mullw	2
 23642   003156  0E89               	movlw	low _services
 23643   003158  24F3               	addwf	243,w,c
 23644   00315A  6EF6               	movwf	tblptrl,c
 23645   00315C  0EFF               	movlw	high _services
 23646   00315E  20F4               	addwfc	244,w,c
 23647   003160  6EF7               	movwf	tblptrh,c
 23648   003162                     	if	1	;There are 3 active tblptr bytes
 23649   003162  6AF8               	clrf	tblptru,c
 23650   003164  0E00               	movlw	low (__mediumconst shr (0+16))
 23651   003166  22F8               	addwfc	tblptru,f,c
 23652   003168                     	endif
 23653   003168  0009               	tblrd		*+
 23654   00316A  50F5               	movf	tablat,w,c
 23655   00316C  0009               	tblrd		*+
 23656   00316E  10F5               	iorwf	tablat,w,c
 23657   003170  B4D8               	btfsc	status,2,c
 23658   003172  EFBD  F018         	goto	u8561
 23659   003176  EFBF  F018         	goto	u8560
 23660   00317A                     u8561:
 23661   00317A  EF21  F019         	goto	l11039
 23662   00317E                     u8560:
 23663   00317E                     
 23664                           ; BSR set to: 5
 23665   00317E  51F3               	movf	poll@i& (0+255),w,b
 23666   003180  0D02               	mullw	2
 23667   003182  0E89               	movlw	low _services
 23668   003184  24F3               	addwf	243,w,c
 23669   003186  6EF6               	movwf	tblptrl,c
 23670   003188  0EFF               	movlw	high _services
 23671   00318A  20F4               	addwfc	244,w,c
 23672   00318C  6EF7               	movwf	tblptrh,c
 23673   00318E                     	if	1	;There are 3 active tblptr bytes
 23674   00318E  6AF8               	clrf	tblptru,c
 23675   003190  0E00               	movlw	low (__mediumconst shr (0+16))
 23676   003192  22F8               	addwfc	tblptru,f,c
 23677   003194                     	endif
 23678   003194  0009               	tblrd		*+
 23679   003196  C4F5 F5EE          	movff	tablat,??_poll
 23680   00319A  0009               	tblrd		*+
 23681   00319C  C4F5 F5EF          	movff	tablat,??_poll+1
 23682   0031A0  0E06               	movlw	6
 23683   0031A2  27EE               	addwf	??_poll& (0+255),f,b
 23684   0031A4  0E00               	movlw	0
 23685   0031A6  23EF               	addwfc	(??_poll+1)& (0+255),f,b
 23686   0031A8  C5EE  F4F6         	movff	??_poll,tblptrl
 23687   0031AC  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23688   0031B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23689   0031B0  6AF8               	clrf	tblptru,c
 23690   0031B2                     	endif
 23691   0031B2                     	if	0	;tblptru may be non-zero
 23692   0031B2                     	endif
 23693   0031B2  0009               	tblrd		*+
 23694   0031B4  50F5               	movf	tablat,w,c
 23695   0031B6  0009               	tblrd		*+
 23696   0031B8  10F5               	iorwf	tablat,w,c
 23697   0031BA  B4D8               	btfsc	status,2,c
 23698   0031BC  EFE2  F018         	goto	u8571
 23699   0031C0  EFE4  F018         	goto	u8570
 23700   0031C4                     u8571:
 23701   0031C4  EF21  F019         	goto	l11039
 23702   0031C8                     u8570:
 23703   0031C8                     
 23704                           ; BSR set to: 5
 23705                           ;../../VLCBlib_PIC/vlcb.c: 1039:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
 23706   0031C8  0EF4               	movlw	low poll@m
 23707   0031CA  6E54               	movwf	nvProcessMessage@m^(0+1280),c
 23708   0031CC  0E05               	movlw	high poll@m
 23709   0031CE  6E55               	movwf	(nvProcessMessage@m+1)^(0+1280),c
 23710   0031D0  51F3               	movf	poll@i& (0+255),w,b
 23711   0031D2  0D02               	mullw	2
 23712   0031D4  0E89               	movlw	low _services
 23713   0031D6  24F3               	addwf	243,w,c
 23714   0031D8  6EF6               	movwf	tblptrl,c
 23715   0031DA  0EFF               	movlw	high _services
 23716   0031DC  20F4               	addwfc	244,w,c
 23717   0031DE  6EF7               	movwf	tblptrh,c
 23718   0031E0                     	if	1	;There are 3 active tblptr bytes
 23719   0031E0  6AF8               	clrf	tblptru,c
 23720   0031E2  0E00               	movlw	low (__mediumconst shr (0+16))
 23721   0031E4  22F8               	addwfc	tblptru,f,c
 23722   0031E6                     	endif
 23723   0031E6  0009               	tblrd		*+
 23724   0031E8  C4F5 F5EE          	movff	tablat,??_poll
 23725   0031EC  0009               	tblrd		*+
 23726   0031EE  C4F5 F5EF          	movff	tablat,??_poll+1
 23727   0031F2  0E06               	movlw	6
 23728   0031F4  27EE               	addwf	??_poll& (0+255),f,b
 23729   0031F6  0E00               	movlw	0
 23730   0031F8  23EF               	addwfc	(??_poll+1)& (0+255),f,b
 23731   0031FA  C5EE  F4F6         	movff	??_poll,tblptrl
 23732   0031FE  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23733   003202                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23734   003202  6AF8               	clrf	tblptru,c
 23735   003204                     	endif
 23736   003204                     	if	0	;tblptru may be non-zero
 23737   003204                     	endif
 23738   003204  0009               	tblrd		*+
 23739   003206  C4F5 F5F0          	movff	tablat,??_poll+2
 23740   00320A  0009               	tblrd		*+
 23741   00320C  C4F5 F5F1          	movff	tablat,??_poll+3
 23742   003210  D802               	call	u8588
 23743   003212  EF14  F019         	goto	u8589
 23744   003216                     u8588:
 23745   003216  0005               	push	
 23746   003218  6EFA               	movwf	pclath,c
 23747   00321A  51F0               	movf	(??_poll+2)& (0+255),w,b
 23748   00321C  6EFD               	movwf	tosl,c
 23749   00321E  51F1               	movf	(??_poll+3)& (0+255),w,b
 23750   003220  6EFE               	movwf	tosh,c
 23751   003222  6AFF               	clrf	tosu,c
 23752   003224  50FA               	movf	pclath,w,c
 23753   003226  0012               	return		;indir
 23754   003228                     u8589:
 23755   003228  06E8               	decf	wreg,f,c
 23756   00322A  A4D8               	btfss	status,2,c
 23757   00322C  EF1A  F019         	goto	u8591
 23758   003230  EF1C  F019         	goto	u8590
 23759   003234                     u8591:
 23760   003234  EF21  F019         	goto	l11039
 23761   003238                     u8590:
 23762   003238                     
 23763                           ;../../VLCBlib_PIC/vlcb.c: 1040:                                     handled = PROCESSED
      +                          ;
 23764   003238  0E01               	movlw	1
 23765   00323A  0105               	movlb	5	; () banked
 23766   00323C  6FF2               	movwf	poll@handled& (0+255),b
 23767                           
 23768                           ;../../VLCBlib_PIC/vlcb.c: 1041:                                     break;
 23769   00323E  EF2B  F019         	goto	l11043
 23770   003242                     l11039:
 23771                           
 23772                           ;../../VLCBlib_PIC/vlcb.c: 1044:                         }
 23773   003242  0105               	movlb	5	; () banked
 23774   003244  2BF3               	incf	poll@i& (0+255),f,b
 23775   003246                     
 23776                           ; BSR set to: 5
 23777   003246  0E05               	movlw	5
 23778   003248  65F3               	cpfsgt	poll@i& (0+255),b
 23779   00324A  EF29  F019         	goto	u8601
 23780   00324E  EF2B  F019         	goto	u8600
 23781   003252                     u8601:
 23782   003252  EFA9  F018         	goto	l11031
 23783   003256                     u8600:
 23784   003256                     l11043:
 23785                           
 23786                           ; BSR set to: 5
 23787                           ;../../VLCBlib_PIC/vlcb.c: 1045:                         if (handled == NOT_PROCESSED) {
 23788   003256  51F2               	movf	poll@handled& (0+255),w,b
 23789   003258  A4D8               	btfss	status,2,c
 23790   00325A  EF31  F019         	goto	u8611
 23791   00325E  EF33  F019         	goto	u8610
 23792   003262                     u8611:
 23793   003262  EF3D  F019         	goto	l2017
 23794   003266                     u8610:
 23795   003266                     
 23796                           ; BSR set to: 5
 23797                           ;../../VLCBlib_PIC/vlcb.c: 1046:                             handled = APP_postProcessMe
      +                          ssage(&m);
 23798   003266  0EF4               	movlw	low poll@m
 23799   003268  6E01               	movwf	APP_postProcessMessage@m^(0+1280),c
 23800   00326A  0E05               	movlw	high poll@m
 23801   00326C  6E02               	movwf	(APP_postProcessMessage@m+1)^(0+1280),c
 23802   00326E  ECA8  F041         	call	_APP_postProcessMessage	;wreg free
 23803   003272  0105               	movlb	5	; () banked
 23804   003274  6FF2               	movwf	poll@handled& (0+255),b
 23805   003276  EF3D  F019         	goto	l11047
 23806   00327A                     l2017:
 23807   00327A                     l11047:
 23808                           
 23809                           ;../../VLCBlib_PIC/vlcb.c: 1053:     if (handled) {
 23810   00327A  0105               	movlb	5	; () banked
 23811   00327C  51F2               	movf	poll@handled& (0+255),w,b
 23812   00327E  B4D8               	btfsc	status,2,c
 23813   003280  EF44  F019         	goto	u8621
 23814   003284  EF46  F019         	goto	u8620
 23815   003288                     u8621:
 23816   003288  EF4B  F019         	goto	l2026
 23817   00328C                     u8620:
 23818   00328C                     
 23819                           ; BSR set to: 5
 23820                           ;../../VLCBlib_PIC/vlcb.c: 1054:         mnsDiagnostics[0x06].asUint++;
 23821   00328C  4BB9               	infsnz	(_mnsDiagnostics+12)& (0+255),f,b
 23822   00328E  2BBA               	incf	(_mnsDiagnostics+13)& (0+255),f,b
 23823   003290                     
 23824                           ; BSR set to: 5
 23825                           ;../../VLCBlib_PIC/vlcb.c: 1055:         showStatus(STATUS_MESSAGE_ACTED);
 23826   003290  0E08               	movlw	8
 23827   003292  EC33  F028         	call	_showStatus
 23828   003296                     l2026:
 23829   003296  0012               	return		;funcret
 23830   003298                     __end_of_poll:
 23831                           	callstack 0
 23832                           
 23833 ;; *************** function _nvProcessMessage *****************
 23834 ;; Defined at:
 23835 ;;		line 240 in file "../../VLCBlib_PIC/nv.c"
 23836 ;; Parameters:    Size  Location     Type
 23837 ;;  m               2   83[COMRAM] PTR struct Message
 23838 ;;		 -> poll@m(9), 
 23839 ;; Auto vars:     Size  Location     Type
 23840 ;;  valueOrError    2   87[COMRAM] short 
 23841 ;; Return value:  Size  Location     Type
 23842 ;;                  1    wreg      enum E23340
 23843 ;; Registers used:
 23844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23845 ;; Tracked objects:
 23846 ;;		On entry : 0/0
 23847 ;;		On exit  : 0/0
 23848 ;;		Unchanged: 0/0
 23849 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23851 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23852 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23853 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23854 ;;Total ram usage:        6 bytes
 23855 ;; Hardware stack levels used: 1
 23856 ;; Hardware stack levels required when called: 7
 23857 ;; This function calls:
 23858 ;;		_findServiceIndex
 23859 ;;		_getNV
 23860 ;;		_sendMessage2
 23861 ;;		_sendMessage3
 23862 ;;		_sendMessage4
 23863 ;;		_sendMessage5
 23864 ;;		_setNV
 23865 ;;		_startTimedResponse
 23866 ;; This function is called by:
 23867 ;;		_poll
 23868 ;; This function uses a non-reentrant model
 23869 ;;
 23870                           
 23871                           	psect	text17
 23872   003298                     __ptext17:
 23873                           	callstack 0
 23874   003298                     _nvProcessMessage:
 23875                           	callstack 118
 23876   003298                     
 23877                           ;../../VLCBlib_PIC/nv.c: 241:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 243:    
      +                           if (m->len < 3) {
 23878   003298  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 23879   00329C  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 23880   0032A0  0E03               	movlw	3
 23881   0032A2  60DF               	cpfslt	indf2,c
 23882   0032A4  EF56  F019         	goto	u8041
 23883   0032A8  EF58  F019         	goto	u8040
 23884   0032AC                     u8041:
 23885   0032AC  EF5B  F019         	goto	l10607
 23886   0032B0                     u8040:
 23887   0032B0                     l10603:
 23888                           
 23889                           ;../../VLCBlib_PIC/nv.c: 244:         return NOT_PROCESSED;
 23890   0032B0  0E00               	movlw	0
 23891   0032B2  EF21  F01B         	goto	l1545
 23892   0032B6                     l10607:
 23893                           
 23894                           ;../../VLCBlib_PIC/nv.c: 247:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 23895   0032B6  EE20 F002          	lfsr	2,2
 23896   0032BA  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23897   0032BC  26D9               	addwf	fsr2l,f,c
 23898   0032BE  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23899   0032C0  22DA               	addwfc	fsr2h,f,c
 23900   0032C2  50DE               	movf	postinc2,w,c
 23901   0032C4  0105               	movlb	5	; () banked
 23902   0032C6  1990               	xorwf	(_nn+1)& (0+255),w,b
 23903   0032C8  B4D8               	btfsc	status,2,c
 23904   0032CA  EF69  F019         	goto	u8051
 23905   0032CE  EF6B  F019         	goto	u8050
 23906   0032D2                     u8051:
 23907   0032D2  EF6D  F019         	goto	l10613
 23908   0032D6                     u8050:
 23909   0032D6  EF58  F019         	goto	l10603
 23910   0032DA                     l10613:
 23911                           
 23912                           ; BSR set to: 5
 23913                           ;../../VLCBlib_PIC/nv.c: 248:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 23914   0032DA  EE20 F003          	lfsr	2,3
 23915   0032DE  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23916   0032E0  26D9               	addwf	fsr2l,f,c
 23917   0032E2  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23918   0032E4  22DA               	addwfc	fsr2h,f,c
 23919   0032E6  518F               	movf	_nn& (0+255),w,b
 23920   0032E8  18DE               	xorwf	postinc2,w,c
 23921   0032EA  B4D8               	btfsc	status,2,c
 23922   0032EC  EF7A  F019         	goto	u8061
 23923   0032F0  EF7C  F019         	goto	u8060
 23924   0032F4                     u8061:
 23925   0032F4  EF02  F01B         	goto	l10731
 23926   0032F8                     u8060:
 23927   0032F8  EF58  F019         	goto	l10603
 23928   0032FC                     l10619:
 23929                           
 23930                           ; BSR set to: 5
 23931                           ;../../VLCBlib_PIC/nv.c: 252:             if (m->len < 4) {
 23932   0032FC  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 23933   003300  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 23934   003304  0E04               	movlw	4
 23935   003306  60DF               	cpfslt	indf2,c
 23936   003308  EF88  F019         	goto	u8071
 23937   00330C  EF8A  F019         	goto	u8070
 23938   003310                     u8071:
 23939   003310  EFA6  F019         	goto	l10629
 23940   003314                     u8070:
 23941   003314                     
 23942                           ; BSR set to: 5
 23943                           ;../../VLCBlib_PIC/nv.c: 253:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 23944   003314  C590  F526         	movff	_nn+1,sendMessage3@data1
 23945   003318  C58F  F527         	movff	_nn,sendMessage3@data2
 23946   00331C  0E01               	movlw	1
 23947   00331E  6E28               	movwf	sendMessage3@data3^(0+1280),c
 23948   003320  0E6F               	movlw	111
 23949   003322  EC57  F040         	call	_sendMessage3
 23950                           
 23951                           ;../../VLCBlib_PIC/nv.c: 255:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 23952   003326  C590  F526         	movff	_nn+1,sendMessage5@data1
 23953   00332A  C58F  F527         	movff	_nn,sendMessage5@data2
 23954   00332E  0E71               	movlw	113
 23955   003330  6E28               	movwf	sendMessage5@data3^(0+1280),c
 23956   003332  0E01               	movlw	1
 23957   003334  6E29               	movwf	sendMessage5@data4^(0+1280),c
 23958   003336  0E01               	movlw	1
 23959   003338  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 23960   00333A  0EAF               	movlw	175
 23961   00333C  EC96  F040         	call	_sendMessage5
 23962   003340                     l10623:
 23963                           
 23964                           ;../../VLCBlib_PIC/nv.c: 258:                 nvDiagnostics[0x02].asUint++;
 23965   003340  0105               	movlb	5	; () banked
 23966   003342  4BBF               	infsnz	(_nvDiagnostics+4)& (0+255),f,b
 23967   003344  2BC0               	incf	(_nvDiagnostics+5)& (0+255),f,b
 23968   003346                     l10625:
 23969                           
 23970                           ;../../VLCBlib_PIC/nv.c: 260:                 return PROCESSED;
 23971   003346  0E01               	movlw	1
 23972   003348  EF21  F01B         	goto	l1545
 23973   00334C                     l10629:
 23974                           
 23975                           ; BSR set to: 5
 23976                           ;../../VLCBlib_PIC/nv.c: 262:             valueOrError = getNV(m->bytes[2]);
 23977   00334C  EE20 F004          	lfsr	2,4
 23978   003350  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23979   003352  26D9               	addwf	fsr2l,f,c
 23980   003354  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23981   003356  22DA               	addwfc	fsr2h,f,c
 23982   003358  50DF               	movf	indf2,w,c
 23983   00335A  EC56  F03D         	call	_getNV
 23984   00335E  C501  F558         	movff	?_getNV,nvProcessMessage@valueOrError
 23985   003362  C502  F559         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 23986   003366                     
 23987                           ;../../VLCBlib_PIC/nv.c: 263:             if (valueOrError < 0) {
 23988   003366  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 23989   003368  EFBA  F019         	goto	u8080
 23990   00336C  EFB8  F019         	goto	u8081
 23991   003370                     u8081:
 23992   003370  EFD4  F019         	goto	l10641
 23993   003374                     u8080:
 23994   003374                     
 23995                           ;../../VLCBlib_PIC/nv.c: 264:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 23996   003374  C590  F526         	movff	_nn+1,sendMessage3@data1
 23997   003378  C58F  F527         	movff	_nn,sendMessage3@data2
 23998   00337C  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 23999   00337E  0800               	sublw	0
 24000   003380  6E28               	movwf	sendMessage3@data3^(0+1280),c
 24001   003382  0E6F               	movlw	111
 24002   003384  EC57  F040         	call	_sendMessage3
 24003                           
 24004                           ;../../VLCBlib_PIC/nv.c: 266:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 24005   003388  C590  F526         	movff	_nn+1,sendMessage5@data1
 24006   00338C  C58F  F527         	movff	_nn,sendMessage5@data2
 24007   003390  0E71               	movlw	113
 24008   003392  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24009   003394  0E01               	movlw	1
 24010   003396  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24011   003398  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 24012   00339A  0800               	sublw	0
 24013   00339C  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24014   00339E  0EAF               	movlw	175
 24015   0033A0  EC96  F040         	call	_sendMessage5
 24016   0033A4  EFA0  F019         	goto	l10623
 24017   0033A8                     l10641:
 24018                           
 24019                           ;../../VLCBlib_PIC/nv.c: 274:             nvDiagnostics[0x01].asUint++;
 24020   0033A8  0105               	movlb	5	; () banked
 24021   0033AA  4BBD               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 24022   0033AC  2BBE               	incf	(_nvDiagnostics+3)& (0+255),f,b
 24023   0033AE                     
 24024                           ; BSR set to: 5
 24025                           ;../../VLCBlib_PIC/nv.c: 276:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 24026   0033AE  C590  F526         	movff	_nn+1,sendMessage4@data1
 24027   0033B2  C58F  F527         	movff	_nn,sendMessage4@data2
 24028   0033B6  EE20 F004          	lfsr	2,4
 24029   0033BA  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24030   0033BC  26D9               	addwf	fsr2l,f,c
 24031   0033BE  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24032   0033C0  22DA               	addwfc	fsr2h,f,c
 24033   0033C2  50DF               	movf	indf2,w,c
 24034   0033C4  6E28               	movwf	sendMessage4@data3^(0+1280),c
 24035   0033C6  C558  F529         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 24036   0033CA  0E97               	movlw	151
 24037   0033CC  EC42  F040         	call	_sendMessage4
 24038   0033D0                     
 24039                           ;../../VLCBlib_PIC/nv.c: 278:             if (((mode_flags & 8) == 0) && (m->bytes[2] ==
      +                           0)) {
 24040   0033D0  0105               	movlb	5	; () banked
 24041   0033D2  B7A4               	btfsc	_mode_flags& (0+255),3,b
 24042   0033D4  EFEE  F019         	goto	u8091
 24043   0033D8  EFF0  F019         	goto	u8090
 24044   0033DC                     u8091:
 24045   0033DC  EFA3  F019         	goto	l10625
 24046   0033E0                     u8090:
 24047   0033E0                     
 24048                           ; BSR set to: 5
 24049   0033E0  EE20 F004          	lfsr	2,4
 24050   0033E4  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24051   0033E6  26D9               	addwf	fsr2l,f,c
 24052   0033E8  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24053   0033EA  22DA               	addwfc	fsr2h,f,c
 24054   0033EC  50DF               	movf	indf2,w,c
 24055   0033EE  A4D8               	btfss	status,2,c
 24056   0033F0  EFFC  F019         	goto	u8101
 24057   0033F4  EFFE  F019         	goto	u8100
 24058   0033F8                     u8101:
 24059   0033F8  EFA3  F019         	goto	l10625
 24060   0033FC                     u8100:
 24061   0033FC                     
 24062                           ; BSR set to: 5
 24063                           ;../../VLCBlib_PIC/nv.c: 280:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 24064   0033FC  0E02               	movlw	2
 24065   0033FE  ECF1  F036         	call	_findServiceIndex
 24066   003402  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 24067   003404  0E02               	movlw	low _nvTRnvrdCallback
 24068   003406  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 24069   003408  0E7A               	movlw	high _nvTRnvrdCallback
 24070   00340A  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 24071   00340C  0E06               	movlw	6
 24072   00340E  ECA7  F03C         	call	_startTimedResponse
 24073   003412  EFA3  F019         	goto	l10625
 24074   003416                     l10655:
 24075                           
 24076                           ; BSR set to: 5
 24077                           ;../../VLCBlib_PIC/nv.c: 284:             if (m->len < 5) {
 24078   003416  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 24079   00341A  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 24080   00341E  0E05               	movlw	5
 24081   003420  60DF               	cpfslt	indf2,c
 24082   003422  EF15  F01A         	goto	u8111
 24083   003426  EF17  F01A         	goto	u8110
 24084   00342A                     u8111:
 24085   00342A  EF26  F01A         	goto	l10665
 24086   00342E                     u8110:
 24087   00342E                     
 24088                           ; BSR set to: 5
 24089                           ;../../VLCBlib_PIC/nv.c: 287:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24090   00342E  C590  F526         	movff	_nn+1,sendMessage5@data1
 24091   003432  C58F  F527         	movff	_nn,sendMessage5@data2
 24092   003436  0E96               	movlw	150
 24093   003438  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24094   00343A  0E01               	movlw	1
 24095   00343C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24096   00343E  0E01               	movlw	1
 24097   003440  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24098   003442  0EAF               	movlw	175
 24099   003444  EC96  F040         	call	_sendMessage5
 24100   003448  EFA0  F019         	goto	l10623
 24101   00344C                     l10665:
 24102                           
 24103                           ; BSR set to: 5
 24104                           ;../../VLCBlib_PIC/nv.c: 294:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 24105   00344C  EE20 F005          	lfsr	2,5
 24106   003450  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24107   003452  26D9               	addwf	fsr2l,f,c
 24108   003454  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24109   003456  22DA               	addwfc	fsr2h,f,c
 24110   003458  50DF               	movf	indf2,w,c
 24111   00345A  6E15               	movwf	setNV@value^(0+1280),c
 24112   00345C  EE20 F004          	lfsr	2,4
 24113   003460  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24114   003462  26D9               	addwf	fsr2l,f,c
 24115   003464  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24116   003466  22DA               	addwfc	fsr2h,f,c
 24117   003468  50DF               	movf	indf2,w,c
 24118   00346A  ECAA  F036         	call	_setNV
 24119   00346E  6E56               	movwf	??_nvProcessMessage^(0+1280),c
 24120   003470  5056               	movf	??_nvProcessMessage^(0+1280),w,c
 24121   003472  6E58               	movwf	nvProcessMessage@valueOrError^(0+1280),c
 24122   003474  6A59               	clrf	(nvProcessMessage@valueOrError+1)^(0+1280),c
 24123   003476                     
 24124                           ;../../VLCBlib_PIC/nv.c: 295:             if (valueOrError >0) {
 24125   003476  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 24126   003478  EF46  F01A         	goto	u8121
 24127   00347C  5059               	movf	(nvProcessMessage@valueOrError+1)^(0+1280),w,c
 24128   00347E  E108               	bnz	u8120
 24129   003480  0458               	decf	nvProcessMessage@valueOrError^(0+1280),w,c
 24130   003482  A0D8               	btfss	status,0,c
 24131   003484  EF46  F01A         	goto	u8121
 24132   003488  EF48  F01A         	goto	u8120
 24133   00348C                     u8121:
 24134   00348C  EF53  F01A         	goto	l10677
 24135   003490                     u8120:
 24136   003490                     
 24137                           ;../../VLCBlib_PIC/nv.c: 296:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 24138   003490  C590  F526         	movff	_nn+1,sendMessage3@data1
 24139   003494  C58F  F527         	movff	_nn,sendMessage3@data2
 24140   003498  C558  F528         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 24141   00349C  0E6F               	movlw	111
 24142   00349E  EC57  F040         	call	_sendMessage3
 24143   0034A2  EFA0  F019         	goto	l10623
 24144   0034A6                     l10677:
 24145                           
 24146                           ;../../VLCBlib_PIC/nv.c: 303:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 24147   0034A6  C590  F526         	movff	_nn+1,sendMessage2@data1
 24148   0034AA  C58F  F527         	movff	_nn,sendMessage2@data2
 24149   0034AE  0E59               	movlw	89
 24150   0034B0  EC6C  F040         	call	_sendMessage2
 24151                           
 24152                           ;../../VLCBlib_PIC/nv.c: 305:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 24153   0034B4  C590  F526         	movff	_nn+1,sendMessage5@data1
 24154   0034B8  C58F  F527         	movff	_nn,sendMessage5@data2
 24155   0034BC  0E96               	movlw	150
 24156   0034BE  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24157   0034C0  0E01               	movlw	1
 24158   0034C2  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24159   0034C4  0E00               	movlw	0
 24160   0034C6  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24161   0034C8  0EAF               	movlw	175
 24162   0034CA  EC96  F040         	call	_sendMessage5
 24163   0034CE  EFA3  F019         	goto	l10625
 24164   0034D2                     l10683:
 24165                           
 24166                           ; BSR set to: 5
 24167                           ;../../VLCBlib_PIC/nv.c: 310:             if (m->len < 5) {
 24168   0034D2  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 24169   0034D6  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 24170   0034DA  0E05               	movlw	5
 24171   0034DC  60DF               	cpfslt	indf2,c
 24172   0034DE  EF73  F01A         	goto	u8131
 24173   0034E2  EF75  F01A         	goto	u8130
 24174   0034E6                     u8131:
 24175   0034E6  EF84  F01A         	goto	l10693
 24176   0034EA                     u8130:
 24177   0034EA                     
 24178                           ; BSR set to: 5
 24179                           ;../../VLCBlib_PIC/nv.c: 312:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24180   0034EA  C590  F526         	movff	_nn+1,sendMessage5@data1
 24181   0034EE  C58F  F527         	movff	_nn,sendMessage5@data2
 24182   0034F2  0E8E               	movlw	142
 24183   0034F4  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24184   0034F6  0E01               	movlw	1
 24185   0034F8  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24186   0034FA  0E01               	movlw	1
 24187   0034FC  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24188   0034FE  0EAF               	movlw	175
 24189   003500  EC96  F040         	call	_sendMessage5
 24190   003504  EFA0  F019         	goto	l10623
 24191   003508                     l10693:
 24192                           
 24193                           ; BSR set to: 5
 24194                           ;../../VLCBlib_PIC/nv.c: 318:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 24195   003508  EE20 F005          	lfsr	2,5
 24196   00350C  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24197   00350E  26D9               	addwf	fsr2l,f,c
 24198   003510  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24199   003512  22DA               	addwfc	fsr2h,f,c
 24200   003514  50DF               	movf	indf2,w,c
 24201   003516  6E15               	movwf	setNV@value^(0+1280),c
 24202   003518  EE20 F004          	lfsr	2,4
 24203   00351C  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24204   00351E  26D9               	addwf	fsr2l,f,c
 24205   003520  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24206   003522  22DA               	addwfc	fsr2h,f,c
 24207   003524  50DF               	movf	indf2,w,c
 24208   003526  ECAA  F036         	call	_setNV
 24209   00352A  6E56               	movwf	??_nvProcessMessage^(0+1280),c
 24210   00352C  5056               	movf	??_nvProcessMessage^(0+1280),w,c
 24211   00352E  6E58               	movwf	nvProcessMessage@valueOrError^(0+1280),c
 24212   003530  6A59               	clrf	(nvProcessMessage@valueOrError+1)^(0+1280),c
 24213   003532                     
 24214                           ;../../VLCBlib_PIC/nv.c: 319:             if (valueOrError >0) {
 24215   003532  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 24216   003534  EFA4  F01A         	goto	u8141
 24217   003538  5059               	movf	(nvProcessMessage@valueOrError+1)^(0+1280),w,c
 24218   00353A  E108               	bnz	u8140
 24219   00353C  0458               	decf	nvProcessMessage@valueOrError^(0+1280),w,c
 24220   00353E  A0D8               	btfss	status,0,c
 24221   003540  EFA4  F01A         	goto	u8141
 24222   003544  EFA6  F01A         	goto	u8140
 24223   003548                     u8141:
 24224   003548  EFBE  F01A         	goto	l10705
 24225   00354C                     u8140:
 24226   00354C                     
 24227                           ;../../VLCBlib_PIC/nv.c: 320:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 24228   00354C  C590  F526         	movff	_nn+1,sendMessage3@data1
 24229   003550  C58F  F527         	movff	_nn,sendMessage3@data2
 24230   003554  C558  F528         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 24231   003558  0E6F               	movlw	111
 24232   00355A  EC57  F040         	call	_sendMessage3
 24233                           
 24234                           ;../../VLCBlib_PIC/nv.c: 321:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 24235   00355E  C590  F526         	movff	_nn+1,sendMessage5@data1
 24236   003562  C58F  F527         	movff	_nn,sendMessage5@data2
 24237   003566  0E8E               	movlw	142
 24238   003568  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24239   00356A  0E01               	movlw	1
 24240   00356C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24241   00356E  C558  F52A         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 24242   003572  0EAF               	movlw	175
 24243   003574  EC96  F040         	call	_sendMessage5
 24244   003578  EFA0  F019         	goto	l10623
 24245   00357C                     l10705:
 24246                           
 24247                           ;../../VLCBlib_PIC/nv.c: 327:             valueOrError = getNV(m->bytes[2]);
 24248   00357C  EE20 F004          	lfsr	2,4
 24249   003580  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24250   003582  26D9               	addwf	fsr2l,f,c
 24251   003584  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24252   003586  22DA               	addwfc	fsr2h,f,c
 24253   003588  50DF               	movf	indf2,w,c
 24254   00358A  EC56  F03D         	call	_getNV
 24255   00358E  C501  F558         	movff	?_getNV,nvProcessMessage@valueOrError
 24256   003592  C502  F559         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 24257   003596                     
 24258                           ;../../VLCBlib_PIC/nv.c: 328:             if (valueOrError < 0) {
 24259   003596  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 24260   003598  EFD2  F01A         	goto	u8150
 24261   00359C  EFD0  F01A         	goto	u8151
 24262   0035A0                     u8151:
 24263   0035A0  EFEC  F01A         	goto	l10717
 24264   0035A4                     u8150:
 24265   0035A4                     
 24266                           ;../../VLCBlib_PIC/nv.c: 329:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 24267   0035A4  C590  F526         	movff	_nn+1,sendMessage3@data1
 24268   0035A8  C58F  F527         	movff	_nn,sendMessage3@data2
 24269   0035AC  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 24270   0035AE  0800               	sublw	0
 24271   0035B0  6E28               	movwf	sendMessage3@data3^(0+1280),c
 24272   0035B2  0E6F               	movlw	111
 24273   0035B4  EC57  F040         	call	_sendMessage3
 24274                           
 24275                           ;../../VLCBlib_PIC/nv.c: 330:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 24276   0035B8  C590  F526         	movff	_nn+1,sendMessage5@data1
 24277   0035BC  C58F  F527         	movff	_nn,sendMessage5@data2
 24278   0035C0  0E8E               	movlw	142
 24279   0035C2  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24280   0035C4  0E01               	movlw	1
 24281   0035C6  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24282   0035C8  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 24283   0035CA  0800               	sublw	0
 24284   0035CC  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24285   0035CE  0EAF               	movlw	175
 24286   0035D0  EC96  F040         	call	_sendMessage5
 24287   0035D4  EFA0  F019         	goto	l10623
 24288   0035D8                     l10717:
 24289                           
 24290                           ;../../VLCBlib_PIC/nv.c: 336:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 24291   0035D8  C590  F526         	movff	_nn+1,sendMessage4@data1
 24292   0035DC  C58F  F527         	movff	_nn,sendMessage4@data2
 24293   0035E0  EE20 F004          	lfsr	2,4
 24294   0035E4  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24295   0035E6  26D9               	addwf	fsr2l,f,c
 24296   0035E8  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24297   0035EA  22DA               	addwfc	fsr2h,f,c
 24298   0035EC  50DF               	movf	indf2,w,c
 24299   0035EE  6E28               	movwf	sendMessage4@data3^(0+1280),c
 24300   0035F0  C558  F529         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 24301   0035F4  0E97               	movlw	151
 24302   0035F6  EC42  F040         	call	_sendMessage4
 24303   0035FA                     
 24304                           ;../../VLCBlib_PIC/nv.c: 338:             nvDiagnostics[0x01].asUint++;
 24305   0035FA  0105               	movlb	5	; () banked
 24306   0035FC  4BBD               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 24307   0035FE  2BBE               	incf	(_nvDiagnostics+3)& (0+255),f,b
 24308   003600  EFA3  F019         	goto	l10625
 24309   003604                     l10731:
 24310                           
 24311                           ; BSR set to: 5
 24312   003604  EE20 F001          	lfsr	2,1
 24313   003608  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24314   00360A  26D9               	addwf	fsr2l,f,c
 24315   00360C  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24316   00360E  22DA               	addwfc	fsr2h,f,c
 24317   003610  50DF               	movf	indf2,w,c
 24318   003612  6E56               	movwf	??_nvProcessMessage^(0+1280),c
 24319   003614  6A57               	clrf	(??_nvProcessMessage+1)^(0+1280),c
 24320                           
 24321                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24322                           ; Switch size 1, requested type "simple"
 24323                           ; Number of cases is 1, Range of values is 0 to 0
 24324                           ; switch strategies available:
 24325                           ; Name         Instructions Cycles
 24326                           ; simple_byte            4     3 (average)
 24327                           ;	Chosen strategy is simple_byte
 24328   003616  5057               	movf	(??_nvProcessMessage+1)^(0+1280),w,c
 24329   003618  0A00               	xorlw	0	; case 0
 24330   00361A  B4D8               	btfsc	status,2,c
 24331   00361C  EF12  F01B         	goto	l11615
 24332   003620  EF58  F019         	goto	l10603
 24333   003624                     l11615:
 24334                           
 24335                           ; BSR set to: 5
 24336                           ; Switch size 1, requested type "simple"
 24337                           ; Number of cases is 3, Range of values is 113 to 150
 24338                           ; switch strategies available:
 24339                           ; Name         Instructions Cycles
 24340                           ; simple_byte           10     6 (average)
 24341                           ;	Chosen strategy is simple_byte
 24342   003624  5056               	movf	??_nvProcessMessage^(0+1280),w,c
 24343   003626  0A71               	xorlw	113	; case 113
 24344   003628  B4D8               	btfsc	status,2,c
 24345   00362A  EF7E  F019         	goto	l10619
 24346   00362E  0AFF               	xorlw	255	; case 142
 24347   003630  B4D8               	btfsc	status,2,c
 24348   003632  EF69  F01A         	goto	l10683
 24349   003636  0A18               	xorlw	24	; case 150
 24350   003638  B4D8               	btfsc	status,2,c
 24351   00363A  EF0B  F01A         	goto	l10655
 24352   00363E  EF58  F019         	goto	l10603
 24353   003642                     l1545:
 24354   003642  0012               	return		;funcret
 24355   003644                     __end_of_nvProcessMessage:
 24356                           	callstack 0
 24357                           
 24358 ;; *************** function _mnsProcessMessage *****************
 24359 ;; Defined at:
 24360 ;;		line 358 in file "../../VLCBlib_PIC/mns.c"
 24361 ;; Parameters:    Size  Location     Type
 24362 ;;  m               2   83[COMRAM] PTR struct Message
 24363 ;;		 -> poll@m(9), 
 24364 ;; Auto vars:     Size  Location     Type
 24365 ;;  d               2   87[COMRAM] PTR struct DiagnosticVal
 24366 ;;		 -> nvDiagnostics(6), mnsDiagnostics(14), teachDiagnostics(4), consumerDiagnostics(6), 
 24367 ;;		 -> canDiagnostics(38), NULL(0), 
 24368 ;;  newMode         1   89[COMRAM] unsigned char 
 24369 ;;  i               1   85[COMRAM] unsigned char 
 24370 ;;  flags           1    0        unsigned char 
 24371 ;; Return value:  Size  Location     Type
 24372 ;;                  1    wreg      enum E23340
 24373 ;; Registers used:
 24374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24375 ;; Tracked objects:
 24376 ;;		On entry : 0/0
 24377 ;;		On exit  : 0/0
 24378 ;;		Unchanged: 0/0
 24379 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 24380 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24381 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24382 ;;      Temps:          0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24383 ;;      Totals:         7      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24384 ;;Total ram usage:       37 bytes
 24385 ;; Hardware stack levels used: 1
 24386 ;; Hardware stack levels required when called: 6
 24387 ;; This function calls:
 24388 ;;		NULL
 24389 ;;		_bootEsdData
 24390 ;;		_canEsdData
 24391 ;;		_canGetDiagnostic
 24392 ;;		_canWaitForTxQueueToDrain
 24393 ;;		_consumerEsdData
 24394 ;;		_consumerGetDiagnostic
 24395 ;;		_findServiceIndex
 24396 ;;		_getParameter
 24397 ;;		_getParameterFlags
 24398 ;;		_mnsGetDiagnostic
 24399 ;;		_nvGetDiagnostic
 24400 ;;		_nvGetESDdata
 24401 ;;		_rebuildHashtable
 24402 ;;		_sendMessage2
 24403 ;;		_sendMessage3
 24404 ;;		_sendMessage4
 24405 ;;		_sendMessage5
 24406 ;;		_sendMessage6
 24407 ;;		_sendMessage7
 24408 ;;		_setLEDsByMode
 24409 ;;		_startTimedResponse
 24410 ;;		_teachGetDiagnostic
 24411 ;;		_teachGetESDdata
 24412 ;;		_writeNVM
 24413 ;; This function is called by:
 24414 ;;		_poll
 24415 ;; This function uses a non-reentrant model
 24416 ;;
 24417                           
 24418                           	psect	text18
 24419   000A06                     __ptext18:
 24420                           	callstack 0
 24421   000A06                     _mnsProcessMessage:
 24422                           	callstack 119
 24423   000A06                     
 24424                           ;../../VLCBlib_PIC/mns.c: 359:     uint8_t i;;../../VLCBlib_PIC/mns.c: 360:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 362:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 367: 
      +                              if (mode_state == MODE_SETUP) {
 24425   000A06  0105               	movlb	5	; () banked
 24426   000A08  51A1               	movf	_mode_state& (0+255),w,b
 24427   000A0A  A4D8               	btfss	status,2,c
 24428   000A0C  EF0A  F005         	goto	u7471
 24429   000A10  EF0C  F005         	goto	u7470
 24430   000A14                     u7471:
 24431   000A14  EF62  F006         	goto	l10209
 24432   000A18                     u7470:
 24433   000A18  EFCA  F005         	goto	l10153
 24434   000A1C                     l10109:
 24435                           
 24436                           ; BSR set to: 5
 24437                           ;../../VLCBlib_PIC/mns.c: 370:                 if (m->len < 3) {
 24438   000A1C  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24439   000A20  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24440   000A24  0E03               	movlw	3
 24441   000A26  60DF               	cpfslt	indf2,c
 24442   000A28  EF18  F005         	goto	u7481
 24443   000A2C  EF1A  F005         	goto	u7480
 24444   000A30                     u7481:
 24445   000A30  EF29  F005         	goto	l10113
 24446   000A34                     u7480:
 24447   000A34                     
 24448                           ; BSR set to: 5
 24449                           ;../../VLCBlib_PIC/mns.c: 372:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_SNN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24450   000A34  C590  F526         	movff	_nn+1,sendMessage5@data1
 24451   000A38  C58F  F527         	movff	_nn,sendMessage5@data2
 24452   000A3C  0E42               	movlw	66
 24453   000A3E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24454   000A40  0E01               	movlw	1
 24455   000A42  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24456   000A44  0E01               	movlw	1
 24457   000A46  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24458   000A48  0EAF               	movlw	175
 24459   000A4A  EC96  F040         	call	_sendMessage5
 24460                           
 24461                           ;../../VLCBlib_PIC/mns.c: 374:                 } else {
 24462   000A4E  EF60  F005         	goto	l10129
 24463   000A52                     l10113:
 24464                           
 24465                           ; BSR set to: 5
 24466                           ;../../VLCBlib_PIC/mns.c: 375:                     nn.bytes.hi = m->bytes[0];
 24467   000A52  EE20 F002          	lfsr	2,2
 24468   000A56  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24469   000A58  26D9               	addwf	fsr2l,f,c
 24470   000A5A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24471   000A5C  22DA               	addwfc	fsr2h,f,c
 24472   000A5E  50DF               	movf	indf2,w,c
 24473   000A60  6F90               	movwf	(_nn+1)& (0+255),b
 24474                           
 24475                           ;../../VLCBlib_PIC/mns.c: 376:                     nn.bytes.lo = m->bytes[1];
 24476   000A62  EE20 F003          	lfsr	2,3
 24477   000A66  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24478   000A68  26D9               	addwf	fsr2l,f,c
 24479   000A6A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24480   000A6C  22DA               	addwfc	fsr2h,f,c
 24481   000A6E  50DF               	movf	indf2,w,c
 24482   000A70  6F8F               	movwf	_nn& (0+255),b
 24483   000A72                     
 24484                           ; BSR set to: 5
 24485                           ;../../VLCBlib_PIC/mns.c: 377:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.hi);
 24486   000A72  0EFD               	movlw	253
 24487   000A74  6E0E               	movwf	writeNVM@index^(0+1280),c
 24488   000A76  0E03               	movlw	3
 24489   000A78  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 24490   000A7A  0E00               	movlw	0
 24491   000A7C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 24492   000A7E  C590  F511         	movff	_nn+1,writeNVM@value
 24493   000A82  0E00               	movlw	0
 24494   000A84  EC47  F03C         	call	_writeNVM
 24495   000A88                     
 24496                           ;../../VLCBlib_PIC/mns.c: 378:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.lo);
 24497   000A88  0EFC               	movlw	252
 24498   000A8A  6E0E               	movwf	writeNVM@index^(0+1280),c
 24499   000A8C  0E03               	movlw	3
 24500   000A8E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 24501   000A90  0E00               	movlw	0
 24502   000A92  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 24503   000A94  C58F  F511         	movff	_nn,writeNVM@value
 24504   000A98  0E00               	movlw	0
 24505   000A9A  EC47  F03C         	call	_writeNVM
 24506   000A9E                     
 24507                           ;../../VLCBlib_PIC/mns.c: 380:                     mode_state = MODE_NORMAL;
 24508   000A9E  0E01               	movlw	1
 24509   000AA0  0105               	movlb	5	; () banked
 24510   000AA2  6FA1               	movwf	_mode_state& (0+255),b
 24511   000AA4                     
 24512                           ; BSR set to: 5
 24513                           ;../../VLCBlib_PIC/mns.c: 383:                     rebuildHashtable();
 24514   000AA4  EC98  F02B         	call	_rebuildHashtable	;wreg free
 24515   000AA8                     
 24516                           ;../../VLCBlib_PIC/mns.c: 386:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 24517   000AA8  C590  F526         	movff	_nn+1,sendMessage2@data1
 24518   000AAC  C58F  F527         	movff	_nn,sendMessage2@data2
 24519   000AB0  0E52               	movlw	82
 24520   000AB2  EC6C  F040         	call	_sendMessage2
 24521   000AB6                     
 24522                           ;../../VLCBlib_PIC/mns.c: 388:                     mnsDiagnostics[0x05].asUint++;
 24523   000AB6  0105               	movlb	5	; () banked
 24524   000AB8  4BB7               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 24525   000ABA  2BB8               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 24526   000ABC                     l10127:
 24527                           
 24528                           ; BSR set to: 5
 24529                           ;../../VLCBlib_PIC/mns.c: 391:                     setLEDsByMode();
 24530   000ABC  EC3E  F03E         	call	_setLEDsByMode	;wreg free
 24531   000AC0                     l10129:
 24532                           
 24533                           ;../../VLCBlib_PIC/mns.c: 393:                 return PROCESSED;
 24534   000AC0  0E01               	movlw	1
 24535   000AC2  EF7B  F00B         	goto	l1291
 24536   000AC6                     l10133:
 24537                           
 24538                           ; BSR set to: 5
 24539                           ;../../VLCBlib_PIC/mns.c: 395:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'a',
 24540   000AC6  0EA5               	movlw	165
 24541   000AC8  6E26               	movwf	sendMessage7@data1^(0+1280),c
 24542   000ACA  0E61               	movlw	97
 24543   000ACC  6E27               	movwf	sendMessage7@data2^(0+1280),c
 24544   000ACE  0EFC               	movlw	252
 24545   000AD0  6E28               	movwf	sendMessage7@data3^(0+1280),c
 24546   000AD2  0EFF               	movlw	255
 24547   000AD4  6E29               	movwf	sendMessage7@data4^(0+1280),c
 24548   000AD6  0EFC               	movlw	252
 24549   000AD8  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 24550   000ADA  0E31               	movlw	49
 24551   000ADC  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 24552   000ADE  0E01               	movlw	1
 24553   000AE0  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 24554   000AE2  0EEF               	movlw	239
 24555   000AE4  EC81  F040         	call	_sendMessage7
 24556   000AE8  EF60  F005         	goto	l10129
 24557   000AEC                     l10139:
 24558                           
 24559                           ; BSR set to: 5
 24560                           ;../../VLCBlib_PIC/mns.c: 400:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 24561   000AEC  0E48               	movlw	72
 24562   000AEE  6EF6               	movwf	tblptrl,c
 24563   000AF0                     	if	1	;There is more than 1 active tblptr byte
 24564   000AF0  0E08               	movlw	8
 24565   000AF2  6EF7               	movwf	tblptrh,c
 24566   000AF4                     	endif
 24567   000AF4                     	if	1	;There are 3 active tblptr bytes
 24568   000AF4  0E00               	movlw	0
 24569   000AF6  6EF8               	movwf	tblptru,c
 24570   000AF8                     	endif
 24571   000AF8  0008               	tblrd		*
 24572   000AFA  C4F5 F526          	movff	tablat,sendMessage7@data1
 24573   000AFE  0E49               	movlw	73
 24574   000B00  6EF6               	movwf	tblptrl,c
 24575   000B02  0E08               	movlw	8
 24576   000B04  6EF7               	movwf	tblptrh,c
 24577   000B06  0E00               	movlw	0
 24578   000B08  6EF8               	movwf	tblptru,c
 24579   000B0A  0008               	tblrd		*
 24580   000B0C  C4F5 F527          	movff	tablat,sendMessage7@data2
 24581   000B10  0E4A               	movlw	74
 24582   000B12  6EF6               	movwf	tblptrl,c
 24583   000B14  0E08               	movlw	8
 24584   000B16  6EF7               	movwf	tblptrh,c
 24585   000B18  0E00               	movlw	0
 24586   000B1A  6EF8               	movwf	tblptru,c
 24587   000B1C  0008               	tblrd		*
 24588   000B1E  C4F5 F528          	movff	tablat,sendMessage7@data3
 24589   000B22  0E4B               	movlw	75
 24590   000B24  6EF6               	movwf	tblptrl,c
 24591   000B26  0E08               	movlw	8
 24592   000B28  6EF7               	movwf	tblptrh,c
 24593   000B2A  0E00               	movlw	0
 24594   000B2C  6EF8               	movwf	tblptru,c
 24595   000B2E  0008               	tblrd		*
 24596   000B30  C4F5 F529          	movff	tablat,sendMessage7@data4
 24597   000B34  0E4C               	movlw	76
 24598   000B36  6EF6               	movwf	tblptrl,c
 24599   000B38  0E08               	movlw	8
 24600   000B3A  6EF7               	movwf	tblptrh,c
 24601   000B3C  0E00               	movlw	0
 24602   000B3E  6EF8               	movwf	tblptru,c
 24603   000B40  0008               	tblrd		*
 24604   000B42  C4F5 F52A          	movff	tablat,sendMessage7@data5
 24605   000B46  0E4D               	movlw	77
 24606   000B48  6EF6               	movwf	tblptrl,c
 24607   000B4A  0E08               	movlw	8
 24608   000B4C  6EF7               	movwf	tblptrh,c
 24609   000B4E  0E00               	movlw	0
 24610   000B50  6EF8               	movwf	tblptru,c
 24611   000B52  0008               	tblrd		*
 24612   000B54  C4F5 F52B          	movff	tablat,sendMessage7@data6
 24613   000B58  0E4E               	movlw	78
 24614   000B5A  6EF6               	movwf	tblptrl,c
 24615   000B5C  0E08               	movlw	8
 24616   000B5E  6EF7               	movwf	tblptrh,c
 24617   000B60  0E00               	movlw	0
 24618   000B62  6EF8               	movwf	tblptru,c
 24619   000B64  0008               	tblrd		*
 24620   000B66  C4F5 F52C          	movff	tablat,sendMessage7@data7
 24621   000B6A  0EE2               	movlw	226
 24622   000B6C  EC81  F040         	call	_sendMessage7
 24623   000B70  EF60  F005         	goto	l10129
 24624   000B74                     l10145:
 24625                           
 24626                           ; BSR set to: 5
 24627                           ;../../VLCBlib_PIC/mns.c: 404:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_VLCB, getParameterFlags());
 24628   000B74  0E00               	movlw	0
 24629   000B76  6E26               	movwf	sendMessage5@data1^(0+1280),c
 24630   000B78  0E00               	movlw	0
 24631   000B7A  6E27               	movwf	sendMessage5@data2^(0+1280),c
 24632   000B7C  0EA5               	movlw	165
 24633   000B7E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24634   000B80  0EFC               	movlw	252
 24635   000B82  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24636   000B84  EC7D  F037         	call	_getParameterFlags	;wreg free
 24637   000B88  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24638   000B8A  0EB6               	movlw	182
 24639   000B8C  EC96  F040         	call	_sendMessage5
 24640   000B90  EF60  F005         	goto	l10129
 24641   000B94                     l10153:
 24642                           
 24643                           ; BSR set to: 5
 24644   000B94  EE20 F001          	lfsr	2,1
 24645   000B98  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24646   000B9A  26D9               	addwf	fsr2l,f,c
 24647   000B9C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24648   000B9E  22DA               	addwfc	fsr2h,f,c
 24649   000BA0  50DF               	movf	indf2,w,c
 24650   000BA2  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 24651   000BA4  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 24652                           
 24653                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24654                           ; Switch size 1, requested type "simple"
 24655                           ; Number of cases is 1, Range of values is 0 to 0
 24656                           ; switch strategies available:
 24657                           ; Name         Instructions Cycles
 24658                           ; simple_byte            4     3 (average)
 24659                           ;	Chosen strategy is simple_byte
 24660   000BA6  51D1               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 24661   000BA8  0A00               	xorlw	0	; case 0
 24662   000BAA  B4D8               	btfsc	status,2,c
 24663   000BAC  EFDA  F005         	goto	l11617
 24664   000BB0  EFED  F005         	goto	l10155
 24665   000BB4                     l11617:
 24666                           
 24667                           ; BSR set to: 5
 24668                           ; Switch size 1, requested type "simple"
 24669                           ; Number of cases is 4, Range of values is 13 to 66
 24670                           ; switch strategies available:
 24671                           ; Name         Instructions Cycles
 24672                           ; simple_byte           13     7 (average)
 24673                           ;	Chosen strategy is simple_byte
 24674   000BB4  51D0               	movf	??_mnsProcessMessage& (0+255),w,b
 24675   000BB6  0A0D               	xorlw	13	; case 13
 24676   000BB8  B4D8               	btfsc	status,2,c
 24677   000BBA  EFBA  F005         	goto	l10145
 24678   000BBE  0A1D               	xorlw	29	; case 16
 24679   000BC0  B4D8               	btfsc	status,2,c
 24680   000BC2  EF63  F005         	goto	l10133
 24681   000BC6  0A01               	xorlw	1	; case 17
 24682   000BC8  B4D8               	btfsc	status,2,c
 24683   000BCA  EF76  F005         	goto	l10139
 24684   000BCE  0A53               	xorlw	83	; case 66
 24685   000BD0  B4D8               	btfsc	status,2,c
 24686   000BD2  EF0E  F005         	goto	l10109
 24687   000BD6  EFED  F005         	goto	l10155
 24688   000BDA                     l10155:
 24689                           
 24690                           ; BSR set to: 5
 24691                           ;../../VLCBlib_PIC/mns.c: 409:         return NOT_PROCESSED;
 24692   000BDA  0E00               	movlw	0
 24693   000BDC  EF7B  F00B         	goto	l1291
 24694   000BE0                     l10159:
 24695                           
 24696                           ; BSR set to: 5
 24697                           ;../../VLCBlib_PIC/mns.c: 414:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_VLCB, getParameterFlags());
 24698   000BE0  C590  F526         	movff	_nn+1,sendMessage5@data1
 24699   000BE4  C58F  F527         	movff	_nn,sendMessage5@data2
 24700   000BE8  0EA5               	movlw	165
 24701   000BEA  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24702   000BEC  0EFC               	movlw	252
 24703   000BEE  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24704   000BF0  EC7D  F037         	call	_getParameterFlags	;wreg free
 24705   000BF4  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24706   000BF6  0EB6               	movlw	182
 24707   000BF8  EC96  F040         	call	_sendMessage5
 24708   000BFC  EF60  F005         	goto	l10129
 24709   000C00                     l10165:
 24710                           
 24711                           ; BSR set to: 5
 24712                           ;../../VLCBlib_PIC/mns.c: 418:             if (m->len < 4) {
 24713   000C00  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24714   000C04  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24715   000C08  0E04               	movlw	4
 24716   000C0A  60DF               	cpfslt	indf2,c
 24717   000C0C  EF0A  F006         	goto	u7491
 24718   000C10  EF0C  F006         	goto	u7490
 24719   000C14                     u7491:
 24720   000C14  EF1B  F006         	goto	l10173
 24721   000C18                     u7490:
 24722   000C18                     
 24723                           ; BSR set to: 5
 24724                           ;../../VLCBlib_PIC/mns.c: 419:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24725   000C18  C590  F526         	movff	_nn+1,sendMessage5@data1
 24726   000C1C  C58F  F527         	movff	_nn,sendMessage5@data2
 24727   000C20  0E76               	movlw	118
 24728   000C22  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24729   000C24  0E01               	movlw	1
 24730   000C26  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24731   000C28  0E01               	movlw	1
 24732   000C2A  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24733   000C2C  0EAF               	movlw	175
 24734   000C2E  EC96  F040         	call	_sendMessage5
 24735   000C32  EF60  F005         	goto	l10129
 24736   000C36                     l10173:
 24737                           
 24738                           ; BSR set to: 5
 24739                           ;../../VLCBlib_PIC/mns.c: 422:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 24740   000C36  EE20 F002          	lfsr	2,2
 24741   000C3A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24742   000C3C  26D9               	addwf	fsr2l,f,c
 24743   000C3E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24744   000C40  22DA               	addwfc	fsr2h,f,c
 24745   000C42  50DF               	movf	indf2,w,c
 24746   000C44  A4D8               	btfss	status,2,c
 24747   000C46  EF27  F006         	goto	u7501
 24748   000C4A  EF29  F006         	goto	u7500
 24749   000C4E                     u7501:
 24750   000C4E  EF7D  F006         	goto	l10211
 24751   000C52                     u7500:
 24752   000C52                     
 24753                           ; BSR set to: 5
 24754   000C52  EE20 F003          	lfsr	2,3
 24755   000C56  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24756   000C58  26D9               	addwf	fsr2l,f,c
 24757   000C5A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24758   000C5C  22DA               	addwfc	fsr2h,f,c
 24759   000C5E  50DF               	movf	indf2,w,c
 24760   000C60  A4D8               	btfss	status,2,c
 24761   000C62  EF35  F006         	goto	u7511
 24762   000C66  EF37  F006         	goto	u7510
 24763   000C6A                     u7511:
 24764   000C6A  EF7D  F006         	goto	l10211
 24765   000C6E                     u7510:
 24766   000C6E                     
 24767                           ; BSR set to: 5
 24768                           ;../../VLCBlib_PIC/mns.c: 423:                 newMode = m->bytes[2];
 24769   000C6E  EE20 F004          	lfsr	2,4
 24770   000C72  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24771   000C74  26D9               	addwf	fsr2l,f,c
 24772   000C76  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24773   000C78  22DA               	addwfc	fsr2h,f,c
 24774   000C7A  50DF               	movf	indf2,w,c
 24775   000C7C  6E5A               	movwf	mnsProcessMessage@newMode^(0+1280),c
 24776                           
 24777                           ;../../VLCBlib_PIC/mns.c: 425:                 switch (newMode) {
 24778   000C7E  EF4D  F006         	goto	l10205
 24779   000C82                     l10179:
 24780                           
 24781                           ; BSR set to: 5
 24782                           ;../../VLCBlib_PIC/mns.c: 427:                         mode_flags |= 4;
 24783   000C82  85A4               	bsf	_mode_flags& (0+255),2,b
 24784   000C84  EF60  F005         	goto	l10129
 24785   000C88                     l10185:
 24786                           
 24787                           ; BSR set to: 5
 24788                           ;../../VLCBlib_PIC/mns.c: 430:                         mode_flags &= ~4;
 24789   000C88  95A4               	bcf	_mode_flags& (0+255),2,b
 24790   000C8A  EF60  F005         	goto	l10129
 24791   000C8E                     l10191:
 24792                           
 24793                           ; BSR set to: 5
 24794                           ;../../VLCBlib_PIC/mns.c: 433:                         mode_flags |= 8;
 24795   000C8E  87A4               	bsf	_mode_flags& (0+255),3,b
 24796   000C90  EF60  F005         	goto	l10129
 24797   000C94                     l10197:
 24798                           
 24799                           ; BSR set to: 5
 24800                           ;../../VLCBlib_PIC/mns.c: 436:                         mode_flags &= ~8;
 24801   000C94  97A4               	bcf	_mode_flags& (0+255),3,b
 24802   000C96  EF60  F005         	goto	l10129
 24803   000C9A                     l10205:
 24804                           
 24805                           ; BSR set to: 5
 24806   000C9A  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 24807                           
 24808                           ; Switch size 1, requested type "simple"
 24809                           ; Number of cases is 4, Range of values is 12 to 17
 24810                           ; switch strategies available:
 24811                           ; Name         Instructions Cycles
 24812                           ; simple_byte           13     7 (average)
 24813                           ;	Chosen strategy is simple_byte
 24814   000C9C  0A0C               	xorlw	12	; case 12
 24815   000C9E  B4D8               	btfsc	status,2,c
 24816   000CA0  EF41  F006         	goto	l10179
 24817   000CA4  0A01               	xorlw	1	; case 13
 24818   000CA6  B4D8               	btfsc	status,2,c
 24819   000CA8  EF44  F006         	goto	l10185
 24820   000CAC  0A1D               	xorlw	29	; case 16
 24821   000CAE  B4D8               	btfsc	status,2,c
 24822   000CB0  EF47  F006         	goto	l10191
 24823   000CB4  0A01               	xorlw	1	; case 17
 24824   000CB6  B4D8               	btfsc	status,2,c
 24825   000CB8  EF4A  F006         	goto	l10197
 24826   000CBC  EF60  F006         	goto	l1301
 24827   000CC0                     l1301:
 24828                           
 24829                           ; BSR set to: 5
 24830                           ;../../VLCBlib_PIC/mns.c: 442:             break;
 24831   000CC0  EF7D  F006         	goto	l10211
 24832   000CC4                     l10209:
 24833                           
 24834                           ; BSR set to: 5
 24835   000CC4  EE20 F001          	lfsr	2,1
 24836   000CC8  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24837   000CCA  26D9               	addwf	fsr2l,f,c
 24838   000CCC  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24839   000CCE  22DA               	addwfc	fsr2h,f,c
 24840   000CD0  50DF               	movf	indf2,w,c
 24841   000CD2  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 24842   000CD4  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 24843                           
 24844                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24845                           ; Switch size 1, requested type "simple"
 24846                           ; Number of cases is 1, Range of values is 0 to 0
 24847                           ; switch strategies available:
 24848                           ; Name         Instructions Cycles
 24849                           ; simple_byte            4     3 (average)
 24850                           ;	Chosen strategy is simple_byte
 24851   000CD6  51D1               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 24852   000CD8  0A00               	xorlw	0	; case 0
 24853   000CDA  B4D8               	btfsc	status,2,c
 24854   000CDC  EF72  F006         	goto	l11619
 24855   000CE0  EF7D  F006         	goto	l10211
 24856   000CE4                     l11619:
 24857                           
 24858                           ; BSR set to: 5
 24859                           ; Switch size 1, requested type "simple"
 24860                           ; Number of cases is 2, Range of values is 13 to 118
 24861                           ; switch strategies available:
 24862                           ; Name         Instructions Cycles
 24863                           ; simple_byte            7     4 (average)
 24864                           ;	Chosen strategy is simple_byte
 24865   000CE4  51D0               	movf	??_mnsProcessMessage& (0+255),w,b
 24866   000CE6  0A0D               	xorlw	13	; case 13
 24867   000CE8  B4D8               	btfsc	status,2,c
 24868   000CEA  EFF0  F005         	goto	l10159
 24869   000CEE  0A7B               	xorlw	123	; case 118
 24870   000CF0  B4D8               	btfsc	status,2,c
 24871   000CF2  EF00  F006         	goto	l10165
 24872   000CF6  EF7D  F006         	goto	l10211
 24873   000CFA                     l10211:
 24874                           
 24875                           ; BSR set to: 5
 24876                           ;../../VLCBlib_PIC/mns.c: 447:     if (m->len < 3) {
 24877   000CFA  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24878   000CFE  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24879   000D02  0E03               	movlw	3
 24880   000D04  60DF               	cpfslt	indf2,c
 24881   000D06  EF87  F006         	goto	u7521
 24882   000D0A  EF89  F006         	goto	u7520
 24883   000D0E                     u7521:
 24884   000D0E  EF8B  F006         	goto	l10217
 24885   000D12                     u7520:
 24886   000D12  EFED  F005         	goto	l10155
 24887   000D16                     l10217:
 24888                           
 24889                           ; BSR set to: 5
 24890                           ;../../VLCBlib_PIC/mns.c: 451:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 24891   000D16  EE20 F002          	lfsr	2,2
 24892   000D1A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24893   000D1C  26D9               	addwf	fsr2l,f,c
 24894   000D1E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24895   000D20  22DA               	addwfc	fsr2h,f,c
 24896   000D22  50DE               	movf	postinc2,w,c
 24897   000D24  1990               	xorwf	(_nn+1)& (0+255),w,b
 24898   000D26  B4D8               	btfsc	status,2,c
 24899   000D28  EF98  F006         	goto	u7531
 24900   000D2C  EF9A  F006         	goto	u7530
 24901   000D30                     u7531:
 24902   000D30  EF9C  F006         	goto	l10223
 24903   000D34                     u7530:
 24904   000D34  EFED  F005         	goto	l10155
 24905   000D38                     l10223:
 24906                           
 24907                           ; BSR set to: 5
 24908                           ;../../VLCBlib_PIC/mns.c: 452:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 24909   000D38  EE20 F003          	lfsr	2,3
 24910   000D3C  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24911   000D3E  26D9               	addwf	fsr2l,f,c
 24912   000D40  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24913   000D42  22DA               	addwfc	fsr2h,f,c
 24914   000D44  518F               	movf	_nn& (0+255),w,b
 24915   000D46  18DE               	xorwf	postinc2,w,c
 24916   000D48  B4D8               	btfsc	status,2,c
 24917   000D4A  EFA9  F006         	goto	u7541
 24918   000D4E  EFAB  F006         	goto	u7540
 24919   000D52                     u7541:
 24920   000D52  EF50  F00B         	goto	l10433
 24921   000D56                     u7540:
 24922   000D56  EFED  F005         	goto	l10155
 24923   000D5A                     l10229:
 24924                           
 24925                           ; BSR set to: 5
 24926                           ;../../VLCBlib_PIC/mns.c: 456:             if (m->len < 4) {
 24927   000D5A  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24928   000D5E  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24929   000D62  0E04               	movlw	4
 24930   000D64  60DF               	cpfslt	indf2,c
 24931   000D66  EFB7  F006         	goto	u7551
 24932   000D6A  EFB9  F006         	goto	u7550
 24933   000D6E                     u7551:
 24934   000D6E  EFC8  F006         	goto	l10237
 24935   000D72                     u7550:
 24936   000D72                     
 24937                           ; BSR set to: 5
 24938                           ;../../VLCBlib_PIC/mns.c: 458:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24939   000D72  C590  F526         	movff	_nn+1,sendMessage5@data1
 24940   000D76  C58F  F527         	movff	_nn,sendMessage5@data2
 24941   000D7A  0E73               	movlw	115
 24942   000D7C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24943   000D7E  0E01               	movlw	1
 24944   000D80  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24945   000D82  0E01               	movlw	1
 24946   000D84  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24947   000D86  0EAF               	movlw	175
 24948   000D88  EC96  F040         	call	_sendMessage5
 24949   000D8C  EF60  F005         	goto	l10129
 24950   000D90                     l10237:
 24951                           
 24952                           ; BSR set to: 5
 24953                           ;../../VLCBlib_PIC/mns.c: 462:             if (m->bytes[2] > 20) {
 24954   000D90  EE20 F004          	lfsr	2,4
 24955   000D94  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24956   000D96  26D9               	addwf	fsr2l,f,c
 24957   000D98  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24958   000D9A  22DA               	addwfc	fsr2h,f,c
 24959   000D9C  0E14               	movlw	20
 24960   000D9E  64DF               	cpfsgt	indf2,c
 24961   000DA0  EFD4  F006         	goto	u7561
 24962   000DA4  EFD6  F006         	goto	u7560
 24963   000DA8                     u7561:
 24964   000DA8  EFEE  F006         	goto	l10245
 24965   000DAC                     u7560:
 24966   000DAC                     
 24967                           ; BSR set to: 5
 24968                           ;../../VLCBlib_PIC/mns.c: 463:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 24969   000DAC  C590  F526         	movff	_nn+1,sendMessage3@data1
 24970   000DB0  C58F  F527         	movff	_nn,sendMessage3@data2
 24971   000DB4  0E09               	movlw	9
 24972   000DB6  6E28               	movwf	sendMessage3@data3^(0+1280),c
 24973   000DB8  0E6F               	movlw	111
 24974   000DBA  EC57  F040         	call	_sendMessage3
 24975                           
 24976                           ;../../VLCBlib_PIC/mns.c: 465:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 24977   000DBE  C590  F526         	movff	_nn+1,sendMessage5@data1
 24978   000DC2  C58F  F527         	movff	_nn,sendMessage5@data2
 24979   000DC6  0E73               	movlw	115
 24980   000DC8  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24981   000DCA  0E01               	movlw	1
 24982   000DCC  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24983   000DCE  0E09               	movlw	9
 24984   000DD0  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24985   000DD2  0EAF               	movlw	175
 24986   000DD4  EC96  F040         	call	_sendMessage5
 24987   000DD8  EF60  F005         	goto	l10129
 24988   000DDC                     l10245:
 24989                           
 24990                           ; BSR set to: 5
 24991                           ;../../VLCBlib_PIC/mns.c: 469:             i = getParameter(m->bytes[2]);
 24992   000DDC  EE20 F004          	lfsr	2,4
 24993   000DE0  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24994   000DE2  26D9               	addwf	fsr2l,f,c
 24995   000DE4  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24996   000DE6  22DA               	addwfc	fsr2h,f,c
 24997   000DE8  50DF               	movf	indf2,w,c
 24998   000DEA  ECF1  F023         	call	_getParameter
 24999   000DEE  6E56               	movwf	mnsProcessMessage@i^(0+1280),c
 25000   000DF0                     
 25001                           ;../../VLCBlib_PIC/mns.c: 470:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 25002   000DF0  C590  F526         	movff	_nn+1,sendMessage4@data1
 25003   000DF4  C58F  F527         	movff	_nn,sendMessage4@data2
 25004   000DF8  EE20 F004          	lfsr	2,4
 25005   000DFC  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25006   000DFE  26D9               	addwf	fsr2l,f,c
 25007   000E00  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25008   000E02  22DA               	addwfc	fsr2h,f,c
 25009   000E04  50DF               	movf	indf2,w,c
 25010   000E06  6E28               	movwf	sendMessage4@data3^(0+1280),c
 25011   000E08  C556  F529         	movff	mnsProcessMessage@i,sendMessage4@data4
 25012   000E0C  0E9B               	movlw	155
 25013   000E0E  EC42  F040         	call	_sendMessage4
 25014   000E12                     
 25015                           ;../../VLCBlib_PIC/mns.c: 472:             if (((mode_flags & 8) == 0) && (m->bytes[2] =
      +                          = 0)) {
 25016   000E12  0105               	movlb	5	; () banked
 25017   000E14  B7A4               	btfsc	_mode_flags& (0+255),3,b
 25018   000E16  EF0F  F007         	goto	u7571
 25019   000E1A  EF11  F007         	goto	u7570
 25020   000E1E                     u7571:
 25021   000E1E  EF60  F005         	goto	l10129
 25022   000E22                     u7570:
 25023   000E22                     
 25024                           ; BSR set to: 5
 25025   000E22  EE20 F004          	lfsr	2,4
 25026   000E26  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25027   000E28  26D9               	addwf	fsr2l,f,c
 25028   000E2A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25029   000E2C  22DA               	addwfc	fsr2h,f,c
 25030   000E2E  50DF               	movf	indf2,w,c
 25031   000E30  A4D8               	btfss	status,2,c
 25032   000E32  EF1D  F007         	goto	u7581
 25033   000E36  EF1F  F007         	goto	u7580
 25034   000E3A                     u7581:
 25035   000E3A  EF60  F005         	goto	l10129
 25036   000E3E                     u7580:
 25037   000E3E                     
 25038                           ; BSR set to: 5
 25039                           ;../../VLCBlib_PIC/mns.c: 473:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 25040   000E3E  0E01               	movlw	1
 25041   000E40  ECF1  F036         	call	_findServiceIndex
 25042   000E44  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25043   000E46  0EA0               	movlw	low _mnsTRrqnpnCallback
 25044   000E48  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25045   000E4A  0E7E               	movlw	high _mnsTRrqnpnCallback
 25046   000E4C  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25047   000E4E  0E07               	movlw	7
 25048   000E50  ECA7  F03C         	call	_startTimedResponse
 25049   000E54  EF60  F005         	goto	l10129
 25050   000E58                     l1319:
 25051                           
 25052                           ; BSR set to: 5
 25053                           ;../../VLCBlib_PIC/mns.c: 478:             previousNN.word = nn.word;
 25054   000E58  C58F  F58D         	movff	_nn,_previousNN
 25055   000E5C  C590  F58E         	movff	_nn+1,_previousNN+1
 25056   000E60                     
 25057                           ; BSR set to: 5
 25058                           ;../../VLCBlib_PIC/mns.c: 480:             writeNVM(EEPROM_NVM_TYPE, 0x3FA, 0xFF);
 25059   000E60  0EFA               	movlw	250
 25060   000E62  6E0E               	movwf	writeNVM@index^(0+1280),c
 25061   000E64  0E03               	movlw	3
 25062   000E66  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 25063   000E68  0E00               	movlw	0
 25064   000E6A  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 25065   000E6C  0EFF               	movlw	255
 25066   000E6E  6E11               	movwf	writeNVM@value^(0+1280),c
 25067   000E70  0E00               	movlw	0
 25068   000E72  EC47  F03C         	call	_writeNVM
 25069   000E76                     
 25070                           ;../../VLCBlib_PIC/mns.c: 481:             if (previousNN.word != 0) {
 25071   000E76  0105               	movlb	5	; () banked
 25072   000E78  518D               	movf	_previousNN& (0+255),w,b
 25073   000E7A  118E               	iorwf	(_previousNN+1)& (0+255),w,b
 25074   000E7C  B4D8               	btfsc	status,2,c
 25075   000E7E  EF43  F007         	goto	u7591
 25076   000E82  EF45  F007         	goto	u7590
 25077   000E86                     u7591:
 25078   000E86  EF6A  F007         	goto	l1320
 25079   000E8A                     u7590:
 25080   000E8A                     
 25081                           ; BSR set to: 5
 25082                           ;../../VLCBlib_PIC/mns.c: 482:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 25083   000E8A  C58E  F526         	movff	_previousNN+1,sendMessage2@data1
 25084   000E8E  C58D  F527         	movff	_previousNN,sendMessage2@data2
 25085   000E92  0E51               	movlw	81
 25086   000E94  EC6C  F040         	call	_sendMessage2
 25087   000E98                     
 25088                           ;../../VLCBlib_PIC/mns.c: 483:                 transport->waitForTxQueueToDrain();
 25089   000E98  0E04               	movlw	4
 25090   000E9A  0105               	movlb	5	; () banked
 25091   000E9C  2591               	addwf	_transport& (0+255),w,b
 25092   000E9E  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25093   000EA0  0E00               	movlw	0
 25094   000EA2  2192               	addwfc	(_transport+1)& (0+255),w,b
 25095   000EA4  6FD1               	movwf	(??_mnsProcessMessage+1)& (0+255),b
 25096   000EA6  C5D0  F4F6         	movff	??_mnsProcessMessage,tblptrl
 25097   000EAA  C5D1  F4F7         	movff	??_mnsProcessMessage+1,tblptrh
 25098   000EAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25099   000EAE  6AF8               	clrf	tblptru,c
 25100   000EB0                     	endif
 25101   000EB0                     	if	0	;tblptru may be non-zero
 25102   000EB0                     	endif
 25103   000EB0  0009               	tblrd		*+
 25104   000EB2  C4F5 F5D2          	movff	tablat,??_mnsProcessMessage+2
 25105   000EB6  0009               	tblrd		*+
 25106   000EB8  C4F5 F5D3          	movff	tablat,??_mnsProcessMessage+3
 25107   000EBC  D802               	call	u7608
 25108   000EBE  EF6A  F007         	goto	u7609
 25109   000EC2                     u7608:
 25110   000EC2  0005               	push	
 25111   000EC4  6EFA               	movwf	pclath,c
 25112   000EC6  51D2               	movf	(??_mnsProcessMessage+2)& (0+255),w,b
 25113   000EC8  6EFD               	movwf	tosl,c
 25114   000ECA  51D3               	movf	(??_mnsProcessMessage+3)& (0+255),w,b
 25115   000ECC  6EFE               	movwf	tosh,c
 25116   000ECE  6AFF               	clrf	tosu,c
 25117   000ED0  50FA               	movf	pclath,w,c
 25118   000ED2  0012               	return		;indir
 25119   000ED4                     u7609:
 25120   000ED4                     l1320:
 25121   000ED4  00FF               	reset		;# 
 25122   000ED6                     l10267:
 25123                           
 25124                           ;../../VLCBlib_PIC/mns.c: 488:             if (m->len < 5) {
 25125   000ED6  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 25126   000EDA  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 25127   000EDE  0E05               	movlw	5
 25128   000EE0  60DF               	cpfslt	indf2,c
 25129   000EE2  EF75  F007         	goto	u7611
 25130   000EE6  EF77  F007         	goto	u7610
 25131   000EEA                     u7611:
 25132   000EEA  EF86  F007         	goto	l10275
 25133   000EEE                     u7610:
 25134   000EEE                     
 25135                           ;../../VLCBlib_PIC/mns.c: 489:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 25136   000EEE  C590  F526         	movff	_nn+1,sendMessage5@data1
 25137   000EF2  C58F  F527         	movff	_nn,sendMessage5@data2
 25138   000EF6  0E87               	movlw	135
 25139   000EF8  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25140   000EFA  0E01               	movlw	1
 25141   000EFC  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25142   000EFE  0E01               	movlw	1
 25143   000F00  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25144   000F02  0EAF               	movlw	175
 25145   000F04  EC96  F040         	call	_sendMessage5
 25146   000F08  EF60  F005         	goto	l10129
 25147   000F0C                     l10275:
 25148                           
 25149                           ;../../VLCBlib_PIC/mns.c: 492:             if (m->bytes[2] == 0) {
 25150   000F0C  EE20 F004          	lfsr	2,4
 25151   000F10  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25152   000F12  26D9               	addwf	fsr2l,f,c
 25153   000F14  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25154   000F16  22DA               	addwfc	fsr2h,f,c
 25155   000F18  50DF               	movf	indf2,w,c
 25156   000F1A  A4D8               	btfss	status,2,c
 25157   000F1C  EF92  F007         	goto	u7621
 25158   000F20  EF94  F007         	goto	u7620
 25159   000F24                     u7621:
 25160   000F24  EF9F  F007         	goto	l10279
 25161   000F28                     u7620:
 25162   000F28                     
 25163                           ;../../VLCBlib_PIC/mns.c: 494:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 25164   000F28  0E00               	movlw	0
 25165   000F2A  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25166   000F2C  0E06               	movlw	low _mnsTRallDiagnosticsCallback
 25167   000F2E  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25168   000F30  0E54               	movlw	high _mnsTRallDiagnosticsCallback
 25169   000F32  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25170   000F34  0E04               	movlw	4
 25171   000F36  ECA7  F03C         	call	_startTimedResponse
 25172                           
 25173                           ;../../VLCBlib_PIC/mns.c: 495:             } else {
 25174   000F3A  EF60  F005         	goto	l10129
 25175   000F3E                     l10279:
 25176                           
 25177                           ;../../VLCBlib_PIC/mns.c: 497:                 if (m->bytes[2] > 6) {
 25178   000F3E  EE20 F004          	lfsr	2,4
 25179   000F42  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25180   000F44  26D9               	addwf	fsr2l,f,c
 25181   000F46  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25182   000F48  22DA               	addwfc	fsr2h,f,c
 25183   000F4A  0E06               	movlw	6
 25184   000F4C  64DF               	cpfsgt	indf2,c
 25185   000F4E  EFAB  F007         	goto	u7631
 25186   000F52  EFAD  F007         	goto	u7630
 25187   000F56                     u7631:
 25188   000F56  EFBC  F007         	goto	l10287
 25189   000F5A                     u7630:
 25190   000F5A                     
 25191                           ;../../VLCBlib_PIC/mns.c: 498:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 25192   000F5A  C590  F526         	movff	_nn+1,sendMessage5@data1
 25193   000F5E  C58F  F527         	movff	_nn,sendMessage5@data2
 25194   000F62  0E87               	movlw	135
 25195   000F64  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25196   000F66  0E01               	movlw	1
 25197   000F68  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25198   000F6A  0EFC               	movlw	252
 25199   000F6C  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25200   000F6E  0EAF               	movlw	175
 25201   000F70  EC96  F040         	call	_sendMessage5
 25202   000F74  EF60  F005         	goto	l10129
 25203   000F78                     l10287:
 25204                           
 25205                           ;../../VLCBlib_PIC/mns.c: 501:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 25206   000F78  EE20 F004          	lfsr	2,4
 25207   000F7C  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25208   000F7E  26D9               	addwf	fsr2l,f,c
 25209   000F80  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25210   000F82  22DA               	addwfc	fsr2h,f,c
 25211   000F84  50DF               	movf	indf2,w,c
 25212   000F86  0105               	movlb	5	; () banked
 25213   000F88  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25214   000F8A  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25215   000F8C  90D8               	bcf	status,0,c
 25216   000F8E  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25217   000F90  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25218   000F92  0EFE               	movlw	254
 25219   000F94  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25220   000F96  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25221   000F98  0EFF               	movlw	255
 25222   000F9A  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25223   000F9C  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25224   000F9E  0E89               	movlw	low _services
 25225   000FA0  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25226   000FA2  6EF6               	movwf	tblptrl,c
 25227   000FA4  0EFF               	movlw	high _services
 25228   000FA6  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25229   000FA8  6EF7               	movwf	tblptrh,c
 25230   000FAA                     	if	1	;There are 3 active tblptr bytes
 25231   000FAA  6AF8               	clrf	tblptru,c
 25232   000FAC  0E00               	movlw	low (__mediumconst shr (0+16))
 25233   000FAE  22F8               	addwfc	tblptru,f,c
 25234   000FB0                     	endif
 25235   000FB0  0009               	tblrd		*+
 25236   000FB2  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25237   000FB6  0009               	tblrd		*+
 25238   000FB8  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25239   000FBC  0E0C               	movlw	12
 25240   000FBE  27D4               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 25241   000FC0  0E00               	movlw	0
 25242   000FC2  23D5               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 25243   000FC4  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25244   000FC8  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25245   000FCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25246   000FCC  6AF8               	clrf	tblptru,c
 25247   000FCE                     	endif
 25248   000FCE                     	if	0	;tblptru may be non-zero
 25249   000FCE                     	endif
 25250   000FCE  0009               	tblrd		*+
 25251   000FD0  50F5               	movf	tablat,w,c
 25252   000FD2  0009               	tblrd		*+
 25253   000FD4  10F5               	iorwf	tablat,w,c
 25254   000FD6  A4D8               	btfss	status,2,c
 25255   000FD8  EFF0  F007         	goto	u7641
 25256   000FDC  EFF2  F007         	goto	u7640
 25257   000FE0                     u7641:
 25258   000FE0  EF05  F008         	goto	l10291
 25259   000FE4                     u7640:
 25260   000FE4                     
 25261                           ; BSR set to: 5
 25262                           ;../../VLCBlib_PIC/mns.c: 503:                     sendMessage5(OPC_DGN, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_RDGN, m->bytes[2], 0);
 25263   000FE4  C590  F526         	movff	_nn+1,sendMessage5@data1
 25264   000FE8  C58F  F527         	movff	_nn,sendMessage5@data2
 25265   000FEC  0E87               	movlw	135
 25266   000FEE  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25267   000FF0  EE20 F004          	lfsr	2,4
 25268   000FF4  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25269   000FF6  26D9               	addwf	fsr2l,f,c
 25270   000FF8  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25271   000FFA  22DA               	addwfc	fsr2h,f,c
 25272   000FFC  50DF               	movf	indf2,w,c
 25273   000FFE  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25274   001000  0E00               	movlw	0
 25275   001002  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25276   001004  0EC7               	movlw	199
 25277   001006  EC96  F040         	call	_sendMessage5
 25278   00100A                     l10291:
 25279                           
 25280                           ;../../VLCBlib_PIC/mns.c: 505:                 if (m->bytes[3] == 0) {
 25281   00100A  EE20 F005          	lfsr	2,5
 25282   00100E  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25283   001010  26D9               	addwf	fsr2l,f,c
 25284   001012  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25285   001014  22DA               	addwfc	fsr2h,f,c
 25286   001016  50DF               	movf	indf2,w,c
 25287   001018  A4D8               	btfss	status,2,c
 25288   00101A  EF11  F008         	goto	u7651
 25289   00101E  EF13  F008         	goto	u7650
 25290   001022                     u7651:
 25291   001022  EF24  F008         	goto	l10301
 25292   001026                     u7650:
 25293   001026                     
 25294                           ;../../VLCBlib_PIC/mns.c: 507:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 25295   001026  EE20 F004          	lfsr	2,4
 25296   00102A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25297   00102C  26D9               	addwf	fsr2l,f,c
 25298   00102E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25299   001030  22DA               	addwfc	fsr2h,f,c
 25300   001032  50DF               	movf	indf2,w,c
 25301   001034  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25302   001036  0E06               	movlw	low _mnsTRallDiagnosticsCallback
 25303   001038  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25304   00103A  0E54               	movlw	high _mnsTRallDiagnosticsCallback
 25305   00103C  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25306   00103E  0E04               	movlw	4
 25307   001040  ECA7  F03C         	call	_startTimedResponse
 25308   001044  EF60  F005         	goto	l10129
 25309   001048                     l10301:
 25310                           
 25311                           ;../../VLCBlib_PIC/mns.c: 510:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 25312   001048  EE20 F004          	lfsr	2,4
 25313   00104C  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25314   00104E  26D9               	addwf	fsr2l,f,c
 25315   001050  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25316   001052  22DA               	addwfc	fsr2h,f,c
 25317   001054  50DF               	movf	indf2,w,c
 25318   001056  0105               	movlb	5	; () banked
 25319   001058  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25320   00105A  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25321   00105C  90D8               	bcf	status,0,c
 25322   00105E  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25323   001060  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25324   001062  0EFE               	movlw	254
 25325   001064  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25326   001066  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25327   001068  0EFF               	movlw	255
 25328   00106A  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25329   00106C  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25330   00106E  0E89               	movlw	low _services
 25331   001070  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25332   001072  6EF6               	movwf	tblptrl,c
 25333   001074  0EFF               	movlw	high _services
 25334   001076  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25335   001078  6EF7               	movwf	tblptrh,c
 25336   00107A                     	if	1	;There are 3 active tblptr bytes
 25337   00107A  6AF8               	clrf	tblptru,c
 25338   00107C  0E00               	movlw	low (__mediumconst shr (0+16))
 25339   00107E  22F8               	addwfc	tblptru,f,c
 25340   001080                     	endif
 25341   001080  0009               	tblrd		*+
 25342   001082  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25343   001086  0009               	tblrd		*+
 25344   001088  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25345   00108C  0E0C               	movlw	12
 25346   00108E  27D4               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 25347   001090  0E00               	movlw	0
 25348   001092  23D5               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 25349   001094  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25350   001098  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25351   00109C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25352   00109C  6AF8               	clrf	tblptru,c
 25353   00109E                     	endif
 25354   00109E                     	if	0	;tblptru may be non-zero
 25355   00109E                     	endif
 25356   00109E  0009               	tblrd		*+
 25357   0010A0  C4F5 F5D6          	movff	tablat,??_mnsProcessMessage+6
 25358   0010A4  0009               	tblrd		*+
 25359   0010A6  C4F5 F5D7          	movff	tablat,??_mnsProcessMessage+7
 25360   0010AA  D802               	call	u7668
 25361   0010AC  EF68  F008         	goto	u7669
 25362   0010B0                     u7668:
 25363   0010B0  0005               	push	
 25364   0010B2  6EFA               	movwf	pclath,c
 25365   0010B4  51D6               	movf	(??_mnsProcessMessage+6)& (0+255),w,b
 25366   0010B6  6EFD               	movwf	tosl,c
 25367   0010B8  51D7               	movf	(??_mnsProcessMessage+7)& (0+255),w,b
 25368   0010BA  6EFE               	movwf	tosh,c
 25369   0010BC  6AFF               	clrf	tosu,c
 25370   0010BE  50FA               	movf	pclath,w,c
 25371   0010C0  EE20 F005          	lfsr	2,5
 25372   0010C4  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25373   0010C6  26D9               	addwf	fsr2l,f,c
 25374   0010C8  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25375   0010CA  22DA               	addwfc	fsr2h,f,c
 25376   0010CC  50DF               	movf	indf2,w,c
 25377   0010CE  0012               	return		;indir
 25378   0010D0                     u7669:
 25379   0010D0  C507  F558         	movff	?_nvGetDiagnostic,mnsProcessMessage@d
 25380   0010D4  C508  F559         	movff	?_nvGetDiagnostic+1,mnsProcessMessage@d+1
 25381   0010D8                     
 25382                           ;../../VLCBlib_PIC/mns.c: 511:                     if (d == ((void*)0)) {
 25383   0010D8  5058               	movf	mnsProcessMessage@d^(0+1280),w,c
 25384   0010DA  1059               	iorwf	(mnsProcessMessage@d+1)^(0+1280),w,c
 25385   0010DC  A4D8               	btfss	status,2,c
 25386   0010DE  EF73  F008         	goto	u7671
 25387   0010E2  EF75  F008         	goto	u7670
 25388   0010E6                     u7671:
 25389   0010E6  EF84  F008         	goto	l10307
 25390   0010EA                     u7670:
 25391   0010EA                     
 25392                           ;../../VLCBlib_PIC/mns.c: 513:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 25393   0010EA  C590  F526         	movff	_nn+1,sendMessage5@data1
 25394   0010EE  C58F  F527         	movff	_nn,sendMessage5@data2
 25395   0010F2  0E87               	movlw	135
 25396   0010F4  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25397   0010F6  0E01               	movlw	1
 25398   0010F8  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25399   0010FA  0EFD               	movlw	253
 25400   0010FC  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25401   0010FE  0EAF               	movlw	175
 25402   001100  EC96  F040         	call	_sendMessage5
 25403                           
 25404                           ;../../VLCBlib_PIC/mns.c: 514:                     } else {
 25405   001104  EF60  F005         	goto	l10129
 25406   001108                     l10307:
 25407                           
 25408                           ;../../VLCBlib_PIC/mns.c: 516:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 25409   001108  C590  F526         	movff	_nn+1,sendMessage6@data1
 25410   00110C  C58F  F527         	movff	_nn,sendMessage6@data2
 25411   001110  EE20 F004          	lfsr	2,4
 25412   001114  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25413   001116  26D9               	addwf	fsr2l,f,c
 25414   001118  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25415   00111A  22DA               	addwfc	fsr2h,f,c
 25416   00111C  50DF               	movf	indf2,w,c
 25417   00111E  6E28               	movwf	sendMessage6@data3^(0+1280),c
 25418   001120  EE20 F005          	lfsr	2,5
 25419   001124  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25420   001126  26D9               	addwf	fsr2l,f,c
 25421   001128  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25422   00112A  22DA               	addwfc	fsr2h,f,c
 25423   00112C  50DF               	movf	indf2,w,c
 25424   00112E  6E29               	movwf	sendMessage6@data4^(0+1280),c
 25425   001130  EE20 F001          	lfsr	2,1
 25426   001134  5058               	movf	mnsProcessMessage@d^(0+1280),w,c
 25427   001136  26D9               	addwf	fsr2l,f,c
 25428   001138  5059               	movf	(mnsProcessMessage@d+1)^(0+1280),w,c
 25429   00113A  22DA               	addwfc	fsr2h,f,c
 25430   00113C  50DF               	movf	indf2,w,c
 25431   00113E  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 25432   001140  C558  F4D9         	movff	mnsProcessMessage@d,fsr2l
 25433   001144  C559  F4DA         	movff	mnsProcessMessage@d+1,fsr2h
 25434   001148  50DF               	movf	indf2,w,c
 25435   00114A  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 25436   00114C  0EC7               	movlw	199
 25437   00114E  EC2D  F040         	call	_sendMessage6
 25438   001152  EF60  F005         	goto	l10129
 25439   001156                     l10313:
 25440                           
 25441                           ; BSR set to: 5
 25442                           ;../../VLCBlib_PIC/mns.c: 524:             if (m->len < 4) {
 25443   001156  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 25444   00115A  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 25445   00115E  0E04               	movlw	4
 25446   001160  60DF               	cpfslt	indf2,c
 25447   001162  EFB5  F008         	goto	u7681
 25448   001166  EFB7  F008         	goto	u7680
 25449   00116A                     u7681:
 25450   00116A  EFC6  F008         	goto	l10321
 25451   00116E                     u7680:
 25452   00116E                     
 25453                           ; BSR set to: 5
 25454                           ;../../VLCBlib_PIC/mns.c: 525:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 25455   00116E  C590  F526         	movff	_nn+1,sendMessage5@data1
 25456   001172  C58F  F527         	movff	_nn,sendMessage5@data2
 25457   001176  0E78               	movlw	120
 25458   001178  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25459   00117A  0E01               	movlw	1
 25460   00117C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25461   00117E  0E01               	movlw	1
 25462   001180  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25463   001182  0EAF               	movlw	175
 25464   001184  EC96  F040         	call	_sendMessage5
 25465   001188  EF60  F005         	goto	l10129
 25466   00118C                     l10321:
 25467                           
 25468                           ; BSR set to: 5
 25469                           ;../../VLCBlib_PIC/mns.c: 528:             if (m->bytes[2] == 0) {
 25470   00118C  EE20 F004          	lfsr	2,4
 25471   001190  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25472   001192  26D9               	addwf	fsr2l,f,c
 25473   001194  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25474   001196  22DA               	addwfc	fsr2h,f,c
 25475   001198  50DF               	movf	indf2,w,c
 25476   00119A  A4D8               	btfss	status,2,c
 25477   00119C  EFD2  F008         	goto	u7691
 25478   0011A0  EFD4  F008         	goto	u7690
 25479   0011A4                     u7691:
 25480   0011A4  EFEC  F008         	goto	l10327
 25481   0011A8                     u7690:
 25482   0011A8                     
 25483                           ; BSR set to: 5
 25484                           ;../../VLCBlib_PIC/mns.c: 530:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 6);
 25485   0011A8  C590  F526         	movff	_nn+1,sendMessage5@data1
 25486   0011AC  C58F  F527         	movff	_nn,sendMessage5@data2
 25487   0011B0  0E00               	movlw	0
 25488   0011B2  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25489   0011B4  0E00               	movlw	0
 25490   0011B6  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25491   0011B8  0E06               	movlw	6
 25492   0011BA  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25493   0011BC  0EAC               	movlw	172
 25494   0011BE  EC96  F040         	call	_sendMessage5
 25495   0011C2                     
 25496                           ;../../VLCBlib_PIC/mns.c: 532:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 25497   0011C2  0E01               	movlw	1
 25498   0011C4  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25499   0011C6  0E02               	movlw	low _mnsTRserviceDiscoveryCallback
 25500   0011C8  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25501   0011CA  0E6B               	movlw	high _mnsTRserviceDiscoveryCallback
 25502   0011CC  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25503   0011CE  0E03               	movlw	3
 25504   0011D0  ECA7  F03C         	call	_startTimedResponse
 25505                           
 25506                           ;../../VLCBlib_PIC/mns.c: 533:             } else if (m->bytes[2] > 6) {
 25507   0011D4  EF60  F005         	goto	l10129
 25508   0011D8                     l10327:
 25509                           
 25510                           ; BSR set to: 5
 25511   0011D8  EE20 F004          	lfsr	2,4
 25512   0011DC  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25513   0011DE  26D9               	addwf	fsr2l,f,c
 25514   0011E0  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25515   0011E2  22DA               	addwfc	fsr2h,f,c
 25516   0011E4  0E06               	movlw	6
 25517   0011E6  64DF               	cpfsgt	indf2,c
 25518   0011E8  EFF8  F008         	goto	u7701
 25519   0011EC  EFFA  F008         	goto	u7700
 25520   0011F0                     u7701:
 25521   0011F0  EF09  F009         	goto	l10337
 25522   0011F4                     u7700:
 25523   0011F4                     
 25524                           ; BSR set to: 5
 25525                           ;../../VLCBlib_PIC/mns.c: 534:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 25526   0011F4  C590  F526         	movff	_nn+1,sendMessage5@data1
 25527   0011F8  C58F  F527         	movff	_nn,sendMessage5@data2
 25528   0011FC  0E78               	movlw	120
 25529   0011FE  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25530   001200  0E01               	movlw	1
 25531   001202  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25532   001204  0EFC               	movlw	252
 25533   001206  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25534   001208  0EAF               	movlw	175
 25535   00120A  EC96  F040         	call	_sendMessage5
 25536   00120E  EF60  F005         	goto	l10129
 25537   001212                     l10337:
 25538                           
 25539                           ; BSR set to: 5
 25540                           ;../../VLCBlib_PIC/mns.c: 538:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 25541   001212  EE20 F004          	lfsr	2,4
 25542   001216  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25543   001218  26D9               	addwf	fsr2l,f,c
 25544   00121A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25545   00121C  22DA               	addwfc	fsr2h,f,c
 25546   00121E  50DF               	movf	indf2,w,c
 25547   001220  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25548   001222  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25549   001224  90D8               	bcf	status,0,c
 25550   001226  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25551   001228  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25552   00122A  0EFE               	movlw	254
 25553   00122C  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25554   00122E  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25555   001230  0EFF               	movlw	255
 25556   001232  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25557   001234  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25558   001236  0E89               	movlw	low _services
 25559   001238  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25560   00123A  6EF6               	movwf	tblptrl,c
 25561   00123C  0EFF               	movlw	high _services
 25562   00123E  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25563   001240  6EF7               	movwf	tblptrh,c
 25564   001242                     	if	1	;There are 3 active tblptr bytes
 25565   001242  6AF8               	clrf	tblptru,c
 25566   001244  0E00               	movlw	low (__mediumconst shr (0+16))
 25567   001246  22F8               	addwfc	tblptru,f,c
 25568   001248                     	endif
 25569   001248  0009               	tblrd		*+
 25570   00124A  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25571   00124E  0009               	tblrd		*+
 25572   001250  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25573   001254  0E0A               	movlw	10
 25574   001256  27D4               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 25575   001258  0E00               	movlw	0
 25576   00125A  23D5               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 25577   00125C  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25578   001260  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25579   001264                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25580   001264  6AF8               	clrf	tblptru,c
 25581   001266                     	endif
 25582   001266                     	if	0	;tblptru may be non-zero
 25583   001266                     	endif
 25584   001266  0009               	tblrd		*+
 25585   001268  50F5               	movf	tablat,w,c
 25586   00126A  0009               	tblrd		*+
 25587   00126C  10F5               	iorwf	tablat,w,c
 25588   00126E  A4D8               	btfss	status,2,c
 25589   001270  EF3C  F009         	goto	u7711
 25590   001274  EF3E  F009         	goto	u7710
 25591   001278                     u7711:
 25592   001278  EF7E  F009         	goto	l10341
 25593   00127C                     u7710:
 25594   00127C                     
 25595                           ; BSR set to: 5
 25596                           ;../../VLCBlib_PIC/mns.c: 539:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 25597   00127C  C590  F526         	movff	_nn+1,sendMessage7@data1
 25598   001280  C58F  F527         	movff	_nn,sendMessage7@data2
 25599   001284  EE20 F004          	lfsr	2,4
 25600   001288  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25601   00128A  26D9               	addwf	fsr2l,f,c
 25602   00128C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25603   00128E  22DA               	addwfc	fsr2h,f,c
 25604   001290  50DF               	movf	indf2,w,c
 25605   001292  6E28               	movwf	sendMessage7@data3^(0+1280),c
 25606   001294  EE20 F004          	lfsr	2,4
 25607   001298  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25608   00129A  26D9               	addwf	fsr2l,f,c
 25609   00129C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25610   00129E  22DA               	addwfc	fsr2h,f,c
 25611   0012A0  50DF               	movf	indf2,w,c
 25612   0012A2  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25613   0012A4  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25614   0012A6  90D8               	bcf	status,0,c
 25615   0012A8  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25616   0012AA  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25617   0012AC  0EFE               	movlw	254
 25618   0012AE  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25619   0012B0  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25620   0012B2  0EFF               	movlw	255
 25621   0012B4  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25622   0012B6  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25623   0012B8  0E89               	movlw	low _services
 25624   0012BA  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25625   0012BC  6EF6               	movwf	tblptrl,c
 25626   0012BE  0EFF               	movlw	high _services
 25627   0012C0  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25628   0012C2  6EF7               	movwf	tblptrh,c
 25629   0012C4                     	if	1	;There are 3 active tblptr bytes
 25630   0012C4  6AF8               	clrf	tblptru,c
 25631   0012C6  0E00               	movlw	low (__mediumconst shr (0+16))
 25632   0012C8  22F8               	addwfc	tblptru,f,c
 25633   0012CA                     	endif
 25634   0012CA  0009               	tblrd		*+
 25635   0012CC  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25636   0012D0  0009               	tblrd		*+
 25637   0012D2  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25638   0012D6  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25639   0012DA  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25640   0012DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25641   0012DE  6AF8               	clrf	tblptru,c
 25642   0012E0                     	endif
 25643   0012E0                     	if	0	;tblptru may be non-zero
 25644   0012E0                     	endif
 25645   0012E0  0008               	tblrd		*
 25646   0012E2  C4F5 F529          	movff	tablat,sendMessage7@data4
 25647   0012E6  0E00               	movlw	0
 25648   0012E8  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 25649   0012EA  0E00               	movlw	0
 25650   0012EC  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 25651   0012EE  0E00               	movlw	0
 25652   0012F0  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 25653   0012F2  0EE7               	movlw	231
 25654   0012F4  EC81  F040         	call	_sendMessage7
 25655                           
 25656                           ;../../VLCBlib_PIC/mns.c: 540:                 } else {
 25657   0012F8  EF60  F005         	goto	l10129
 25658   0012FC                     l10341:
 25659                           
 25660                           ; BSR set to: 5
 25661                           ;../../VLCBlib_PIC/mns.c: 541:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 25662   0012FC  C590  F526         	movff	_nn+1,sendMessage7@data1
 25663   001300  C58F  F527         	movff	_nn,sendMessage7@data2
 25664   001304  EE20 F004          	lfsr	2,4
 25665   001308  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25666   00130A  26D9               	addwf	fsr2l,f,c
 25667   00130C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25668   00130E  22DA               	addwfc	fsr2h,f,c
 25669   001310  50DF               	movf	indf2,w,c
 25670   001312  6E28               	movwf	sendMessage7@data3^(0+1280),c
 25671   001314  EE20 F004          	lfsr	2,4
 25672   001318  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25673   00131A  26D9               	addwf	fsr2l,f,c
 25674   00131C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25675   00131E  22DA               	addwfc	fsr2h,f,c
 25676   001320  50DF               	movf	indf2,w,c
 25677   001322  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25678   001324  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25679   001326  90D8               	bcf	status,0,c
 25680   001328  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25681   00132A  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25682   00132C  0EFE               	movlw	254
 25683   00132E  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25684   001330  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25685   001332  0EFF               	movlw	255
 25686   001334  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25687   001336  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25688   001338  0E89               	movlw	low _services
 25689   00133A  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25690   00133C  6EF6               	movwf	tblptrl,c
 25691   00133E  0EFF               	movlw	high _services
 25692   001340  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25693   001342  6EF7               	movwf	tblptrh,c
 25694   001344                     	if	1	;There are 3 active tblptr bytes
 25695   001344  6AF8               	clrf	tblptru,c
 25696   001346  0E00               	movlw	low (__mediumconst shr (0+16))
 25697   001348  22F8               	addwfc	tblptru,f,c
 25698   00134A                     	endif
 25699   00134A  0009               	tblrd		*+
 25700   00134C  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25701   001350  0009               	tblrd		*+
 25702   001352  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25703   001356  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25704   00135A  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25705   00135E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25706   00135E  6AF8               	clrf	tblptru,c
 25707   001360                     	endif
 25708   001360                     	if	0	;tblptru may be non-zero
 25709   001360                     	endif
 25710   001360  0008               	tblrd		*
 25711   001362  C4F5 F529          	movff	tablat,sendMessage7@data4
 25712   001366  EE20 F004          	lfsr	2,4
 25713   00136A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25714   00136C  26D9               	addwf	fsr2l,f,c
 25715   00136E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25716   001370  22DA               	addwfc	fsr2h,f,c
 25717   001372  50DF               	movf	indf2,w,c
 25718   001374  6FD6               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 25719   001376  6BD7               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 25720   001378  90D8               	bcf	status,0,c
 25721   00137A  37D6               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 25722   00137C  37D7               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 25723   00137E  0EFE               	movlw	254
 25724   001380  25D6               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 25725   001382  6FD8               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 25726   001384  0EFF               	movlw	255
 25727   001386  21D7               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 25728   001388  6FD9               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 25729   00138A  0E89               	movlw	low _services
 25730   00138C  25D8               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 25731   00138E  6EF6               	movwf	tblptrl,c
 25732   001390  0EFF               	movlw	high _services
 25733   001392  21D9               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 25734   001394  6EF7               	movwf	tblptrh,c
 25735   001396                     	if	1	;There are 3 active tblptr bytes
 25736   001396  6AF8               	clrf	tblptru,c
 25737   001398  0E00               	movlw	low (__mediumconst shr (0+16))
 25738   00139A  22F8               	addwfc	tblptru,f,c
 25739   00139C                     	endif
 25740   00139C  0009               	tblrd		*+
 25741   00139E  C4F5 F5DA          	movff	tablat,??_mnsProcessMessage+10
 25742   0013A2  0009               	tblrd		*+
 25743   0013A4  C4F5 F5DB          	movff	tablat,??_mnsProcessMessage+11
 25744   0013A8  0E0A               	movlw	10
 25745   0013AA  27DA               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 25746   0013AC  0E00               	movlw	0
 25747   0013AE  23DB               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 25748   0013B0  C5DA  F4F6         	movff	??_mnsProcessMessage+10,tblptrl
 25749   0013B4  C5DB  F4F7         	movff	??_mnsProcessMessage+11,tblptrh
 25750   0013B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25751   0013B8  6AF8               	clrf	tblptru,c
 25752   0013BA                     	endif
 25753   0013BA                     	if	0	;tblptru may be non-zero
 25754   0013BA                     	endif
 25755   0013BA  0009               	tblrd		*+
 25756   0013BC  C4F5 F5DC          	movff	tablat,??_mnsProcessMessage+12
 25757   0013C0  0009               	tblrd		*+
 25758   0013C2  C4F5 F5DD          	movff	tablat,??_mnsProcessMessage+13
 25759   0013C6  D802               	call	u7728
 25760   0013C8  EFF0  F009         	goto	u7729
 25761   0013CC                     u7728:
 25762   0013CC  0005               	push	
 25763   0013CE  6EFA               	movwf	pclath,c
 25764   0013D0  51DC               	movf	(??_mnsProcessMessage+12)& (0+255),w,b
 25765   0013D2  6EFD               	movwf	tosl,c
 25766   0013D4  51DD               	movf	(??_mnsProcessMessage+13)& (0+255),w,b
 25767   0013D6  6EFE               	movwf	tosh,c
 25768   0013D8  6AFF               	clrf	tosu,c
 25769   0013DA  50FA               	movf	pclath,w,c
 25770   0013DC  0E01               	movlw	1
 25771   0013DE  0012               	return		;indir
 25772   0013E0                     u7729:
 25773   0013E0  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 25774   0013E2  EE20 F004          	lfsr	2,4
 25775   0013E6  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25776   0013E8  26D9               	addwf	fsr2l,f,c
 25777   0013EA  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25778   0013EC  22DA               	addwfc	fsr2h,f,c
 25779   0013EE  50DF               	movf	indf2,w,c
 25780   0013F0  0105               	movlb	5	; () banked
 25781   0013F2  6FDE               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 25782   0013F4  6BDF               	clrf	(??_mnsProcessMessage+15)& (0+255),b
 25783   0013F6  90D8               	bcf	status,0,c
 25784   0013F8  37DE               	rlcf	(??_mnsProcessMessage+14)& (0+255),f,b
 25785   0013FA  37DF               	rlcf	(??_mnsProcessMessage+15)& (0+255),f,b
 25786   0013FC  0EFE               	movlw	254
 25787   0013FE  25DE               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 25788   001400  6FE0               	movwf	(??_mnsProcessMessage+16)& (0+255),b
 25789   001402  0EFF               	movlw	255
 25790   001404  21DF               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 25791   001406  6FE1               	movwf	(??_mnsProcessMessage+17)& (0+255),b
 25792   001408  0E89               	movlw	low _services
 25793   00140A  25E0               	addwf	(??_mnsProcessMessage+16)& (0+255),w,b
 25794   00140C  6EF6               	movwf	tblptrl,c
 25795   00140E  0EFF               	movlw	high _services
 25796   001410  21E1               	addwfc	(??_mnsProcessMessage+17)& (0+255),w,b
 25797   001412  6EF7               	movwf	tblptrh,c
 25798   001414                     	if	1	;There are 3 active tblptr bytes
 25799   001414  6AF8               	clrf	tblptru,c
 25800   001416  0E00               	movlw	low (__mediumconst shr (0+16))
 25801   001418  22F8               	addwfc	tblptru,f,c
 25802   00141A                     	endif
 25803   00141A  0009               	tblrd		*+
 25804   00141C  C4F5 F5E2          	movff	tablat,??_mnsProcessMessage+18
 25805   001420  0009               	tblrd		*+
 25806   001422  C4F5 F5E3          	movff	tablat,??_mnsProcessMessage+19
 25807   001426  0E0A               	movlw	10
 25808   001428  27E2               	addwf	(??_mnsProcessMessage+18)& (0+255),f,b
 25809   00142A  0E00               	movlw	0
 25810   00142C  23E3               	addwfc	(??_mnsProcessMessage+19)& (0+255),f,b
 25811   00142E  C5E2  F4F6         	movff	??_mnsProcessMessage+18,tblptrl
 25812   001432  C5E3  F4F7         	movff	??_mnsProcessMessage+19,tblptrh
 25813   001436                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25814   001436  6AF8               	clrf	tblptru,c
 25815   001438                     	endif
 25816   001438                     	if	0	;tblptru may be non-zero
 25817   001438                     	endif
 25818   001438  0009               	tblrd		*+
 25819   00143A  C4F5 F5E4          	movff	tablat,??_mnsProcessMessage+20
 25820   00143E  0009               	tblrd		*+
 25821   001440  C4F5 F5E5          	movff	tablat,??_mnsProcessMessage+21
 25822   001444  D802               	call	u7738
 25823   001446  EF2F  F00A         	goto	u7739
 25824   00144A                     u7738:
 25825   00144A  0005               	push	
 25826   00144C  6EFA               	movwf	pclath,c
 25827   00144E  51E4               	movf	(??_mnsProcessMessage+20)& (0+255),w,b
 25828   001450  6EFD               	movwf	tosl,c
 25829   001452  51E5               	movf	(??_mnsProcessMessage+21)& (0+255),w,b
 25830   001454  6EFE               	movwf	tosh,c
 25831   001456  6AFF               	clrf	tosu,c
 25832   001458  50FA               	movf	pclath,w,c
 25833   00145A  0E02               	movlw	2
 25834   00145C  0012               	return		;indir
 25835   00145E                     u7739:
 25836   00145E  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 25837   001460  EE20 F004          	lfsr	2,4
 25838   001464  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25839   001466  26D9               	addwf	fsr2l,f,c
 25840   001468  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25841   00146A  22DA               	addwfc	fsr2h,f,c
 25842   00146C  50DF               	movf	indf2,w,c
 25843   00146E  0105               	movlb	5	; () banked
 25844   001470  6FE6               	movwf	(??_mnsProcessMessage+22)& (0+255),b
 25845   001472  6BE7               	clrf	(??_mnsProcessMessage+23)& (0+255),b
 25846   001474  90D8               	bcf	status,0,c
 25847   001476  37E6               	rlcf	(??_mnsProcessMessage+22)& (0+255),f,b
 25848   001478  37E7               	rlcf	(??_mnsProcessMessage+23)& (0+255),f,b
 25849   00147A  0EFE               	movlw	254
 25850   00147C  25E6               	addwf	(??_mnsProcessMessage+22)& (0+255),w,b
 25851   00147E  6FE8               	movwf	(??_mnsProcessMessage+24)& (0+255),b
 25852   001480  0EFF               	movlw	255
 25853   001482  21E7               	addwfc	(??_mnsProcessMessage+23)& (0+255),w,b
 25854   001484  6FE9               	movwf	(??_mnsProcessMessage+25)& (0+255),b
 25855   001486  0E89               	movlw	low _services
 25856   001488  25E8               	addwf	(??_mnsProcessMessage+24)& (0+255),w,b
 25857   00148A  6EF6               	movwf	tblptrl,c
 25858   00148C  0EFF               	movlw	high _services
 25859   00148E  21E9               	addwfc	(??_mnsProcessMessage+25)& (0+255),w,b
 25860   001490  6EF7               	movwf	tblptrh,c
 25861   001492                     	if	1	;There are 3 active tblptr bytes
 25862   001492  6AF8               	clrf	tblptru,c
 25863   001494  0E00               	movlw	low (__mediumconst shr (0+16))
 25864   001496  22F8               	addwfc	tblptru,f,c
 25865   001498                     	endif
 25866   001498  0009               	tblrd		*+
 25867   00149A  C4F5 F5EA          	movff	tablat,??_mnsProcessMessage+26
 25868   00149E  0009               	tblrd		*+
 25869   0014A0  C4F5 F5EB          	movff	tablat,??_mnsProcessMessage+27
 25870   0014A4  0E0A               	movlw	10
 25871   0014A6  27EA               	addwf	(??_mnsProcessMessage+26)& (0+255),f,b
 25872   0014A8  0E00               	movlw	0
 25873   0014AA  23EB               	addwfc	(??_mnsProcessMessage+27)& (0+255),f,b
 25874   0014AC  C5EA  F4F6         	movff	??_mnsProcessMessage+26,tblptrl
 25875   0014B0  C5EB  F4F7         	movff	??_mnsProcessMessage+27,tblptrh
 25876   0014B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25877   0014B4  6AF8               	clrf	tblptru,c
 25878   0014B6                     	endif
 25879   0014B6                     	if	0	;tblptru may be non-zero
 25880   0014B6                     	endif
 25881   0014B6  0009               	tblrd		*+
 25882   0014B8  C4F5 F5EC          	movff	tablat,??_mnsProcessMessage+28
 25883   0014BC  0009               	tblrd		*+
 25884   0014BE  C4F5 F5ED          	movff	tablat,??_mnsProcessMessage+29
 25885   0014C2  D802               	call	u7748
 25886   0014C4  EF6E  F00A         	goto	u7749
 25887   0014C8                     u7748:
 25888   0014C8  0005               	push	
 25889   0014CA  6EFA               	movwf	pclath,c
 25890   0014CC  51EC               	movf	(??_mnsProcessMessage+28)& (0+255),w,b
 25891   0014CE  6EFD               	movwf	tosl,c
 25892   0014D0  51ED               	movf	(??_mnsProcessMessage+29)& (0+255),w,b
 25893   0014D2  6EFE               	movwf	tosh,c
 25894   0014D4  6AFF               	clrf	tosu,c
 25895   0014D6  50FA               	movf	pclath,w,c
 25896   0014D8  0E03               	movlw	3
 25897   0014DA  0012               	return		;indir
 25898   0014DC                     u7749:
 25899   0014DC  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 25900   0014DE  0EE7               	movlw	231
 25901   0014E0  EC81  F040         	call	_sendMessage7
 25902   0014E4  EF60  F005         	goto	l10129
 25903   0014E8                     l10347:
 25904                           
 25905                           ; BSR set to: 5
 25906                           ;../../VLCBlib_PIC/mns.c: 551:             if (m->len < 4) {
 25907   0014E8  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 25908   0014EC  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 25909   0014F0  0E04               	movlw	4
 25910   0014F2  60DF               	cpfslt	indf2,c
 25911   0014F4  EF7E  F00A         	goto	u7751
 25912   0014F8  EF80  F00A         	goto	u7750
 25913   0014FC                     u7751:
 25914   0014FC  EF8F  F00A         	goto	l10355
 25915   001500                     u7750:
 25916   001500                     
 25917                           ; BSR set to: 5
 25918                           ;../../VLCBlib_PIC/mns.c: 552:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 25919   001500  C590  F526         	movff	_nn+1,sendMessage5@data1
 25920   001504  C58F  F527         	movff	_nn,sendMessage5@data2
 25921   001508  0E76               	movlw	118
 25922   00150A  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25923   00150C  0E01               	movlw	1
 25924   00150E  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25925   001510  0E01               	movlw	1
 25926   001512  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25927   001514  0EAF               	movlw	175
 25928   001516  EC96  F040         	call	_sendMessage5
 25929   00151A  EF60  F005         	goto	l10129
 25930   00151E                     l10355:
 25931                           
 25932                           ; BSR set to: 5
 25933                           ;../../VLCBlib_PIC/mns.c: 555:             newMode = m->bytes[2];
 25934   00151E  EE20 F004          	lfsr	2,4
 25935   001522  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25936   001524  26D9               	addwf	fsr2l,f,c
 25937   001526  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25938   001528  22DA               	addwfc	fsr2h,f,c
 25939   00152A  50DF               	movf	indf2,w,c
 25940   00152C  6E5A               	movwf	mnsProcessMessage@newMode^(0+1280),c
 25941   00152E                     
 25942                           ; BSR set to: 5
 25943                           ;../../VLCBlib_PIC/mns.c: 556:             previousNN.word = nn.word;
 25944   00152E  C58F  F58D         	movff	_nn,_previousNN
 25945   001532  C590  F58E         	movff	_nn+1,_previousNN+1
 25946                           
 25947                           ;../../VLCBlib_PIC/mns.c: 558:             switch (newMode) {
 25948   001536  EF32  F00B         	goto	l10421
 25949   00153A                     l10359:
 25950                           
 25951                           ; BSR set to: 5
 25952                           ;../../VLCBlib_PIC/mns.c: 561:                     if (mode_state == MODE_NORMAL) {
 25953   00153A  05A1               	decf	_mode_state& (0+255),w,b
 25954   00153C  A4D8               	btfss	status,2,c
 25955   00153E  EFA3  F00A         	goto	u7761
 25956   001542  EFA5  F00A         	goto	u7760
 25957   001546                     u7761:
 25958   001546  EFED  F005         	goto	l10155
 25959   00154A                     u7760:
 25960   00154A                     
 25961                           ; BSR set to: 5
 25962                           ;../../VLCBlib_PIC/mns.c: 562:                         sendMessage2((newMode == MODE_SET
      +                          UP) ? OPC_RQNN : OPC_NNREL, nn.bytes.hi, nn.bytes.lo);
 25963   00154A  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 25964   00154C  B4D8               	btfsc	status,2,c
 25965   00154E  EFAB  F00A         	goto	u7771
 25966   001552  EFAD  F00A         	goto	u7770
 25967   001556                     u7771:
 25968   001556  EFB1  F00A         	goto	l10365
 25969   00155A                     u7770:
 25970   00155A                     
 25971                           ; BSR set to: 5
 25972   00155A  0E51               	movlw	81
 25973   00155C  6E57               	movwf	_mnsProcessMessage$4430^(0+1280),c
 25974   00155E  EFB3  F00A         	goto	l10367
 25975   001562                     l10365:
 25976                           
 25977                           ; BSR set to: 5
 25978   001562  0E50               	movlw	80
 25979   001564  6E57               	movwf	_mnsProcessMessage$4430^(0+1280),c
 25980   001566                     l10367:
 25981                           
 25982                           ; BSR set to: 5
 25983   001566  C590  F526         	movff	_nn+1,sendMessage2@data1
 25984   00156A  C58F  F527         	movff	_nn,sendMessage2@data2
 25985   00156E  5057               	movf	_mnsProcessMessage$4430^(0+1280),w,c
 25986   001570  EC6C  F040         	call	_sendMessage2
 25987   001574                     
 25988                           ;../../VLCBlib_PIC/mns.c: 563:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 25989   001574  C590  F526         	movff	_nn+1,sendMessage5@data1
 25990   001578  C58F  F527         	movff	_nn,sendMessage5@data2
 25991   00157C  0E76               	movlw	118
 25992   00157E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25993   001580  0E01               	movlw	1
 25994   001582  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25995   001584  0E00               	movlw	0
 25996   001586  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25997   001588  0EAF               	movlw	175
 25998   00158A  EC96  F040         	call	_sendMessage5
 25999   00158E                     
 26000                           ;../../VLCBlib_PIC/mns.c: 564:                         nn.bytes.lo = nn.bytes.hi = 0;
 26001   00158E  0105               	movlb	5	; () banked
 26002   001590  6B90               	clrf	(_nn+1)& (0+255),b
 26003   001592  6B8F               	clrf	_nn& (0+255),b
 26004   001594                     
 26005                           ; BSR set to: 5
 26006                           ;../../VLCBlib_PIC/mns.c: 565:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC +
      +                          1, nn.bytes.hi);
 26007   001594  0EFD               	movlw	253
 26008   001596  6E0E               	movwf	writeNVM@index^(0+1280),c
 26009   001598  0E03               	movlw	3
 26010   00159A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 26011   00159C  0E00               	movlw	0
 26012   00159E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 26013   0015A0  C590  F511         	movff	_nn+1,writeNVM@value
 26014   0015A4  0E00               	movlw	0
 26015   0015A6  EC47  F03C         	call	_writeNVM
 26016   0015AA                     
 26017                           ;../../VLCBlib_PIC/mns.c: 566:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC, 
      +                          nn.bytes.lo);
 26018   0015AA  0EFC               	movlw	252
 26019   0015AC  6E0E               	movwf	writeNVM@index^(0+1280),c
 26020   0015AE  0E03               	movlw	3
 26021   0015B0  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 26022   0015B2  0E00               	movlw	0
 26023   0015B4  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 26024   0015B6  C58F  F511         	movff	_nn,writeNVM@value
 26025   0015BA  0E00               	movlw	0
 26026   0015BC  EC47  F03C         	call	_writeNVM
 26027                           
 26028                           ;../../VLCBlib_PIC/mns.c: 568:                         mode_state = (newMode == MODE_SET
      +                          UP) ? MODE_SETUP : MODE_UNINITIALISED;
 26029   0015C0  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 26030   0015C2  B4D8               	btfsc	status,2,c
 26031   0015C4  EFE6  F00A         	goto	u7781
 26032   0015C8  EFE8  F00A         	goto	u7780
 26033   0015CC                     u7781:
 26034   0015CC  EFEC  F00A         	goto	l1350
 26035   0015D0                     u7780:
 26036   0015D0  0105               	movlb	5	; () banked
 26037   0015D2  69A1               	setf	_mode_state& (0+255),b
 26038   0015D4  EFEE  F00A         	goto	l10379
 26039   0015D8                     l1350:
 26040   0015D8  0105               	movlb	5	; () banked
 26041   0015DA  6BA1               	clrf	_mode_state& (0+255),b
 26042   0015DC                     l10379:
 26043                           
 26044                           ; BSR set to: 5
 26045                           ;../../VLCBlib_PIC/mns.c: 569:                         setupModePreviousMode = MODE_NORM
      +                          AL;
 26046   0015DC  0E01               	movlw	1
 26047   0015DE  6F9E               	movwf	_setupModePreviousMode& (0+255),b
 26048   0015E0  EF5E  F005         	goto	l10127
 26049   0015E4                     l10387:
 26050                           
 26051                           ; BSR set to: 5
 26052                           ;../../VLCBlib_PIC/mns.c: 576:                     mode_flags |= 4;
 26053   0015E4  85A4               	bsf	_mode_flags& (0+255),2,b
 26054   0015E6                     
 26055                           ; BSR set to: 5
 26056                           ;../../VLCBlib_PIC/mns.c: 577:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 26057   0015E6  C590  F526         	movff	_nn+1,sendMessage5@data1
 26058   0015EA  C58F  F527         	movff	_nn,sendMessage5@data2
 26059   0015EE  0E76               	movlw	118
 26060   0015F0  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26061   0015F2  0E01               	movlw	1
 26062   0015F4  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26063   0015F6  0E00               	movlw	0
 26064   0015F8  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26065   0015FA  0EAF               	movlw	175
 26066   0015FC  EC96  F040         	call	_sendMessage5
 26067   001600  EF60  F005         	goto	l10129
 26068   001604                     l10395:
 26069                           
 26070                           ; BSR set to: 5
 26071                           ;../../VLCBlib_PIC/mns.c: 580:                     mode_flags &= ~4;
 26072   001604  95A4               	bcf	_mode_flags& (0+255),2,b
 26073   001606                     
 26074                           ; BSR set to: 5
 26075                           ;../../VLCBlib_PIC/mns.c: 581:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 26076   001606  C590  F526         	movff	_nn+1,sendMessage5@data1
 26077   00160A  C58F  F527         	movff	_nn,sendMessage5@data2
 26078   00160E  0E76               	movlw	118
 26079   001610  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26080   001612  0E01               	movlw	1
 26081   001614  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26082   001616  0E00               	movlw	0
 26083   001618  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26084   00161A  0EAF               	movlw	175
 26085   00161C  EC96  F040         	call	_sendMessage5
 26086   001620  EF60  F005         	goto	l10129
 26087   001624                     l10403:
 26088                           
 26089                           ; BSR set to: 5
 26090                           ;../../VLCBlib_PIC/mns.c: 584:                     mode_flags |= 8;
 26091   001624  87A4               	bsf	_mode_flags& (0+255),3,b
 26092   001626                     
 26093                           ; BSR set to: 5
 26094                           ;../../VLCBlib_PIC/mns.c: 585:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 26095   001626  C590  F526         	movff	_nn+1,sendMessage5@data1
 26096   00162A  C58F  F527         	movff	_nn,sendMessage5@data2
 26097   00162E  0E76               	movlw	118
 26098   001630  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26099   001632  0E01               	movlw	1
 26100   001634  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26101   001636  0E00               	movlw	0
 26102   001638  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26103   00163A  0EAF               	movlw	175
 26104   00163C  EC96  F040         	call	_sendMessage5
 26105   001640  EF60  F005         	goto	l10129
 26106   001644                     l10411:
 26107                           
 26108                           ; BSR set to: 5
 26109                           ;../../VLCBlib_PIC/mns.c: 588:                     mode_flags &= ~8;
 26110   001644  97A4               	bcf	_mode_flags& (0+255),3,b
 26111   001646                     
 26112                           ; BSR set to: 5
 26113                           ;../../VLCBlib_PIC/mns.c: 589:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 26114   001646  C590  F526         	movff	_nn+1,sendMessage5@data1
 26115   00164A  C58F  F527         	movff	_nn,sendMessage5@data2
 26116   00164E  0E76               	movlw	118
 26117   001650  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26118   001652  0E01               	movlw	1
 26119   001654  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26120   001656  0E00               	movlw	0
 26121   001658  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26122   00165A  0EAF               	movlw	175
 26123   00165C  EC96  F040         	call	_sendMessage5
 26124   001660  EF60  F005         	goto	l10129
 26125   001664                     l10421:
 26126                           
 26127                           ; BSR set to: 5
 26128   001664  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 26129                           
 26130                           ; Switch size 1, requested type "simple"
 26131                           ; Number of cases is 6, Range of values is 0 to 255
 26132                           ; switch strategies available:
 26133                           ; Name         Instructions Cycles
 26134                           ; simple_byte           19    10 (average)
 26135                           ;	Chosen strategy is simple_byte
 26136   001666  0A00               	xorlw	0	; case 0
 26137   001668  B4D8               	btfsc	status,2,c
 26138   00166A  EF9D  F00A         	goto	l10359
 26139   00166E  0A0C               	xorlw	12	; case 12
 26140   001670  B4D8               	btfsc	status,2,c
 26141   001672  EFF2  F00A         	goto	l10387
 26142   001676  0A01               	xorlw	1	; case 13
 26143   001678  B4D8               	btfsc	status,2,c
 26144   00167A  EF02  F00B         	goto	l10395
 26145   00167E  0A1D               	xorlw	29	; case 16
 26146   001680  B4D8               	btfsc	status,2,c
 26147   001682  EF12  F00B         	goto	l10403
 26148   001686  0A01               	xorlw	1	; case 17
 26149   001688  B4D8               	btfsc	status,2,c
 26150   00168A  EF22  F00B         	goto	l10411
 26151   00168E  0AEE               	xorlw	238	; case 255
 26152   001690  B4D8               	btfsc	status,2,c
 26153   001692  EF9D  F00A         	goto	l10359
 26154   001696  EFED  F005         	goto	l10155
 26155   00169A                     l1359:
 26156                           
 26157                           ; BSR set to: 5
 26158   00169A  00FF               	reset		;# 
 26159   00169C  EF60  F005         	goto	l10129
 26160   0016A0                     l10433:
 26161                           
 26162                           ; BSR set to: 5
 26163   0016A0  EE20 F001          	lfsr	2,1
 26164   0016A4  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 26165   0016A6  26D9               	addwf	fsr2l,f,c
 26166   0016A8  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 26167   0016AA  22DA               	addwfc	fsr2h,f,c
 26168   0016AC  50DF               	movf	indf2,w,c
 26169   0016AE  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 26170   0016B0  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 26171                           
 26172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26173                           ; Switch size 1, requested type "simple"
 26174                           ; Number of cases is 1, Range of values is 0 to 0
 26175                           ; switch strategies available:
 26176                           ; Name         Instructions Cycles
 26177                           ; simple_byte            4     3 (average)
 26178                           ;	Chosen strategy is simple_byte
 26179   0016B2  51D1               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 26180   0016B4  0A00               	xorlw	0	; case 0
 26181   0016B6  B4D8               	btfsc	status,2,c
 26182   0016B8  EF60  F00B         	goto	l11621
 26183   0016BC  EFED  F005         	goto	l10155
 26184   0016C0                     l11621:
 26185                           
 26186                           ; BSR set to: 5
 26187                           ; Switch size 1, requested type "simple"
 26188                           ; Number of cases is 6, Range of values is 79 to 135
 26189                           ; switch strategies available:
 26190                           ; Name         Instructions Cycles
 26191                           ; simple_byte           19    10 (average)
 26192                           ;	Chosen strategy is simple_byte
 26193   0016C0  51D0               	movf	??_mnsProcessMessage& (0+255),w,b
 26194   0016C2  0A4F               	xorlw	79	; case 79
 26195   0016C4  B4D8               	btfsc	status,2,c
 26196   0016C6  EF2C  F007         	goto	l1319
 26197   0016CA  0A11               	xorlw	17	; case 94
 26198   0016CC  B4D8               	btfsc	status,2,c
 26199   0016CE  EF4D  F00B         	goto	l1359
 26200   0016D2  0A2D               	xorlw	45	; case 115
 26201   0016D4  B4D8               	btfsc	status,2,c
 26202   0016D6  EFAD  F006         	goto	l10229
 26203   0016DA  0A05               	xorlw	5	; case 118
 26204   0016DC  B4D8               	btfsc	status,2,c
 26205   0016DE  EF74  F00A         	goto	l10347
 26206   0016E2  0A0E               	xorlw	14	; case 120
 26207   0016E4  B4D8               	btfsc	status,2,c
 26208   0016E6  EFAB  F008         	goto	l10313
 26209   0016EA  0AFF               	xorlw	255	; case 135
 26210   0016EC  B4D8               	btfsc	status,2,c
 26211   0016EE  EF6B  F007         	goto	l10267
 26212   0016F2  EFED  F005         	goto	l10155
 26213   0016F6                     l1291:
 26214   0016F6  0012               	return		;funcret
 26215   0016F8                     __end_of_mnsProcessMessage:
 26216                           	callstack 0
 26217                           
 26218 ;; *************** function _consumerProcessMessage *****************
 26219 ;; Defined at:
 26220 ;;		line 110 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 26221 ;; Parameters:    Size  Location     Type
 26222 ;;  m               2   83[COMRAM] PTR struct Message
 26223 ;;		 -> poll@m(9), 
 26224 ;; Auto vars:     Size  Location     Type
 26225 ;;  enn             2   88[COMRAM] unsigned short 
 26226 ;;  tableIndex      1   91[COMRAM] unsigned char 
 26227 ;;  ret             1   90[COMRAM] enum E23340
 26228 ;; Return value:  Size  Location     Type
 26229 ;;                  1    wreg      enum E23340
 26230 ;; Registers used:
 26231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26232 ;; Tracked objects:
 26233 ;;		On entry : 0/0
 26234 ;;		On exit  : 0/0
 26235 ;;		Unchanged: 0/0
 26236 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26238 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26239 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26240 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26241 ;;Total ram usage:        9 bytes
 26242 ;; Hardware stack levels used: 1
 26243 ;; Hardware stack levels required when called: 8
 26244 ;; This function calls:
 26245 ;;		_APP_processConsumedEvent
 26246 ;;		_consumerEventCheckLen
 26247 ;;		_findEvent
 26248 ;;		_isConsumedEvent
 26249 ;;		_sendMessage7
 26250 ;; This function is called by:
 26251 ;;		_poll
 26252 ;; This function uses a non-reentrant model
 26253 ;;
 26254                           
 26255                           	psect	text19
 26256   003CB8                     __ptext19:
 26257                           	callstack 0
 26258   003CB8                     _consumerProcessMessage:
 26259                           	callstack 117
 26260   003CB8                     
 26261                           ;../../VLCBlib_PIC/event_consumer_simple.c: 111:     Processed ret;;../../VLCBlib_PIC/ev
      +                          ent_consumer_simple.c: 112:     uint8_t tableIndex;;../../VLCBlib_PIC/event_consumer_sim
      +                          ple.c: 113:     uint16_t enn;;../../VLCBlib_PIC/event_consumer_simple.c: 116:     if (m-
      +                          >opc == OPC_MODE) {
 26262   003CB8  EE20 F001          	lfsr	2,1
 26263   003CBC  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26264   003CBE  26D9               	addwf	fsr2l,f,c
 26265   003CC0  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26266   003CC2  22DA               	addwfc	fsr2h,f,c
 26267   003CC4  0E76               	movlw	118
 26268   003CC6  18DE               	xorwf	postinc2,w,c
 26269   003CC8  A4D8               	btfss	status,2,c
 26270   003CCA  EF69  F01E         	goto	u6921
 26271   003CCE  EF6B  F01E         	goto	u6920
 26272   003CD2                     u6921:
 26273   003CD2  EFC4  F01E         	goto	l9711
 26274   003CD6                     u6920:
 26275   003CD6                     
 26276                           ;../../VLCBlib_PIC/event_consumer_simple.c: 117:         if (consumerEventCheckLen(m, 4)
      +                           == PROCESSED) return PROCESSED;
 26277   003CD6  C554  F531         	movff	consumerProcessMessage@m,consumerEventCheckLen@m
 26278   003CDA  C555  F532         	movff	consumerProcessMessage@m+1,consumerEventCheckLen@m+1
 26279   003CDE  0E04               	movlw	4
 26280   003CE0  6E33               	movwf	consumerEventCheckLen@needed^(0+1280),c
 26281   003CE2  EC5A  F041         	call	_consumerEventCheckLen	;wreg free
 26282   003CE6  06E8               	decf	wreg,f,c
 26283   003CE8  A4D8               	btfss	status,2,c
 26284   003CEA  EF79  F01E         	goto	u6931
 26285   003CEE  EF7B  F01E         	goto	u6930
 26286   003CF2                     u6931:
 26287   003CF2  EF7E  F01E         	goto	l9685
 26288   003CF6                     u6930:
 26289   003CF6                     l9681:
 26290   003CF6  0E01               	movlw	1
 26291   003CF8  EFCE  F01F         	goto	l779
 26292   003CFC                     l9685:
 26293                           
 26294                           ;../../VLCBlib_PIC/event_consumer_simple.c: 118:         if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 26295   003CFC  EE20 F002          	lfsr	2,2
 26296   003D00  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26297   003D02  26D9               	addwf	fsr2l,f,c
 26298   003D04  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26299   003D06  22DA               	addwfc	fsr2h,f,c
 26300   003D08  50DE               	movf	postinc2,w,c
 26301   003D0A  0105               	movlb	5	; () banked
 26302   003D0C  1990               	xorwf	(_nn+1)& (0+255),w,b
 26303   003D0E  A4D8               	btfss	status,2,c
 26304   003D10  EF8C  F01E         	goto	u6941
 26305   003D14  EF8E  F01E         	goto	u6940
 26306   003D18                     u6941:
 26307   003D18  EFC1  F01E         	goto	l9707
 26308   003D1C                     u6940:
 26309   003D1C                     
 26310                           ; BSR set to: 5
 26311   003D1C  EE20 F003          	lfsr	2,3
 26312   003D20  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26313   003D22  26D9               	addwf	fsr2l,f,c
 26314   003D24  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26315   003D26  22DA               	addwfc	fsr2h,f,c
 26316   003D28  518F               	movf	_nn& (0+255),w,b
 26317   003D2A  18DE               	xorwf	postinc2,w,c
 26318   003D2C  A4D8               	btfss	status,2,c
 26319   003D2E  EF9B  F01E         	goto	u6951
 26320   003D32  EF9D  F01E         	goto	u6950
 26321   003D36                     u6951:
 26322   003D36  EFC1  F01E         	goto	l9707
 26323   003D3A                     u6950:
 26324   003D3A                     
 26325                           ; BSR set to: 5
 26326                           ;../../VLCBlib_PIC/event_consumer_simple.c: 119:             if (m->bytes[2] == MODE_EVE
      +                          NT_ACK_ON) {
 26327   003D3A  EE20 F004          	lfsr	2,4
 26328   003D3E  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26329   003D40  26D9               	addwf	fsr2l,f,c
 26330   003D42  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26331   003D44  22DA               	addwfc	fsr2h,f,c
 26332   003D46  0E0A               	movlw	10
 26333   003D48  18DE               	xorwf	postinc2,w,c
 26334   003D4A  A4D8               	btfss	status,2,c
 26335   003D4C  EFAA  F01E         	goto	u6961
 26336   003D50  EFAC  F01E         	goto	u6960
 26337   003D54                     u6961:
 26338   003D54  EFAF  F01E         	goto	l9699
 26339   003D58                     u6960:
 26340   003D58                     
 26341                           ; BSR set to: 5
 26342                           ;../../VLCBlib_PIC/event_consumer_simple.c: 121:                 mode_flags |= 2;
 26343   003D58  83A4               	bsf	_mode_flags& (0+255),1,b
 26344   003D5A  EF7B  F01E         	goto	l9681
 26345   003D5E                     l9699:
 26346                           
 26347                           ; BSR set to: 5
 26348   003D5E  EE20 F004          	lfsr	2,4
 26349   003D62  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26350   003D64  26D9               	addwf	fsr2l,f,c
 26351   003D66  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26352   003D68  22DA               	addwfc	fsr2h,f,c
 26353   003D6A  0E0B               	movlw	11
 26354   003D6C  18DE               	xorwf	postinc2,w,c
 26355   003D6E  A4D8               	btfss	status,2,c
 26356   003D70  EFBC  F01E         	goto	u6971
 26357   003D74  EFBE  F01E         	goto	u6970
 26358   003D78                     u6971:
 26359   003D78  EFC1  F01E         	goto	l9707
 26360   003D7C                     u6970:
 26361   003D7C                     
 26362                           ; BSR set to: 5
 26363                           ;../../VLCBlib_PIC/event_consumer_simple.c: 125:                 mode_flags &= ~2;
 26364   003D7C  93A4               	bcf	_mode_flags& (0+255),1,b
 26365   003D7E  EF7B  F01E         	goto	l9681
 26366   003D82                     l9707:
 26367                           
 26368                           ;../../VLCBlib_PIC/event_consumer_simple.c: 129:         return NOT_PROCESSED;
 26369   003D82  0E00               	movlw	0
 26370   003D84  EFCE  F01F         	goto	l779
 26371   003D88                     l9711:
 26372                           
 26373                           ;../../VLCBlib_PIC/event_consumer_simple.c: 133:     if (m->len < 5) return NOT_PROCESSE
      +                          D;
 26374   003D88  C554  F4D9         	movff	consumerProcessMessage@m,fsr2l
 26375   003D8C  C555  F4DA         	movff	consumerProcessMessage@m+1,fsr2h
 26376   003D90  0E05               	movlw	5
 26377   003D92  60DF               	cpfslt	indf2,c
 26378   003D94  EFCE  F01E         	goto	u6981
 26379   003D98  EFD0  F01E         	goto	u6980
 26380   003D9C                     u6981:
 26381   003D9C  EFD2  F01E         	goto	l9717
 26382   003DA0                     u6980:
 26383   003DA0  EFC1  F01E         	goto	l9707
 26384   003DA4                     l9717:
 26385                           
 26386                           ;../../VLCBlib_PIC/event_consumer_simple.c: 135:     enn = ((uint16_t)m->bytes[0])*256+m
      +                          ->bytes[1];
 26387   003DA4  EE20 F003          	lfsr	2,3
 26388   003DA8  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26389   003DAA  26D9               	addwf	fsr2l,f,c
 26390   003DAC  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26391   003DAE  22DA               	addwfc	fsr2h,f,c
 26392   003DB0  50DF               	movf	indf2,w,c
 26393   003DB2  6E56               	movwf	??_consumerProcessMessage^(0+1280),c
 26394   003DB4  EE20 F002          	lfsr	2,2
 26395   003DB8  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26396   003DBA  26D9               	addwf	fsr2l,f,c
 26397   003DBC  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26398   003DBE  22DA               	addwfc	fsr2h,f,c
 26399   003DC0  50DF               	movf	indf2,w,c
 26400   003DC2  6E57               	movwf	(??_consumerProcessMessage+1)^(0+1280),c
 26401   003DC4  5056               	movf	??_consumerProcessMessage^(0+1280),w,c
 26402   003DC6  6E59               	movwf	consumerProcessMessage@enn^(0+1280),c
 26403   003DC8  C557  F55A         	movff	??_consumerProcessMessage+1,consumerProcessMessage@enn+1
 26404                           
 26405                           ;../../VLCBlib_PIC/event_consumer_simple.c: 137:     switch (m->opc) {
 26406   003DCC  EFF0  F01E         	goto	l9729
 26407   003DD0                     l788:
 26408   003DD0                     l9719:
 26409                           
 26410                           ;../../VLCBlib_PIC/event_consumer_simple.c: 144:   enn = 0;
 26411   003DD0  0E00               	movlw	0
 26412   003DD2  6E5A               	movwf	(consumerProcessMessage@enn+1)^(0+1280),c
 26413   003DD4  0E00               	movlw	0
 26414   003DD6  6E59               	movwf	consumerProcessMessage@enn^(0+1280),c
 26415   003DD8  EF43  F01F         	goto	l9731
 26416   003DDC                     l793:
 26417                           
 26418                           ;../../VLCBlib_PIC/event_consumer_simple.c: 152:             break;
 26419   003DDC  EF43  F01F         	goto	l9731
 26420   003DE0                     l9729:
 26421   003DE0  EE20 F001          	lfsr	2,1
 26422   003DE4  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26423   003DE6  26D9               	addwf	fsr2l,f,c
 26424   003DE8  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26425   003DEA  22DA               	addwfc	fsr2h,f,c
 26426   003DEC  50DF               	movf	indf2,w,c
 26427   003DEE  6E56               	movwf	??_consumerProcessMessage^(0+1280),c
 26428   003DF0  6A57               	clrf	(??_consumerProcessMessage+1)^(0+1280),c
 26429                           
 26430                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26431                           ; Switch size 1, requested type "simple"
 26432                           ; Number of cases is 1, Range of values is 0 to 0
 26433                           ; switch strategies available:
 26434                           ; Name         Instructions Cycles
 26435                           ; simple_byte            4     3 (average)
 26436                           ;	Chosen strategy is simple_byte
 26437   003DF2  5057               	movf	(??_consumerProcessMessage+1)^(0+1280),w,c
 26438   003DF4  0A00               	xorlw	0	; case 0
 26439   003DF6  B4D8               	btfsc	status,2,c
 26440   003DF8  EF00  F01F         	goto	l11623
 26441   003DFC  EFC1  F01E         	goto	l9707
 26442   003E00                     l11623:
 26443                           
 26444                           ; Switch size 1, requested type "simple"
 26445                           ; Number of cases is 16, Range of values is 144 to 249
 26446                           ; switch strategies available:
 26447                           ; Name         Instructions Cycles
 26448                           ; simple_byte           49    25 (average)
 26449                           ;	Chosen strategy is simple_byte
 26450   003E00  5056               	movf	??_consumerProcessMessage^(0+1280),w,c
 26451   003E02  0A90               	xorlw	144	; case 144
 26452   003E04  B4D8               	btfsc	status,2,c
 26453   003E06  EFEE  F01E         	goto	l793
 26454   003E0A  0A01               	xorlw	1	; case 145
 26455   003E0C  B4D8               	btfsc	status,2,c
 26456   003E0E  EFEE  F01E         	goto	l793
 26457   003E12  0A09               	xorlw	9	; case 152
 26458   003E14  B4D8               	btfsc	status,2,c
 26459   003E16  EFE8  F01E         	goto	l788
 26460   003E1A  0A01               	xorlw	1	; case 153
 26461   003E1C  B4D8               	btfsc	status,2,c
 26462   003E1E  EFE8  F01E         	goto	l788
 26463   003E22  0A29               	xorlw	41	; case 176
 26464   003E24  B4D8               	btfsc	status,2,c
 26465   003E26  EF43  F01F         	goto	l9731
 26466   003E2A  0A01               	xorlw	1	; case 177
 26467   003E2C  B4D8               	btfsc	status,2,c
 26468   003E2E  EF43  F01F         	goto	l9731
 26469   003E32  0A09               	xorlw	9	; case 184
 26470   003E34  B4D8               	btfsc	status,2,c
 26471   003E36  EFE8  F01E         	goto	l9719
 26472   003E3A  0A01               	xorlw	1	; case 185
 26473   003E3C  B4D8               	btfsc	status,2,c
 26474   003E3E  EFE8  F01E         	goto	l9719
 26475   003E42  0A69               	xorlw	105	; case 208
 26476   003E44  B4D8               	btfsc	status,2,c
 26477   003E46  EF43  F01F         	goto	l9731
 26478   003E4A  0A01               	xorlw	1	; case 209
 26479   003E4C  B4D8               	btfsc	status,2,c
 26480   003E4E  EF43  F01F         	goto	l9731
 26481   003E52  0A09               	xorlw	9	; case 216
 26482   003E54  B4D8               	btfsc	status,2,c
 26483   003E56  EFE8  F01E         	goto	l9719
 26484   003E5A  0A01               	xorlw	1	; case 217
 26485   003E5C  B4D8               	btfsc	status,2,c
 26486   003E5E  EFE8  F01E         	goto	l9719
 26487   003E62  0A29               	xorlw	41	; case 240
 26488   003E64  B4D8               	btfsc	status,2,c
 26489   003E66  EF43  F01F         	goto	l9731
 26490   003E6A  0A01               	xorlw	1	; case 241
 26491   003E6C  B4D8               	btfsc	status,2,c
 26492   003E6E  EF43  F01F         	goto	l9731
 26493   003E72  0A09               	xorlw	9	; case 248
 26494   003E74  B4D8               	btfsc	status,2,c
 26495   003E76  EFE8  F01E         	goto	l9719
 26496   003E7A  0A01               	xorlw	1	; case 249
 26497   003E7C  B4D8               	btfsc	status,2,c
 26498   003E7E  EFE8  F01E         	goto	l9719
 26499   003E82  EFC1  F01E         	goto	l9707
 26500   003E86                     l9731:
 26501                           
 26502                           ;../../VLCBlib_PIC/event_consumer_simple.c: 172:     tableIndex = findEvent(enn, ((uint1
      +                          6_t)m->bytes[2])*256+m->bytes[3]);
 26503   003E86  C559  F522         	movff	consumerProcessMessage@enn,findEvent@nodeNumber
 26504   003E8A  C55A  F523         	movff	consumerProcessMessage@enn+1,findEvent@nodeNumber+1
 26505   003E8E  EE20 F005          	lfsr	2,5
 26506   003E92  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26507   003E94  26D9               	addwf	fsr2l,f,c
 26508   003E96  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26509   003E98  22DA               	addwfc	fsr2h,f,c
 26510   003E9A  50DF               	movf	indf2,w,c
 26511   003E9C  6E56               	movwf	??_consumerProcessMessage^(0+1280),c
 26512   003E9E  EE20 F004          	lfsr	2,4
 26513   003EA2  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26514   003EA4  26D9               	addwf	fsr2l,f,c
 26515   003EA6  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26516   003EA8  22DA               	addwfc	fsr2h,f,c
 26517   003EAA  50DF               	movf	indf2,w,c
 26518   003EAC  6E57               	movwf	(??_consumerProcessMessage+1)^(0+1280),c
 26519   003EAE  5056               	movf	??_consumerProcessMessage^(0+1280),w,c
 26520   003EB0  6E24               	movwf	findEvent@eventNumber^(0+1280),c
 26521   003EB2  C557  F525         	movff	??_consumerProcessMessage+1,findEvent@eventNumber+1
 26522   003EB6  ECF2  F031         	call	_findEvent	;wreg free
 26523   003EBA  6E5C               	movwf	consumerProcessMessage@tableIndex^(0+1280),c
 26524   003EBC                     
 26525                           ;../../VLCBlib_PIC/event_consumer_simple.c: 173:     if (tableIndex == 0xff) return NOT_
      +                          PROCESSED;
 26526   003EBC  285C               	incf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26527   003EBE  A4D8               	btfss	status,2,c
 26528   003EC0  EF64  F01F         	goto	u6991
 26529   003EC4  EF66  F01F         	goto	u6990
 26530   003EC8                     u6991:
 26531   003EC8  EF68  F01F         	goto	l9739
 26532   003ECC                     u6990:
 26533   003ECC  EFC1  F01E         	goto	l9707
 26534   003ED0                     l9739:
 26535                           
 26536                           ;../../VLCBlib_PIC/event_consumer_simple.c: 175:     if (!isConsumedEvent(tableIndex)) {
 26537   003ED0  505C               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26538   003ED2  EC7E  F041         	call	_isConsumedEvent
 26539   003ED6  0900               	iorlw	0
 26540   003ED8  A4D8               	btfss	status,2,c
 26541   003EDA  EF71  F01F         	goto	u7001
 26542   003EDE  EF73  F01F         	goto	u7000
 26543   003EE2                     u7001:
 26544   003EE2  EF75  F01F         	goto	l805
 26545   003EE6                     u7000:
 26546   003EE6  EFC1  F01E         	goto	l9707
 26547   003EEA                     l805:
 26548                           
 26549                           ;../../VLCBlib_PIC/event_consumer_simple.c: 183:     if ((mode_flags & 2) && (isConsumed
      +                          Event(tableIndex))) {
 26550   003EEA  0105               	movlb	5	; () banked
 26551   003EEC  A3A4               	btfss	_mode_flags& (0+255),1,b
 26552   003EEE  EF7B  F01F         	goto	u7011
 26553   003EF2  EF7D  F01F         	goto	u7010
 26554   003EF6                     u7011:
 26555   003EF6  EFBA  F01F         	goto	l9751
 26556   003EFA                     u7010:
 26557   003EFA                     
 26558                           ; BSR set to: 5
 26559   003EFA  505C               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26560   003EFC  EC7E  F041         	call	_isConsumedEvent
 26561   003F00  0900               	iorlw	0
 26562   003F02  B4D8               	btfsc	status,2,c
 26563   003F04  EF86  F01F         	goto	u7021
 26564   003F08  EF88  F01F         	goto	u7020
 26565   003F0C                     u7021:
 26566   003F0C  EFBA  F01F         	goto	l9751
 26567   003F10                     u7020:
 26568   003F10                     
 26569                           ;../../VLCBlib_PIC/event_consumer_simple.c: 185:         sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, (uint8_t)(m->opc), m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]
      +                          );
 26570   003F10  C590  F526         	movff	_nn+1,sendMessage7@data1
 26571   003F14  C58F  F527         	movff	_nn,sendMessage7@data2
 26572   003F18  EE20 F001          	lfsr	2,1
 26573   003F1C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26574   003F1E  26D9               	addwf	fsr2l,f,c
 26575   003F20  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26576   003F22  22DA               	addwfc	fsr2h,f,c
 26577   003F24  50DF               	movf	indf2,w,c
 26578   003F26  6E28               	movwf	sendMessage7@data3^(0+1280),c
 26579   003F28  EE20 F002          	lfsr	2,2
 26580   003F2C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26581   003F2E  26D9               	addwf	fsr2l,f,c
 26582   003F30  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26583   003F32  22DA               	addwfc	fsr2h,f,c
 26584   003F34  50DF               	movf	indf2,w,c
 26585   003F36  6E29               	movwf	sendMessage7@data4^(0+1280),c
 26586   003F38  EE20 F003          	lfsr	2,3
 26587   003F3C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26588   003F3E  26D9               	addwf	fsr2l,f,c
 26589   003F40  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26590   003F42  22DA               	addwfc	fsr2h,f,c
 26591   003F44  50DF               	movf	indf2,w,c
 26592   003F46  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 26593   003F48  EE20 F004          	lfsr	2,4
 26594   003F4C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26595   003F4E  26D9               	addwf	fsr2l,f,c
 26596   003F50  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26597   003F52  22DA               	addwfc	fsr2h,f,c
 26598   003F54  50DF               	movf	indf2,w,c
 26599   003F56  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 26600   003F58  EE20 F005          	lfsr	2,5
 26601   003F5C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26602   003F5E  26D9               	addwf	fsr2l,f,c
 26603   003F60  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26604   003F62  22DA               	addwfc	fsr2h,f,c
 26605   003F64  50DF               	movf	indf2,w,c
 26606   003F66  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 26607   003F68  0EE6               	movlw	230
 26608   003F6A  EC81  F040         	call	_sendMessage7
 26609   003F6E                     
 26610                           ;../../VLCBlib_PIC/event_consumer_simple.c: 187:         consumerDiagnostics[2].asInt++;
 26611   003F6E  0105               	movlb	5	; () banked
 26612   003F70  4BC5               	infsnz	(_consumerDiagnostics+4)& (0+255),f,b
 26613   003F72  2BC6               	incf	(_consumerDiagnostics+5)& (0+255),f,b
 26614   003F74                     l9751:
 26615                           
 26616                           ;../../VLCBlib_PIC/event_consumer_simple.c: 195:     ret = APP_processConsumedEvent(tabl
      +                          eIndex, m);
 26617   003F74  C554  F51C         	movff	consumerProcessMessage@m,APP_processConsumedEvent@m
 26618   003F78  C555  F51D         	movff	consumerProcessMessage@m+1,APP_processConsumedEvent@m+1
 26619   003F7C  505C               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26620   003F7E  EC0E  F02D         	call	_APP_processConsumedEvent
 26621   003F82  6E5B               	movwf	consumerProcessMessage@ret^(0+1280),c
 26622   003F84                     
 26623                           ;../../VLCBlib_PIC/event_consumer_simple.c: 196:     if (ret == PROCESSED) {
 26624   003F84  045B               	decf	consumerProcessMessage@ret^(0+1280),w,c
 26625   003F86  A4D8               	btfss	status,2,c
 26626   003F88  EFC8  F01F         	goto	u7031
 26627   003F8C  EFCA  F01F         	goto	u7030
 26628   003F90                     u7031:
 26629   003F90  EFCD  F01F         	goto	l9757
 26630   003F94                     u7030:
 26631   003F94                     
 26632                           ;../../VLCBlib_PIC/event_consumer_simple.c: 197:         consumerDiagnostics[1].asUint++
      +                          ;
 26633   003F94  0105               	movlb	5	; () banked
 26634   003F96  4BC3               	infsnz	(_consumerDiagnostics+2)& (0+255),f,b
 26635   003F98  2BC4               	incf	(_consumerDiagnostics+3)& (0+255),f,b
 26636   003F9A                     l9757:
 26637                           
 26638                           ;../../VLCBlib_PIC/event_consumer_simple.c: 199:     return ret;
 26639   003F9A  505B               	movf	consumerProcessMessage@ret^(0+1280),w,c
 26640   003F9C                     l779:
 26641   003F9C  0012               	return		;funcret
 26642   003F9E                     __end_of_consumerProcessMessage:
 26643                           	callstack 0
 26644                           
 26645 ;; *************** function _canProcessMessage *****************
 26646 ;; Defined at:
 26647 ;;		line 411 in file "../../VLCBlib_PIC/can18_can_2.c"
 26648 ;; Parameters:    Size  Location     Type
 26649 ;;  m               2   83[COMRAM] PTR struct Message
 26650 ;;		 -> poll@m(9), 
 26651 ;; Auto vars:     Size  Location     Type
 26652 ;;		None
 26653 ;; Return value:  Size  Location     Type
 26654 ;;                  1    wreg      enum E23507
 26655 ;; Registers used:
 26656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26657 ;; Tracked objects:
 26658 ;;		On entry : 0/0
 26659 ;;		On exit  : 0/0
 26660 ;;		Unchanged: 0/0
 26661 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26664 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26665 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26666 ;;Total ram usage:        4 bytes
 26667 ;; Hardware stack levels used: 1
 26668 ;; Hardware stack levels required when called: 6
 26669 ;; This function calls:
 26670 ;;		_sendMessage5
 26671 ;; This function is called by:
 26672 ;;		_poll
 26673 ;; This function uses a non-reentrant model
 26674 ;;
 26675                           
 26676                           	psect	text20
 26677   005CE4                     __ptext20:
 26678                           	callstack 0
 26679   005CE4                     _canProcessMessage:
 26680                           	callstack 119
 26681   005CE4                     
 26682                           ;../../VLCBlib_PIC/can18_can_2.c: 413:     if (m->len < 3) return NOT_PROCESSED;
 26683   005CE4  C554  F4D9         	movff	canProcessMessage@m,fsr2l
 26684   005CE8  C555  F4DA         	movff	canProcessMessage@m+1,fsr2h
 26685   005CEC  0E03               	movlw	3
 26686   005CEE  60DF               	cpfslt	indf2,c
 26687   005CF0  EF7C  F02E         	goto	u6821
 26688   005CF4  EF7E  F02E         	goto	u6820
 26689   005CF8                     u6821:
 26690   005CF8  EF81  F02E         	goto	l9559
 26691   005CFC                     u6820:
 26692   005CFC                     l9555:
 26693   005CFC  0E00               	movlw	0
 26694   005CFE  EFDD  F02E         	goto	l602
 26695   005D02                     l9559:
 26696                           
 26697                           ;../../VLCBlib_PIC/can18_can_2.c: 414:     if (m->bytes[0] != nn.bytes.hi) return NOT_PR
      +                          OCESSED;
 26698   005D02  EE20 F002          	lfsr	2,2
 26699   005D06  5054               	movf	canProcessMessage@m^(0+1280),w,c
 26700   005D08  26D9               	addwf	fsr2l,f,c
 26701   005D0A  5055               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 26702   005D0C  22DA               	addwfc	fsr2h,f,c
 26703   005D0E  50DE               	movf	postinc2,w,c
 26704   005D10  0105               	movlb	5	; () banked
 26705   005D12  1990               	xorwf	(_nn+1)& (0+255),w,b
 26706   005D14  B4D8               	btfsc	status,2,c
 26707   005D16  EF8F  F02E         	goto	u6831
 26708   005D1A  EF91  F02E         	goto	u6830
 26709   005D1E                     u6831:
 26710   005D1E  EF93  F02E         	goto	l9565
 26711   005D22                     u6830:
 26712   005D22  EF7E  F02E         	goto	l9555
 26713   005D26                     l9565:
 26714                           
 26715                           ; BSR set to: 5
 26716                           ;../../VLCBlib_PIC/can18_can_2.c: 415:     if (m->bytes[1] != nn.bytes.lo) return NOT_PR
      +                          OCESSED;
 26717   005D26  EE20 F003          	lfsr	2,3
 26718   005D2A  5054               	movf	canProcessMessage@m^(0+1280),w,c
 26719   005D2C  26D9               	addwf	fsr2l,f,c
 26720   005D2E  5055               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 26721   005D30  22DA               	addwfc	fsr2h,f,c
 26722   005D32  518F               	movf	_nn& (0+255),w,b
 26723   005D34  18DE               	xorwf	postinc2,w,c
 26724   005D36  B4D8               	btfsc	status,2,c
 26725   005D38  EFA0  F02E         	goto	u6841
 26726   005D3C  EFA2  F02E         	goto	u6840
 26727   005D40                     u6841:
 26728   005D40  EFC2  F02E         	goto	l9589
 26729   005D44                     u6840:
 26730   005D44  EF7E  F02E         	goto	l9555
 26731   005D48                     l9571:
 26732                           
 26733                           ;../../VLCBlib_PIC/can18_can_2.c: 421:             return PROCESSED;
 26734   005D48  0E01               	movlw	1
 26735   005D4A  EFDD  F02E         	goto	l602
 26736   005D4E                     l9575:
 26737                           
 26738                           ; BSR set to: 5
 26739                           ;../../VLCBlib_PIC/can18_can_2.c: 423:             if (m->len < 4) {
 26740   005D4E  C554  F4D9         	movff	canProcessMessage@m,fsr2l
 26741   005D52  C555  F4DA         	movff	canProcessMessage@m+1,fsr2h
 26742   005D56  0E04               	movlw	4
 26743   005D58  60DF               	cpfslt	indf2,c
 26744   005D5A  EFB1  F02E         	goto	u6851
 26745   005D5E  EFB3  F02E         	goto	u6850
 26746   005D62                     u6851:
 26747   005D62  EFA4  F02E         	goto	l9571
 26748   005D66                     u6850:
 26749   005D66                     
 26750                           ; BSR set to: 5
 26751                           ;../../VLCBlib_PIC/can18_can_2.c: 425:                 sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_CANID, SERVICE_ID_MNS, CMDERR_INV_CMD);
 26752   005D66  C590  F526         	movff	_nn+1,sendMessage5@data1
 26753   005D6A  C58F  F527         	movff	_nn,sendMessage5@data2
 26754   005D6E  0E75               	movlw	117
 26755   005D70  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26756   005D72  0E01               	movlw	1
 26757   005D74  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26758   005D76  0E01               	movlw	1
 26759   005D78  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26760   005D7A  0EAF               	movlw	175
 26761   005D7C  EC96  F040         	call	_sendMessage5
 26762   005D80  EFA4  F02E         	goto	l9571
 26763   005D84                     l9589:
 26764                           
 26765                           ; BSR set to: 5
 26766   005D84  EE20 F001          	lfsr	2,1
 26767   005D88  5054               	movf	canProcessMessage@m^(0+1280),w,c
 26768   005D8A  26D9               	addwf	fsr2l,f,c
 26769   005D8C  5055               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 26770   005D8E  22DA               	addwfc	fsr2h,f,c
 26771   005D90  50DF               	movf	indf2,w,c
 26772   005D92  6E56               	movwf	??_canProcessMessage^(0+1280),c
 26773   005D94  6A57               	clrf	(??_canProcessMessage+1)^(0+1280),c
 26774                           
 26775                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26776                           ; Switch size 1, requested type "simple"
 26777                           ; Number of cases is 1, Range of values is 0 to 0
 26778                           ; switch strategies available:
 26779                           ; Name         Instructions Cycles
 26780                           ; simple_byte            4     3 (average)
 26781                           ;	Chosen strategy is simple_byte
 26782   005D96  5057               	movf	(??_canProcessMessage+1)^(0+1280),w,c
 26783   005D98  0A00               	xorlw	0	; case 0
 26784   005D9A  B4D8               	btfsc	status,2,c
 26785   005D9C  EFD2  F02E         	goto	l11625
 26786   005DA0  EF7E  F02E         	goto	l9555
 26787   005DA4                     l11625:
 26788                           
 26789                           ; BSR set to: 5
 26790                           ; Switch size 1, requested type "simple"
 26791                           ; Number of cases is 2, Range of values is 93 to 117
 26792                           ; switch strategies available:
 26793                           ; Name         Instructions Cycles
 26794                           ; simple_byte            7     4 (average)
 26795                           ;	Chosen strategy is simple_byte
 26796   005DA4  5056               	movf	??_canProcessMessage^(0+1280),w,c
 26797   005DA6  0A5D               	xorlw	93	; case 93
 26798   005DA8  B4D8               	btfsc	status,2,c
 26799   005DAA  EFA4  F02E         	goto	l9571
 26800   005DAE  0A28               	xorlw	40	; case 117
 26801   005DB0  B4D8               	btfsc	status,2,c
 26802   005DB2  EFA7  F02E         	goto	l9575
 26803   005DB6  EF7E  F02E         	goto	l9555
 26804   005DBA                     l602:
 26805   005DBA  0012               	return		;funcret
 26806   005DBC                     __end_of_canProcessMessage:
 26807                           	callstack 0
 26808                           
 26809 ;; *************** function _bootProcessMessage *****************
 26810 ;; Defined at:
 26811 ;;		line 231 in file "../../VLCBlib_PIC/boot.c"
 26812 ;; Parameters:    Size  Location     Type
 26813 ;;  m               2   83[COMRAM] PTR struct Message
 26814 ;;		 -> poll@m(9), 
 26815 ;; Auto vars:     Size  Location     Type
 26816 ;;		None
 26817 ;; Return value:  Size  Location     Type
 26818 ;;                  1    wreg      enum E23340
 26819 ;; Registers used:
 26820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26821 ;; Tracked objects:
 26822 ;;		On entry : 0/0
 26823 ;;		On exit  : 0/0
 26824 ;;		Unchanged: 0/0
 26825 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26826 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26828 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26829 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26830 ;;Total ram usage:        4 bytes
 26831 ;; Hardware stack levels used: 1
 26832 ;; Hardware stack levels required when called: 6
 26833 ;; This function calls:
 26834 ;;		_writeNVM
 26835 ;; This function is called by:
 26836 ;;		_poll
 26837 ;; This function uses a non-reentrant model
 26838 ;;
 26839                           
 26840                           	psect	text21
 26841   006B9A                     __ptext21:
 26842                           	callstack 0
 26843   006B9A                     _bootProcessMessage:
 26844                           	callstack 119
 26845   006B9A                     
 26846                           ;../../VLCBlib_PIC/boot.c: 233:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 26847   006B9A  EE20 F002          	lfsr	2,2
 26848   006B9E  5054               	movf	bootProcessMessage@m^(0+1280),w,c
 26849   006BA0  26D9               	addwf	fsr2l,f,c
 26850   006BA2  5055               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 26851   006BA4  22DA               	addwfc	fsr2h,f,c
 26852   006BA6  50DE               	movf	postinc2,w,c
 26853   006BA8  0105               	movlb	5	; () banked
 26854   006BAA  1990               	xorwf	(_nn+1)& (0+255),w,b
 26855   006BAC  B4D8               	btfsc	status,2,c
 26856   006BAE  EFDB  F035         	goto	u6771
 26857   006BB2  EFDD  F035         	goto	u6770
 26858   006BB6                     u6771:
 26859   006BB6  EFE0  F035         	goto	l9387
 26860   006BBA                     u6770:
 26861   006BBA                     l9383:
 26862                           
 26863                           ; BSR set to: 5
 26864   006BBA  0E00               	movlw	0
 26865   006BBC  EF17  F036         	goto	l323
 26866   006BC0                     l9387:
 26867                           
 26868                           ; BSR set to: 5
 26869                           ;../../VLCBlib_PIC/boot.c: 234:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 26870   006BC0  EE20 F003          	lfsr	2,3
 26871   006BC4  5054               	movf	bootProcessMessage@m^(0+1280),w,c
 26872   006BC6  26D9               	addwf	fsr2l,f,c
 26873   006BC8  5055               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 26874   006BCA  22DA               	addwfc	fsr2h,f,c
 26875   006BCC  518F               	movf	_nn& (0+255),w,b
 26876   006BCE  18DE               	xorwf	postinc2,w,c
 26877   006BD0  B4D8               	btfsc	status,2,c
 26878   006BD2  EFED  F035         	goto	u6781
 26879   006BD6  EFEF  F035         	goto	u6780
 26880   006BDA                     u6781:
 26881   006BDA  EF00  F036         	goto	l9405
 26882   006BDE                     u6780:
 26883   006BDE  EFDD  F035         	goto	l9383
 26884   006BE2                     l9393:
 26885                           
 26886                           ; BSR set to: 5
 26887                           ;../../VLCBlib_PIC/boot.c: 239:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 26888   006BE2  0EFF               	movlw	255
 26889   006BE4  6E0E               	movwf	writeNVM@index^(0+1280),c
 26890   006BE6  0E03               	movlw	3
 26891   006BE8  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 26892   006BEA  0E00               	movlw	0
 26893   006BEC  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 26894   006BEE  0EFF               	movlw	255
 26895   006BF0  6E11               	movwf	writeNVM@value^(0+1280),c
 26896   006BF2  0E00               	movlw	0
 26897   006BF4  EC47  F03C         	call	_writeNVM
 26898   006BF8  00FF               	reset		;# 
 26899   006BFA                     
 26900                           ;../../VLCBlib_PIC/boot.c: 241:             return PROCESSED;
 26901   006BFA  0E01               	movlw	1
 26902   006BFC  EF17  F036         	goto	l323
 26903   006C00                     l9405:
 26904                           
 26905                           ; BSR set to: 5
 26906   006C00  EE20 F001          	lfsr	2,1
 26907   006C04  5054               	movf	bootProcessMessage@m^(0+1280),w,c
 26908   006C06  26D9               	addwf	fsr2l,f,c
 26909   006C08  5055               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 26910   006C0A  22DA               	addwfc	fsr2h,f,c
 26911   006C0C  50DF               	movf	indf2,w,c
 26912   006C0E  6E56               	movwf	??_bootProcessMessage^(0+1280),c
 26913   006C10  6A57               	clrf	(??_bootProcessMessage+1)^(0+1280),c
 26914                           
 26915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26916                           ; Switch size 1, requested type "simple"
 26917                           ; Number of cases is 1, Range of values is 0 to 0
 26918                           ; switch strategies available:
 26919                           ; Name         Instructions Cycles
 26920                           ; simple_byte            4     3 (average)
 26921                           ;	Chosen strategy is simple_byte
 26922   006C12  5057               	movf	(??_bootProcessMessage+1)^(0+1280),w,c
 26923   006C14  0A00               	xorlw	0	; case 0
 26924   006C16  B4D8               	btfsc	status,2,c
 26925   006C18  EF10  F036         	goto	l11627
 26926   006C1C  EFDD  F035         	goto	l9383
 26927   006C20                     l11627:
 26928                           
 26929                           ; BSR set to: 5
 26930                           ; Switch size 1, requested type "simple"
 26931                           ; Number of cases is 1, Range of values is 92 to 92
 26932                           ; switch strategies available:
 26933                           ; Name         Instructions Cycles
 26934                           ; simple_byte            4     3 (average)
 26935                           ;	Chosen strategy is simple_byte
 26936   006C20  5056               	movf	??_bootProcessMessage^(0+1280),w,c
 26937   006C22  0A5C               	xorlw	92	; case 92
 26938   006C24  B4D8               	btfsc	status,2,c
 26939   006C26  EFF1  F035         	goto	l9393
 26940   006C2A  EFDD  F035         	goto	l9383
 26941   006C2E                     l323:
 26942   006C2E  0012               	return		;funcret
 26943   006C30                     __end_of_bootProcessMessage:
 26944                           	callstack 0
 26945                           
 26946 ;; *************** function _teachProcessMessage *****************
 26947 ;; Defined at:
 26948 ;;		line 221 in file "../../VLCBlib_PIC/event_teach_simple.c"
 26949 ;; Parameters:    Size  Location     Type
 26950 ;;  m               2   83[COMRAM] PTR struct Message
 26951 ;;		 -> poll@m(9), 
 26952 ;; Auto vars:     Size  Location     Type
 26953 ;;		None
 26954 ;; Return value:  Size  Location     Type
 26955 ;;                  1    wreg      enum E23340
 26956 ;; Registers used:
 26957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26958 ;; Tracked objects:
 26959 ;;		On entry : 0/0
 26960 ;;		On exit  : 0/0
 26961 ;;		Unchanged: 0/0
 26962 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26965 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26966 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26967 ;;Total ram usage:        8 bytes
 26968 ;; Hardware stack levels used: 1
 26969 ;; Hardware stack levels required when called: 10
 26970 ;; This function calls:
 26971 ;;		_doEvlrn
 26972 ;;		_doEvuln
 26973 ;;		_doNenrd
 26974 ;;		_doNerd
 26975 ;;		_doNnclr
 26976 ;;		_doNnevn
 26977 ;;		_doReqev
 26978 ;;		_doReval
 26979 ;;		_doRqevn
 26980 ;;		_sendMessage3
 26981 ;;		_sendMessage5
 26982 ;;		_teachCheckLen
 26983 ;; This function is called by:
 26984 ;;		_poll
 26985 ;; This function uses a non-reentrant model
 26986 ;;
 26987                           
 26988                           	psect	text22
 26989   0016F8                     __ptext22:
 26990                           	callstack 0
 26991   0016F8                     _teachProcessMessage:
 26992                           	callstack 115
 26993   0016F8                     
 26994                           ;../../VLCBlib_PIC/event_teach_simple.c: 222:     switch(m->opc) {
 26995   0016F8  EF20  F00F         	goto	l10045
 26996   0016FC                     l9787:
 26997                           
 26998                           ;../../VLCBlib_PIC/event_teach_simple.c: 225:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 26999   0016FC  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27000   001700  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27001   001704  0E03               	movlw	3
 27002   001706  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27003   001708  0E00               	movlw	0
 27004   00170A  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27005   00170C  EC44  F038         	call	_teachCheckLen	;wreg free
 27006   001710  06E8               	decf	wreg,f,c
 27007   001712  A4D8               	btfss	status,2,c
 27008   001714  EF8E  F00B         	goto	u7051
 27009   001718  EF90  F00B         	goto	u7050
 27010   00171C                     u7051:
 27011   00171C  EF93  F00B         	goto	l9793
 27012   001720                     u7050:
 27013   001720                     l9789:
 27014   001720  0E01               	movlw	1
 27015   001722  EF67  F00F         	goto	l936
 27016   001726                     l9793:
 27017                           
 27018                           ;../../VLCBlib_PIC/event_teach_simple.c: 226:             if ((m->bytes[0] == nn.bytes.h
      +                          i) && (m->bytes[1] == nn.bytes.lo)) {
 27019   001726  EE20 F002          	lfsr	2,2
 27020   00172A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27021   00172C  26D9               	addwf	fsr2l,f,c
 27022   00172E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27023   001730  22DA               	addwfc	fsr2h,f,c
 27024   001732  50DE               	movf	postinc2,w,c
 27025   001734  0105               	movlb	5	; () banked
 27026   001736  1990               	xorwf	(_nn+1)& (0+255),w,b
 27027   001738  A4D8               	btfss	status,2,c
 27028   00173A  EFA1  F00B         	goto	u7061
 27029   00173E  EFA3  F00B         	goto	u7060
 27030   001742                     u7061:
 27031   001742  EFB5  F00B         	goto	l9799
 27032   001746                     u7060:
 27033   001746                     
 27034                           ; BSR set to: 5
 27035   001746  EE20 F003          	lfsr	2,3
 27036   00174A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27037   00174C  26D9               	addwf	fsr2l,f,c
 27038   00174E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27039   001750  22DA               	addwfc	fsr2h,f,c
 27040   001752  518F               	movf	_nn& (0+255),w,b
 27041   001754  18DE               	xorwf	postinc2,w,c
 27042   001756  A4D8               	btfss	status,2,c
 27043   001758  EFB0  F00B         	goto	u7071
 27044   00175C  EFB2  F00B         	goto	u7070
 27045   001760                     u7071:
 27046   001760  EFB5  F00B         	goto	l9799
 27047   001764                     u7070:
 27048   001764                     l9797:
 27049                           
 27050                           ; BSR set to: 5
 27051                           ;../../VLCBlib_PIC/event_teach_simple.c: 227:                 mode_flags |= 1;
 27052   001764  81A4               	bsf	_mode_flags& (0+255),0,b
 27053                           
 27054                           ;../../VLCBlib_PIC/event_teach_simple.c: 228:             } else {
 27055   001766  EF90  F00B         	goto	l9789
 27056   00176A                     l9799:
 27057                           
 27058                           ; BSR set to: 5
 27059                           ;../../VLCBlib_PIC/event_teach_simple.c: 229:                 mode_flags &= ~1;
 27060   00176A  91A4               	bcf	_mode_flags& (0+255),0,b
 27061   00176C  EF90  F00B         	goto	l9789
 27062   001770                     l9805:
 27063                           
 27064                           ;../../VLCBlib_PIC/event_teach_simple.c: 234:             if (teachCheckLen(m, 4, 0) == 
      +                          PROCESSED) return PROCESSED;
 27065   001770  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27066   001774  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27067   001778  0E04               	movlw	4
 27068   00177A  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27069   00177C  0E00               	movlw	0
 27070   00177E  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27071   001780  EC44  F038         	call	_teachCheckLen	;wreg free
 27072   001784  06E8               	decf	wreg,f,c
 27073   001786  A4D8               	btfss	status,2,c
 27074   001788  EFC8  F00B         	goto	u7081
 27075   00178C  EFCA  F00B         	goto	u7080
 27076   001790                     u7081:
 27077   001790  EFCC  F00B         	goto	l9811
 27078   001794                     u7080:
 27079   001794  EF90  F00B         	goto	l9789
 27080   001798                     l9811:
 27081                           
 27082                           ;../../VLCBlib_PIC/event_teach_simple.c: 235:             if ((m->bytes[0] == nn.bytes.h
      +                          i) && (m->bytes[1] == nn.bytes.lo)) {
 27083   001798  EE20 F002          	lfsr	2,2
 27084   00179C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27085   00179E  26D9               	addwf	fsr2l,f,c
 27086   0017A0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27087   0017A2  22DA               	addwfc	fsr2h,f,c
 27088   0017A4  50DE               	movf	postinc2,w,c
 27089   0017A6  0105               	movlb	5	; () banked
 27090   0017A8  1990               	xorwf	(_nn+1)& (0+255),w,b
 27091   0017AA  A4D8               	btfss	status,2,c
 27092   0017AC  EFDA  F00B         	goto	u7091
 27093   0017B0  EFDC  F00B         	goto	u7090
 27094   0017B4                     u7091:
 27095   0017B4  EF0D  F00C         	goto	l9833
 27096   0017B8                     u7090:
 27097   0017B8                     
 27098                           ; BSR set to: 5
 27099   0017B8  EE20 F003          	lfsr	2,3
 27100   0017BC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27101   0017BE  26D9               	addwf	fsr2l,f,c
 27102   0017C0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27103   0017C2  22DA               	addwfc	fsr2h,f,c
 27104   0017C4  518F               	movf	_nn& (0+255),w,b
 27105   0017C6  18DE               	xorwf	postinc2,w,c
 27106   0017C8  A4D8               	btfss	status,2,c
 27107   0017CA  EFE9  F00B         	goto	u7101
 27108   0017CE  EFEB  F00B         	goto	u7100
 27109   0017D2                     u7101:
 27110   0017D2  EF0D  F00C         	goto	l9833
 27111   0017D6                     u7100:
 27112   0017D6                     
 27113                           ; BSR set to: 5
 27114                           ;../../VLCBlib_PIC/event_teach_simple.c: 236:                 if (m->bytes[2] == MODE_LE
      +                          ARN_ON) {
 27115   0017D6  EE20 F004          	lfsr	2,4
 27116   0017DA  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27117   0017DC  26D9               	addwf	fsr2l,f,c
 27118   0017DE  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27119   0017E0  22DA               	addwfc	fsr2h,f,c
 27120   0017E2  0E08               	movlw	8
 27121   0017E4  18DE               	xorwf	postinc2,w,c
 27122   0017E6  A4D8               	btfss	status,2,c
 27123   0017E8  EFF8  F00B         	goto	u7111
 27124   0017EC  EFFA  F00B         	goto	u7110
 27125   0017F0                     u7111:
 27126   0017F0  EFFC  F00B         	goto	l9825
 27127   0017F4                     u7110:
 27128   0017F4  EFB2  F00B         	goto	l9797
 27129   0017F8                     l9825:
 27130                           
 27131                           ; BSR set to: 5
 27132   0017F8  EE20 F004          	lfsr	2,4
 27133   0017FC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27134   0017FE  26D9               	addwf	fsr2l,f,c
 27135   001800  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27136   001802  22DA               	addwfc	fsr2h,f,c
 27137   001804  0E09               	movlw	9
 27138   001806  18DE               	xorwf	postinc2,w,c
 27139   001808  A4D8               	btfss	status,2,c
 27140   00180A  EF09  F00C         	goto	u7121
 27141   00180E  EF0B  F00C         	goto	u7120
 27142   001812                     u7121:
 27143   001812  EF0E  F00C         	goto	l9835
 27144   001816                     u7120:
 27145   001816  EFB5  F00B         	goto	l9799
 27146   00181A                     l9833:
 27147                           
 27148                           ; BSR set to: 5
 27149                           ;../../VLCBlib_PIC/event_teach_simple.c: 247:                 mode_flags &= ~1;
 27150   00181A  91A4               	bcf	_mode_flags& (0+255),0,b
 27151   00181C                     l9835:
 27152                           
 27153                           ;../../VLCBlib_PIC/event_teach_simple.c: 249:             return NOT_PROCESSED;
 27154   00181C  0E00               	movlw	0
 27155   00181E  EF67  F00F         	goto	l936
 27156   001822                     l9839:
 27157                           
 27158                           ;../../VLCBlib_PIC/event_teach_simple.c: 253:             if (teachCheckLen(m, 7, 1) == 
      +                          PROCESSED) {
 27159   001822  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27160   001826  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27161   00182A  0E07               	movlw	7
 27162   00182C  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27163   00182E  0E01               	movlw	1
 27164   001830  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27165   001832  EC44  F038         	call	_teachCheckLen	;wreg free
 27166   001836  06E8               	decf	wreg,f,c
 27167   001838  A4D8               	btfss	status,2,c
 27168   00183A  EF21  F00C         	goto	u7131
 27169   00183E  EF23  F00C         	goto	u7130
 27170   001842                     u7131:
 27171   001842  EF2E  F00C         	goto	l947
 27172   001846                     u7130:
 27173   001846                     
 27174                           ;../../VLCBlib_PIC/event_teach_simple.c: 254:                 sendMessage3(OPC_CMDERR, n
      +                          n.bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 27175   001846  C590  F526         	movff	_nn+1,sendMessage3@data1
 27176   00184A  C58F  F527         	movff	_nn,sendMessage3@data2
 27177   00184E  0E01               	movlw	1
 27178   001850  6E28               	movwf	sendMessage3@data3^(0+1280),c
 27179   001852  0E6F               	movlw	111
 27180   001854  EC57  F040         	call	_sendMessage3
 27181   001858  EF90  F00B         	goto	l9789
 27182   00185C                     l947:
 27183                           
 27184                           ;../../VLCBlib_PIC/event_teach_simple.c: 258:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 27185   00185C  0105               	movlb	5	; () banked
 27186   00185E  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27187   001860  EF34  F00C         	goto	u7141
 27188   001864  EF36  F00C         	goto	u7140
 27189   001868                     u7141:
 27190   001868  EF38  F00C         	goto	l9851
 27191   00186C                     u7140:
 27192   00186C  EF90  F00B         	goto	l9789
 27193   001870                     l9851:
 27194                           
 27195                           ; BSR set to: 5
 27196                           ;../../VLCBlib_PIC/event_teach_simple.c: 260:             doEvlrn((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[
      +                          5]);
 27197   001870  EE20 F003          	lfsr	2,3
 27198   001874  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27199   001876  26D9               	addwf	fsr2l,f,c
 27200   001878  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27201   00187A  22DA               	addwfc	fsr2h,f,c
 27202   00187C  50DF               	movf	indf2,w,c
 27203   00187E  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27204   001880  EE20 F002          	lfsr	2,2
 27205   001884  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27206   001886  26D9               	addwf	fsr2l,f,c
 27207   001888  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27208   00188A  22DA               	addwfc	fsr2h,f,c
 27209   00188C  50DF               	movf	indf2,w,c
 27210   00188E  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27211   001890  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27212   001892  6E4E               	movwf	doEvlrn@nodeNumber^(0+1280),c
 27213   001894  C557  F54F         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 27214   001898  EE20 F005          	lfsr	2,5
 27215   00189C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27216   00189E  26D9               	addwf	fsr2l,f,c
 27217   0018A0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27218   0018A2  22DA               	addwfc	fsr2h,f,c
 27219   0018A4  50DF               	movf	indf2,w,c
 27220   0018A6  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27221   0018A8  EE20 F004          	lfsr	2,4
 27222   0018AC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27223   0018AE  26D9               	addwf	fsr2l,f,c
 27224   0018B0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27225   0018B2  22DA               	addwfc	fsr2h,f,c
 27226   0018B4  50DF               	movf	indf2,w,c
 27227   0018B6  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27228   0018B8  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27229   0018BA  6E50               	movwf	doEvlrn@eventNumber^(0+1280),c
 27230   0018BC  C55A  F551         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 27231   0018C0  EE20 F006          	lfsr	2,6
 27232   0018C4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27233   0018C6  26D9               	addwf	fsr2l,f,c
 27234   0018C8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27235   0018CA  22DA               	addwfc	fsr2h,f,c
 27236   0018CC  50DF               	movf	indf2,w,c
 27237   0018CE  6E52               	movwf	doEvlrn@evNum^(0+1280),c
 27238   0018D0  EE20 F007          	lfsr	2,7
 27239   0018D4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27240   0018D6  26D9               	addwf	fsr2l,f,c
 27241   0018D8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27242   0018DA  22DA               	addwfc	fsr2h,f,c
 27243   0018DC  50DF               	movf	indf2,w,c
 27244   0018DE  6E53               	movwf	doEvlrn@evVal^(0+1280),c
 27245   0018E0  EC49  F02F         	call	_doEvlrn	;wreg free
 27246   0018E4  EF90  F00B         	goto	l9789
 27247   0018E8                     l9857:
 27248                           
 27249                           ;../../VLCBlib_PIC/event_teach_simple.c: 263:             if (teachCheckLen(m, 5, 1) == 
      +                          PROCESSED) return PROCESSED;
 27250   0018E8  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27251   0018EC  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27252   0018F0  0E05               	movlw	5
 27253   0018F2  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27254   0018F4  0E01               	movlw	1
 27255   0018F6  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27256   0018F8  EC44  F038         	call	_teachCheckLen	;wreg free
 27257   0018FC  06E8               	decf	wreg,f,c
 27258   0018FE  A4D8               	btfss	status,2,c
 27259   001900  EF84  F00C         	goto	u7151
 27260   001904  EF86  F00C         	goto	u7150
 27261   001908                     u7151:
 27262   001908  EF88  F00C         	goto	l950
 27263   00190C                     u7150:
 27264   00190C  EF90  F00B         	goto	l9789
 27265   001910                     l950:
 27266                           
 27267                           ;../../VLCBlib_PIC/event_teach_simple.c: 264:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 27268   001910  0105               	movlb	5	; () banked
 27269   001912  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27270   001914  EF8E  F00C         	goto	u7161
 27271   001918  EF90  F00C         	goto	u7160
 27272   00191C                     u7161:
 27273   00191C  EF92  F00C         	goto	l9867
 27274   001920                     u7160:
 27275   001920  EF90  F00B         	goto	l9789
 27276   001924                     l9867:
 27277                           
 27278                           ; BSR set to: 5
 27279                           ;../../VLCBlib_PIC/event_teach_simple.c: 266:             doEvuln((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 27280   001924  EE20 F003          	lfsr	2,3
 27281   001928  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27282   00192A  26D9               	addwf	fsr2l,f,c
 27283   00192C  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27284   00192E  22DA               	addwfc	fsr2h,f,c
 27285   001930  50DF               	movf	indf2,w,c
 27286   001932  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27287   001934  EE20 F002          	lfsr	2,2
 27288   001938  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27289   00193A  26D9               	addwf	fsr2l,f,c
 27290   00193C  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27291   00193E  22DA               	addwfc	fsr2h,f,c
 27292   001940  50DF               	movf	indf2,w,c
 27293   001942  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27294   001944  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27295   001946  6E3B               	movwf	doEvuln@nodeNumber^(0+1280),c
 27296   001948  C557  F53C         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 27297   00194C  EE20 F005          	lfsr	2,5
 27298   001950  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27299   001952  26D9               	addwf	fsr2l,f,c
 27300   001954  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27301   001956  22DA               	addwfc	fsr2h,f,c
 27302   001958  50DF               	movf	indf2,w,c
 27303   00195A  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27304   00195C  EE20 F004          	lfsr	2,4
 27305   001960  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27306   001962  26D9               	addwf	fsr2l,f,c
 27307   001964  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27308   001966  22DA               	addwfc	fsr2h,f,c
 27309   001968  50DF               	movf	indf2,w,c
 27310   00196A  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27311   00196C  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27312   00196E  6E3D               	movwf	doEvuln@eventNumber^(0+1280),c
 27313   001970  C55A  F53E         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 27314   001974  ECC6  F038         	call	_doEvuln	;wreg free
 27315   001978  EF90  F00B         	goto	l9789
 27316   00197C                     l9873:
 27317                           
 27318                           ;../../VLCBlib_PIC/event_teach_simple.c: 269:             if (teachCheckLen(m, 6, 1) == 
      +                          PROCESSED) return PROCESSED;
 27319   00197C  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27320   001980  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27321   001984  0E06               	movlw	6
 27322   001986  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27323   001988  0E01               	movlw	1
 27324   00198A  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27325   00198C  EC44  F038         	call	_teachCheckLen	;wreg free
 27326   001990  06E8               	decf	wreg,f,c
 27327   001992  A4D8               	btfss	status,2,c
 27328   001994  EFCE  F00C         	goto	u7171
 27329   001998  EFD0  F00C         	goto	u7170
 27330   00199C                     u7171:
 27331   00199C  EFD2  F00C         	goto	l953
 27332   0019A0                     u7170:
 27333   0019A0  EF90  F00B         	goto	l9789
 27334   0019A4                     l953:
 27335                           
 27336                           ;../../VLCBlib_PIC/event_teach_simple.c: 270:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 27337   0019A4  0105               	movlb	5	; () banked
 27338   0019A6  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27339   0019A8  EFD8  F00C         	goto	u7181
 27340   0019AC  EFDA  F00C         	goto	u7180
 27341   0019B0                     u7181:
 27342   0019B0  EFDC  F00C         	goto	l9883
 27343   0019B4                     u7180:
 27344   0019B4  EF90  F00B         	goto	l9789
 27345   0019B8                     l9883:
 27346                           
 27347                           ; BSR set to: 5
 27348                           ;../../VLCBlib_PIC/event_teach_simple.c: 272:             doReqev((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 27349   0019B8  EE20 F003          	lfsr	2,3
 27350   0019BC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27351   0019BE  26D9               	addwf	fsr2l,f,c
 27352   0019C0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27353   0019C2  22DA               	addwfc	fsr2h,f,c
 27354   0019C4  50DF               	movf	indf2,w,c
 27355   0019C6  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27356   0019C8  EE20 F002          	lfsr	2,2
 27357   0019CC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27358   0019CE  26D9               	addwf	fsr2l,f,c
 27359   0019D0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27360   0019D2  22DA               	addwfc	fsr2h,f,c
 27361   0019D4  50DF               	movf	indf2,w,c
 27362   0019D6  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27363   0019D8  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27364   0019DA  6E2F               	movwf	doReqev@nodeNumber^(0+1280),c
 27365   0019DC  C557  F530         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 27366   0019E0  EE20 F005          	lfsr	2,5
 27367   0019E4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27368   0019E6  26D9               	addwf	fsr2l,f,c
 27369   0019E8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27370   0019EA  22DA               	addwfc	fsr2h,f,c
 27371   0019EC  50DF               	movf	indf2,w,c
 27372   0019EE  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27373   0019F0  EE20 F004          	lfsr	2,4
 27374   0019F4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27375   0019F6  26D9               	addwf	fsr2l,f,c
 27376   0019F8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27377   0019FA  22DA               	addwfc	fsr2h,f,c
 27378   0019FC  50DF               	movf	indf2,w,c
 27379   0019FE  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27380   001A00  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27381   001A02  6E31               	movwf	doReqev@eventNumber^(0+1280),c
 27382   001A04  C55A  F532         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 27383   001A08  EE20 F006          	lfsr	2,6
 27384   001A0C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27385   001A0E  26D9               	addwf	fsr2l,f,c
 27386   001A10  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27387   001A12  22DA               	addwfc	fsr2h,f,c
 27388   001A14  50DF               	movf	indf2,w,c
 27389   001A16  6E33               	movwf	doReqev@evNum^(0+1280),c
 27390   001A18  ECB1  F024         	call	_doReqev	;wreg free
 27391   001A1C  EF90  F00B         	goto	l9789
 27392   001A20                     l9889:
 27393                           
 27394                           ;../../VLCBlib_PIC/event_teach_simple.c: 276:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27395   001A20  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27396   001A24  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27397   001A28  0E03               	movlw	3
 27398   001A2A  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27399   001A2C  0E00               	movlw	0
 27400   001A2E  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27401   001A30  EC44  F038         	call	_teachCheckLen	;wreg free
 27402   001A34  06E8               	decf	wreg,f,c
 27403   001A36  A4D8               	btfss	status,2,c
 27404   001A38  EF20  F00D         	goto	u7191
 27405   001A3C  EF22  F00D         	goto	u7190
 27406   001A40                     u7191:
 27407   001A40  EF24  F00D         	goto	l9895
 27408   001A44                     u7190:
 27409   001A44  EF90  F00B         	goto	l9789
 27410   001A48                     l9895:
 27411                           
 27412                           ;../../VLCBlib_PIC/event_teach_simple.c: 277:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27413   001A48  EE20 F002          	lfsr	2,2
 27414   001A4C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27415   001A4E  26D9               	addwf	fsr2l,f,c
 27416   001A50  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27417   001A52  22DA               	addwfc	fsr2h,f,c
 27418   001A54  50DE               	movf	postinc2,w,c
 27419   001A56  0105               	movlb	5	; () banked
 27420   001A58  1990               	xorwf	(_nn+1)& (0+255),w,b
 27421   001A5A  A4D8               	btfss	status,2,c
 27422   001A5C  EF32  F00D         	goto	u7201
 27423   001A60  EF34  F00D         	goto	u7200
 27424   001A64                     u7201:
 27425   001A64  EF90  F00B         	goto	l9789
 27426   001A68                     u7200:
 27427   001A68                     
 27428                           ; BSR set to: 5
 27429   001A68  EE20 F003          	lfsr	2,3
 27430   001A6C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27431   001A6E  26D9               	addwf	fsr2l,f,c
 27432   001A70  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27433   001A72  22DA               	addwfc	fsr2h,f,c
 27434   001A74  518F               	movf	_nn& (0+255),w,b
 27435   001A76  18DE               	xorwf	postinc2,w,c
 27436   001A78  B4D8               	btfsc	status,2,c
 27437   001A7A  EF41  F00D         	goto	u7211
 27438   001A7E  EF43  F00D         	goto	u7210
 27439   001A82                     u7211:
 27440   001A82  EFB5  F00B         	goto	l9799
 27441   001A86                     u7210:
 27442   001A86  EF90  F00B         	goto	l9789
 27443   001A8A                     l9909:
 27444                           
 27445                           ;../../VLCBlib_PIC/event_teach_simple.c: 282:             if (teachCheckLen(m, 3, 1) == 
      +                          PROCESSED) return PROCESSED;
 27446   001A8A  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27447   001A8E  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27448   001A92  0E03               	movlw	3
 27449   001A94  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27450   001A96  0E01               	movlw	1
 27451   001A98  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27452   001A9A  EC44  F038         	call	_teachCheckLen	;wreg free
 27453   001A9E  06E8               	decf	wreg,f,c
 27454   001AA0  A4D8               	btfss	status,2,c
 27455   001AA2  EF55  F00D         	goto	u7221
 27456   001AA6  EF57  F00D         	goto	u7220
 27457   001AAA                     u7221:
 27458   001AAA  EF59  F00D         	goto	l9915
 27459   001AAE                     u7220:
 27460   001AAE  EF90  F00B         	goto	l9789
 27461   001AB2                     l9915:
 27462                           
 27463                           ;../../VLCBlib_PIC/event_teach_simple.c: 283:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27464   001AB2  EE20 F002          	lfsr	2,2
 27465   001AB6  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27466   001AB8  26D9               	addwf	fsr2l,f,c
 27467   001ABA  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27468   001ABC  22DA               	addwfc	fsr2h,f,c
 27469   001ABE  50DE               	movf	postinc2,w,c
 27470   001AC0  0105               	movlb	5	; () banked
 27471   001AC2  1990               	xorwf	(_nn+1)& (0+255),w,b
 27472   001AC4  A4D8               	btfss	status,2,c
 27473   001AC6  EF67  F00D         	goto	u7231
 27474   001ACA  EF69  F00D         	goto	u7230
 27475   001ACE                     u7231:
 27476   001ACE  EF90  F00B         	goto	l9789
 27477   001AD2                     u7230:
 27478   001AD2                     
 27479                           ; BSR set to: 5
 27480   001AD2  EE20 F003          	lfsr	2,3
 27481   001AD6  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27482   001AD8  26D9               	addwf	fsr2l,f,c
 27483   001ADA  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27484   001ADC  22DA               	addwfc	fsr2h,f,c
 27485   001ADE  518F               	movf	_nn& (0+255),w,b
 27486   001AE0  18DE               	xorwf	postinc2,w,c
 27487   001AE2  B4D8               	btfsc	status,2,c
 27488   001AE4  EF76  F00D         	goto	u7241
 27489   001AE8  EF78  F00D         	goto	u7240
 27490   001AEC                     u7241:
 27491   001AEC  EF7A  F00D         	goto	l962
 27492   001AF0                     u7240:
 27493   001AF0  EF90  F00B         	goto	l9789
 27494   001AF4                     l962:
 27495                           
 27496                           ; BSR set to: 5
 27497                           ;../../VLCBlib_PIC/event_teach_simple.c: 285:             if (! (mode_flags & 1)) {
 27498   001AF4  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27499   001AF6  EF7F  F00D         	goto	u7251
 27500   001AFA  EF81  F00D         	goto	u7250
 27501   001AFE                     u7251:
 27502   001AFE  EF99  F00D         	goto	l9929
 27503   001B02                     u7250:
 27504   001B02                     
 27505                           ; BSR set to: 5
 27506                           ;../../VLCBlib_PIC/event_teach_simple.c: 286:                 sendMessage3(OPC_CMDERR, n
      +                          n.bytes.hi, nn.bytes.lo, CMDERR_NOT_LRN);
 27507   001B02  C590  F526         	movff	_nn+1,sendMessage3@data1
 27508   001B06  C58F  F527         	movff	_nn,sendMessage3@data2
 27509   001B0A  0E02               	movlw	2
 27510   001B0C  6E28               	movwf	sendMessage3@data3^(0+1280),c
 27511   001B0E  0E6F               	movlw	111
 27512   001B10  EC57  F040         	call	_sendMessage3
 27513                           
 27514                           ;../../VLCBlib_PIC/event_teach_simple.c: 288:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 27515   001B14  C590  F526         	movff	_nn+1,sendMessage5@data1
 27516   001B18  C58F  F527         	movff	_nn,sendMessage5@data2
 27517   001B1C  0E55               	movlw	85
 27518   001B1E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 27519   001B20  0E04               	movlw	4
 27520   001B22  6E29               	movwf	sendMessage5@data4^(0+1280),c
 27521   001B24  0E02               	movlw	2
 27522   001B26  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 27523   001B28  0EAF               	movlw	175
 27524   001B2A  EC96  F040         	call	_sendMessage5
 27525   001B2E  EF90  F00B         	goto	l9789
 27526   001B32                     l9929:
 27527                           
 27528                           ; BSR set to: 5
 27529                           ;../../VLCBlib_PIC/event_teach_simple.c: 293:             doNnclr();
 27530   001B32  EC16  F040         	call	_doNnclr	;wreg free
 27531                           
 27532                           ;../../VLCBlib_PIC/event_teach_simple.c: 294:             break;
 27533   001B36  EF0E  F00C         	goto	l9835
 27534   001B3A                     l9931:
 27535                           
 27536                           ;../../VLCBlib_PIC/event_teach_simple.c: 296:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27537   001B3A  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27538   001B3E  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27539   001B42  0E03               	movlw	3
 27540   001B44  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27541   001B46  0E00               	movlw	0
 27542   001B48  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27543   001B4A  EC44  F038         	call	_teachCheckLen	;wreg free
 27544   001B4E  06E8               	decf	wreg,f,c
 27545   001B50  A4D8               	btfss	status,2,c
 27546   001B52  EFAD  F00D         	goto	u7261
 27547   001B56  EFAF  F00D         	goto	u7260
 27548   001B5A                     u7261:
 27549   001B5A  EFB1  F00D         	goto	l9937
 27550   001B5E                     u7260:
 27551   001B5E  EF90  F00B         	goto	l9789
 27552   001B62                     l9937:
 27553                           
 27554                           ;../../VLCBlib_PIC/event_teach_simple.c: 297:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27555   001B62  EE20 F002          	lfsr	2,2
 27556   001B66  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27557   001B68  26D9               	addwf	fsr2l,f,c
 27558   001B6A  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27559   001B6C  22DA               	addwfc	fsr2h,f,c
 27560   001B6E  50DE               	movf	postinc2,w,c
 27561   001B70  0105               	movlb	5	; () banked
 27562   001B72  1990               	xorwf	(_nn+1)& (0+255),w,b
 27563   001B74  A4D8               	btfss	status,2,c
 27564   001B76  EFBF  F00D         	goto	u7271
 27565   001B7A  EFC1  F00D         	goto	u7270
 27566   001B7E                     u7271:
 27567   001B7E  EF90  F00B         	goto	l9789
 27568   001B82                     u7270:
 27569   001B82                     
 27570                           ; BSR set to: 5
 27571   001B82  EE20 F003          	lfsr	2,3
 27572   001B86  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27573   001B88  26D9               	addwf	fsr2l,f,c
 27574   001B8A  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27575   001B8C  22DA               	addwfc	fsr2h,f,c
 27576   001B8E  518F               	movf	_nn& (0+255),w,b
 27577   001B90  18DE               	xorwf	postinc2,w,c
 27578   001B92  B4D8               	btfsc	status,2,c
 27579   001B94  EFCE  F00D         	goto	u7281
 27580   001B98  EFD0  F00D         	goto	u7280
 27581   001B9C                     u7281:
 27582   001B9C  EFD2  F00D         	goto	l9945
 27583   001BA0                     u7280:
 27584   001BA0  EF90  F00B         	goto	l9789
 27585   001BA4                     l9945:
 27586                           
 27587                           ; BSR set to: 5
 27588                           ;../../VLCBlib_PIC/event_teach_simple.c: 299:             doNerd();
 27589   001BA4  EC42  F041         	call	_doNerd	;wreg free
 27590   001BA8  EF90  F00B         	goto	l9789
 27591   001BAC                     l9951:
 27592                           
 27593                           ;../../VLCBlib_PIC/event_teach_simple.c: 302:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27594   001BAC  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27595   001BB0  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27596   001BB4  0E03               	movlw	3
 27597   001BB6  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27598   001BB8  0E00               	movlw	0
 27599   001BBA  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27600   001BBC  EC44  F038         	call	_teachCheckLen	;wreg free
 27601   001BC0  06E8               	decf	wreg,f,c
 27602   001BC2  A4D8               	btfss	status,2,c
 27603   001BC4  EFE6  F00D         	goto	u7291
 27604   001BC8  EFE8  F00D         	goto	u7290
 27605   001BCC                     u7291:
 27606   001BCC  EFEA  F00D         	goto	l9957
 27607   001BD0                     u7290:
 27608   001BD0  EF90  F00B         	goto	l9789
 27609   001BD4                     l9957:
 27610                           
 27611                           ;../../VLCBlib_PIC/event_teach_simple.c: 303:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27612   001BD4  EE20 F002          	lfsr	2,2
 27613   001BD8  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27614   001BDA  26D9               	addwf	fsr2l,f,c
 27615   001BDC  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27616   001BDE  22DA               	addwfc	fsr2h,f,c
 27617   001BE0  50DE               	movf	postinc2,w,c
 27618   001BE2  0105               	movlb	5	; () banked
 27619   001BE4  1990               	xorwf	(_nn+1)& (0+255),w,b
 27620   001BE6  A4D8               	btfss	status,2,c
 27621   001BE8  EFF8  F00D         	goto	u7301
 27622   001BEC  EFFA  F00D         	goto	u7300
 27623   001BF0                     u7301:
 27624   001BF0  EF90  F00B         	goto	l9789
 27625   001BF4                     u7300:
 27626   001BF4                     
 27627                           ; BSR set to: 5
 27628   001BF4  EE20 F003          	lfsr	2,3
 27629   001BF8  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27630   001BFA  26D9               	addwf	fsr2l,f,c
 27631   001BFC  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27632   001BFE  22DA               	addwfc	fsr2h,f,c
 27633   001C00  518F               	movf	_nn& (0+255),w,b
 27634   001C02  18DE               	xorwf	postinc2,w,c
 27635   001C04  B4D8               	btfsc	status,2,c
 27636   001C06  EF07  F00E         	goto	u7311
 27637   001C0A  EF09  F00E         	goto	u7310
 27638   001C0E                     u7311:
 27639   001C0E  EF0B  F00E         	goto	l9965
 27640   001C12                     u7310:
 27641   001C12  EF90  F00B         	goto	l9789
 27642   001C16                     l9965:
 27643                           
 27644                           ; BSR set to: 5
 27645                           ;../../VLCBlib_PIC/event_teach_simple.c: 305:             doNnevn();
 27646   001C16  ECF4  F03D         	call	_doNnevn	;wreg free
 27647   001C1A  EF90  F00B         	goto	l9789
 27648   001C1E                     l9971:
 27649                           
 27650                           ;../../VLCBlib_PIC/event_teach_simple.c: 308:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27651   001C1E  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27652   001C22  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27653   001C26  0E03               	movlw	3
 27654   001C28  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27655   001C2A  0E00               	movlw	0
 27656   001C2C  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27657   001C2E  EC44  F038         	call	_teachCheckLen	;wreg free
 27658   001C32  06E8               	decf	wreg,f,c
 27659   001C34  A4D8               	btfss	status,2,c
 27660   001C36  EF1F  F00E         	goto	u7321
 27661   001C3A  EF21  F00E         	goto	u7320
 27662   001C3E                     u7321:
 27663   001C3E  EF23  F00E         	goto	l9977
 27664   001C42                     u7320:
 27665   001C42  EF90  F00B         	goto	l9789
 27666   001C46                     l9977:
 27667                           
 27668                           ;../../VLCBlib_PIC/event_teach_simple.c: 309:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27669   001C46  EE20 F002          	lfsr	2,2
 27670   001C4A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27671   001C4C  26D9               	addwf	fsr2l,f,c
 27672   001C4E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27673   001C50  22DA               	addwfc	fsr2h,f,c
 27674   001C52  50DE               	movf	postinc2,w,c
 27675   001C54  0105               	movlb	5	; () banked
 27676   001C56  1990               	xorwf	(_nn+1)& (0+255),w,b
 27677   001C58  A4D8               	btfss	status,2,c
 27678   001C5A  EF31  F00E         	goto	u7331
 27679   001C5E  EF33  F00E         	goto	u7330
 27680   001C62                     u7331:
 27681   001C62  EF90  F00B         	goto	l9789
 27682   001C66                     u7330:
 27683   001C66                     
 27684                           ; BSR set to: 5
 27685   001C66  EE20 F003          	lfsr	2,3
 27686   001C6A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27687   001C6C  26D9               	addwf	fsr2l,f,c
 27688   001C6E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27689   001C70  22DA               	addwfc	fsr2h,f,c
 27690   001C72  518F               	movf	_nn& (0+255),w,b
 27691   001C74  18DE               	xorwf	postinc2,w,c
 27692   001C76  B4D8               	btfsc	status,2,c
 27693   001C78  EF40  F00E         	goto	u7341
 27694   001C7C  EF42  F00E         	goto	u7340
 27695   001C80                     u7341:
 27696   001C80  EF44  F00E         	goto	l9985
 27697   001C84                     u7340:
 27698   001C84  EF90  F00B         	goto	l9789
 27699   001C88                     l9985:
 27700                           
 27701                           ; BSR set to: 5
 27702                           ;../../VLCBlib_PIC/event_teach_simple.c: 311:             doRqevn();
 27703   001C88  ECCE  F03D         	call	_doRqevn	;wreg free
 27704   001C8C  EF90  F00B         	goto	l9789
 27705   001C90                     l9991:
 27706                           
 27707                           ;../../VLCBlib_PIC/event_teach_simple.c: 314:             if (teachCheckLen(m, 4, 0) == 
      +                          PROCESSED) return PROCESSED;
 27708   001C90  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27709   001C94  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27710   001C98  0E04               	movlw	4
 27711   001C9A  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27712   001C9C  0E00               	movlw	0
 27713   001C9E  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27714   001CA0  EC44  F038         	call	_teachCheckLen	;wreg free
 27715   001CA4  06E8               	decf	wreg,f,c
 27716   001CA6  A4D8               	btfss	status,2,c
 27717   001CA8  EF58  F00E         	goto	u7351
 27718   001CAC  EF5A  F00E         	goto	u7350
 27719   001CB0                     u7351:
 27720   001CB0  EF5C  F00E         	goto	l9997
 27721   001CB4                     u7350:
 27722   001CB4  EF90  F00B         	goto	l9789
 27723   001CB8                     l9997:
 27724                           
 27725                           ;../../VLCBlib_PIC/event_teach_simple.c: 315:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27726   001CB8  EE20 F002          	lfsr	2,2
 27727   001CBC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27728   001CBE  26D9               	addwf	fsr2l,f,c
 27729   001CC0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27730   001CC2  22DA               	addwfc	fsr2h,f,c
 27731   001CC4  50DE               	movf	postinc2,w,c
 27732   001CC6  0105               	movlb	5	; () banked
 27733   001CC8  1990               	xorwf	(_nn+1)& (0+255),w,b
 27734   001CCA  A4D8               	btfss	status,2,c
 27735   001CCC  EF6A  F00E         	goto	u7361
 27736   001CD0  EF6C  F00E         	goto	u7360
 27737   001CD4                     u7361:
 27738   001CD4  EF90  F00B         	goto	l9789
 27739   001CD8                     u7360:
 27740   001CD8                     
 27741                           ; BSR set to: 5
 27742   001CD8  EE20 F003          	lfsr	2,3
 27743   001CDC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27744   001CDE  26D9               	addwf	fsr2l,f,c
 27745   001CE0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27746   001CE2  22DA               	addwfc	fsr2h,f,c
 27747   001CE4  518F               	movf	_nn& (0+255),w,b
 27748   001CE6  18DE               	xorwf	postinc2,w,c
 27749   001CE8  B4D8               	btfsc	status,2,c
 27750   001CEA  EF79  F00E         	goto	u7371
 27751   001CEE  EF7B  F00E         	goto	u7370
 27752   001CF2                     u7371:
 27753   001CF2  EF7D  F00E         	goto	l10005
 27754   001CF6                     u7370:
 27755   001CF6  EF90  F00B         	goto	l9789
 27756   001CFA                     l10005:
 27757                           
 27758                           ; BSR set to: 5
 27759                           ;../../VLCBlib_PIC/event_teach_simple.c: 317:             doNenrd(m->bytes[2]);
 27760   001CFA  EE20 F004          	lfsr	2,4
 27761   001CFE  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27762   001D00  26D9               	addwf	fsr2l,f,c
 27763   001D02  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27764   001D04  22DA               	addwfc	fsr2h,f,c
 27765   001D06  50DF               	movf	indf2,w,c
 27766   001D08  EC85  F038         	call	_doNenrd
 27767   001D0C  EF90  F00B         	goto	l9789
 27768   001D10                     l10011:
 27769                           
 27770                           ;../../VLCBlib_PIC/event_teach_simple.c: 320:             if (teachCheckLen(m, 5, 0) == 
      +                          PROCESSED) return PROCESSED;
 27771   001D10  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27772   001D14  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27773   001D18  0E05               	movlw	5
 27774   001D1A  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27775   001D1C  0E00               	movlw	0
 27776   001D1E  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27777   001D20  EC44  F038         	call	_teachCheckLen	;wreg free
 27778   001D24  06E8               	decf	wreg,f,c
 27779   001D26  A4D8               	btfss	status,2,c
 27780   001D28  EF98  F00E         	goto	u7381
 27781   001D2C  EF9A  F00E         	goto	u7380
 27782   001D30                     u7381:
 27783   001D30  EF9C  F00E         	goto	l10017
 27784   001D34                     u7380:
 27785   001D34  EF90  F00B         	goto	l9789
 27786   001D38                     l10017:
 27787                           
 27788                           ;../../VLCBlib_PIC/event_teach_simple.c: 321:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27789   001D38  EE20 F002          	lfsr	2,2
 27790   001D3C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27791   001D3E  26D9               	addwf	fsr2l,f,c
 27792   001D40  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27793   001D42  22DA               	addwfc	fsr2h,f,c
 27794   001D44  50DE               	movf	postinc2,w,c
 27795   001D46  0105               	movlb	5	; () banked
 27796   001D48  1990               	xorwf	(_nn+1)& (0+255),w,b
 27797   001D4A  A4D8               	btfss	status,2,c
 27798   001D4C  EFAA  F00E         	goto	u7391
 27799   001D50  EFAC  F00E         	goto	u7390
 27800   001D54                     u7391:
 27801   001D54  EF90  F00B         	goto	l9789
 27802   001D58                     u7390:
 27803   001D58                     
 27804                           ; BSR set to: 5
 27805   001D58  EE20 F003          	lfsr	2,3
 27806   001D5C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27807   001D5E  26D9               	addwf	fsr2l,f,c
 27808   001D60  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27809   001D62  22DA               	addwfc	fsr2h,f,c
 27810   001D64  518F               	movf	_nn& (0+255),w,b
 27811   001D66  18DE               	xorwf	postinc2,w,c
 27812   001D68  B4D8               	btfsc	status,2,c
 27813   001D6A  EFB9  F00E         	goto	u7401
 27814   001D6E  EFBB  F00E         	goto	u7400
 27815   001D72                     u7401:
 27816   001D72  EFBD  F00E         	goto	l10025
 27817   001D76                     u7400:
 27818   001D76  EF90  F00B         	goto	l9789
 27819   001D7A                     l10025:
 27820                           
 27821                           ; BSR set to: 5
 27822                           ;../../VLCBlib_PIC/event_teach_simple.c: 323:             doReval(m->bytes[2], m->bytes[
      +                          3]);
 27823   001D7A  EE20 F005          	lfsr	2,5
 27824   001D7E  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27825   001D80  26D9               	addwf	fsr2l,f,c
 27826   001D82  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27827   001D84  22DA               	addwfc	fsr2h,f,c
 27828   001D86  50DF               	movf	indf2,w,c
 27829   001D88  6E2C               	movwf	doReval@evNum^(0+1280),c
 27830   001D8A  EE20 F004          	lfsr	2,4
 27831   001D8E  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27832   001D90  26D9               	addwf	fsr2l,f,c
 27833   001D92  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27834   001D94  22DA               	addwfc	fsr2h,f,c
 27835   001D96  50DF               	movf	indf2,w,c
 27836   001D98  EC89  F02D         	call	_doReval
 27837   001D9C  EF90  F00B         	goto	l9789
 27838   001DA0                     l10031:
 27839                           
 27840                           ;../../VLCBlib_PIC/event_teach_simple.c: 326:             if (teachCheckLen(m, 8, 1) == 
      +                          PROCESSED) return PROCESSED;
 27841   001DA0  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27842   001DA4  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27843   001DA8  0E08               	movlw	8
 27844   001DAA  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27845   001DAC  0E01               	movlw	1
 27846   001DAE  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27847   001DB0  EC44  F038         	call	_teachCheckLen	;wreg free
 27848   001DB4  06E8               	decf	wreg,f,c
 27849   001DB6  A4D8               	btfss	status,2,c
 27850   001DB8  EFE0  F00E         	goto	u7411
 27851   001DBC  EFE2  F00E         	goto	u7410
 27852   001DC0                     u7411:
 27853   001DC0  EFE4  F00E         	goto	l10037
 27854   001DC4                     u7410:
 27855   001DC4  EF90  F00B         	goto	l9789
 27856   001DC8                     l10037:
 27857                           
 27858                           ;../../VLCBlib_PIC/event_teach_simple.c: 328:             doEvlrn((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[
      +                          6]);
 27859   001DC8  EE20 F003          	lfsr	2,3
 27860   001DCC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27861   001DCE  26D9               	addwf	fsr2l,f,c
 27862   001DD0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27863   001DD2  22DA               	addwfc	fsr2h,f,c
 27864   001DD4  50DF               	movf	indf2,w,c
 27865   001DD6  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27866   001DD8  EE20 F002          	lfsr	2,2
 27867   001DDC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27868   001DDE  26D9               	addwf	fsr2l,f,c
 27869   001DE0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27870   001DE2  22DA               	addwfc	fsr2h,f,c
 27871   001DE4  50DF               	movf	indf2,w,c
 27872   001DE6  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27873   001DE8  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27874   001DEA  6E4E               	movwf	doEvlrn@nodeNumber^(0+1280),c
 27875   001DEC  C557  F54F         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 27876   001DF0  EE20 F005          	lfsr	2,5
 27877   001DF4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27878   001DF6  26D9               	addwf	fsr2l,f,c
 27879   001DF8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27880   001DFA  22DA               	addwfc	fsr2h,f,c
 27881   001DFC  50DF               	movf	indf2,w,c
 27882   001DFE  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27883   001E00  EE20 F004          	lfsr	2,4
 27884   001E04  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27885   001E06  26D9               	addwf	fsr2l,f,c
 27886   001E08  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27887   001E0A  22DA               	addwfc	fsr2h,f,c
 27888   001E0C  50DF               	movf	indf2,w,c
 27889   001E0E  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27890   001E10  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27891   001E12  6E50               	movwf	doEvlrn@eventNumber^(0+1280),c
 27892   001E14  C55A  F551         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 27893   001E18  EE20 F007          	lfsr	2,7
 27894   001E1C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27895   001E1E  26D9               	addwf	fsr2l,f,c
 27896   001E20  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27897   001E22  22DA               	addwfc	fsr2h,f,c
 27898   001E24  50DF               	movf	indf2,w,c
 27899   001E26  6E52               	movwf	doEvlrn@evNum^(0+1280),c
 27900   001E28  EE20 F008          	lfsr	2,8
 27901   001E2C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27902   001E2E  26D9               	addwf	fsr2l,f,c
 27903   001E30  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27904   001E32  22DA               	addwfc	fsr2h,f,c
 27905   001E34  50DF               	movf	indf2,w,c
 27906   001E36  6E53               	movwf	doEvlrn@evVal^(0+1280),c
 27907   001E38  EC49  F02F         	call	_doEvlrn	;wreg free
 27908   001E3C  EF90  F00B         	goto	l9789
 27909   001E40                     l10045:
 27910   001E40  EE20 F001          	lfsr	2,1
 27911   001E44  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27912   001E46  26D9               	addwf	fsr2l,f,c
 27913   001E48  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27914   001E4A  22DA               	addwfc	fsr2h,f,c
 27915   001E4C  50DF               	movf	indf2,w,c
 27916   001E4E  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27917   001E50  6A57               	clrf	(??_teachProcessMessage+1)^(0+1280),c
 27918                           
 27919                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27920                           ; Switch size 1, requested type "simple"
 27921                           ; Number of cases is 1, Range of values is 0 to 0
 27922                           ; switch strategies available:
 27923                           ; Name         Instructions Cycles
 27924                           ; simple_byte            4     3 (average)
 27925                           ;	Chosen strategy is simple_byte
 27926   001E52  5057               	movf	(??_teachProcessMessage+1)^(0+1280),w,c
 27927   001E54  0A00               	xorlw	0	; case 0
 27928   001E56  B4D8               	btfsc	status,2,c
 27929   001E58  EF30  F00F         	goto	l11629
 27930   001E5C  EF0E  F00C         	goto	l9835
 27931   001E60                     l11629:
 27932                           
 27933                           ; Switch size 1, requested type "simple"
 27934                           ; Number of cases is 13, Range of values is 83 to 245
 27935                           ; switch strategies available:
 27936                           ; Name         Instructions Cycles
 27937                           ; simple_byte           40    21 (average)
 27938                           ;	Chosen strategy is simple_byte
 27939   001E60  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27940   001E62  0A53               	xorlw	83	; case 83
 27941   001E64  B4D8               	btfsc	status,2,c
 27942   001E66  EF7E  F00B         	goto	l9787
 27943   001E6A  0A07               	xorlw	7	; case 84
 27944   001E6C  B4D8               	btfsc	status,2,c
 27945   001E6E  EF10  F00D         	goto	l9889
 27946   001E72  0A01               	xorlw	1	; case 85
 27947   001E74  B4D8               	btfsc	status,2,c
 27948   001E76  EF45  F00D         	goto	l9909
 27949   001E7A  0A03               	xorlw	3	; case 86
 27950   001E7C  B4D8               	btfsc	status,2,c
 27951   001E7E  EFD6  F00D         	goto	l9951
 27952   001E82  0A01               	xorlw	1	; case 87
 27953   001E84  B4D8               	btfsc	status,2,c
 27954   001E86  EF9D  F00D         	goto	l9931
 27955   001E8A  0A0F               	xorlw	15	; case 88
 27956   001E8C  B4D8               	btfsc	status,2,c
 27957   001E8E  EF0F  F00E         	goto	l9971
 27958   001E92  0A2A               	xorlw	42	; case 114
 27959   001E94  B4D8               	btfsc	status,2,c
 27960   001E96  EF48  F00E         	goto	l9991
 27961   001E9A  0A04               	xorlw	4	; case 118
 27962   001E9C  B4D8               	btfsc	status,2,c
 27963   001E9E  EFB8  F00B         	goto	l9805
 27964   001EA2  0AE3               	xorlw	227	; case 149
 27965   001EA4  B4D8               	btfsc	status,2,c
 27966   001EA6  EF74  F00C         	goto	l9857
 27967   001EAA  0A09               	xorlw	9	; case 156
 27968   001EAC  B4D8               	btfsc	status,2,c
 27969   001EAE  EF88  F00E         	goto	l10011
 27970   001EB2  0A2E               	xorlw	46	; case 178
 27971   001EB4  B4D8               	btfsc	status,2,c
 27972   001EB6  EFBE  F00C         	goto	l9873
 27973   001EBA  0A60               	xorlw	96	; case 210
 27974   001EBC  B4D8               	btfsc	status,2,c
 27975   001EBE  EF11  F00C         	goto	l9839
 27976   001EC2  0A27               	xorlw	39	; case 245
 27977   001EC4  B4D8               	btfsc	status,2,c
 27978   001EC6  EFD0  F00E         	goto	l10031
 27979   001ECA  EF0E  F00C         	goto	l9835
 27980   001ECE                     l936:
 27981   001ECE  0012               	return		;funcret
 27982   001ED0                     __end_of_teachProcessMessage:
 27983                           	callstack 0
 27984                           
 27985 ;; *************** function _teachCheckLen *****************
 27986 ;; Defined at:
 27987 ;;		line 343 in file "../../VLCBlib_PIC/event_teach_simple.c"
 27988 ;; Parameters:    Size  Location     Type
 27989 ;;  m               2   48[COMRAM] PTR struct Message
 27990 ;;		 -> poll@m(9), 
 27991 ;;  needed          1   50[COMRAM] unsigned char 
 27992 ;;  learn           1   51[COMRAM] unsigned char 
 27993 ;; Auto vars:     Size  Location     Type
 27994 ;;		None
 27995 ;; Return value:  Size  Location     Type
 27996 ;;                  1    wreg      enum E23340
 27997 ;; Registers used:
 27998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27999 ;; Tracked objects:
 28000 ;;		On entry : 0/0
 28001 ;;		On exit  : 0/0
 28002 ;;		Unchanged: 0/0
 28003 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28007 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28008 ;;Total ram usage:        5 bytes
 28009 ;; Hardware stack levels used: 1
 28010 ;; Hardware stack levels required when called: 7
 28011 ;; This function calls:
 28012 ;;		_checkLen
 28013 ;;		_sendMessage5
 28014 ;; This function is called by:
 28015 ;;		_teachProcessMessage
 28016 ;; This function uses a non-reentrant model
 28017 ;;
 28018                           
 28019                           	psect	text23
 28020   007088                     __ptext23:
 28021                           	callstack 0
 28022   007088                     _teachCheckLen:
 28023                           	callstack 117
 28024   007088                     
 28025                           ;../../VLCBlib_PIC/event_teach_simple.c: 344:     if (learn) {
 28026   007088  5034               	movf	teachCheckLen@learn^(0+1280),w,c
 28027   00708A  B4D8               	btfsc	status,2,c
 28028   00708C  EF4A  F038         	goto	u6021
 28029   007090  EF4C  F038         	goto	u6020
 28030   007094                     u6021:
 28031   007094  EF7A  F038         	goto	l8677
 28032   007098                     u6020:
 28033   007098                     
 28034                           ;../../VLCBlib_PIC/event_teach_simple.c: 346:         if (m->len < needed) {
 28035   007098  C531  F4D9         	movff	teachCheckLen@m,fsr2l
 28036   00709C  C532  F4DA         	movff	teachCheckLen@m+1,fsr2h
 28037   0070A0  5033               	movf	teachCheckLen@needed^(0+1280),w,c
 28038   0070A2  5CDE               	subwf	postinc2,w,c
 28039   0070A4  B0D8               	btfsc	status,0,c
 28040   0070A6  EF57  F038         	goto	u6031
 28041   0070AA  EF59  F038         	goto	u6030
 28042   0070AE                     u6031:
 28043   0070AE  EF77  F038         	goto	l8673
 28044   0070B2                     u6030:
 28045   0070B2                     
 28046                           ;../../VLCBlib_PIC/event_teach_simple.c: 348:             if (mode_flags & 1) {
 28047   0070B2  0105               	movlb	5	; () banked
 28048   0070B4  A1A4               	btfss	_mode_flags& (0+255),0,b
 28049   0070B6  EF5F  F038         	goto	u6041
 28050   0070BA  EF61  F038         	goto	u6040
 28051   0070BE                     u6041:
 28052   0070BE  EF74  F038         	goto	l8669
 28053   0070C2                     u6040:
 28054   0070C2                     
 28055                           ; BSR set to: 5
 28056                           ;../../VLCBlib_PIC/event_teach_simple.c: 351:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, (uint8_t)(m->opc), SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 28057   0070C2  C590  F526         	movff	_nn+1,sendMessage5@data1
 28058   0070C6  C58F  F527         	movff	_nn,sendMessage5@data2
 28059   0070CA  EE20 F001          	lfsr	2,1
 28060   0070CE  5031               	movf	teachCheckLen@m^(0+1280),w,c
 28061   0070D0  26D9               	addwf	fsr2l,f,c
 28062   0070D2  5032               	movf	(teachCheckLen@m+1)^(0+1280),w,c
 28063   0070D4  22DA               	addwfc	fsr2h,f,c
 28064   0070D6  50DF               	movf	indf2,w,c
 28065   0070D8  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28066   0070DA  0E04               	movlw	4
 28067   0070DC  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28068   0070DE  0E01               	movlw	1
 28069   0070E0  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28070   0070E2  0EAF               	movlw	175
 28071   0070E4  EC96  F040         	call	_sendMessage5
 28072   0070E8                     l8669:
 28073                           
 28074                           ;../../VLCBlib_PIC/event_teach_simple.c: 354:             return PROCESSED;
 28075   0070E8  0E01               	movlw	1
 28076   0070EA  EF84  F038         	goto	l1000
 28077   0070EE                     l8673:
 28078                           
 28079                           ;../../VLCBlib_PIC/event_teach_simple.c: 356:         return NOT_PROCESSED;
 28080   0070EE  0E00               	movlw	0
 28081   0070F0  EF84  F038         	goto	l1000
 28082   0070F4                     l8677:
 28083                           
 28084                           ;../../VLCBlib_PIC/event_teach_simple.c: 358:     return checkLen(m, needed, SERVICE_ID_
      +                          OLD_TEACH);
 28085   0070F4  C531  F52C         	movff	teachCheckLen@m,checkLen@m
 28086   0070F8  C532  F52D         	movff	teachCheckLen@m+1,checkLen@m+1
 28087   0070FC  C533  F52E         	movff	teachCheckLen@needed,checkLen@needed
 28088   007100  0E04               	movlw	4
 28089   007102  6E2F               	movwf	checkLen@service^(0+1280),c
 28090   007104  EC45  F034         	call	_checkLen	;wreg free
 28091   007108                     l1000:
 28092   007108  0012               	return		;funcret
 28093   00710A                     __end_of_teachCheckLen:
 28094                           	callstack 0
 28095                           
 28096 ;; *************** function _doRqevn *****************
 28097 ;; Defined at:
 28098 ;;		line 488 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28099 ;; Parameters:    Size  Location     Type
 28100 ;;		None
 28101 ;; Auto vars:     Size  Location     Type
 28102 ;;  eventNumber     2   41[COMRAM] unsigned short 
 28103 ;;  i               1   44[COMRAM] unsigned char 
 28104 ;;  count           1   43[COMRAM] unsigned char 
 28105 ;; Return value:  Size  Location     Type
 28106 ;;                  1    wreg      void 
 28107 ;; Registers used:
 28108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28109 ;; Tracked objects:
 28110 ;;		On entry : 0/0
 28111 ;;		On exit  : 0/0
 28112 ;;		Unchanged: 0/0
 28113 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28115 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28117 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28118 ;;Total ram usage:        4 bytes
 28119 ;; Hardware stack levels used: 1
 28120 ;; Hardware stack levels required when called: 6
 28121 ;; This function calls:
 28122 ;;		_getEN
 28123 ;;		_sendMessage3
 28124 ;; This function is called by:
 28125 ;;		_teachProcessMessage
 28126 ;; This function uses a non-reentrant model
 28127 ;;
 28128                           
 28129                           	psect	text24
 28130   007B9C                     __ptext24:
 28131                           	callstack 0
 28132   007B9C                     _doRqevn:
 28133                           	callstack 118
 28134   007B9C                     
 28135                           ;../../VLCBlib_PIC/event_teach_simple.c: 490:     uint8_t count = 0;
 28136   007B9C  6A2C               	clrf	doRqevn@count^(0+1280),c
 28137                           
 28138                           ;../../VLCBlib_PIC/event_teach_simple.c: 491:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 492:     for (i=0; i<255; i++) {
 28139   007B9E  6A2D               	clrf	doRqevn@i^(0+1280),c
 28140   007BA0                     l8785:
 28141                           
 28142                           ;../../VLCBlib_PIC/event_teach_simple.c: 493:         uint16_t eventNumber;;../../VLCBli
      +                          b_PIC/event_teach_simple.c: 494:         eventNumber = getEN(i);
 28143   007BA0  502D               	movf	doRqevn@i^(0+1280),w,c
 28144   007BA2  ECA0  F033         	call	_getEN
 28145   007BA6  C50D  F52A         	movff	?_getEN,doRqevn@eventNumber
 28146   007BAA  C50E  F52B         	movff	?_getEN+1,doRqevn@eventNumber+1
 28147   007BAE                     
 28148                           ;../../VLCBlib_PIC/event_teach_simple.c: 495:         if (eventNumber != 0) {
 28149   007BAE  502A               	movf	doRqevn@eventNumber^(0+1280),w,c
 28150   007BB0  102B               	iorwf	(doRqevn@eventNumber+1)^(0+1280),w,c
 28151   007BB2  B4D8               	btfsc	status,2,c
 28152   007BB4  EFDE  F03D         	goto	u6151
 28153   007BB8  EFE0  F03D         	goto	u6150
 28154   007BBC                     u6151:
 28155   007BBC  EFE1  F03D         	goto	l1040
 28156   007BC0                     u6150:
 28157   007BC0                     
 28158                           ;../../VLCBlib_PIC/event_teach_simple.c: 496:             count++;
 28159   007BC0  2A2C               	incf	doRqevn@count^(0+1280),f,c
 28160   007BC2                     l1040:
 28161                           
 28162                           ;../../VLCBlib_PIC/event_teach_simple.c: 498:     }
 28163   007BC2  2A2D               	incf	doRqevn@i^(0+1280),f,c
 28164   007BC4  282D               	incf	doRqevn@i^(0+1280),w,c
 28165   007BC6  A4D8               	btfss	status,2,c
 28166   007BC8  EFE8  F03D         	goto	u6161
 28167   007BCC  EFEA  F03D         	goto	u6160
 28168   007BD0                     u6161:
 28169   007BD0  EFD0  F03D         	goto	l8785
 28170   007BD4                     u6160:
 28171   007BD4                     
 28172                           ;../../VLCBlib_PIC/event_teach_simple.c: 499:     sendMessage3(OPC_NUMEV, nn.bytes.hi, n
      +                          n.bytes.lo, count);
 28173   007BD4  C590  F526         	movff	_nn+1,sendMessage3@data1
 28174   007BD8  C58F  F527         	movff	_nn,sendMessage3@data2
 28175   007BDC  C52C  F528         	movff	doRqevn@count,sendMessage3@data3
 28176   007BE0  0E74               	movlw	116
 28177   007BE2  EC57  F040         	call	_sendMessage3
 28178   007BE6  0012               	return		;funcret
 28179   007BE8                     __end_of_doRqevn:
 28180                           	callstack 0
 28181                           
 28182 ;; *************** function _doReval *****************
 28183 ;; Defined at:
 28184 ;;		line 557 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28185 ;; Parameters:    Size  Location     Type
 28186 ;;  enNum           1    wreg     unsigned char 
 28187 ;;  evNum           1   43[COMRAM] unsigned char 
 28188 ;; Auto vars:     Size  Location     Type
 28189 ;;  enNum           1   45[COMRAM] unsigned char 
 28190 ;;  evVal           2   47[COMRAM] int 
 28191 ;;  tableIndex      1   46[COMRAM] unsigned char 
 28192 ;;  evIndex         1   44[COMRAM] unsigned char 
 28193 ;; Return value:  Size  Location     Type
 28194 ;;                  1    wreg      void 
 28195 ;; Registers used:
 28196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28197 ;; Tracked objects:
 28198 ;;		On entry : 0/0
 28199 ;;		On exit  : 0/0
 28200 ;;		Unchanged: 0/0
 28201 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28202 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28203 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28205 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28206 ;;Total ram usage:        6 bytes
 28207 ;; Hardware stack levels used: 1
 28208 ;; Hardware stack levels required when called: 6
 28209 ;; This function calls:
 28210 ;;		_evtIdxToTableIndex
 28211 ;;		_findServiceIndex
 28212 ;;		_getEv
 28213 ;;		_sendMessage3
 28214 ;;		_sendMessage5
 28215 ;;		_startTimedResponse
 28216 ;; This function is called by:
 28217 ;;		_teachProcessMessage
 28218 ;; This function uses a non-reentrant model
 28219 ;;
 28220                           
 28221                           	psect	text25
 28222   005B12                     __ptext25:
 28223                           	callstack 0
 28224   005B12                     _doReval:
 28225                           	callstack 118
 28226                           
 28227                           ;incstack = 0
 28228                           ;doReval@enNum stored from wreg
 28229   005B12  6E2E               	movwf	doReval@enNum^(0+1280),c
 28230   005B14                     
 28231                           ;../../VLCBlib_PIC/event_teach_simple.c: 560:     uint8_t evIndex;;../../VLCBlib_PIC/eve
      +                          nt_teach_simple.c: 561:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 28232   005B14  502E               	movf	doReval@enNum^(0+1280),w,c
 28233   005B16  EC8E  F041         	call	_evtIdxToTableIndex
 28234   005B1A  6E2F               	movwf	doReval@tableIndex^(0+1280),c
 28235   005B1C                     
 28236                           ;../../VLCBlib_PIC/event_teach_simple.c: 562:     int evVal;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 564:     if (tableIndex >= 255) {
 28237   005B1C  282F               	incf	doReval@tableIndex^(0+1280),w,c
 28238   005B1E  A4D8               	btfss	status,2,c
 28239   005B20  EF94  F02D         	goto	u6181
 28240   005B24  EF96  F02D         	goto	u6180
 28241   005B28                     u6181:
 28242   005B28  EFA1  F02D         	goto	l8815
 28243   005B2C                     u6180:
 28244   005B2C                     
 28245                           ;../../VLCBlib_PIC/event_teach_simple.c: 565:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 28246   005B2C  C590  F526         	movff	_nn+1,sendMessage3@data1
 28247   005B30  C58F  F527         	movff	_nn,sendMessage3@data2
 28248   005B34  0E06               	movlw	6
 28249   005B36  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28250   005B38  0E6F               	movlw	111
 28251   005B3A  EC57  F040         	call	_sendMessage3
 28252   005B3E  EFFD  F02D         	goto	l1053
 28253   005B42                     l8815:
 28254                           
 28255                           ;../../VLCBlib_PIC/event_teach_simple.c: 569:     evIndex = evNum-1U;
 28256   005B42  042C               	decf	doReval@evNum^(0+1280),w,c
 28257   005B44  6E2D               	movwf	doReval@evIndex^(0+1280),c
 28258   005B46                     
 28259                           ;../../VLCBlib_PIC/event_teach_simple.c: 571:     if (evNum == 0) {
 28260   005B46  502C               	movf	doReval@evNum^(0+1280),w,c
 28261   005B48  A4D8               	btfss	status,2,c
 28262   005B4A  EFA9  F02D         	goto	u6191
 28263   005B4E  EFAB  F02D         	goto	u6190
 28264   005B52                     u6191:
 28265   005B52  EFC6  F02D         	goto	l8827
 28266   005B56                     u6190:
 28267   005B56                     
 28268                           ;../../VLCBlib_PIC/event_teach_simple.c: 572:         evVal = 248;
 28269   005B56  0E00               	movlw	0
 28270   005B58  6E31               	movwf	(doReval@evVal+1)^(0+1280),c
 28271   005B5A  0EF8               	movlw	248
 28272   005B5C  6E30               	movwf	doReval@evVal^(0+1280),c
 28273   005B5E                     
 28274                           ;../../VLCBlib_PIC/event_teach_simple.c: 573:         if ((mode_flags & 8) == 0) {
 28275   005B5E  0105               	movlb	5	; () banked
 28276   005B60  B7A4               	btfsc	_mode_flags& (0+255),3,b
 28277   005B62  EFB5  F02D         	goto	u6201
 28278   005B66  EFB7  F02D         	goto	u6200
 28279   005B6A                     u6201:
 28280   005B6A  EFCF  F02D         	goto	l8829
 28281   005B6E                     u6200:
 28282   005B6E                     
 28283                           ; BSR set to: 5
 28284                           ;../../VLCBlib_PIC/event_teach_simple.c: 576:             timedResponseOpcode = OPC_NEVA
      +                          L;
 28285   005B6E  0EB5               	movlw	181
 28286   005B70  6FA2               	movwf	_timedResponseOpcode& (0+255),b
 28287   005B72                     
 28288                           ; BSR set to: 5
 28289                           ;../../VLCBlib_PIC/event_teach_simple.c: 577:             startTimedResponse(tableIndex,
      +                           findServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 28290   005B72  0E04               	movlw	4
 28291   005B74  ECF1  F036         	call	_findServiceIndex
 28292   005B78  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 28293   005B7A  0EBC               	movlw	low _reqevCallback
 28294   005B7C  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 28295   005B7E  0E5D               	movlw	high _reqevCallback
 28296   005B80  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 28297   005B82  502F               	movf	doReval@tableIndex^(0+1280),w,c
 28298   005B84  ECA7  F03C         	call	_startTimedResponse
 28299   005B88  EFCF  F02D         	goto	l8829
 28300   005B8C                     l8827:
 28301                           
 28302                           ;../../VLCBlib_PIC/event_teach_simple.c: 580:         evVal = getEv(tableIndex, evIndex)
      +                          ;
 28303   005B8C  C52D  F50D         	movff	doReval@evIndex,getEv@evNum
 28304   005B90  502F               	movf	doReval@tableIndex^(0+1280),w,c
 28305   005B92  EC95  F034         	call	_getEv
 28306   005B96  C50D  F530         	movff	?_getEv,doReval@evVal
 28307   005B9A  C50E  F531         	movff	?_getEv+1,doReval@evVal+1
 28308   005B9E                     l8829:
 28309                           
 28310                           ;../../VLCBlib_PIC/event_teach_simple.c: 583:     if (evVal < 0) {
 28311   005B9E  BE31               	btfsc	(doReval@evVal+1)^(0+1280),7,c
 28312   005BA0  EFD6  F02D         	goto	u6210
 28313   005BA4  EFD4  F02D         	goto	u6211
 28314   005BA8                     u6211:
 28315   005BA8  EFF0  F02D         	goto	l8835
 28316   005BAC                     u6210:
 28317   005BAC                     
 28318                           ;../../VLCBlib_PIC/event_teach_simple.c: 585:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, (uint8_t)(-evVal));
 28319   005BAC  C590  F526         	movff	_nn+1,sendMessage3@data1
 28320   005BB0  C58F  F527         	movff	_nn,sendMessage3@data2
 28321   005BB4  5030               	movf	doReval@evVal^(0+1280),w,c
 28322   005BB6  0800               	sublw	0
 28323   005BB8  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28324   005BBA  0E6F               	movlw	111
 28325   005BBC  EC57  F040         	call	_sendMessage3
 28326                           
 28327                           ;../../VLCBlib_PIC/event_teach_simple.c: 587:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REVAL, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 28328   005BC0  C590  F526         	movff	_nn+1,sendMessage5@data1
 28329   005BC4  C58F  F527         	movff	_nn,sendMessage5@data2
 28330   005BC8  0E9C               	movlw	156
 28331   005BCA  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28332   005BCC  0E04               	movlw	4
 28333   005BCE  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28334   005BD0  5030               	movf	doReval@evVal^(0+1280),w,c
 28335   005BD2  0800               	sublw	0
 28336   005BD4  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28337   005BD6  0EAF               	movlw	175
 28338   005BD8  EC96  F040         	call	_sendMessage5
 28339   005BDC  EFFD  F02D         	goto	l1053
 28340   005BE0                     l8835:
 28341                           
 28342                           ;../../VLCBlib_PIC/event_teach_simple.c: 591:     sendMessage5(OPC_NEVAL, nn.bytes.hi, n
      +                          n.bytes.lo, enNum, evNum, (uint8_t)evVal);
 28343   005BE0  C590  F526         	movff	_nn+1,sendMessage5@data1
 28344   005BE4  C58F  F527         	movff	_nn,sendMessage5@data2
 28345   005BE8  C52E  F528         	movff	doReval@enNum,sendMessage5@data3
 28346   005BEC  C52C  F529         	movff	doReval@evNum,sendMessage5@data4
 28347   005BF0  C530  F52A         	movff	doReval@evVal,sendMessage5@data5
 28348   005BF4  0EB5               	movlw	181
 28349   005BF6  EC96  F040         	call	_sendMessage5
 28350   005BFA                     l1053:
 28351   005BFA  0012               	return		;funcret
 28352   005BFC                     __end_of_doReval:
 28353                           	callstack 0
 28354                           
 28355 ;; *************** function _doReqev *****************
 28356 ;; Defined at:
 28357 ;;		line 622 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28358 ;; Parameters:    Size  Location     Type
 28359 ;;  nodeNumber      2   46[COMRAM] unsigned short 
 28360 ;;  eventNumber     2   48[COMRAM] unsigned short 
 28361 ;;  evNum           1   50[COMRAM] unsigned char 
 28362 ;; Auto vars:     Size  Location     Type
 28363 ;;  evVal           2   51[COMRAM] short 
 28364 ;;  tableIndex      1   53[COMRAM] unsigned char 
 28365 ;; Return value:  Size  Location     Type
 28366 ;;                  1    wreg      void 
 28367 ;; Registers used:
 28368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28369 ;; Tracked objects:
 28370 ;;		On entry : 0/0
 28371 ;;		On exit  : 0/0
 28372 ;;		Unchanged: 0/0
 28373 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28374 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28375 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28377 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28378 ;;Total ram usage:        8 bytes
 28379 ;; Hardware stack levels used: 1
 28380 ;; Hardware stack levels required when called: 6
 28381 ;; This function calls:
 28382 ;;		_findEvent
 28383 ;;		_findServiceIndex
 28384 ;;		_getEv
 28385 ;;		_numEv
 28386 ;;		_sendMessage3
 28387 ;;		_sendMessage5
 28388 ;;		_sendMessage6
 28389 ;;		_startTimedResponse
 28390 ;; This function is called by:
 28391 ;;		_teachProcessMessage
 28392 ;; This function uses a non-reentrant model
 28393 ;;
 28394                           
 28395                           	psect	text26
 28396   004962                     __ptext26:
 28397                           	callstack 0
 28398   004962                     _doReqev:
 28399                           	callstack 118
 28400   004962                     
 28401                           ;../../VLCBlib_PIC/event_teach_simple.c: 623:     int16_t evVal;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 625:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 28402   004962  C52F  F522         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 28403   004966  C530  F523         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 28404   00496A  C531  F524         	movff	doReqev@eventNumber,findEvent@eventNumber
 28405   00496E  C532  F525         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 28406   004972  ECF2  F031         	call	_findEvent	;wreg free
 28407   004976  6E36               	movwf	doReqev@tableIndex^(0+1280),c
 28408   004978                     
 28409                           ;../../VLCBlib_PIC/event_teach_simple.c: 626:     if (tableIndex == 0xff) {
 28410   004978  2836               	incf	doReqev@tableIndex^(0+1280),w,c
 28411   00497A  A4D8               	btfss	status,2,c
 28412   00497C  EFC2  F024         	goto	u6081
 28413   004980  EFC4  F024         	goto	u6080
 28414   004984                     u6081:
 28415   004984  EFDC  F024         	goto	l8723
 28416   004988                     u6080:
 28417   004988                     
 28418                           ;../../VLCBlib_PIC/event_teach_simple.c: 627:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INVALID_EVENT);
 28419   004988  C590  F526         	movff	_nn+1,sendMessage3@data1
 28420   00498C  C58F  F527         	movff	_nn,sendMessage3@data2
 28421   004990  0E07               	movlw	7
 28422   004992  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28423   004994  0E6F               	movlw	111
 28424   004996  EC57  F040         	call	_sendMessage3
 28425                           
 28426                           ;../../VLCBlib_PIC/event_teach_simple.c: 629:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 28427   00499A  C590  F526         	movff	_nn+1,sendMessage5@data1
 28428   00499E  C58F  F527         	movff	_nn,sendMessage5@data2
 28429   0049A2  0EB2               	movlw	178
 28430   0049A4  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28431   0049A6  0E04               	movlw	4
 28432   0049A8  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28433   0049AA  0E07               	movlw	7
 28434   0049AC  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28435   0049AE  0EAF               	movlw	175
 28436   0049B0  EC96  F040         	call	_sendMessage5
 28437   0049B4  EF6A  F025         	goto	l1065
 28438   0049B8                     l8723:
 28439                           
 28440                           ;../../VLCBlib_PIC/event_teach_simple.c: 633:     if (evNum > 252) {
 28441   0049B8  0EFC               	movlw	252
 28442   0049BA  6433               	cpfsgt	doReqev@evNum^(0+1280),c
 28443   0049BC  EFE2  F024         	goto	u6091
 28444   0049C0  EFE4  F024         	goto	u6090
 28445   0049C4                     u6091:
 28446   0049C4  EFFC  F024         	goto	l8729
 28447   0049C8                     u6090:
 28448   0049C8                     
 28449                           ;../../VLCBlib_PIC/event_teach_simple.c: 634:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 28450   0049C8  C590  F526         	movff	_nn+1,sendMessage3@data1
 28451   0049CC  C58F  F527         	movff	_nn,sendMessage3@data2
 28452   0049D0  0E06               	movlw	6
 28453   0049D2  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28454   0049D4  0E6F               	movlw	111
 28455   0049D6  EC57  F040         	call	_sendMessage3
 28456                           
 28457                           ;../../VLCBlib_PIC/event_teach_simple.c: 636:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 28458   0049DA  C590  F526         	movff	_nn+1,sendMessage5@data1
 28459   0049DE  C58F  F527         	movff	_nn,sendMessage5@data2
 28460   0049E2  0EB2               	movlw	178
 28461   0049E4  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28462   0049E6  0E04               	movlw	4
 28463   0049E8  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28464   0049EA  0E06               	movlw	6
 28465   0049EC  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28466   0049EE  0EAF               	movlw	175
 28467   0049F0  EC96  F040         	call	_sendMessage5
 28468   0049F4  EF6A  F025         	goto	l1065
 28469   0049F8                     l8729:
 28470                           
 28471                           ;../../VLCBlib_PIC/event_teach_simple.c: 641:     if (evNum == 0) {
 28472   0049F8  5033               	movf	doReqev@evNum^(0+1280),w,c
 28473   0049FA  A4D8               	btfss	status,2,c
 28474   0049FC  EF02  F025         	goto	u6101
 28475   004A00  EF04  F025         	goto	u6100
 28476   004A04                     u6101:
 28477   004A04  EF31  F025         	goto	l8743
 28478   004A08                     u6100:
 28479   004A08                     
 28480                           ;../../VLCBlib_PIC/event_teach_simple.c: 642:         evVal = 248;
 28481   004A08  0E00               	movlw	0
 28482   004A0A  6E35               	movwf	(doReqev@evVal+1)^(0+1280),c
 28483   004A0C  0EF8               	movlw	248
 28484   004A0E  6E34               	movwf	doReqev@evVal^(0+1280),c
 28485   004A10                     
 28486                           ;../../VLCBlib_PIC/event_teach_simple.c: 643:         if ((mode_flags & 8) == 0) {
 28487   004A10  0105               	movlb	5	; () banked
 28488   004A12  B7A4               	btfsc	_mode_flags& (0+255),3,b
 28489   004A14  EF0E  F025         	goto	u6111
 28490   004A18  EF10  F025         	goto	u6110
 28491   004A1C                     u6111:
 28492   004A1C  EF3A  F025         	goto	l8745
 28493   004A20                     u6110:
 28494   004A20                     
 28495                           ; BSR set to: 5
 28496                           ;../../VLCBlib_PIC/event_teach_simple.c: 644:             sendMessage6(OPC_EVANS, nodeNu
      +                          mber>>8, nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 28497   004A20  5030               	movf	(doReqev@nodeNumber+1)^(0+1280),w,c
 28498   004A22  6E26               	movwf	sendMessage6@data1^(0+1280),c
 28499   004A24  C52F  F527         	movff	doReqev@nodeNumber,sendMessage6@data2
 28500   004A28  5032               	movf	(doReqev@eventNumber+1)^(0+1280),w,c
 28501   004A2A  6E28               	movwf	sendMessage6@data3^(0+1280),c
 28502   004A2C  C531  F529         	movff	doReqev@eventNumber,sendMessage6@data4
 28503   004A30  0E00               	movlw	0
 28504   004A32  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 28505   004A34  5036               	movf	doReqev@tableIndex^(0+1280),w,c
 28506   004A36  ECA0  F041         	call	_numEv
 28507   004A3A  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 28508   004A3C  0ED3               	movlw	211
 28509   004A3E  EC2D  F040         	call	_sendMessage6
 28510   004A42                     
 28511                           ;../../VLCBlib_PIC/event_teach_simple.c: 647:             timedResponseOpcode = OPC_EVAN
      +                          S;
 28512   004A42  0ED3               	movlw	211
 28513   004A44  0105               	movlb	5	; () banked
 28514   004A46  6FA2               	movwf	_timedResponseOpcode& (0+255),b
 28515   004A48                     
 28516                           ; BSR set to: 5
 28517                           ;../../VLCBlib_PIC/event_teach_simple.c: 648:             startTimedResponse(tableIndex,
      +                           findServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 28518   004A48  0E04               	movlw	4
 28519   004A4A  ECF1  F036         	call	_findServiceIndex
 28520   004A4E  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 28521   004A50  0EBC               	movlw	low _reqevCallback
 28522   004A52  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 28523   004A54  0E5D               	movlw	high _reqevCallback
 28524   004A56  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 28525   004A58  5036               	movf	doReqev@tableIndex^(0+1280),w,c
 28526   004A5A  ECA7  F03C         	call	_startTimedResponse
 28527   004A5E  EF6A  F025         	goto	l1065
 28528   004A62                     l8743:
 28529                           
 28530                           ;../../VLCBlib_PIC/event_teach_simple.c: 652:         evVal = getEv(tableIndex, evNum-1)
      +                          ;
 28531   004A62  0433               	decf	doReqev@evNum^(0+1280),w,c
 28532   004A64  6E0D               	movwf	getEv@evNum^(0+1280),c
 28533   004A66  5036               	movf	doReqev@tableIndex^(0+1280),w,c
 28534   004A68  EC95  F034         	call	_getEv
 28535   004A6C  C50D  F534         	movff	?_getEv,doReqev@evVal
 28536   004A70  C50E  F535         	movff	?_getEv+1,doReqev@evVal+1
 28537   004A74                     l8745:
 28538                           
 28539                           ;../../VLCBlib_PIC/event_teach_simple.c: 655:     if (evVal < 0) {
 28540   004A74  BE35               	btfsc	(doReqev@evVal+1)^(0+1280),7,c
 28541   004A76  EF41  F025         	goto	u6120
 28542   004A7A  EF3F  F025         	goto	u6121
 28543   004A7E                     u6121:
 28544   004A7E  EF5B  F025         	goto	l8751
 28545   004A82                     u6120:
 28546   004A82                     
 28547                           ;../../VLCBlib_PIC/event_teach_simple.c: 657:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, (uint8_t)(-evVal));
 28548   004A82  C590  F526         	movff	_nn+1,sendMessage3@data1
 28549   004A86  C58F  F527         	movff	_nn,sendMessage3@data2
 28550   004A8A  5034               	movf	doReqev@evVal^(0+1280),w,c
 28551   004A8C  0800               	sublw	0
 28552   004A8E  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28553   004A90  0E6F               	movlw	111
 28554   004A92  EC57  F040         	call	_sendMessage3
 28555                           
 28556                           ;../../VLCBlib_PIC/event_teach_simple.c: 659:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 28557   004A96  C590  F526         	movff	_nn+1,sendMessage5@data1
 28558   004A9A  C58F  F527         	movff	_nn,sendMessage5@data2
 28559   004A9E  0EB2               	movlw	178
 28560   004AA0  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28561   004AA2  0E04               	movlw	4
 28562   004AA4  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28563   004AA6  5034               	movf	doReqev@evVal^(0+1280),w,c
 28564   004AA8  0800               	sublw	0
 28565   004AAA  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28566   004AAC  0EAF               	movlw	175
 28567   004AAE  EC96  F040         	call	_sendMessage5
 28568   004AB2  EF6A  F025         	goto	l1065
 28569   004AB6                     l8751:
 28570                           
 28571                           ;../../VLCBlib_PIC/event_teach_simple.c: 664:     sendMessage6(OPC_EVANS, nodeNumber>>8,
      +                           nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 28572   004AB6  5030               	movf	(doReqev@nodeNumber+1)^(0+1280),w,c
 28573   004AB8  6E26               	movwf	sendMessage6@data1^(0+1280),c
 28574   004ABA  C52F  F527         	movff	doReqev@nodeNumber,sendMessage6@data2
 28575   004ABE  5032               	movf	(doReqev@eventNumber+1)^(0+1280),w,c
 28576   004AC0  6E28               	movwf	sendMessage6@data3^(0+1280),c
 28577   004AC2  C531  F529         	movff	doReqev@eventNumber,sendMessage6@data4
 28578   004AC6  C533  F52A         	movff	doReqev@evNum,sendMessage6@data5
 28579   004ACA  C534  F52B         	movff	doReqev@evVal,sendMessage6@data6
 28580   004ACE  0ED3               	movlw	211
 28581   004AD0  EC2D  F040         	call	_sendMessage6
 28582   004AD4                     l1065:
 28583   004AD4  0012               	return		;funcret
 28584   004AD6                     __end_of_doReqev:
 28585                           	callstack 0
 28586                           
 28587 ;; *************** function _doNnevn *****************
 28588 ;; Defined at:
 28589 ;;		line 412 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28590 ;; Parameters:    Size  Location     Type
 28591 ;;		None
 28592 ;; Auto vars:     Size  Location     Type
 28593 ;;  eventNumber     2   41[COMRAM] unsigned short 
 28594 ;;  i               1   44[COMRAM] unsigned char 
 28595 ;;  count           1   43[COMRAM] unsigned char 
 28596 ;; Return value:  Size  Location     Type
 28597 ;;                  1    wreg      void 
 28598 ;; Registers used:
 28599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28600 ;; Tracked objects:
 28601 ;;		On entry : 0/0
 28602 ;;		On exit  : 0/0
 28603 ;;		Unchanged: 0/0
 28604 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28606 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28608 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28609 ;;Total ram usage:        4 bytes
 28610 ;; Hardware stack levels used: 1
 28611 ;; Hardware stack levels required when called: 6
 28612 ;; This function calls:
 28613 ;;		_getEN
 28614 ;;		_sendMessage3
 28615 ;; This function is called by:
 28616 ;;		_teachProcessMessage
 28617 ;; This function uses a non-reentrant model
 28618 ;;
 28619                           
 28620                           	psect	text27
 28621   007BE8                     __ptext27:
 28622                           	callstack 0
 28623   007BE8                     _doNnevn:
 28624                           	callstack 118
 28625   007BE8                     
 28626                           ;../../VLCBlib_PIC/event_teach_simple.c: 414:     uint8_t count = 0;
 28627   007BE8  6A2C               	clrf	doNnevn@count^(0+1280),c
 28628                           
 28629                           ;../../VLCBlib_PIC/event_teach_simple.c: 415:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 416:     for (i=0; i<255; i++) {
 28630   007BEA  6A2D               	clrf	doNnevn@i^(0+1280),c
 28631   007BEC                     l8769:
 28632                           
 28633                           ;../../VLCBlib_PIC/event_teach_simple.c: 417:         uint16_t eventNumber;;../../VLCBli
      +                          b_PIC/event_teach_simple.c: 418:         eventNumber = getEN(i);
 28634   007BEC  502D               	movf	doNnevn@i^(0+1280),w,c
 28635   007BEE  ECA0  F033         	call	_getEN
 28636   007BF2  C50D  F52A         	movff	?_getEN,doNnevn@eventNumber
 28637   007BF6  C50E  F52B         	movff	?_getEN+1,doNnevn@eventNumber+1
 28638   007BFA                     
 28639                           ;../../VLCBlib_PIC/event_teach_simple.c: 419:         if (eventNumber == 0) {
 28640   007BFA  502A               	movf	doNnevn@eventNumber^(0+1280),w,c
 28641   007BFC  102B               	iorwf	(doNnevn@eventNumber+1)^(0+1280),w,c
 28642   007BFE  A4D8               	btfss	status,2,c
 28643   007C00  EF04  F03E         	goto	u6131
 28644   007C04  EF06  F03E         	goto	u6130
 28645   007C08                     u6131:
 28646   007C08  EF07  F03E         	goto	l1022
 28647   007C0C                     u6130:
 28648   007C0C                     
 28649                           ;../../VLCBlib_PIC/event_teach_simple.c: 420:             count++;
 28650   007C0C  2A2C               	incf	doNnevn@count^(0+1280),f,c
 28651   007C0E                     l1022:
 28652                           
 28653                           ;../../VLCBlib_PIC/event_teach_simple.c: 422:     }
 28654   007C0E  2A2D               	incf	doNnevn@i^(0+1280),f,c
 28655   007C10  282D               	incf	doNnevn@i^(0+1280),w,c
 28656   007C12  A4D8               	btfss	status,2,c
 28657   007C14  EF0E  F03E         	goto	u6141
 28658   007C18  EF10  F03E         	goto	u6140
 28659   007C1C                     u6141:
 28660   007C1C  EFF6  F03D         	goto	l8769
 28661   007C20                     u6140:
 28662   007C20                     
 28663                           ;../../VLCBlib_PIC/event_teach_simple.c: 423:     sendMessage3(OPC_EVNLF, nn.bytes.hi, n
      +                          n.bytes.lo, count);
 28664   007C20  C590  F526         	movff	_nn+1,sendMessage3@data1
 28665   007C24  C58F  F527         	movff	_nn,sendMessage3@data2
 28666   007C28  C52C  F528         	movff	doNnevn@count,sendMessage3@data3
 28667   007C2C  0E70               	movlw	112
 28668   007C2E  EC57  F040         	call	_sendMessage3
 28669   007C32  0012               	return		;funcret
 28670   007C34                     __end_of_doNnevn:
 28671                           	callstack 0
 28672                           
 28673 ;; *************** function _doNnclr *****************
 28674 ;; Defined at:
 28675 ;;		line 505 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28676 ;; Parameters:    Size  Location     Type
 28677 ;;		None
 28678 ;; Auto vars:     Size  Location     Type
 28679 ;;		None
 28680 ;; Return value:  Size  Location     Type
 28681 ;;                  1    wreg      void 
 28682 ;; Registers used:
 28683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28684 ;; Tracked objects:
 28685 ;;		On entry : 0/0
 28686 ;;		On exit  : 0/0
 28687 ;;		Unchanged: 0/0
 28688 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28693 ;;Total ram usage:        0 bytes
 28694 ;; Hardware stack levels used: 1
 28695 ;; Hardware stack levels required when called: 8
 28696 ;; This function calls:
 28697 ;;		_clearAllEvents
 28698 ;;		_sendMessage2
 28699 ;;		_sendMessage5
 28700 ;; This function is called by:
 28701 ;;		_teachProcessMessage
 28702 ;; This function uses a non-reentrant model
 28703 ;;
 28704                           
 28705                           	psect	text28
 28706   00802C                     __ptext28:
 28707                           	callstack 0
 28708   00802C                     _doNnclr:
 28709                           	callstack 116
 28710   00802C                     
 28711                           ;../../VLCBlib_PIC/event_teach_simple.c: 506:     clearAllEvents();
 28712   00802C  EC07  F041         	call	_clearAllEvents	;wreg free
 28713   008030                     
 28714                           ;../../VLCBlib_PIC/event_teach_simple.c: 507:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 28715   008030  C590  F526         	movff	_nn+1,sendMessage2@data1
 28716   008034  C58F  F527         	movff	_nn,sendMessage2@data2
 28717   008038  0E59               	movlw	89
 28718   00803A  EC6C  F040         	call	_sendMessage2
 28719   00803E                     
 28720                           ;../../VLCBlib_PIC/event_teach_simple.c: 509:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, GRSP_OK);
 28721   00803E  C590  F526         	movff	_nn+1,sendMessage5@data1
 28722   008042  C58F  F527         	movff	_nn,sendMessage5@data2
 28723   008046  0E55               	movlw	85
 28724   008048  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28725   00804A  0E04               	movlw	4
 28726   00804C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28727   00804E  0E00               	movlw	0
 28728   008050  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28729   008052  0EAF               	movlw	175
 28730   008054  EC96  F040         	call	_sendMessage5
 28731   008058  0012               	return		;funcret
 28732   00805A                     __end_of_doNnclr:
 28733                           	callstack 0
 28734                           
 28735 ;; *************** function _doNerd *****************
 28736 ;; Defined at:
 28737 ;;		line 431 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28738 ;; Parameters:    Size  Location     Type
 28739 ;;		None
 28740 ;; Auto vars:     Size  Location     Type
 28741 ;;		None
 28742 ;; Return value:  Size  Location     Type
 28743 ;;                  1    wreg      void 
 28744 ;; Registers used:
 28745 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28746 ;; Tracked objects:
 28747 ;;		On entry : 0/0
 28748 ;;		On exit  : 0/0
 28749 ;;		Unchanged: 0/0
 28750 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28755 ;;Total ram usage:        0 bytes
 28756 ;; Hardware stack levels used: 1
 28757 ;; Hardware stack levels required when called: 2
 28758 ;; This function calls:
 28759 ;;		_findServiceIndex
 28760 ;;		_startTimedResponse
 28761 ;; This function is called by:
 28762 ;;		_teachProcessMessage
 28763 ;; This function uses a non-reentrant model
 28764 ;;
 28765                           
 28766                           	psect	text29
 28767   008284                     __ptext29:
 28768                           	callstack 0
 28769   008284                     _doNerd:
 28770                           	callstack 122
 28771   008284                     
 28772                           ;../../VLCBlib_PIC/event_teach_simple.c: 432:     startTimedResponse(2, findServiceIndex
      +                          (SERVICE_ID_OLD_TEACH), nerdCallback);
 28773   008284  0E04               	movlw	4
 28774   008286  ECF1  F036         	call	_findServiceIndex
 28775   00828A  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 28776   00828C  0E4C               	movlw	low _nerdCallback
 28777   00828E  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 28778   008290  0E75               	movlw	high _nerdCallback
 28779   008292  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 28780   008294  0E02               	movlw	2
 28781   008296  ECA7  F03C         	call	_startTimedResponse
 28782   00829A  0012               	return		;funcret
 28783   00829C                     __end_of_doNerd:
 28784                           	callstack 0
 28785                           
 28786 ;; *************** function _doNenrd *****************
 28787 ;; Defined at:
 28788 ;;		line 464 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28789 ;; Parameters:    Size  Location     Type
 28790 ;;  index           1    wreg     unsigned char 
 28791 ;; Auto vars:     Size  Location     Type
 28792 ;;  index           1   47[COMRAM] unsigned char 
 28793 ;;  eventNumber     2   45[COMRAM] unsigned short 
 28794 ;;  nodeNumber      2   43[COMRAM] unsigned short 
 28795 ;;  tableIndex      1   48[COMRAM] unsigned char 
 28796 ;; Return value:  Size  Location     Type
 28797 ;;                  1    wreg      void 
 28798 ;; Registers used:
 28799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28800 ;; Tracked objects:
 28801 ;;		On entry : 0/0
 28802 ;;		On exit  : 0/0
 28803 ;;		Unchanged: 0/0
 28804 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28806 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28808 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28809 ;;Total ram usage:        6 bytes
 28810 ;; Hardware stack levels used: 1
 28811 ;; Hardware stack levels required when called: 6
 28812 ;; This function calls:
 28813 ;;		_evtIdxToTableIndex
 28814 ;;		_getEN
 28815 ;;		_getNN
 28816 ;;		_sendMessage3
 28817 ;;		_sendMessage5
 28818 ;; This function is called by:
 28819 ;;		_teachProcessMessage
 28820 ;; This function uses a non-reentrant model
 28821 ;;
 28822                           
 28823                           	psect	text30
 28824   00710A                     __ptext30:
 28825                           	callstack 0
 28826   00710A                     _doNenrd:
 28827                           	callstack 118
 28828                           
 28829                           ;incstack = 0
 28830                           ;doNenrd@index stored from wreg
 28831   00710A  6E30               	movwf	doNenrd@index^(0+1280),c
 28832   00710C                     
 28833                           ;../../VLCBlib_PIC/event_teach_simple.c: 465:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 466:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 468:     tableIndex = evtIdxToTableIndex(index);
 28834   00710C  5030               	movf	doNenrd@index^(0+1280),w,c
 28835   00710E  EC8E  F041         	call	_evtIdxToTableIndex
 28836   007112  6E31               	movwf	doNenrd@tableIndex^(0+1280),c
 28837   007114                     
 28838                           ;../../VLCBlib_PIC/event_teach_simple.c: 470:     if (tableIndex >= 255) {
 28839   007114  2831               	incf	doNenrd@tableIndex^(0+1280),w,c
 28840   007116  A4D8               	btfss	status,2,c
 28841   007118  EF90  F038         	goto	u6171
 28842   00711C  EF92  F038         	goto	u6170
 28843   007120                     u6171:
 28844   007120  EFAA  F038         	goto	l8803
 28845   007124                     u6170:
 28846   007124                     
 28847                           ;../../VLCBlib_PIC/event_teach_simple.c: 471:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EN_IDX);
 28848   007124  C590  F526         	movff	_nn+1,sendMessage3@data1
 28849   007128  C58F  F527         	movff	_nn,sendMessage3@data2
 28850   00712C  0E08               	movlw	8
 28851   00712E  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28852   007130  0E6F               	movlw	111
 28853   007132  EC57  F040         	call	_sendMessage3
 28854                           
 28855                           ;../../VLCBlib_PIC/event_teach_simple.c: 473:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, OPC_NENRD, SERVICE_ID_OLD_TEACH, CMDERR_INV_EN_IDX);
 28856   007136  C590  F526         	movff	_nn+1,sendMessage5@data1
 28857   00713A  C58F  F527         	movff	_nn,sendMessage5@data2
 28858   00713E  0E72               	movlw	114
 28859   007140  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28860   007142  0E04               	movlw	4
 28861   007144  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28862   007146  0E08               	movlw	8
 28863   007148  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28864   00714A  0EAF               	movlw	175
 28865   00714C  EC96  F040         	call	_sendMessage5
 28866   007150  EFC5  F038         	goto	l1035
 28867   007154                     l8803:
 28868                           
 28869                           ;../../VLCBlib_PIC/event_teach_simple.c: 477:     nodeNumber = getNN(tableIndex);
 28870   007154  5031               	movf	doNenrd@tableIndex^(0+1280),w,c
 28871   007156  EC72  F029         	call	_getNN
 28872   00715A  C50D  F52C         	movff	?_getNN,doNenrd@nodeNumber
 28873   00715E  C50E  F52D         	movff	?_getNN+1,doNenrd@nodeNumber+1
 28874                           
 28875                           ;../../VLCBlib_PIC/event_teach_simple.c: 478:     eventNumber = getEN(tableIndex);
 28876   007162  5031               	movf	doNenrd@tableIndex^(0+1280),w,c
 28877   007164  ECA0  F033         	call	_getEN
 28878   007168  C50D  F52E         	movff	?_getEN,doNenrd@eventNumber
 28879   00716C  C50E  F52F         	movff	?_getEN+1,doNenrd@eventNumber+1
 28880   007170                     
 28881                           ;../../VLCBlib_PIC/event_teach_simple.c: 479:     sendMessage5(OPC_ENRSP, nodeNumber>>8,
      +                           nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 28882   007170  502D               	movf	(doNenrd@nodeNumber+1)^(0+1280),w,c
 28883   007172  6E26               	movwf	sendMessage5@data1^(0+1280),c
 28884   007174  C52C  F527         	movff	doNenrd@nodeNumber,sendMessage5@data2
 28885   007178  502F               	movf	(doNenrd@eventNumber+1)^(0+1280),w,c
 28886   00717A  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28887   00717C  C52E  F529         	movff	doNenrd@eventNumber,sendMessage5@data4
 28888   007180  C530  F52A         	movff	doNenrd@index,sendMessage5@data5
 28889   007184  0EF2               	movlw	242
 28890   007186  EC96  F040         	call	_sendMessage5
 28891   00718A                     l1035:
 28892   00718A  0012               	return		;funcret
 28893   00718C                     __end_of_doNenrd:
 28894                           	callstack 0
 28895                           
 28896 ;; *************** function _evtIdxToTableIndex *****************
 28897 ;; Defined at:
 28898 ;;		line 961 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28899 ;; Parameters:    Size  Location     Type
 28900 ;;  evtIdx          1    wreg     unsigned char 
 28901 ;; Auto vars:     Size  Location     Type
 28902 ;;  evtIdx          1    0[COMRAM] unsigned char 
 28903 ;; Return value:  Size  Location     Type
 28904 ;;                  1    wreg      unsigned char 
 28905 ;; Registers used:
 28906 ;;		wreg, status,2, status,0
 28907 ;; Tracked objects:
 28908 ;;		On entry : 0/0
 28909 ;;		On exit  : 0/0
 28910 ;;		Unchanged: 0/0
 28911 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28916 ;;Total ram usage:        1 bytes
 28917 ;; Hardware stack levels used: 1
 28918 ;; Hardware stack levels required when called: 1
 28919 ;; This function calls:
 28920 ;;		Nothing
 28921 ;; This function is called by:
 28922 ;;		_doNenrd
 28923 ;;		_doReval
 28924 ;; This function uses a non-reentrant model
 28925 ;;
 28926                           
 28927                           	psect	text31
 28928   00831C                     __ptext31:
 28929                           	callstack 0
 28930   00831C                     _evtIdxToTableIndex:
 28931                           	callstack 122
 28932                           
 28933                           ;incstack = 0
 28934                           ;evtIdxToTableIndex@evtIdx stored from wreg
 28935   00831C  6E01               	movwf	evtIdxToTableIndex@evtIdx^(0+1280),c
 28936   00831E                     
 28937                           ;../../VLCBlib_PIC/event_teach_simple.c: 962:     return evtIdx - 1;
 28938   00831E  0401               	decf	evtIdxToTableIndex@evtIdx^(0+1280),w,c
 28939   008320  0012               	return		;funcret
 28940   008322                     __end_of_evtIdxToTableIndex:
 28941                           	callstack 0
 28942                           
 28943 ;; *************** function _doEvuln *****************
 28944 ;; Defined at:
 28945 ;;		line 599 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28946 ;; Parameters:    Size  Location     Type
 28947 ;;  nodeNumber      2   58[COMRAM] unsigned short 
 28948 ;;  eventNumber     2   60[COMRAM] unsigned short 
 28949 ;; Auto vars:     Size  Location     Type
 28950 ;;  result          1   62[COMRAM] unsigned char 
 28951 ;; Return value:  Size  Location     Type
 28952 ;;                  1    wreg      void 
 28953 ;; Registers used:
 28954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28955 ;; Tracked objects:
 28956 ;;		On entry : 0/0
 28957 ;;		On exit  : 0/0
 28958 ;;		Unchanged: 0/0
 28959 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28963 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28964 ;;Total ram usage:        5 bytes
 28965 ;; Hardware stack levels used: 1
 28966 ;; Hardware stack levels required when called: 8
 28967 ;; This function calls:
 28968 ;;		_removeEvent
 28969 ;;		_sendMessage2
 28970 ;;		_sendMessage3
 28971 ;;		_sendMessage5
 28972 ;; This function is called by:
 28973 ;;		_teachProcessMessage
 28974 ;; This function uses a non-reentrant model
 28975 ;;
 28976                           
 28977                           	psect	text32
 28978   00718C                     __ptext32:
 28979                           	callstack 0
 28980   00718C                     _doEvuln:
 28981                           	callstack 116
 28982   00718C                     
 28983                           ;../../VLCBlib_PIC/event_teach_simple.c: 600:     uint8_t result;;../../VLCBlib_PIC/even
      +                          t_teach_simple.c: 601:     result = removeEvent(nodeNumber, eventNumber);
 28984   00718C  C53B  F536         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 28985   007190  C53C  F537         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 28986   007194  C53D  F538         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 28987   007198  C53E  F539         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 28988   00719C  EC36  F03F         	call	_removeEvent	;wreg free
 28989   0071A0  6E3F               	movwf	doEvuln@result^(0+1280),c
 28990   0071A2                     
 28991                           ;../../VLCBlib_PIC/event_teach_simple.c: 602:     if (result) {
 28992   0071A2  503F               	movf	doEvuln@result^(0+1280),w,c
 28993   0071A4  B4D8               	btfsc	status,2,c
 28994   0071A6  EFD7  F038         	goto	u6071
 28995   0071AA  EFD9  F038         	goto	u6070
 28996   0071AE                     u6071:
 28997   0071AE  EFF1  F038         	goto	l8713
 28998   0071B2                     u6070:
 28999   0071B2                     
 29000                           ;../../VLCBlib_PIC/event_teach_simple.c: 603:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, result);
 29001   0071B2  C590  F526         	movff	_nn+1,sendMessage3@data1
 29002   0071B6  C58F  F527         	movff	_nn,sendMessage3@data2
 29003   0071BA  C53F  F528         	movff	doEvuln@result,sendMessage3@data3
 29004   0071BE  0E6F               	movlw	111
 29005   0071C0  EC57  F040         	call	_sendMessage3
 29006                           
 29007                           ;../../VLCBlib_PIC/event_teach_simple.c: 605:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 29008   0071C4  C590  F526         	movff	_nn+1,sendMessage5@data1
 29009   0071C8  C58F  F527         	movff	_nn,sendMessage5@data2
 29010   0071CC  0E95               	movlw	149
 29011   0071CE  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29012   0071D0  0E04               	movlw	4
 29013   0071D2  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29014   0071D4  C53F  F52A         	movff	doEvuln@result,sendMessage5@data5
 29015   0071D8  0EAF               	movlw	175
 29016   0071DA  EC96  F040         	call	_sendMessage5
 29017   0071DE  EF05  F039         	goto	l1061
 29018   0071E2                     l8713:
 29019                           
 29020                           ;../../VLCBlib_PIC/event_teach_simple.c: 610:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 29021   0071E2  C590  F526         	movff	_nn+1,sendMessage2@data1
 29022   0071E6  C58F  F527         	movff	_nn,sendMessage2@data2
 29023   0071EA  0E59               	movlw	89
 29024   0071EC  EC6C  F040         	call	_sendMessage2
 29025                           
 29026                           ;../../VLCBlib_PIC/event_teach_simple.c: 612:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 29027   0071F0  C590  F526         	movff	_nn+1,sendMessage5@data1
 29028   0071F4  C58F  F527         	movff	_nn,sendMessage5@data2
 29029   0071F8  0E95               	movlw	149
 29030   0071FA  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29031   0071FC  0E04               	movlw	4
 29032   0071FE  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29033   007200  0E00               	movlw	0
 29034   007202  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 29035   007204  0EAF               	movlw	175
 29036   007206  EC96  F040         	call	_sendMessage5
 29037   00720A                     l1061:
 29038   00720A  0012               	return		;funcret
 29039   00720C                     __end_of_doEvuln:
 29040                           	callstack 0
 29041                           
 29042 ;; *************** function _removeEvent *****************
 29043 ;; Defined at:
 29044 ;;		line 705 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29045 ;; Parameters:    Size  Location     Type
 29046 ;;  nodeNumber      2   53[COMRAM] unsigned short 
 29047 ;;  eventNumber     2   55[COMRAM] unsigned short 
 29048 ;; Auto vars:     Size  Location     Type
 29049 ;;  tableIndex      1   57[COMRAM] unsigned char 
 29050 ;; Return value:  Size  Location     Type
 29051 ;;                  1    wreg      unsigned char 
 29052 ;; Registers used:
 29053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29054 ;; Tracked objects:
 29055 ;;		On entry : 0/0
 29056 ;;		On exit  : 0/0
 29057 ;;		Unchanged: 0/0
 29058 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29059 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29060 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29062 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29063 ;;Total ram usage:        5 bytes
 29064 ;; Hardware stack levels used: 1
 29065 ;; Hardware stack levels required when called: 7
 29066 ;; This function calls:
 29067 ;;		_findEvent
 29068 ;;		_removeTableEntry
 29069 ;; This function is called by:
 29070 ;;		_doEvuln
 29071 ;; This function uses a non-reentrant model
 29072 ;;
 29073                           
 29074                           	psect	text33
 29075   007E6C                     __ptext33:
 29076                           	callstack 0
 29077   007E6C                     _removeEvent:
 29078                           	callstack 116
 29079   007E6C                     
 29080                           ;../../VLCBlib_PIC/event_teach_simple.c: 707:     uint8_t tableIndex = findEvent(nodeNum
      +                          ber, eventNumber);
 29081   007E6C  C536  F522         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 29082   007E70  C537  F523         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 29083   007E74  C538  F524         	movff	removeEvent@eventNumber,findEvent@eventNumber
 29084   007E78  C539  F525         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 29085   007E7C  ECF2  F031         	call	_findEvent	;wreg free
 29086   007E80  6E3A               	movwf	removeEvent@tableIndex^(0+1280),c
 29087   007E82                     
 29088                           ;../../VLCBlib_PIC/event_teach_simple.c: 708:     if (tableIndex == 0xff) return CMDERR_
      +                          INVALID_EVENT;
 29089   007E82  283A               	incf	removeEvent@tableIndex^(0+1280),w,c
 29090   007E84  A4D8               	btfss	status,2,c
 29091   007E86  EF47  F03F         	goto	u5631
 29092   007E8A  EF49  F03F         	goto	u5630
 29093   007E8E                     u5631:
 29094   007E8E  EF4C  F03F         	goto	l8177
 29095   007E92                     u5630:
 29096   007E92  0E07               	movlw	7
 29097   007E94  EF4F  F03F         	goto	l1081
 29098   007E98                     l8177:
 29099                           
 29100                           ;../../VLCBlib_PIC/event_teach_simple.c: 710:     return removeTableEntry(tableIndex);
 29101   007E98  503A               	movf	removeEvent@tableIndex^(0+1280),w,c
 29102   007E9A  EC1A  F022         	call	_removeTableEntry
 29103   007E9E                     l1081:
 29104   007E9E  0012               	return		;funcret
 29105   007EA0                     __end_of_removeEvent:
 29106                           	callstack 0
 29107                           
 29108 ;; *************** function _doEvlrn *****************
 29109 ;; Defined at:
 29110 ;;		line 522 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29111 ;; Parameters:    Size  Location     Type
 29112 ;;  nodeNumber      2   77[COMRAM] unsigned short 
 29113 ;;  eventNumber     2   79[COMRAM] unsigned short 
 29114 ;;  evNum           1   81[COMRAM] unsigned char 
 29115 ;;  evVal           1   82[COMRAM] unsigned char 
 29116 ;; Auto vars:     Size  Location     Type
 29117 ;;		None
 29118 ;; Return value:  Size  Location     Type
 29119 ;;                  1    wreg      void 
 29120 ;; Registers used:
 29121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29122 ;; Tracked objects:
 29123 ;;		On entry : 0/0
 29124 ;;		On exit  : 0/0
 29125 ;;		Unchanged: 0/0
 29126 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29127 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29130 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29131 ;;Total ram usage:        6 bytes
 29132 ;; Hardware stack levels used: 1
 29133 ;; Hardware stack levels required when called: 9
 29134 ;; This function calls:
 29135 ;;		_APP_addEvent
 29136 ;;		_sendMessage2
 29137 ;;		_sendMessage3
 29138 ;;		_sendMessage5
 29139 ;; This function is called by:
 29140 ;;		_teachProcessMessage
 29141 ;; This function uses a non-reentrant model
 29142 ;;
 29143                           
 29144                           	psect	text34
 29145   005E92                     __ptext34:
 29146                           	callstack 0
 29147   005E92                     _doEvlrn:
 29148                           	callstack 115
 29149   005E92                     
 29150                           ;../../VLCBlib_PIC/event_teach_simple.c: 524:     evNum--;
 29151   005E92  0652               	decf	doEvlrn@evNum^(0+1280),f,c
 29152   005E94                     
 29153                           ;../../VLCBlib_PIC/event_teach_simple.c: 525:     if (evNum >= 252) {
 29154   005E94  0EFB               	movlw	251
 29155   005E96  6452               	cpfsgt	doEvlrn@evNum^(0+1280),c
 29156   005E98  EF50  F02F         	goto	u6051
 29157   005E9C  EF52  F02F         	goto	u6050
 29158   005EA0                     u6051:
 29159   005EA0  EF6A  F02F         	goto	l8689
 29160   005EA4                     u6050:
 29161   005EA4                     
 29162                           ;../../VLCBlib_PIC/event_teach_simple.c: 526:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 29163   005EA4  C590  F526         	movff	_nn+1,sendMessage3@data1
 29164   005EA8  C58F  F527         	movff	_nn,sendMessage3@data2
 29165   005EAC  0E06               	movlw	6
 29166   005EAE  6E28               	movwf	sendMessage3@data3^(0+1280),c
 29167   005EB0  0E6F               	movlw	111
 29168   005EB2  EC57  F040         	call	_sendMessage3
 29169                           
 29170                           ;../../VLCBlib_PIC/event_teach_simple.c: 528:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 29171   005EB6  C590  F526         	movff	_nn+1,sendMessage5@data1
 29172   005EBA  C58F  F527         	movff	_nn,sendMessage5@data2
 29173   005EBE  0ED2               	movlw	210
 29174   005EC0  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29175   005EC2  0E04               	movlw	4
 29176   005EC4  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29177   005EC6  0E06               	movlw	6
 29178   005EC8  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 29179   005ECA  0EAF               	movlw	175
 29180   005ECC  EC96  F040         	call	_sendMessage5
 29181   005ED0  EFB1  F02F         	goto	l1048
 29182   005ED4                     l8689:
 29183                           
 29184                           ;../../VLCBlib_PIC/event_teach_simple.c: 532:     APP_addEvent(nodeNumber, eventNumber, 
      +                          evNum, evVal, FALSE);
 29185   005ED4  C54E  F547         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 29186   005ED8  C54F  F548         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 29187   005EDC  C550  F549         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 29188   005EE0  C551  F54A         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 29189   005EE4  C552  F54B         	movff	doEvlrn@evNum,APP_addEvent@evNum
 29190   005EE8  C553  F54C         	movff	doEvlrn@evVal,APP_addEvent@evVal
 29191   005EEC  0E00               	movlw	0
 29192   005EEE  6E4D               	movwf	APP_addEvent@forceOwnNN^(0+1280),c
 29193   005EF0  ECD4  F040         	call	_APP_addEvent	;wreg free
 29194   005EF4                     
 29195                           ;../../VLCBlib_PIC/event_teach_simple.c: 533:     if (errno) {
 29196   005EF4  0105               	movlb	5	; () banked
 29197   005EF6  51A3               	movf	_errno& (0+255),w,b
 29198   005EF8  B4D8               	btfsc	status,2,c
 29199   005EFA  EF81  F02F         	goto	u6061
 29200   005EFE  EF83  F02F         	goto	u6060
 29201   005F02                     u6061:
 29202   005F02  EF9B  F02F         	goto	l8697
 29203   005F06                     u6060:
 29204   005F06                     
 29205                           ; BSR set to: 5
 29206                           ;../../VLCBlib_PIC/event_teach_simple.c: 535:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, errno);
 29207   005F06  C590  F526         	movff	_nn+1,sendMessage3@data1
 29208   005F0A  C58F  F527         	movff	_nn,sendMessage3@data2
 29209   005F0E  C5A3  F528         	movff	_errno,sendMessage3@data3
 29210   005F12  0E6F               	movlw	111
 29211   005F14  EC57  F040         	call	_sendMessage3
 29212                           
 29213                           ;../../VLCBlib_PIC/event_teach_simple.c: 537:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, errno);
 29214   005F18  C590  F526         	movff	_nn+1,sendMessage5@data1
 29215   005F1C  C58F  F527         	movff	_nn,sendMessage5@data2
 29216   005F20  0ED2               	movlw	210
 29217   005F22  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29218   005F24  0E04               	movlw	4
 29219   005F26  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29220   005F28  C5A3  F52A         	movff	_errno,sendMessage5@data5
 29221   005F2C  0EAF               	movlw	175
 29222   005F2E  EC96  F040         	call	_sendMessage5
 29223   005F32  EFB1  F02F         	goto	l1048
 29224   005F36                     l8697:
 29225                           
 29226                           ; BSR set to: 5
 29227                           ;../../VLCBlib_PIC/event_teach_simple.c: 542:     teachDiagnostics[0x01].asUint++;
 29228   005F36  4BCE               	infsnz	(_teachDiagnostics+2)& (0+255),f,b
 29229   005F38  2BCF               	incf	(_teachDiagnostics+3)& (0+255),f,b
 29230   005F3A                     
 29231                           ; BSR set to: 5
 29232                           ;../../VLCBlib_PIC/event_teach_simple.c: 544:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 29233   005F3A  C590  F526         	movff	_nn+1,sendMessage2@data1
 29234   005F3E  C58F  F527         	movff	_nn,sendMessage2@data2
 29235   005F42  0E59               	movlw	89
 29236   005F44  EC6C  F040         	call	_sendMessage2
 29237   005F48                     
 29238                           ;../../VLCBlib_PIC/event_teach_simple.c: 546:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 29239   005F48  C590  F526         	movff	_nn+1,sendMessage5@data1
 29240   005F4C  C58F  F527         	movff	_nn,sendMessage5@data2
 29241   005F50  0ED2               	movlw	210
 29242   005F52  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29243   005F54  0E04               	movlw	4
 29244   005F56  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29245   005F58  0E00               	movlw	0
 29246   005F5A  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 29247   005F5C  0EAF               	movlw	175
 29248   005F5E  EC96  F040         	call	_sendMessage5
 29249   005F62                     l1048:
 29250   005F62  0012               	return		;funcret
 29251   005F64                     __end_of_doEvlrn:
 29252                           	callstack 0
 29253                           
 29254 ;; *************** function _APP_addEvent *****************
 29255 ;; Defined at:
 29256 ;;		line 93 in file "../canargb_events.c"
 29257 ;; Parameters:    Size  Location     Type
 29258 ;;  nodeNumber      2   70[COMRAM] unsigned short 
 29259 ;;  eventNumber     2   72[COMRAM] unsigned short 
 29260 ;;  evNum           1   74[COMRAM] unsigned char 
 29261 ;;  evVal           1   75[COMRAM] unsigned char 
 29262 ;;  forceOwnNN      1   76[COMRAM] enum E23257
 29263 ;; Auto vars:     Size  Location     Type
 29264 ;;		None
 29265 ;; Return value:  Size  Location     Type
 29266 ;;                  1    wreg      unsigned char 
 29267 ;; Registers used:
 29268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29269 ;; Tracked objects:
 29270 ;;		On entry : 0/0
 29271 ;;		On exit  : 0/0
 29272 ;;		Unchanged: 0/0
 29273 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29274 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29277 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29278 ;;Total ram usage:        7 bytes
 29279 ;; Hardware stack levels used: 1
 29280 ;; Hardware stack levels required when called: 8
 29281 ;; This function calls:
 29282 ;;		_addEvent
 29283 ;; This function is called by:
 29284 ;;		_doEvlrn
 29285 ;; This function uses a non-reentrant model
 29286 ;;
 29287                           
 29288                           	psect	text35
 29289   0081A8                     __ptext35:
 29290                           	callstack 0
 29291   0081A8                     _APP_addEvent:
 29292                           	callstack 115
 29293   0081A8                     
 29294                           ;../canargb_events.c: 94:     return addEvent(nodeNumber, eventNumber, evNum, evVal, for
      +                          ceOwnNN);;	Return value of _APP_addEvent is never used
 29295   0081A8  C547  F52F         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 29296   0081AC  C548  F530         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 29297   0081B0  C549  F531         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 29298   0081B4  C54A  F532         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 29299   0081B8  C54B  F533         	movff	APP_addEvent@evNum,addEvent@evNum
 29300   0081BC  C54C  F534         	movff	APP_addEvent@evVal,addEvent@evVal
 29301   0081C0  C54D  F535         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 29302   0081C4  ECE8  F01C         	call	_addEvent	;wreg free
 29303   0081C8  0012               	return		;funcret
 29304   0081CA                     __end_of_APP_addEvent:
 29305                           	callstack 0
 29306                           
 29307 ;; *************** function _addEvent *****************
 29308 ;; Defined at:
 29309 ;;		line 754 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29310 ;; Parameters:    Size  Location     Type
 29311 ;;  nodeNumber      2   46[COMRAM] unsigned short 
 29312 ;;  eventNumber     2   48[COMRAM] unsigned short 
 29313 ;;  evNum           1   50[COMRAM] unsigned char 
 29314 ;;  evVal           1   51[COMRAM] unsigned char 
 29315 ;;  forceOwnNN      1   52[COMRAM] enum E23307
 29316 ;; Auto vars:     Size  Location     Type
 29317 ;;  e               1   68[COMRAM] unsigned char 
 29318 ;;  en              2   66[COMRAM] unsigned short 
 29319 ;;  tableIndex      1   69[COMRAM] unsigned char 
 29320 ;; Return value:  Size  Location     Type
 29321 ;;                  1    wreg      unsigned char 
 29322 ;; Registers used:
 29323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29324 ;; Tracked objects:
 29325 ;;		On entry : 0/0
 29326 ;;		On exit  : 0/0
 29327 ;;		Unchanged: 0/0
 29328 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29329 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29330 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29331 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29332 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29333 ;;Total ram usage:       24 bytes
 29334 ;; Hardware stack levels used: 1
 29335 ;; Hardware stack levels required when called: 7
 29336 ;; This function calls:
 29337 ;;		_findEvent
 29338 ;;		_flushFlashBlock
 29339 ;;		_getEN
 29340 ;;		_rebuildHashtable
 29341 ;;		_writeEv
 29342 ;;		_writeNVM
 29343 ;; This function is called by:
 29344 ;;		_APP_addEvent
 29345 ;; This function uses a non-reentrant model
 29346 ;;
 29347                           
 29348                           	psect	text36
 29349   0039D0                     __ptext36:
 29350                           	callstack 0
 29351   0039D0                     _addEvent:
 29352                           	callstack 115
 29353   0039D0                     
 29354                           ;../../VLCBlib_PIC/event_teach_simple.c: 755:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 758:     tableIndex = findEvent(nodeNumber, eventNumber);
 29355   0039D0  C52F  F522         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 29356   0039D4  C530  F523         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 29357   0039D8  C531  F524         	movff	addEvent@eventNumber,findEvent@eventNumber
 29358   0039DC  C532  F525         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 29359   0039E0  ECF2  F031         	call	_findEvent	;wreg free
 29360   0039E4  6E46               	movwf	addEvent@tableIndex^(0+1280),c
 29361   0039E6                     
 29362                           ;../../VLCBlib_PIC/event_teach_simple.c: 759:     if (tableIndex == 0xff) {
 29363   0039E6  2846               	incf	addEvent@tableIndex^(0+1280),w,c
 29364   0039E8  A4D8               	btfss	status,2,c
 29365   0039EA  EFF9  F01C         	goto	u5121
 29366   0039EE  EFFB  F01C         	goto	u5120
 29367   0039F2                     u5121:
 29368   0039F2  EF42  F01E         	goto	l7791
 29369   0039F6                     u5120:
 29370   0039F6                     
 29371                           ;../../VLCBlib_PIC/event_teach_simple.c: 760:         errno = CMDERR_TOO_MANY_EVENTS;
 29372   0039F6  0E04               	movlw	4
 29373   0039F8  0105               	movlb	5	; () banked
 29374   0039FA  6FA3               	movwf	_errno& (0+255),b
 29375   0039FC                     
 29376                           ; BSR set to: 5
 29377                           ;../../VLCBlib_PIC/event_teach_simple.c: 762:         for (tableIndex=0; tableIndex<255;
      +                           tableIndex++) {
 29378   0039FC  6A46               	clrf	addEvent@tableIndex^(0+1280),c
 29379   0039FE                     l7753:
 29380   0039FE  2846               	incf	addEvent@tableIndex^(0+1280),w,c
 29381   003A00  A4D8               	btfss	status,2,c
 29382   003A02  EF05  F01D         	goto	u5131
 29383   003A06  EF07  F01D         	goto	u5130
 29384   003A0A                     u5131:
 29385   003A0A  EF09  F01D         	goto	l7757
 29386   003A0E                     u5130:
 29387   003A0E  EF36  F01E         	goto	l7785
 29388   003A12                     l7757:
 29389                           
 29390                           ;../../VLCBlib_PIC/event_teach_simple.c: 763:             uint16_t en = getEN(tableIndex
      +                          );
 29391   003A12  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29392   003A14  ECA0  F033         	call	_getEN
 29393   003A18  C50D  F543         	movff	?_getEN,addEvent@en
 29394   003A1C  C50E  F544         	movff	?_getEN+1,addEvent@en+1
 29395   003A20                     
 29396                           ;../../VLCBlib_PIC/event_teach_simple.c: 764:             if (en == 0) {
 29397   003A20  5043               	movf	addEvent@en^(0+1280),w,c
 29398   003A22  1044               	iorwf	(addEvent@en+1)^(0+1280),w,c
 29399   003A24  A4D8               	btfss	status,2,c
 29400   003A26  EF17  F01D         	goto	u5141
 29401   003A2A  EF19  F01D         	goto	u5140
 29402   003A2E                     u5141:
 29403   003A2E  EF33  F01E         	goto	l7781
 29404   003A32                     u5140:
 29405   003A32                     
 29406                           ;../../VLCBlib_PIC/event_teach_simple.c: 765:                 uint8_t e;;../../VLCBlib_P
      +                          IC/event_teach_simple.c: 767:                 writeNVM(FLASH_NVM_TYPE, 0x10000 + (sizeof
      +                          (Event) + 1 + 252)*tableIndex+1, nodeNumber&0xFF);
 29407   003A32  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29408   003A34  6E36               	movwf	??_addEvent^(0+1280),c
 29409   003A36  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29410   003A38  0E01               	movlw	1
 29411   003A3A  0236               	mulwf	??_addEvent^(0+1280),c
 29412   003A3C  C4F3 F538          	movff	prodl,??_addEvent+2
 29413   003A40  C4F4 F539          	movff	prodh,??_addEvent+3
 29414   003A44  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29415   003A46  50F3               	movf	prodl,w,c
 29416   003A48  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29417   003A4A  0E01               	movlw	1
 29418   003A4C  0236               	mulwf	??_addEvent^(0+1280),c
 29419   003A4E  50F3               	movf	prodl,w,c
 29420   003A50  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29421   003A52  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29422   003A56  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29423   003A5A  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29424   003A5C  0E01               	movlw	1
 29425   003A5E  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29426   003A60  6E0E               	movwf	writeNVM@index^(0+1280),c
 29427   003A62  0E00               	movlw	0
 29428   003A64  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29429   003A66  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29430   003A68  0E01               	movlw	1
 29431   003A6A  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29432   003A6C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29433   003A6E  C52F  F511         	movff	addEvent@nodeNumber,writeNVM@value
 29434   003A72  0E01               	movlw	1
 29435   003A74  EC47  F03C         	call	_writeNVM
 29436                           
 29437                           ;../../VLCBlib_PIC/event_teach_simple.c: 768:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x10000 + (sizeof(Event) + 1 + 252)*tableIndex+0, nodeNumber>>8);
 29438   003A78  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29439   003A7A  6E36               	movwf	??_addEvent^(0+1280),c
 29440   003A7C  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29441   003A7E  0E01               	movlw	1
 29442   003A80  0236               	mulwf	??_addEvent^(0+1280),c
 29443   003A82  C4F3 F538          	movff	prodl,??_addEvent+2
 29444   003A86  C4F4 F539          	movff	prodh,??_addEvent+3
 29445   003A8A  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29446   003A8C  50F3               	movf	prodl,w,c
 29447   003A8E  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29448   003A90  0E01               	movlw	1
 29449   003A92  0236               	mulwf	??_addEvent^(0+1280),c
 29450   003A94  50F3               	movf	prodl,w,c
 29451   003A96  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29452   003A98  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29453   003A9C  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29454   003AA0  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29455   003AA2  0E00               	movlw	0
 29456   003AA4  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29457   003AA6  6E0E               	movwf	writeNVM@index^(0+1280),c
 29458   003AA8  0E00               	movlw	0
 29459   003AAA  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29460   003AAC  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29461   003AAE  0E01               	movlw	1
 29462   003AB0  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29463   003AB2  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29464   003AB4  5030               	movf	(addEvent@nodeNumber+1)^(0+1280),w,c
 29465   003AB6  6E11               	movwf	writeNVM@value^(0+1280),c
 29466   003AB8  0E01               	movlw	1
 29467   003ABA  EC47  F03C         	call	_writeNVM
 29468                           
 29469                           ;../../VLCBlib_PIC/event_teach_simple.c: 769:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x10000 + (sizeof(Event) + 1 + 252)*tableIndex+3, eventNumber&0xFF);
 29470   003ABE  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29471   003AC0  6E36               	movwf	??_addEvent^(0+1280),c
 29472   003AC2  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29473   003AC4  0E01               	movlw	1
 29474   003AC6  0236               	mulwf	??_addEvent^(0+1280),c
 29475   003AC8  C4F3 F538          	movff	prodl,??_addEvent+2
 29476   003ACC  C4F4 F539          	movff	prodh,??_addEvent+3
 29477   003AD0  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29478   003AD2  50F3               	movf	prodl,w,c
 29479   003AD4  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29480   003AD6  0E01               	movlw	1
 29481   003AD8  0236               	mulwf	??_addEvent^(0+1280),c
 29482   003ADA  50F3               	movf	prodl,w,c
 29483   003ADC  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29484   003ADE  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29485   003AE2  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29486   003AE6  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29487   003AE8  0E03               	movlw	3
 29488   003AEA  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29489   003AEC  6E0E               	movwf	writeNVM@index^(0+1280),c
 29490   003AEE  0E00               	movlw	0
 29491   003AF0  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29492   003AF2  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29493   003AF4  0E01               	movlw	1
 29494   003AF6  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29495   003AF8  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29496   003AFA  C531  F511         	movff	addEvent@eventNumber,writeNVM@value
 29497   003AFE  0E01               	movlw	1
 29498   003B00  EC47  F03C         	call	_writeNVM
 29499                           
 29500                           ;../../VLCBlib_PIC/event_teach_simple.c: 770:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x10000 + (sizeof(Event) + 1 + 252)*tableIndex+2, eventNumber>>8);
 29501   003B04  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29502   003B06  6E36               	movwf	??_addEvent^(0+1280),c
 29503   003B08  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29504   003B0A  0E01               	movlw	1
 29505   003B0C  0236               	mulwf	??_addEvent^(0+1280),c
 29506   003B0E  C4F3 F538          	movff	prodl,??_addEvent+2
 29507   003B12  C4F4 F539          	movff	prodh,??_addEvent+3
 29508   003B16  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29509   003B18  50F3               	movf	prodl,w,c
 29510   003B1A  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29511   003B1C  0E01               	movlw	1
 29512   003B1E  0236               	mulwf	??_addEvent^(0+1280),c
 29513   003B20  50F3               	movf	prodl,w,c
 29514   003B22  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29515   003B24  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29516   003B28  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29517   003B2C  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29518   003B2E  0E02               	movlw	2
 29519   003B30  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29520   003B32  6E0E               	movwf	writeNVM@index^(0+1280),c
 29521   003B34  0E00               	movlw	0
 29522   003B36  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29523   003B38  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29524   003B3A  0E01               	movlw	1
 29525   003B3C  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29526   003B3E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29527   003B40  5032               	movf	(addEvent@eventNumber+1)^(0+1280),w,c
 29528   003B42  6E11               	movwf	writeNVM@value^(0+1280),c
 29529   003B44  0E01               	movlw	1
 29530   003B46  EC47  F03C         	call	_writeNVM
 29531   003B4A                     
 29532                           ;../../VLCBlib_PIC/event_teach_simple.c: 771:                 if (forceOwnNN) {
 29533   003B4A  5035               	movf	addEvent@forceOwnNN^(0+1280),w,c
 29534   003B4C  B4D8               	btfsc	status,2,c
 29535   003B4E  EFAB  F01D         	goto	u5151
 29536   003B52  EFAD  F01D         	goto	u5150
 29537   003B56                     u5151:
 29538   003B56  EFD2  F01D         	goto	l7767
 29539   003B5A                     u5150:
 29540   003B5A                     
 29541                           ;../../VLCBlib_PIC/event_teach_simple.c: 772:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+4, 1);
 29542   003B5A  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29543   003B5C  6E36               	movwf	??_addEvent^(0+1280),c
 29544   003B5E  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29545   003B60  0E01               	movlw	1
 29546   003B62  0236               	mulwf	??_addEvent^(0+1280),c
 29547   003B64  C4F3 F538          	movff	prodl,??_addEvent+2
 29548   003B68  C4F4 F539          	movff	prodh,??_addEvent+3
 29549   003B6C  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29550   003B6E  50F3               	movf	prodl,w,c
 29551   003B70  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29552   003B72  0E01               	movlw	1
 29553   003B74  0236               	mulwf	??_addEvent^(0+1280),c
 29554   003B76  50F3               	movf	prodl,w,c
 29555   003B78  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29556   003B7A  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29557   003B7E  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29558   003B82  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29559   003B84  0E04               	movlw	4
 29560   003B86  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29561   003B88  6E0E               	movwf	writeNVM@index^(0+1280),c
 29562   003B8A  0E00               	movlw	0
 29563   003B8C  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29564   003B8E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29565   003B90  0E01               	movlw	1
 29566   003B92  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29567   003B94  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29568   003B96  0E01               	movlw	1
 29569   003B98  6E11               	movwf	writeNVM@value^(0+1280),c
 29570   003B9A  0E01               	movlw	1
 29571   003B9C  EC47  F03C         	call	_writeNVM
 29572                           
 29573                           ;../../VLCBlib_PIC/event_teach_simple.c: 773:                 } else {
 29574   003BA0  EFF5  F01D         	goto	l7769
 29575   003BA4                     l7767:
 29576                           
 29577                           ;../../VLCBlib_PIC/event_teach_simple.c: 774:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+4, 0);
 29578   003BA4  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29579   003BA6  6E36               	movwf	??_addEvent^(0+1280),c
 29580   003BA8  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29581   003BAA  0E01               	movlw	1
 29582   003BAC  0236               	mulwf	??_addEvent^(0+1280),c
 29583   003BAE  C4F3 F538          	movff	prodl,??_addEvent+2
 29584   003BB2  C4F4 F539          	movff	prodh,??_addEvent+3
 29585   003BB6  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29586   003BB8  50F3               	movf	prodl,w,c
 29587   003BBA  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29588   003BBC  0E01               	movlw	1
 29589   003BBE  0236               	mulwf	??_addEvent^(0+1280),c
 29590   003BC0  50F3               	movf	prodl,w,c
 29591   003BC2  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29592   003BC4  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29593   003BC8  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29594   003BCC  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29595   003BCE  0E04               	movlw	4
 29596   003BD0  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29597   003BD2  6E0E               	movwf	writeNVM@index^(0+1280),c
 29598   003BD4  0E00               	movlw	0
 29599   003BD6  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29600   003BD8  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29601   003BDA  0E01               	movlw	1
 29602   003BDC  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29603   003BDE  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29604   003BE0  0E00               	movlw	0
 29605   003BE2  6E11               	movwf	writeNVM@value^(0+1280),c
 29606   003BE4  0E01               	movlw	1
 29607   003BE6  EC47  F03C         	call	_writeNVM
 29608   003BEA                     l7769:
 29609                           
 29610                           ;../../VLCBlib_PIC/event_teach_simple.c: 776:                 for (e = 0; e < 248; e++) 
      +                          {
 29611   003BEA  6A45               	clrf	addEvent@e^(0+1280),c
 29612   003BEC                     l7775:
 29613                           
 29614                           ;../../VLCBlib_PIC/event_teach_simple.c: 777:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+5 +e, 0);
 29615   003BEC  5045               	movf	addEvent@e^(0+1280),w,c
 29616   003BEE  6E36               	movwf	??_addEvent^(0+1280),c
 29617   003BF0  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29618   003BF2  6A38               	clrf	(??_addEvent+2)^(0+1280),c
 29619   003BF4  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29620   003BF6  6E39               	movwf	(??_addEvent+3)^(0+1280),c
 29621   003BF8  6A3A               	clrf	(??_addEvent+4)^(0+1280),c
 29622   003BFA  0E01               	movlw	1
 29623   003BFC  0239               	mulwf	(??_addEvent+3)^(0+1280),c
 29624   003BFE  C4F3 F53B          	movff	prodl,??_addEvent+5
 29625   003C02  C4F4 F53C          	movff	prodh,??_addEvent+6
 29626   003C06  023A               	mulwf	(??_addEvent+4)^(0+1280),c
 29627   003C08  50F3               	movf	prodl,w,c
 29628   003C0A  263C               	addwf	(??_addEvent+6)^(0+1280),f,c
 29629   003C0C  0E01               	movlw	1
 29630   003C0E  0239               	mulwf	(??_addEvent+3)^(0+1280),c
 29631   003C10  50F3               	movf	prodl,w,c
 29632   003C12  263C               	addwf	(??_addEvent+6)^(0+1280),f,c
 29633   003C14  C53B  F53D         	movff	??_addEvent+5,??_addEvent+7
 29634   003C18  C53C  F53E         	movff	??_addEvent+6,??_addEvent+8
 29635   003C1C  6A3F               	clrf	(??_addEvent+9)^(0+1280),c
 29636   003C1E  5036               	movf	??_addEvent^(0+1280),w,c
 29637   003C20  243D               	addwf	(??_addEvent+7)^(0+1280),w,c
 29638   003C22  6E40               	movwf	(??_addEvent+10)^(0+1280),c
 29639   003C24  5037               	movf	(??_addEvent+1)^(0+1280),w,c
 29640   003C26  203E               	addwfc	(??_addEvent+8)^(0+1280),w,c
 29641   003C28  6E41               	movwf	(??_addEvent+11)^(0+1280),c
 29642   003C2A  5038               	movf	(??_addEvent+2)^(0+1280),w,c
 29643   003C2C  203F               	addwfc	(??_addEvent+9)^(0+1280),w,c
 29644   003C2E  6E42               	movwf	(??_addEvent+12)^(0+1280),c
 29645   003C30  0E05               	movlw	5
 29646   003C32  2440               	addwf	(??_addEvent+10)^(0+1280),w,c
 29647   003C34  6E0E               	movwf	writeNVM@index^(0+1280),c
 29648   003C36  0E00               	movlw	0
 29649   003C38  2041               	addwfc	(??_addEvent+11)^(0+1280),w,c
 29650   003C3A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29651   003C3C  0E01               	movlw	1
 29652   003C3E  2042               	addwfc	(??_addEvent+12)^(0+1280),w,c
 29653   003C40  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29654   003C42  0E00               	movlw	0
 29655   003C44  6E11               	movwf	writeNVM@value^(0+1280),c
 29656   003C46  0E01               	movlw	1
 29657   003C48  EC47  F03C         	call	_writeNVM
 29658   003C4C                     
 29659                           ;../../VLCBlib_PIC/event_teach_simple.c: 778:                 }
 29660   003C4C  2A45               	incf	addEvent@e^(0+1280),f,c
 29661   003C4E  0EF7               	movlw	247
 29662   003C50  6445               	cpfsgt	addEvent@e^(0+1280),c
 29663   003C52  EF2D  F01E         	goto	u5161
 29664   003C56  EF2F  F01E         	goto	u5160
 29665   003C5A                     u5161:
 29666   003C5A  EFF6  F01D         	goto	l7775
 29667   003C5E                     u5160:
 29668   003C5E                     
 29669                           ;../../VLCBlib_PIC/event_teach_simple.c: 779:                 errno = 0;
 29670   003C5E  0105               	movlb	5	; () banked
 29671   003C60  6BA3               	clrf	_errno& (0+255),b
 29672                           
 29673                           ;../../VLCBlib_PIC/event_teach_simple.c: 780:                 break;
 29674   003C62  EF36  F01E         	goto	l7785
 29675   003C66                     l7781:
 29676                           
 29677                           ;../../VLCBlib_PIC/event_teach_simple.c: 782:         }
 29678   003C66  2A46               	incf	addEvent@tableIndex^(0+1280),f,c
 29679   003C68  EFFF  F01C         	goto	l7753
 29680   003C6C                     l7785:
 29681                           
 29682                           ;../../VLCBlib_PIC/event_teach_simple.c: 783:         if (errno) {
 29683   003C6C  0105               	movlb	5	; () banked
 29684   003C6E  51A3               	movf	_errno& (0+255),w,b
 29685   003C70  B4D8               	btfsc	status,2,c
 29686   003C72  EF3D  F01E         	goto	u5171
 29687   003C76  EF3F  F01E         	goto	u5170
 29688   003C7A                     u5171:
 29689   003C7A  EF42  F01E         	goto	l7791
 29690   003C7E                     u5170:
 29691   003C7E                     l7787:
 29692                           
 29693                           ; BSR set to: 5
 29694                           ;../../VLCBlib_PIC/event_teach_simple.c: 784:             return 0xff;
 29695   003C7E  0EFF               	movlw	255
 29696   003C80  EF5B  F01E         	goto	l1098
 29697   003C84                     l7791:
 29698                           
 29699                           ;../../VLCBlib_PIC/event_teach_simple.c: 788:     if (writeEv(tableIndex, evNum, evVal))
      +                           {
 29700   003C84  C533  F515         	movff	addEvent@evNum,writeEv@evNum
 29701   003C88  C534  F516         	movff	addEvent@evVal,writeEv@evVal
 29702   003C8C  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29703   003C8E  EC18  F036         	call	_writeEv
 29704   003C92  0900               	iorlw	0
 29705   003C94  B4D8               	btfsc	status,2,c
 29706   003C96  EF4F  F01E         	goto	u5181
 29707   003C9A  EF51  F01E         	goto	u5180
 29708   003C9E                     u5181:
 29709   003C9E  EF56  F01E         	goto	l7799
 29710   003CA2                     u5180:
 29711   003CA2                     
 29712                           ;../../VLCBlib_PIC/event_teach_simple.c: 790:         errno = CMDERR_INV_EV_IDX;
 29713   003CA2  0E06               	movlw	6
 29714   003CA4  0105               	movlb	5	; () banked
 29715   003CA6  6FA3               	movwf	_errno& (0+255),b
 29716   003CA8  EF3F  F01E         	goto	l7787
 29717   003CAC                     l7799:
 29718                           
 29719                           ;../../VLCBlib_PIC/event_teach_simple.c: 794:     flushFlashBlock();
 29720   003CAC  ECE4  F034         	call	_flushFlashBlock	;wreg free
 29721   003CB0                     
 29722                           ;../../VLCBlib_PIC/event_teach_simple.c: 796:     rebuildHashtable();
 29723   003CB0  EC98  F02B         	call	_rebuildHashtable	;wreg free
 29724   003CB4                     
 29725                           ;../../VLCBlib_PIC/event_teach_simple.c: 798:     return tableIndex;
 29726   003CB4  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29727   003CB6                     l1098:
 29728   003CB6  0012               	return		;funcret
 29729   003CB8                     __end_of_addEvent:
 29730                           	callstack 0
 29731                           
 29732 ;; *************** function _writeEv *****************
 29733 ;; Defined at:
 29734 ;;		line 845 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29735 ;; Parameters:    Size  Location     Type
 29736 ;;  tableIndex      1    wreg     unsigned char 
 29737 ;;  evNum           1   20[COMRAM] unsigned char 
 29738 ;;  evVal           1   21[COMRAM] unsigned char 
 29739 ;; Auto vars:     Size  Location     Type
 29740 ;;  tableIndex      1   35[COMRAM] unsigned char 
 29741 ;; Return value:  Size  Location     Type
 29742 ;;                  1    wreg      unsigned char 
 29743 ;; Registers used:
 29744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29745 ;; Tracked objects:
 29746 ;;		On entry : 0/0
 29747 ;;		On exit  : 0/0
 29748 ;;		Unchanged: 0/0
 29749 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29752 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29753 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29754 ;;Total ram usage:       16 bytes
 29755 ;; Hardware stack levels used: 1
 29756 ;; Hardware stack levels required when called: 6
 29757 ;; This function calls:
 29758 ;;		_writeNVM
 29759 ;; This function is called by:
 29760 ;;		_addEvent
 29761 ;; This function uses a non-reentrant model
 29762 ;;
 29763                           
 29764                           	psect	text37
 29765   006C30                     __ptext37:
 29766                           	callstack 0
 29767   006C30                     _writeEv:
 29768                           	callstack 115
 29769                           
 29770                           ;incstack = 0
 29771                           ;writeEv@tableIndex stored from wreg
 29772   006C30  6E24               	movwf	writeEv@tableIndex^(0+1280),c
 29773   006C32                     
 29774                           ;../../VLCBlib_PIC/event_teach_simple.c: 846:     if (evNum >= 252) {
 29775   006C32  0EFB               	movlw	251
 29776   006C34  6415               	cpfsgt	writeEv@evNum^(0+1280),c
 29777   006C36  EF1F  F036         	goto	u5061
 29778   006C3A  EF21  F036         	goto	u5060
 29779   006C3E                     u5061:
 29780   006C3E  EF24  F036         	goto	l7695
 29781   006C42                     u5060:
 29782   006C42                     
 29783                           ;../../VLCBlib_PIC/event_teach_simple.c: 847:         return CMDERR_INV_EV_IDX;
 29784   006C42  0E06               	movlw	6
 29785   006C44  EF60  F036         	goto	l1110
 29786   006C48                     l7695:
 29787                           
 29788                           ;../../VLCBlib_PIC/event_teach_simple.c: 849:     if (tableIndex >= 255) {
 29789   006C48  2824               	incf	writeEv@tableIndex^(0+1280),w,c
 29790   006C4A  A4D8               	btfss	status,2,c
 29791   006C4C  EF2A  F036         	goto	u5071
 29792   006C50  EF2C  F036         	goto	u5070
 29793   006C54                     u5071:
 29794   006C54  EF2F  F036         	goto	l7701
 29795   006C58                     u5070:
 29796   006C58                     
 29797                           ;../../VLCBlib_PIC/event_teach_simple.c: 850:         return CMDERR_INV_EN_IDX;
 29798   006C58  0E08               	movlw	8
 29799   006C5A  EF60  F036         	goto	l1110
 29800   006C5E                     l7701:
 29801                           
 29802                           ;../../VLCBlib_PIC/event_teach_simple.c: 854:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex+5 +evNum, evVal);
 29803   006C5E  5015               	movf	writeEv@evNum^(0+1280),w,c
 29804   006C60  6E17               	movwf	??_writeEv^(0+1280),c
 29805   006C62  6A18               	clrf	(??_writeEv+1)^(0+1280),c
 29806   006C64  6A19               	clrf	(??_writeEv+2)^(0+1280),c
 29807   006C66  5024               	movf	writeEv@tableIndex^(0+1280),w,c
 29808   006C68  6E1A               	movwf	(??_writeEv+3)^(0+1280),c
 29809   006C6A  6A1B               	clrf	(??_writeEv+4)^(0+1280),c
 29810   006C6C  0E01               	movlw	1
 29811   006C6E  021A               	mulwf	(??_writeEv+3)^(0+1280),c
 29812   006C70  C4F3 F51C          	movff	prodl,??_writeEv+5
 29813   006C74  C4F4 F51D          	movff	prodh,??_writeEv+6
 29814   006C78  021B               	mulwf	(??_writeEv+4)^(0+1280),c
 29815   006C7A  50F3               	movf	prodl,w,c
 29816   006C7C  261D               	addwf	(??_writeEv+6)^(0+1280),f,c
 29817   006C7E  0E01               	movlw	1
 29818   006C80  021A               	mulwf	(??_writeEv+3)^(0+1280),c
 29819   006C82  50F3               	movf	prodl,w,c
 29820   006C84  261D               	addwf	(??_writeEv+6)^(0+1280),f,c
 29821   006C86  C51C  F51E         	movff	??_writeEv+5,??_writeEv+7
 29822   006C8A  C51D  F51F         	movff	??_writeEv+6,??_writeEv+8
 29823   006C8E  6A20               	clrf	(??_writeEv+9)^(0+1280),c
 29824   006C90  5017               	movf	??_writeEv^(0+1280),w,c
 29825   006C92  241E               	addwf	(??_writeEv+7)^(0+1280),w,c
 29826   006C94  6E21               	movwf	(??_writeEv+10)^(0+1280),c
 29827   006C96  5018               	movf	(??_writeEv+1)^(0+1280),w,c
 29828   006C98  201F               	addwfc	(??_writeEv+8)^(0+1280),w,c
 29829   006C9A  6E22               	movwf	(??_writeEv+11)^(0+1280),c
 29830   006C9C  5019               	movf	(??_writeEv+2)^(0+1280),w,c
 29831   006C9E  2020               	addwfc	(??_writeEv+9)^(0+1280),w,c
 29832   006CA0  6E23               	movwf	(??_writeEv+12)^(0+1280),c
 29833   006CA2  0E05               	movlw	5
 29834   006CA4  2421               	addwf	(??_writeEv+10)^(0+1280),w,c
 29835   006CA6  6E0E               	movwf	writeNVM@index^(0+1280),c
 29836   006CA8  0E00               	movlw	0
 29837   006CAA  2022               	addwfc	(??_writeEv+11)^(0+1280),w,c
 29838   006CAC  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29839   006CAE  0E01               	movlw	1
 29840   006CB0  2023               	addwfc	(??_writeEv+12)^(0+1280),w,c
 29841   006CB2  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29842   006CB4  C516  F511         	movff	writeEv@evVal,writeNVM@value
 29843   006CB8  0E01               	movlw	1
 29844   006CBA  EC47  F03C         	call	_writeNVM
 29845   006CBE                     
 29846                           ;../../VLCBlib_PIC/event_teach_simple.c: 855:     return 0;
 29847   006CBE  0E00               	movlw	0
 29848   006CC0                     l1110:
 29849   006CC0  0012               	return		;funcret
 29850   006CC2                     __end_of_writeEv:
 29851                           	callstack 0
 29852                           
 29853 ;; *************** function _pollTimedResponse *****************
 29854 ;; Defined at:
 29855 ;;		line 116 in file "../../VLCBlib_PIC/timedResponse.c"
 29856 ;; Parameters:    Size  Location     Type
 29857 ;;		None
 29858 ;; Auto vars:     Size  Location     Type
 29859 ;;  result          1   62[COMRAM] enum E23467
 29860 ;; Return value:  Size  Location     Type
 29861 ;;                  1    wreg      void 
 29862 ;; Registers used:
 29863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29864 ;; Tracked objects:
 29865 ;;		On entry : 0/0
 29866 ;;		On exit  : 0/0
 29867 ;;		Unchanged: 0/0
 29868 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29871 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29872 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29873 ;;Total ram usage:        3 bytes
 29874 ;; Hardware stack levels used: 1
 29875 ;; Hardware stack levels required when called: 7
 29876 ;; This function calls:
 29877 ;;		NULL
 29878 ;;		_mnsTRallDiagnosticsCallback
 29879 ;;		_mnsTRrqnpnCallback
 29880 ;;		_mnsTRserviceDiscoveryCallback
 29881 ;;		_nerdCallback
 29882 ;;		_nvTRnvrdCallback
 29883 ;;		_reqevCallback
 29884 ;; This function is called by:
 29885 ;;		_poll
 29886 ;; This function uses a non-reentrant model
 29887 ;;
 29888                           
 29889                           	psect	text38
 29890   0061AA                     __ptext38:
 29891                           	callstack 0
 29892   0061AA                     _pollTimedResponse:
 29893                           	callstack 118
 29894   0061AA                     
 29895                           ;../../VLCBlib_PIC/timedResponse.c: 117:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 119:     if (timedResponseType == 0xFF) {
 29896   0061AA  0105               	movlb	5	; () banked
 29897   0061AC  2996               	incf	_timedResponseType& (0+255),w,b
 29898   0061AE  A4D8               	btfss	status,2,c
 29899   0061B0  EFDC  F030         	goto	u8191
 29900   0061B4  EFDE  F030         	goto	u8190
 29901   0061B8                     u8191:
 29902   0061B8  EFE0  F030         	goto	l10785
 29903   0061BC                     u8190:
 29904   0061BC  EF34  F031         	goto	l1859
 29905   0061C0                     l10785:
 29906                           
 29907                           ; BSR set to: 5
 29908                           ;../../VLCBlib_PIC/timedResponse.c: 123:     if (timedResponseCallback == ((void*)0)) {
 29909   0061C0  5187               	movf	_timedResponseCallback& (0+255),w,b
 29910   0061C2  1188               	iorwf	(_timedResponseCallback+1)& (0+255),w,b
 29911   0061C4  A4D8               	btfss	status,2,c
 29912   0061C6  EFE7  F030         	goto	u8201
 29913   0061CA  EFE9  F030         	goto	u8200
 29914   0061CE                     u8201:
 29915   0061CE  EFEC  F030         	goto	l10789
 29916   0061D2                     u8200:
 29917   0061D2                     l10787:
 29918                           
 29919                           ; BSR set to: 5
 29920                           ;../../VLCBlib_PIC/timedResponse.c: 125:         timedResponseType = 0xFF;
 29921   0061D2  6996               	setf	_timedResponseType& (0+255),b
 29922                           
 29923                           ;../../VLCBlib_PIC/timedResponse.c: 126:         return;
 29924   0061D4  EF34  F031         	goto	l1859
 29925   0061D8                     l10789:
 29926                           
 29927                           ; BSR set to: 5
 29928                           ;../../VLCBlib_PIC/timedResponse.c: 130:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 29929   0061D8  D802               	call	u8218
 29930   0061DA  EFFD  F030         	goto	u8219
 29931   0061DE                     u8218:
 29932   0061DE  0005               	push	
 29933   0061E0  6EFA               	movwf	pclath,c
 29934   0061E2  5187               	movf	_timedResponseCallback& (0+255),w,b
 29935   0061E4  6EFD               	movwf	tosl,c
 29936   0061E6  5188               	movf	(_timedResponseCallback+1)& (0+255),w,b
 29937   0061E8  6EFE               	movwf	tosh,c
 29938   0061EA  6AFF               	clrf	tosu,c
 29939   0061EC  50FA               	movf	pclath,w,c
 29940   0061EE  C598  F52E         	movff	_timedResponseServiceIndex,nvTRnvrdCallback@serviceIndex
 29941   0061F2  C595  F52F         	movff	_timedResponseStep,nvTRnvrdCallback@step
 29942   0061F6  5196               	movf	_timedResponseType& (0+255),w,b
 29943   0061F8  0012               	return		;indir
 29944   0061FA                     u8219:
 29945   0061FA  6E3F               	movwf	pollTimedResponse@result^(0+1280),c
 29946                           
 29947                           ;../../VLCBlib_PIC/timedResponse.c: 131:     switch (result) {
 29948   0061FC  EF1B  F031         	goto	l10803
 29949   006200                     l10791:
 29950                           
 29951                           ;../../VLCBlib_PIC/timedResponse.c: 135:             if (timedResponseAllServicesFlag) {
 29952   006200  0105               	movlb	5	; () banked
 29953   006202  5197               	movf	_timedResponseAllServicesFlag& (0+255),w,b
 29954   006204  B4D8               	btfsc	status,2,c
 29955   006206  EF07  F031         	goto	u8221
 29956   00620A  EF09  F031         	goto	u8220
 29957   00620E                     u8221:
 29958   00620E  EFE9  F030         	goto	l10787
 29959   006212                     u8220:
 29960   006212                     
 29961                           ; BSR set to: 5
 29962                           ;../../VLCBlib_PIC/timedResponse.c: 137:                 timedResponseServiceIndex++;
 29963   006212  2B98               	incf	_timedResponseServiceIndex& (0+255),f,b
 29964   006214                     
 29965                           ; BSR set to: 5
 29966                           ;../../VLCBlib_PIC/timedResponse.c: 138:                 if (timedResponseServiceIndex >
      +                          = 6) {
 29967   006214  0E05               	movlw	5
 29968   006216  6598               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 29969   006218  EF10  F031         	goto	u8231
 29970   00621C  EF12  F031         	goto	u8230
 29971   006220                     u8231:
 29972   006220  EF14  F031         	goto	l1864
 29973   006224                     u8230:
 29974   006224  EFE9  F030         	goto	l10787
 29975   006228                     l1864:
 29976                           
 29977                           ; BSR set to: 5
 29978                           ;../../VLCBlib_PIC/timedResponse.c: 142:                     timedResponseStep = 0;
 29979   006228  6B95               	clrf	_timedResponseStep& (0+255),b
 29980   00622A  EF34  F031         	goto	l1859
 29981   00622E                     l10799:
 29982                           
 29983                           ;../../VLCBlib_PIC/timedResponse.c: 151:             timedResponseStep++;
 29984   00622E  0105               	movlb	5	; () banked
 29985   006230  2B95               	incf	_timedResponseStep& (0+255),f,b
 29986                           
 29987                           ;../../VLCBlib_PIC/timedResponse.c: 152:             break;
 29988   006232  EF34  F031         	goto	l1859
 29989   006236                     l10803:
 29990   006236  503F               	movf	pollTimedResponse@result^(0+1280),w,c
 29991   006238  6E3D               	movwf	??_pollTimedResponse^(0+1280),c
 29992   00623A  6A3E               	clrf	(??_pollTimedResponse+1)^(0+1280),c
 29993                           
 29994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29995                           ; Switch size 1, requested type "simple"
 29996                           ; Number of cases is 1, Range of values is 0 to 0
 29997                           ; switch strategies available:
 29998                           ; Name         Instructions Cycles
 29999                           ; simple_byte            4     3 (average)
 30000                           ;	Chosen strategy is simple_byte
 30001   00623C  503E               	movf	(??_pollTimedResponse+1)^(0+1280),w,c
 30002   00623E  0A00               	xorlw	0	; case 0
 30003   006240  B4D8               	btfsc	status,2,c
 30004   006242  EF25  F031         	goto	l11631
 30005   006246  EF34  F031         	goto	l1859
 30006   00624A                     l11631:
 30007                           
 30008                           ; Switch size 1, requested type "simple"
 30009                           ; Number of cases is 3, Range of values is 0 to 2
 30010                           ; switch strategies available:
 30011                           ; Name         Instructions Cycles
 30012                           ; simple_byte           10     6 (average)
 30013                           ;	Chosen strategy is simple_byte
 30014   00624A  503D               	movf	??_pollTimedResponse^(0+1280),w,c
 30015   00624C  0A00               	xorlw	0	; case 0
 30016   00624E  B4D8               	btfsc	status,2,c
 30017   006250  EF00  F031         	goto	l10791
 30018   006254  0A01               	xorlw	1	; case 1
 30019   006256  B4D8               	btfsc	status,2,c
 30020   006258  EF34  F031         	goto	l1859
 30021   00625C  0A03               	xorlw	3	; case 2
 30022   00625E  B4D8               	btfsc	status,2,c
 30023   006260  EF17  F031         	goto	l10799
 30024   006264  EF34  F031         	goto	l1859
 30025   006268                     l1859:
 30026   006268  0012               	return		;funcret
 30027   00626A                     __end_of_pollTimedResponse:
 30028                           	callstack 0
 30029                           
 30030 ;; *************** function _nvTRnvrdCallback *****************
 30031 ;; Defined at:
 30032 ;;		line 369 in file "../../VLCBlib_PIC/nv.c"
 30033 ;; Parameters:    Size  Location     Type
 30034 ;;  type            1    wreg     unsigned char 
 30035 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30036 ;;  step            1   46[COMRAM] unsigned char 
 30037 ;; Auto vars:     Size  Location     Type
 30038 ;;  type            1    0[COMRAM] unsigned char 
 30039 ;;  valueOrError    2   47[COMRAM] short 
 30040 ;; Return value:  Size  Location     Type
 30041 ;;                  1    wreg      enum E23491
 30042 ;; Registers used:
 30043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30044 ;; Tracked objects:
 30045 ;;		On entry : 0/0
 30046 ;;		On exit  : 0/0
 30047 ;;		Unchanged: 0/0
 30048 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30052 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30053 ;;Total ram usage:        4 bytes
 30054 ;; Hardware stack levels used: 1
 30055 ;; Hardware stack levels required when called: 6
 30056 ;; This function calls:
 30057 ;;		_getNV
 30058 ;;		_sendMessage4
 30059 ;; This function is called by:
 30060 ;;		_nvProcessMessage
 30061 ;;		_pollTimedResponse
 30062 ;; This function uses a non-reentrant model
 30063 ;;
 30064                           
 30065                           	psect	text39
 30066   007A02                     __ptext39:
 30067                           	callstack 0
 30068   007A02                     _nvTRnvrdCallback:
 30069                           	callstack 118
 30070   007A02                     
 30071                           ;../../VLCBlib_PIC/nv.c: 370:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 371:    
      +                           if (step > 49) {
 30072   007A02  0E31               	movlw	49
 30073   007A04  642F               	cpfsgt	nvTRnvrdCallback@step^(0+1280),c
 30074   007A06  EF07  F03D         	goto	u6371
 30075   007A0A  EF09  F03D         	goto	u6370
 30076   007A0E                     u6371:
 30077   007A0E  EF0C  F03D         	goto	l9033
 30078   007A12                     u6370:
 30079   007A12                     l9029:
 30080                           
 30081                           ;../../VLCBlib_PIC/nv.c: 372:         return TIMED_RESPONSE_RESULT_FINISHED;
 30082   007A12  0E00               	movlw	0
 30083   007A14  EF2B  F03D         	goto	l1572
 30084   007A18                     l9033:
 30085                           
 30086                           ;../../VLCBlib_PIC/nv.c: 374:     valueOrError = getNV(step+1);
 30087   007A18  282F               	incf	nvTRnvrdCallback@step^(0+1280),w,c
 30088   007A1A  EC56  F03D         	call	_getNV
 30089   007A1E  C501  F530         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 30090   007A22  C502  F531         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 30091   007A26                     
 30092                           ;../../VLCBlib_PIC/nv.c: 375:     if (valueOrError < 0) {
 30093   007A26  BE31               	btfsc	(nvTRnvrdCallback@valueOrError+1)^(0+1280),7,c
 30094   007A28  EF1A  F03D         	goto	u6380
 30095   007A2C  EF18  F03D         	goto	u6381
 30096   007A30                     u6381:
 30097   007A30  EF1C  F03D         	goto	l9041
 30098   007A34                     u6380:
 30099   007A34  EF09  F03D         	goto	l9029
 30100   007A38                     l9041:
 30101                           
 30102                           ;../../VLCBlib_PIC/nv.c: 378:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 30103   007A38  C590  F526         	movff	_nn+1,sendMessage4@data1
 30104   007A3C  C58F  F527         	movff	_nn,sendMessage4@data2
 30105   007A40  282F               	incf	nvTRnvrdCallback@step^(0+1280),w,c
 30106   007A42  6E28               	movwf	sendMessage4@data3^(0+1280),c
 30107   007A44  C530  F529         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 30108   007A48  0E97               	movlw	151
 30109   007A4A  EC42  F040         	call	_sendMessage4
 30110   007A4E                     
 30111                           ;../../VLCBlib_PIC/nv.c: 380:     nvDiagnostics[0x01].asUint++;
 30112   007A4E  0105               	movlb	5	; () banked
 30113   007A50  4BBD               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 30114   007A52  2BBE               	incf	(_nvDiagnostics+3)& (0+255),f,b
 30115   007A54                     
 30116                           ; BSR set to: 5
 30117                           ;../../VLCBlib_PIC/nv.c: 382:     return TIMED_RESPONSE_RESULT_NEXT;
 30118   007A54  0E02               	movlw	2
 30119   007A56                     l1572:
 30120   007A56  0012               	return		;funcret
 30121   007A58                     __end_of_nvTRnvrdCallback:
 30122                           	callstack 0
 30123                           
 30124 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 30125 ;; Defined at:
 30126 ;;		line 901 in file "../../VLCBlib_PIC/mns.c"
 30127 ;; Parameters:    Size  Location     Type
 30128 ;;  type            1    wreg     unsigned char 
 30129 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30130 ;;  step            1   46[COMRAM] unsigned char 
 30131 ;; Auto vars:     Size  Location     Type
 30132 ;;  type            1    0[COMRAM] unsigned char 
 30133 ;; Return value:  Size  Location     Type
 30134 ;;                  1    wreg      enum E23474
 30135 ;; Registers used:
 30136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30137 ;; Tracked objects:
 30138 ;;		On entry : 0/0
 30139 ;;		On exit  : 0/0
 30140 ;;		Unchanged: 0/0
 30141 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30144 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30145 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30146 ;;Total ram usage:        6 bytes
 30147 ;; Hardware stack levels used: 1
 30148 ;; Hardware stack levels required when called: 6
 30149 ;; This function calls:
 30150 ;;		_sendMessage5
 30151 ;; This function is called by:
 30152 ;;		_mnsProcessMessage
 30153 ;;		_pollTimedResponse
 30154 ;; This function uses a non-reentrant model
 30155 ;;
 30156                           
 30157                           	psect	text40
 30158   006B02                     __ptext40:
 30159                           	callstack 0
 30160   006B02                     _mnsTRserviceDiscoveryCallback:
 30161                           	callstack 118
 30162   006B02                     
 30163                           ;../../VLCBlib_PIC/mns.c: 902:     if (step >= 6) {
 30164   006B02  0E05               	movlw	5
 30165   006B04  642F               	cpfsgt	mnsTRserviceDiscoveryCallback@step^(0+1280),c
 30166   006B06  EF87  F035         	goto	u6271
 30167   006B0A  EF89  F035         	goto	u6270
 30168   006B0E                     u6271:
 30169   006B0E  EF8C  F035         	goto	l8921
 30170   006B12                     u6270:
 30171   006B12                     
 30172                           ;../../VLCBlib_PIC/mns.c: 903:         return TIMED_RESPONSE_RESULT_FINISHED;
 30173   006B12  0E00               	movlw	0
 30174   006B14  EFCC  F035         	goto	l1452
 30175   006B18                     l8921:
 30176                           
 30177                           ;../../VLCBlib_PIC/mns.c: 906:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 30178   006B18  C590  F526         	movff	_nn+1,sendMessage5@data1
 30179   006B1C  C58F  F527         	movff	_nn,sendMessage5@data2
 30180   006B20  282F               	incf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30181   006B22  6E28               	movwf	sendMessage5@data3^(0+1280),c
 30182   006B24  502F               	movf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30183   006B26  0D02               	mullw	2
 30184   006B28  0E89               	movlw	low _services
 30185   006B2A  24F3               	addwf	243,w,c
 30186   006B2C  6EF6               	movwf	tblptrl,c
 30187   006B2E  0EFF               	movlw	high _services
 30188   006B30  20F4               	addwfc	244,w,c
 30189   006B32  6EF7               	movwf	tblptrh,c
 30190   006B34                     	if	1	;There are 3 active tblptr bytes
 30191   006B34  6AF8               	clrf	tblptru,c
 30192   006B36  0E00               	movlw	low (__mediumconst shr (0+16))
 30193   006B38  22F8               	addwfc	tblptru,f,c
 30194   006B3A                     	endif
 30195   006B3A  0009               	tblrd		*+
 30196   006B3C  C4F5 F530          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 30197   006B40  0009               	tblrd		*+
 30198   006B42  C4F5 F531          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 30199   006B46  C530  F4F6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 30200   006B4A  C531  F4F7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 30201   006B4E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30202   006B4E  6AF8               	clrf	tblptru,c
 30203   006B50                     	endif
 30204   006B50                     	if	0	;tblptru may be non-zero
 30205   006B50                     	endif
 30206   006B50  0008               	tblrd		*
 30207   006B52  C4F5 F529          	movff	tablat,sendMessage5@data4
 30208   006B56  502F               	movf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30209   006B58  0D02               	mullw	2
 30210   006B5A  0E89               	movlw	low _services
 30211   006B5C  24F3               	addwf	243,w,c
 30212   006B5E  6EF6               	movwf	tblptrl,c
 30213   006B60  0EFF               	movlw	high _services
 30214   006B62  20F4               	addwfc	244,w,c
 30215   006B64  6EF7               	movwf	tblptrh,c
 30216   006B66                     	if	1	;There are 3 active tblptr bytes
 30217   006B66  6AF8               	clrf	tblptru,c
 30218   006B68  0E00               	movlw	low (__mediumconst shr (0+16))
 30219   006B6A  22F8               	addwfc	tblptru,f,c
 30220   006B6C                     	endif
 30221   006B6C  0009               	tblrd		*+
 30222   006B6E  C4F5 F532          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 30223   006B72  0009               	tblrd		*+
 30224   006B74  C4F5 F533          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 30225   006B78  0E01               	movlw	1
 30226   006B7A  2632               	addwf	(??_mnsTRserviceDiscoveryCallback+2)^(0+1280),f,c
 30227   006B7C  0E00               	movlw	0
 30228   006B7E  2233               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)^(0+1280),f,c
 30229   006B80  C532  F4F6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 30230   006B84  C533  F4F7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 30231   006B88                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30232   006B88  6AF8               	clrf	tblptru,c
 30233   006B8A                     	endif
 30234   006B8A                     	if	0	;tblptru may be non-zero
 30235   006B8A                     	endif
 30236   006B8A  0008               	tblrd		*
 30237   006B8C  C4F5 F52A          	movff	tablat,sendMessage5@data5
 30238   006B90  0EAC               	movlw	172
 30239   006B92  EC96  F040         	call	_sendMessage5
 30240   006B96                     
 30241                           ;../../VLCBlib_PIC/mns.c: 908:     return TIMED_RESPONSE_RESULT_NEXT;
 30242   006B96  0E02               	movlw	2
 30243   006B98                     l1452:
 30244   006B98  0012               	return		;funcret
 30245   006B9A                     __end_of_mnsTRserviceDiscoveryCallback:
 30246                           	callstack 0
 30247                           
 30248 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 30249 ;; Defined at:
 30250 ;;		line 920 in file "../../VLCBlib_PIC/mns.c"
 30251 ;; Parameters:    Size  Location     Type
 30252 ;;  type            1    wreg     unsigned char 
 30253 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30254 ;;  step            1   46[COMRAM] unsigned char 
 30255 ;; Auto vars:     Size  Location     Type
 30256 ;;  type            1    0[COMRAM] unsigned char 
 30257 ;;  d               2   51[COMRAM] PTR struct DiagnosticVal
 30258 ;;		 -> nvDiagnostics(6), mnsDiagnostics(14), teachDiagnostics(4), consumerDiagnostics(6), 
 30259 ;;		 -> canDiagnostics(38), NULL(0), 
 30260 ;; Return value:  Size  Location     Type
 30261 ;;                  1    wreg      enum E23474
 30262 ;; Registers used:
 30263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30264 ;; Tracked objects:
 30265 ;;		On entry : 0/0
 30266 ;;		On exit  : 0/0
 30267 ;;		Unchanged: 0/0
 30268 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30270 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30271 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30272 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30273 ;;Total ram usage:        8 bytes
 30274 ;; Hardware stack levels used: 1
 30275 ;; Hardware stack levels required when called: 6
 30276 ;; This function calls:
 30277 ;;		NULL
 30278 ;;		_canGetDiagnostic
 30279 ;;		_consumerGetDiagnostic
 30280 ;;		_mnsGetDiagnostic
 30281 ;;		_nvGetDiagnostic
 30282 ;;		_sendMessage6
 30283 ;;		_teachGetDiagnostic
 30284 ;; This function is called by:
 30285 ;;		_mnsProcessMessage
 30286 ;;		_pollTimedResponse
 30287 ;; This function uses a non-reentrant model
 30288 ;;
 30289                           
 30290                           	psect	text41
 30291   005406                     __ptext41:
 30292                           	callstack 0
 30293   005406                     _mnsTRallDiagnosticsCallback:
 30294                           	callstack 118
 30295   005406                     
 30296                           ;../../VLCBlib_PIC/mns.c: 921:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 30297   005406  502E               	movf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30298   005408  0D02               	mullw	2
 30299   00540A  0E89               	movlw	low _services
 30300   00540C  24F3               	addwf	243,w,c
 30301   00540E  6EF6               	movwf	tblptrl,c
 30302   005410  0EFF               	movlw	high _services
 30303   005412  20F4               	addwfc	244,w,c
 30304   005414  6EF7               	movwf	tblptrh,c
 30305   005416                     	if	1	;There are 3 active tblptr bytes
 30306   005416  6AF8               	clrf	tblptru,c
 30307   005418  0E00               	movlw	low (__mediumconst shr (0+16))
 30308   00541A  22F8               	addwfc	tblptru,f,c
 30309   00541C                     	endif
 30310   00541C  0009               	tblrd		*+
 30311   00541E  C4F5 F530          	movff	tablat,??_mnsTRallDiagnosticsCallback
 30312   005422  0009               	tblrd		*+
 30313   005424  C4F5 F531          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 30314   005428  0E0C               	movlw	12
 30315   00542A  2630               	addwf	??_mnsTRallDiagnosticsCallback^(0+1280),f,c
 30316   00542C  0E00               	movlw	0
 30317   00542E  2231               	addwfc	(??_mnsTRallDiagnosticsCallback+1)^(0+1280),f,c
 30318   005430  C530  F4F6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 30319   005434  C531  F4F7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 30320   005438                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30321   005438  6AF8               	clrf	tblptru,c
 30322   00543A                     	endif
 30323   00543A                     	if	0	;tblptru may be non-zero
 30324   00543A                     	endif
 30325   00543A  0009               	tblrd		*+
 30326   00543C  50F5               	movf	tablat,w,c
 30327   00543E  0009               	tblrd		*+
 30328   005440  10F5               	iorwf	tablat,w,c
 30329   005442  A4D8               	btfss	status,2,c
 30330   005444  EF26  F02A         	goto	u6281
 30331   005448  EF28  F02A         	goto	u6280
 30332   00544C                     u6281:
 30333   00544C  EF3A  F02A         	goto	l8935
 30334   005450                     u6280:
 30335   005450                     
 30336                           ;../../VLCBlib_PIC/mns.c: 922:         sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, s
      +                          erviceIndex+1, 0, 0, 0);
 30337   005450  C590  F526         	movff	_nn+1,sendMessage6@data1
 30338   005454  C58F  F527         	movff	_nn,sendMessage6@data2
 30339   005458  282E               	incf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30340   00545A  6E28               	movwf	sendMessage6@data3^(0+1280),c
 30341   00545C  0E00               	movlw	0
 30342   00545E  6E29               	movwf	sendMessage6@data4^(0+1280),c
 30343   005460  0E00               	movlw	0
 30344   005462  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 30345   005464  0E00               	movlw	0
 30346   005466  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 30347   005468  0EC7               	movlw	199
 30348   00546A  EC2D  F040         	call	_sendMessage6
 30349   00546E                     l8931:
 30350                           
 30351                           ;../../VLCBlib_PIC/mns.c: 923:         return TIMED_RESPONSE_RESULT_FINISHED;
 30352   00546E  0E00               	movlw	0
 30353   005470  EF90  F02A         	goto	l1456
 30354   005474                     l8935:
 30355                           
 30356                           ;../../VLCBlib_PIC/mns.c: 925:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step);
 30357   005474  502E               	movf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30358   005476  0D02               	mullw	2
 30359   005478  0E89               	movlw	low _services
 30360   00547A  24F3               	addwf	243,w,c
 30361   00547C  6EF6               	movwf	tblptrl,c
 30362   00547E  0EFF               	movlw	high _services
 30363   005480  20F4               	addwfc	244,w,c
 30364   005482  6EF7               	movwf	tblptrh,c
 30365   005484                     	if	1	;There are 3 active tblptr bytes
 30366   005484  6AF8               	clrf	tblptru,c
 30367   005486  0E00               	movlw	low (__mediumconst shr (0+16))
 30368   005488  22F8               	addwfc	tblptru,f,c
 30369   00548A                     	endif
 30370   00548A  0009               	tblrd		*+
 30371   00548C  C4F5 F530          	movff	tablat,??_mnsTRallDiagnosticsCallback
 30372   005490  0009               	tblrd		*+
 30373   005492  C4F5 F531          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 30374   005496  0E0C               	movlw	12
 30375   005498  2630               	addwf	??_mnsTRallDiagnosticsCallback^(0+1280),f,c
 30376   00549A  0E00               	movlw	0
 30377   00549C  2231               	addwfc	(??_mnsTRallDiagnosticsCallback+1)^(0+1280),f,c
 30378   00549E  C530  F4F6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 30379   0054A2  C531  F4F7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 30380   0054A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30381   0054A6  6AF8               	clrf	tblptru,c
 30382   0054A8                     	endif
 30383   0054A8                     	if	0	;tblptru may be non-zero
 30384   0054A8                     	endif
 30385   0054A8  0009               	tblrd		*+
 30386   0054AA  C4F5 F532          	movff	tablat,??_mnsTRallDiagnosticsCallback+2
 30387   0054AE  0009               	tblrd		*+
 30388   0054B0  C4F5 F533          	movff	tablat,??_mnsTRallDiagnosticsCallback+3
 30389   0054B4  D802               	call	u6298
 30390   0054B6  EF67  F02A         	goto	u6299
 30391   0054BA                     u6298:
 30392   0054BA  0005               	push	
 30393   0054BC  6EFA               	movwf	pclath,c
 30394   0054BE  5032               	movf	(??_mnsTRallDiagnosticsCallback+2)^(0+1280),w,c
 30395   0054C0  6EFD               	movwf	tosl,c
 30396   0054C2  5033               	movf	(??_mnsTRallDiagnosticsCallback+3)^(0+1280),w,c
 30397   0054C4  6EFE               	movwf	tosh,c
 30398   0054C6  6AFF               	clrf	tosu,c
 30399   0054C8  50FA               	movf	pclath,w,c
 30400   0054CA  502F               	movf	mnsTRallDiagnosticsCallback@step^(0+1280),w,c
 30401   0054CC  0012               	return		;indir
 30402   0054CE                     u6299:
 30403   0054CE  C507  F534         	movff	?_nvGetDiagnostic,mnsTRallDiagnosticsCallback@d
 30404   0054D2  C508  F535         	movff	?_nvGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 30405   0054D6                     
 30406                           ;../../VLCBlib_PIC/mns.c: 926:     if (d == ((void*)0)) {
 30407   0054D6  5034               	movf	mnsTRallDiagnosticsCallback@d^(0+1280),w,c
 30408   0054D8  1035               	iorwf	(mnsTRallDiagnosticsCallback@d+1)^(0+1280),w,c
 30409   0054DA  A4D8               	btfss	status,2,c
 30410   0054DC  EF72  F02A         	goto	u6301
 30411   0054E0  EF74  F02A         	goto	u6300
 30412   0054E4                     u6301:
 30413   0054E4  EF76  F02A         	goto	l8943
 30414   0054E8                     u6300:
 30415   0054E8  EF37  F02A         	goto	l8931
 30416   0054EC                     l8943:
 30417                           
 30418                           ;../../VLCBlib_PIC/mns.c: 931:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step, d->asBytes.hi, d->asBytes.lo);
 30419   0054EC  C590  F526         	movff	_nn+1,sendMessage6@data1
 30420   0054F0  C58F  F527         	movff	_nn,sendMessage6@data2
 30421   0054F4  282E               	incf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30422   0054F6  6E28               	movwf	sendMessage6@data3^(0+1280),c
 30423   0054F8  C52F  F529         	movff	mnsTRallDiagnosticsCallback@step,sendMessage6@data4
 30424   0054FC  EE20 F001          	lfsr	2,1
 30425   005500  5034               	movf	mnsTRallDiagnosticsCallback@d^(0+1280),w,c
 30426   005502  26D9               	addwf	fsr2l,f,c
 30427   005504  5035               	movf	(mnsTRallDiagnosticsCallback@d+1)^(0+1280),w,c
 30428   005506  22DA               	addwfc	fsr2h,f,c
 30429   005508  50DF               	movf	indf2,w,c
 30430   00550A  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 30431   00550C  C534  F4D9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 30432   005510  C535  F4DA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 30433   005514  50DF               	movf	indf2,w,c
 30434   005516  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 30435   005518  0EC7               	movlw	199
 30436   00551A  EC2D  F040         	call	_sendMessage6
 30437   00551E                     
 30438                           ;../../VLCBlib_PIC/mns.c: 932:     return TIMED_RESPONSE_RESULT_NEXT;
 30439   00551E  0E02               	movlw	2
 30440   005520                     l1456:
 30441   005520  0012               	return		;funcret
 30442   005522                     __end_of_mnsTRallDiagnosticsCallback:
 30443                           	callstack 0
 30444                           
 30445 ;; *************** function _mnsTRrqnpnCallback *****************
 30446 ;; Defined at:
 30447 ;;		line 943 in file "../../VLCBlib_PIC/mns.c"
 30448 ;; Parameters:    Size  Location     Type
 30449 ;;  type            1    wreg     unsigned char 
 30450 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30451 ;;  step            1   46[COMRAM] unsigned char 
 30452 ;; Auto vars:     Size  Location     Type
 30453 ;;  type            1    0[COMRAM] unsigned char 
 30454 ;; Return value:  Size  Location     Type
 30455 ;;                  1    wreg      enum E23474
 30456 ;; Registers used:
 30457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30458 ;; Tracked objects:
 30459 ;;		On entry : 0/0
 30460 ;;		On exit  : 0/0
 30461 ;;		Unchanged: 0/0
 30462 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30466 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30467 ;;Total ram usage:        2 bytes
 30468 ;; Hardware stack levels used: 1
 30469 ;; Hardware stack levels required when called: 6
 30470 ;; This function calls:
 30471 ;;		_getParameter
 30472 ;;		_sendMessage4
 30473 ;; This function is called by:
 30474 ;;		_mnsProcessMessage
 30475 ;;		_pollTimedResponse
 30476 ;; This function uses a non-reentrant model
 30477 ;;
 30478                           
 30479                           	psect	text42
 30480   007EA0                     __ptext42:
 30481                           	callstack 0
 30482   007EA0                     _mnsTRrqnpnCallback:
 30483                           	callstack 118
 30484   007EA0                     
 30485                           ;../../VLCBlib_PIC/mns.c: 944:     if (step >= 20) {
 30486   007EA0  0E13               	movlw	19
 30487   007EA2  642F               	cpfsgt	mnsTRrqnpnCallback@step^(0+1280),c
 30488   007EA4  EF56  F03F         	goto	u6311
 30489   007EA8  EF58  F03F         	goto	u6310
 30490   007EAC                     u6311:
 30491   007EAC  EF5B  F03F         	goto	l8955
 30492   007EB0                     u6310:
 30493   007EB0                     
 30494                           ;../../VLCBlib_PIC/mns.c: 945:         return TIMED_RESPONSE_RESULT_FINISHED;
 30495   007EB0  0E00               	movlw	0
 30496   007EB2  EF69  F03F         	goto	l1461
 30497   007EB6                     l8955:
 30498                           
 30499                           ;../../VLCBlib_PIC/mns.c: 947:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 30500   007EB6  C590  F526         	movff	_nn+1,sendMessage4@data1
 30501   007EBA  C58F  F527         	movff	_nn,sendMessage4@data2
 30502   007EBE  282F               	incf	mnsTRrqnpnCallback@step^(0+1280),w,c
 30503   007EC0  6E28               	movwf	sendMessage4@data3^(0+1280),c
 30504   007EC2  282F               	incf	mnsTRrqnpnCallback@step^(0+1280),w,c
 30505   007EC4  ECF1  F023         	call	_getParameter
 30506   007EC8  6E29               	movwf	sendMessage4@data4^(0+1280),c
 30507   007ECA  0E9B               	movlw	155
 30508   007ECC  EC42  F040         	call	_sendMessage4
 30509   007ED0                     
 30510                           ;../../VLCBlib_PIC/mns.c: 948:     return TIMED_RESPONSE_RESULT_NEXT;
 30511   007ED0  0E02               	movlw	2
 30512   007ED2                     l1461:
 30513   007ED2  0012               	return		;funcret
 30514   007ED4                     __end_of_mnsTRrqnpnCallback:
 30515                           	callstack 0
 30516                           
 30517 ;; *************** function _nerdCallback *****************
 30518 ;; Defined at:
 30519 ;;		line 442 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30520 ;; Parameters:    Size  Location     Type
 30521 ;;  type            1    wreg     unsigned char 
 30522 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30523 ;;  step            1   46[COMRAM] unsigned char 
 30524 ;; Auto vars:     Size  Location     Type
 30525 ;;  type            1    0[COMRAM] unsigned char 
 30526 ;;  eventNumber     2   49[COMRAM] struct Word
 30527 ;;  nodeNumber      2   47[COMRAM] struct Word
 30528 ;; Return value:  Size  Location     Type
 30529 ;;                  1    wreg      enum E23474
 30530 ;; Registers used:
 30531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30532 ;; Tracked objects:
 30533 ;;		On entry : 0/0
 30534 ;;		On exit  : 0/0
 30535 ;;		Unchanged: 0/0
 30536 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30538 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30540 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30541 ;;Total ram usage:        6 bytes
 30542 ;; Hardware stack levels used: 1
 30543 ;; Hardware stack levels required when called: 6
 30544 ;; This function calls:
 30545 ;;		_getEN
 30546 ;;		_getNN
 30547 ;;		_sendMessage7
 30548 ;;		_tableIndexToEvtIdx
 30549 ;; This function is called by:
 30550 ;;		_doNerd
 30551 ;;		_pollTimedResponse
 30552 ;; This function uses a non-reentrant model
 30553 ;;
 30554                           
 30555                           	psect	text43
 30556   00754C                     __ptext43:
 30557                           	callstack 0
 30558   00754C                     _nerdCallback:
 30559                           	callstack 118
 30560   00754C                     
 30561                           ;../../VLCBlib_PIC/event_teach_simple.c: 443:     Word nodeNumber, eventNumber;;../../VL
      +                          CBlib_PIC/event_teach_simple.c: 445:     if (step >= 255) {
 30562   00754C  282F               	incf	nerdCallback@step^(0+1280),w,c
 30563   00754E  A4D8               	btfss	status,2,c
 30564   007550  EFAC  F03A         	goto	u6221
 30565   007554  EFAE  F03A         	goto	u6220
 30566   007558                     u6221:
 30567   007558  EFB1  F03A         	goto	l8861
 30568   00755C                     u6220:
 30569   00755C                     
 30570                           ;../../VLCBlib_PIC/event_teach_simple.c: 446:         return TIMED_RESPONSE_RESULT_FINIS
      +                          HED;
 30571   00755C  0E00               	movlw	0
 30572   00755E  EFDC  F03A         	goto	l1030
 30573   007562                     l8861:
 30574                           
 30575                           ;../../VLCBlib_PIC/event_teach_simple.c: 449:     eventNumber.word = getEN(step);
 30576   007562  502F               	movf	nerdCallback@step^(0+1280),w,c
 30577   007564  ECA0  F033         	call	_getEN
 30578   007568  C50D  F532         	movff	?_getEN,nerdCallback@eventNumber
 30579   00756C  C50E  F533         	movff	?_getEN+1,nerdCallback@eventNumber+1
 30580   007570                     
 30581                           ;../../VLCBlib_PIC/event_teach_simple.c: 450:     if (eventNumber.word != 0) {
 30582   007570  5032               	movf	nerdCallback@eventNumber^(0+1280),w,c
 30583   007572  1033               	iorwf	(nerdCallback@eventNumber+1)^(0+1280),w,c
 30584   007574  B4D8               	btfsc	status,2,c
 30585   007576  EFBF  F03A         	goto	u6231
 30586   00757A  EFC1  F03A         	goto	u6230
 30587   00757E                     u6231:
 30588   00757E  EFDB  F03A         	goto	l8869
 30589   007582                     u6230:
 30590   007582                     
 30591                           ;../../VLCBlib_PIC/event_teach_simple.c: 451:         nodeNumber.word = getNN(step);
 30592   007582  502F               	movf	nerdCallback@step^(0+1280),w,c
 30593   007584  EC72  F029         	call	_getNN
 30594   007588  C50D  F530         	movff	?_getNN,nerdCallback@nodeNumber
 30595   00758C  C50E  F531         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 30596   007590                     
 30597                           ;../../VLCBlib_PIC/event_teach_simple.c: 452:         sendMessage7(OPC_ENRSP, nn.bytes.h
      +                          i, nn.bytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNum
      +                          ber.bytes.lo, tableIndexToEvtIdx(step));
 30598   007590  C590  F526         	movff	_nn+1,sendMessage7@data1
 30599   007594  C58F  F527         	movff	_nn,sendMessage7@data2
 30600   007598  C531  F528         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 30601   00759C  C530  F529         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 30602   0075A0  C533  F52A         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 30603   0075A4  C532  F52B         	movff	nerdCallback@eventNumber,sendMessage7@data6
 30604   0075A8  502F               	movf	nerdCallback@step^(0+1280),w,c
 30605   0075AA  EC91  F041         	call	_tableIndexToEvtIdx
 30606   0075AE  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 30607   0075B0  0EF2               	movlw	242
 30608   0075B2  EC81  F040         	call	_sendMessage7
 30609   0075B6                     l8869:
 30610                           
 30611                           ;../../VLCBlib_PIC/event_teach_simple.c: 455:     return TIMED_RESPONSE_RESULT_NEXT;
 30612   0075B6  0E02               	movlw	2
 30613   0075B8                     l1030:
 30614   0075B8  0012               	return		;funcret
 30615   0075BA                     __end_of_nerdCallback:
 30616                           	callstack 0
 30617                           
 30618 ;; *************** function _reqevCallback *****************
 30619 ;; Defined at:
 30620 ;;		line 674 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30621 ;; Parameters:    Size  Location     Type
 30622 ;;  tableIndex      1    wreg     unsigned char 
 30623 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30624 ;;  step            1   46[COMRAM] unsigned char 
 30625 ;; Auto vars:     Size  Location     Type
 30626 ;;  tableIndex      1   59[COMRAM] unsigned char 
 30627 ;;  nodeNumber      2   57[COMRAM] struct Word
 30628 ;;  ev              2   55[COMRAM] short 
 30629 ;;  eventNumber     2   53[COMRAM] struct Word
 30630 ;;  nEv             1   52[COMRAM] unsigned char 
 30631 ;; Return value:  Size  Location     Type
 30632 ;;                  1    wreg      enum E23474
 30633 ;; Registers used:
 30634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30635 ;; Tracked objects:
 30636 ;;		On entry : 0/0
 30637 ;;		On exit  : 0/0
 30638 ;;		Unchanged: 0/0
 30639 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30640 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30641 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30642 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30643 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30644 ;;Total ram usage:       15 bytes
 30645 ;; Hardware stack levels used: 1
 30646 ;; Hardware stack levels required when called: 6
 30647 ;; This function calls:
 30648 ;;		_getEN
 30649 ;;		_getEv
 30650 ;;		_getNN
 30651 ;;		_numEv
 30652 ;;		_sendMessage5
 30653 ;;		_sendMessage6
 30654 ;;		_tableIndexToEvtIdx
 30655 ;; This function is called by:
 30656 ;;		_doReval
 30657 ;;		_doReqev
 30658 ;;		_pollTimedResponse
 30659 ;; This function uses a non-reentrant model
 30660 ;;
 30661                           
 30662                           	psect	text44
 30663   005DBC                     __ptext44:
 30664                           	callstack 0
 30665   005DBC                     _reqevCallback:
 30666                           	callstack 118
 30667                           
 30668                           ;incstack = 0
 30669                           ;reqevCallback@tableIndex stored from wreg
 30670   005DBC  6E3C               	movwf	reqevCallback@tableIndex^(0+1280),c
 30671   005DBE                     
 30672                           ;../../VLCBlib_PIC/event_teach_simple.c: 675:     Word nodeNumber, eventNumber;;../../VL
      +                          CBlib_PIC/event_teach_simple.c: 677:     uint8_t nEv = numEv(tableIndex);
 30673   005DBE  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30674   005DC0  ECA0  F041         	call	_numEv
 30675   005DC4  6E35               	movwf	reqevCallback@nEv^(0+1280),c
 30676   005DC6                     
 30677                           ;../../VLCBlib_PIC/event_teach_simple.c: 678:     int16_t ev;;../../VLCBlib_PIC/event_te
      +                          ach_simple.c: 680:     if (step+1 > nEv) {
 30678   005DC6  502F               	movf	reqevCallback@step^(0+1280),w,c
 30679   005DC8  6E30               	movwf	??_reqevCallback^(0+1280),c
 30680   005DCA  6A31               	clrf	(??_reqevCallback+1)^(0+1280),c
 30681   005DCC  0E01               	movlw	1
 30682   005DCE  2630               	addwf	??_reqevCallback^(0+1280),f,c
 30683   005DD0  0E00               	movlw	0
 30684   005DD2  2231               	addwfc	(??_reqevCallback+1)^(0+1280),f,c
 30685   005DD4  5035               	movf	reqevCallback@nEv^(0+1280),w,c
 30686   005DD6  6E32               	movwf	(??_reqevCallback+2)^(0+1280),c
 30687   005DD8  6A33               	clrf	(??_reqevCallback+3)^(0+1280),c
 30688   005DDA  5030               	movf	??_reqevCallback^(0+1280),w,c
 30689   005DDC  5C32               	subwf	(??_reqevCallback+2)^(0+1280),w,c
 30690   005DDE  5033               	movf	(??_reqevCallback+3)^(0+1280),w,c
 30691   005DE0  0A80               	xorlw	128
 30692   005DE2  6E34               	movwf	(??_reqevCallback+4)^(0+1280),c
 30693   005DE4  5031               	movf	(??_reqevCallback+1)^(0+1280),w,c
 30694   005DE6  0A80               	xorlw	128
 30695   005DE8  5834               	subwfb	(??_reqevCallback+4)^(0+1280),w,c
 30696   005DEA  B0D8               	btfsc	status,0,c
 30697   005DEC  EFFA  F02E         	goto	u6241
 30698   005DF0  EFFC  F02E         	goto	u6240
 30699   005DF4                     u6241:
 30700   005DF4  EFFF  F02E         	goto	l8881
 30701   005DF8                     u6240:
 30702   005DF8                     
 30703                           ;../../VLCBlib_PIC/event_teach_simple.c: 681:         return TIMED_RESPONSE_RESULT_FINIS
      +                          HED;
 30704   005DF8  0E00               	movlw	0
 30705   005DFA  EF48  F02F         	goto	l1074
 30706   005DFE                     l8881:
 30707                           
 30708                           ;../../VLCBlib_PIC/event_teach_simple.c: 684:     nodeNumber.word = getNN(tableIndex);
 30709   005DFE  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30710   005E00  EC72  F029         	call	_getNN
 30711   005E04  C50D  F53A         	movff	?_getNN,reqevCallback@nodeNumber
 30712   005E08  C50E  F53B         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 30713                           
 30714                           ;../../VLCBlib_PIC/event_teach_simple.c: 685:     eventNumber.word = getEN(tableIndex);
 30715   005E0C  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30716   005E0E  ECA0  F033         	call	_getEN
 30717   005E12  C50D  F536         	movff	?_getEN,reqevCallback@eventNumber
 30718   005E16  C50E  F537         	movff	?_getEN+1,reqevCallback@eventNumber+1
 30719                           
 30720                           ;../../VLCBlib_PIC/event_teach_simple.c: 686:     ev = getEv(tableIndex, step);
 30721   005E1A  C52F  F50D         	movff	reqevCallback@step,getEv@evNum
 30722   005E1E  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30723   005E20  EC95  F034         	call	_getEv
 30724   005E24  C50D  F538         	movff	?_getEv,reqevCallback@ev
 30725   005E28  C50E  F539         	movff	?_getEv+1,reqevCallback@ev+1
 30726   005E2C                     
 30727                           ;../../VLCBlib_PIC/event_teach_simple.c: 687:     if (ev >= 0) {
 30728   005E2C  BE39               	btfsc	(reqevCallback@ev+1)^(0+1280),7,c
 30729   005E2E  EF1B  F02F         	goto	u6251
 30730   005E32  EF1D  F02F         	goto	u6250
 30731   005E36                     u6251:
 30732   005E36  EF47  F02F         	goto	l8891
 30733   005E3A                     u6250:
 30734   005E3A                     
 30735                           ;../../VLCBlib_PIC/event_teach_simple.c: 688:         if (timedResponseOpcode == OPC_EVA
      +                          NS) {
 30736   005E3A  0ED3               	movlw	211
 30737   005E3C  0105               	movlb	5	; () banked
 30738   005E3E  19A2               	xorwf	_timedResponseOpcode& (0+255),w,b
 30739   005E40  A4D8               	btfss	status,2,c
 30740   005E42  EF25  F02F         	goto	u6261
 30741   005E46  EF27  F02F         	goto	u6260
 30742   005E4A                     u6261:
 30743   005E4A  EF38  F02F         	goto	l8889
 30744   005E4E                     u6260:
 30745   005E4E                     
 30746                           ; BSR set to: 5
 30747                           ;../../VLCBlib_PIC/event_teach_simple.c: 689:             sendMessage6(OPC_EVANS, nodeNu
      +                          mber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, 
      +                          (uint8_t)ev);
 30748   005E4E  C53B  F526         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 30749   005E52  C53A  F527         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 30750   005E56  C537  F528         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 30751   005E5A  C536  F529         	movff	reqevCallback@eventNumber,sendMessage6@data4
 30752   005E5E  282F               	incf	reqevCallback@step^(0+1280),w,c
 30753   005E60  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 30754   005E62  C538  F52B         	movff	reqevCallback@ev,sendMessage6@data6
 30755   005E66  0ED3               	movlw	211
 30756   005E68  EC2D  F040         	call	_sendMessage6
 30757                           
 30758                           ;../../VLCBlib_PIC/event_teach_simple.c: 690:         } else {
 30759   005E6C  EF47  F02F         	goto	l8891
 30760   005E70                     l8889:
 30761                           
 30762                           ; BSR set to: 5
 30763                           ;../../VLCBlib_PIC/event_teach_simple.c: 691:             sendMessage5(OPC_NEVAL, nodeNu
      +                          mber.bytes.hi, nodeNumber.bytes.lo, tableIndexToEvtIdx(tableIndex), step+1, (uint8_t)ev)
      +                          ;
 30764   005E70  C53B  F526         	movff	reqevCallback@nodeNumber+1,sendMessage5@data1
 30765   005E74  C53A  F527         	movff	reqevCallback@nodeNumber,sendMessage5@data2
 30766   005E78  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30767   005E7A  EC91  F041         	call	_tableIndexToEvtIdx
 30768   005E7E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 30769   005E80  282F               	incf	reqevCallback@step^(0+1280),w,c
 30770   005E82  6E29               	movwf	sendMessage5@data4^(0+1280),c
 30771   005E84  C538  F52A         	movff	reqevCallback@ev,sendMessage5@data5
 30772   005E88  0EB5               	movlw	181
 30773   005E8A  EC96  F040         	call	_sendMessage5
 30774   005E8E                     l8891:
 30775                           
 30776                           ;../../VLCBlib_PIC/event_teach_simple.c: 694:     return TIMED_RESPONSE_RESULT_NEXT;
 30777   005E8E  0E02               	movlw	2
 30778   005E90                     l1074:
 30779   005E90  0012               	return		;funcret
 30780   005E92                     __end_of_reqevCallback:
 30781                           	callstack 0
 30782                           
 30783 ;; *************** function _numEv *****************
 30784 ;; Defined at:
 30785 ;;		line 881 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30786 ;; Parameters:    Size  Location     Type
 30787 ;;  tableIndex      1    wreg     unsigned char 
 30788 ;; Auto vars:     Size  Location     Type
 30789 ;;  tableIndex      1    0[COMRAM] unsigned char 
 30790 ;; Return value:  Size  Location     Type
 30791 ;;                  1    wreg      unsigned char 
 30792 ;; Registers used:
 30793 ;;		wreg
 30794 ;; Tracked objects:
 30795 ;;		On entry : 0/0
 30796 ;;		On exit  : 0/0
 30797 ;;		Unchanged: 0/0
 30798 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30803 ;;Total ram usage:        0 bytes
 30804 ;; Hardware stack levels used: 1
 30805 ;; Hardware stack levels required when called: 1
 30806 ;; This function calls:
 30807 ;;		Nothing
 30808 ;; This function is called by:
 30809 ;;		_doReqev
 30810 ;;		_reqevCallback
 30811 ;; This function uses a non-reentrant model
 30812 ;;
 30813                           
 30814                           	psect	text45
 30815   008340                     __ptext45:
 30816                           	callstack 0
 30817   008340                     _numEv:
 30818                           	callstack 122
 30819   008340                     
 30820                           ;../../VLCBlib_PIC/event_teach_simple.c: 882:     return 252;
 30821   008340  0EFC               	movlw	252
 30822   008342  0012               	return		;funcret
 30823   008344                     __end_of_numEv:
 30824                           	callstack 0
 30825                           
 30826 ;; *************** function _getEv *****************
 30827 ;; Defined at:
 30828 ;;		line 865 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30829 ;; Parameters:    Size  Location     Type
 30830 ;;  tableIndex      1    wreg     unsigned char 
 30831 ;;  evNum           1   12[COMRAM] unsigned char 
 30832 ;; Auto vars:     Size  Location     Type
 30833 ;;  tableIndex      1   27[COMRAM] unsigned char 
 30834 ;; Return value:  Size  Location     Type
 30835 ;;                  2   12[COMRAM] short 
 30836 ;; Registers used:
 30837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30838 ;; Tracked objects:
 30839 ;;		On entry : 0/0
 30840 ;;		On exit  : 0/0
 30841 ;;		Unchanged: 0/0
 30842 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30845 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30846 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30847 ;;Total ram usage:       16 bytes
 30848 ;; Hardware stack levels used: 1
 30849 ;; Hardware stack levels required when called: 3
 30850 ;; This function calls:
 30851 ;;		_readNVM
 30852 ;; This function is called by:
 30853 ;;		_doReval
 30854 ;;		_doReqev
 30855 ;;		_reqevCallback
 30856 ;; This function uses a non-reentrant model
 30857 ;;
 30858                           
 30859                           	psect	text46
 30860   00692A                     __ptext46:
 30861                           	callstack 0
 30862   00692A                     _getEv:
 30863                           	callstack 120
 30864                           
 30865                           ;incstack = 0
 30866                           ;getEv@tableIndex stored from wreg
 30867   00692A  6E1C               	movwf	getEv@tableIndex^(0+1280),c
 30868   00692C                     
 30869                           ;../../VLCBlib_PIC/event_teach_simple.c: 866:     if (tableIndex >= 255) {
 30870   00692C  281C               	incf	getEv@tableIndex^(0+1280),w,c
 30871   00692E  A4D8               	btfss	status,2,c
 30872   006930  EF9C  F034         	goto	u5611
 30873   006934  EF9E  F034         	goto	u5610
 30874   006938                     u5611:
 30875   006938  EFA4  F034         	goto	l8159
 30876   00693C                     u5610:
 30877   00693C                     
 30878                           ;../../VLCBlib_PIC/event_teach_simple.c: 867:         return CMDERR_INV_EN_IDX;
 30879   00693C  0E00               	movlw	0
 30880   00693E  6E0E               	movwf	(?_getEv+1)^(0+1280),c
 30881   006940  0E08               	movlw	8
 30882   006942  6E0D               	movwf	?_getEv^(0+1280),c
 30883   006944  EFE3  F034         	goto	l1115
 30884   006948                     l8159:
 30885                           
 30886                           ;../../VLCBlib_PIC/event_teach_simple.c: 869:     if (evNum >= 252) {
 30887   006948  0EFB               	movlw	251
 30888   00694A  640D               	cpfsgt	getEv@evNum^(0+1280),c
 30889   00694C  EFAA  F034         	goto	u5621
 30890   006950  EFAC  F034         	goto	u5620
 30891   006954                     u5621:
 30892   006954  EFB2  F034         	goto	l8165
 30893   006958                     u5620:
 30894   006958                     
 30895                           ;../../VLCBlib_PIC/event_teach_simple.c: 870:         return -CMDERR_INV_EV_IDX;
 30896   006958  0EFF               	movlw	255
 30897   00695A  6E0E               	movwf	(?_getEv+1)^(0+1280),c
 30898   00695C  0EFA               	movlw	250
 30899   00695E  6E0D               	movwf	?_getEv^(0+1280),c
 30900   006960  EFE3  F034         	goto	l1115
 30901   006964                     l8165:
 30902                           
 30903                           ;../../VLCBlib_PIC/event_teach_simple.c: 872:     return (uint8_t)readNVM(FLASH_NVM_TYPE
      +                          , 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+5 +evNum);
 30904   006964  500D               	movf	getEv@evNum^(0+1280),w,c
 30905   006966  6E0F               	movwf	??_getEv^(0+1280),c
 30906   006968  6A10               	clrf	(??_getEv+1)^(0+1280),c
 30907   00696A  6A11               	clrf	(??_getEv+2)^(0+1280),c
 30908   00696C  501C               	movf	getEv@tableIndex^(0+1280),w,c
 30909   00696E  6E12               	movwf	(??_getEv+3)^(0+1280),c
 30910   006970  6A13               	clrf	(??_getEv+4)^(0+1280),c
 30911   006972  0E01               	movlw	1
 30912   006974  0212               	mulwf	(??_getEv+3)^(0+1280),c
 30913   006976  C4F3 F514          	movff	prodl,??_getEv+5
 30914   00697A  C4F4 F515          	movff	prodh,??_getEv+6
 30915   00697E  0213               	mulwf	(??_getEv+4)^(0+1280),c
 30916   006980  50F3               	movf	prodl,w,c
 30917   006982  2615               	addwf	(??_getEv+6)^(0+1280),f,c
 30918   006984  0E01               	movlw	1
 30919   006986  0212               	mulwf	(??_getEv+3)^(0+1280),c
 30920   006988  50F3               	movf	prodl,w,c
 30921   00698A  2615               	addwf	(??_getEv+6)^(0+1280),f,c
 30922   00698C  C514  F516         	movff	??_getEv+5,??_getEv+7
 30923   006990  C515  F517         	movff	??_getEv+6,??_getEv+8
 30924   006994  6A18               	clrf	(??_getEv+9)^(0+1280),c
 30925   006996  500F               	movf	??_getEv^(0+1280),w,c
 30926   006998  2416               	addwf	(??_getEv+7)^(0+1280),w,c
 30927   00699A  6E19               	movwf	(??_getEv+10)^(0+1280),c
 30928   00699C  5010               	movf	(??_getEv+1)^(0+1280),w,c
 30929   00699E  2017               	addwfc	(??_getEv+8)^(0+1280),w,c
 30930   0069A0  6E1A               	movwf	(??_getEv+11)^(0+1280),c
 30931   0069A2  5011               	movf	(??_getEv+2)^(0+1280),w,c
 30932   0069A4  2018               	addwfc	(??_getEv+9)^(0+1280),w,c
 30933   0069A6  6E1B               	movwf	(??_getEv+12)^(0+1280),c
 30934   0069A8  0E05               	movlw	5
 30935   0069AA  2419               	addwf	(??_getEv+10)^(0+1280),w,c
 30936   0069AC  6E07               	movwf	readNVM@index^(0+1280),c
 30937   0069AE  0E00               	movlw	0
 30938   0069B0  201A               	addwfc	(??_getEv+11)^(0+1280),w,c
 30939   0069B2  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 30940   0069B4  0E01               	movlw	1
 30941   0069B6  201B               	addwfc	(??_getEv+12)^(0+1280),w,c
 30942   0069B8  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 30943   0069BA  0E01               	movlw	1
 30944   0069BC  EC6C  F03A         	call	_readNVM
 30945   0069C0  5007               	movf	?_readNVM^(0+1280),w,c
 30946   0069C2  6E0D               	movwf	?_getEv^(0+1280),c
 30947   0069C4  6A0E               	clrf	(?_getEv+1)^(0+1280),c
 30948   0069C6                     l1115:
 30949   0069C6  0012               	return		;funcret
 30950   0069C8                     __end_of_getEv:
 30951                           	callstack 0
 30952                           
 30953 ;; *************** function _tableIndexToEvtIdx *****************
 30954 ;; Defined at:
 30955 ;;		line 971 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30956 ;; Parameters:    Size  Location     Type
 30957 ;;  tableIndex      1    wreg     unsigned char 
 30958 ;; Auto vars:     Size  Location     Type
 30959 ;;  tableIndex      1    0[COMRAM] unsigned char 
 30960 ;; Return value:  Size  Location     Type
 30961 ;;                  1    wreg      unsigned char 
 30962 ;; Registers used:
 30963 ;;		wreg, status,2, status,0
 30964 ;; Tracked objects:
 30965 ;;		On entry : 0/0
 30966 ;;		On exit  : 0/0
 30967 ;;		Unchanged: 0/0
 30968 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30972 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30973 ;;Total ram usage:        1 bytes
 30974 ;; Hardware stack levels used: 1
 30975 ;; Hardware stack levels required when called: 1
 30976 ;; This function calls:
 30977 ;;		Nothing
 30978 ;; This function is called by:
 30979 ;;		_nerdCallback
 30980 ;;		_reqevCallback
 30981 ;; This function uses a non-reentrant model
 30982 ;;
 30983                           
 30984                           	psect	text47
 30985   008322                     __ptext47:
 30986                           	callstack 0
 30987   008322                     _tableIndexToEvtIdx:
 30988                           	callstack 122
 30989                           
 30990                           ;incstack = 0
 30991                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 30992   008322  6E01               	movwf	tableIndexToEvtIdx@tableIndex^(0+1280),c
 30993   008324                     
 30994                           ;../../VLCBlib_PIC/event_teach_simple.c: 972:     return tableIndex + 1;
 30995   008324  2801               	incf	tableIndexToEvtIdx@tableIndex^(0+1280),w,c
 30996   008326  0012               	return		;funcret
 30997   008328                     __end_of_tableIndexToEvtIdx:
 30998                           	callstack 0
 30999                           
 31000 ;; *************** function _setNV *****************
 31001 ;; Defined at:
 31002 ;;		line 218 in file "../../VLCBlib_PIC/nv.c"
 31003 ;; Parameters:    Size  Location     Type
 31004 ;;  index           1    wreg     unsigned char 
 31005 ;;  value           1   20[COMRAM] unsigned char 
 31006 ;; Auto vars:     Size  Location     Type
 31007 ;;  index           1   24[COMRAM] unsigned char 
 31008 ;;  oldValue        1   23[COMRAM] unsigned char 
 31009 ;; Return value:  Size  Location     Type
 31010 ;;                  1    wreg      unsigned char 
 31011 ;; Registers used:
 31012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31013 ;; Tracked objects:
 31014 ;;		On entry : 0/0
 31015 ;;		On exit  : 0/0
 31016 ;;		Unchanged: 0/0
 31017 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31018 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31020 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31021 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31022 ;;Total ram usage:        5 bytes
 31023 ;; Hardware stack levels used: 1
 31024 ;; Hardware stack levels required when called: 6
 31025 ;; This function calls:
 31026 ;;		_APP_nvValidate
 31027 ;;		_APP_nvValueChanged
 31028 ;;		_writeNVM
 31029 ;; This function is called by:
 31030 ;;		_nvProcessMessage
 31031 ;; This function uses a non-reentrant model
 31032 ;;
 31033                           
 31034                           	psect	text48
 31035   006D54                     __ptext48:
 31036                           	callstack 0
 31037   006D54                     _setNV:
 31038                           	callstack 118
 31039                           
 31040                           ;incstack = 0
 31041                           ;setNV@index stored from wreg
 31042   006D54  6E19               	movwf	setNV@index^(0+1280),c
 31043   006D56                     
 31044                           ;../../VLCBlib_PIC/nv.c: 219:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 221:     if 
      +                          (index > 49) return CMDERR_INV_NV_IDX;
 31045   006D56  0E31               	movlw	49
 31046   006D58  6419               	cpfsgt	setNV@index^(0+1280),c
 31047   006D5A  EFB1  F036         	goto	u6351
 31048   006D5E  EFB3  F036         	goto	u6350
 31049   006D62                     u6351:
 31050   006D62  EFB6  F036         	goto	l8997
 31051   006D66                     u6350:
 31052   006D66  0E0A               	movlw	10
 31053   006D68  EFF0  F036         	goto	l1540
 31054   006D6C                     l8997:
 31055                           
 31056                           ;../../VLCBlib_PIC/nv.c: 222:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 31057   006D6C  C515  F501         	movff	setNV@value,APP_nvValidate@value
 31058   006D70  5019               	movf	setNV@index^(0+1280),w,c
 31059   006D72  ECA2  F041         	call	_APP_nvValidate
 31060   006D76  0900               	iorlw	0
 31061   006D78  A4D8               	btfss	status,2,c
 31062   006D7A  EFC1  F036         	goto	u6361
 31063   006D7E  EFC3  F036         	goto	u6360
 31064   006D82                     u6361:
 31065   006D82  EFC6  F036         	goto	l9003
 31066   006D86                     u6360:
 31067   006D86  0E0C               	movlw	12
 31068   006D88  EFF0  F036         	goto	l1540
 31069   006D8C                     l9003:
 31070                           
 31071                           ;../../VLCBlib_PIC/nv.c: 224:     oldValue = nvCache[index];
 31072   006D8C  0E00               	movlw	low _nvCache
 31073   006D8E  2419               	addwf	setNV@index^(0+1280),w,c
 31074   006D90  6ED9               	movwf	fsr2l,c
 31075   006D92  6ADA               	clrf	fsr2h,c
 31076   006D94  0E06               	movlw	high _nvCache
 31077   006D96  22DA               	addwfc	fsr2h,f,c
 31078   006D98  50DF               	movf	indf2,w,c
 31079   006D9A  6E18               	movwf	setNV@oldValue^(0+1280),c
 31080                           
 31081                           ;../../VLCBlib_PIC/nv.c: 225:     nvCache[index] = value;
 31082   006D9C  0E00               	movlw	low _nvCache
 31083   006D9E  2419               	addwf	setNV@index^(0+1280),w,c
 31084   006DA0  6ED9               	movwf	fsr2l,c
 31085   006DA2  6ADA               	clrf	fsr2h,c
 31086   006DA4  0E06               	movlw	high _nvCache
 31087   006DA6  22DA               	addwfc	fsr2h,f,c
 31088   006DA8  C515  F4DF         	movff	setNV@value,indf2
 31089   006DAC                     
 31090                           ;../../VLCBlib_PIC/nv.c: 226:     writeNVM(EEPROM_NVM_TYPE, 0x200 +index, value);
 31091   006DAC  0E00               	movlw	0
 31092   006DAE  2419               	addwf	setNV@index^(0+1280),w,c
 31093   006DB0  6E16               	movwf	??_setNV^(0+1280),c
 31094   006DB2  6A17               	clrf	(??_setNV+1)^(0+1280),c
 31095   006DB4  0E02               	movlw	2
 31096   006DB6  2217               	addwfc	(??_setNV+1)^(0+1280),f,c
 31097   006DB8  C516  F50E         	movff	??_setNV,writeNVM@index
 31098   006DBC  C517  F50F         	movff	??_setNV+1,writeNVM@index+1
 31099   006DC0  6A10               	clrf	(writeNVM@index+2)^(0+1280),c
 31100   006DC2  BE0F               	btfsc	(writeNVM@index+1)^(0+1280),7,c
 31101   006DC4  0610               	decf	(writeNVM@index+2)^(0+1280),f,c
 31102   006DC6  C515  F511         	movff	setNV@value,writeNVM@value
 31103   006DCA  0E00               	movlw	0
 31104   006DCC  EC47  F03C         	call	_writeNVM
 31105   006DD0                     
 31106                           ;../../VLCBlib_PIC/nv.c: 231:     APP_nvValueChanged(index, value, oldValue);
 31107   006DD0  C515  F501         	movff	setNV@value,APP_nvValueChanged@value
 31108   006DD4  C518  F502         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 31109   006DD8  5019               	movf	setNV@index^(0+1280),w,c
 31110   006DDA  ECAD  F041         	call	_APP_nvValueChanged
 31111   006DDE                     
 31112                           ;../../VLCBlib_PIC/nv.c: 232:     return 0;
 31113   006DDE  0E00               	movlw	0
 31114   006DE0                     l1540:
 31115   006DE0  0012               	return		;funcret
 31116   006DE2                     __end_of_setNV:
 31117                           	callstack 0
 31118                           
 31119 ;; *************** function _APP_nvValueChanged *****************
 31120 ;; Defined at:
 31121 ;;		line 100 in file "../canargb_nvs.c"
 31122 ;; Parameters:    Size  Location     Type
 31123 ;;  index           1    wreg     unsigned char 
 31124 ;;  value           1    0[COMRAM] unsigned char 
 31125 ;;  oldValue        1    1[COMRAM] unsigned char 
 31126 ;; Auto vars:     Size  Location     Type
 31127 ;;  index           1    0[COMRAM] unsigned char 
 31128 ;; Return value:  Size  Location     Type
 31129 ;;                  1    wreg      void 
 31130 ;; Registers used:
 31131 ;;		wreg
 31132 ;; Tracked objects:
 31133 ;;		On entry : 0/0
 31134 ;;		On exit  : 0/0
 31135 ;;		Unchanged: 0/0
 31136 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31141 ;;Total ram usage:        2 bytes
 31142 ;; Hardware stack levels used: 1
 31143 ;; Hardware stack levels required when called: 1
 31144 ;; This function calls:
 31145 ;;		Nothing
 31146 ;; This function is called by:
 31147 ;;		_setNV
 31148 ;; This function uses a non-reentrant model
 31149 ;;
 31150                           
 31151                           	psect	text49
 31152   00835A                     __ptext49:
 31153                           	callstack 0
 31154   00835A                     _APP_nvValueChanged:
 31155                           	callstack 122
 31156   00835A  0012               	return		;funcret
 31157   00835C                     __end_of_APP_nvValueChanged:
 31158                           	callstack 0
 31159                           
 31160 ;; *************** function _APP_nvValidate *****************
 31161 ;; Defined at:
 31162 ;;		line 92 in file "../canargb_nvs.c"
 31163 ;; Parameters:    Size  Location     Type
 31164 ;;  index           1    wreg     unsigned char 
 31165 ;;  value           1    0[COMRAM] unsigned char 
 31166 ;; Auto vars:     Size  Location     Type
 31167 ;;  index           1    0[COMRAM] unsigned char 
 31168 ;; Return value:  Size  Location     Type
 31169 ;;                  1    wreg      enum E23468
 31170 ;; Registers used:
 31171 ;;		wreg
 31172 ;; Tracked objects:
 31173 ;;		On entry : 0/0
 31174 ;;		On exit  : 0/0
 31175 ;;		Unchanged: 0/0
 31176 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31177 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31180 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31181 ;;Total ram usage:        1 bytes
 31182 ;; Hardware stack levels used: 1
 31183 ;; Hardware stack levels required when called: 1
 31184 ;; This function calls:
 31185 ;;		Nothing
 31186 ;; This function is called by:
 31187 ;;		_setNV
 31188 ;; This function uses a non-reentrant model
 31189 ;;
 31190                           
 31191                           	psect	text50
 31192   008344                     __ptext50:
 31193                           	callstack 0
 31194   008344                     _APP_nvValidate:
 31195                           	callstack 122
 31196   008344                     
 31197                           ;../canargb_nvs.c: 93:     return VALID;
 31198   008344  0E01               	movlw	1
 31199   008346  0012               	return		;funcret
 31200   008348                     __end_of_APP_nvValidate:
 31201                           	callstack 0
 31202                           
 31203 ;; *************** function _nvGetESDdata *****************
 31204 ;; Defined at:
 31205 ;;		line 354 in file "../../VLCBlib_PIC/nv.c"
 31206 ;; Parameters:    Size  Location     Type
 31207 ;;  id              1    wreg     unsigned char 
 31208 ;; Auto vars:     Size  Location     Type
 31209 ;;  id              1    0[COMRAM] unsigned char 
 31210 ;; Return value:  Size  Location     Type
 31211 ;;                  1    wreg      unsigned char 
 31212 ;; Registers used:
 31213 ;;		wreg, status,2, status,0
 31214 ;; Tracked objects:
 31215 ;;		On entry : 0/0
 31216 ;;		On exit  : 0/0
 31217 ;;		Unchanged: 0/0
 31218 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31220 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31222 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31223 ;;Total ram usage:        1 bytes
 31224 ;; Hardware stack levels used: 1
 31225 ;; Hardware stack levels required when called: 1
 31226 ;; This function calls:
 31227 ;;		Nothing
 31228 ;; This function is called by:
 31229 ;;		_mnsProcessMessage
 31230 ;; This function uses a non-reentrant model
 31231 ;;
 31232                           
 31233                           	psect	text51
 31234   0081CA                     __ptext51:
 31235                           	callstack 0
 31236   0081CA                     _nvGetESDdata:
 31237                           	callstack 123
 31238                           
 31239                           ;incstack = 0
 31240                           ;nvGetESDdata@id stored from wreg
 31241   0081CA  6E01               	movwf	nvGetESDdata@id^(0+1280),c
 31242   0081CC                     
 31243                           ;../../VLCBlib_PIC/nv.c: 355:     switch (id) {
 31244   0081CC  EFEE  F040         	goto	l9025
 31245   0081D0                     l9015:
 31246   0081D0  0E31               	movlw	49
 31247   0081D2  EFF5  F040         	goto	l1566
 31248   0081D6                     l9019:
 31249   0081D6  0E00               	movlw	0
 31250   0081D8  EFF5  F040         	goto	l1566
 31251   0081DC                     l9025:
 31252   0081DC  5001               	movf	nvGetESDdata@id^(0+1280),w,c
 31253                           
 31254                           ; Switch size 1, requested type "simple"
 31255                           ; Number of cases is 1, Range of values is 1 to 1
 31256                           ; switch strategies available:
 31257                           ; Name         Instructions Cycles
 31258                           ; simple_byte            4     3 (average)
 31259                           ;	Chosen strategy is simple_byte
 31260   0081DE  0A01               	xorlw	1	; case 1
 31261   0081E0  B4D8               	btfsc	status,2,c
 31262   0081E2  EFE8  F040         	goto	l9015
 31263   0081E6  EFEB  F040         	goto	l9019
 31264   0081EA                     l1566:
 31265   0081EA  0012               	return		;funcret
 31266   0081EC                     __end_of_nvGetESDdata:
 31267                           	callstack 0
 31268                           
 31269 ;; *************** function _consumerEsdData *****************
 31270 ;; Defined at:
 31271 ;;		line 232 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 31272 ;; Parameters:    Size  Location     Type
 31273 ;;  index           1    wreg     unsigned char 
 31274 ;; Auto vars:     Size  Location     Type
 31275 ;;  index           1    0[COMRAM] unsigned char 
 31276 ;; Return value:  Size  Location     Type
 31277 ;;                  1    wreg      unsigned char 
 31278 ;; Registers used:
 31279 ;;		wreg, status,2, status,0
 31280 ;; Tracked objects:
 31281 ;;		On entry : 0/0
 31282 ;;		On exit  : 0/0
 31283 ;;		Unchanged: 0/0
 31284 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31288 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31289 ;;Total ram usage:        1 bytes
 31290 ;; Hardware stack levels used: 1
 31291 ;; Hardware stack levels required when called: 1
 31292 ;; This function calls:
 31293 ;;		Nothing
 31294 ;; This function is called by:
 31295 ;;		_mnsProcessMessage
 31296 ;; This function uses a non-reentrant model
 31297 ;;
 31298                           
 31299                           	psect	text52
 31300   00824C                     __ptext52:
 31301                           	callstack 0
 31302   00824C                     _consumerEsdData:
 31303                           	callstack 123
 31304                           
 31305                           ;incstack = 0
 31306                           ;consumerEsdData@index stored from wreg
 31307   00824C  6E01               	movwf	consumerEsdData@index^(0+1280),c
 31308   00824E                     
 31309                           ;../../VLCBlib_PIC/event_consumer_simple.c: 233:     switch (index){
 31310   00824E  EF2C  F041         	goto	l8657
 31311   008252                     l8647:
 31312                           
 31313                           ;../../VLCBlib_PIC/event_consumer_simple.c: 235:             return CONSUMER_EV_NOT_SPEC
      +                          IFIED;
 31314   008252  0E00               	movlw	0
 31315   008254  EF33  F041         	goto	l819
 31316   008258                     l8657:
 31317   008258  5001               	movf	consumerEsdData@index^(0+1280),w,c
 31318                           
 31319                           ; Switch size 1, requested type "simple"
 31320                           ; Number of cases is 1, Range of values is 0 to 0
 31321                           ; switch strategies available:
 31322                           ; Name         Instructions Cycles
 31323                           ; simple_byte            4     3 (average)
 31324                           ;	Chosen strategy is simple_byte
 31325   00825A  0A00               	xorlw	0	; case 0
 31326   00825C  B4D8               	btfsc	status,2,c
 31327   00825E  EF29  F041         	goto	l8647
 31328   008262  EF29  F041         	goto	l8647
 31329   008266                     l819:
 31330   008266  0012               	return		;funcret
 31331   008268                     __end_of_consumerEsdData:
 31332                           	callstack 0
 31333                           
 31334 ;; *************** function _canEsdData *****************
 31335 ;; Defined at:
 31336 ;;		line 468 in file "../../VLCBlib_PIC/can18_can_2.c"
 31337 ;; Parameters:    Size  Location     Type
 31338 ;;  id              1    wreg     unsigned char 
 31339 ;; Auto vars:     Size  Location     Type
 31340 ;;  id              1    0[COMRAM] unsigned char 
 31341 ;; Return value:  Size  Location     Type
 31342 ;;                  1    wreg      unsigned char 
 31343 ;; Registers used:
 31344 ;;		wreg, status,2, status,0
 31345 ;; Tracked objects:
 31346 ;;		On entry : 0/0
 31347 ;;		On exit  : 0/0
 31348 ;;		Unchanged: 0/0
 31349 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31353 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31354 ;;Total ram usage:        1 bytes
 31355 ;; Hardware stack levels used: 1
 31356 ;; Hardware stack levels required when called: 1
 31357 ;; This function calls:
 31358 ;;		Nothing
 31359 ;; This function is called by:
 31360 ;;		_mnsProcessMessage
 31361 ;; This function uses a non-reentrant model
 31362 ;;
 31363                           
 31364                           	psect	text53
 31365   0081EC                     __ptext53:
 31366                           	callstack 0
 31367   0081EC                     _canEsdData:
 31368                           	callstack 123
 31369                           
 31370                           ;incstack = 0
 31371                           ;canEsdData@id stored from wreg
 31372   0081EC  6E01               	movwf	canEsdData@id^(0+1280),c
 31373   0081EE                     
 31374                           ;../../VLCBlib_PIC/can18_can_2.c: 469:     switch(id) {
 31375   0081EE  EFFF  F040         	goto	l8581
 31376   0081F2                     l8571:
 31377                           
 31378                           ;../../VLCBlib_PIC/can18_can_2.c: 471:             return CAN_HW_PIC_CAN_2_0;
 31379   0081F2  0E02               	movlw	2
 31380   0081F4  EF06  F041         	goto	l618
 31381   0081F8                     l8575:
 31382                           
 31383                           ;../../VLCBlib_PIC/can18_can_2.c: 473:             return 0;
 31384   0081F8  0E00               	movlw	0
 31385   0081FA  EF06  F041         	goto	l618
 31386   0081FE                     l8581:
 31387   0081FE  5001               	movf	canEsdData@id^(0+1280),w,c
 31388                           
 31389                           ; Switch size 1, requested type "simple"
 31390                           ; Number of cases is 1, Range of values is 1 to 1
 31391                           ; switch strategies available:
 31392                           ; Name         Instructions Cycles
 31393                           ; simple_byte            4     3 (average)
 31394                           ;	Chosen strategy is simple_byte
 31395   008200  0A01               	xorlw	1	; case 1
 31396   008202  B4D8               	btfsc	status,2,c
 31397   008204  EFF9  F040         	goto	l8571
 31398   008208  EFFC  F040         	goto	l8575
 31399   00820C                     l618:
 31400   00820C  0012               	return		;funcret
 31401   00820E                     __end_of_canEsdData:
 31402                           	callstack 0
 31403                           
 31404 ;; *************** function _bootEsdData *****************
 31405 ;; Defined at:
 31406 ;;		line 252 in file "../../VLCBlib_PIC/boot.c"
 31407 ;; Parameters:    Size  Location     Type
 31408 ;;  id              1    wreg     unsigned char 
 31409 ;; Auto vars:     Size  Location     Type
 31410 ;;  id              1    0[COMRAM] unsigned char 
 31411 ;; Return value:  Size  Location     Type
 31412 ;;                  1    wreg      unsigned char 
 31413 ;; Registers used:
 31414 ;;		wreg, status,2, status,0
 31415 ;; Tracked objects:
 31416 ;;		On entry : 0/0
 31417 ;;		On exit  : 0/0
 31418 ;;		Unchanged: 0/0
 31419 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31423 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31424 ;;Total ram usage:        1 bytes
 31425 ;; Hardware stack levels used: 1
 31426 ;; Hardware stack levels required when called: 1
 31427 ;; This function calls:
 31428 ;;		Nothing
 31429 ;; This function is called by:
 31430 ;;		_mnsProcessMessage
 31431 ;; This function uses a non-reentrant model
 31432 ;;
 31433                           
 31434                           	psect	text54
 31435   007ED4                     __ptext54:
 31436                           	callstack 0
 31437   007ED4                     _bootEsdData:
 31438                           	callstack 123
 31439                           
 31440                           ;incstack = 0
 31441                           ;bootEsdData@id stored from wreg
 31442   007ED4  6E01               	movwf	bootEsdData@id^(0+1280),c
 31443   007ED6                     
 31444                           ;../../VLCBlib_PIC/boot.c: 253:     switch (id) {
 31445   007ED6  EF78  F03F         	goto	l8475
 31446   007EDA                     l332:
 31447                           
 31448                           ;../../VLCBlib_PIC/boot.c: 256:             return bootloaderType;
 31449   007EDA  0105               	movlb	5	; () banked
 31450   007EDC  51AA               	movf	_bootloaderType& (0+255),w,b
 31451   007EDE  EF83  F03F         	goto	l333
 31452   007EE2                     l334:
 31453                           
 31454                           ;../../VLCBlib_PIC/boot.c: 259:             return bootloaderVersion;
 31455   007EE2  0105               	movlb	5	; () banked
 31456   007EE4  51A9               	movf	_bootloaderVersion& (0+255),w,b
 31457   007EE6  EF83  F03F         	goto	l333
 31458   007EEA                     l8469:
 31459                           
 31460                           ;../../VLCBlib_PIC/boot.c: 261:             return 0;
 31461   007EEA  0E00               	movlw	0
 31462   007EEC  EF83  F03F         	goto	l333
 31463   007EF0                     l8475:
 31464   007EF0  5001               	movf	bootEsdData@id^(0+1280),w,c
 31465                           
 31466                           ; Switch size 1, requested type "simple"
 31467                           ; Number of cases is 2, Range of values is 1 to 2
 31468                           ; switch strategies available:
 31469                           ; Name         Instructions Cycles
 31470                           ; simple_byte            7     4 (average)
 31471                           ;	Chosen strategy is simple_byte
 31472   007EF2  0A01               	xorlw	1	; case 1
 31473   007EF4  B4D8               	btfsc	status,2,c
 31474   007EF6  EF6D  F03F         	goto	l332
 31475   007EFA  0A03               	xorlw	3	; case 2
 31476   007EFC  B4D8               	btfsc	status,2,c
 31477   007EFE  EF71  F03F         	goto	l334
 31478   007F02  EF75  F03F         	goto	l8469
 31479   007F06                     l333:
 31480   007F06  0012               	return		;funcret
 31481   007F08                     __end_of_bootEsdData:
 31482                           	callstack 0
 31483                           
 31484 ;; *************** function _teachGetESDdata *****************
 31485 ;; Defined at:
 31486 ;;		line 367 in file "../../VLCBlib_PIC/event_teach_simple.c"
 31487 ;; Parameters:    Size  Location     Type
 31488 ;;  id              1    wreg     unsigned char 
 31489 ;; Auto vars:     Size  Location     Type
 31490 ;;  id              1    0[COMRAM] unsigned char 
 31491 ;; Return value:  Size  Location     Type
 31492 ;;                  1    wreg      unsigned char 
 31493 ;; Registers used:
 31494 ;;		wreg, status,2, status,0
 31495 ;; Tracked objects:
 31496 ;;		On entry : 0/0
 31497 ;;		On exit  : 0/0
 31498 ;;		Unchanged: 0/0
 31499 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31503 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31504 ;;Total ram usage:        1 bytes
 31505 ;; Hardware stack levels used: 1
 31506 ;; Hardware stack levels required when called: 1
 31507 ;; This function calls:
 31508 ;;		Nothing
 31509 ;; This function is called by:
 31510 ;;		_mnsProcessMessage
 31511 ;; This function uses a non-reentrant model
 31512 ;;
 31513                           
 31514                           	psect	text55
 31515   007F3C                     __ptext55:
 31516                           	callstack 0
 31517   007F3C                     _teachGetESDdata:
 31518                           	callstack 123
 31519                           
 31520                           ;incstack = 0
 31521                           ;teachGetESDdata@id stored from wreg
 31522   007F3C  6E01               	movwf	teachGetESDdata@id^(0+1280),c
 31523   007F3E                     
 31524                           ;../../VLCBlib_PIC/event_teach_simple.c: 368:     switch (id) {
 31525   007F3E  EFAA  F03F         	goto	l8853
 31526   007F42                     l8839:
 31527   007F42  0EFF               	movlw	255
 31528   007F44  EFB5  F03F         	goto	l1005
 31529   007F48                     l8843:
 31530   007F48  0EFC               	movlw	252
 31531   007F4A  EFB5  F03F         	goto	l1005
 31532   007F4E                     l8847:
 31533   007F4E  0E00               	movlw	0
 31534   007F50  EFB5  F03F         	goto	l1005
 31535   007F54                     l8853:
 31536   007F54  5001               	movf	teachGetESDdata@id^(0+1280),w,c
 31537                           
 31538                           ; Switch size 1, requested type "simple"
 31539                           ; Number of cases is 2, Range of values is 1 to 2
 31540                           ; switch strategies available:
 31541                           ; Name         Instructions Cycles
 31542                           ; simple_byte            7     4 (average)
 31543                           ;	Chosen strategy is simple_byte
 31544   007F56  0A01               	xorlw	1	; case 1
 31545   007F58  B4D8               	btfsc	status,2,c
 31546   007F5A  EFA1  F03F         	goto	l8839
 31547   007F5E  0A03               	xorlw	3	; case 2
 31548   007F60  B4D8               	btfsc	status,2,c
 31549   007F62  EFA4  F03F         	goto	l8843
 31550   007F66  EFA7  F03F         	goto	l8847
 31551   007F6A                     l1005:
 31552   007F6A  0012               	return		;funcret
 31553   007F6C                     __end_of_teachGetESDdata:
 31554                           	callstack 0
 31555                           
 31556 ;; *************** function _nvGetDiagnostic *****************
 31557 ;; Defined at:
 31558 ;;		line 150 in file "../../VLCBlib_PIC/nv.c"
 31559 ;; Parameters:    Size  Location     Type
 31560 ;;  index           1    wreg     unsigned char 
 31561 ;; Auto vars:     Size  Location     Type
 31562 ;;  index           1    8[COMRAM] unsigned char 
 31563 ;; Return value:  Size  Location     Type
 31564 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31565 ;; Registers used:
 31566 ;;		wreg, status,2, status,0, prodl, prodh
 31567 ;; Tracked objects:
 31568 ;;		On entry : 0/0
 31569 ;;		On exit  : 0/0
 31570 ;;		Unchanged: 0/0
 31571 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31575 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31576 ;;Total ram usage:        3 bytes
 31577 ;; Hardware stack levels used: 1
 31578 ;; Hardware stack levels required when called: 1
 31579 ;; This function calls:
 31580 ;;		Nothing
 31581 ;; This function is called by:
 31582 ;;		_mnsTRallDiagnosticsCallback
 31583 ;;		_mnsProcessMessage
 31584 ;; This function uses a non-reentrant model
 31585 ;;
 31586                           
 31587                           	psect	text56
 31588   007F6C                     __ptext56:
 31589                           	callstack 0
 31590   007F6C                     _nvGetDiagnostic:
 31591                           	callstack 122
 31592                           
 31593                           ;incstack = 0
 31594                           ;nvGetDiagnostic@index stored from wreg
 31595   007F6C  6E09               	movwf	nvGetDiagnostic@index^(0+1280),c
 31596   007F6E                     
 31597                           ;../../VLCBlib_PIC/nv.c: 151:     if (index > 2) {
 31598   007F6E  0E02               	movlw	2
 31599   007F70  6409               	cpfsgt	nvGetDiagnostic@index^(0+1280),c
 31600   007F72  EFBD  F03F         	goto	u5711
 31601   007F76  EFBF  F03F         	goto	u5710
 31602   007F7A                     u5711:
 31603   007F7A  EFC5  F03F         	goto	l8343
 31604   007F7E                     u5710:
 31605   007F7E                     
 31606                           ;../../VLCBlib_PIC/nv.c: 152:         return ((void*)0);
 31607   007F7E  0E00               	movlw	0
 31608   007F80  6E07               	movwf	?_nvGetDiagnostic^(0+1280),c
 31609   007F82  0E00               	movlw	0
 31610   007F84  6E08               	movwf	(?_nvGetDiagnostic+1)^(0+1280),c
 31611   007F86  EFCD  F03F         	goto	l1521
 31612   007F8A                     l8343:
 31613                           
 31614                           ;../../VLCBlib_PIC/nv.c: 154:     return &(nvDiagnostics[index]);
 31615   007F8A  5009               	movf	nvGetDiagnostic@index^(0+1280),w,c
 31616   007F8C  0D02               	mullw	2
 31617   007F8E  0EBB               	movlw	low _nvDiagnostics
 31618   007F90  24F3               	addwf	243,w,c
 31619   007F92  6E07               	movwf	?_nvGetDiagnostic^(0+1280),c
 31620   007F94  0E05               	movlw	high _nvDiagnostics
 31621   007F96  20F4               	addwfc	prodh,w,c
 31622   007F98  6E08               	movwf	(?_nvGetDiagnostic+1)^(0+1280),c
 31623   007F9A                     l1521:
 31624   007F9A  0012               	return		;funcret
 31625   007F9C                     __end_of_nvGetDiagnostic:
 31626                           	callstack 0
 31627                           
 31628 ;; *************** function _mnsGetDiagnostic *****************
 31629 ;; Defined at:
 31630 ;;		line 807 in file "../../VLCBlib_PIC/mns.c"
 31631 ;; Parameters:    Size  Location     Type
 31632 ;;  index           1    wreg     unsigned char 
 31633 ;; Auto vars:     Size  Location     Type
 31634 ;;  index           1    8[COMRAM] unsigned char 
 31635 ;; Return value:  Size  Location     Type
 31636 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31637 ;; Registers used:
 31638 ;;		wreg, status,2, status,0, prodl, prodh
 31639 ;; Tracked objects:
 31640 ;;		On entry : 0/0
 31641 ;;		On exit  : 0/0
 31642 ;;		Unchanged: 0/0
 31643 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31647 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31648 ;;Total ram usage:        3 bytes
 31649 ;; Hardware stack levels used: 1
 31650 ;; Hardware stack levels required when called: 1
 31651 ;; This function calls:
 31652 ;;		Nothing
 31653 ;; This function is called by:
 31654 ;;		_mnsTRallDiagnosticsCallback
 31655 ;;		_mnsProcessMessage
 31656 ;; This function uses a non-reentrant model
 31657 ;;
 31658                           
 31659                           	psect	text57
 31660   007F9C                     __ptext57:
 31661                           	callstack 0
 31662   007F9C                     _mnsGetDiagnostic:
 31663                           	callstack 122
 31664                           
 31665                           ;incstack = 0
 31666                           ;mnsGetDiagnostic@index stored from wreg
 31667   007F9C  6E09               	movwf	mnsGetDiagnostic@index^(0+1280),c
 31668   007F9E                     
 31669                           ;../../VLCBlib_PIC/mns.c: 808:     if (index > 6) {
 31670   007F9E  0E06               	movlw	6
 31671   007FA0  6409               	cpfsgt	mnsGetDiagnostic@index^(0+1280),c
 31672   007FA2  EFD5  F03F         	goto	u5661
 31673   007FA6  EFD7  F03F         	goto	u5660
 31674   007FAA                     u5661:
 31675   007FAA  EFDD  F03F         	goto	l8295
 31676   007FAE                     u5660:
 31677   007FAE                     
 31678                           ;../../VLCBlib_PIC/mns.c: 809:         return ((void*)0);
 31679   007FAE  0E00               	movlw	0
 31680   007FB0  6E07               	movwf	?_mnsGetDiagnostic^(0+1280),c
 31681   007FB2  0E00               	movlw	0
 31682   007FB4  6E08               	movwf	(?_mnsGetDiagnostic+1)^(0+1280),c
 31683   007FB6  EFE5  F03F         	goto	l1411
 31684   007FBA                     l8295:
 31685                           
 31686                           ;../../VLCBlib_PIC/mns.c: 811:     return &(mnsDiagnostics[index]);
 31687   007FBA  5009               	movf	mnsGetDiagnostic@index^(0+1280),w,c
 31688   007FBC  0D02               	mullw	2
 31689   007FBE  0EAD               	movlw	low _mnsDiagnostics
 31690   007FC0  24F3               	addwf	243,w,c
 31691   007FC2  6E07               	movwf	?_mnsGetDiagnostic^(0+1280),c
 31692   007FC4  0E05               	movlw	high _mnsDiagnostics
 31693   007FC6  20F4               	addwfc	prodh,w,c
 31694   007FC8  6E08               	movwf	(?_mnsGetDiagnostic+1)^(0+1280),c
 31695   007FCA                     l1411:
 31696   007FCA  0012               	return		;funcret
 31697   007FCC                     __end_of_mnsGetDiagnostic:
 31698                           	callstack 0
 31699                           
 31700 ;; *************** function _consumerGetDiagnostic *****************
 31701 ;; Defined at:
 31702 ;;		line 218 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 31703 ;; Parameters:    Size  Location     Type
 31704 ;;  index           1    wreg     unsigned char 
 31705 ;; Auto vars:     Size  Location     Type
 31706 ;;  index           1    8[COMRAM] unsigned char 
 31707 ;; Return value:  Size  Location     Type
 31708 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31709 ;; Registers used:
 31710 ;;		wreg, status,2, status,0, prodl, prodh
 31711 ;; Tracked objects:
 31712 ;;		On entry : 0/0
 31713 ;;		On exit  : 0/0
 31714 ;;		Unchanged: 0/0
 31715 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31716 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31719 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31720 ;;Total ram usage:        3 bytes
 31721 ;; Hardware stack levels used: 1
 31722 ;; Hardware stack levels required when called: 1
 31723 ;; This function calls:
 31724 ;;		Nothing
 31725 ;; This function is called by:
 31726 ;;		_mnsTRallDiagnosticsCallback
 31727 ;;		_mnsProcessMessage
 31728 ;; This function uses a non-reentrant model
 31729 ;;
 31730                           
 31731                           	psect	text58
 31732   007FCC                     __ptext58:
 31733                           	callstack 0
 31734   007FCC                     _consumerGetDiagnostic:
 31735                           	callstack 122
 31736                           
 31737                           ;incstack = 0
 31738                           ;consumerGetDiagnostic@index stored from wreg
 31739   007FCC  6E09               	movwf	consumerGetDiagnostic@index^(0+1280),c
 31740   007FCE                     
 31741                           ;../../VLCBlib_PIC/event_consumer_simple.c: 219:     if (index > 2) {
 31742   007FCE  0E02               	movlw	2
 31743   007FD0  6409               	cpfsgt	consumerGetDiagnostic@index^(0+1280),c
 31744   007FD2  EFED  F03F         	goto	u5491
 31745   007FD6  EFEF  F03F         	goto	u5490
 31746   007FDA                     u5491:
 31747   007FDA  EFF5  F03F         	goto	l8071
 31748   007FDE                     u5490:
 31749   007FDE                     
 31750                           ;../../VLCBlib_PIC/event_consumer_simple.c: 220:         return ((void*)0);
 31751   007FDE  0E00               	movlw	0
 31752   007FE0  6E07               	movwf	?_consumerGetDiagnostic^(0+1280),c
 31753   007FE2  0E00               	movlw	0
 31754   007FE4  6E08               	movwf	(?_consumerGetDiagnostic+1)^(0+1280),c
 31755   007FE6  EFFD  F03F         	goto	l814
 31756   007FEA                     l8071:
 31757                           
 31758                           ;../../VLCBlib_PIC/event_consumer_simple.c: 222:     return &(consumerDiagnostics[index]
      +                          );
 31759   007FEA  5009               	movf	consumerGetDiagnostic@index^(0+1280),w,c
 31760   007FEC  0D02               	mullw	2
 31761   007FEE  0EC1               	movlw	low _consumerDiagnostics
 31762   007FF0  24F3               	addwf	243,w,c
 31763   007FF2  6E07               	movwf	?_consumerGetDiagnostic^(0+1280),c
 31764   007FF4  0E05               	movlw	high _consumerDiagnostics
 31765   007FF6  20F4               	addwfc	prodh,w,c
 31766   007FF8  6E08               	movwf	(?_consumerGetDiagnostic+1)^(0+1280),c
 31767   007FFA                     l814:
 31768   007FFA  0012               	return		;funcret
 31769   007FFC                     __end_of_consumerGetDiagnostic:
 31770                           	callstack 0
 31771                           
 31772 ;; *************** function _canGetDiagnostic *****************
 31773 ;; Defined at:
 31774 ;;		line 500 in file "../../VLCBlib_PIC/can18_can_2.c"
 31775 ;; Parameters:    Size  Location     Type
 31776 ;;  index           1    wreg     unsigned char 
 31777 ;; Auto vars:     Size  Location     Type
 31778 ;;  index           1    9[COMRAM] unsigned char 
 31779 ;;  i16             2    0        short 
 31780 ;; Return value:  Size  Location     Type
 31781 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31782 ;; Registers used:
 31783 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 31784 ;; Tracked objects:
 31785 ;;		On entry : 0/0
 31786 ;;		On exit  : 0/0
 31787 ;;		Unchanged: 0/0
 31788 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31789 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31792 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31793 ;;Total ram usage:        4 bytes
 31794 ;; Hardware stack levels used: 1
 31795 ;; Hardware stack levels required when called: 2
 31796 ;; This function calls:
 31797 ;;		_getNumRxBuffersInUse
 31798 ;;		_getNumTxBuffersInUse
 31799 ;; This function is called by:
 31800 ;;		_mnsTRallDiagnosticsCallback
 31801 ;;		_mnsProcessMessage
 31802 ;; This function uses a non-reentrant model
 31803 ;;
 31804                           
 31805                           	psect	text59
 31806   0065F4                     __ptext59:
 31807                           	callstack 0
 31808   0065F4                     _canGetDiagnostic:
 31809                           	callstack 121
 31810                           
 31811                           ;incstack = 0
 31812                           ;canGetDiagnostic@index stored from wreg
 31813   0065F4  6E0A               	movwf	canGetDiagnostic@index^(0+1280),c
 31814   0065F6                     
 31815                           ;../../VLCBlib_PIC/can18_can_2.c: 501:     int16_t i16;;../../VLCBlib_PIC/can18_can_2.c:
      +                           503:     if (index > 18) {
 31816   0065F6  0E12               	movlw	18
 31817   0065F8  640A               	cpfsgt	canGetDiagnostic@index^(0+1280),c
 31818   0065FA  EF01  F033         	goto	u5461
 31819   0065FE  EF03  F033         	goto	u5460
 31820   006602                     u5461:
 31821   006602  EF2D  F033         	goto	l8039
 31822   006606                     u5460:
 31823   006606                     
 31824                           ;../../VLCBlib_PIC/can18_can_2.c: 504:         return ((void*)0);
 31825   006606  0E00               	movlw	0
 31826   006608  6E07               	movwf	?_canGetDiagnostic^(0+1280),c
 31827   00660A  0E00               	movlw	0
 31828   00660C  6E08               	movwf	(?_canGetDiagnostic+1)^(0+1280),c
 31829   00660E  EF4C  F033         	goto	l624
 31830   006612                     l626:
 31831                           
 31832                           ;../../VLCBlib_PIC/can18_can_2.c: 508:             canDiagnostics[0x03].asUint = C1TRECU
      +                          ;
 31833   006612  C136 F694          	movff	310,_canDiagnostics+6	;volatile
 31834   006616  0106               	movlb	6	; () banked
 31835   006618  6B95               	clrf	(_canDiagnostics+7)& (0+255),b
 31836                           
 31837                           ;../../VLCBlib_PIC/can18_can_2.c: 509:             break;
 31838   00661A  EF44  F033         	goto	l8041
 31839   00661E                     l8033:
 31840                           
 31841                           ;../../VLCBlib_PIC/can18_can_2.c: 511:             canDiagnostics[0x04].asUint = getNumT
      +                          xBuffersInUse();
 31842   00661E  EC06  F039         	call	_getNumTxBuffersInUse	;wreg free
 31843   006622  6E09               	movwf	??_canGetDiagnostic^(0+1280),c
 31844   006624  5009               	movf	??_canGetDiagnostic^(0+1280),w,c
 31845   006626  0106               	movlb	6	; () banked
 31846   006628  6F96               	movwf	(_canDiagnostics+8)& (0+255),b
 31847   00662A  6B97               	clrf	(_canDiagnostics+9)& (0+255),b
 31848                           
 31849                           ;../../VLCBlib_PIC/can18_can_2.c: 512:             break;
 31850   00662C  EF44  F033         	goto	l8041
 31851   006630                     l8035:
 31852                           
 31853                           ;../../VLCBlib_PIC/can18_can_2.c: 514:             canDiagnostics[0x07].asUint = getNumR
      +                          xBuffersInUse();
 31854   006630  EC32  F03A         	call	_getNumRxBuffersInUse	;wreg free
 31855   006634  6E09               	movwf	??_canGetDiagnostic^(0+1280),c
 31856   006636  5009               	movf	??_canGetDiagnostic^(0+1280),w,c
 31857   006638  0106               	movlb	6	; () banked
 31858   00663A  6F9C               	movwf	(_canDiagnostics+14)& (0+255),b
 31859   00663C  6B9D               	clrf	(_canDiagnostics+15)& (0+255),b
 31860                           
 31861                           ;../../VLCBlib_PIC/can18_can_2.c: 515:             break;
 31862   00663E  EF44  F033         	goto	l8041
 31863   006642                     l630:
 31864                           
 31865                           ;../../VLCBlib_PIC/can18_can_2.c: 517:             canDiagnostics[0x02].asUint = C1BDIAG
      +                          0Hbits.NTERRCNT;
 31866   006642  C139 F692          	movff	313,_canDiagnostics+4	;volatile
 31867   006646  0106               	movlb	6	; () banked
 31868   006648  6B93               	clrf	(_canDiagnostics+5)& (0+255),b
 31869                           
 31870                           ;../../VLCBlib_PIC/can18_can_2.c: 518:             break;
 31871   00664A  EF44  F033         	goto	l8041
 31872   00664E                     l631:
 31873                           
 31874                           ;../../VLCBlib_PIC/can18_can_2.c: 520:             canDiagnostics[0x01].asUint = C1BDIAG
      +                          0Lbits.NRERRCNT;
 31875   00664E  C138 F690          	movff	312,_canDiagnostics+2	;volatile
 31876   006652  0106               	movlb	6	; () banked
 31877   006654  6B91               	clrf	(_canDiagnostics+3)& (0+255),b
 31878                           
 31879                           ;../../VLCBlib_PIC/can18_can_2.c: 521:             break;
 31880   006656  EF44  F033         	goto	l8041
 31881   00665A                     l8039:
 31882   00665A  500A               	movf	canGetDiagnostic@index^(0+1280),w,c
 31883                           
 31884                           ; Switch size 1, requested type "simple"
 31885                           ; Number of cases is 5, Range of values is 1 to 7
 31886                           ; switch strategies available:
 31887                           ; Name         Instructions Cycles
 31888                           ; simple_byte           16     9 (average)
 31889                           ;	Chosen strategy is simple_byte
 31890   00665C  0A01               	xorlw	1	; case 1
 31891   00665E  B4D8               	btfsc	status,2,c
 31892   006660  EF27  F033         	goto	l631
 31893   006664  0A03               	xorlw	3	; case 2
 31894   006666  B4D8               	btfsc	status,2,c
 31895   006668  EF21  F033         	goto	l630
 31896   00666C  0A01               	xorlw	1	; case 3
 31897   00666E  B4D8               	btfsc	status,2,c
 31898   006670  EF09  F033         	goto	l626
 31899   006674  0A07               	xorlw	7	; case 4
 31900   006676  B4D8               	btfsc	status,2,c
 31901   006678  EF0F  F033         	goto	l8033
 31902   00667C  0A03               	xorlw	3	; case 7
 31903   00667E  B4D8               	btfsc	status,2,c
 31904   006680  EF18  F033         	goto	l8035
 31905   006684  EF44  F033         	goto	l8041
 31906   006688                     l8041:
 31907                           
 31908                           ;../../VLCBlib_PIC/can18_can_2.c: 524:     return &(canDiagnostics[index]);
 31909   006688  500A               	movf	canGetDiagnostic@index^(0+1280),w,c
 31910   00668A  0D02               	mullw	2
 31911   00668C  0E8E               	movlw	low _canDiagnostics
 31912   00668E  24F3               	addwf	243,w,c
 31913   006690  6E07               	movwf	?_canGetDiagnostic^(0+1280),c
 31914   006692  0E06               	movlw	high _canDiagnostics
 31915   006694  20F4               	addwfc	prodh,w,c
 31916   006696  6E08               	movwf	(?_canGetDiagnostic+1)^(0+1280),c
 31917   006698                     l624:
 31918   006698  0012               	return		;funcret
 31919   00669A                     __end_of_canGetDiagnostic:
 31920                           	callstack 0
 31921                           
 31922 ;; *************** function _teachGetDiagnostic *****************
 31923 ;; Defined at:
 31924 ;;		line 382 in file "../../VLCBlib_PIC/event_teach_simple.c"
 31925 ;; Parameters:    Size  Location     Type
 31926 ;;  index           1    wreg     unsigned char 
 31927 ;; Auto vars:     Size  Location     Type
 31928 ;;  index           1    8[COMRAM] unsigned char 
 31929 ;; Return value:  Size  Location     Type
 31930 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31931 ;; Registers used:
 31932 ;;		wreg, status,2, status,0, prodl, prodh
 31933 ;; Tracked objects:
 31934 ;;		On entry : 0/0
 31935 ;;		On exit  : 0/0
 31936 ;;		Unchanged: 0/0
 31937 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31939 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31941 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31942 ;;Total ram usage:        3 bytes
 31943 ;; Hardware stack levels used: 1
 31944 ;; Hardware stack levels required when called: 1
 31945 ;; This function calls:
 31946 ;;		Nothing
 31947 ;; This function is called by:
 31948 ;;		_mnsTRallDiagnosticsCallback
 31949 ;;		_mnsProcessMessage
 31950 ;; This function uses a non-reentrant model
 31951 ;;
 31952                           
 31953                           	psect	text60
 31954   007FFC                     __ptext60:
 31955                           	callstack 0
 31956   007FFC                     _teachGetDiagnostic:
 31957                           	callstack 122
 31958                           
 31959                           ;incstack = 0
 31960                           ;teachGetDiagnostic@index stored from wreg
 31961   007FFC  6E09               	movwf	teachGetDiagnostic@index^(0+1280),c
 31962   007FFE                     
 31963                           ;../../VLCBlib_PIC/event_teach_simple.c: 383:     if (index > 1) {
 31964   007FFE  0E01               	movlw	1
 31965   008000  6409               	cpfsgt	teachGetDiagnostic@index^(0+1280),c
 31966   008002  EF05  F040         	goto	u5541
 31967   008006  EF07  F040         	goto	u5540
 31968   00800A                     u5541:
 31969   00800A  EF0D  F040         	goto	l8101
 31970   00800E                     u5540:
 31971   00800E                     
 31972                           ;../../VLCBlib_PIC/event_teach_simple.c: 384:         return ((void*)0);
 31973   00800E  0E00               	movlw	0
 31974   008010  6E07               	movwf	?_teachGetDiagnostic^(0+1280),c
 31975   008012  0E00               	movlw	0
 31976   008014  6E08               	movwf	(?_teachGetDiagnostic+1)^(0+1280),c
 31977   008016  EF15  F040         	goto	l1012
 31978   00801A                     l8101:
 31979                           
 31980                           ;../../VLCBlib_PIC/event_teach_simple.c: 386:     return &(teachDiagnostics[index]);
 31981   00801A  5009               	movf	teachGetDiagnostic@index^(0+1280),w,c
 31982   00801C  0D02               	mullw	2
 31983   00801E  0ECC               	movlw	low _teachDiagnostics
 31984   008020  24F3               	addwf	243,w,c
 31985   008022  6E07               	movwf	?_teachGetDiagnostic^(0+1280),c
 31986   008024  0E05               	movlw	high _teachDiagnostics
 31987   008026  20F4               	addwfc	prodh,w,c
 31988   008028  6E08               	movwf	(?_teachGetDiagnostic+1)^(0+1280),c
 31989   00802A                     l1012:
 31990   00802A  0012               	return		;funcret
 31991   00802C                     __end_of_teachGetDiagnostic:
 31992                           	callstack 0
 31993                           
 31994 ;; *************** function _startTimedResponse *****************
 31995 ;; Defined at:
 31996 ;;		line 93 in file "../../VLCBlib_PIC/timedResponse.c"
 31997 ;; Parameters:    Size  Location     Type
 31998 ;;  type            1    wreg     unsigned char 
 31999 ;;  serviceIndex    1    4[COMRAM] unsigned char 
 32000 ;;  callback        2    5[COMRAM] PTR FTN(unsigned char ,u
 32001 ;;		 -> nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), 
 32002 ;;		 -> reqevCallback(1), nerdCallback(1), 
 32003 ;; Auto vars:     Size  Location     Type
 32004 ;;  type            1    7[COMRAM] unsigned char 
 32005 ;; Return value:  Size  Location     Type
 32006 ;;                  1    wreg      void 
 32007 ;; Registers used:
 32008 ;;		wreg, status,2, status,0
 32009 ;; Tracked objects:
 32010 ;;		On entry : 0/0
 32011 ;;		On exit  : 0/0
 32012 ;;		Unchanged: 0/0
 32013 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32014 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32017 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32018 ;;Total ram usage:        4 bytes
 32019 ;; Hardware stack levels used: 1
 32020 ;; Hardware stack levels required when called: 1
 32021 ;; This function calls:
 32022 ;;		Nothing
 32023 ;; This function is called by:
 32024 ;;		_doNerd
 32025 ;;		_doReval
 32026 ;;		_doReqev
 32027 ;;		_mnsProcessMessage
 32028 ;;		_nvProcessMessage
 32029 ;; This function uses a non-reentrant model
 32030 ;;
 32031                           
 32032                           	psect	text61
 32033   00794E                     __ptext61:
 32034                           	callstack 0
 32035   00794E                     _startTimedResponse:
 32036                           	callstack 122
 32037                           
 32038                           ;incstack = 0
 32039                           ;startTimedResponse@type stored from wreg
 32040   00794E  6E08               	movwf	startTimedResponse@type^(0+1280),c
 32041   007950                     
 32042                           ;../../VLCBlib_PIC/timedResponse.c: 94:     timedResponseType = type;
 32043   007950  C508  F596         	movff	startTimedResponse@type,_timedResponseType
 32044   007954                     
 32045                           ;../../VLCBlib_PIC/timedResponse.c: 95:     if (serviceIndex == 0) {
 32046   007954  5005               	movf	startTimedResponse@serviceIndex^(0+1280),w,c
 32047   007956  A4D8               	btfss	status,2,c
 32048   007958  EFB0  F03C         	goto	u5581
 32049   00795C  EFB2  F03C         	goto	u5580
 32050   007960                     u5581:
 32051   007960  EFB8  F03C         	goto	l1850
 32052   007964                     u5580:
 32053   007964                     
 32054                           ;../../VLCBlib_PIC/timedResponse.c: 97:         timedResponseAllServicesFlag = 1;
 32055   007964  0E01               	movlw	1
 32056   007966  0105               	movlb	5	; () banked
 32057   007968  6F97               	movwf	_timedResponseAllServicesFlag& (0+255),b
 32058   00796A                     
 32059                           ; BSR set to: 5
 32060                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = 0;
 32061   00796A  6B98               	clrf	_timedResponseServiceIndex& (0+255),b
 32062                           
 32063                           ;../../VLCBlib_PIC/timedResponse.c: 99:     } else {
 32064   00796C  EFCF  F03C         	goto	l8141
 32065   007970                     l1850:
 32066                           
 32067                           ;../../VLCBlib_PIC/timedResponse.c: 100:         timedResponseAllServicesFlag = 0;
 32068   007970  0105               	movlb	5	; () banked
 32069   007972  6B97               	clrf	_timedResponseAllServicesFlag& (0+255),b
 32070   007974                     
 32071                           ; BSR set to: 5
 32072                           ;../../VLCBlib_PIC/timedResponse.c: 101:         if ((serviceIndex < 1) || (serviceIndex
      +                           > 6)) {
 32073   007974  5005               	movf	startTimedResponse@serviceIndex^(0+1280),w,c
 32074   007976  B4D8               	btfsc	status,2,c
 32075   007978  EFC0  F03C         	goto	u5591
 32076   00797C  EFC2  F03C         	goto	u5590
 32077   007980                     u5591:
 32078   007980  EFCA  F03C         	goto	l1854
 32079   007984                     u5590:
 32080   007984                     
 32081                           ; BSR set to: 5
 32082   007984  0E06               	movlw	6
 32083   007986  6405               	cpfsgt	startTimedResponse@serviceIndex^(0+1280),c
 32084   007988  EFC8  F03C         	goto	u5601
 32085   00798C  EFCA  F03C         	goto	u5600
 32086   007990                     u5601:
 32087   007990  EFCD  F03C         	goto	l8139
 32088   007994                     u5600:
 32089   007994                     l1854:
 32090                           
 32091                           ; BSR set to: 5
 32092                           ;../../VLCBlib_PIC/timedResponse.c: 103:             timedResponseType = 0xFF;
 32093   007994  6996               	setf	_timedResponseType& (0+255),b
 32094                           
 32095                           ;../../VLCBlib_PIC/timedResponse.c: 104:             return;
 32096   007996  EFD4  F03C         	goto	l1855
 32097   00799A                     l8139:
 32098                           
 32099                           ; BSR set to: 5
 32100                           ;../../VLCBlib_PIC/timedResponse.c: 106:         timedResponseServiceIndex = (uint8_t)se
      +                          rviceIndex-1;
 32101   00799A  0405               	decf	startTimedResponse@serviceIndex^(0+1280),w,c
 32102   00799C  6F98               	movwf	_timedResponseServiceIndex& (0+255),b
 32103   00799E                     l8141:
 32104                           
 32105                           ; BSR set to: 5
 32106                           ;../../VLCBlib_PIC/timedResponse.c: 108:     timedResponseStep = 0;
 32107   00799E  6B95               	clrf	_timedResponseStep& (0+255),b
 32108                           
 32109                           ;../../VLCBlib_PIC/timedResponse.c: 109:     timedResponseCallback = callback;
 32110   0079A0  C506  F587         	movff	startTimedResponse@callback,_timedResponseCallback
 32111   0079A4  C507  F588         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 32112   0079A8                     l1855:
 32113                           
 32114                           ; BSR set to: 5
 32115   0079A8  0012               	return		;funcret
 32116   0079AA                     __end_of_startTimedResponse:
 32117                           	callstack 0
 32118                           
 32119 ;; *************** function _sendMessage6 *****************
 32120 ;; Defined at:
 32121 ;;		line 1207 in file "../../VLCBlib_PIC/vlcb.c"
 32122 ;; Parameters:    Size  Location     Type
 32123 ;;  opc             1    wreg     enum E22928
 32124 ;;  data1           1   37[COMRAM] unsigned char 
 32125 ;;  data2           1   38[COMRAM] unsigned char 
 32126 ;;  data3           1   39[COMRAM] unsigned char 
 32127 ;;  data4           1   40[COMRAM] unsigned char 
 32128 ;;  data5           1   41[COMRAM] unsigned char 
 32129 ;;  data6           1   42[COMRAM] unsigned char 
 32130 ;; Auto vars:     Size  Location     Type
 32131 ;;  opc             1   43[COMRAM] enum E22928
 32132 ;; Return value:  Size  Location     Type
 32133 ;;                  1    wreg      void 
 32134 ;; Registers used:
 32135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32136 ;; Tracked objects:
 32137 ;;		On entry : 0/0
 32138 ;;		On exit  : 0/0
 32139 ;;		Unchanged: 0/0
 32140 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32141 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32144 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32145 ;;Total ram usage:        7 bytes
 32146 ;; Hardware stack levels used: 1
 32147 ;; Hardware stack levels required when called: 5
 32148 ;; This function calls:
 32149 ;;		_sendMessage
 32150 ;; This function is called by:
 32151 ;;		_doReqev
 32152 ;;		_reqevCallback
 32153 ;;		_mnsProcessMessage
 32154 ;;		_mnsTRallDiagnosticsCallback
 32155 ;; This function uses a non-reentrant model
 32156 ;;
 32157                           
 32158                           	psect	text62
 32159   00805A                     __ptext62:
 32160                           	callstack 0
 32161   00805A                     _sendMessage6:
 32162                           	callstack 118
 32163                           
 32164                           ; BSR set to: 5
 32165                           ;incstack = 0
 32166                           ;sendMessage6@opc stored from wreg
 32167   00805A  6E2C               	movwf	sendMessage6@opc^(0+1280),c
 32168   00805C                     
 32169                           ;../../VLCBlib_PIC/vlcb.c: 1208:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 32170   00805C  0E07               	movlw	7
 32171   00805E  6E1B               	movwf	sendMessage@len^(0+1280),c
 32172   008060  C526  F51C         	movff	sendMessage6@data1,sendMessage@data1
 32173   008064  C527  F51D         	movff	sendMessage6@data2,sendMessage@data2
 32174   008068  C528  F51E         	movff	sendMessage6@data3,sendMessage@data3
 32175   00806C  C529  F51F         	movff	sendMessage6@data4,sendMessage@data4
 32176   008070  C52A  F520         	movff	sendMessage6@data5,sendMessage@data5
 32177   008074  C52B  F521         	movff	sendMessage6@data6,sendMessage@data6
 32178   008078  0E00               	movlw	0
 32179   00807A  6E22               	movwf	sendMessage@data7^(0+1280),c
 32180   00807C  502C               	movf	sendMessage6@opc^(0+1280),w,c
 32181   00807E  EC61  F036         	call	_sendMessage
 32182   008082  0012               	return		;funcret
 32183   008084                     __end_of_sendMessage6:
 32184                           	callstack 0
 32185                           
 32186 ;; *************** function _sendMessage4 *****************
 32187 ;; Defined at:
 32188 ;;		line 1180 in file "../../VLCBlib_PIC/vlcb.c"
 32189 ;; Parameters:    Size  Location     Type
 32190 ;;  opc             1    wreg     enum E22928
 32191 ;;  data1           1   37[COMRAM] unsigned char 
 32192 ;;  data2           1   38[COMRAM] unsigned char 
 32193 ;;  data3           1   39[COMRAM] unsigned char 
 32194 ;;  data4           1   40[COMRAM] unsigned char 
 32195 ;; Auto vars:     Size  Location     Type
 32196 ;;  opc             1   41[COMRAM] enum E22928
 32197 ;; Return value:  Size  Location     Type
 32198 ;;                  1    wreg      void 
 32199 ;; Registers used:
 32200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32201 ;; Tracked objects:
 32202 ;;		On entry : 0/0
 32203 ;;		On exit  : 0/0
 32204 ;;		Unchanged: 0/0
 32205 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32209 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32210 ;;Total ram usage:        5 bytes
 32211 ;; Hardware stack levels used: 1
 32212 ;; Hardware stack levels required when called: 5
 32213 ;; This function calls:
 32214 ;;		_sendMessage
 32215 ;; This function is called by:
 32216 ;;		_mnsProcessMessage
 32217 ;;		_mnsTRrqnpnCallback
 32218 ;;		_nvProcessMessage
 32219 ;;		_nvTRnvrdCallback
 32220 ;; This function uses a non-reentrant model
 32221 ;;
 32222                           
 32223                           	psect	text63
 32224   008084                     __ptext63:
 32225                           	callstack 0
 32226   008084                     _sendMessage4:
 32227                           	callstack 118
 32228                           
 32229                           ;incstack = 0
 32230                           ;sendMessage4@opc stored from wreg
 32231   008084  6E2A               	movwf	sendMessage4@opc^(0+1280),c
 32232   008086                     
 32233                           ;../../VLCBlib_PIC/vlcb.c: 1181:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 32234   008086  0E05               	movlw	5
 32235   008088  6E1B               	movwf	sendMessage@len^(0+1280),c
 32236   00808A  C526  F51C         	movff	sendMessage4@data1,sendMessage@data1
 32237   00808E  C527  F51D         	movff	sendMessage4@data2,sendMessage@data2
 32238   008092  C528  F51E         	movff	sendMessage4@data3,sendMessage@data3
 32239   008096  C529  F51F         	movff	sendMessage4@data4,sendMessage@data4
 32240   00809A  0E00               	movlw	0
 32241   00809C  6E20               	movwf	sendMessage@data5^(0+1280),c
 32242   00809E  0E00               	movlw	0
 32243   0080A0  6E21               	movwf	sendMessage@data6^(0+1280),c
 32244   0080A2  0E00               	movlw	0
 32245   0080A4  6E22               	movwf	sendMessage@data7^(0+1280),c
 32246   0080A6  502A               	movf	sendMessage4@opc^(0+1280),w,c
 32247   0080A8  EC61  F036         	call	_sendMessage
 32248   0080AC  0012               	return		;funcret
 32249   0080AE                     __end_of_sendMessage4:
 32250                           	callstack 0
 32251                           
 32252 ;; *************** function _sendMessage3 *****************
 32253 ;; Defined at:
 32254 ;;		line 1168 in file "../../VLCBlib_PIC/vlcb.c"
 32255 ;; Parameters:    Size  Location     Type
 32256 ;;  opc             1    wreg     enum E22928
 32257 ;;  data1           1   37[COMRAM] unsigned char 
 32258 ;;  data2           1   38[COMRAM] unsigned char 
 32259 ;;  data3           1   39[COMRAM] unsigned char 
 32260 ;; Auto vars:     Size  Location     Type
 32261 ;;  opc             1   40[COMRAM] enum E22928
 32262 ;; Return value:  Size  Location     Type
 32263 ;;                  1    wreg      void 
 32264 ;; Registers used:
 32265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32266 ;; Tracked objects:
 32267 ;;		On entry : 0/0
 32268 ;;		On exit  : 0/0
 32269 ;;		Unchanged: 0/0
 32270 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32271 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32274 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32275 ;;Total ram usage:        4 bytes
 32276 ;; Hardware stack levels used: 1
 32277 ;; Hardware stack levels required when called: 5
 32278 ;; This function calls:
 32279 ;;		_sendMessage
 32280 ;; This function is called by:
 32281 ;;		_teachProcessMessage
 32282 ;;		_doNnevn
 32283 ;;		_doNenrd
 32284 ;;		_doRqevn
 32285 ;;		_doEvlrn
 32286 ;;		_doReval
 32287 ;;		_doEvuln
 32288 ;;		_doReqev
 32289 ;;		_mnsProcessMessage
 32290 ;;		_nvProcessMessage
 32291 ;; This function uses a non-reentrant model
 32292 ;;
 32293                           
 32294                           	psect	text64
 32295   0080AE                     __ptext64:
 32296                           	callstack 0
 32297   0080AE                     _sendMessage3:
 32298                           	callstack 119
 32299                           
 32300                           ;incstack = 0
 32301                           ;sendMessage3@opc stored from wreg
 32302   0080AE  6E29               	movwf	sendMessage3@opc^(0+1280),c
 32303   0080B0                     
 32304                           ;../../VLCBlib_PIC/vlcb.c: 1169:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 32305   0080B0  0E04               	movlw	4
 32306   0080B2  6E1B               	movwf	sendMessage@len^(0+1280),c
 32307   0080B4  C526  F51C         	movff	sendMessage3@data1,sendMessage@data1
 32308   0080B8  C527  F51D         	movff	sendMessage3@data2,sendMessage@data2
 32309   0080BC  C528  F51E         	movff	sendMessage3@data3,sendMessage@data3
 32310   0080C0  0E00               	movlw	0
 32311   0080C2  6E1F               	movwf	sendMessage@data4^(0+1280),c
 32312   0080C4  0E00               	movlw	0
 32313   0080C6  6E20               	movwf	sendMessage@data5^(0+1280),c
 32314   0080C8  0E00               	movlw	0
 32315   0080CA  6E21               	movwf	sendMessage@data6^(0+1280),c
 32316   0080CC  0E00               	movlw	0
 32317   0080CE  6E22               	movwf	sendMessage@data7^(0+1280),c
 32318   0080D0  5029               	movf	sendMessage3@opc^(0+1280),w,c
 32319   0080D2  EC61  F036         	call	_sendMessage
 32320   0080D6  0012               	return		;funcret
 32321   0080D8                     __end_of_sendMessage3:
 32322                           	callstack 0
 32323                           
 32324 ;; *************** function _getParameter *****************
 32325 ;; Defined at:
 32326 ;;		line 838 in file "../../VLCBlib_PIC/mns.c"
 32327 ;; Parameters:    Size  Location     Type
 32328 ;;  idx             1    wreg     unsigned char 
 32329 ;; Auto vars:     Size  Location     Type
 32330 ;;  idx             1    8[COMRAM] unsigned char 
 32331 ;;  i               1    0        unsigned char 
 32332 ;; Return value:  Size  Location     Type
 32333 ;;                  1    wreg      unsigned char 
 32334 ;; Registers used:
 32335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32336 ;; Tracked objects:
 32337 ;;		On entry : 0/0
 32338 ;;		On exit  : 0/0
 32339 ;;		Unchanged: 0/0
 32340 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32343 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32344 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32345 ;;Total ram usage:        4 bytes
 32346 ;; Hardware stack levels used: 1
 32347 ;; Hardware stack levels required when called: 3
 32348 ;; This function calls:
 32349 ;;		_getParameterFlags
 32350 ;;		_have
 32351 ;; This function is called by:
 32352 ;;		_mnsProcessMessage
 32353 ;;		_mnsTRrqnpnCallback
 32354 ;; This function uses a non-reentrant model
 32355 ;;
 32356                           
 32357                           	psect	text65
 32358   0047E2                     __ptext65:
 32359                           	callstack 0
 32360   0047E2                     _getParameter:
 32361                           	callstack 120
 32362                           
 32363                           ;incstack = 0
 32364                           ;getParameter@idx stored from wreg
 32365   0047E2  6E09               	movwf	getParameter@idx^(0+1280),c
 32366   0047E4                     
 32367                           ;../../VLCBlib_PIC/mns.c: 839:     uint8_t i;;../../VLCBlib_PIC/mns.c: 840:     switch(i
      +                          dx) {
 32368   0047E4  EF59  F024         	goto	l8285
 32369   0047E8                     l8189:
 32370                           
 32371                           ;../../VLCBlib_PIC/mns.c: 842:         return 20;
 32372   0047E8  0E14               	movlw	20
 32373   0047EA  EFB0  F024         	goto	l1425
 32374   0047EE                     l8193:
 32375                           
 32376                           ;../../VLCBlib_PIC/mns.c: 844:         return MANU_MERG;
 32377   0047EE  0EA5               	movlw	165
 32378   0047F0  EFB0  F024         	goto	l1425
 32379   0047F4                     l8197:
 32380                           
 32381                           ;../../VLCBlib_PIC/mns.c: 846:         return 'a';
 32382   0047F4  0E61               	movlw	97
 32383   0047F6  EFB0  F024         	goto	l1425
 32384   0047FA                     l8201:
 32385                           
 32386                           ;../../VLCBlib_PIC/mns.c: 848:         return MTYP_VLCB;
 32387   0047FA  0EFC               	movlw	252
 32388   0047FC  EFB0  F024         	goto	l1425
 32389   004800                     l8205:
 32390                           
 32391                           ;../../VLCBlib_PIC/mns.c: 850:         return 255;
 32392   004800  0EFF               	movlw	255
 32393   004802  EFB0  F024         	goto	l1425
 32394   004806                     l8213:
 32395                           
 32396                           ;../../VLCBlib_PIC/mns.c: 854:         return 49;
 32397   004806  0E31               	movlw	49
 32398   004808  EFB0  F024         	goto	l1425
 32399   00480C                     l8217:
 32400                           
 32401                           ;../../VLCBlib_PIC/mns.c: 856:         return 1;
 32402   00480C  0E01               	movlw	1
 32403   00480E  EFB0  F024         	goto	l1425
 32404   004812                     l8221:
 32405                           
 32406                           ;../../VLCBlib_PIC/mns.c: 858:         return getParameterFlags();
 32407   004812  EC7D  F037         	call	_getParameterFlags	;wreg free
 32408   004816  EFB0  F024         	goto	l1425
 32409   00481A                     l8225:
 32410                           
 32411                           ;../../VLCBlib_PIC/mns.c: 860:         return P18F27Q83;
 32412   00481A  0E17               	movlw	23
 32413   00481C  EFB0  F024         	goto	l1425
 32414   004820                     l8229:
 32415                           
 32416                           ;../../VLCBlib_PIC/mns.c: 862:         if (have(SERVICE_ID_CAN)) {
 32417   004820  0E03               	movlw	3
 32418   004822  EC37  F037         	call	_have
 32419   004826  0900               	iorlw	0
 32420   004828  B4D8               	btfsc	status,2,c
 32421   00482A  EF19  F024         	goto	u5641
 32422   00482E  EF1B  F024         	goto	u5640
 32423   004832                     u5641:
 32424   004832  EF1D  F024         	goto	l8235
 32425   004836                     u5640:
 32426   004836  EF06  F024         	goto	l8217
 32427   00483A                     l8235:
 32428                           
 32429                           ;../../VLCBlib_PIC/mns.c: 865:         return 0;
 32430   00483A  0E00               	movlw	0
 32431   00483C  EFB0  F024         	goto	l1425
 32432   004840                     l8243:
 32433                           
 32434                           ;../../VLCBlib_PIC/mns.c: 869:         return 0x08;
 32435   004840  0E08               	movlw	8
 32436   004842  EFB0  F024         	goto	l1425
 32437   004846                     l8255:
 32438                           
 32439                           ;../../VLCBlib_PIC/mns.c: 876:         return *(const uint8_t*)0x3FFFFC;
 32440   004846  0EFC               	movlw	252
 32441   004848  6EF6               	movwf	tblptrl,c
 32442   00484A                     	if	1	;There is more than 1 active tblptr byte
 32443   00484A  0EFF               	movlw	255
 32444   00484C  6EF7               	movwf	tblptrh,c
 32445   00484E                     	endif
 32446   00484E                     	if	1	;There are 3 active tblptr bytes
 32447   00484E  0E00               	movlw	0
 32448   004850  6EF8               	movwf	tblptru,c
 32449   004852                     	endif
 32450   004852  0008               	tblrd		*
 32451   004854  50F5               	movf	tablat,w,c
 32452   004856  EFB0  F024         	goto	l1425
 32453   00485A                     l8259:
 32454                           
 32455                           ;../../VLCBlib_PIC/mns.c: 878:         return *(const uint8_t*)0x3FFFFD;
 32456   00485A  0EFD               	movlw	253
 32457   00485C  6EF6               	movwf	tblptrl,c
 32458   00485E                     	if	1	;There is more than 1 active tblptr byte
 32459   00485E  0EFF               	movlw	255
 32460   004860  6EF7               	movwf	tblptrh,c
 32461   004862                     	endif
 32462   004862                     	if	1	;There are 3 active tblptr bytes
 32463   004862  0E00               	movlw	0
 32464   004864  6EF8               	movwf	tblptru,c
 32465   004866                     	endif
 32466   004866  0008               	tblrd		*
 32467   004868  50F5               	movf	tablat,w,c
 32468   00486A  EFB0  F024         	goto	l1425
 32469   00486E                     l8263:
 32470                           
 32471                           ;../../VLCBlib_PIC/mns.c: 881:         return *(const uint8_t*)0x3FFFFE;
 32472   00486E  0EFE               	movlw	254
 32473   004870  6EF6               	movwf	tblptrl,c
 32474   004872                     	if	1	;There is more than 1 active tblptr byte
 32475   004872  0EFF               	movlw	255
 32476   004874  6EF7               	movwf	tblptrh,c
 32477   004876                     	endif
 32478   004876                     	if	1	;There are 3 active tblptr bytes
 32479   004876  0E00               	movlw	0
 32480   004878  6EF8               	movwf	tblptru,c
 32481   00487A                     	endif
 32482   00487A  0008               	tblrd		*
 32483   00487C  50F5               	movf	tablat,w,c
 32484   00487E  EFB0  F024         	goto	l1425
 32485   004882                     l8267:
 32486                           
 32487                           ;../../VLCBlib_PIC/mns.c: 883:         return *(const uint8_t*)0x3FFFFF;
 32488   004882  0EFF               	movlw	255
 32489   004884  6E06               	movwf	??_getParameter^(0+1280),c
 32490   004886  0EFF               	movlw	255
 32491   004888  6E07               	movwf	(??_getParameter+1)^(0+1280),c
 32492   00488A  0E00               	movlw	0
 32493   00488C  6E08               	movwf	(??_getParameter+2)^(0+1280),c
 32494   00488E  C506  F4F6         	movff	??_getParameter,tblptrl
 32495   004892  C507  F4F7         	movff	??_getParameter+1,tblptrh
 32496   004896  5008               	movf	(??_getParameter+2)^(0+1280),w,c
 32497   004898  BEE8               	btfsc	wreg,7,c
 32498   00489A  D004               	bra	u5657
 32499   00489C  6EF8               	movwf	tblptru,c
 32500   00489E  0008               	tblrd		*
 32501   0048A0  50F5               	movf	tablat,w,c
 32502   0048A2  D005               	bra	u5650
 32503   0048A4                     u5657:
 32504   0048A4  C4F6 F4E1          	movff	tblptrl,fsr1l
 32505   0048A8  C4F7 F4E2          	movff	tblptrh,fsr1h
 32506   0048AC  50E7               	movf	indf1,w,c
 32507   0048AE                     u5650:
 32508   0048AE  EFB0  F024         	goto	l1425
 32509   0048B2                     l8285:
 32510   0048B2  5009               	movf	getParameter@idx^(0+1280),w,c
 32511                           
 32512                           ; Switch size 1, requested type "simple"
 32513                           ; Number of cases is 21, Range of values is 0 to 20
 32514                           ; switch strategies available:
 32515                           ; Name         Instructions Cycles
 32516                           ; simple_byte           64    33 (average)
 32517                           ;	Chosen strategy is simple_byte
 32518   0048B4  0A00               	xorlw	0	; case 0
 32519   0048B6  B4D8               	btfsc	status,2,c
 32520   0048B8  EFF4  F023         	goto	l8189
 32521   0048BC  0A01               	xorlw	1	; case 1
 32522   0048BE  B4D8               	btfsc	status,2,c
 32523   0048C0  EFF7  F023         	goto	l8193
 32524   0048C4  0A03               	xorlw	3	; case 2
 32525   0048C6  B4D8               	btfsc	status,2,c
 32526   0048C8  EFFA  F023         	goto	l8197
 32527   0048CC  0A01               	xorlw	1	; case 3
 32528   0048CE  B4D8               	btfsc	status,2,c
 32529   0048D0  EFFD  F023         	goto	l8201
 32530   0048D4  0A07               	xorlw	7	; case 4
 32531   0048D6  B4D8               	btfsc	status,2,c
 32532   0048D8  EF00  F024         	goto	l8205
 32533   0048DC  0A01               	xorlw	1	; case 5
 32534   0048DE  B4D8               	btfsc	status,2,c
 32535   0048E0  EFFD  F023         	goto	l8201
 32536   0048E4  0A03               	xorlw	3	; case 6
 32537   0048E6  B4D8               	btfsc	status,2,c
 32538   0048E8  EF03  F024         	goto	l8213
 32539   0048EC  0A01               	xorlw	1	; case 7
 32540   0048EE  B4D8               	btfsc	status,2,c
 32541   0048F0  EF06  F024         	goto	l8217
 32542   0048F4  0A0F               	xorlw	15	; case 8
 32543   0048F6  B4D8               	btfsc	status,2,c
 32544   0048F8  EF09  F024         	goto	l8221
 32545   0048FC  0A01               	xorlw	1	; case 9
 32546   0048FE  B4D8               	btfsc	status,2,c
 32547   004900  EF0D  F024         	goto	l8225
 32548   004904  0A03               	xorlw	3	; case 10
 32549   004906  B4D8               	btfsc	status,2,c
 32550   004908  EF10  F024         	goto	l8229
 32551   00490C  0A01               	xorlw	1	; case 11
 32552   00490E  B4D8               	btfsc	status,2,c
 32553   004910  EF1D  F024         	goto	l8235
 32554   004914  0A07               	xorlw	7	; case 12
 32555   004916  B4D8               	btfsc	status,2,c
 32556   004918  EF20  F024         	goto	l8243
 32557   00491C  0A01               	xorlw	1	; case 13
 32558   00491E  B4D8               	btfsc	status,2,c
 32559   004920  EF1D  F024         	goto	l8235
 32560   004924  0A03               	xorlw	3	; case 14
 32561   004926  B4D8               	btfsc	status,2,c
 32562   004928  EF1D  F024         	goto	l8235
 32563   00492C  0A01               	xorlw	1	; case 15
 32564   00492E  B4D8               	btfsc	status,2,c
 32565   004930  EF23  F024         	goto	l8255
 32566   004934  0A1F               	xorlw	31	; case 16
 32567   004936  B4D8               	btfsc	status,2,c
 32568   004938  EF2D  F024         	goto	l8259
 32569   00493C  0A01               	xorlw	1	; case 17
 32570   00493E  B4D8               	btfsc	status,2,c
 32571   004940  EF37  F024         	goto	l8263
 32572   004944  0A03               	xorlw	3	; case 18
 32573   004946  B4D8               	btfsc	status,2,c
 32574   004948  EF41  F024         	goto	l8267
 32575   00494C  0A01               	xorlw	1	; case 19
 32576   00494E  B4D8               	btfsc	status,2,c
 32577   004950  EF06  F024         	goto	l8217
 32578   004954  0A07               	xorlw	7	; case 20
 32579   004956  B4D8               	btfsc	status,2,c
 32580   004958  EF06  F024         	goto	l8217
 32581   00495C  EF1D  F024         	goto	l8235
 32582   004960                     l1425:
 32583   004960  0012               	return		;funcret
 32584   004962                     __end_of_getParameter:
 32585                           	callstack 0
 32586                           
 32587 ;; *************** function _getParameterFlags *****************
 32588 ;; Defined at:
 32589 ;;		line 609 in file "../../VLCBlib_PIC/mns.c"
 32590 ;; Parameters:    Size  Location     Type
 32591 ;;		None
 32592 ;; Auto vars:     Size  Location     Type
 32593 ;;  flags           1    4[COMRAM] unsigned char 
 32594 ;; Return value:  Size  Location     Type
 32595 ;;                  1    wreg      unsigned char 
 32596 ;; Registers used:
 32597 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32598 ;; Tracked objects:
 32599 ;;		On entry : 0/0
 32600 ;;		On exit  : 0/0
 32601 ;;		Unchanged: 0/0
 32602 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32607 ;;Total ram usage:        1 bytes
 32608 ;; Hardware stack levels used: 1
 32609 ;; Hardware stack levels required when called: 2
 32610 ;; This function calls:
 32611 ;;		_have
 32612 ;; This function is called by:
 32613 ;;		_mnsProcessMessage
 32614 ;;		_getParameter
 32615 ;; This function uses a non-reentrant model
 32616 ;;
 32617                           
 32618                           	psect	text66
 32619   006EFA                     __ptext66:
 32620                           	callstack 0
 32621   006EFA                     _getParameterFlags:
 32622                           	callstack 120
 32623   006EFA                     
 32624                           ;../../VLCBlib_PIC/mns.c: 610:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 611:     flag
      +                          s = 0;
 32625   006EFA  6A05               	clrf	getParameterFlags@flags^(0+1280),c
 32626   006EFC                     
 32627                           ;../../VLCBlib_PIC/mns.c: 612:     if (have(SERVICE_ID_CONSUMER)) {
 32628   006EFC  0E06               	movlw	6
 32629   006EFE  EC37  F037         	call	_have
 32630   006F02  0900               	iorlw	0
 32631   006F04  B4D8               	btfsc	status,2,c
 32632   006F06  EF87  F037         	goto	u5201
 32633   006F0A  EF89  F037         	goto	u5200
 32634   006F0E                     u5201:
 32635   006F0E  EF8A  F037         	goto	l7823
 32636   006F12                     u5200:
 32637   006F12                     
 32638                           ;../../VLCBlib_PIC/mns.c: 613:         flags |= 1;
 32639   006F12  8005               	bsf	getParameterFlags@flags^(0+1280),0,c
 32640   006F14                     l7823:
 32641                           
 32642                           ;../../VLCBlib_PIC/mns.c: 615:     if (have(SERVICE_ID_PRODUCER)) {
 32643   006F14  0E05               	movlw	5
 32644   006F16  EC37  F037         	call	_have
 32645   006F1A  0900               	iorlw	0
 32646   006F1C  B4D8               	btfsc	status,2,c
 32647   006F1E  EF93  F037         	goto	u5211
 32648   006F22  EF95  F037         	goto	u5210
 32649   006F26                     u5211:
 32650   006F26  EF96  F037         	goto	l7827
 32651   006F2A                     u5210:
 32652   006F2A                     
 32653                           ;../../VLCBlib_PIC/mns.c: 616:         flags |= 2;
 32654   006F2A  8205               	bsf	getParameterFlags@flags^(0+1280),1,c
 32655   006F2C                     l7827:
 32656                           
 32657                           ;../../VLCBlib_PIC/mns.c: 618:     if (flags == (2 | 1)) flags |= 16;
 32658   006F2C  0E03               	movlw	3
 32659   006F2E  1805               	xorwf	getParameterFlags@flags^(0+1280),w,c
 32660   006F30  A4D8               	btfss	status,2,c
 32661   006F32  EF9D  F037         	goto	u5221
 32662   006F36  EF9F  F037         	goto	u5220
 32663   006F3A                     u5221:
 32664   006F3A  EFA0  F037         	goto	l7831
 32665   006F3E                     u5220:
 32666   006F3E  8805               	bsf	getParameterFlags@flags^(0+1280),4,c
 32667   006F40                     l7831:
 32668                           
 32669                           ;../../VLCBlib_PIC/mns.c: 619:     if (have(SERVICE_ID_BOOT)) {
 32670   006F40  0E0A               	movlw	10
 32671   006F42  EC37  F037         	call	_have
 32672   006F46  0900               	iorlw	0
 32673   006F48  B4D8               	btfsc	status,2,c
 32674   006F4A  EFA9  F037         	goto	u5231
 32675   006F4E  EFAB  F037         	goto	u5230
 32676   006F52                     u5231:
 32677   006F52  EFAC  F037         	goto	l7835
 32678   006F56                     u5230:
 32679   006F56                     
 32680                           ;../../VLCBlib_PIC/mns.c: 620:         flags |= 8;
 32681   006F56  8605               	bsf	getParameterFlags@flags^(0+1280),3,c
 32682   006F58                     l7835:
 32683                           
 32684                           ;../../VLCBlib_PIC/mns.c: 622:     if (mode_flags & 1) {
 32685   006F58  0105               	movlb	5	; () banked
 32686   006F5A  A1A4               	btfss	_mode_flags& (0+255),0,b
 32687   006F5C  EFB2  F037         	goto	u5241
 32688   006F60  EFB4  F037         	goto	u5240
 32689   006F64                     u5241:
 32690   006F64  EFB5  F037         	goto	l7839
 32691   006F68                     u5240:
 32692   006F68                     
 32693                           ; BSR set to: 5
 32694                           ;../../VLCBlib_PIC/mns.c: 623:         flags |= 32;
 32695   006F68  8A05               	bsf	getParameterFlags@flags^(0+1280),5,c
 32696   006F6A                     l7839:
 32697                           
 32698                           ; BSR set to: 5
 32699                           ;../../VLCBlib_PIC/mns.c: 625:     if (mode_state == MODE_NORMAL) {
 32700   006F6A  05A1               	decf	_mode_state& (0+255),w,b
 32701   006F6C  A4D8               	btfss	status,2,c
 32702   006F6E  EFBB  F037         	goto	u5251
 32703   006F72  EFBD  F037         	goto	u5250
 32704   006F76                     u5251:
 32705   006F76  EFBE  F037         	goto	l1369
 32706   006F7A                     u5250:
 32707   006F7A                     
 32708                           ; BSR set to: 5
 32709                           ;../../VLCBlib_PIC/mns.c: 626:         flags |= 4;
 32710   006F7A  8405               	bsf	getParameterFlags@flags^(0+1280),2,c
 32711   006F7C                     l1369:
 32712                           
 32713                           ; BSR set to: 5
 32714                           ;../../VLCBlib_PIC/mns.c: 629:     flags |= 64;
 32715   006F7C  8C05               	bsf	getParameterFlags@flags^(0+1280),6,c
 32716   006F7E                     
 32717                           ; BSR set to: 5
 32718                           ;../../VLCBlib_PIC/mns.c: 631:     return flags;
 32719   006F7E  5005               	movf	getParameterFlags@flags^(0+1280),w,c
 32720   006F80                     
 32721                           ; BSR set to: 5
 32722   006F80  0012               	return		;funcret
 32723   006F82                     __end_of_getParameterFlags:
 32724                           	callstack 0
 32725                           
 32726 ;; *************** function _findServiceIndex *****************
 32727 ;; Defined at:
 32728 ;;		line 833 in file "../../VLCBlib_PIC/vlcb.c"
 32729 ;; Parameters:    Size  Location     Type
 32730 ;;  serviceType     1    wreg     unsigned char 
 32731 ;; Auto vars:     Size  Location     Type
 32732 ;;  serviceType     1    2[COMRAM] unsigned char 
 32733 ;;  i               1    3[COMRAM] unsigned char 
 32734 ;; Return value:  Size  Location     Type
 32735 ;;                  1    wreg      unsigned char 
 32736 ;; Registers used:
 32737 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 32738 ;; Tracked objects:
 32739 ;;		On entry : 0/0
 32740 ;;		On exit  : 0/0
 32741 ;;		Unchanged: 0/0
 32742 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32744 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32745 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32746 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32747 ;;Total ram usage:        4 bytes
 32748 ;; Hardware stack levels used: 1
 32749 ;; Hardware stack levels required when called: 1
 32750 ;; This function calls:
 32751 ;;		Nothing
 32752 ;; This function is called by:
 32753 ;;		_doNerd
 32754 ;;		_doReval
 32755 ;;		_doReqev
 32756 ;;		_mnsProcessMessage
 32757 ;;		_nvProcessMessage
 32758 ;; This function uses a non-reentrant model
 32759 ;;
 32760                           
 32761                           	psect	text67
 32762   006DE2                     __ptext67:
 32763                           	callstack 0
 32764   006DE2                     _findServiceIndex:
 32765                           	callstack 122
 32766                           
 32767                           ; BSR set to: 5
 32768                           ;incstack = 0
 32769                           ;findServiceIndex@serviceType stored from wreg
 32770   006DE2  6E03               	movwf	findServiceIndex@serviceType^(0+1280),c
 32771   006DE4                     
 32772                           ;../../VLCBlib_PIC/vlcb.c: 834:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 835:     for (i
      +                          =0; i<6; i++) {
 32773   006DE4  6A04               	clrf	findServiceIndex@i^(0+1280),c
 32774   006DE6                     l8111:
 32775                           
 32776                           ;../../VLCBlib_PIC/vlcb.c: 836:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 32777   006DE6  5004               	movf	findServiceIndex@i^(0+1280),w,c
 32778   006DE8  0D02               	mullw	2
 32779   006DEA  0E89               	movlw	low _services
 32780   006DEC  24F3               	addwf	243,w,c
 32781   006DEE  6EF6               	movwf	tblptrl,c
 32782   006DF0  0EFF               	movlw	high _services
 32783   006DF2  20F4               	addwfc	244,w,c
 32784   006DF4  6EF7               	movwf	tblptrh,c
 32785   006DF6                     	if	1	;There are 3 active tblptr bytes
 32786   006DF6  6AF8               	clrf	tblptru,c
 32787   006DF8  0E00               	movlw	low (__mediumconst shr (0+16))
 32788   006DFA  22F8               	addwfc	tblptru,f,c
 32789   006DFC                     	endif
 32790   006DFC  0009               	tblrd		*+
 32791   006DFE  50F5               	movf	tablat,w,c
 32792   006E00  0009               	tblrd		*+
 32793   006E02  10F5               	iorwf	tablat,w,c
 32794   006E04  B4D8               	btfsc	status,2,c
 32795   006E06  EF07  F037         	goto	u5551
 32796   006E0A  EF09  F037         	goto	u5550
 32797   006E0E                     u5551:
 32798   006E0E  EF2C  F037         	goto	l8119
 32799   006E12                     u5550:
 32800   006E12  5004               	movf	findServiceIndex@i^(0+1280),w,c
 32801   006E14  0D02               	mullw	2
 32802   006E16  0E89               	movlw	low _services
 32803   006E18  24F3               	addwf	243,w,c
 32804   006E1A  6EF6               	movwf	tblptrl,c
 32805   006E1C  0EFF               	movlw	high _services
 32806   006E1E  20F4               	addwfc	244,w,c
 32807   006E20  6EF7               	movwf	tblptrh,c
 32808   006E22                     	if	1	;There are 3 active tblptr bytes
 32809   006E22  6AF8               	clrf	tblptru,c
 32810   006E24  0E00               	movlw	low (__mediumconst shr (0+16))
 32811   006E26  22F8               	addwfc	tblptru,f,c
 32812   006E28                     	endif
 32813   006E28  0009               	tblrd		*+
 32814   006E2A  C4F5 F501          	movff	tablat,??_findServiceIndex
 32815   006E2E  0009               	tblrd		*+
 32816   006E30  C4F5 F502          	movff	tablat,??_findServiceIndex+1
 32817   006E34  C501  F4F6         	movff	??_findServiceIndex,tblptrl
 32818   006E38  C502  F4F7         	movff	??_findServiceIndex+1,tblptrh
 32819   006E3C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32820   006E3C  6AF8               	clrf	tblptru,c
 32821   006E3E                     	endif
 32822   006E3E                     	if	0	;tblptru may be non-zero
 32823   006E3E                     	endif
 32824   006E3E  0008               	tblrd		*
 32825   006E40  50F5               	movf	tablat,w,c
 32826   006E42  1803               	xorwf	findServiceIndex@serviceType^(0+1280),w,c
 32827   006E44  A4D8               	btfss	status,2,c
 32828   006E46  EF27  F037         	goto	u5561
 32829   006E4A  EF29  F037         	goto	u5560
 32830   006E4E                     u5561:
 32831   006E4E  EF2C  F037         	goto	l8119
 32832   006E52                     u5560:
 32833   006E52                     
 32834                           ;../../VLCBlib_PIC/vlcb.c: 837:             return i;
 32835   006E52  5004               	movf	findServiceIndex@i^(0+1280),w,c
 32836   006E54  EF36  F037         	goto	l1961
 32837   006E58                     l8119:
 32838                           
 32839                           ;../../VLCBlib_PIC/vlcb.c: 839:     }
 32840   006E58  2A04               	incf	findServiceIndex@i^(0+1280),f,c
 32841   006E5A  0E05               	movlw	5
 32842   006E5C  6404               	cpfsgt	findServiceIndex@i^(0+1280),c
 32843   006E5E  EF33  F037         	goto	u5571
 32844   006E62  EF35  F037         	goto	u5570
 32845   006E66                     u5571:
 32846   006E66  EFF3  F036         	goto	l8111
 32847   006E6A                     u5570:
 32848   006E6A                     
 32849                           ;../../VLCBlib_PIC/vlcb.c: 840:     return 0xFF;
 32850   006E6A  0EFF               	movlw	255
 32851   006E6C                     l1961:
 32852   006E6C  0012               	return		;funcret
 32853   006E6E                     __end_of_findServiceIndex:
 32854                           	callstack 0
 32855                           
 32856 ;; *************** function _canWaitForTxQueueToDrain *****************
 32857 ;; Defined at:
 32858 ;;		line 671 in file "../../VLCBlib_PIC/can18_can_2.c"
 32859 ;; Parameters:    Size  Location     Type
 32860 ;;		None
 32861 ;; Auto vars:     Size  Location     Type
 32862 ;;		None
 32863 ;; Return value:  Size  Location     Type
 32864 ;;                  1    wreg      void 
 32865 ;; Registers used:
 32866 ;;		None
 32867 ;; Tracked objects:
 32868 ;;		On entry : 0/0
 32869 ;;		On exit  : 0/0
 32870 ;;		Unchanged: 0/0
 32871 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32876 ;;Total ram usage:        0 bytes
 32877 ;; Hardware stack levels used: 1
 32878 ;; Hardware stack levels required when called: 1
 32879 ;; This function calls:
 32880 ;;		Nothing
 32881 ;; This function is called by:
 32882 ;;		_mnsProcessMessage
 32883 ;; This function uses a non-reentrant model
 32884 ;;
 32885                           
 32886                           	psect	text68
 32887   0082E0                     __ptext68:
 32888                           	callstack 0
 32889   0082E0                     _canWaitForTxQueueToDrain:
 32890                           	callstack 123
 32891   0082E0                     l660:
 32892                           
 32893                           ;../../VLCBlib_PIC/can18_can_2.c: 672:     while (C1FIFOCON2H & 0x2) {
 32894   0082E0  0101               	movlb	1	; () banked
 32895   0082E2  B369               	btfsc	105,1,b	;volatile
 32896   0082E4  EF76  F041         	goto	u5961
 32897   0082E8  EF78  F041         	goto	u5960
 32898   0082EC                     u5961:
 32899   0082EC  EF70  F041         	goto	l660
 32900   0082F0                     u5960:
 32901   0082F0                     
 32902                           ; BSR set to: 1
 32903   0082F0  0012               	return		;funcret
 32904   0082F2                     __end_of_canWaitForTxQueueToDrain:
 32905                           	callstack 0
 32906                           
 32907 ;; *************** function _canPoll *****************
 32908 ;; Defined at:
 32909 ;;		line 443 in file "../../VLCBlib_PIC/can18_can_2.c"
 32910 ;; Parameters:    Size  Location     Type
 32911 ;;		None
 32912 ;; Auto vars:     Size  Location     Type
 32913 ;;  t8              1    0        unsigned char 
 32914 ;; Return value:  Size  Location     Type
 32915 ;;                  1    wreg      void 
 32916 ;; Registers used:
 32917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32918 ;; Tracked objects:
 32919 ;;		On entry : 0/0
 32920 ;;		On exit  : 0/0
 32921 ;;		Unchanged: 0/0
 32922 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32927 ;;Total ram usage:        0 bytes
 32928 ;; Hardware stack levels used: 1
 32929 ;; Hardware stack levels required when called: 8
 32930 ;; This function calls:
 32931 ;;		_processEnumeration
 32932 ;; This function is called by:
 32933 ;;		_poll
 32934 ;; This function uses a non-reentrant model
 32935 ;;
 32936                           
 32937                           	psect	text69
 32938   008328                     __ptext69:
 32939                           	callstack 0
 32940   008328                     _canPoll:
 32941                           	callstack 117
 32942   008328                     
 32943                           ;../../VLCBlib_PIC/can18_can_2.c: 444:     uint8_t t8;;../../VLCBlib_PIC/can18_can_2.c: 
      +                          446:     processEnumeration();
 32944   008328  EC0F  F023         	call	_processEnumeration	;wreg free
 32945   00832C  0012               	return		;funcret
 32946   00832E                     __end_of_canPoll:
 32947                           	callstack 0
 32948                           
 32949 ;; *************** function _mnsPoll *****************
 32950 ;; Defined at:
 32951 ;;		line 650 in file "../../VLCBlib_PIC/mns.c"
 32952 ;; Parameters:    Size  Location     Type
 32953 ;;		None
 32954 ;; Auto vars:     Size  Location     Type
 32955 ;;		None
 32956 ;; Return value:  Size  Location     Type
 32957 ;;                  1    wreg      void 
 32958 ;; Registers used:
 32959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32960 ;; Tracked objects:
 32961 ;;		On entry : 0/0
 32962 ;;		On exit  : 0/0
 32963 ;;		Unchanged: 0/0
 32964 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32967 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32968 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32969 ;;Total ram usage:        4 bytes
 32970 ;; Hardware stack levels used: 1
 32971 ;; Hardware stack levels required when called: 6
 32972 ;; This function calls:
 32973 ;;		_sendMessage2
 32974 ;;		_sendMessage5
 32975 ;;		_setLEDsByMode
 32976 ;;		_tickGet
 32977 ;;		_writeNVM
 32978 ;; This function is called by:
 32979 ;;		_poll
 32980 ;; This function uses a non-reentrant model
 32981 ;;
 32982                           
 32983                           	psect	text70
 32984   002600                     __ptext70:
 32985                           	callstack 0
 32986   002600                     _mnsPoll:
 32987                           	callstack 119
 32988   002600                     
 32989                           ;../../VLCBlib_PIC/mns.c: 653:     if (mode_state == MODE_NORMAL) {
 32990   002600  0105               	movlb	5	; () banked
 32991   002602  05A1               	decf	_mode_state& (0+255),w,b
 32992   002604  A4D8               	btfss	status,2,c
 32993   002606  EF07  F013         	goto	u7791
 32994   00260A  EF09  F013         	goto	u7790
 32995   00260E                     u7791:
 32996   00260E  EF51  F013         	goto	l10479
 32997   002612                     u7790:
 32998   002612                     
 32999                           ; BSR set to: 5
 33000                           ;../../VLCBlib_PIC/mns.c: 654:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 33001   002612  ECF7  F039         	call	_tickGet	;wreg free
 33002   002616  0105               	movlb	5	; () banked
 33003   002618  516C               	movf	_heartbeatTimer& (0+255),w,b
 33004   00261A  5C01               	subwf	?_tickGet^(0+1280),w,c
 33005   00261C  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33006   00261E  516D               	movf	(_heartbeatTimer+1)& (0+255),w,b
 33007   002620  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33008   002622  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33009   002624  516E               	movf	(_heartbeatTimer+2)& (0+255),w,b
 33010   002626  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33011   002628  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33012   00262A  516F               	movf	(_heartbeatTimer+3)& (0+255),w,b
 33013   00262C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33014   00262E  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33015   002630  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33016   002632  E10D               	bnz	u7800
 33017   002634  0EB5               	movlw	181
 33018   002636  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33019   002638  0EC4               	movlw	196
 33020   00263A  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33021   00263C  0E04               	movlw	4
 33022   00263E  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33023   002640  A0D8               	btfss	status,0,c
 33024   002642  EF25  F013         	goto	u7801
 33025   002646  EF27  F013         	goto	u7800
 33026   00264A                     u7801:
 33027   00264A  EF51  F013         	goto	l10479
 33028   00264E                     u7800:
 33029   00264E                     
 33030                           ; BSR set to: 5
 33031                           ;../../VLCBlib_PIC/mns.c: 655:             if (mode_flags & 4) {
 33032   00264E  A5A4               	btfss	_mode_flags& (0+255),2,b
 33033   002650  EF2C  F013         	goto	u7811
 33034   002654  EF2E  F013         	goto	u7810
 33035   002658                     u7811:
 33036   002658  EF3D  F013         	goto	l10473
 33037   00265C                     u7810:
 33038   00265C                     
 33039                           ; BSR set to: 5
 33040                           ;../../VLCBlib_PIC/mns.c: 656:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x01].asBytes.lo,0);
 33041   00265C  C590  F526         	movff	_nn+1,sendMessage5@data1
 33042   002660  C58F  F527         	movff	_nn,sendMessage5@data2
 33043   002664  C59C  F528         	movff	_heartbeatSequence,sendMessage5@data3
 33044   002668  C5AF  F529         	movff	_mnsDiagnostics+2,sendMessage5@data4
 33045   00266C  0E00               	movlw	0
 33046   00266E  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 33047   002670  0EAB               	movlw	171
 33048   002672  EC96  F040         	call	_sendMessage5
 33049   002676  0105               	movlb	5	; () banked
 33050   002678  2B9C               	incf	_heartbeatSequence& (0+255),f,b
 33051   00267A                     l10473:
 33052                           
 33053                           ; BSR set to: 5
 33054                           ;../../VLCBlib_PIC/mns.c: 658:             heartbeatTimer.val = tickGet();
 33055   00267A  ECF7  F039         	call	_tickGet	;wreg free
 33056   00267E  C501  F56C         	movff	?_tickGet,_heartbeatTimer
 33057   002682  C502  F56D         	movff	?_tickGet+1,_heartbeatTimer+1
 33058   002686  C503  F56E         	movff	?_tickGet+2,_heartbeatTimer+2
 33059   00268A  C504  F56F         	movff	?_tickGet+3,_heartbeatTimer+3
 33060   00268E                     
 33061                           ;../../VLCBlib_PIC/mns.c: 659:             if (mnsDiagnostics[0x01].asBytes.lo > 0) {
 33062   00268E  0105               	movlb	5	; () banked
 33063   002690  51AF               	movf	(_mnsDiagnostics+2)& (0+255),w,b
 33064   002692  B4D8               	btfsc	status,2,c
 33065   002694  EF4E  F013         	goto	u7821
 33066   002698  EF50  F013         	goto	u7820
 33067   00269C                     u7821:
 33068   00269C  EF51  F013         	goto	l10479
 33069   0026A0                     u7820:
 33070   0026A0                     
 33071                           ; BSR set to: 5
 33072                           ;../../VLCBlib_PIC/mns.c: 660:                 mnsDiagnostics[0x01].asBytes.lo--;
 33073   0026A0  07AF               	decf	(_mnsDiagnostics+2)& (0+255),f,b
 33074   0026A2                     l10479:
 33075                           
 33076                           ; BSR set to: 5
 33077                           ;../../VLCBlib_PIC/mns.c: 667:     if (mode_flags != last_mode_flags) {
 33078   0026A2  519F               	movf	_last_mode_flags& (0+255),w,b
 33079   0026A4  19A4               	xorwf	_mode_flags& (0+255),w,b
 33080   0026A6  B4D8               	btfsc	status,2,c
 33081   0026A8  EF58  F013         	goto	u7831
 33082   0026AC  EF5A  F013         	goto	u7830
 33083   0026B0                     u7831:
 33084   0026B0  EF67  F013         	goto	l10485
 33085   0026B4                     u7830:
 33086   0026B4                     
 33087                           ; BSR set to: 5
 33088                           ;../../VLCBlib_PIC/mns.c: 668:         writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 33089   0026B4  0EF9               	movlw	249
 33090   0026B6  6E0E               	movwf	writeNVM@index^(0+1280),c
 33091   0026B8  0E03               	movlw	3
 33092   0026BA  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 33093   0026BC  0E00               	movlw	0
 33094   0026BE  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 33095   0026C0  C5A4  F511         	movff	_mode_flags,writeNVM@value
 33096   0026C4  0E00               	movlw	0
 33097   0026C6  EC47  F03C         	call	_writeNVM
 33098   0026CA                     
 33099                           ;../../VLCBlib_PIC/mns.c: 669:         last_mode_flags = mode_flags;
 33100   0026CA  C5A4  F59F         	movff	_mode_flags,_last_mode_flags
 33101   0026CE                     l10485:
 33102                           
 33103                           ;../../VLCBlib_PIC/mns.c: 671:     if (mode_state != last_mode_state) {
 33104   0026CE  0105               	movlb	5	; () banked
 33105   0026D0  51A0               	movf	_last_mode_state& (0+255),w,b
 33106   0026D2  19A1               	xorwf	_mode_state& (0+255),w,b
 33107   0026D4  B4D8               	btfsc	status,2,c
 33108   0026D6  EF6F  F013         	goto	u7841
 33109   0026DA  EF71  F013         	goto	u7840
 33110   0026DE                     u7841:
 33111   0026DE  EF8E  F013         	goto	l10495
 33112   0026E2                     u7840:
 33113   0026E2                     
 33114                           ; BSR set to: 5
 33115                           ;../../VLCBlib_PIC/mns.c: 673:         if ((mode_state == MODE_UNINITIALISED) || (mode_s
      +                          tate == MODE_NORMAL)) {
 33116   0026E2  29A1               	incf	_mode_state& (0+255),w,b
 33117   0026E4  B4D8               	btfsc	status,2,c
 33118   0026E6  EF77  F013         	goto	u7851
 33119   0026EA  EF79  F013         	goto	u7850
 33120   0026EE                     u7851:
 33121   0026EE  EF81  F013         	goto	l10491
 33122   0026F2                     u7850:
 33123   0026F2                     
 33124                           ; BSR set to: 5
 33125   0026F2  05A1               	decf	_mode_state& (0+255),w,b
 33126   0026F4  A4D8               	btfss	status,2,c
 33127   0026F6  EF7F  F013         	goto	u7861
 33128   0026FA  EF81  F013         	goto	u7860
 33129   0026FE                     u7861:
 33130   0026FE  EF8C  F013         	goto	l10493
 33131   002702                     u7860:
 33132   002702                     l10491:
 33133                           
 33134                           ; BSR set to: 5
 33135                           ;../../VLCBlib_PIC/mns.c: 674:             writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 33136   002702  0EFB               	movlw	251
 33137   002704  6E0E               	movwf	writeNVM@index^(0+1280),c
 33138   002706  0E03               	movlw	3
 33139   002708  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 33140   00270A  0E00               	movlw	0
 33141   00270C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 33142   00270E  C5A1  F511         	movff	_mode_state,writeNVM@value
 33143   002712  0E00               	movlw	0
 33144   002714  EC47  F03C         	call	_writeNVM
 33145   002718                     l10493:
 33146                           
 33147                           ;../../VLCBlib_PIC/mns.c: 676:         last_mode_state = mode_state;
 33148   002718  C5A1  F5A0         	movff	_mode_state,_last_mode_state
 33149   00271C                     l10495:
 33150                           
 33151                           ;../../VLCBlib_PIC/mns.c: 680:     if ((tickGet() - uptimeTimer.val) > 62500) {
 33152   00271C  ECF7  F039         	call	_tickGet	;wreg free
 33153   002720  0105               	movlb	5	; () banked
 33154   002722  5168               	movf	_uptimeTimer& (0+255),w,b
 33155   002724  5C01               	subwf	?_tickGet^(0+1280),w,c
 33156   002726  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33157   002728  5169               	movf	(_uptimeTimer+1)& (0+255),w,b
 33158   00272A  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33159   00272C  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33160   00272E  516A               	movf	(_uptimeTimer+2)& (0+255),w,b
 33161   002730  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33162   002732  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33163   002734  516B               	movf	(_uptimeTimer+3)& (0+255),w,b
 33164   002736  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33165   002738  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33166   00273A  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33167   00273C  102E               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 33168   00273E  E10B               	bnz	u7870
 33169   002740  0E25               	movlw	37
 33170   002742  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33171   002744  0EF4               	movlw	244
 33172   002746  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33173   002748  A0D8               	btfss	status,0,c
 33174   00274A  EFA9  F013         	goto	u7871
 33175   00274E  EFAB  F013         	goto	u7870
 33176   002752                     u7871:
 33177   002752  EF3F  F015         	goto	l10583
 33178   002756                     u7870:
 33179   002756                     
 33180                           ; BSR set to: 5
 33181                           ;../../VLCBlib_PIC/mns.c: 681:         uptimeTimer.val = tickGet();
 33182   002756  ECF7  F039         	call	_tickGet	;wreg free
 33183   00275A  C501  F568         	movff	?_tickGet,_uptimeTimer
 33184   00275E  C502  F569         	movff	?_tickGet+1,_uptimeTimer+1
 33185   002762  C503  F56A         	movff	?_tickGet+2,_uptimeTimer+2
 33186   002766  C504  F56B         	movff	?_tickGet+3,_uptimeTimer+3
 33187   00276A                     
 33188                           ;../../VLCBlib_PIC/mns.c: 682:         mnsDiagnostics[0x03].asUint++;
 33189   00276A  0105               	movlb	5	; () banked
 33190   00276C  4BB3               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 33191   00276E  2BB4               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 33192   002770                     
 33193                           ; BSR set to: 5
 33194                           ;../../VLCBlib_PIC/mns.c: 683:         if (mnsDiagnostics[0x03].asUint == 0) {
 33195   002770  51B3               	movf	(_mnsDiagnostics+6)& (0+255),w,b
 33196   002772  11B4               	iorwf	(_mnsDiagnostics+7)& (0+255),w,b
 33197   002774  A4D8               	btfss	status,2,c
 33198   002776  EFBF  F013         	goto	u7881
 33199   00277A  EFC1  F013         	goto	u7880
 33200   00277E                     u7881:
 33201   00277E  EF3F  F015         	goto	l10583
 33202   002782                     u7880:
 33203   002782                     
 33204                           ; BSR set to: 5
 33205                           ;../../VLCBlib_PIC/mns.c: 684:             mnsDiagnostics[0x02].asUint++;
 33206   002782  4BB1               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 33207   002784  2BB2               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 33208   002786  EF3F  F015         	goto	l10583
 33209   00278A                     l1389:
 33210                           
 33211                           ; BSR set to: 5
 33212                           ;../../VLCBlib_PIC/mns.c: 693:             if ((!(PORTAbits.RA2)) == 0) {
 33213   00278A  A4CE               	btfss	206,2,c	;volatile
 33214   00278C  EFCA  F013         	goto	u7891
 33215   002790  EFCC  F013         	goto	u7890
 33216   002794                     u7891:
 33217   002794  EFD8  F013         	goto	l10507
 33218   002798                     u7890:
 33219   002798                     l10505:
 33220                           
 33221                           ;../../VLCBlib_PIC/mns.c: 695:                 pbTimer.val = tickGet();
 33222   002798  ECF7  F039         	call	_tickGet	;wreg free
 33223   00279C  C501  F570         	movff	?_tickGet,_pbTimer
 33224   0027A0  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 33225   0027A4  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 33226   0027A8  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 33227                           
 33228                           ;../../VLCBlib_PIC/mns.c: 696:             } else {
 33229   0027AC  EF4E  F015         	goto	l1407
 33230   0027B0                     l10507:
 33231                           
 33232                           ; BSR set to: 5
 33233                           ;../../VLCBlib_PIC/mns.c: 698:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 33234   0027B0  ECF7  F039         	call	_tickGet	;wreg free
 33235   0027B4  0105               	movlb	5	; () banked
 33236   0027B6  5170               	movf	_pbTimer& (0+255),w,b
 33237   0027B8  5C01               	subwf	?_tickGet^(0+1280),w,c
 33238   0027BA  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33239   0027BC  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33240   0027BE  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33241   0027C0  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33242   0027C2  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33243   0027C4  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33244   0027C6  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33245   0027C8  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33246   0027CA  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33247   0027CC  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33248   0027CE  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33249   0027D0  E10D               	bnz	u7900
 33250   0027D2  0E91               	movlw	145
 33251   0027D4  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33252   0027D6  0ED0               	movlw	208
 33253   0027D8  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33254   0027DA  0E03               	movlw	3
 33255   0027DC  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33256   0027DE  A0D8               	btfss	status,0,c
 33257   0027E0  EFF4  F013         	goto	u7901
 33258   0027E4  EFF6  F013         	goto	u7900
 33259   0027E8                     u7901:
 33260   0027E8  EF4E  F015         	goto	l1407
 33261   0027EC                     u7900:
 33262   0027EC                     
 33263                           ; BSR set to: 5
 33264                           ;../../VLCBlib_PIC/mns.c: 700:                     mode_state = 0xFD;
 33265   0027EC  0EFD               	movlw	253
 33266   0027EE  6FA1               	movwf	_mode_state& (0+255),b
 33267   0027F0                     
 33268                           ; BSR set to: 5
 33269                           ;../../VLCBlib_PIC/mns.c: 701:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 33270   0027F0  699E               	setf	_setupModePreviousMode& (0+255),b
 33271   0027F2                     
 33272                           ; BSR set to: 5
 33273                           ;../../VLCBlib_PIC/mns.c: 702:                     setLEDsByMode();
 33274   0027F2  EC3E  F03E         	call	_setLEDsByMode	;wreg free
 33275   0027F6  EF4E  F015         	goto	l1407
 33276   0027FA                     l1394:
 33277                           
 33278                           ; BSR set to: 5
 33279                           ;../../VLCBlib_PIC/mns.c: 707:             if ((!(PORTAbits.RA2)) == 0) {
 33280   0027FA  A4CE               	btfss	206,2,c	;volatile
 33281   0027FC  EF02  F014         	goto	u7911
 33282   002800  EF04  F014         	goto	u7910
 33283   002804                     u7911:
 33284   002804  EFCC  F013         	goto	l10505
 33285   002808                     u7910:
 33286   002808                     
 33287                           ; BSR set to: 5
 33288                           ;../../VLCBlib_PIC/mns.c: 711:                 mode_state = MODE_SETUP;
 33289   002808  6BA1               	clrf	_mode_state& (0+255),b
 33290                           
 33291                           ;../../VLCBlib_PIC/mns.c: 712:                 setupModePreviousMode = MODE_UNINITIALISE
      +                          D;
 33292   00280A  699E               	setf	_setupModePreviousMode& (0+255),b
 33293   00280C                     
 33294                           ; BSR set to: 5
 33295                           ;../../VLCBlib_PIC/mns.c: 713:                 pbTimer.val = tickGet();
 33296   00280C  ECF7  F039         	call	_tickGet	;wreg free
 33297   002810  C501  F570         	movff	?_tickGet,_pbTimer
 33298   002814  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 33299   002818  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 33300   00281C  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 33301   002820                     
 33302                           ;../../VLCBlib_PIC/mns.c: 715:                 sendMessage2(OPC_RQNN, nn.bytes.hi, nn.by
      +                          tes.lo);
 33303   002820  C590  F526         	movff	_nn+1,sendMessage2@data1
 33304   002824  C58F  F527         	movff	_nn,sendMessage2@data2
 33305   002828  0E50               	movlw	80
 33306   00282A  EC6C  F040         	call	_sendMessage2
 33307   00282E                     
 33308                           ;../../VLCBlib_PIC/mns.c: 716:                 setLEDsByMode();
 33309   00282E  EC3E  F03E         	call	_setLEDsByMode	;wreg free
 33310   002832  EFCC  F013         	goto	l10505
 33311   002836                     l1396:
 33312                           
 33313                           ; BSR set to: 5
 33314                           ;../../VLCBlib_PIC/mns.c: 721:             if ((!(PORTAbits.RA2)) == 0) {
 33315   002836  A4CE               	btfss	206,2,c	;volatile
 33316   002838  EF20  F014         	goto	u7921
 33317   00283C  EF22  F014         	goto	u7920
 33318   002840                     u7921:
 33319   002840  EFA6  F014         	goto	l10549
 33320   002844                     u7920:
 33321   002844                     
 33322                           ; BSR set to: 5
 33323                           ;../../VLCBlib_PIC/mns.c: 724:                 if (((tickGet() - pbTimer.val) > (62500/1
      +                          0)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 33324   002844  ECF7  F039         	call	_tickGet	;wreg free
 33325   002848  0105               	movlb	5	; () banked
 33326   00284A  5170               	movf	_pbTimer& (0+255),w,b
 33327   00284C  5C01               	subwf	?_tickGet^(0+1280),w,c
 33328   00284E  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33329   002850  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33330   002852  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33331   002854  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33332   002856  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33333   002858  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33334   00285A  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33335   00285C  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33336   00285E  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33337   002860  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33338   002862  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33339   002864  102E               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 33340   002866  E10B               	bnz	u7930
 33341   002868  0E6B               	movlw	107
 33342   00286A  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33343   00286C  0E18               	movlw	24
 33344   00286E  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33345   002870  A0D8               	btfss	status,0,c
 33346   002872  EF3D  F014         	goto	u7931
 33347   002876  EF3F  F014         	goto	u7930
 33348   00287A                     u7931:
 33349   00287A  EF77  F014         	goto	l10541
 33350   00287E                     u7930:
 33351   00287E                     
 33352                           ; BSR set to: 5
 33353   00287E  ECF7  F039         	call	_tickGet	;wreg free
 33354   002882  0105               	movlb	5	; () banked
 33355   002884  5170               	movf	_pbTimer& (0+255),w,b
 33356   002886  5C01               	subwf	?_tickGet^(0+1280),w,c
 33357   002888  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33358   00288A  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33359   00288C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33360   00288E  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33361   002890  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33362   002892  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33363   002894  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33364   002896  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33365   002898  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33366   00289A  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33367   00289C  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33368   00289E  E10B               	bnz	u7941
 33369   0028A0  0E48               	movlw	72
 33370   0028A2  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33371   0028A4  0EE8               	movlw	232
 33372   0028A6  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33373   0028A8  0E01               	movlw	1
 33374   0028AA  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33375   0028AC  B0D8               	btfsc	status,0,c
 33376   0028AE  EF5B  F014         	goto	u7941
 33377   0028B2  EF5D  F014         	goto	u7940
 33378   0028B6                     u7941:
 33379   0028B6  EF77  F014         	goto	l10541
 33380   0028BA                     u7940:
 33381   0028BA                     
 33382                           ; BSR set to: 5
 33383                           ;../../VLCBlib_PIC/mns.c: 726:                     mode_state = setupModePreviousMode;
 33384   0028BA  C59E  F5A1         	movff	_setupModePreviousMode,_mode_state
 33385   0028BE                     
 33386                           ; BSR set to: 5
 33387                           ;../../VLCBlib_PIC/mns.c: 727:                     if (mode_state == MODE_NORMAL) {
 33388   0028BE  05A1               	decf	_mode_state& (0+255),w,b
 33389   0028C0  A4D8               	btfss	status,2,c
 33390   0028C2  EF65  F014         	goto	u7951
 33391   0028C6  EF67  F014         	goto	u7950
 33392   0028CA                     u7951:
 33393   0028CA  EF75  F014         	goto	l10539
 33394   0028CE                     u7950:
 33395   0028CE                     
 33396                           ; BSR set to: 5
 33397                           ;../../VLCBlib_PIC/mns.c: 729:                         nn.word = previousNN.word;
 33398   0028CE  C58D  F58F         	movff	_previousNN,_nn
 33399   0028D2  C58E  F590         	movff	_previousNN+1,_nn+1
 33400   0028D6                     
 33401                           ; BSR set to: 5
 33402                           ;../../VLCBlib_PIC/mns.c: 730:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 33403   0028D6  C590  F526         	movff	_nn+1,sendMessage2@data1
 33404   0028DA  C58F  F527         	movff	_nn,sendMessage2@data2
 33405   0028DE  0E52               	movlw	82
 33406   0028E0  EC6C  F040         	call	_sendMessage2
 33407   0028E4                     
 33408                           ;../../VLCBlib_PIC/mns.c: 732:                         mnsDiagnostics[0x05].asUint++;
 33409   0028E4  0105               	movlb	5	; () banked
 33410   0028E6  4BB7               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 33411   0028E8  2BB8               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 33412   0028EA                     l10539:
 33413                           
 33414                           ; BSR set to: 5
 33415                           ;../../VLCBlib_PIC/mns.c: 735:                     setLEDsByMode();
 33416   0028EA  EC3E  F03E         	call	_setLEDsByMode	;wreg free
 33417   0028EE                     l10541:
 33418                           
 33419                           ;../../VLCBlib_PIC/mns.c: 737:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 33420   0028EE  ECF7  F039         	call	_tickGet	;wreg free
 33421   0028F2  0105               	movlb	5	; () banked
 33422   0028F4  5170               	movf	_pbTimer& (0+255),w,b
 33423   0028F6  5C01               	subwf	?_tickGet^(0+1280),w,c
 33424   0028F8  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33425   0028FA  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33426   0028FC  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33427   0028FE  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33428   002900  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33429   002902  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33430   002904  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33431   002906  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33432   002908  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33433   00290A  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33434   00290C  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33435   00290E  E10D               	bnz	u7960
 33436   002910  0E91               	movlw	145
 33437   002912  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33438   002914  0ED0               	movlw	208
 33439   002916  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33440   002918  0E03               	movlw	3
 33441   00291A  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33442   00291C  A0D8               	btfss	status,0,c
 33443   00291E  EF93  F014         	goto	u7961
 33444   002922  EF95  F014         	goto	u7960
 33445   002926                     u7961:
 33446   002926  EF98  F014         	goto	l1400
 33447   00292A                     u7960:
 33448   00292A                     
 33449                           ; BSR set to: 5
 33450                           ;../../VLCBlib_PIC/mns.c: 738:                     mode_state = MODE_UNINITIALISED;
 33451   00292A  69A1               	setf	_mode_state& (0+255),b
 33452   00292C                     l10545:
 33453                           
 33454                           ;../../VLCBlib_PIC/mns.c: 739:                     setLEDsByMode();
 33455   00292C  EC3E  F03E         	call	_setLEDsByMode	;wreg free
 33456   002930                     l1400:
 33457                           
 33458                           ;../../VLCBlib_PIC/mns.c: 741:                 pbTimer.val = tickGet();
 33459   002930  ECF7  F039         	call	_tickGet	;wreg free
 33460   002934  C501  F570         	movff	?_tickGet,_pbTimer
 33461   002938  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 33462   00293C  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 33463   002940  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 33464   002944                     
 33465                           ;../../VLCBlib_PIC/mns.c: 742:                 pbWasPushed = FALSE;
 33466   002944  0105               	movlb	5	; () banked
 33467   002946  6B9D               	clrf	_pbWasPushed& (0+255),b
 33468                           
 33469                           ;../../VLCBlib_PIC/mns.c: 743:             } else {
 33470   002948  EF4E  F015         	goto	l1407
 33471   00294C                     l10549:
 33472                           
 33473                           ; BSR set to: 5
 33474                           ;../../VLCBlib_PIC/mns.c: 744:                 pbWasPushed = TRUE;
 33475   00294C  0E01               	movlw	1
 33476   00294E  6F9D               	movwf	_pbWasPushed& (0+255),b
 33477   002950  EF4E  F015         	goto	l1407
 33478   002954                     l1402:
 33479                           
 33480                           ; BSR set to: 5
 33481                           ;../../VLCBlib_PIC/mns.c: 749:             if ((!(PORTAbits.RA2)) == 0) {
 33482   002954  A4CE               	btfss	206,2,c	;volatile
 33483   002956  EFAF  F014         	goto	u7971
 33484   00295A  EFB1  F014         	goto	u7970
 33485   00295E                     u7971:
 33486   00295E  EFA6  F014         	goto	l10549
 33487   002962                     u7970:
 33488   002962                     
 33489                           ; BSR set to: 5
 33490                           ;../../VLCBlib_PIC/mns.c: 751:                 if (pbWasPushed && ((tickGet() - pbTimer.
      +                          val) > (62500/10)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 33491   002962  519D               	movf	_pbWasPushed& (0+255),w,b
 33492   002964  B4D8               	btfsc	status,2,c
 33493   002966  EFB7  F014         	goto	u7981
 33494   00296A  EFB9  F014         	goto	u7980
 33495   00296E                     u7981:
 33496   00296E  EF06  F015         	goto	l10565
 33497   002972                     u7980:
 33498   002972                     
 33499                           ; BSR set to: 5
 33500   002972  ECF7  F039         	call	_tickGet	;wreg free
 33501   002976  0105               	movlb	5	; () banked
 33502   002978  5170               	movf	_pbTimer& (0+255),w,b
 33503   00297A  5C01               	subwf	?_tickGet^(0+1280),w,c
 33504   00297C  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33505   00297E  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33506   002980  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33507   002982  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33508   002984  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33509   002986  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33510   002988  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33511   00298A  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33512   00298C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33513   00298E  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33514   002990  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33515   002992  102E               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 33516   002994  E10B               	bnz	u7990
 33517   002996  0E6B               	movlw	107
 33518   002998  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33519   00299A  0E18               	movlw	24
 33520   00299C  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33521   00299E  A0D8               	btfss	status,0,c
 33522   0029A0  EFD4  F014         	goto	u7991
 33523   0029A4  EFD6  F014         	goto	u7990
 33524   0029A8                     u7991:
 33525   0029A8  EF06  F015         	goto	l10565
 33526   0029AC                     u7990:
 33527   0029AC                     
 33528                           ; BSR set to: 5
 33529   0029AC  ECF7  F039         	call	_tickGet	;wreg free
 33530   0029B0  0105               	movlb	5	; () banked
 33531   0029B2  5170               	movf	_pbTimer& (0+255),w,b
 33532   0029B4  5C01               	subwf	?_tickGet^(0+1280),w,c
 33533   0029B6  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33534   0029B8  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33535   0029BA  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33536   0029BC  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33537   0029BE  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33538   0029C0  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33539   0029C2  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33540   0029C4  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33541   0029C6  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33542   0029C8  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33543   0029CA  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33544   0029CC  E10B               	bnz	u8001
 33545   0029CE  0E48               	movlw	72
 33546   0029D0  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33547   0029D2  0EE8               	movlw	232
 33548   0029D4  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33549   0029D6  0E01               	movlw	1
 33550   0029D8  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33551   0029DA  B0D8               	btfsc	status,0,c
 33552   0029DC  EFF2  F014         	goto	u8001
 33553   0029E0  EFF4  F014         	goto	u8000
 33554   0029E4                     u8001:
 33555   0029E4  EF06  F015         	goto	l10565
 33556   0029E8                     u8000:
 33557   0029E8                     
 33558                           ; BSR set to: 5
 33559                           ;../../VLCBlib_PIC/mns.c: 753:                     previousNN.word = nn.word;
 33560   0029E8  C58F  F58D         	movff	_nn,_previousNN
 33561   0029EC  C590  F58E         	movff	_nn+1,_previousNN+1
 33562                           
 33563                           ;../../VLCBlib_PIC/mns.c: 754:                     nn.bytes.lo = nn.bytes.hi = 0;
 33564   0029F0  6B90               	clrf	(_nn+1)& (0+255),b
 33565   0029F2  6B8F               	clrf	_nn& (0+255),b
 33566                           
 33567                           ;../../VLCBlib_PIC/mns.c: 756:                     mode_state = MODE_SETUP;
 33568   0029F4  6BA1               	clrf	_mode_state& (0+255),b
 33569   0029F6                     
 33570                           ; BSR set to: 5
 33571                           ;../../VLCBlib_PIC/mns.c: 757:                     setupModePreviousMode = MODE_NORMAL;
 33572   0029F6  0E01               	movlw	1
 33573   0029F8  6F9E               	movwf	_setupModePreviousMode& (0+255),b
 33574   0029FA                     
 33575                           ; BSR set to: 5
 33576                           ;../../VLCBlib_PIC/mns.c: 759:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 33577   0029FA  C58E  F526         	movff	_previousNN+1,sendMessage2@data1
 33578   0029FE  C58D  F527         	movff	_previousNN,sendMessage2@data2
 33579   002A02  0E50               	movlw	80
 33580   002A04  EC6C  F040         	call	_sendMessage2
 33581   002A08                     
 33582                           ;../../VLCBlib_PIC/mns.c: 760:                     setLEDsByMode();
 33583   002A08  EC3E  F03E         	call	_setLEDsByMode	;wreg free
 33584   002A0C                     l10565:
 33585                           
 33586                           ;../../VLCBlib_PIC/mns.c: 762:                 if (pbWasPushed &&((tickGet() - pbTimer.v
      +                          al) >= 4*62500)) {
 33587   002A0C  0105               	movlb	5	; () banked
 33588   002A0E  519D               	movf	_pbWasPushed& (0+255),w,b
 33589   002A10  B4D8               	btfsc	status,2,c
 33590   002A12  EF0D  F015         	goto	u8011
 33591   002A16  EF0F  F015         	goto	u8010
 33592   002A1A                     u8011:
 33593   002A1A  EF98  F014         	goto	l1400
 33594   002A1E                     u8010:
 33595   002A1E                     
 33596                           ; BSR set to: 5
 33597   002A1E  ECF7  F039         	call	_tickGet	;wreg free
 33598   002A22  0105               	movlb	5	; () banked
 33599   002A24  5170               	movf	_pbTimer& (0+255),w,b
 33600   002A26  5C01               	subwf	?_tickGet^(0+1280),w,c
 33601   002A28  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33602   002A2A  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33603   002A2C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33604   002A2E  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33605   002A30  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33606   002A32  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33607   002A34  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33608   002A36  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33609   002A38  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33610   002A3A  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33611   002A3C  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33612   002A3E  E10D               	bnz	u8020
 33613   002A40  0E90               	movlw	144
 33614   002A42  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33615   002A44  0ED0               	movlw	208
 33616   002A46  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33617   002A48  0E03               	movlw	3
 33618   002A4A  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33619   002A4C  A0D8               	btfss	status,0,c
 33620   002A4E  EF2B  F015         	goto	u8021
 33621   002A52  EF2D  F015         	goto	u8020
 33622   002A56                     u8021:
 33623   002A56  EF98  F014         	goto	l1400
 33624   002A5A                     u8020:
 33625   002A5A                     
 33626                           ; BSR set to: 5
 33627                           ;../../VLCBlib_PIC/mns.c: 764:                     previousNN.word = nn.word;
 33628   002A5A  C58F  F58D         	movff	_nn,_previousNN
 33629   002A5E  C590  F58E         	movff	_nn+1,_previousNN+1
 33630                           
 33631                           ;../../VLCBlib_PIC/mns.c: 765:                     nn.bytes.lo = nn.bytes.hi = 0;
 33632   002A62  6B90               	clrf	(_nn+1)& (0+255),b
 33633   002A64  6B8F               	clrf	_nn& (0+255),b
 33634                           
 33635                           ;../../VLCBlib_PIC/mns.c: 767:                     mode_state = MODE_UNINITIALISED;
 33636   002A66  69A1               	setf	_mode_state& (0+255),b
 33637   002A68                     
 33638                           ; BSR set to: 5
 33639                           ;../../VLCBlib_PIC/mns.c: 768:                     setupModePreviousMode = MODE_NORMAL;
 33640   002A68  0E01               	movlw	1
 33641   002A6A  6F9E               	movwf	_setupModePreviousMode& (0+255),b
 33642   002A6C                     
 33643                           ; BSR set to: 5
 33644                           ;../../VLCBlib_PIC/mns.c: 770:                     sendMessage2(OPC_NNREL, previousNN.by
      +                          tes.hi, previousNN.bytes.lo);
 33645   002A6C  C58E  F526         	movff	_previousNN+1,sendMessage2@data1
 33646   002A70  C58D  F527         	movff	_previousNN,sendMessage2@data2
 33647   002A74  0E51               	movlw	81
 33648   002A76  EC6C  F040         	call	_sendMessage2
 33649   002A7A  EF96  F014         	goto	l10545
 33650   002A7E                     l10583:
 33651                           
 33652                           ; BSR set to: 5
 33653   002A7E  51A1               	movf	_mode_state& (0+255),w,b
 33654                           
 33655                           ; Switch size 1, requested type "simple"
 33656                           ; Number of cases is 3, Range of values is 0 to 255
 33657                           ; switch strategies available:
 33658                           ; Name         Instructions Cycles
 33659                           ; simple_byte           10     6 (average)
 33660                           ;	Chosen strategy is simple_byte
 33661   002A80  0A00               	xorlw	0	; case 0
 33662   002A82  B4D8               	btfsc	status,2,c
 33663   002A84  EF1B  F014         	goto	l1396
 33664   002A88  0AFD               	xorlw	253	; case 253
 33665   002A8A  B4D8               	btfsc	status,2,c
 33666   002A8C  EFFD  F013         	goto	l1394
 33667   002A90  0A02               	xorlw	2	; case 255
 33668   002A92  B4D8               	btfsc	status,2,c
 33669   002A94  EFC5  F013         	goto	l1389
 33670   002A98  EFAA  F014         	goto	l1402
 33671   002A9C                     l1407:
 33672   002A9C  0012               	return		;funcret
 33673   002A9E                     __end_of_mnsPoll:
 33674                           	callstack 0
 33675                           
 33676 ;; *************** function _setLEDsByMode *****************
 33677 ;; Defined at:
 33678 ;;		line 818 in file "../../VLCBlib_PIC/mns.c"
 33679 ;; Parameters:    Size  Location     Type
 33680 ;;		None
 33681 ;; Auto vars:     Size  Location     Type
 33682 ;;		None
 33683 ;; Return value:  Size  Location     Type
 33684 ;;                  1    wreg      void 
 33685 ;; Registers used:
 33686 ;;		wreg, status,2, status,0, cstack
 33687 ;; Tracked objects:
 33688 ;;		On entry : 0/0
 33689 ;;		On exit  : 0/0
 33690 ;;		Unchanged: 0/0
 33691 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33696 ;;Total ram usage:        0 bytes
 33697 ;; Hardware stack levels used: 1
 33698 ;; Hardware stack levels required when called: 2
 33699 ;; This function calls:
 33700 ;;		_showStatus
 33701 ;; This function is called by:
 33702 ;;		_mnsPowerUp
 33703 ;;		_mnsProcessMessage
 33704 ;;		_mnsPoll
 33705 ;; This function uses a non-reentrant model
 33706 ;;
 33707                           
 33708                           	psect	text71
 33709   007C7C                     __ptext71:
 33710                           	callstack 0
 33711   007C7C                     _setLEDsByMode:
 33712                           	callstack 122
 33713   007C7C                     
 33714                           ;../../VLCBlib_PIC/mns.c: 819:        switch (mode_state) {
 33715   007C7C  EF4F  F03E         	goto	l8913
 33716   007C80                     l8905:
 33717                           
 33718                           ; BSR set to: 5
 33719                           ;../../VLCBlib_PIC/mns.c: 821:             showStatus(STATUS_UNINITIALISED);
 33720   007C80  0E01               	movlw	1
 33721   007C82  EC33  F028         	call	_showStatus
 33722                           
 33723                           ;../../VLCBlib_PIC/mns.c: 822:             break;
 33724   007C86  EF5F  F03E         	goto	l1420
 33725   007C8A                     l8907:
 33726                           
 33727                           ; BSR set to: 5
 33728                           ;../../VLCBlib_PIC/mns.c: 825:             showStatus(STATUS_SETUP);
 33729   007C8A  0E02               	movlw	2
 33730   007C8C  EC33  F028         	call	_showStatus
 33731                           
 33732                           ;../../VLCBlib_PIC/mns.c: 826:             break;
 33733   007C90  EF5F  F03E         	goto	l1420
 33734   007C94                     l8909:
 33735                           
 33736                           ; BSR set to: 5
 33737                           ;../../VLCBlib_PIC/mns.c: 828:             showStatus(STATUS_NORMAL);
 33738   007C94  0E03               	movlw	3
 33739   007C96  EC33  F028         	call	_showStatus
 33740                           
 33741                           ;../../VLCBlib_PIC/mns.c: 829:             break;
 33742   007C9A  EF5F  F03E         	goto	l1420
 33743   007C9E                     l8913:
 33744   007C9E  0105               	movlb	5	; () banked
 33745   007CA0  51A1               	movf	_mode_state& (0+255),w,b
 33746                           
 33747                           ; Switch size 1, requested type "simple"
 33748                           ; Number of cases is 3, Range of values is 0 to 255
 33749                           ; switch strategies available:
 33750                           ; Name         Instructions Cycles
 33751                           ; simple_byte           10     6 (average)
 33752                           ;	Chosen strategy is simple_byte
 33753   007CA2  0A00               	xorlw	0	; case 0
 33754   007CA4  B4D8               	btfsc	status,2,c
 33755   007CA6  EF45  F03E         	goto	l8907
 33756   007CAA  0AFD               	xorlw	253	; case 253
 33757   007CAC  B4D8               	btfsc	status,2,c
 33758   007CAE  EF45  F03E         	goto	l8907
 33759   007CB2  0A02               	xorlw	2	; case 255
 33760   007CB4  B4D8               	btfsc	status,2,c
 33761   007CB6  EF40  F03E         	goto	l8905
 33762   007CBA  EF4A  F03E         	goto	l8909
 33763   007CBE                     l1420:
 33764   007CBE  0012               	return		;funcret
 33765   007CC0                     __end_of_setLEDsByMode:
 33766                           	callstack 0
 33767                           
 33768 ;; *************** function _sendMessage2 *****************
 33769 ;; Defined at:
 33770 ;;		line 1157 in file "../../VLCBlib_PIC/vlcb.c"
 33771 ;; Parameters:    Size  Location     Type
 33772 ;;  opc             1    wreg     enum E22928
 33773 ;;  data1           1   37[COMRAM] unsigned char 
 33774 ;;  data2           1   38[COMRAM] unsigned char 
 33775 ;; Auto vars:     Size  Location     Type
 33776 ;;  opc             1   39[COMRAM] enum E22928
 33777 ;; Return value:  Size  Location     Type
 33778 ;;                  1    wreg      void 
 33779 ;; Registers used:
 33780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33781 ;; Tracked objects:
 33782 ;;		On entry : 0/0
 33783 ;;		On exit  : 0/0
 33784 ;;		Unchanged: 0/0
 33785 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33789 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33790 ;;Total ram usage:        3 bytes
 33791 ;; Hardware stack levels used: 1
 33792 ;; Hardware stack levels required when called: 5
 33793 ;; This function calls:
 33794 ;;		_sendMessage
 33795 ;; This function is called by:
 33796 ;;		_doNnclr
 33797 ;;		_doEvlrn
 33798 ;;		_doEvuln
 33799 ;;		_mnsProcessMessage
 33800 ;;		_mnsPoll
 33801 ;;		_nvProcessMessage
 33802 ;; This function uses a non-reentrant model
 33803 ;;
 33804                           
 33805                           	psect	text72
 33806   0080D8                     __ptext72:
 33807                           	callstack 0
 33808   0080D8                     _sendMessage2:
 33809                           	callstack 118
 33810                           
 33811                           ;incstack = 0
 33812                           ;sendMessage2@opc stored from wreg
 33813   0080D8  6E28               	movwf	sendMessage2@opc^(0+1280),c
 33814   0080DA                     
 33815                           ;../../VLCBlib_PIC/vlcb.c: 1158:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 33816   0080DA  0E03               	movlw	3
 33817   0080DC  6E1B               	movwf	sendMessage@len^(0+1280),c
 33818   0080DE  C526  F51C         	movff	sendMessage2@data1,sendMessage@data1
 33819   0080E2  C527  F51D         	movff	sendMessage2@data2,sendMessage@data2
 33820   0080E6  0E00               	movlw	0
 33821   0080E8  6E1E               	movwf	sendMessage@data3^(0+1280),c
 33822   0080EA  0E00               	movlw	0
 33823   0080EC  6E1F               	movwf	sendMessage@data4^(0+1280),c
 33824   0080EE  0E00               	movlw	0
 33825   0080F0  6E20               	movwf	sendMessage@data5^(0+1280),c
 33826   0080F2  0E00               	movlw	0
 33827   0080F4  6E21               	movwf	sendMessage@data6^(0+1280),c
 33828   0080F6  0E00               	movlw	0
 33829   0080F8  6E22               	movwf	sendMessage@data7^(0+1280),c
 33830   0080FA  5028               	movf	sendMessage2@opc^(0+1280),w,c
 33831   0080FC  EC61  F036         	call	_sendMessage
 33832   008100  0012               	return		;funcret
 33833   008102                     __end_of_sendMessage2:
 33834                           	callstack 0
 33835                           
 33836 ;; *************** function _sendMessage7 *****************
 33837 ;; Defined at:
 33838 ;;		line 1222 in file "../../VLCBlib_PIC/vlcb.c"
 33839 ;; Parameters:    Size  Location     Type
 33840 ;;  opc             1    wreg     enum E22928
 33841 ;;  data1           1   37[COMRAM] unsigned char 
 33842 ;;  data2           1   38[COMRAM] unsigned char 
 33843 ;;  data3           1   39[COMRAM] unsigned char 
 33844 ;;  data4           1   40[COMRAM] unsigned char 
 33845 ;;  data5           1   41[COMRAM] unsigned char 
 33846 ;;  data6           1   42[COMRAM] unsigned char 
 33847 ;;  data7           1   43[COMRAM] unsigned char 
 33848 ;; Auto vars:     Size  Location     Type
 33849 ;;  opc             1   44[COMRAM] enum E22928
 33850 ;; Return value:  Size  Location     Type
 33851 ;;                  1    wreg      void 
 33852 ;; Registers used:
 33853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33854 ;; Tracked objects:
 33855 ;;		On entry : 0/0
 33856 ;;		On exit  : 0/0
 33857 ;;		Unchanged: 0/0
 33858 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33859 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33860 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33862 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33863 ;;Total ram usage:        8 bytes
 33864 ;; Hardware stack levels used: 1
 33865 ;; Hardware stack levels required when called: 5
 33866 ;; This function calls:
 33867 ;;		_sendMessage
 33868 ;; This function is called by:
 33869 ;;		_consumerProcessMessage
 33870 ;;		_nerdCallback
 33871 ;;		_mnsProcessMessage
 33872 ;; This function uses a non-reentrant model
 33873 ;;
 33874                           
 33875                           	psect	text73
 33876   008102                     __ptext73:
 33877                           	callstack 0
 33878   008102                     _sendMessage7:
 33879                           	callstack 118
 33880                           
 33881                           ;incstack = 0
 33882                           ;sendMessage7@opc stored from wreg
 33883   008102  6E2D               	movwf	sendMessage7@opc^(0+1280),c
 33884   008104                     
 33885                           ;../../VLCBlib_PIC/vlcb.c: 1223:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 33886   008104  0E08               	movlw	8
 33887   008106  6E1B               	movwf	sendMessage@len^(0+1280),c
 33888   008108  C526  F51C         	movff	sendMessage7@data1,sendMessage@data1
 33889   00810C  C527  F51D         	movff	sendMessage7@data2,sendMessage@data2
 33890   008110  C528  F51E         	movff	sendMessage7@data3,sendMessage@data3
 33891   008114  C529  F51F         	movff	sendMessage7@data4,sendMessage@data4
 33892   008118  C52A  F520         	movff	sendMessage7@data5,sendMessage@data5
 33893   00811C  C52B  F521         	movff	sendMessage7@data6,sendMessage@data6
 33894   008120  C52C  F522         	movff	sendMessage7@data7,sendMessage@data7
 33895   008124  502D               	movf	sendMessage7@opc^(0+1280),w,c
 33896   008126  EC61  F036         	call	_sendMessage
 33897   00812A  0012               	return		;funcret
 33898   00812C                     __end_of_sendMessage7:
 33899                           	callstack 0
 33900                           
 33901 ;; *************** function _isConsumedEvent *****************
 33902 ;; Defined at:
 33903 ;;		line 208 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 33904 ;; Parameters:    Size  Location     Type
 33905 ;;  eventIndex      1    wreg     unsigned char 
 33906 ;; Auto vars:     Size  Location     Type
 33907 ;;  eventIndex      1    0[COMRAM] unsigned char 
 33908 ;; Return value:  Size  Location     Type
 33909 ;;                  1    wreg      unsigned char 
 33910 ;; Registers used:
 33911 ;;		wreg, status,2, cstack
 33912 ;; Tracked objects:
 33913 ;;		On entry : 0/0
 33914 ;;		On exit  : 0/0
 33915 ;;		Unchanged: 0/0
 33916 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33920 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33921 ;;Total ram usage:        1 bytes
 33922 ;; Hardware stack levels used: 1
 33923 ;; Hardware stack levels required when called: 2
 33924 ;; This function calls:
 33925 ;;		_APP_isConsumedEvent
 33926 ;; This function is called by:
 33927 ;;		_consumerProcessMessage
 33928 ;; This function uses a non-reentrant model
 33929 ;;
 33930                           
 33931                           	psect	text74
 33932   0082FC                     __ptext74:
 33933                           	callstack 0
 33934   0082FC                     _isConsumedEvent:
 33935                           	callstack 122
 33936                           
 33937                           ;incstack = 0
 33938                           ;isConsumedEvent@eventIndex stored from wreg
 33939   0082FC  6E01               	movwf	isConsumedEvent@eventIndex^(0+1280),c
 33940   0082FE                     
 33941                           ;../../VLCBlib_PIC/event_consumer_simple.c: 209:     return APP_isConsumedEvent(eventInd
      +                          ex);
 33942   0082FE  5001               	movf	isConsumedEvent@eventIndex^(0+1280),w,c
 33943   008300  ECA4  F041         	call	_APP_isConsumedEvent
 33944   008304  0012               	return		;funcret
 33945   008306                     __end_of_isConsumedEvent:
 33946                           	callstack 0
 33947                           
 33948 ;; *************** function _APP_isConsumedEvent *****************
 33949 ;; Defined at:
 33950 ;;		line 64 in file "../canargb_events.c"
 33951 ;; Parameters:    Size  Location     Type
 33952 ;;  tableIndex      1    wreg     unsigned char 
 33953 ;; Auto vars:     Size  Location     Type
 33954 ;;  tableIndex      1    0[COMRAM] unsigned char 
 33955 ;; Return value:  Size  Location     Type
 33956 ;;                  1    wreg      unsigned char 
 33957 ;; Registers used:
 33958 ;;		wreg
 33959 ;; Tracked objects:
 33960 ;;		On entry : 0/0
 33961 ;;		On exit  : 0/0
 33962 ;;		Unchanged: 0/0
 33963 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33968 ;;Total ram usage:        0 bytes
 33969 ;; Hardware stack levels used: 1
 33970 ;; Hardware stack levels required when called: 1
 33971 ;; This function calls:
 33972 ;;		Nothing
 33973 ;; This function is called by:
 33974 ;;		_isConsumedEvent
 33975 ;; This function uses a non-reentrant model
 33976 ;;
 33977                           
 33978                           	psect	text75
 33979   008348                     __ptext75:
 33980                           	callstack 0
 33981   008348                     _APP_isConsumedEvent:
 33982                           	callstack 122
 33983   008348                     
 33984                           ;../canargb_events.c: 65:     return TRUE;
 33985   008348  0E01               	movlw	1
 33986   00834A  0012               	return		;funcret
 33987   00834C                     __end_of_APP_isConsumedEvent:
 33988                           	callstack 0
 33989                           
 33990 ;; *************** function _findEvent *****************
 33991 ;; Defined at:
 33992 ;;		line 808 in file "../../VLCBlib_PIC/event_teach_simple.c"
 33993 ;; Parameters:    Size  Location     Type
 33994 ;;  nodeNumber      2   33[COMRAM] unsigned short 
 33995 ;;  eventNumber     2   35[COMRAM] unsigned short 
 33996 ;; Auto vars:     Size  Location     Type
 33997 ;;  en              2   41[COMRAM] unsigned short 
 33998 ;;  nn              2   39[COMRAM] unsigned short 
 33999 ;;  tableIndex      1   45[COMRAM] unsigned char 
 34000 ;;  chainIdx        1   44[COMRAM] unsigned char 
 34001 ;;  hash            1   43[COMRAM] unsigned char 
 34002 ;; Return value:  Size  Location     Type
 34003 ;;                  1    wreg      unsigned char 
 34004 ;; Registers used:
 34005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34006 ;; Tracked objects:
 34007 ;;		On entry : 0/0
 34008 ;;		On exit  : 0/0
 34009 ;;		Unchanged: 0/0
 34010 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34012 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34013 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34014 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34015 ;;Total ram usage:       13 bytes
 34016 ;; Hardware stack levels used: 1
 34017 ;; Hardware stack levels required when called: 4
 34018 ;; This function calls:
 34019 ;;		_getEN
 34020 ;;		_getHash
 34021 ;;		_getNN
 34022 ;; This function is called by:
 34023 ;;		_consumerProcessMessage
 34024 ;;		_doReqev
 34025 ;;		_removeEvent
 34026 ;;		_addEvent
 34027 ;; This function uses a non-reentrant model
 34028 ;;
 34029                           
 34030                           	psect	text76
 34031   0063E4                     __ptext76:
 34032                           	callstack 0
 34033   0063E4                     _findEvent:
 34034                           	callstack 119
 34035   0063E4                     
 34036                           ;../../VLCBlib_PIC/event_teach_simple.c: 810:     uint8_t hash = getHash(nodeNumber, eve
      +                          ntNumber);
 34037   0063E4  C522  F51C         	movff	findEvent@nodeNumber,getHash@nn
 34038   0063E8  C523  F51D         	movff	findEvent@nodeNumber+1,getHash@nn+1
 34039   0063EC  C524  F51E         	movff	findEvent@eventNumber,getHash@en
 34040   0063F0  C525  F51F         	movff	findEvent@eventNumber+1,getHash@en+1
 34041   0063F4  EC17  F041         	call	_getHash	;wreg free
 34042   0063F8  6E2C               	movwf	findEvent@hash^(0+1280),c
 34043   0063FA                     
 34044                           ;../../VLCBlib_PIC/event_teach_simple.c: 811:     uint8_t chainIdx;;../../VLCBlib_PIC/ev
      +                          ent_teach_simple.c: 812:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 34045   0063FA  6A2D               	clrf	findEvent@chainIdx^(0+1280),c
 34046   0063FC                     l7641:
 34047                           
 34048                           ;../../VLCBlib_PIC/event_teach_simple.c: 813:         uint8_t tableIndex = eventChains[h
      +                          ash][chainIdx];
 34049   0063FC  502C               	movf	findEvent@hash^(0+1280),w,c
 34050   0063FE  0D14               	mullw	20
 34051   006400  0EF9               	movlw	low _eventChains
 34052   006402  24F3               	addwf	243,w,c
 34053   006404  6E26               	movwf	??_findEvent^(0+1280),c
 34054   006406  0E0B               	movlw	high _eventChains
 34055   006408  20F4               	addwfc	prodh,w,c
 34056   00640A  6E27               	movwf	(??_findEvent+1)^(0+1280),c
 34057   00640C  502D               	movf	findEvent@chainIdx^(0+1280),w,c
 34058   00640E  2426               	addwf	??_findEvent^(0+1280),w,c
 34059   006410  6ED9               	movwf	fsr2l,c
 34060   006412  0E00               	movlw	0
 34061   006414  2027               	addwfc	(??_findEvent+1)^(0+1280),w,c
 34062   006416  6EDA               	movwf	fsr2h,c
 34063   006418  50DF               	movf	indf2,w,c
 34064   00641A  6E2E               	movwf	findEvent@tableIndex^(0+1280),c
 34065   00641C                     
 34066                           ;../../VLCBlib_PIC/event_teach_simple.c: 814:         uint16_t nn, en;;../../VLCBlib_PIC
      +                          /event_teach_simple.c: 815:         if (tableIndex == 0xff) return 0xff;
 34067   00641C  282E               	incf	findEvent@tableIndex^(0+1280),w,c
 34068   00641E  A4D8               	btfss	status,2,c
 34069   006420  EF14  F032         	goto	u5011
 34070   006424  EF16  F032         	goto	u5010
 34071   006428                     u5011:
 34072   006428  EF19  F032         	goto	l7649
 34073   00642C                     u5010:
 34074   00642C                     l7645:
 34075   00642C  0EFF               	movlw	255
 34076   00642E  EF4D  F032         	goto	l1105
 34077   006432                     l7649:
 34078                           
 34079                           ;../../VLCBlib_PIC/event_teach_simple.c: 816:         nn = getNN(tableIndex);
 34080   006432  502E               	movf	findEvent@tableIndex^(0+1280),w,c
 34081   006434  EC72  F029         	call	_getNN
 34082   006438  C50D  F528         	movff	?_getNN,findEvent@nn
 34083   00643C  C50E  F529         	movff	?_getNN+1,findEvent@nn+1
 34084                           
 34085                           ;../../VLCBlib_PIC/event_teach_simple.c: 817:         en = getEN(tableIndex);
 34086   006440  502E               	movf	findEvent@tableIndex^(0+1280),w,c
 34087   006442  ECA0  F033         	call	_getEN
 34088   006446  C50D  F52A         	movff	?_getEN,findEvent@en
 34089   00644A  C50E  F52B         	movff	?_getEN+1,findEvent@en+1
 34090   00644E                     
 34091                           ;../../VLCBlib_PIC/event_teach_simple.c: 818:         if ((nn == nodeNumber) && (en == e
      +                          ventNumber)) {
 34092   00644E  5022               	movf	findEvent@nodeNumber^(0+1280),w,c
 34093   006450  1828               	xorwf	findEvent@nn^(0+1280),w,c
 34094   006452  E107               	bnz	u5021
 34095   006454  5023               	movf	(findEvent@nodeNumber+1)^(0+1280),w,c
 34096   006456  1829               	xorwf	(findEvent@nn+1)^(0+1280),w,c
 34097   006458  A4D8               	btfss	status,2,c
 34098   00645A  EF31  F032         	goto	u5021
 34099   00645E  EF33  F032         	goto	u5020
 34100   006462                     u5021:
 34101   006462  EF42  F032         	goto	l7659
 34102   006466                     u5020:
 34103   006466  5024               	movf	findEvent@eventNumber^(0+1280),w,c
 34104   006468  182A               	xorwf	findEvent@en^(0+1280),w,c
 34105   00646A  E107               	bnz	u5031
 34106   00646C  5025               	movf	(findEvent@eventNumber+1)^(0+1280),w,c
 34107   00646E  182B               	xorwf	(findEvent@en+1)^(0+1280),w,c
 34108   006470  A4D8               	btfss	status,2,c
 34109   006472  EF3D  F032         	goto	u5031
 34110   006476  EF3F  F032         	goto	u5030
 34111   00647A                     u5031:
 34112   00647A  EF42  F032         	goto	l7659
 34113   00647E                     u5030:
 34114   00647E                     
 34115                           ;../../VLCBlib_PIC/event_teach_simple.c: 819:             return tableIndex;
 34116   00647E  502E               	movf	findEvent@tableIndex^(0+1280),w,c
 34117   006480  EF4D  F032         	goto	l1105
 34118   006484                     l7659:
 34119                           
 34120                           ;../../VLCBlib_PIC/event_teach_simple.c: 821:     }
 34121   006484  2A2D               	incf	findEvent@chainIdx^(0+1280),f,c
 34122   006486  0E13               	movlw	19
 34123   006488  642D               	cpfsgt	findEvent@chainIdx^(0+1280),c
 34124   00648A  EF49  F032         	goto	u5041
 34125   00648E  EF4B  F032         	goto	u5040
 34126   006492                     u5041:
 34127   006492  EFFE  F031         	goto	l7641
 34128   006496                     u5040:
 34129   006496  EF16  F032         	goto	l7645
 34130   00649A                     l1105:
 34131   00649A  0012               	return		;funcret
 34132   00649C                     __end_of_findEvent:
 34133                           	callstack 0
 34134                           
 34135 ;; *************** function _consumerEventCheckLen *****************
 34136 ;; Defined at:
 34137 ;;		line 248 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 34138 ;; Parameters:    Size  Location     Type
 34139 ;;  m               2   48[COMRAM] PTR struct Message
 34140 ;;		 -> poll@m(9), 
 34141 ;;  needed          1   50[COMRAM] unsigned char 
 34142 ;; Auto vars:     Size  Location     Type
 34143 ;;		None
 34144 ;; Return value:  Size  Location     Type
 34145 ;;                  1    wreg      enum E23340
 34146 ;; Registers used:
 34147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 34148 ;; Tracked objects:
 34149 ;;		On entry : 0/0
 34150 ;;		On exit  : 0/0
 34151 ;;		Unchanged: 0/0
 34152 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34153 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34156 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34157 ;;Total ram usage:        3 bytes
 34158 ;; Hardware stack levels used: 1
 34159 ;; Hardware stack levels required when called: 7
 34160 ;; This function calls:
 34161 ;;		_checkLen
 34162 ;; This function is called by:
 34163 ;;		_consumerProcessMessage
 34164 ;; This function uses a non-reentrant model
 34165 ;;
 34166                           
 34167                           	psect	text77
 34168   0082B4                     __ptext77:
 34169                           	callstack 0
 34170   0082B4                     _consumerEventCheckLen:
 34171                           	callstack 117
 34172   0082B4                     
 34173                           ;../../VLCBlib_PIC/event_consumer_simple.c: 249:     return checkLen(m, needed, SERVICE_
      +                          ID_CONSUMER);
 34174   0082B4  C531  F52C         	movff	consumerEventCheckLen@m,checkLen@m
 34175   0082B8  C532  F52D         	movff	consumerEventCheckLen@m+1,checkLen@m+1
 34176   0082BC  C533  F52E         	movff	consumerEventCheckLen@needed,checkLen@needed
 34177   0082C0  0E06               	movlw	6
 34178   0082C2  6E2F               	movwf	checkLen@service^(0+1280),c
 34179   0082C4  EC45  F034         	call	_checkLen	;wreg free
 34180   0082C8  0012               	return		;funcret
 34181   0082CA                     __end_of_consumerEventCheckLen:
 34182                           	callstack 0
 34183                           
 34184 ;; *************** function _checkLen *****************
 34185 ;; Defined at:
 34186 ;;		line 1108 in file "../../VLCBlib_PIC/vlcb.c"
 34187 ;; Parameters:    Size  Location     Type
 34188 ;;  m               2   43[COMRAM] PTR struct Message
 34189 ;;		 -> poll@m(9), 
 34190 ;;  needed          1   45[COMRAM] unsigned char 
 34191 ;;  service         1   46[COMRAM] unsigned char 
 34192 ;; Auto vars:     Size  Location     Type
 34193 ;;		None
 34194 ;; Return value:  Size  Location     Type
 34195 ;;                  1    wreg      enum E23340
 34196 ;; Registers used:
 34197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 34198 ;; Tracked objects:
 34199 ;;		On entry : 0/0
 34200 ;;		On exit  : 0/0
 34201 ;;		Unchanged: 0/0
 34202 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34203 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34205 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34206 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34207 ;;Total ram usage:        5 bytes
 34208 ;; Hardware stack levels used: 1
 34209 ;; Hardware stack levels required when called: 6
 34210 ;; This function calls:
 34211 ;;		_sendMessage5
 34212 ;; This function is called by:
 34213 ;;		_consumerEventCheckLen
 34214 ;;		_teachCheckLen
 34215 ;; This function uses a non-reentrant model
 34216 ;;
 34217                           
 34218                           	psect	text78
 34219   00688A                     __ptext78:
 34220                           	callstack 0
 34221   00688A                     _checkLen:
 34222                           	callstack 117
 34223   00688A                     
 34224                           ;../../VLCBlib_PIC/vlcb.c: 1109:     if (m->len < needed) {
 34225   00688A  C52C  F4D9         	movff	checkLen@m,fsr2l
 34226   00688E  C52D  F4DA         	movff	checkLen@m+1,fsr2h
 34227   006892  502E               	movf	checkLen@needed^(0+1280),w,c
 34228   006894  5CDE               	subwf	postinc2,w,c
 34229   006896  B0D8               	btfsc	status,0,c
 34230   006898  EF50  F034         	goto	u5501
 34231   00689C  EF52  F034         	goto	u5500
 34232   0068A0                     u5501:
 34233   0068A0  EF93  F034         	goto	l8089
 34234   0068A4                     u5500:
 34235   0068A4                     
 34236                           ;../../VLCBlib_PIC/vlcb.c: 1111:         if (m->len > 2) {
 34237   0068A4  C52C  F4D9         	movff	checkLen@m,fsr2l
 34238   0068A8  C52D  F4DA         	movff	checkLen@m+1,fsr2h
 34239   0068AC  0E02               	movlw	2
 34240   0068AE  64DF               	cpfsgt	indf2,c
 34241   0068B0  EF5C  F034         	goto	u5511
 34242   0068B4  EF5E  F034         	goto	u5510
 34243   0068B8                     u5511:
 34244   0068B8  EF90  F034         	goto	l8085
 34245   0068BC                     u5510:
 34246   0068BC                     
 34247                           ;../../VLCBlib_PIC/vlcb.c: 1112:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 34248   0068BC  EE20 F002          	lfsr	2,2
 34249   0068C0  502C               	movf	checkLen@m^(0+1280),w,c
 34250   0068C2  26D9               	addwf	fsr2l,f,c
 34251   0068C4  502D               	movf	(checkLen@m+1)^(0+1280),w,c
 34252   0068C6  22DA               	addwfc	fsr2h,f,c
 34253   0068C8  50DE               	movf	postinc2,w,c
 34254   0068CA  0105               	movlb	5	; () banked
 34255   0068CC  1990               	xorwf	(_nn+1)& (0+255),w,b
 34256   0068CE  A4D8               	btfss	status,2,c
 34257   0068D0  EF6C  F034         	goto	u5521
 34258   0068D4  EF6E  F034         	goto	u5520
 34259   0068D8                     u5521:
 34260   0068D8  EF90  F034         	goto	l8085
 34261   0068DC                     u5520:
 34262   0068DC                     
 34263                           ; BSR set to: 5
 34264   0068DC  EE20 F003          	lfsr	2,3
 34265   0068E0  502C               	movf	checkLen@m^(0+1280),w,c
 34266   0068E2  26D9               	addwf	fsr2l,f,c
 34267   0068E4  502D               	movf	(checkLen@m+1)^(0+1280),w,c
 34268   0068E6  22DA               	addwfc	fsr2h,f,c
 34269   0068E8  518F               	movf	_nn& (0+255),w,b
 34270   0068EA  18DE               	xorwf	postinc2,w,c
 34271   0068EC  A4D8               	btfss	status,2,c
 34272   0068EE  EF7B  F034         	goto	u5531
 34273   0068F2  EF7D  F034         	goto	u5530
 34274   0068F6                     u5531:
 34275   0068F6  EF90  F034         	goto	l8085
 34276   0068FA                     u5530:
 34277   0068FA                     
 34278                           ; BSR set to: 5
 34279                           ;../../VLCBlib_PIC/vlcb.c: 1113:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, (uint8_t)(m->opc), service, CMDERR_INV_CMD);
 34280   0068FA  C590  F526         	movff	_nn+1,sendMessage5@data1
 34281   0068FE  C58F  F527         	movff	_nn,sendMessage5@data2
 34282   006902  EE20 F001          	lfsr	2,1
 34283   006906  502C               	movf	checkLen@m^(0+1280),w,c
 34284   006908  26D9               	addwf	fsr2l,f,c
 34285   00690A  502D               	movf	(checkLen@m+1)^(0+1280),w,c
 34286   00690C  22DA               	addwfc	fsr2h,f,c
 34287   00690E  50DF               	movf	indf2,w,c
 34288   006910  6E28               	movwf	sendMessage5@data3^(0+1280),c
 34289   006912  C52F  F529         	movff	checkLen@service,sendMessage5@data4
 34290   006916  0E01               	movlw	1
 34291   006918  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 34292   00691A  0EAF               	movlw	175
 34293   00691C  EC96  F040         	call	_sendMessage5
 34294   006920                     l8085:
 34295                           
 34296                           ;../../VLCBlib_PIC/vlcb.c: 1117:         return PROCESSED;
 34297   006920  0E01               	movlw	1
 34298   006922  EF94  F034         	goto	l2032
 34299   006926                     l8089:
 34300                           
 34301                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return NOT_PROCESSED;
 34302   006926  0E00               	movlw	0
 34303   006928                     l2032:
 34304   006928  0012               	return		;funcret
 34305   00692A                     __end_of_checkLen:
 34306                           	callstack 0
 34307                           
 34308 ;; *************** function _APP_processConsumedEvent *****************
 34309 ;; Defined at:
 34310 ;;		line 105 in file "../canargb_events.c"
 34311 ;; Parameters:    Size  Location     Type
 34312 ;;  tableIndex      1    wreg     unsigned char 
 34313 ;;  m               2   27[COMRAM] PTR struct Message
 34314 ;;		 -> poll@m(9), 
 34315 ;; Auto vars:     Size  Location     Type
 34316 ;;  tableIndex      1   29[COMRAM] unsigned char 
 34317 ;;  colourPixelI    1   34[COMRAM] struct PaletteIndex
 34318 ;;  end_ledno       1   33[COMRAM] unsigned char 
 34319 ;;  start_ledno     1   32[COMRAM] unsigned char 
 34320 ;;  action          1   31[COMRAM] unsigned char 
 34321 ;;  ev              1   35[COMRAM] unsigned char 
 34322 ;;  onOff           1   30[COMRAM] unsigned char 
 34323 ;; Return value:  Size  Location     Type
 34324 ;;                  1    wreg      enum E23290
 34325 ;; Registers used:
 34326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34327 ;; Tracked objects:
 34328 ;;		On entry : 0/0
 34329 ;;		On exit  : 0/0
 34330 ;;		Unchanged: 0/0
 34331 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34333 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34335 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34336 ;;Total ram usage:        9 bytes
 34337 ;; Hardware stack levels used: 1
 34338 ;; Hardware stack levels required when called: 4
 34339 ;; This function calls:
 34340 ;;		_getEVs
 34341 ;;		_updateLedRange
 34342 ;;		_updateRGB
 34343 ;; This function is called by:
 34344 ;;		_consumerProcessMessage
 34345 ;; This function uses a non-reentrant model
 34346 ;;
 34347                           
 34348                           	psect	text79
 34349   005A1C                     __ptext79:
 34350                           	callstack 0
 34351   005A1C                     _APP_processConsumedEvent:
 34352                           	callstack 120
 34353                           
 34354                           ;incstack = 0
 34355                           ;APP_processConsumedEvent@tableIndex stored from wreg
 34356   005A1C  6E1E               	movwf	APP_processConsumedEvent@tableIndex^(0+1280),c
 34357   005A1E                     
 34358                           ;../canargb_events.c: 106:     uint8_t ev;;../canargb_events.c: 107:     uint8_t onOff;;
      +                          ../canargb_events.c: 109:     onOff = !(m->opc & 1);
 34359   005A1E  EE20 F001          	lfsr	2,1
 34360   005A22  501C               	movf	APP_processConsumedEvent@m^(0+1280),w,c
 34361   005A24  26D9               	addwf	fsr2l,f,c
 34362   005A26  501D               	movf	(APP_processConsumedEvent@m+1)^(0+1280),w,c
 34363   005A28  22DA               	addwfc	fsr2h,f,c
 34364   005A2A  A0DF               	btfss	indf2,0,c
 34365   005A2C  EF1A  F02D         	goto	u5731
 34366   005A30  EF1D  F02D         	goto	u5730
 34367   005A34                     u5731:
 34368   005A34  0E01               	movlw	1
 34369   005A36  EF1E  F02D         	goto	u5740
 34370   005A3A                     u5730:
 34371   005A3A  0E00               	movlw	0
 34372   005A3C                     u5740:
 34373   005A3C  6E1F               	movwf	APP_processConsumedEvent@onOff^(0+1280),c
 34374   005A3E                     
 34375                           ;../canargb_events.c: 110:     if (getEVs(tableIndex)) {
 34376   005A3E  501E               	movf	APP_processConsumedEvent@tableIndex^(0+1280),w,c
 34377   005A40  EC33  F035         	call	_getEVs
 34378   005A44  0900               	iorlw	0
 34379   005A46  B4D8               	btfsc	status,2,c
 34380   005A48  EF28  F02D         	goto	u5751
 34381   005A4C  EF2A  F02D         	goto	u5750
 34382   005A50                     u5751:
 34383   005A50  EF2D  F02D         	goto	l112
 34384   005A54                     u5750:
 34385   005A54                     l8435:
 34386                           
 34387                           ;../canargb_events.c: 112:         return PROCESSED;
 34388   005A54  0E01               	movlw	1
 34389   005A56  EF88  F02D         	goto	l113
 34390   005A5A                     l112:
 34391                           
 34392                           ;../canargb_events.c: 115:     for(ev=0; ev<248; ev+=4) {
 34393   005A5A  6A24               	clrf	APP_processConsumedEvent@ev^(0+1280),c
 34394   005A5C                     l8443:
 34395                           
 34396                           ;../canargb_events.c: 116:         uint8_t action;;../canargb_events.c: 117:         uin
      +                          t8_t start_ledno;;../canargb_events.c: 118:         uint8_t end_ledno;;../canargb_events
      +                          .c: 119:         PaletteIndex colourPixelIndexPair;;../canargb_events.c: 121:         ac
      +                          tion = evs[ev];
 34397   005A5C  0E00               	movlw	low _evs
 34398   005A5E  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34399   005A60  6ED9               	movwf	fsr2l,c
 34400   005A62  6ADA               	clrf	fsr2h,c
 34401   005A64  0E08               	movlw	high _evs
 34402   005A66  22DA               	addwfc	fsr2h,f,c
 34403   005A68  50DF               	movf	indf2,w,c
 34404   005A6A  6E20               	movwf	APP_processConsumedEvent@action^(0+1280),c
 34405                           
 34406                           ;../canargb_events.c: 122:         start_ledno = evs[ev+1];
 34407   005A6C  0E01               	movlw	low (_evs+1)
 34408   005A6E  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34409   005A70  6ED9               	movwf	fsr2l,c
 34410   005A72  6ADA               	clrf	fsr2h,c
 34411   005A74  0E08               	movlw	high (_evs+1)
 34412   005A76  22DA               	addwfc	fsr2h,f,c
 34413   005A78  50DF               	movf	indf2,w,c
 34414   005A7A  6E21               	movwf	APP_processConsumedEvent@start_ledno^(0+1280),c
 34415                           
 34416                           ;../canargb_events.c: 123:         end_ledno = evs[ev+2];
 34417   005A7C  0E02               	movlw	low (_evs+2)
 34418   005A7E  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34419   005A80  6ED9               	movwf	fsr2l,c
 34420   005A82  6ADA               	clrf	fsr2h,c
 34421   005A84  0E08               	movlw	high (_evs+2)
 34422   005A86  22DA               	addwfc	fsr2h,f,c
 34423   005A88  50DF               	movf	indf2,w,c
 34424   005A8A  6E22               	movwf	APP_processConsumedEvent@end_ledno^(0+1280),c
 34425                           
 34426                           ;../canargb_events.c: 124:         colourPixelIndexPair.asByte = evs[ev+3];
 34427   005A8C  0E03               	movlw	low (_evs+3)
 34428   005A8E  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34429   005A90  6ED9               	movwf	fsr2l,c
 34430   005A92  6ADA               	clrf	fsr2h,c
 34431   005A94  0E08               	movlw	high (_evs+3)
 34432   005A96  22DA               	addwfc	fsr2h,f,c
 34433   005A98  50DF               	movf	indf2,w,c
 34434   005A9A  6E23               	movwf	APP_processConsumedEvent@colourPixelIndexPair^(0+1280),c
 34435   005A9C                     
 34436                           ;../canargb_events.c: 126:         if (onOff && (action & 0x01)) {
 34437   005A9C  501F               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 34438   005A9E  B4D8               	btfsc	status,2,c
 34439   005AA0  EF54  F02D         	goto	u5761
 34440   005AA4  EF56  F02D         	goto	u5760
 34441   005AA8                     u5761:
 34442   005AA8  EF64  F02D         	goto	l8451
 34443   005AAC                     u5760:
 34444   005AAC  A020               	btfss	APP_processConsumedEvent@action^(0+1280),0,c
 34445   005AAE  EF5B  F02D         	goto	u5771
 34446   005AB2  EF5D  F02D         	goto	u5770
 34447   005AB6                     u5771:
 34448   005AB6  EF64  F02D         	goto	l8451
 34449   005ABA                     u5770:
 34450   005ABA                     
 34451                           ;../canargb_events.c: 127:             updateLedRange(start_ledno, end_ledno, colourPixe
      +                          lIndexPair);
 34452   005ABA  C522  F501         	movff	APP_processConsumedEvent@end_ledno,updateLedRange@end_ledno
 34453   005ABE  C523  F502         	movff	APP_processConsumedEvent@colourPixelIndexPair,updateLedRange@colourIndexPair
 34454   005AC2  5021               	movf	APP_processConsumedEvent@start_ledno^(0+1280),w,c
 34455   005AC4  EC82  F03E         	call	_updateLedRange
 34456   005AC8                     l8451:
 34457                           
 34458                           ;../canargb_events.c: 129:         if (!onOff && (action & 0x02)) {
 34459   005AC8  501F               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 34460   005ACA  A4D8               	btfss	status,2,c
 34461   005ACC  EF6A  F02D         	goto	u5781
 34462   005AD0  EF6C  F02D         	goto	u5780
 34463   005AD4                     u5781:
 34464   005AD4  EF7A  F02D         	goto	l8457
 34465   005AD8                     u5780:
 34466   005AD8  A220               	btfss	APP_processConsumedEvent@action^(0+1280),1,c
 34467   005ADA  EF71  F02D         	goto	u5791
 34468   005ADE  EF73  F02D         	goto	u5790
 34469   005AE2                     u5791:
 34470   005AE2  EF7A  F02D         	goto	l8457
 34471   005AE6                     u5790:
 34472   005AE6                     
 34473                           ;../canargb_events.c: 130:             updateLedRange(start_ledno, end_ledno, colourPixe
      +                          lIndexPair);
 34474   005AE6  C522  F501         	movff	APP_processConsumedEvent@end_ledno,updateLedRange@end_ledno
 34475   005AEA  C523  F502         	movff	APP_processConsumedEvent@colourPixelIndexPair,updateLedRange@colourIndexPair
 34476   005AEE  5021               	movf	APP_processConsumedEvent@start_ledno^(0+1280),w,c
 34477   005AF0  EC82  F03E         	call	_updateLedRange
 34478   005AF4                     l8457:
 34479                           
 34480                           ;../canargb_events.c: 132:     }
 34481   005AF4  0E04               	movlw	4
 34482   005AF6  2624               	addwf	APP_processConsumedEvent@ev^(0+1280),f,c
 34483   005AF8  0EF7               	movlw	247
 34484   005AFA  6424               	cpfsgt	APP_processConsumedEvent@ev^(0+1280),c
 34485   005AFC  EF82  F02D         	goto	u5801
 34486   005B00  EF84  F02D         	goto	u5800
 34487   005B04                     u5801:
 34488   005B04  EF2E  F02D         	goto	l8443
 34489   005B08                     u5800:
 34490   005B08                     
 34491                           ;../canargb_events.c: 133:     updateRGB();
 34492   005B08  EC87  F041         	call	_updateRGB	;wreg free
 34493   005B0C  EF2A  F02D         	goto	l8435
 34494   005B10                     l113:
 34495   005B10  0012               	return		;funcret
 34496   005B12                     __end_of_APP_processConsumedEvent:
 34497                           	callstack 0
 34498                           
 34499 ;; *************** function _updateRGB *****************
 34500 ;; Defined at:
 34501 ;;		line 274 in file "../canargb_leds.c"
 34502 ;; Parameters:    Size  Location     Type
 34503 ;;		None
 34504 ;; Auto vars:     Size  Location     Type
 34505 ;;		None
 34506 ;; Return value:  Size  Location     Type
 34507 ;;                  1    wreg      void 
 34508 ;; Registers used:
 34509 ;;		wreg, status,2
 34510 ;; Tracked objects:
 34511 ;;		On entry : 0/0
 34512 ;;		On exit  : 0/0
 34513 ;;		Unchanged: 0/0
 34514 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34519 ;;Total ram usage:        0 bytes
 34520 ;; Hardware stack levels used: 1
 34521 ;; Hardware stack levels required when called: 1
 34522 ;; This function calls:
 34523 ;;		Nothing
 34524 ;; This function is called by:
 34525 ;;		_APP_processConsumedEvent
 34526 ;; This function uses a non-reentrant model
 34527 ;;
 34528                           
 34529                           	psect	text80
 34530   00830E                     __ptext80:
 34531                           	callstack 0
 34532   00830E                     _updateRGB:
 34533                           	callstack 122
 34534   00830E                     
 34535                           ;../canargb_leds.c: 275:     refreshRequired = 1;
 34536   00830E  0E01               	movlw	1
 34537   008310  0105               	movlb	5	; () banked
 34538   008312  6FAB               	movwf	_refreshRequired& (0+255),b
 34539   008314                     
 34540                           ; BSR set to: 5
 34541   008314  0012               	return		;funcret
 34542   008316                     __end_of_updateRGB:
 34543                           	callstack 0
 34544                           
 34545 ;; *************** function _getEVs *****************
 34546 ;; Defined at:
 34547 ;;		line 895 in file "../../VLCBlib_PIC/event_teach_simple.c"
 34548 ;; Parameters:    Size  Location     Type
 34549 ;;  tableIndex      1    wreg     unsigned char 
 34550 ;; Auto vars:     Size  Location     Type
 34551 ;;  tableIndex      1   25[COMRAM] unsigned char 
 34552 ;;  evIdx           1   26[COMRAM] unsigned char 
 34553 ;; Return value:  Size  Location     Type
 34554 ;;                  1    wreg      unsigned char 
 34555 ;; Registers used:
 34556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34557 ;; Tracked objects:
 34558 ;;		On entry : 0/0
 34559 ;;		On exit  : 0/0
 34560 ;;		Unchanged: 0/0
 34561 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34563 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34564 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34565 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34566 ;;Total ram usage:       15 bytes
 34567 ;; Hardware stack levels used: 1
 34568 ;; Hardware stack levels required when called: 3
 34569 ;; This function calls:
 34570 ;;		_readNVM
 34571 ;; This function is called by:
 34572 ;;		_APP_processConsumedEvent
 34573 ;; This function uses a non-reentrant model
 34574 ;;
 34575                           
 34576                           	psect	text81
 34577   006A66                     __ptext81:
 34578                           	callstack 0
 34579   006A66                     _getEVs:
 34580                           	callstack 120
 34581                           
 34582                           ; BSR set to: 5
 34583                           ;incstack = 0
 34584                           ;getEVs@tableIndex stored from wreg
 34585   006A66  6E1A               	movwf	getEVs@tableIndex^(0+1280),c
 34586   006A68                     
 34587                           ;../../VLCBlib_PIC/event_teach_simple.c: 897:     uint8_t evIdx;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 898:     if (tableIndex >= 255) {
 34588   006A68  281A               	incf	getEVs@tableIndex^(0+1280),w,c
 34589   006A6A  A4D8               	btfss	status,2,c
 34590   006A6C  EF3A  F035         	goto	u5401
 34591   006A70  EF3C  F035         	goto	u5400
 34592   006A74                     u5401:
 34593   006A74  EF3F  F035         	goto	l1124
 34594   006A78                     u5400:
 34595   006A78                     
 34596                           ;../../VLCBlib_PIC/event_teach_simple.c: 899:         return CMDERR_INV_EN_IDX;
 34597   006A78  0E08               	movlw	8
 34598   006A7A  EF80  F035         	goto	l1125
 34599   006A7E                     l1124:
 34600                           
 34601                           ;../../VLCBlib_PIC/event_teach_simple.c: 902:     for (evIdx=0; evIdx < 252; evIdx++) {
 34602   006A7E  6A1B               	clrf	getEVs@evIdx^(0+1280),c
 34603   006A80                     l7959:
 34604                           
 34605                           ;../../VLCBlib_PIC/event_teach_simple.c: 903:         evs[evIdx] = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+5 +evIdx);
 34606   006A80  501B               	movf	getEVs@evIdx^(0+1280),w,c
 34607   006A82  6E0D               	movwf	??_getEVs^(0+1280),c
 34608   006A84  6A0E               	clrf	(??_getEVs+1)^(0+1280),c
 34609   006A86  6A0F               	clrf	(??_getEVs+2)^(0+1280),c
 34610   006A88  501A               	movf	getEVs@tableIndex^(0+1280),w,c
 34611   006A8A  6E10               	movwf	(??_getEVs+3)^(0+1280),c
 34612   006A8C  6A11               	clrf	(??_getEVs+4)^(0+1280),c
 34613   006A8E  0E01               	movlw	1
 34614   006A90  0210               	mulwf	(??_getEVs+3)^(0+1280),c
 34615   006A92  C4F3 F512          	movff	prodl,??_getEVs+5
 34616   006A96  C4F4 F513          	movff	prodh,??_getEVs+6
 34617   006A9A  0211               	mulwf	(??_getEVs+4)^(0+1280),c
 34618   006A9C  50F3               	movf	prodl,w,c
 34619   006A9E  2613               	addwf	(??_getEVs+6)^(0+1280),f,c
 34620   006AA0  0E01               	movlw	1
 34621   006AA2  0210               	mulwf	(??_getEVs+3)^(0+1280),c
 34622   006AA4  50F3               	movf	prodl,w,c
 34623   006AA6  2613               	addwf	(??_getEVs+6)^(0+1280),f,c
 34624   006AA8  C512  F514         	movff	??_getEVs+5,??_getEVs+7
 34625   006AAC  C513  F515         	movff	??_getEVs+6,??_getEVs+8
 34626   006AB0  6A16               	clrf	(??_getEVs+9)^(0+1280),c
 34627   006AB2  500D               	movf	??_getEVs^(0+1280),w,c
 34628   006AB4  2414               	addwf	(??_getEVs+7)^(0+1280),w,c
 34629   006AB6  6E17               	movwf	(??_getEVs+10)^(0+1280),c
 34630   006AB8  500E               	movf	(??_getEVs+1)^(0+1280),w,c
 34631   006ABA  2015               	addwfc	(??_getEVs+8)^(0+1280),w,c
 34632   006ABC  6E18               	movwf	(??_getEVs+11)^(0+1280),c
 34633   006ABE  500F               	movf	(??_getEVs+2)^(0+1280),w,c
 34634   006AC0  2016               	addwfc	(??_getEVs+9)^(0+1280),w,c
 34635   006AC2  6E19               	movwf	(??_getEVs+12)^(0+1280),c
 34636   006AC4  0E05               	movlw	5
 34637   006AC6  2417               	addwf	(??_getEVs+10)^(0+1280),w,c
 34638   006AC8  6E07               	movwf	readNVM@index^(0+1280),c
 34639   006ACA  0E00               	movlw	0
 34640   006ACC  2018               	addwfc	(??_getEVs+11)^(0+1280),w,c
 34641   006ACE  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 34642   006AD0  0E01               	movlw	1
 34643   006AD2  2019               	addwfc	(??_getEVs+12)^(0+1280),w,c
 34644   006AD4  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 34645   006AD6  0E01               	movlw	1
 34646   006AD8  EC6C  F03A         	call	_readNVM
 34647   006ADC  0E00               	movlw	low _evs
 34648   006ADE  241B               	addwf	getEVs@evIdx^(0+1280),w,c
 34649   006AE0  6ED9               	movwf	fsr2l,c
 34650   006AE2  6ADA               	clrf	fsr2h,c
 34651   006AE4  0E08               	movlw	high _evs
 34652   006AE6  22DA               	addwfc	fsr2h,f,c
 34653   006AE8  C507  F4DF         	movff	?_readNVM,indf2
 34654   006AEC                     
 34655                           ;../../VLCBlib_PIC/event_teach_simple.c: 904:     }
 34656   006AEC  2A1B               	incf	getEVs@evIdx^(0+1280),f,c
 34657   006AEE  0EFB               	movlw	251
 34658   006AF0  641B               	cpfsgt	getEVs@evIdx^(0+1280),c
 34659   006AF2  EF7D  F035         	goto	u5411
 34660   006AF6  EF7F  F035         	goto	u5410
 34661   006AFA                     u5411:
 34662   006AFA  EF40  F035         	goto	l7959
 34663   006AFE                     u5410:
 34664   006AFE                     
 34665                           ;../../VLCBlib_PIC/event_teach_simple.c: 905:     return 0;
 34666   006AFE  0E00               	movlw	0
 34667   006B00                     l1125:
 34668   006B00  0012               	return		;funcret
 34669   006B02                     __end_of_getEVs:
 34670                           	callstack 0
 34671                           
 34672 ;; *************** function _canReceiveMessage *****************
 34673 ;; Defined at:
 34674 ;;		line 700 in file "../../VLCBlib_PIC/can18_can_2.c"
 34675 ;; Parameters:    Size  Location     Type
 34676 ;;  m               2   15[COMRAM] PTR struct Message
 34677 ;;		 -> poll@m(9), 
 34678 ;; Auto vars:     Size  Location     Type
 34679 ;;  rxFifoObj       2   23[COMRAM] PTR unsigned char 
 34680 ;;		 -> RAM(16383), 
 34681 ;;  temp            2   21[COMRAM] unsigned short 
 34682 ;;  mp              2   19[COMRAM] PTR struct Message
 34683 ;;		 -> rxBuffers(72), NULL(0), 
 34684 ;;  incomingCanI    1   18[COMRAM] unsigned char 
 34685 ;; Return value:  Size  Location     Type
 34686 ;;                  1    wreg      enum E23614
 34687 ;; Registers used:
 34688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34689 ;; Tracked objects:
 34690 ;;		On entry : 0/0
 34691 ;;		On exit  : 0/0
 34692 ;;		Unchanged: 0/0
 34693 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34695 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34696 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34697 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34698 ;;Total ram usage:       10 bytes
 34699 ;; Hardware stack levels used: 1
 34700 ;; Hardware stack levels required when called: 3
 34701 ;; This function calls:
 34702 ;;		_getNumRxBuffersInUse
 34703 ;;		_handleSelfEnumeration
 34704 ;;		_memcpy
 34705 ;;		_pop
 34706 ;; This function is called by:
 34707 ;;		_poll
 34708 ;; This function uses a non-reentrant model
 34709 ;;
 34710                           
 34711                           	psect	text82
 34712   00423E                     __ptext82:
 34713                           	callstack 0
 34714   00423E                     _canReceiveMessage:
 34715                           	callstack 122
 34716   00423E                     
 34717                           ;../../VLCBlib_PIC/can18_can_2.c: 701:     Message * mp;;../../VLCBlib_PIC/can18_can_2.c
      +                          : 702:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18_can_2.c: 703:     uint8_t* rxF
      +                          ifoObj;;../../VLCBlib_PIC/can18_can_2.c: 705:     uint16_t temp;;../../VLCBlib_PIC/can18
      +                          _can_2.c: 709:     mp = pop(&rxQueue);
 34718   00423E  0EC7               	movlw	low _rxQueue
 34719   004240  6E01               	movwf	pop@q^(0+1280),c
 34720   004242  0E05               	movlw	high _rxQueue
 34721   004244  6E02               	movwf	(pop@q+1)^(0+1280),c
 34722   004246  EC35  F031         	call	_pop	;wreg free
 34723   00424A  C501  F514         	movff	?_pop,canReceiveMessage@mp
 34724   00424E  C502  F515         	movff	?_pop+1,canReceiveMessage@mp+1
 34725   004252                     
 34726                           ;../../VLCBlib_PIC/can18_can_2.c: 710:     if (mp != ((void*)0)) {
 34727   004252  5014               	movf	canReceiveMessage@mp^(0+1280),w,c
 34728   004254  1015               	iorwf	(canReceiveMessage@mp+1)^(0+1280),w,c
 34729   004256  B4D8               	btfsc	status,2,c
 34730   004258  EF30  F021         	goto	u6861
 34731   00425C  EF32  F021         	goto	u6860
 34732   004260                     u6861:
 34733   004260  EF43  F021         	goto	l669
 34734   004264                     u6860:
 34735   004264                     
 34736                           ;../../VLCBlib_PIC/can18_can_2.c: 711:         memcpy(m, mp, sizeof(Message));
 34737   004264  C510  F501         	movff	canReceiveMessage@m,memcpy@d1
 34738   004268  C511  F502         	movff	canReceiveMessage@m+1,memcpy@d1+1
 34739   00426C  C514  F503         	movff	canReceiveMessage@mp,memcpy@s1
 34740   004270  C515  F504         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 34741   004274  0E00               	movlw	0
 34742   004276  6E06               	movwf	(memcpy@n+1)^(0+1280),c
 34743   004278  0E09               	movlw	9
 34744   00427A  6E05               	movwf	memcpy@n^(0+1280),c
 34745   00427C  EC7F  F03D         	call	_memcpy	;wreg free
 34746   004280                     l9611:
 34747                           
 34748                           ;../../VLCBlib_PIC/can18_can_2.c: 712:         return RECEIVED;
 34749   004280  0E01               	movlw	1
 34750   004282  EF19  F022         	goto	l670
 34751   004286                     l669:
 34752                           
 34753                           ;../../VLCBlib_PIC/can18_can_2.c: 714:         if (! C1FIFOSTA3Lbits.TFNRFNIF) {
 34754   004286  0101               	movlb	1	; () banked
 34755   004288  B178               	btfsc	120,0,b	;volatile
 34756   00428A  EF49  F021         	goto	u6871
 34757   00428E  EF4B  F021         	goto	u6870
 34758   004292                     u6871:
 34759   004292  EF4E  F021         	goto	l9621
 34760   004296                     u6870:
 34761   004296                     l9617:
 34762                           
 34763                           ; BSR set to: 1
 34764                           ;../../VLCBlib_PIC/can18_can_2.c: 716:             return NOT_RECEIVED;
 34765   004296  0E00               	movlw	0
 34766   004298  EF19  F022         	goto	l670
 34767   00429C                     l9621:
 34768                           
 34769                           ; BSR set to: 1
 34770                           ;../../VLCBlib_PIC/can18_can_2.c: 720:         temp = getNumRxBuffersInUse();
 34771   00429C  EC32  F03A         	call	_getNumRxBuffersInUse	;wreg free
 34772   0042A0  6E12               	movwf	??_canReceiveMessage^(0+1280),c
 34773   0042A2  5012               	movf	??_canReceiveMessage^(0+1280),w,c
 34774   0042A4  6E16               	movwf	canReceiveMessage@temp^(0+1280),c
 34775   0042A6  6A17               	clrf	(canReceiveMessage@temp+1)^(0+1280),c
 34776   0042A8                     
 34777                           ;../../VLCBlib_PIC/can18_can_2.c: 721:         if (temp > canDiagnostics[0x12].asUint) {
 34778   0042A8  5016               	movf	canReceiveMessage@temp^(0+1280),w,c
 34779   0042AA  0106               	movlb	6	; () banked
 34780   0042AC  5DB2               	subwf	(_canDiagnostics+36)& (0+255),w,b
 34781   0042AE  5017               	movf	(canReceiveMessage@temp+1)^(0+1280),w,c
 34782   0042B0  59B3               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 34783   0042B2  B0D8               	btfsc	status,0,c
 34784   0042B4  EF5E  F021         	goto	u6881
 34785   0042B8  EF60  F021         	goto	u6880
 34786   0042BC                     u6881:
 34787   0042BC  EF64  F021         	goto	l9627
 34788   0042C0                     u6880:
 34789   0042C0                     
 34790                           ; BSR set to: 6
 34791                           ;../../VLCBlib_PIC/can18_can_2.c: 722:             canDiagnostics[0x12].asUint = temp;
 34792   0042C0  C516  F6B2         	movff	canReceiveMessage@temp,_canDiagnostics+36
 34793   0042C4  C517  F6B3         	movff	canReceiveMessage@temp+1,_canDiagnostics+37
 34794   0042C8                     l9627:
 34795                           
 34796                           ; BSR set to: 6
 34797                           ;../../VLCBlib_PIC/can18_can_2.c: 726:         rxFifoObj = (uint8_t*) C1FIFOUA3;
 34798   0042C8  C17C F518          	movff	380,canReceiveMessage@rxFifoObj	;volatile
 34799   0042CC  C17D F519          	movff	381,canReceiveMessage@rxFifoObj+1	;volatile
 34800   0042D0                     
 34801                           ; BSR set to: 6
 34802                           ;../../VLCBlib_PIC/can18_can_2.c: 727:         incomingCanId = rxFifoObj[0] & 0x7F;
 34803   0042D0  C518  F4D9         	movff	canReceiveMessage@rxFifoObj,fsr2l
 34804   0042D4  C519  F4DA         	movff	canReceiveMessage@rxFifoObj+1,fsr2h
 34805   0042D8  50DF               	movf	indf2,w,c
 34806   0042DA  0B7F               	andlw	127
 34807   0042DC  6E13               	movwf	canReceiveMessage@incomingCanId^(0+1280),c
 34808   0042DE                     
 34809                           ; BSR set to: 6
 34810                           ;../../VLCBlib_PIC/can18_can_2.c: 728:         handleSelfEnumeration(incomingCanId);
 34811   0042DE  5013               	movf	canReceiveMessage@incomingCanId^(0+1280),w,c
 34812   0042E0  ECA5  F032         	call	_handleSelfEnumeration
 34813   0042E4                     
 34814                           ;../../VLCBlib_PIC/can18_can_2.c: 731:         canDiagnostics[0x09].asUint++;
 34815   0042E4  0106               	movlb	6	; () banked
 34816   0042E6  4BA0               	infsnz	(_canDiagnostics+18)& (0+255),f,b
 34817   0042E8  2BA1               	incf	(_canDiagnostics+19)& (0+255),f,b
 34818   0042EA                     
 34819                           ; BSR set to: 6
 34820                           ;../../VLCBlib_PIC/can18_can_2.c: 734:         if (rxFifoObj[4] & 0x20) {
 34821   0042EA  EE20 F004          	lfsr	2,4
 34822   0042EE  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34823   0042F0  26D9               	addwf	fsr2l,f,c
 34824   0042F2  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34825   0042F4  22DA               	addwfc	fsr2h,f,c
 34826   0042F6  AADF               	btfss	indf2,5,c
 34827   0042F8  EF80  F021         	goto	u6891
 34828   0042FC  EF82  F021         	goto	u6890
 34829   004300                     u6891:
 34830   004300  EF88  F021         	goto	l9645
 34831   004304                     u6890:
 34832   004304                     
 34833                           ; BSR set to: 6
 34834                           ;../../VLCBlib_PIC/can18_can_2.c: 736:             C1FIFOCON1H |= (0x2 | 0x1);
 34835   004304  0E03               	movlw	3
 34836   004306  0101               	movlb	1	; () banked
 34837   004308  135D               	iorwf	93,f,b	;volatile
 34838   00430A                     
 34839                           ; BSR set to: 1
 34840                           ;../../VLCBlib_PIC/can18_can_2.c: 737:             C1FIFOCON3Hbits.UINC = 1;
 34841   00430A  8175               	bsf	117,0,b	;volatile
 34842   00430C  EF4B  F021         	goto	l9617
 34843   004310                     l9645:
 34844                           
 34845                           ; BSR set to: 6
 34846                           ;../../VLCBlib_PIC/can18_can_2.c: 740:         m->len = (rxFifoObj[4] & 0x0F);
 34847   004310  EE20 F004          	lfsr	2,4
 34848   004314  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34849   004316  26D9               	addwf	fsr2l,f,c
 34850   004318  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34851   00431A  22DA               	addwfc	fsr2h,f,c
 34852   00431C  50DF               	movf	indf2,w,c
 34853   00431E  0B0F               	andlw	15
 34854   004320  C510  F4D9         	movff	canReceiveMessage@m,fsr2l
 34855   004324  C511  F4DA         	movff	canReceiveMessage@m+1,fsr2h
 34856   004328  6EDF               	movwf	indf2,c
 34857   00432A                     
 34858                           ; BSR set to: 6
 34859                           ;../../VLCBlib_PIC/can18_can_2.c: 741:         if (m->len == 0) {
 34860   00432A  C510  F4D9         	movff	canReceiveMessage@m,fsr2l
 34861   00432E  C511  F4DA         	movff	canReceiveMessage@m+1,fsr2h
 34862   004332  50DF               	movf	indf2,w,c
 34863   004334  A4D8               	btfss	status,2,c
 34864   004336  EF9F  F021         	goto	u6901
 34865   00433A  EFA1  F021         	goto	u6900
 34866   00433E                     u6901:
 34867   00433E  EFA5  F021         	goto	l9655
 34868   004342                     u6900:
 34869   004342                     
 34870                           ; BSR set to: 6
 34871                           ;../../VLCBlib_PIC/can18_can_2.c: 743:             C1FIFOCON3Hbits.UINC = 1;
 34872   004342  0101               	movlb	1	; () banked
 34873   004344  8175               	bsf	117,0,b	;volatile
 34874   004346  EF4B  F021         	goto	l9617
 34875   00434A                     l9655:
 34876                           
 34877                           ; BSR set to: 6
 34878                           ;../../VLCBlib_PIC/can18_can_2.c: 746:         m->opc = rxFifoObj[8];
 34879   00434A  EE20 F008          	lfsr	2,8
 34880   00434E  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34881   004350  26D9               	addwf	fsr2l,f,c
 34882   004352  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34883   004354  22DA               	addwfc	fsr2h,f,c
 34884   004356  EE10 F001          	lfsr	1,1
 34885   00435A  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34886   00435C  26E1               	addwf	fsr1l,f,c
 34887   00435E  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34888   004360  22E2               	addwfc	fsr1h,f,c
 34889   004362  C4DF F4E7          	movff	indf2,indf1
 34890                           
 34891                           ;../../VLCBlib_PIC/can18_can_2.c: 747:         m->bytes[0] = rxFifoObj[9];
 34892   004366  EE20 F009          	lfsr	2,9
 34893   00436A  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34894   00436C  26D9               	addwf	fsr2l,f,c
 34895   00436E  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34896   004370  22DA               	addwfc	fsr2h,f,c
 34897   004372  EE10 F002          	lfsr	1,2
 34898   004376  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34899   004378  26E1               	addwf	fsr1l,f,c
 34900   00437A  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34901   00437C  22E2               	addwfc	fsr1h,f,c
 34902   00437E  C4DF F4E7          	movff	indf2,indf1
 34903                           
 34904                           ;../../VLCBlib_PIC/can18_can_2.c: 748:         m->bytes[1] = rxFifoObj[10];
 34905   004382  EE20 F00A          	lfsr	2,10
 34906   004386  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34907   004388  26D9               	addwf	fsr2l,f,c
 34908   00438A  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34909   00438C  22DA               	addwfc	fsr2h,f,c
 34910   00438E  EE10 F003          	lfsr	1,3
 34911   004392  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34912   004394  26E1               	addwf	fsr1l,f,c
 34913   004396  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34914   004398  22E2               	addwfc	fsr1h,f,c
 34915   00439A  C4DF F4E7          	movff	indf2,indf1
 34916                           
 34917                           ;../../VLCBlib_PIC/can18_can_2.c: 749:         m->bytes[2] = rxFifoObj[11];
 34918   00439E  EE20 F00B          	lfsr	2,11
 34919   0043A2  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34920   0043A4  26D9               	addwf	fsr2l,f,c
 34921   0043A6  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34922   0043A8  22DA               	addwfc	fsr2h,f,c
 34923   0043AA  EE10 F004          	lfsr	1,4
 34924   0043AE  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34925   0043B0  26E1               	addwf	fsr1l,f,c
 34926   0043B2  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34927   0043B4  22E2               	addwfc	fsr1h,f,c
 34928   0043B6  C4DF F4E7          	movff	indf2,indf1
 34929                           
 34930                           ;../../VLCBlib_PIC/can18_can_2.c: 750:         m->bytes[3] = rxFifoObj[12];
 34931   0043BA  EE20 F00C          	lfsr	2,12
 34932   0043BE  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34933   0043C0  26D9               	addwf	fsr2l,f,c
 34934   0043C2  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34935   0043C4  22DA               	addwfc	fsr2h,f,c
 34936   0043C6  EE10 F005          	lfsr	1,5
 34937   0043CA  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34938   0043CC  26E1               	addwf	fsr1l,f,c
 34939   0043CE  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34940   0043D0  22E2               	addwfc	fsr1h,f,c
 34941   0043D2  C4DF F4E7          	movff	indf2,indf1
 34942                           
 34943                           ;../../VLCBlib_PIC/can18_can_2.c: 751:         m->bytes[4] = rxFifoObj[13];
 34944   0043D6  EE20 F00D          	lfsr	2,13
 34945   0043DA  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34946   0043DC  26D9               	addwf	fsr2l,f,c
 34947   0043DE  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34948   0043E0  22DA               	addwfc	fsr2h,f,c
 34949   0043E2  EE10 F006          	lfsr	1,6
 34950   0043E6  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34951   0043E8  26E1               	addwf	fsr1l,f,c
 34952   0043EA  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34953   0043EC  22E2               	addwfc	fsr1h,f,c
 34954   0043EE  C4DF F4E7          	movff	indf2,indf1
 34955                           
 34956                           ;../../VLCBlib_PIC/can18_can_2.c: 752:         m->bytes[5] = rxFifoObj[14];
 34957   0043F2  EE20 F00E          	lfsr	2,14
 34958   0043F6  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34959   0043F8  26D9               	addwf	fsr2l,f,c
 34960   0043FA  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34961   0043FC  22DA               	addwfc	fsr2h,f,c
 34962   0043FE  EE10 F007          	lfsr	1,7
 34963   004402  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34964   004404  26E1               	addwf	fsr1l,f,c
 34965   004406  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34966   004408  22E2               	addwfc	fsr1h,f,c
 34967   00440A  C4DF F4E7          	movff	indf2,indf1
 34968                           
 34969                           ;../../VLCBlib_PIC/can18_can_2.c: 753:         m->bytes[6] = rxFifoObj[15];
 34970   00440E  EE20 F00F          	lfsr	2,15
 34971   004412  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34972   004414  26D9               	addwf	fsr2l,f,c
 34973   004416  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34974   004418  22DA               	addwfc	fsr2h,f,c
 34975   00441A  EE10 F008          	lfsr	1,8
 34976   00441E  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34977   004420  26E1               	addwf	fsr1l,f,c
 34978   004422  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34979   004424  22E2               	addwfc	fsr1h,f,c
 34980   004426  C4DF F4E7          	movff	indf2,indf1
 34981   00442A                     
 34982                           ; BSR set to: 6
 34983                           ;../../VLCBlib_PIC/can18_can_2.c: 755:         C1FIFOCON3Hbits.UINC = 1;
 34984   00442A  0101               	movlb	1	; () banked
 34985   00442C  8175               	bsf	117,0,b	;volatile
 34986   00442E  EF40  F021         	goto	l9611
 34987   004432                     l670:
 34988   004432  0012               	return		;funcret
 34989   004434                     __end_of_canReceiveMessage:
 34990                           	callstack 0
 34991                           
 34992 ;; *************** function _pop *****************
 34993 ;; Defined at:
 34994 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 34995 ;; Parameters:    Size  Location     Type
 34996 ;;  q               2    0[COMRAM] PTR struct MessageQueue
 34997 ;;		 -> rxQueue(5), 
 34998 ;; Auto vars:     Size  Location     Type
 34999 ;;  ret             2    7[COMRAM] PTR struct Message
 35000 ;;		 -> rxBuffers(72), 
 35001 ;; Return value:  Size  Location     Type
 35002 ;;                  2    0[COMRAM] PTR struct Message
 35003 ;; Registers used:
 35004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35005 ;; Tracked objects:
 35006 ;;		On entry : 0/0
 35007 ;;		On exit  : 0/0
 35008 ;;		Unchanged: 0/0
 35009 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35011 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35012 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35013 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35014 ;;Total ram usage:        9 bytes
 35015 ;; Hardware stack levels used: 1
 35016 ;; Hardware stack levels required when called: 1
 35017 ;; This function calls:
 35018 ;;		Nothing
 35019 ;; This function is called by:
 35020 ;;		_canReceiveMessage
 35021 ;; This function uses a non-reentrant model
 35022 ;;
 35023                           
 35024                           	psect	text83
 35025   00626A                     __ptext83:
 35026                           	callstack 0
 35027   00626A                     _pop:
 35028                           	callstack 123
 35029   00626A                     
 35030                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 35031   00626A  EE20 F002          	lfsr	2,2
 35032   00626E  5001               	movf	pop@q^(0+1280),w,c
 35033   006270  26D9               	addwf	fsr2l,f,c
 35034   006272  5002               	movf	(pop@q+1)^(0+1280),w,c
 35035   006274  22DA               	addwfc	fsr2h,f,c
 35036   006276  EE10 F003          	lfsr	1,3
 35037   00627A  5001               	movf	pop@q^(0+1280),w,c
 35038   00627C  26E1               	addwf	fsr1l,f,c
 35039   00627E  5002               	movf	(pop@q+1)^(0+1280),w,c
 35040   006280  22E2               	addwfc	fsr1h,f,c
 35041   006282  50DE               	movf	postinc2,w,c
 35042   006284  18E6               	xorwf	postinc1,w,c
 35043   006286  A4D8               	btfss	status,2,c
 35044   006288  EF48  F031         	goto	u5971
 35045   00628C  EF4A  F031         	goto	u5970
 35046   006290                     u5971:
 35047   006290  EF50  F031         	goto	l8591
 35048   006294                     u5970:
 35049   006294                     
 35050                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 35051   006294  0E00               	movlw	0
 35052   006296  6E01               	movwf	?_pop^(0+1280),c
 35053   006298  0E00               	movlw	0
 35054   00629A  6E02               	movwf	(?_pop+1)^(0+1280),c
 35055   00629C  EF93  F031         	goto	l1171
 35056   0062A0                     l8591:
 35057                           
 35058                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 35059   0062A0  EE20 F002          	lfsr	2,2
 35060   0062A4  5001               	movf	pop@q^(0+1280),w,c
 35061   0062A6  26D9               	addwf	fsr2l,f,c
 35062   0062A8  5002               	movf	(pop@q+1)^(0+1280),w,c
 35063   0062AA  22DA               	addwfc	fsr2h,f,c
 35064   0062AC  50DF               	movf	indf2,w,c
 35065   0062AE  6E03               	movwf	??_pop^(0+1280),c
 35066   0062B0  5003               	movf	??_pop^(0+1280),w,c
 35067   0062B2  0D09               	mullw	9
 35068   0062B4  C4F3 F504          	movff	prodl,??_pop+1
 35069   0062B8  C4F4 F505          	movff	prodh,??_pop+2
 35070   0062BC  C501  F4D9         	movff	pop@q,fsr2l
 35071   0062C0  C502  F4DA         	movff	pop@q+1,fsr2h
 35072   0062C4  C4DE F506          	movff	postinc2,??_pop+3
 35073   0062C8  C4DD F507          	movff	postdec2,??_pop+4
 35074   0062CC  5004               	movf	(??_pop+1)^(0+1280),w,c
 35075   0062CE  2406               	addwf	(??_pop+3)^(0+1280),w,c
 35076   0062D0  6E08               	movwf	pop@ret^(0+1280),c
 35077   0062D2  5005               	movf	(??_pop+2)^(0+1280),w,c
 35078   0062D4  2007               	addwfc	(??_pop+4)^(0+1280),w,c
 35079   0062D6  6E09               	movwf	(pop@ret+1)^(0+1280),c
 35080   0062D8  EE20 F002          	lfsr	2,2
 35081   0062DC  5001               	movf	pop@q^(0+1280),w,c
 35082   0062DE  26D9               	addwf	fsr2l,f,c
 35083   0062E0  5002               	movf	(pop@q+1)^(0+1280),w,c
 35084   0062E2  22DA               	addwfc	fsr2h,f,c
 35085   0062E4  2ADF               	incf	indf2,f,c
 35086   0062E6                     
 35087                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 35088   0062E6  EE20 F004          	lfsr	2,4
 35089   0062EA  5001               	movf	pop@q^(0+1280),w,c
 35090   0062EC  26D9               	addwf	fsr2l,f,c
 35091   0062EE  5002               	movf	(pop@q+1)^(0+1280),w,c
 35092   0062F0  22DA               	addwfc	fsr2h,f,c
 35093   0062F2  EE10 F002          	lfsr	1,2
 35094   0062F6  5001               	movf	pop@q^(0+1280),w,c
 35095   0062F8  26E1               	addwf	fsr1l,f,c
 35096   0062FA  5002               	movf	(pop@q+1)^(0+1280),w,c
 35097   0062FC  22E2               	addwfc	fsr1h,f,c
 35098   0062FE  50DE               	movf	postinc2,w,c
 35099   006300  5CE6               	subwf	postinc1,w,c
 35100   006302  A0D8               	btfss	status,0,c
 35101   006304  EF86  F031         	goto	u5981
 35102   006308  EF88  F031         	goto	u5980
 35103   00630C                     u5981:
 35104   00630C  EF8F  F031         	goto	l8599
 35105   006310                     u5980:
 35106   006310  EE20 F002          	lfsr	2,2
 35107   006314  5001               	movf	pop@q^(0+1280),w,c
 35108   006316  26D9               	addwf	fsr2l,f,c
 35109   006318  5002               	movf	(pop@q+1)^(0+1280),w,c
 35110   00631A  22DA               	addwfc	fsr2h,f,c
 35111   00631C  6ADF               	clrf	indf2,c
 35112   00631E                     l8599:
 35113                           
 35114                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 35115   00631E  C508  F501         	movff	pop@ret,?_pop
 35116   006322  C509  F502         	movff	pop@ret+1,?_pop+1
 35117   006326                     l1171:
 35118   006326  0012               	return		;funcret
 35119   006328                     __end_of_pop:
 35120                           	callstack 0
 35121                           
 35122 ;; *************** function _memcpy *****************
 35123 ;; Defined at:
 35124 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 35125 ;; Parameters:    Size  Location     Type
 35126 ;;  d1              2    0[COMRAM] PTR void 
 35127 ;;		 -> poll@m(9), 
 35128 ;;  s1              2    2[COMRAM] PTR const void 
 35129 ;;		 -> rxBuffers(72), NULL(0), 
 35130 ;;  n               2    4[COMRAM] unsigned int 
 35131 ;; Auto vars:     Size  Location     Type
 35132 ;;  s               2    8[COMRAM] PTR const unsigned char 
 35133 ;;		 -> rxBuffers(72), NULL(0), 
 35134 ;;  d               2    6[COMRAM] PTR unsigned char 
 35135 ;;		 -> poll@m(9), 
 35136 ;;  tmp             1   10[COMRAM] unsigned char 
 35137 ;; Return value:  Size  Location     Type
 35138 ;;                  2    0[COMRAM] PTR void 
 35139 ;; Registers used:
 35140 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35141 ;; Tracked objects:
 35142 ;;		On entry : 0/0
 35143 ;;		On exit  : 0/0
 35144 ;;		Unchanged: 0/0
 35145 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35146 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35147 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35149 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35150 ;;Total ram usage:       11 bytes
 35151 ;; Hardware stack levels used: 1
 35152 ;; Hardware stack levels required when called: 1
 35153 ;; This function calls:
 35154 ;;		Nothing
 35155 ;; This function is called by:
 35156 ;;		_canReceiveMessage
 35157 ;; This function uses a non-reentrant model
 35158 ;;
 35159                           
 35160                           	psect	text84
 35161   007AFE                     __ptext84:
 35162                           	callstack 0
 35163   007AFE                     _memcpy:
 35164                           	callstack 123
 35165   007AFE  C503  F509         	movff	memcpy@s1,memcpy@s
 35166   007B02  C504  F50A         	movff	memcpy@s1+1,memcpy@s+1
 35167   007B06  C501  F507         	movff	memcpy@d1,memcpy@d
 35168   007B0A  C502  F508         	movff	memcpy@d1+1,memcpy@d+1
 35169   007B0E  EF99  F03D         	goto	l8613
 35170   007B12                     l8605:
 35171   007B12  C509  F4D9         	movff	memcpy@s,fsr2l
 35172   007B16  C50A  F4DA         	movff	memcpy@s+1,fsr2h
 35173   007B1A  50DF               	movf	indf2,w,c
 35174   007B1C  6E0B               	movwf	memcpy@tmp^(0+1280),c
 35175   007B1E  4A09               	infsnz	memcpy@s^(0+1280),f,c
 35176   007B20  2A0A               	incf	(memcpy@s+1)^(0+1280),f,c
 35177   007B22  C507  F4D9         	movff	memcpy@d,fsr2l
 35178   007B26  C508  F4DA         	movff	memcpy@d+1,fsr2h
 35179   007B2A  C50B  F4DF         	movff	memcpy@tmp,indf2
 35180   007B2E  4A07               	infsnz	memcpy@d^(0+1280),f,c
 35181   007B30  2A08               	incf	(memcpy@d+1)^(0+1280),f,c
 35182   007B32                     l8613:
 35183   007B32  0605               	decf	memcpy@n^(0+1280),f,c
 35184   007B34  A0D8               	btfss	status,0,c
 35185   007B36  0606               	decf	(memcpy@n+1)^(0+1280),f,c
 35186   007B38  2805               	incf	memcpy@n^(0+1280),w,c
 35187   007B3A  E106               	bnz	u5991
 35188   007B3C  2806               	incf	(memcpy@n+1)^(0+1280),w,c
 35189   007B3E  A4D8               	btfss	status,2,c
 35190   007B40  EFA4  F03D         	goto	u5991
 35191   007B44  EFA6  F03D         	goto	u5990
 35192   007B48                     u5991:
 35193   007B48  EF89  F03D         	goto	l8605
 35194   007B4C                     u5990:
 35195   007B4C  0012               	return		;funcret
 35196   007B4E                     __end_of_memcpy:
 35197                           	callstack 0
 35198                           
 35199 ;; *************** function _handleSelfEnumeration *****************
 35200 ;; Defined at:
 35201 ;;		line 800 in file "../../VLCBlib_PIC/can18_can_2.c"
 35202 ;; Parameters:    Size  Location     Type
 35203 ;;  receivedCanI    1    wreg     unsigned char 
 35204 ;; Auto vars:     Size  Location     Type
 35205 ;;  receivedCanI    1   14[COMRAM] unsigned char 
 35206 ;; Return value:  Size  Location     Type
 35207 ;;                  1    wreg      void 
 35208 ;; Registers used:
 35209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35210 ;; Tracked objects:
 35211 ;;		On entry : 0/0
 35212 ;;		On exit  : 0/0
 35213 ;;		Unchanged: 0/0
 35214 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35216 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35217 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35218 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35219 ;;Total ram usage:        5 bytes
 35220 ;; Hardware stack levels used: 1
 35221 ;; Hardware stack levels required when called: 2
 35222 ;; This function calls:
 35223 ;;		_tickGet
 35224 ;; This function is called by:
 35225 ;;		_canReceiveMessage
 35226 ;; This function uses a non-reentrant model
 35227 ;;
 35228                           
 35229                           	psect	text85
 35230   00654A                     __ptext85:
 35231                           	callstack 0
 35232   00654A                     _handleSelfEnumeration:
 35233                           	callstack 122
 35234                           
 35235                           ;incstack = 0
 35236                           ;handleSelfEnumeration@receivedCanId stored from wreg
 35237   00654A  6E0F               	movwf	handleSelfEnumeration@receivedCanId^(0+1280),c
 35238   00654C                     
 35239                           ;../../VLCBlib_PIC/can18_can_2.c: 802:     switch (enumerationState) {
 35240   00654C  EFDF  F032         	goto	l8629
 35241   006550                     l8617:
 35242                           
 35243                           ; BSR set to: 5
 35244                           ;../../VLCBlib_PIC/can18_can_2.c: 805:             ( enumerationResults[receivedCanId>>3
      +                          ] |= ( 1<<(receivedCanId & 0x07) ) );
 35245   006550  C50F  F50B         	movff	handleSelfEnumeration@receivedCanId,??_handleSelfEnumeration
 35246   006554  0E07               	movlw	7
 35247   006556  160B               	andwf	??_handleSelfEnumeration^(0+1280),f,c
 35248   006558  0E01               	movlw	1
 35249   00655A  6E0C               	movwf	(??_handleSelfEnumeration+1)^(0+1280),c
 35250   00655C  2A0B               	incf	??_handleSelfEnumeration^(0+1280),f,c
 35251   00655E  EFB3  F032         	goto	u6004
 35252   006562                     u6005:
 35253   006562  90D8               	bcf	status,0,c
 35254   006564  360C               	rlcf	(??_handleSelfEnumeration+1)^(0+1280),f,c
 35255   006566                     u6004:
 35256   006566  2E0B               	decfsz	??_handleSelfEnumeration^(0+1280),f,c
 35257   006568  EFB1  F032         	goto	u6005
 35258   00656C  380F               	swapf	handleSelfEnumeration@receivedCanId^(0+1280),w,c
 35259   00656E  46E8               	rlncf	wreg,f,c
 35260   006570  0B1F               	andlw	31
 35261   006572  6E0D               	movwf	(??_handleSelfEnumeration+2)^(0+1280),c
 35262   006574  6A0E               	clrf	(??_handleSelfEnumeration+3)^(0+1280),c
 35263   006576  0E32               	movlw	low _enumerationResults
 35264   006578  240D               	addwf	(??_handleSelfEnumeration+2)^(0+1280),w,c
 35265   00657A  6ED9               	movwf	fsr2l,c
 35266   00657C  0E06               	movlw	high _enumerationResults
 35267   00657E  200E               	addwfc	(??_handleSelfEnumeration+3)^(0+1280),w,c
 35268   006580  6EDA               	movwf	fsr2h,c
 35269   006582  500C               	movf	(??_handleSelfEnumeration+1)^(0+1280),w,c
 35270   006584  12DF               	iorwf	indf2,f,c
 35271                           
 35272                           ;../../VLCBlib_PIC/can18_can_2.c: 806:             break;
 35273   006586  EFF9  F032         	goto	l694
 35274   00658A                     l8619:
 35275                           
 35276                           ; BSR set to: 5
 35277                           ;../../VLCBlib_PIC/can18_can_2.c: 808:             if (receivedCanId == canId) {
 35278   00658A  51A8               	movf	_canId& (0+255),w,b
 35279   00658C  180F               	xorwf	handleSelfEnumeration@receivedCanId^(0+1280),w,c
 35280   00658E  A4D8               	btfss	status,2,c
 35281   006590  EFCC  F032         	goto	u6011
 35282   006594  EFCE  F032         	goto	u6010
 35283   006598                     u6011:
 35284   006598  EFF9  F032         	goto	l694
 35285   00659C                     u6010:
 35286   00659C                     
 35287                           ; BSR set to: 5
 35288                           ;../../VLCBlib_PIC/can18_can_2.c: 811:                 enumerationState = ENUMERATION_RE
      +                          QUIRED;
 35289   00659C  0E01               	movlw	1
 35290   00659E  6FA5               	movwf	_enumerationState& (0+255),b
 35291   0065A0                     
 35292                           ; BSR set to: 5
 35293                           ;../../VLCBlib_PIC/can18_can_2.c: 813:                 canDiagnostics[0x0E].asUint++;
 35294   0065A0  0106               	movlb	6	; () banked
 35295   0065A2  4BAA               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 35296   0065A4  2BAB               	incf	(_canDiagnostics+29)& (0+255),f,b
 35297   0065A6                     
 35298                           ; BSR set to: 6
 35299                           ;../../VLCBlib_PIC/can18_can_2.c: 815:                 enumerationStartTime.val = tickGe
      +                          t();
 35300   0065A6  ECF7  F039         	call	_tickGet	;wreg free
 35301   0065AA  C501  F574         	movff	?_tickGet,_enumerationStartTime
 35302   0065AE  C502  F575         	movff	?_tickGet+1,_enumerationStartTime+1
 35303   0065B2  C503  F576         	movff	?_tickGet+2,_enumerationStartTime+2
 35304   0065B6  C504  F577         	movff	?_tickGet+3,_enumerationStartTime+3
 35305   0065BA  EFF9  F032         	goto	l694
 35306   0065BE                     l8629:
 35307   0065BE  0105               	movlb	5	; () banked
 35308   0065C0  51A5               	movf	_enumerationState& (0+255),w,b
 35309   0065C2  6E0B               	movwf	??_handleSelfEnumeration^(0+1280),c
 35310   0065C4  6A0C               	clrf	(??_handleSelfEnumeration+1)^(0+1280),c
 35311                           
 35312                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35313                           ; Switch size 1, requested type "simple"
 35314                           ; Number of cases is 1, Range of values is 0 to 0
 35315                           ; switch strategies available:
 35316                           ; Name         Instructions Cycles
 35317                           ; simple_byte            4     3 (average)
 35318                           ;	Chosen strategy is simple_byte
 35319   0065C6  500C               	movf	(??_handleSelfEnumeration+1)^(0+1280),w,c
 35320   0065C8  0A00               	xorlw	0	; case 0
 35321   0065CA  B4D8               	btfsc	status,2,c
 35322   0065CC  EFEA  F032         	goto	l11633
 35323   0065D0  EFF9  F032         	goto	l694
 35324   0065D4                     l11633:
 35325                           
 35326                           ; BSR set to: 5
 35327                           ; Switch size 1, requested type "simple"
 35328                           ; Number of cases is 3, Range of values is 0 to 3
 35329                           ; switch strategies available:
 35330                           ; Name         Instructions Cycles
 35331                           ; simple_byte           10     6 (average)
 35332                           ;	Chosen strategy is simple_byte
 35333   0065D4  500B               	movf	??_handleSelfEnumeration^(0+1280),w,c
 35334   0065D6  0A00               	xorlw	0	; case 0
 35335   0065D8  B4D8               	btfsc	status,2,c
 35336   0065DA  EFC5  F032         	goto	l8619
 35337   0065DE  0A02               	xorlw	2	; case 2
 35338   0065E0  B4D8               	btfsc	status,2,c
 35339   0065E2  EFA8  F032         	goto	l8617
 35340   0065E6  0A01               	xorlw	1	; case 3
 35341   0065E8  B4D8               	btfsc	status,2,c
 35342   0065EA  EFA8  F032         	goto	l8617
 35343   0065EE  EFF9  F032         	goto	l694
 35344   0065F2                     l694:
 35345   0065F2  0012               	return		;funcret
 35346   0065F4                     __end_of_handleSelfEnumeration:
 35347                           	callstack 0
 35348                           
 35349 ;; *************** function _sendMessage5 *****************
 35350 ;; Defined at:
 35351 ;;		line 1193 in file "../../VLCBlib_PIC/vlcb.c"
 35352 ;; Parameters:    Size  Location     Type
 35353 ;;  opc             1    wreg     enum E22928
 35354 ;;  data1           1   37[COMRAM] unsigned char 
 35355 ;;  data2           1   38[COMRAM] unsigned char 
 35356 ;;  data3           1   39[COMRAM] unsigned char 
 35357 ;;  data4           1   40[COMRAM] unsigned char 
 35358 ;;  data5           1   41[COMRAM] unsigned char 
 35359 ;; Auto vars:     Size  Location     Type
 35360 ;;  opc             1   42[COMRAM] enum E22928
 35361 ;; Return value:  Size  Location     Type
 35362 ;;                  1    wreg      void 
 35363 ;; Registers used:
 35364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 35365 ;; Tracked objects:
 35366 ;;		On entry : 0/0
 35367 ;;		On exit  : 0/0
 35368 ;;		Unchanged: 0/0
 35369 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35370 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35373 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35374 ;;Total ram usage:        6 bytes
 35375 ;; Hardware stack levels used: 1
 35376 ;; Hardware stack levels required when called: 5
 35377 ;; This function calls:
 35378 ;;		_sendMessage
 35379 ;; This function is called by:
 35380 ;;		_canProcessMessage
 35381 ;;		_teachProcessMessage
 35382 ;;		_teachCheckLen
 35383 ;;		_doNenrd
 35384 ;;		_doNnclr
 35385 ;;		_doEvlrn
 35386 ;;		_doReval
 35387 ;;		_doEvuln
 35388 ;;		_doReqev
 35389 ;;		_reqevCallback
 35390 ;;		_mnsProcessMessage
 35391 ;;		_mnsPoll
 35392 ;;		_mnsTRserviceDiscoveryCallback
 35393 ;;		_nvProcessMessage
 35394 ;;		_checkLen
 35395 ;; This function uses a non-reentrant model
 35396 ;;
 35397                           
 35398                           	psect	text86
 35399   00812C                     __ptext86:
 35400                           	callstack 0
 35401   00812C                     _sendMessage5:
 35402                           	callstack 118
 35403                           
 35404                           ;incstack = 0
 35405                           ;sendMessage5@opc stored from wreg
 35406   00812C  6E2B               	movwf	sendMessage5@opc^(0+1280),c
 35407   00812E                     
 35408                           ;../../VLCBlib_PIC/vlcb.c: 1194:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 35409   00812E  0E06               	movlw	6
 35410   008130  6E1B               	movwf	sendMessage@len^(0+1280),c
 35411   008132  C526  F51C         	movff	sendMessage5@data1,sendMessage@data1
 35412   008136  C527  F51D         	movff	sendMessage5@data2,sendMessage@data2
 35413   00813A  C528  F51E         	movff	sendMessage5@data3,sendMessage@data3
 35414   00813E  C529  F51F         	movff	sendMessage5@data4,sendMessage@data4
 35415   008142  C52A  F520         	movff	sendMessage5@data5,sendMessage@data5
 35416   008146  0E00               	movlw	0
 35417   008148  6E21               	movwf	sendMessage@data6^(0+1280),c
 35418   00814A  0E00               	movlw	0
 35419   00814C  6E22               	movwf	sendMessage@data7^(0+1280),c
 35420   00814E  502B               	movf	sendMessage5@opc^(0+1280),w,c
 35421   008150  EC61  F036         	call	_sendMessage
 35422   008154  0012               	return		;funcret
 35423   008156                     __end_of_sendMessage5:
 35424                           	callstack 0
 35425                           
 35426 ;; *************** function _sendMessage *****************
 35427 ;; Defined at:
 35428 ;;		line 1238 in file "../../VLCBlib_PIC/vlcb.c"
 35429 ;; Parameters:    Size  Location     Type
 35430 ;;  opc             1    wreg     enum E22928
 35431 ;;  len             1   26[COMRAM] unsigned char 
 35432 ;;  data1           1   27[COMRAM] unsigned char 
 35433 ;;  data2           1   28[COMRAM] unsigned char 
 35434 ;;  data3           1   29[COMRAM] unsigned char 
 35435 ;;  data4           1   30[COMRAM] unsigned char 
 35436 ;;  data5           1   31[COMRAM] unsigned char 
 35437 ;;  data6           1   32[COMRAM] unsigned char 
 35438 ;;  data7           1   33[COMRAM] unsigned char 
 35439 ;; Auto vars:     Size  Location     Type
 35440 ;;  opc             1   36[COMRAM] enum E22928
 35441 ;; Return value:  Size  Location     Type
 35442 ;;                  1    wreg      void 
 35443 ;; Registers used:
 35444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 35445 ;; Tracked objects:
 35446 ;;		On entry : 0/0
 35447 ;;		On exit  : 0/0
 35448 ;;		Unchanged: 0/0
 35449 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35450 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35452 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35453 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35454 ;;Total ram usage:       11 bytes
 35455 ;; Hardware stack levels used: 1
 35456 ;; Hardware stack levels required when called: 4
 35457 ;; This function calls:
 35458 ;;		_canSendMessage
 35459 ;; This function is called by:
 35460 ;;		_sendMessage2
 35461 ;;		_sendMessage3
 35462 ;;		_sendMessage4
 35463 ;;		_sendMessage5
 35464 ;;		_sendMessage6
 35465 ;;		_sendMessage7
 35466 ;;		_sendMessage0
 35467 ;;		_sendMessage1
 35468 ;; This function uses a non-reentrant model
 35469 ;;
 35470                           
 35471                           	psect	text87
 35472   006CC2                     __ptext87:
 35473                           	callstack 0
 35474   006CC2                     _sendMessage:
 35475                           	callstack 118
 35476                           
 35477                           ;incstack = 0
 35478                           ;sendMessage@opc stored from wreg
 35479   006CC2  6E25               	movwf	sendMessage@opc^(0+1280),c
 35480   006CC4                     
 35481                           ;../../VLCBlib_PIC/vlcb.c: 1239:     tmpMessage.opc = opc;
 35482   006CC4  C525  F6B5         	movff	sendMessage@opc,_tmpMessage+1
 35483   006CC8                     
 35484                           ;../../VLCBlib_PIC/vlcb.c: 1240:     tmpMessage.len = len;
 35485   006CC8  C51B  F6B4         	movff	sendMessage@len,_tmpMessage
 35486   006CCC                     
 35487                           ;../../VLCBlib_PIC/vlcb.c: 1241:     tmpMessage.bytes[0] = data1;
 35488   006CCC  C51C  F6B6         	movff	sendMessage@data1,_tmpMessage+2
 35489   006CD0                     
 35490                           ;../../VLCBlib_PIC/vlcb.c: 1242:     tmpMessage.bytes[1] = data2;
 35491   006CD0  C51D  F6B7         	movff	sendMessage@data2,_tmpMessage+3
 35492   006CD4                     
 35493                           ;../../VLCBlib_PIC/vlcb.c: 1243:     tmpMessage.bytes[2] = data3;
 35494   006CD4  C51E  F6B8         	movff	sendMessage@data3,_tmpMessage+4
 35495   006CD8                     
 35496                           ;../../VLCBlib_PIC/vlcb.c: 1244:     tmpMessage.bytes[3] = data4;
 35497   006CD8  C51F  F6B9         	movff	sendMessage@data4,_tmpMessage+5
 35498   006CDC                     
 35499                           ;../../VLCBlib_PIC/vlcb.c: 1245:     tmpMessage.bytes[4] = data5;
 35500   006CDC  C520  F6BA         	movff	sendMessage@data5,_tmpMessage+6
 35501   006CE0                     
 35502                           ;../../VLCBlib_PIC/vlcb.c: 1246:     tmpMessage.bytes[5] = data6;
 35503   006CE0  C521  F6BB         	movff	sendMessage@data6,_tmpMessage+7
 35504   006CE4                     
 35505                           ;../../VLCBlib_PIC/vlcb.c: 1247:     tmpMessage.bytes[6] = data7;
 35506   006CE4  C522  F6BC         	movff	sendMessage@data7,_tmpMessage+8
 35507   006CE8                     
 35508                           ;../../VLCBlib_PIC/vlcb.c: 1248:     if (transport != ((void*)0)) {
 35509   006CE8  0105               	movlb	5	; () banked
 35510   006CEA  5191               	movf	_transport& (0+255),w,b
 35511   006CEC  1192               	iorwf	(_transport+1)& (0+255),w,b
 35512   006CEE  B4D8               	btfsc	status,2,c
 35513   006CF0  EF7C  F036         	goto	u5081
 35514   006CF4  EF7E  F036         	goto	u5080
 35515   006CF8                     u5081:
 35516   006CF8  EFA9  F036         	goto	l2066
 35517   006CFC                     u5080:
 35518   006CFC                     
 35519                           ; BSR set to: 5
 35520                           ;../../VLCBlib_PIC/vlcb.c: 1249:         if (transport->sendMessage != ((void*)0)) {
 35521   006CFC  C591  F4F6         	movff	_transport,tblptrl
 35522   006D00  C592  F4F7         	movff	_transport+1,tblptrh
 35523   006D04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35524   006D04  6AF8               	clrf	tblptru,c
 35525   006D06                     	endif
 35526   006D06                     	if	0	;tblptru may be non-zero
 35527   006D06                     	endif
 35528   006D06  0009               	tblrd		*+
 35529   006D08  50F5               	movf	tablat,w,c
 35530   006D0A  0009               	tblrd		*+
 35531   006D0C  10F5               	iorwf	tablat,w,c
 35532   006D0E  B4D8               	btfsc	status,2,c
 35533   006D10  EF8C  F036         	goto	u5091
 35534   006D14  EF8E  F036         	goto	u5090
 35535   006D18                     u5091:
 35536   006D18  EFA9  F036         	goto	l2066
 35537   006D1C                     u5090:
 35538   006D1C                     
 35539                           ; BSR set to: 5
 35540                           ;../../VLCBlib_PIC/vlcb.c: 1250:             transport->sendMessage(&tmpMessage);
 35541   006D1C  0EB4               	movlw	low _tmpMessage
 35542   006D1E  6E0D               	movwf	canSendMessage@mp^(0+1280),c
 35543   006D20  0E06               	movlw	high _tmpMessage
 35544   006D22  6E0E               	movwf	(canSendMessage@mp+1)^(0+1280),c
 35545   006D24  C591  F4F6         	movff	_transport,tblptrl
 35546   006D28  C592  F4F7         	movff	_transport+1,tblptrh
 35547   006D2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35548   006D2C  6AF8               	clrf	tblptru,c
 35549   006D2E                     	endif
 35550   006D2E                     	if	0	;tblptru may be non-zero
 35551   006D2E                     	endif
 35552   006D2E  0009               	tblrd		*+
 35553   006D30  C4F5 F523          	movff	tablat,??_sendMessage
 35554   006D34  0009               	tblrd		*+
 35555   006D36  C4F5 F524          	movff	tablat,??_sendMessage+1
 35556   006D3A  D802               	call	u5108
 35557   006D3C  EFA9  F036         	goto	u5109
 35558   006D40                     u5108:
 35559   006D40  0005               	push	
 35560   006D42  6EFA               	movwf	pclath,c
 35561   006D44  5023               	movf	??_sendMessage^(0+1280),w,c
 35562   006D46  6EFD               	movwf	tosl,c
 35563   006D48  5024               	movf	(??_sendMessage+1)^(0+1280),w,c
 35564   006D4A  6EFE               	movwf	tosh,c
 35565   006D4C  6AFF               	clrf	tosu,c
 35566   006D4E  50FA               	movf	pclath,w,c
 35567   006D50  0012               	return		;indir
 35568   006D52                     u5109:
 35569   006D52                     l2066:
 35570   006D52  0012               	return		;funcret
 35571   006D54                     __end_of_sendMessage:
 35572                           	callstack 0
 35573                           
 35574 ;; *************** function _canSendMessage *****************
 35575 ;; Defined at:
 35576 ;;		line 570 in file "../../VLCBlib_PIC/can18_can_2.c"
 35577 ;; Parameters:    Size  Location     Type
 35578 ;;  mp              2   12[COMRAM] PTR struct Message
 35579 ;;		 -> tmpMessage(9), 
 35580 ;; Auto vars:     Size  Location     Type
 35581 ;;  txFifoObj       2   24[COMRAM] PTR unsigned char 
 35582 ;;		 -> RAM(16383), 
 35583 ;;  m               2   22[COMRAM] PTR struct Message
 35584 ;;		 -> rxBuffers(72), NULL(0), 
 35585 ;;  temp            2   20[COMRAM] unsigned short 
 35586 ;;  i               1    0        unsigned char 
 35587 ;; Return value:  Size  Location     Type
 35588 ;;                  1    wreg      enum E23618
 35589 ;; Registers used:
 35590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35591 ;; Tracked objects:
 35592 ;;		On entry : 0/0
 35593 ;;		On exit  : 0/0
 35594 ;;		Unchanged: 0/0
 35595 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35597 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35598 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35599 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35600 ;;Total ram usage:       14 bytes
 35601 ;; Hardware stack levels used: 1
 35602 ;; Hardware stack levels required when called: 3
 35603 ;; This function calls:
 35604 ;;		_getNextWriteMessage
 35605 ;;		_getNumRxBuffersInUse
 35606 ;;		_getNumTxBuffersInUse
 35607 ;;		_have
 35608 ;;		_isEvent
 35609 ;;		_startEnumeration
 35610 ;;		_updateModuleErrorStatus
 35611 ;; This function is called by:
 35612 ;;		_sendMessage
 35613 ;; This function uses a non-reentrant model
 35614 ;;
 35615                           
 35616                           	psect	text88
 35617   002A9E                     __ptext88:
 35618                           	callstack 0
 35619   002A9E                     _canSendMessage:
 35620                           	callstack 118
 35621   002A9E                     
 35622                           ;../../VLCBlib_PIC/can18_can_2.c: 571:     uint8_t i;;../../VLCBlib_PIC/can18_can_2.c: 5
      +                          72:     uint8_t* txFifoObj;;../../VLCBlib_PIC/can18_can_2.c: 574:     uint16_t temp;;../
      +                          ../VLCBlib_PIC/can18_can_2.c: 577:     Message * m;;../../VLCBlib_PIC/can18_can_2.c: 581
      +                          :     if (isEvent((uint8_t)(mp->opc))) {
 35623   002A9E  EE20 F001          	lfsr	2,1
 35624   002AA2  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35625   002AA4  26D9               	addwf	fsr2l,f,c
 35626   002AA6  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35627   002AA8  22DA               	addwfc	fsr2h,f,c
 35628   002AAA  50DF               	movf	indf2,w,c
 35629   002AAC  EC1B  F03F         	call	_isEvent
 35630   002AB0  0900               	iorlw	0
 35631   002AB2  B4D8               	btfsc	status,2,c
 35632   002AB4  EF5E  F015         	goto	u4851
 35633   002AB8  EF60  F015         	goto	u4850
 35634   002ABC                     u4851:
 35635   002ABC  EF15  F016         	goto	l646
 35636   002AC0                     u4850:
 35637   002AC0                     
 35638                           ;../../VLCBlib_PIC/can18_can_2.c: 582:         if (have(SERVICE_ID_CONSUME_OWN_EVENTS)) 
      +                          {
 35639   002AC0  0E08               	movlw	8
 35640   002AC2  EC37  F037         	call	_have
 35641   002AC6  0900               	iorlw	0
 35642   002AC8  B4D8               	btfsc	status,2,c
 35643   002ACA  EF69  F015         	goto	u4861
 35644   002ACE  EF6B  F015         	goto	u4860
 35645   002AD2                     u4861:
 35646   002AD2  EF15  F016         	goto	l646
 35647   002AD6                     u4860:
 35648   002AD6                     
 35649                           ;../../VLCBlib_PIC/can18_can_2.c: 584:             m = getNextWriteMessage(&rxQueue);
 35650   002AD6  0EC7               	movlw	low _rxQueue
 35651   002AD8  6E01               	movwf	getNextWriteMessage@q^(0+1280),c
 35652   002ADA  0E05               	movlw	high _rxQueue
 35653   002ADC  6E02               	movwf	(getNextWriteMessage@q+1)^(0+1280),c
 35654   002ADE  EC92  F02C         	call	_getNextWriteMessage	;wreg free
 35655   002AE2  C501  F517         	movff	?_getNextWriteMessage,canSendMessage@m
 35656   002AE6  C502  F518         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 35657   002AEA                     
 35658                           ;../../VLCBlib_PIC/can18_can_2.c: 585:             if (m == ((void*)0)) {
 35659   002AEA  5017               	movf	canSendMessage@m^(0+1280),w,c
 35660   002AEC  1018               	iorwf	(canSendMessage@m+1)^(0+1280),w,c
 35661   002AEE  A4D8               	btfss	status,2,c
 35662   002AF0  EF7C  F015         	goto	u4871
 35663   002AF4  EF7E  F015         	goto	u4870
 35664   002AF8                     u4871:
 35665   002AF8  EF85  F015         	goto	l7501
 35666   002AFC                     u4870:
 35667   002AFC                     
 35668                           ;../../VLCBlib_PIC/can18_can_2.c: 587:                 canDiagnostics[0x08].asUint++;
 35669   002AFC  0106               	movlb	6	; () banked
 35670   002AFE  4B9E               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 35671   002B00  2B9F               	incf	(_canDiagnostics+17)& (0+255),f,b
 35672   002B02                     
 35673                           ; BSR set to: 6
 35674                           ;../../VLCBlib_PIC/can18_can_2.c: 588:                 updateModuleErrorStatus();
 35675   002B02  EC65  F041         	call	_updateModuleErrorStatus	;wreg free
 35676                           
 35677                           ;../../VLCBlib_PIC/can18_can_2.c: 590:             } else {
 35678   002B06  EFFF  F015         	goto	l7519
 35679   002B0A                     l7501:
 35680                           
 35681                           ;../../VLCBlib_PIC/can18_can_2.c: 592:                 m->opc = mp->opc;
 35682   002B0A  EE20 F001          	lfsr	2,1
 35683   002B0E  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35684   002B10  26D9               	addwf	fsr2l,f,c
 35685   002B12  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35686   002B14  22DA               	addwfc	fsr2h,f,c
 35687   002B16  EE10 F001          	lfsr	1,1
 35688   002B1A  5017               	movf	canSendMessage@m^(0+1280),w,c
 35689   002B1C  26E1               	addwf	fsr1l,f,c
 35690   002B1E  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35691   002B20  22E2               	addwfc	fsr1h,f,c
 35692   002B22  C4DF F4E7          	movff	indf2,indf1
 35693   002B26                     
 35694                           ;../../VLCBlib_PIC/can18_can_2.c: 593:                 m->len = mp->len;
 35695   002B26  C50D  F4D9         	movff	canSendMessage@mp,fsr2l
 35696   002B2A  C50E  F4DA         	movff	canSendMessage@mp+1,fsr2h
 35697   002B2E  C517  F4E1         	movff	canSendMessage@m,fsr1l
 35698   002B32  C518  F4E2         	movff	canSendMessage@m+1,fsr1h
 35699   002B36  C4DF F4E7          	movff	indf2,indf1
 35700   002B3A                     
 35701                           ;../../VLCBlib_PIC/can18_can_2.c: 594:                 m->bytes[0] = mp->bytes[0];
 35702   002B3A  EE20 F002          	lfsr	2,2
 35703   002B3E  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35704   002B40  26D9               	addwf	fsr2l,f,c
 35705   002B42  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35706   002B44  22DA               	addwfc	fsr2h,f,c
 35707   002B46  EE10 F002          	lfsr	1,2
 35708   002B4A  5017               	movf	canSendMessage@m^(0+1280),w,c
 35709   002B4C  26E1               	addwf	fsr1l,f,c
 35710   002B4E  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35711   002B50  22E2               	addwfc	fsr1h,f,c
 35712   002B52  C4DF F4E7          	movff	indf2,indf1
 35713   002B56                     
 35714                           ;../../VLCBlib_PIC/can18_can_2.c: 595:                 m->bytes[1] = mp->bytes[1];
 35715   002B56  EE20 F003          	lfsr	2,3
 35716   002B5A  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35717   002B5C  26D9               	addwf	fsr2l,f,c
 35718   002B5E  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35719   002B60  22DA               	addwfc	fsr2h,f,c
 35720   002B62  EE10 F003          	lfsr	1,3
 35721   002B66  5017               	movf	canSendMessage@m^(0+1280),w,c
 35722   002B68  26E1               	addwf	fsr1l,f,c
 35723   002B6A  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35724   002B6C  22E2               	addwfc	fsr1h,f,c
 35725   002B6E  C4DF F4E7          	movff	indf2,indf1
 35726   002B72                     
 35727                           ;../../VLCBlib_PIC/can18_can_2.c: 596:                 m->bytes[2] = mp->bytes[2];
 35728   002B72  EE20 F004          	lfsr	2,4
 35729   002B76  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35730   002B78  26D9               	addwf	fsr2l,f,c
 35731   002B7A  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35732   002B7C  22DA               	addwfc	fsr2h,f,c
 35733   002B7E  EE10 F004          	lfsr	1,4
 35734   002B82  5017               	movf	canSendMessage@m^(0+1280),w,c
 35735   002B84  26E1               	addwf	fsr1l,f,c
 35736   002B86  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35737   002B88  22E2               	addwfc	fsr1h,f,c
 35738   002B8A  C4DF F4E7          	movff	indf2,indf1
 35739   002B8E                     
 35740                           ;../../VLCBlib_PIC/can18_can_2.c: 597:                 m->bytes[3] = mp->bytes[3];
 35741   002B8E  EE20 F005          	lfsr	2,5
 35742   002B92  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35743   002B94  26D9               	addwf	fsr2l,f,c
 35744   002B96  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35745   002B98  22DA               	addwfc	fsr2h,f,c
 35746   002B9A  EE10 F005          	lfsr	1,5
 35747   002B9E  5017               	movf	canSendMessage@m^(0+1280),w,c
 35748   002BA0  26E1               	addwf	fsr1l,f,c
 35749   002BA2  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35750   002BA4  22E2               	addwfc	fsr1h,f,c
 35751   002BA6  C4DF F4E7          	movff	indf2,indf1
 35752   002BAA                     
 35753                           ;../../VLCBlib_PIC/can18_can_2.c: 598:                 m->bytes[4] = mp->bytes[4];
 35754   002BAA  EE20 F006          	lfsr	2,6
 35755   002BAE  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35756   002BB0  26D9               	addwf	fsr2l,f,c
 35757   002BB2  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35758   002BB4  22DA               	addwfc	fsr2h,f,c
 35759   002BB6  EE10 F006          	lfsr	1,6
 35760   002BBA  5017               	movf	canSendMessage@m^(0+1280),w,c
 35761   002BBC  26E1               	addwf	fsr1l,f,c
 35762   002BBE  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35763   002BC0  22E2               	addwfc	fsr1h,f,c
 35764   002BC2  C4DF F4E7          	movff	indf2,indf1
 35765   002BC6                     
 35766                           ;../../VLCBlib_PIC/can18_can_2.c: 599:                 m->bytes[5] = mp->bytes[5];
 35767   002BC6  EE20 F007          	lfsr	2,7
 35768   002BCA  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35769   002BCC  26D9               	addwf	fsr2l,f,c
 35770   002BCE  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35771   002BD0  22DA               	addwfc	fsr2h,f,c
 35772   002BD2  EE10 F007          	lfsr	1,7
 35773   002BD6  5017               	movf	canSendMessage@m^(0+1280),w,c
 35774   002BD8  26E1               	addwf	fsr1l,f,c
 35775   002BDA  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35776   002BDC  22E2               	addwfc	fsr1h,f,c
 35777   002BDE  C4DF F4E7          	movff	indf2,indf1
 35778   002BE2                     
 35779                           ;../../VLCBlib_PIC/can18_can_2.c: 600:                 m->bytes[6] = mp->bytes[6];
 35780   002BE2  EE20 F008          	lfsr	2,8
 35781   002BE6  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35782   002BE8  26D9               	addwf	fsr2l,f,c
 35783   002BEA  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35784   002BEC  22DA               	addwfc	fsr2h,f,c
 35785   002BEE  EE10 F008          	lfsr	1,8
 35786   002BF2  5017               	movf	canSendMessage@m^(0+1280),w,c
 35787   002BF4  26E1               	addwf	fsr1l,f,c
 35788   002BF6  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35789   002BF8  22E2               	addwfc	fsr1h,f,c
 35790   002BFA  C4DF F4E7          	movff	indf2,indf1
 35791   002BFE                     l7519:
 35792                           
 35793                           ;../../VLCBlib_PIC/can18_can_2.c: 603:             temp = getNumRxBuffersInUse();
 35794   002BFE  EC32  F03A         	call	_getNumRxBuffersInUse	;wreg free
 35795   002C02  6E0F               	movwf	??_canSendMessage^(0+1280),c
 35796   002C04  500F               	movf	??_canSendMessage^(0+1280),w,c
 35797   002C06  6E15               	movwf	canSendMessage@temp^(0+1280),c
 35798   002C08  6A16               	clrf	(canSendMessage@temp+1)^(0+1280),c
 35799   002C0A                     
 35800                           ;../../VLCBlib_PIC/can18_can_2.c: 604:             if (temp > canDiagnostics[0x12].asUin
      +                          t) {
 35801   002C0A  5015               	movf	canSendMessage@temp^(0+1280),w,c
 35802   002C0C  0106               	movlb	6	; () banked
 35803   002C0E  5DB2               	subwf	(_canDiagnostics+36)& (0+255),w,b
 35804   002C10  5016               	movf	(canSendMessage@temp+1)^(0+1280),w,c
 35805   002C12  59B3               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 35806   002C14  B0D8               	btfsc	status,0,c
 35807   002C16  EF0F  F016         	goto	u4881
 35808   002C1A  EF11  F016         	goto	u4880
 35809   002C1E                     u4881:
 35810   002C1E  EF15  F016         	goto	l646
 35811   002C22                     u4880:
 35812   002C22                     
 35813                           ; BSR set to: 6
 35814                           ;../../VLCBlib_PIC/can18_can_2.c: 605:                 canDiagnostics[0x12].asUint = tem
      +                          p;
 35815   002C22  C515  F6B2         	movff	canSendMessage@temp,_canDiagnostics+36
 35816   002C26  C516  F6B3         	movff	canSendMessage@temp+1,_canDiagnostics+37
 35817   002C2A                     l646:
 35818                           
 35819                           ;../../VLCBlib_PIC/can18_can_2.c: 612:     if (!C1FIFOSTA2Lbits.TFNRFNIF) {
 35820   002C2A  0101               	movlb	1	; () banked
 35821   002C2C  B16C               	btfsc	108,0,b	;volatile
 35822   002C2E  EF1B  F016         	goto	u4891
 35823   002C32  EF1D  F016         	goto	u4890
 35824   002C36                     u4891:
 35825   002C36  EF24  F016         	goto	l651
 35826   002C3A                     u4890:
 35827   002C3A                     
 35828                           ; BSR set to: 1
 35829                           ;../../VLCBlib_PIC/can18_can_2.c: 614:         canDiagnostics[0x05].asUint++;
 35830   002C3A  0106               	movlb	6	; () banked
 35831   002C3C  4B98               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 35832   002C3E  2B99               	incf	(_canDiagnostics+11)& (0+255),f,b
 35833   002C40                     
 35834                           ; BSR set to: 6
 35835                           ;../../VLCBlib_PIC/can18_can_2.c: 615:         updateModuleErrorStatus();
 35836   002C40  EC65  F041         	call	_updateModuleErrorStatus	;wreg free
 35837   002C44  EF62  F017         	goto	l652
 35838   002C48                     l651:
 35839                           
 35840                           ; BSR set to: 1
 35841                           ;../../VLCBlib_PIC/can18_can_2.c: 623:     if (C1FIFOSTA2Lbits.TXLARB == 1) {
 35842   002C48  AD6C               	btfss	108,6,b	;volatile
 35843   002C4A  EF29  F016         	goto	u4901
 35844   002C4E  EF2B  F016         	goto	u4900
 35845   002C52                     u4901:
 35846   002C52  EF2E  F016         	goto	l7533
 35847   002C56                     u4900:
 35848   002C56                     
 35849                           ; BSR set to: 1
 35850                           ;../../VLCBlib_PIC/can18_can_2.c: 624:         canDiagnostics[0x0C].asUint++;
 35851   002C56  0106               	movlb	6	; () banked
 35852   002C58  4BA6               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 35853   002C5A  2BA7               	incf	(_canDiagnostics+25)& (0+255),f,b
 35854   002C5C                     l7533:
 35855                           
 35856                           ;../../VLCBlib_PIC/can18_can_2.c: 629:     if ((canId == 0) && (enumerationState == NO_E
      +                          NUMERATION)) {
 35857   002C5C  0105               	movlb	5	; () banked
 35858   002C5E  51A8               	movf	_canId& (0+255),w,b
 35859   002C60  A4D8               	btfss	status,2,c
 35860   002C62  EF35  F016         	goto	u4911
 35861   002C66  EF37  F016         	goto	u4910
 35862   002C6A                     u4911:
 35863   002C6A  EF43  F016         	goto	l7539
 35864   002C6E                     u4910:
 35865   002C6E                     
 35866                           ; BSR set to: 5
 35867   002C6E  51A5               	movf	_enumerationState& (0+255),w,b
 35868   002C70  A4D8               	btfss	status,2,c
 35869   002C72  EF3D  F016         	goto	u4921
 35870   002C76  EF3F  F016         	goto	u4920
 35871   002C7A                     u4921:
 35872   002C7A  EF43  F016         	goto	l7539
 35873   002C7E                     u4920:
 35874   002C7E                     
 35875                           ; BSR set to: 5
 35876                           ;../../VLCBlib_PIC/can18_can_2.c: 630:         enumerationState = ENUMERATION_REQUIRED;
 35877   002C7E  0E01               	movlw	1
 35878   002C80  6FA5               	movwf	_enumerationState& (0+255),b
 35879                           
 35880                           ;../../VLCBlib_PIC/can18_can_2.c: 631:         canId = 1;
 35881   002C82  0E01               	movlw	1
 35882   002C84  6FA8               	movwf	_canId& (0+255),b
 35883   002C86                     l7539:
 35884                           
 35885                           ; BSR set to: 5
 35886                           ;../../VLCBlib_PIC/can18_can_2.c: 635:     txFifoObj = (uint8_t*) C1FIFOUA2;
 35887   002C86  C170 F519          	movff	368,canSendMessage@txFifoObj	;volatile
 35888   002C8A  C171 F51A          	movff	369,canSendMessage@txFifoObj+1	;volatile
 35889   002C8E                     
 35890                           ; BSR set to: 5
 35891                           ;../../VLCBlib_PIC/can18_can_2.c: 636:     txFifoObj[0] = (uint8_t)((canPri[priorities[m
      +                          p->opc]] & 1) << 7) | (canId & 0x7F);
 35892   002C8E  C5A8  F50F         	movff	_canId,??_canSendMessage
 35893   002C92  0E7F               	movlw	127
 35894   002C94  160F               	andwf	??_canSendMessage^(0+1280),f,c
 35895   002C96  EE20 F001          	lfsr	2,1
 35896   002C9A  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35897   002C9C  26D9               	addwf	fsr2l,f,c
 35898   002C9E  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35899   002CA0  22DA               	addwfc	fsr2h,f,c
 35900   002CA2  50DF               	movf	indf2,w,c
 35901   002CA4  6E10               	movwf	(??_canSendMessage+1)^(0+1280),c
 35902   002CA6  6A11               	clrf	(??_canSendMessage+2)^(0+1280),c
 35903   002CA8  0E59               	movlw	low _priorities
 35904   002CAA  2410               	addwf	(??_canSendMessage+1)^(0+1280),w,c
 35905   002CAC  6EF6               	movwf	tblptrl,c
 35906   002CAE  0EFE               	movlw	high _priorities
 35907   002CB0  2011               	addwfc	(??_canSendMessage+2)^(0+1280),w,c
 35908   002CB2  6EF7               	movwf	tblptrh,c
 35909   002CB4                     	if	1	;There are 3 active tblptr bytes
 35910   002CB4  6AF8               	clrf	tblptru,c
 35911   002CB6  0E00               	movlw	low (__mediumconst shr (0+16))
 35912   002CB8  22F8               	addwfc	tblptru,f,c
 35913   002CBA                     	endif
 35914   002CBA  0008               	tblrd		*
 35915   002CBC  50F5               	movf	tablat,w,c
 35916   002CBE  6E12               	movwf	(??_canSendMessage+3)^(0+1280),c
 35917   002CC0  6A13               	clrf	(??_canSendMessage+4)^(0+1280),c
 35918   002CC2  0EA0               	movlw	low _canPri
 35919   002CC4  2412               	addwf	(??_canSendMessage+3)^(0+1280),w,c
 35920   002CC6  6EF6               	movwf	tblptrl,c
 35921   002CC8  0EFF               	movlw	high _canPri
 35922   002CCA  2013               	addwfc	(??_canSendMessage+4)^(0+1280),w,c
 35923   002CCC  6EF7               	movwf	tblptrh,c
 35924   002CCE                     	if	1	;There are 3 active tblptr bytes
 35925   002CCE  6AF8               	clrf	tblptru,c
 35926   002CD0  0E00               	movlw	low (__mediumconst shr (0+16))
 35927   002CD2  22F8               	addwfc	tblptru,f,c
 35928   002CD4                     	endif
 35929   002CD4  0008               	tblrd		*
 35930   002CD6  C4F5 F514          	movff	tablat,??_canSendMessage+5
 35931   002CDA  0E01               	movlw	1
 35932   002CDC  1614               	andwf	(??_canSendMessage+5)^(0+1280),f,c
 35933   002CDE  0E00               	movlw	0
 35934   002CE0  B014               	btfsc	(??_canSendMessage+5)^(0+1280),0,c
 35935   002CE2  0E80               	movlw	128
 35936   002CE4  6E14               	movwf	(??_canSendMessage+5)^(0+1280),c
 35937   002CE6  5014               	movf	(??_canSendMessage+5)^(0+1280),w,c
 35938   002CE8  100F               	iorwf	??_canSendMessage^(0+1280),w,c
 35939   002CEA  C519  F4D9         	movff	canSendMessage@txFifoObj,fsr2l
 35940   002CEE  C51A  F4DA         	movff	canSendMessage@txFifoObj+1,fsr2h
 35941   002CF2  6EDF               	movwf	indf2,c
 35942   002CF4                     
 35943                           ; BSR set to: 5
 35944                           ;../../VLCBlib_PIC/can18_can_2.c: 637:     txFifoObj[1] = canPri[priorities[mp->opc]] >>
      +                           1;
 35945   002CF4  EE20 F001          	lfsr	2,1
 35946   002CF8  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35947   002CFA  26D9               	addwf	fsr2l,f,c
 35948   002CFC  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35949   002CFE  22DA               	addwfc	fsr2h,f,c
 35950   002D00  EE10 F001          	lfsr	1,1
 35951   002D04  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35952   002D06  26E1               	addwf	fsr1l,f,c
 35953   002D08  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35954   002D0A  22E2               	addwfc	fsr1h,f,c
 35955   002D0C  50E7               	movf	indf1,w,c
 35956   002D0E  6E0F               	movwf	??_canSendMessage^(0+1280),c
 35957   002D10  6A10               	clrf	(??_canSendMessage+1)^(0+1280),c
 35958   002D12  0E59               	movlw	low _priorities
 35959   002D14  240F               	addwf	??_canSendMessage^(0+1280),w,c
 35960   002D16  6EF6               	movwf	tblptrl,c
 35961   002D18  0EFE               	movlw	high _priorities
 35962   002D1A  2010               	addwfc	(??_canSendMessage+1)^(0+1280),w,c
 35963   002D1C  6EF7               	movwf	tblptrh,c
 35964   002D1E                     	if	1	;There are 3 active tblptr bytes
 35965   002D1E  6AF8               	clrf	tblptru,c
 35966   002D20  0E00               	movlw	low (__mediumconst shr (0+16))
 35967   002D22  22F8               	addwfc	tblptru,f,c
 35968   002D24                     	endif
 35969   002D24  0008               	tblrd		*
 35970   002D26  50F5               	movf	tablat,w,c
 35971   002D28  6E11               	movwf	(??_canSendMessage+2)^(0+1280),c
 35972   002D2A  6A12               	clrf	(??_canSendMessage+3)^(0+1280),c
 35973   002D2C  0EA0               	movlw	low _canPri
 35974   002D2E  2411               	addwf	(??_canSendMessage+2)^(0+1280),w,c
 35975   002D30  6EF6               	movwf	tblptrl,c
 35976   002D32  0EFF               	movlw	high _canPri
 35977   002D34  2012               	addwfc	(??_canSendMessage+3)^(0+1280),w,c
 35978   002D36  6EF7               	movwf	tblptrh,c
 35979   002D38                     	if	1	;There are 3 active tblptr bytes
 35980   002D38  6AF8               	clrf	tblptru,c
 35981   002D3A  0E00               	movlw	low (__mediumconst shr (0+16))
 35982   002D3C  22F8               	addwfc	tblptru,f,c
 35983   002D3E                     	endif
 35984   002D3E  0008               	tblrd		*
 35985   002D40  C4F5 F513          	movff	tablat,??_canSendMessage+4
 35986   002D44  90D8               	bcf	status,0,c
 35987   002D46  3013               	rrcf	(??_canSendMessage+4)^(0+1280),w,c
 35988   002D48  6EDF               	movwf	indf2,c
 35989   002D4A                     
 35990                           ; BSR set to: 5
 35991                           ;../../VLCBlib_PIC/can18_can_2.c: 638:     txFifoObj[4] = (mp->len&0xF);
 35992   002D4A  EE20 F004          	lfsr	2,4
 35993   002D4E  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35994   002D50  26D9               	addwf	fsr2l,f,c
 35995   002D52  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35996   002D54  22DA               	addwfc	fsr2h,f,c
 35997   002D56  C50D  F4E1         	movff	canSendMessage@mp,fsr1l
 35998   002D5A  C50E  F4E2         	movff	canSendMessage@mp+1,fsr1h
 35999   002D5E  50E7               	movf	indf1,w,c
 36000   002D60  0B0F               	andlw	15
 36001   002D62  6EDF               	movwf	indf2,c
 36002   002D64                     
 36003                           ; BSR set to: 5
 36004                           ;../../VLCBlib_PIC/can18_can_2.c: 639:     txFifoObj[5] = 0;
 36005   002D64  EE20 F005          	lfsr	2,5
 36006   002D68  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36007   002D6A  26D9               	addwf	fsr2l,f,c
 36008   002D6C  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36009   002D6E  22DA               	addwfc	fsr2h,f,c
 36010   002D70  6ADF               	clrf	indf2,c
 36011   002D72                     
 36012                           ; BSR set to: 5
 36013                           ;../../VLCBlib_PIC/can18_can_2.c: 640:     txFifoObj[6] = 0;
 36014   002D72  EE20 F006          	lfsr	2,6
 36015   002D76  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36016   002D78  26D9               	addwf	fsr2l,f,c
 36017   002D7A  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36018   002D7C  22DA               	addwfc	fsr2h,f,c
 36019   002D7E  6ADF               	clrf	indf2,c
 36020   002D80                     
 36021                           ; BSR set to: 5
 36022                           ;../../VLCBlib_PIC/can18_can_2.c: 641:     txFifoObj[7] = 0;
 36023   002D80  EE20 F007          	lfsr	2,7
 36024   002D84  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36025   002D86  26D9               	addwf	fsr2l,f,c
 36026   002D88  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36027   002D8A  22DA               	addwfc	fsr2h,f,c
 36028   002D8C  6ADF               	clrf	indf2,c
 36029   002D8E                     
 36030                           ; BSR set to: 5
 36031                           ;../../VLCBlib_PIC/can18_can_2.c: 642:     txFifoObj[8] = (uint8_t)(mp->opc);
 36032   002D8E  EE20 F001          	lfsr	2,1
 36033   002D92  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36034   002D94  26D9               	addwf	fsr2l,f,c
 36035   002D96  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36036   002D98  22DA               	addwfc	fsr2h,f,c
 36037   002D9A  EE10 F008          	lfsr	1,8
 36038   002D9E  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36039   002DA0  26E1               	addwf	fsr1l,f,c
 36040   002DA2  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36041   002DA4  22E2               	addwfc	fsr1h,f,c
 36042   002DA6  C4DF F4E7          	movff	indf2,indf1
 36043   002DAA                     
 36044                           ; BSR set to: 5
 36045                           ;../../VLCBlib_PIC/can18_can_2.c: 643:     txFifoObj[9] = mp->bytes[0];
 36046   002DAA  EE20 F002          	lfsr	2,2
 36047   002DAE  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36048   002DB0  26D9               	addwf	fsr2l,f,c
 36049   002DB2  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36050   002DB4  22DA               	addwfc	fsr2h,f,c
 36051   002DB6  EE10 F009          	lfsr	1,9
 36052   002DBA  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36053   002DBC  26E1               	addwf	fsr1l,f,c
 36054   002DBE  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36055   002DC0  22E2               	addwfc	fsr1h,f,c
 36056   002DC2  C4DF F4E7          	movff	indf2,indf1
 36057   002DC6                     
 36058                           ; BSR set to: 5
 36059                           ;../../VLCBlib_PIC/can18_can_2.c: 644:     txFifoObj[10] = mp->bytes[1];
 36060   002DC6  EE20 F003          	lfsr	2,3
 36061   002DCA  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36062   002DCC  26D9               	addwf	fsr2l,f,c
 36063   002DCE  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36064   002DD0  22DA               	addwfc	fsr2h,f,c
 36065   002DD2  EE10 F00A          	lfsr	1,10
 36066   002DD6  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36067   002DD8  26E1               	addwf	fsr1l,f,c
 36068   002DDA  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36069   002DDC  22E2               	addwfc	fsr1h,f,c
 36070   002DDE  C4DF F4E7          	movff	indf2,indf1
 36071   002DE2                     
 36072                           ; BSR set to: 5
 36073                           ;../../VLCBlib_PIC/can18_can_2.c: 645:     txFifoObj[11] = mp->bytes[2];
 36074   002DE2  EE20 F004          	lfsr	2,4
 36075   002DE6  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36076   002DE8  26D9               	addwf	fsr2l,f,c
 36077   002DEA  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36078   002DEC  22DA               	addwfc	fsr2h,f,c
 36079   002DEE  EE10 F00B          	lfsr	1,11
 36080   002DF2  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36081   002DF4  26E1               	addwf	fsr1l,f,c
 36082   002DF6  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36083   002DF8  22E2               	addwfc	fsr1h,f,c
 36084   002DFA  C4DF F4E7          	movff	indf2,indf1
 36085   002DFE                     
 36086                           ; BSR set to: 5
 36087                           ;../../VLCBlib_PIC/can18_can_2.c: 646:     txFifoObj[12] = mp->bytes[3];
 36088   002DFE  EE20 F005          	lfsr	2,5
 36089   002E02  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36090   002E04  26D9               	addwf	fsr2l,f,c
 36091   002E06  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36092   002E08  22DA               	addwfc	fsr2h,f,c
 36093   002E0A  EE10 F00C          	lfsr	1,12
 36094   002E0E  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36095   002E10  26E1               	addwf	fsr1l,f,c
 36096   002E12  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36097   002E14  22E2               	addwfc	fsr1h,f,c
 36098   002E16  C4DF F4E7          	movff	indf2,indf1
 36099   002E1A                     
 36100                           ; BSR set to: 5
 36101                           ;../../VLCBlib_PIC/can18_can_2.c: 647:     txFifoObj[13] = mp->bytes[4];
 36102   002E1A  EE20 F006          	lfsr	2,6
 36103   002E1E  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36104   002E20  26D9               	addwf	fsr2l,f,c
 36105   002E22  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36106   002E24  22DA               	addwfc	fsr2h,f,c
 36107   002E26  EE10 F00D          	lfsr	1,13
 36108   002E2A  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36109   002E2C  26E1               	addwf	fsr1l,f,c
 36110   002E2E  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36111   002E30  22E2               	addwfc	fsr1h,f,c
 36112   002E32  C4DF F4E7          	movff	indf2,indf1
 36113   002E36                     
 36114                           ; BSR set to: 5
 36115                           ;../../VLCBlib_PIC/can18_can_2.c: 648:     txFifoObj[14] = mp->bytes[5];
 36116   002E36  EE20 F007          	lfsr	2,7
 36117   002E3A  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36118   002E3C  26D9               	addwf	fsr2l,f,c
 36119   002E3E  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36120   002E40  22DA               	addwfc	fsr2h,f,c
 36121   002E42  EE10 F00E          	lfsr	1,14
 36122   002E46  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36123   002E48  26E1               	addwf	fsr1l,f,c
 36124   002E4A  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36125   002E4C  22E2               	addwfc	fsr1h,f,c
 36126   002E4E  C4DF F4E7          	movff	indf2,indf1
 36127   002E52                     
 36128                           ; BSR set to: 5
 36129                           ;../../VLCBlib_PIC/can18_can_2.c: 649:     txFifoObj[15] = mp->bytes[6];
 36130   002E52  EE20 F008          	lfsr	2,8
 36131   002E56  500D               	movf	canSendMessage@mp^(0+1280),w,c
 36132   002E58  26D9               	addwf	fsr2l,f,c
 36133   002E5A  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 36134   002E5C  22DA               	addwfc	fsr2h,f,c
 36135   002E5E  EE10 F00F          	lfsr	1,15
 36136   002E62  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 36137   002E64  26E1               	addwf	fsr1l,f,c
 36138   002E66  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 36139   002E68  22E2               	addwfc	fsr1h,f,c
 36140   002E6A  C4DF F4E7          	movff	indf2,indf1
 36141   002E6E                     
 36142                           ; BSR set to: 5
 36143                           ;../../VLCBlib_PIC/can18_can_2.c: 652:     canDiagnostics[0x06].asUint++;
 36144   002E6E  0106               	movlb	6	; () banked
 36145   002E70  4B9A               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 36146   002E72  2B9B               	incf	(_canDiagnostics+13)& (0+255),f,b
 36147   002E74                     
 36148                           ; BSR set to: 6
 36149                           ;../../VLCBlib_PIC/can18_can_2.c: 654:     C1FIFOCON2H |= 0x1;
 36150   002E74  0101               	movlb	1	; () banked
 36151   002E76  8169               	bsf	105,0,b	;volatile
 36152   002E78                     
 36153                           ; BSR set to: 1
 36154                           ;../../VLCBlib_PIC/can18_can_2.c: 656:     temp = getNumTxBuffersInUse();
 36155   002E78  EC06  F039         	call	_getNumTxBuffersInUse	;wreg free
 36156   002E7C  6E0F               	movwf	??_canSendMessage^(0+1280),c
 36157   002E7E  500F               	movf	??_canSendMessage^(0+1280),w,c
 36158   002E80  6E15               	movwf	canSendMessage@temp^(0+1280),c
 36159   002E82  6A16               	clrf	(canSendMessage@temp+1)^(0+1280),c
 36160   002E84                     
 36161                           ;../../VLCBlib_PIC/can18_can_2.c: 657:     if (temp > canDiagnostics[0x11].asUint) {
 36162   002E84  5015               	movf	canSendMessage@temp^(0+1280),w,c
 36163   002E86  0106               	movlb	6	; () banked
 36164   002E88  5DB0               	subwf	(_canDiagnostics+34)& (0+255),w,b
 36165   002E8A  5016               	movf	(canSendMessage@temp+1)^(0+1280),w,c
 36166   002E8C  59B1               	subwfb	(_canDiagnostics+35)& (0+255),w,b
 36167   002E8E  B0D8               	btfsc	status,0,c
 36168   002E90  EF4C  F017         	goto	u4931
 36169   002E94  EF4E  F017         	goto	u4930
 36170   002E98                     u4931:
 36171   002E98  EF52  F017         	goto	l7579
 36172   002E9C                     u4930:
 36173   002E9C                     
 36174                           ; BSR set to: 6
 36175                           ;../../VLCBlib_PIC/can18_can_2.c: 658:         canDiagnostics[0x11].asUint = temp;
 36176   002E9C  C515  F6B0         	movff	canSendMessage@temp,_canDiagnostics+34
 36177   002EA0  C516  F6B1         	movff	canSendMessage@temp+1,_canDiagnostics+35
 36178   002EA4                     l7579:
 36179                           
 36180                           ; BSR set to: 6
 36181                           ;../../VLCBlib_PIC/can18_can_2.c: 661:     if (canId == 0) {
 36182   002EA4  0105               	movlb	5	; () banked
 36183   002EA6  51A8               	movf	_canId& (0+255),w,b
 36184   002EA8  A4D8               	btfss	status,2,c
 36185   002EAA  EF59  F017         	goto	u4941
 36186   002EAE  EF5B  F017         	goto	u4940
 36187   002EB2                     u4941:
 36188   002EB2  EF60  F017         	goto	l7583
 36189   002EB6                     u4940:
 36190   002EB6                     
 36191                           ; BSR set to: 5
 36192                           ;../../VLCBlib_PIC/can18_can_2.c: 663:         startEnumeration(1);
 36193   002EB6  0E01               	movlw	1
 36194   002EB8  ECDD  F03A         	call	_startEnumeration
 36195                           
 36196                           ;../../VLCBlib_PIC/can18_can_2.c: 664:     } else {
 36197   002EBC  EF62  F017         	goto	l652
 36198   002EC0                     l7583:
 36199                           
 36200                           ; BSR set to: 5
 36201                           ;../../VLCBlib_PIC/can18_can_2.c: 666:         C1FIFOCON2H |= 0x2;
 36202   002EC0  0101               	movlb	1	; () banked
 36203   002EC2  8369               	bsf	105,1,b	;volatile
 36204   002EC4                     l652:
 36205   002EC4  0012               	return		;funcret
 36206   002EC6                     __end_of_canSendMessage:
 36207                           	callstack 0
 36208                           
 36209 ;; *************** function _isEvent *****************
 36210 ;; Defined at:
 36211 ;;		line 1130 in file "../../VLCBlib_PIC/vlcb.c"
 36212 ;; Parameters:    Size  Location     Type
 36213 ;;  opc             1    wreg     unsigned char 
 36214 ;; Auto vars:     Size  Location     Type
 36215 ;;  opc             1    1[COMRAM] unsigned char 
 36216 ;; Return value:  Size  Location     Type
 36217 ;;                  1    wreg      enum E23474
 36218 ;; Registers used:
 36219 ;;		wreg, status,2, status,0
 36220 ;; Tracked objects:
 36221 ;;		On entry : 0/0
 36222 ;;		On exit  : 0/0
 36223 ;;		Unchanged: 0/0
 36224 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36226 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36228 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36229 ;;Total ram usage:        2 bytes
 36230 ;; Hardware stack levels used: 1
 36231 ;; Hardware stack levels required when called: 1
 36232 ;; This function calls:
 36233 ;;		Nothing
 36234 ;; This function is called by:
 36235 ;;		_canSendMessage
 36236 ;; This function uses a non-reentrant model
 36237 ;;
 36238                           
 36239                           	psect	text89
 36240   007E36                     __ptext89:
 36241                           	callstack 0
 36242   007E36                     _isEvent:
 36243                           	callstack 119
 36244                           
 36245                           ;incstack = 0
 36246                           ;isEvent@opc stored from wreg
 36247   007E36  6E02               	movwf	isEvent@opc^(0+1280),c
 36248   007E38                     
 36249                           ;../../VLCBlib_PIC/vlcb.c: 1131:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 36250   007E38  6A01               	clrf	_isEvent$5760^(0+1280),c
 36251   007E3A  5002               	movf	isEvent@opc^(0+1280),w,c
 36252   007E3C  0B90               	andlw	144
 36253   007E3E  0A90               	xorlw	144
 36254   007E40  A4D8               	btfss	status,2,c
 36255   007E42  EF25  F03F         	goto	u4671
 36256   007E46  EF27  F03F         	goto	u4670
 36257   007E4A                     u4671:
 36258   007E4A  EF34  F03F         	goto	l2036
 36259   007E4E                     u4670:
 36260   007E4E  5002               	movf	isEvent@opc^(0+1280),w,c
 36261   007E50  0AFF               	xorlw	255
 36262   007E52  0B06               	andlw	6
 36263   007E54  0A06               	xorlw	6
 36264   007E56  A4D8               	btfss	status,2,c
 36265   007E58  EF30  F03F         	goto	u4681
 36266   007E5C  EF32  F03F         	goto	u4680
 36267   007E60                     u4681:
 36268   007E60  EF34  F03F         	goto	l2036
 36269   007E64                     u4680:
 36270   007E64  0E01               	movlw	1
 36271   007E66  6E01               	movwf	_isEvent$5760^(0+1280),c
 36272   007E68                     l2036:
 36273   007E68  5001               	movf	_isEvent$5760^(0+1280),w,c
 36274   007E6A  0012               	return		;funcret
 36275   007E6C                     __end_of_isEvent:
 36276                           	callstack 0
 36277                           
 36278 ;; *************** function _have *****************
 36279 ;; Defined at:
 36280 ;;		line 848 in file "../../VLCBlib_PIC/vlcb.c"
 36281 ;; Parameters:    Size  Location     Type
 36282 ;;  id              1    wreg     unsigned char 
 36283 ;; Auto vars:     Size  Location     Type
 36284 ;;  id              1    2[COMRAM] unsigned char 
 36285 ;;  i               1    3[COMRAM] unsigned char 
 36286 ;; Return value:  Size  Location     Type
 36287 ;;                  1    wreg      enum E23601
 36288 ;; Registers used:
 36289 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 36290 ;; Tracked objects:
 36291 ;;		On entry : 0/0
 36292 ;;		On exit  : 0/0
 36293 ;;		Unchanged: 0/0
 36294 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36296 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36297 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36298 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36299 ;;Total ram usage:        4 bytes
 36300 ;; Hardware stack levels used: 1
 36301 ;; Hardware stack levels required when called: 1
 36302 ;; This function calls:
 36303 ;;		Nothing
 36304 ;; This function is called by:
 36305 ;;		_canSendMessage
 36306 ;;		_getParameterFlags
 36307 ;;		_getParameter
 36308 ;; This function uses a non-reentrant model
 36309 ;;
 36310                           
 36311                           	psect	text90
 36312   006E6E                     __ptext90:
 36313                           	callstack 0
 36314   006E6E                     _have:
 36315                           	callstack 119
 36316                           
 36317                           ;incstack = 0
 36318                           ;have@id stored from wreg
 36319   006E6E  6E03               	movwf	have@id^(0+1280),c
 36320   006E70                     
 36321                           ;../../VLCBlib_PIC/vlcb.c: 849:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 850:     for (i
      +                          =0; i<6; i++) {
 36322   006E70  6A04               	clrf	have@i^(0+1280),c
 36323   006E72                     l7337:
 36324                           
 36325                           ;../../VLCBlib_PIC/vlcb.c: 851:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 36326   006E72  5004               	movf	have@i^(0+1280),w,c
 36327   006E74  0D02               	mullw	2
 36328   006E76  0E89               	movlw	low _services
 36329   006E78  24F3               	addwf	243,w,c
 36330   006E7A  6EF6               	movwf	tblptrl,c
 36331   006E7C  0EFF               	movlw	high _services
 36332   006E7E  20F4               	addwfc	244,w,c
 36333   006E80  6EF7               	movwf	tblptrh,c
 36334   006E82                     	if	1	;There are 3 active tblptr bytes
 36335   006E82  6AF8               	clrf	tblptru,c
 36336   006E84  0E00               	movlw	low (__mediumconst shr (0+16))
 36337   006E86  22F8               	addwfc	tblptru,f,c
 36338   006E88                     	endif
 36339   006E88  0009               	tblrd		*+
 36340   006E8A  50F5               	movf	tablat,w,c
 36341   006E8C  0009               	tblrd		*+
 36342   006E8E  10F5               	iorwf	tablat,w,c
 36343   006E90  B4D8               	btfsc	status,2,c
 36344   006E92  EF4D  F037         	goto	u4691
 36345   006E96  EF4F  F037         	goto	u4690
 36346   006E9A                     u4691:
 36347   006E9A  EF72  F037         	goto	l7345
 36348   006E9E                     u4690:
 36349   006E9E  5004               	movf	have@i^(0+1280),w,c
 36350   006EA0  0D02               	mullw	2
 36351   006EA2  0E89               	movlw	low _services
 36352   006EA4  24F3               	addwf	243,w,c
 36353   006EA6  6EF6               	movwf	tblptrl,c
 36354   006EA8  0EFF               	movlw	high _services
 36355   006EAA  20F4               	addwfc	244,w,c
 36356   006EAC  6EF7               	movwf	tblptrh,c
 36357   006EAE                     	if	1	;There are 3 active tblptr bytes
 36358   006EAE  6AF8               	clrf	tblptru,c
 36359   006EB0  0E00               	movlw	low (__mediumconst shr (0+16))
 36360   006EB2  22F8               	addwfc	tblptru,f,c
 36361   006EB4                     	endif
 36362   006EB4  0009               	tblrd		*+
 36363   006EB6  C4F5 F501          	movff	tablat,??_have
 36364   006EBA  0009               	tblrd		*+
 36365   006EBC  C4F5 F502          	movff	tablat,??_have+1
 36366   006EC0  C501  F4F6         	movff	??_have,tblptrl
 36367   006EC4  C502  F4F7         	movff	??_have+1,tblptrh
 36368   006EC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36369   006EC8  6AF8               	clrf	tblptru,c
 36370   006ECA                     	endif
 36371   006ECA                     	if	0	;tblptru may be non-zero
 36372   006ECA                     	endif
 36373   006ECA  0008               	tblrd		*
 36374   006ECC  50F5               	movf	tablat,w,c
 36375   006ECE  1803               	xorwf	have@id^(0+1280),w,c
 36376   006ED0  A4D8               	btfss	status,2,c
 36377   006ED2  EF6D  F037         	goto	u4701
 36378   006ED6  EF6F  F037         	goto	u4700
 36379   006EDA                     u4701:
 36380   006EDA  EF72  F037         	goto	l7345
 36381   006EDE                     u4700:
 36382   006EDE                     
 36383                           ;../../VLCBlib_PIC/vlcb.c: 852:             return PRESENT;
 36384   006EDE  0E01               	movlw	1
 36385   006EE0  EF7C  F037         	goto	l1967
 36386   006EE4                     l7345:
 36387                           
 36388                           ;../../VLCBlib_PIC/vlcb.c: 854:     }
 36389   006EE4  2A04               	incf	have@i^(0+1280),f,c
 36390   006EE6  0E05               	movlw	5
 36391   006EE8  6404               	cpfsgt	have@i^(0+1280),c
 36392   006EEA  EF79  F037         	goto	u4711
 36393   006EEE  EF7B  F037         	goto	u4710
 36394   006EF2                     u4711:
 36395   006EF2  EF39  F037         	goto	l7337
 36396   006EF6                     u4710:
 36397   006EF6                     
 36398                           ;../../VLCBlib_PIC/vlcb.c: 855:     return NOT_PRESENT;
 36399   006EF6  0E00               	movlw	0
 36400   006EF8                     l1967:
 36401   006EF8  0012               	return		;funcret
 36402   006EFA                     __end_of_have:
 36403                           	callstack 0
 36404                           
 36405 ;; *************** function _getNumTxBuffersInUse *****************
 36406 ;; Defined at:
 36407 ;;		line 532 in file "../../VLCBlib_PIC/can18_can_2.c"
 36408 ;; Parameters:    Size  Location     Type
 36409 ;;		None
 36410 ;; Auto vars:     Size  Location     Type
 36411 ;;  i16             2    4[COMRAM] short 
 36412 ;; Return value:  Size  Location     Type
 36413 ;;                  1    wreg      unsigned char 
 36414 ;; Registers used:
 36415 ;;		wreg, status,2, status,0
 36416 ;; Tracked objects:
 36417 ;;		On entry : 0/0
 36418 ;;		On exit  : 0/0
 36419 ;;		Unchanged: 0/0
 36420 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36423 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36424 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36425 ;;Total ram usage:        6 bytes
 36426 ;; Hardware stack levels used: 1
 36427 ;; Hardware stack levels required when called: 1
 36428 ;; This function calls:
 36429 ;;		Nothing
 36430 ;; This function is called by:
 36431 ;;		_canGetDiagnostic
 36432 ;;		_canSendMessage
 36433 ;; This function uses a non-reentrant model
 36434 ;;
 36435                           
 36436                           	psect	text91
 36437   00720C                     __ptext91:
 36438                           	callstack 0
 36439   00720C                     _getNumTxBuffersInUse:
 36440                           	callstack 119
 36441   00720C                     
 36442                           ;../../VLCBlib_PIC/can18_can_2.c: 533:     if (! C1FIFOSTA2Lbits.TFNRFNIF) {
 36443   00720C  0101               	movlb	1	; () banked
 36444   00720E  B16C               	btfsc	108,0,b	;volatile
 36445   007210  EF0C  F039         	goto	u4611
 36446   007214  EF0E  F039         	goto	u4610
 36447   007218                     u4611:
 36448   007218  EF11  F039         	goto	l7297
 36449   00721C                     u4610:
 36450   00721C                     
 36451                           ; BSR set to: 1
 36452                           ;../../VLCBlib_PIC/can18_can_2.c: 534:         return 32;
 36453   00721C  0E20               	movlw	32
 36454   00721E  EF42  F039         	goto	l635
 36455   007222                     l7297:
 36456                           
 36457                           ; BSR set to: 1
 36458                           ;../../VLCBlib_PIC/can18_can_2.c: 536:         int16_t i16;;../../VLCBlib_PIC/can18_can_
      +                          2.c: 538:         i16 = (int16_t)((C1FIFOUA2 - ((0x3BB0 +((8 +8)*4))+((8 +8)*1)))/(8+8))
      +                          ;
 36459   007222  0E00               	movlw	0
 36460   007224  2570               	addwf	112,w,b	;volatile
 36461   007226  6E01               	movwf	??_getNumTxBuffersInUse^(0+1280),c
 36462   007228  0EC4               	movlw	196
 36463   00722A  2171               	addwfc	113,w,b	;volatile
 36464   00722C  6E02               	movwf	(??_getNumTxBuffersInUse+1)^(0+1280),c
 36465   00722E  0EFF               	movlw	255
 36466   007230  2172               	addwfc	114,w,b	;volatile
 36467   007232  6E03               	movwf	(??_getNumTxBuffersInUse+2)^(0+1280),c
 36468   007234  0EFF               	movlw	255
 36469   007236  2173               	addwfc	115,w,b	;volatile
 36470   007238  6E04               	movwf	(??_getNumTxBuffersInUse+3)^(0+1280),c
 36471   00723A  0E05               	movlw	5
 36472   00723C  EF25  F039         	goto	u4620
 36473   007240                     u4625:
 36474   007240  90D8               	bcf	status,0,c
 36475   007242  3204               	rrcf	(??_getNumTxBuffersInUse+3)^(0+1280),f,c
 36476   007244  3203               	rrcf	(??_getNumTxBuffersInUse+2)^(0+1280),f,c
 36477   007246  3202               	rrcf	(??_getNumTxBuffersInUse+1)^(0+1280),f,c
 36478   007248  3201               	rrcf	??_getNumTxBuffersInUse^(0+1280),f,c
 36479   00724A                     u4620:
 36480   00724A  2EE8               	decfsz	wreg,f,c
 36481   00724C  EF20  F039         	goto	u4625
 36482   007250  C501  F505         	movff	??_getNumTxBuffersInUse,getNumTxBuffersInUse@i16
 36483   007254  C502  F506         	movff	??_getNumTxBuffersInUse+1,getNumTxBuffersInUse@i16+1
 36484                           
 36485                           ;../../VLCBlib_PIC/can18_can_2.c: 539:         i16 = (int16_t)(i16 - C1FIFOSTA2Hbits.FIF
      +                          OCI);
 36486   007258  516D               	movf	109,w,b	;volatile
 36487   00725A  0B1F               	andlw	31
 36488   00725C  6E01               	movwf	??_getNumTxBuffersInUse^(0+1280),c
 36489   00725E  5001               	movf	??_getNumTxBuffersInUse^(0+1280),w,c
 36490   007260  5C05               	subwf	getNumTxBuffersInUse@i16^(0+1280),w,c
 36491   007262  6E05               	movwf	getNumTxBuffersInUse@i16^(0+1280),c
 36492   007264  5006               	movf	(getNumTxBuffersInUse@i16+1)^(0+1280),w,c
 36493   007266  A0D8               	btfss	status,0,c
 36494   007268  0406               	decf	(getNumTxBuffersInUse@i16+1)^(0+1280),w,c
 36495   00726A  6E06               	movwf	(getNumTxBuffersInUse@i16+1)^(0+1280),c
 36496                           
 36497                           ;../../VLCBlib_PIC/can18_can_2.c: 540:         if (i16 < 0) i16 += 32;
 36498   00726C  BE06               	btfsc	(getNumTxBuffersInUse@i16+1)^(0+1280),7,c
 36499   00726E  EF3D  F039         	goto	u4630
 36500   007272  EF3B  F039         	goto	u4631
 36501   007276                     u4631:
 36502   007276  EF41  F039         	goto	l7301
 36503   00727A                     u4630:
 36504   00727A                     
 36505                           ; BSR set to: 1
 36506   00727A  0E20               	movlw	32
 36507   00727C  2605               	addwf	getNumTxBuffersInUse@i16^(0+1280),f,c
 36508   00727E  0E00               	movlw	0
 36509   007280  2206               	addwfc	(getNumTxBuffersInUse@i16+1)^(0+1280),f,c
 36510   007282                     l7301:
 36511                           
 36512                           ; BSR set to: 1
 36513                           ;../../VLCBlib_PIC/can18_can_2.c: 541:         return (uint8_t)i16;
 36514   007282  5005               	movf	getNumTxBuffersInUse@i16^(0+1280),w,c
 36515   007284                     l635:
 36516                           
 36517                           ; BSR set to: 1
 36518   007284  0012               	return		;funcret
 36519   007286                     __end_of_getNumTxBuffersInUse:
 36520                           	callstack 0
 36521                           
 36522 ;; *************** function _getNumRxBuffersInUse *****************
 36523 ;; Defined at:
 36524 ;;		line 550 in file "../../VLCBlib_PIC/can18_can_2.c"
 36525 ;; Parameters:    Size  Location     Type
 36526 ;;		None
 36527 ;; Auto vars:     Size  Location     Type
 36528 ;;  i16             2    4[COMRAM] short 
 36529 ;; Return value:  Size  Location     Type
 36530 ;;                  1    wreg      unsigned char 
 36531 ;; Registers used:
 36532 ;;		wreg, status,2, status,0
 36533 ;; Tracked objects:
 36534 ;;		On entry : 0/0
 36535 ;;		On exit  : 0/0
 36536 ;;		Unchanged: 0/0
 36537 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36539 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36540 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36541 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36542 ;;Total ram usage:        6 bytes
 36543 ;; Hardware stack levels used: 1
 36544 ;; Hardware stack levels required when called: 1
 36545 ;; This function calls:
 36546 ;;		Nothing
 36547 ;; This function is called by:
 36548 ;;		_canGetDiagnostic
 36549 ;;		_canSendMessage
 36550 ;;		_canReceiveMessage
 36551 ;; This function uses a non-reentrant model
 36552 ;;
 36553                           
 36554                           	psect	text92
 36555   007464                     __ptext92:
 36556                           	callstack 0
 36557   007464                     _getNumRxBuffersInUse:
 36558                           	callstack 119
 36559   007464                     
 36560                           ;../../VLCBlib_PIC/can18_can_2.c: 551:     if (C1FIFOSTA3Lbits.TFERFFIF) {
 36561   007464  0101               	movlb	1	; () banked
 36562   007466  A578               	btfss	120,2,b	;volatile
 36563   007468  EF38  F03A         	goto	u4641
 36564   00746C  EF3A  F03A         	goto	u4640
 36565   007470                     u4641:
 36566   007470  EF3D  F03A         	goto	l7313
 36567   007474                     u4640:
 36568   007474                     
 36569                           ; BSR set to: 1
 36570                           ;../../VLCBlib_PIC/can18_can_2.c: 552:         return 32;
 36571   007474  0E20               	movlw	32
 36572   007476  EF6B  F03A         	goto	l641
 36573   00747A                     l7313:
 36574                           
 36575                           ; BSR set to: 1
 36576                           ;../../VLCBlib_PIC/can18_can_2.c: 554:         int16_t i16;;../../VLCBlib_PIC/can18_can_
      +                          2.c: 556:         i16 = (int16_t)(((((0x3BB0 +((8 +8)*4))+((8 +8)*1))+((8 +8)*32)) - C1F
      +                          IFOUA3)/(8+8));
 36577   00747A  517C               	movf	124,w,b	;volatile
 36578   00747C  0800               	sublw	0
 36579   00747E  6E01               	movwf	??_getNumRxBuffersInUse^(0+1280),c
 36580   007480  0E3E               	movlw	62
 36581   007482  557D               	subfwb	125,w,b	;volatile
 36582   007484  6E02               	movwf	(??_getNumRxBuffersInUse+1)^(0+1280),c
 36583   007486  0E00               	movlw	0
 36584   007488  557E               	subfwb	126,w,b	;volatile
 36585   00748A  6E03               	movwf	(??_getNumRxBuffersInUse+2)^(0+1280),c
 36586   00748C  0E00               	movlw	0
 36587   00748E  557F               	subfwb	127,w,b	;volatile
 36588   007490  6E04               	movwf	(??_getNumRxBuffersInUse+3)^(0+1280),c
 36589   007492  0E05               	movlw	5
 36590   007494  EF51  F03A         	goto	u4650
 36591   007498                     u4655:
 36592   007498  90D8               	bcf	status,0,c
 36593   00749A  3204               	rrcf	(??_getNumRxBuffersInUse+3)^(0+1280),f,c
 36594   00749C  3203               	rrcf	(??_getNumRxBuffersInUse+2)^(0+1280),f,c
 36595   00749E  3202               	rrcf	(??_getNumRxBuffersInUse+1)^(0+1280),f,c
 36596   0074A0  3201               	rrcf	??_getNumRxBuffersInUse^(0+1280),f,c
 36597   0074A2                     u4650:
 36598   0074A2  2EE8               	decfsz	wreg,f,c
 36599   0074A4  EF4C  F03A         	goto	u4655
 36600   0074A8  C501  F505         	movff	??_getNumRxBuffersInUse,getNumRxBuffersInUse@i16
 36601   0074AC  C502  F506         	movff	??_getNumRxBuffersInUse+1,getNumRxBuffersInUse@i16+1
 36602                           
 36603                           ;../../VLCBlib_PIC/can18_can_2.c: 557:         i16 += C1FIFOSTA3Hbits.FIFOCI;
 36604   0074B0  5179               	movf	121,w,b	;volatile
 36605   0074B2  0B1F               	andlw	31
 36606   0074B4  6E01               	movwf	??_getNumRxBuffersInUse^(0+1280),c
 36607   0074B6  5001               	movf	??_getNumRxBuffersInUse^(0+1280),w,c
 36608   0074B8  2605               	addwf	getNumRxBuffersInUse@i16^(0+1280),f,c
 36609   0074BA  0E00               	movlw	0
 36610   0074BC  2206               	addwfc	(getNumRxBuffersInUse@i16+1)^(0+1280),f,c
 36611                           
 36612                           ;../../VLCBlib_PIC/can18_can_2.c: 558:         if (i16 < 0) i16 += 32;
 36613   0074BE  BE06               	btfsc	(getNumRxBuffersInUse@i16+1)^(0+1280),7,c
 36614   0074C0  EF66  F03A         	goto	u4660
 36615   0074C4  EF64  F03A         	goto	u4661
 36616   0074C8                     u4661:
 36617   0074C8  EF6A  F03A         	goto	l7317
 36618   0074CC                     u4660:
 36619   0074CC                     
 36620                           ; BSR set to: 1
 36621   0074CC  0E20               	movlw	32
 36622   0074CE  2605               	addwf	getNumRxBuffersInUse@i16^(0+1280),f,c
 36623   0074D0  0E00               	movlw	0
 36624   0074D2  2206               	addwfc	(getNumRxBuffersInUse@i16+1)^(0+1280),f,c
 36625   0074D4                     l7317:
 36626                           
 36627                           ; BSR set to: 1
 36628                           ;../../VLCBlib_PIC/can18_can_2.c: 559:         return (uint8_t) i16;
 36629   0074D4  5005               	movf	getNumRxBuffersInUse@i16^(0+1280),w,c
 36630   0074D6                     l641:
 36631                           
 36632                           ; BSR set to: 1
 36633   0074D6  0012               	return		;funcret
 36634   0074D8                     __end_of_getNumRxBuffersInUse:
 36635                           	callstack 0
 36636                           
 36637 ;; *************** function _getNextWriteMessage *****************
 36638 ;; Defined at:
 36639 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 36640 ;; Parameters:    Size  Location     Type
 36641 ;;  q               2    0[COMRAM] PTR struct MessageQueue
 36642 ;;		 -> rxQueue(5), 
 36643 ;; Auto vars:     Size  Location     Type
 36644 ;;  wr              1   11[COMRAM] unsigned char 
 36645 ;; Return value:  Size  Location     Type
 36646 ;;                  2    0[COMRAM] PTR struct Message
 36647 ;; Registers used:
 36648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36649 ;; Tracked objects:
 36650 ;;		On entry : 0/0
 36651 ;;		On exit  : 0/0
 36652 ;;		Unchanged: 0/0
 36653 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36656 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36657 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36658 ;;Total ram usage:       12 bytes
 36659 ;; Hardware stack levels used: 1
 36660 ;; Hardware stack levels required when called: 1
 36661 ;; This function calls:
 36662 ;;		Nothing
 36663 ;; This function is called by:
 36664 ;;		_canSendMessage
 36665 ;; This function uses a non-reentrant model
 36666 ;;
 36667                           
 36668                           	psect	text93
 36669   005924                     __ptext93:
 36670                           	callstack 0
 36671   005924                     _getNextWriteMessage:
 36672                           	callstack 119
 36673   005924  EE20 F002          	lfsr	2,2
 36674   005928  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36675   00592A  26D9               	addwf	fsr2l,f,c
 36676   00592C  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36677   00592E  22DA               	addwfc	fsr2h,f,c
 36678   005930  50DF               	movf	indf2,w,c
 36679   005932  6E03               	movwf	??_getNextWriteMessage^(0+1280),c
 36680   005934  6A04               	clrf	(??_getNextWriteMessage+1)^(0+1280),c
 36681   005936  EE20 F004          	lfsr	2,4
 36682   00593A  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36683   00593C  26D9               	addwf	fsr2l,f,c
 36684   00593E  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36685   005940  22DA               	addwfc	fsr2h,f,c
 36686   005942  50DF               	movf	indf2,w,c
 36687   005944  6E05               	movwf	(??_getNextWriteMessage+2)^(0+1280),c
 36688   005946  0EFF               	movlw	255
 36689   005948  2405               	addwf	(??_getNextWriteMessage+2)^(0+1280),w,c
 36690   00594A  6E06               	movwf	(??_getNextWriteMessage+3)^(0+1280),c
 36691   00594C  6A07               	clrf	(??_getNextWriteMessage+4)^(0+1280),c
 36692   00594E  0EFF               	movlw	255
 36693   005950  2207               	addwfc	(??_getNextWriteMessage+4)^(0+1280),f,c
 36694   005952  EE20 F003          	lfsr	2,3
 36695   005956  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36696   005958  26D9               	addwf	fsr2l,f,c
 36697   00595A  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36698   00595C  22DA               	addwfc	fsr2h,f,c
 36699   00595E  50DF               	movf	indf2,w,c
 36700   005960  6E08               	movwf	(??_getNextWriteMessage+5)^(0+1280),c
 36701   005962  6A09               	clrf	(??_getNextWriteMessage+6)^(0+1280),c
 36702   005964  0E01               	movlw	1
 36703   005966  2608               	addwf	(??_getNextWriteMessage+5)^(0+1280),f,c
 36704   005968  0E00               	movlw	0
 36705   00596A  2209               	addwfc	(??_getNextWriteMessage+6)^(0+1280),f,c
 36706   00596C  5006               	movf	(??_getNextWriteMessage+3)^(0+1280),w,c
 36707   00596E  1408               	andwf	(??_getNextWriteMessage+5)^(0+1280),w,c
 36708   005970  6E0A               	movwf	(??_getNextWriteMessage+7)^(0+1280),c
 36709   005972  5007               	movf	(??_getNextWriteMessage+4)^(0+1280),w,c
 36710   005974  1409               	andwf	(??_getNextWriteMessage+6)^(0+1280),w,c
 36711   005976  6E0B               	movwf	(??_getNextWriteMessage+8)^(0+1280),c
 36712   005978  5003               	movf	??_getNextWriteMessage^(0+1280),w,c
 36713   00597A  180A               	xorwf	(??_getNextWriteMessage+7)^(0+1280),w,c
 36714   00597C  E107               	bnz	u4721
 36715   00597E  5004               	movf	(??_getNextWriteMessage+1)^(0+1280),w,c
 36716   005980  180B               	xorwf	(??_getNextWriteMessage+8)^(0+1280),w,c
 36717   005982  A4D8               	btfss	status,2,c
 36718   005984  EFC6  F02C         	goto	u4721
 36719   005988  EFC8  F02C         	goto	u4720
 36720   00598C                     u4721:
 36721   00598C  EFCE  F02C         	goto	l7359
 36722   005990                     u4720:
 36723   005990  0E00               	movlw	0
 36724   005992  6E01               	movwf	?_getNextWriteMessage^(0+1280),c
 36725   005994  0E00               	movlw	0
 36726   005996  6E02               	movwf	(?_getNextWriteMessage+1)^(0+1280),c
 36727   005998  EF0D  F02D         	goto	l1166
 36728   00599C                     l7359:
 36729   00599C  EE20 F003          	lfsr	2,3
 36730   0059A0  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36731   0059A2  26D9               	addwf	fsr2l,f,c
 36732   0059A4  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36733   0059A6  22DA               	addwfc	fsr2h,f,c
 36734   0059A8  50DF               	movf	indf2,w,c
 36735   0059AA  6E0C               	movwf	getNextWriteMessage@wr^(0+1280),c
 36736   0059AC  EE20 F003          	lfsr	2,3
 36737   0059B0  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36738   0059B2  26D9               	addwf	fsr2l,f,c
 36739   0059B4  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36740   0059B6  22DA               	addwfc	fsr2h,f,c
 36741   0059B8  2ADF               	incf	indf2,f,c
 36742   0059BA  EE20 F004          	lfsr	2,4
 36743   0059BE  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36744   0059C0  26D9               	addwf	fsr2l,f,c
 36745   0059C2  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36746   0059C4  22DA               	addwfc	fsr2h,f,c
 36747   0059C6  EE10 F003          	lfsr	1,3
 36748   0059CA  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36749   0059CC  26E1               	addwf	fsr1l,f,c
 36750   0059CE  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36751   0059D0  22E2               	addwfc	fsr1h,f,c
 36752   0059D2  50DE               	movf	postinc2,w,c
 36753   0059D4  5CE6               	subwf	postinc1,w,c
 36754   0059D6  A0D8               	btfss	status,0,c
 36755   0059D8  EFF0  F02C         	goto	u4731
 36756   0059DC  EFF2  F02C         	goto	u4730
 36757   0059E0                     u4731:
 36758   0059E0  EFF9  F02C         	goto	l7365
 36759   0059E4                     u4730:
 36760   0059E4  EE20 F003          	lfsr	2,3
 36761   0059E8  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36762   0059EA  26D9               	addwf	fsr2l,f,c
 36763   0059EC  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36764   0059EE  22DA               	addwfc	fsr2h,f,c
 36765   0059F0  6ADF               	clrf	indf2,c
 36766   0059F2                     l7365:
 36767   0059F2  500C               	movf	getNextWriteMessage@wr^(0+1280),w,c
 36768   0059F4  0D09               	mullw	9
 36769   0059F6  C4F3 F503          	movff	prodl,??_getNextWriteMessage
 36770   0059FA  C4F4 F504          	movff	prodh,??_getNextWriteMessage+1
 36771   0059FE  C501  F4D9         	movff	getNextWriteMessage@q,fsr2l
 36772   005A02  C502  F4DA         	movff	getNextWriteMessage@q+1,fsr2h
 36773   005A06  C4DE F505          	movff	postinc2,??_getNextWriteMessage+2
 36774   005A0A  C4DD F506          	movff	postdec2,??_getNextWriteMessage+3
 36775   005A0E  5003               	movf	??_getNextWriteMessage^(0+1280),w,c
 36776   005A10  2405               	addwf	(??_getNextWriteMessage+2)^(0+1280),w,c
 36777   005A12  6E01               	movwf	?_getNextWriteMessage^(0+1280),c
 36778   005A14  5004               	movf	(??_getNextWriteMessage+1)^(0+1280),w,c
 36779   005A16  2006               	addwfc	(??_getNextWriteMessage+3)^(0+1280),w,c
 36780   005A18  6E02               	movwf	(?_getNextWriteMessage+1)^(0+1280),c
 36781   005A1A                     l1166:
 36782   005A1A  0012               	return		;funcret
 36783   005A1C                     __end_of_getNextWriteMessage:
 36784                           	callstack 0
 36785                           
 36786 ;; *************** function _processEnumeration *****************
 36787 ;; Defined at:
 36788 ;;		line 828 in file "../../VLCBlib_PIC/can18_can_2.c"
 36789 ;; Parameters:    Size  Location     Type
 36790 ;;		None
 36791 ;; Auto vars:     Size  Location     Type
 36792 ;;  i               1   27[COMRAM] unsigned char 
 36793 ;;  newCanId        1   26[COMRAM] unsigned char 
 36794 ;;  enumResult      1   25[COMRAM] unsigned char 
 36795 ;; Return value:  Size  Location     Type
 36796 ;;                  1    wreg      void 
 36797 ;; Registers used:
 36798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36799 ;; Tracked objects:
 36800 ;;		On entry : 0/0
 36801 ;;		On exit  : 0/0
 36802 ;;		Unchanged: 0/0
 36803 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36805 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36806 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36807 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36808 ;;Total ram usage:        7 bytes
 36809 ;; Hardware stack levels used: 1
 36810 ;; Hardware stack levels required when called: 7
 36811 ;; This function calls:
 36812 ;;		_setNewCanId
 36813 ;;		_startEnumeration
 36814 ;;		_tickGet
 36815 ;;		_updateModuleErrorStatus
 36816 ;; This function is called by:
 36817 ;;		_canPoll
 36818 ;; This function uses a non-reentrant model
 36819 ;;
 36820                           
 36821                           	psect	text94
 36822   00461E                     __ptext94:
 36823                           	callstack 0
 36824   00461E                     _processEnumeration:
 36825                           	callstack 117
 36826   00461E                     
 36827                           ;../../VLCBlib_PIC/can18_can_2.c: 829:     uint8_t i, newCanId, enumResult;;../../VLCBli
      +                          b_PIC/can18_can_2.c: 831:     switch (enumerationState) {
 36828   00461E  EFD6  F023         	goto	l8561
 36829   004622                     l8501:
 36830                           
 36831                           ; BSR set to: 5
 36832                           ;../../VLCBlib_PIC/can18_can_2.c: 834:             if ((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) ) {
 36833   004622  ECF7  F039         	call	_tickGet	;wreg free
 36834   004626  0105               	movlb	5	; () banked
 36835   004628  5174               	movf	_enumerationStartTime& (0+255),w,b
 36836   00462A  5C01               	subwf	?_tickGet^(0+1280),w,c
 36837   00462C  6E16               	movwf	??_processEnumeration^(0+1280),c
 36838   00462E  5175               	movf	(_enumerationStartTime+1)& (0+255),w,b
 36839   004630  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 36840   004632  6E17               	movwf	(??_processEnumeration+1)^(0+1280),c
 36841   004634  5176               	movf	(_enumerationStartTime+2)& (0+255),w,b
 36842   004636  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 36843   004638  6E18               	movwf	(??_processEnumeration+2)^(0+1280),c
 36844   00463A  5177               	movf	(_enumerationStartTime+3)& (0+255),w,b
 36845   00463C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 36846   00463E  6E19               	movwf	(??_processEnumeration+3)^(0+1280),c
 36847   004640  5019               	movf	(??_processEnumeration+3)^(0+1280),w,c
 36848   004642  1018               	iorwf	(??_processEnumeration+2)^(0+1280),w,c
 36849   004644  E10B               	bnz	u5860
 36850   004646  0ED5               	movlw	213
 36851   004648  5C16               	subwf	??_processEnumeration^(0+1280),w,c
 36852   00464A  0E30               	movlw	48
 36853   00464C  5817               	subwfb	(??_processEnumeration+1)^(0+1280),w,c
 36854   00464E  A0D8               	btfss	status,0,c
 36855   004650  EF2C  F023         	goto	u5861
 36856   004654  EF2E  F023         	goto	u5860
 36857   004658                     u5861:
 36858   004658  EFF0  F023         	goto	l720
 36859   00465C                     u5860:
 36860   00465C                     
 36861                           ; BSR set to: 5
 36862                           ;../../VLCBlib_PIC/can18_can_2.c: 838:                 startEnumeration(0);
 36863   00465C  0E00               	movlw	0
 36864   00465E  ECDD  F03A         	call	_startEnumeration
 36865   004662  EFF0  F023         	goto	l720
 36866   004666                     l8505:
 36867                           
 36868                           ; BSR set to: 5
 36869                           ;../../VLCBlib_PIC/can18_can_2.c: 846:             if ((tickGet() - enumerationStartTime
      +                          .val) > (62500/10) ) {
 36870   004666  ECF7  F039         	call	_tickGet	;wreg free
 36871   00466A  0105               	movlb	5	; () banked
 36872   00466C  5174               	movf	_enumerationStartTime& (0+255),w,b
 36873   00466E  5C01               	subwf	?_tickGet^(0+1280),w,c
 36874   004670  6E16               	movwf	??_processEnumeration^(0+1280),c
 36875   004672  5175               	movf	(_enumerationStartTime+1)& (0+255),w,b
 36876   004674  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 36877   004676  6E17               	movwf	(??_processEnumeration+1)^(0+1280),c
 36878   004678  5176               	movf	(_enumerationStartTime+2)& (0+255),w,b
 36879   00467A  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 36880   00467C  6E18               	movwf	(??_processEnumeration+2)^(0+1280),c
 36881   00467E  5177               	movf	(_enumerationStartTime+3)& (0+255),w,b
 36882   004680  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 36883   004682  6E19               	movwf	(??_processEnumeration+3)^(0+1280),c
 36884   004684  5019               	movf	(??_processEnumeration+3)^(0+1280),w,c
 36885   004686  1018               	iorwf	(??_processEnumeration+2)^(0+1280),w,c
 36886   004688  E10B               	bnz	u5870
 36887   00468A  0E6B               	movlw	107
 36888   00468C  5C16               	subwf	??_processEnumeration^(0+1280),w,c
 36889   00468E  0E18               	movlw	24
 36890   004690  5817               	subwfb	(??_processEnumeration+1)^(0+1280),w,c
 36891   004692  A0D8               	btfss	status,0,c
 36892   004694  EF4E  F023         	goto	u5871
 36893   004698  EF50  F023         	goto	u5870
 36894   00469C                     u5871:
 36895   00469C  EFF0  F023         	goto	l720
 36896   0046A0                     u5870:
 36897   0046A0                     
 36898                           ; BSR set to: 5
 36899                           ;../../VLCBlib_PIC/can18_can_2.c: 851:                 for (i=0; (enumerationResults[i] 
      +                          == 0xFF) && (i < (0x7F/8)+1); i++) {
 36900   0046A0  6A1C               	clrf	processEnumeration@i^(0+1280),c
 36901   0046A2  EF54  F023         	goto	l8511
 36902   0046A6                     l8509:
 36903                           
 36904                           ;../../VLCBlib_PIC/can18_can_2.c: 853:                 }
 36905   0046A6  2A1C               	incf	processEnumeration@i^(0+1280),f,c
 36906   0046A8                     l8511:
 36907   0046A8  0E32               	movlw	low _enumerationResults
 36908   0046AA  241C               	addwf	processEnumeration@i^(0+1280),w,c
 36909   0046AC  6ED9               	movwf	fsr2l,c
 36910   0046AE  6ADA               	clrf	fsr2h,c
 36911   0046B0  0E06               	movlw	high _enumerationResults
 36912   0046B2  22DA               	addwfc	fsr2h,f,c
 36913   0046B4  28DE               	incf	postinc2,w,c
 36914   0046B6  A4D8               	btfss	status,2,c
 36915   0046B8  EF60  F023         	goto	u5881
 36916   0046BC  EF62  F023         	goto	u5880
 36917   0046C0                     u5881:
 36918   0046C0  EF6A  F023         	goto	l8515
 36919   0046C4                     u5880:
 36920   0046C4  0E0F               	movlw	15
 36921   0046C6  641C               	cpfsgt	processEnumeration@i^(0+1280),c
 36922   0046C8  EF68  F023         	goto	u5891
 36923   0046CC  EF6A  F023         	goto	u5890
 36924   0046D0                     u5891:
 36925   0046D0  EF53  F023         	goto	l8509
 36926   0046D4                     u5890:
 36927   0046D4                     l8515:
 36928                           
 36929                           ;../../VLCBlib_PIC/can18_can_2.c: 854:                 if ((enumResult = enumerationResu
      +                          lts[i]) != 0xFF) {
 36930   0046D4  0E32               	movlw	low _enumerationResults
 36931   0046D6  241C               	addwf	processEnumeration@i^(0+1280),w,c
 36932   0046D8  6ED9               	movwf	fsr2l,c
 36933   0046DA  6ADA               	clrf	fsr2h,c
 36934   0046DC  0E06               	movlw	high _enumerationResults
 36935   0046DE  22DA               	addwfc	fsr2h,f,c
 36936   0046E0  50DF               	movf	indf2,w,c
 36937   0046E2  6E1A               	movwf	processEnumeration@enumResult^(0+1280),c
 36938   0046E4  281A               	incf	processEnumeration@enumResult^(0+1280),w,c
 36939   0046E6  B4D8               	btfsc	status,2,c
 36940   0046E8  EF78  F023         	goto	u5901
 36941   0046EC  EF7A  F023         	goto	u5900
 36942   0046F0                     u5901:
 36943   0046F0  EFA2  F023         	goto	l8533
 36944   0046F4                     u5900:
 36945   0046F4                     
 36946                           ;../../VLCBlib_PIC/can18_can_2.c: 855:                     for (newCanId = i*8; (enumRes
      +                          ult & 0x01); newCanId++) {
 36947   0046F4  501C               	movf	processEnumeration@i^(0+1280),w,c
 36948   0046F6  0D08               	mullw	8
 36949   0046F8  C4F3 F51B          	movff	prodl,processEnumeration@newCanId
 36950   0046FC  EF83  F023         	goto	l8523
 36951   004700                     l8519:
 36952                           
 36953                           ;../../VLCBlib_PIC/can18_can_2.c: 856:                         enumResult >>= 1;
 36954   004700  90D8               	bcf	status,0,c
 36955   004702  321A               	rrcf	processEnumeration@enumResult^(0+1280),f,c
 36956   004704                     
 36957                           ;../../VLCBlib_PIC/can18_can_2.c: 857:                     }
 36958   004704  2A1B               	incf	processEnumeration@newCanId^(0+1280),f,c
 36959   004706                     l8523:
 36960   004706  B01A               	btfsc	processEnumeration@enumResult^(0+1280),0,c
 36961   004708  EF88  F023         	goto	u5911
 36962   00470C  EF8A  F023         	goto	u5910
 36963   004710                     u5911:
 36964   004710  EF80  F023         	goto	l8519
 36965   004714                     u5910:
 36966   004714                     
 36967                           ;../../VLCBlib_PIC/can18_can_2.c: 858:                     if ((newCanId >= 1) && (newCa
      +                          nId <= 99)) {
 36968   004714  501B               	movf	processEnumeration@newCanId^(0+1280),w,c
 36969   004716  B4D8               	btfsc	status,2,c
 36970   004718  EF90  F023         	goto	u5921
 36971   00471C  EF92  F023         	goto	u5920
 36972   004720                     u5921:
 36973   004720  EFA2  F023         	goto	l8533
 36974   004724                     u5920:
 36975   004724  0E64               	movlw	100
 36976   004726  601B               	cpfslt	processEnumeration@newCanId^(0+1280),c
 36977   004728  EF98  F023         	goto	u5931
 36978   00472C  EF9A  F023         	goto	u5930
 36979   004730                     u5931:
 36980   004730  EFA2  F023         	goto	l8533
 36981   004734                     u5930:
 36982   004734                     
 36983                           ;../../VLCBlib_PIC/can18_can_2.c: 860:                         canId = newCanId;
 36984   004734  C51B  F5A8         	movff	processEnumeration@newCanId,_canId
 36985   004738                     
 36986                           ;../../VLCBlib_PIC/can18_can_2.c: 861:                         setNewCanId(canId);
 36987   004738  0105               	movlb	5	; () banked
 36988   00473A  51A8               	movf	_canId& (0+255),w,b
 36989   00473C  EC1A  F03E         	call	_setNewCanId
 36990                           
 36991                           ;../../VLCBlib_PIC/can18_can_2.c: 862:                     } else {
 36992   004740  EFA7  F023         	goto	l8541
 36993   004744                     l8533:
 36994                           
 36995                           ;../../VLCBlib_PIC/can18_can_2.c: 864:                         canDiagnostics[0x10].asUi
      +                          nt++;
 36996   004744  0106               	movlb	6	; () banked
 36997   004746  4BAE               	infsnz	(_canDiagnostics+32)& (0+255),f,b
 36998   004748  2BAF               	incf	(_canDiagnostics+33)& (0+255),f,b
 36999   00474A                     
 37000                           ; BSR set to: 6
 37001                           ;../../VLCBlib_PIC/can18_can_2.c: 865:                         updateModuleErrorStatus()
      +                          ;
 37002   00474A  EC65  F041         	call	_updateModuleErrorStatus	;wreg free
 37003   00474E                     l8541:
 37004                           
 37005                           ;../../VLCBlib_PIC/can18_can_2.c: 875:                 if (enumerationState == ENUMERATI
      +                          ON_IN_PROGRESS_TX_WAITING) {
 37006   00474E  0E03               	movlw	3
 37007   004750  0105               	movlb	5	; () banked
 37008   004752  19A5               	xorwf	_enumerationState& (0+255),w,b
 37009   004754  A4D8               	btfss	status,2,c
 37010   004756  EFAF  F023         	goto	u5941
 37011   00475A  EFB1  F023         	goto	u5940
 37012   00475E                     u5941:
 37013   00475E  EFD2  F023         	goto	l8557
 37014   004762                     u5940:
 37015   004762                     
 37016                           ; BSR set to: 5
 37017                           ;../../VLCBlib_PIC/can18_can_2.c: 877:                     for (i=0; i< 32; i++) {
 37018   004762  6A1C               	clrf	processEnumeration@i^(0+1280),c
 37019   004764                     l8549:
 37020                           
 37021                           ; BSR set to: 5
 37022                           ;../../VLCBlib_PIC/can18_can_2.c: 878:                         *((uint8_t*)(((0x3BB0 +((
      +                          8 +8)*4))+((8 +8)*1)) + (i* (8 + 8)))) = canId & 0x7f;
 37023   004764  501C               	movf	processEnumeration@i^(0+1280),w,c
 37024   004766  6E16               	movwf	??_processEnumeration^(0+1280),c
 37025   004768  6A17               	clrf	(??_processEnumeration+1)^(0+1280),c
 37026   00476A  3A16               	swapf	??_processEnumeration^(0+1280),f,c
 37027   00476C  3A17               	swapf	(??_processEnumeration+1)^(0+1280),f,c
 37028   00476E  0EF0               	movlw	240
 37029   004770  1617               	andwf	(??_processEnumeration+1)^(0+1280),f,c
 37030   004772  5016               	movf	??_processEnumeration^(0+1280),w,c
 37031   004774  0B0F               	andlw	15
 37032   004776  1217               	iorwf	(??_processEnumeration+1)^(0+1280),f,c
 37033   004778  0EF0               	movlw	240
 37034   00477A  1616               	andwf	??_processEnumeration^(0+1280),f,c
 37035   00477C  0E00               	movlw	0
 37036   00477E  2416               	addwf	??_processEnumeration^(0+1280),w,c
 37037   004780  6ED9               	movwf	fsr2l,c
 37038   004782  0E3C               	movlw	60
 37039   004784  2017               	addwfc	(??_processEnumeration+1)^(0+1280),w,c
 37040   004786  6EDA               	movwf	fsr2h,c
 37041   004788  51A8               	movf	_canId& (0+255),w,b
 37042   00478A  0B7F               	andlw	127
 37043   00478C  6EDF               	movwf	indf2,c
 37044   00478E                     
 37045                           ; BSR set to: 5
 37046                           ;../../VLCBlib_PIC/can18_can_2.c: 879:                     }
 37047   00478E  2A1C               	incf	processEnumeration@i^(0+1280),f,c
 37048   004790                     
 37049                           ; BSR set to: 5
 37050   004790  0E1F               	movlw	31
 37051   004792  641C               	cpfsgt	processEnumeration@i^(0+1280),c
 37052   004794  EFCE  F023         	goto	u5951
 37053   004798  EFD0  F023         	goto	u5950
 37054   00479C                     u5951:
 37055   00479C  EFB2  F023         	goto	l8549
 37056   0047A0                     u5950:
 37057   0047A0                     
 37058                           ; BSR set to: 5
 37059                           ;../../VLCBlib_PIC/can18_can_2.c: 881:                     C1FIFOCON2H |= 0x2;
 37060   0047A0  0101               	movlb	1	; () banked
 37061   0047A2  8369               	bsf	105,1,b	;volatile
 37062   0047A4                     l8557:
 37063                           
 37064                           ;../../VLCBlib_PIC/can18_can_2.c: 883:                 enumerationState = NO_ENUMERATION
      +                          ;
 37065   0047A4  0105               	movlb	5	; () banked
 37066   0047A6  6BA5               	clrf	_enumerationState& (0+255),b
 37067   0047A8  EFF0  F023         	goto	l720
 37068   0047AC                     l8561:
 37069   0047AC  0105               	movlb	5	; () banked
 37070   0047AE  51A5               	movf	_enumerationState& (0+255),w,b
 37071   0047B0  6E16               	movwf	??_processEnumeration^(0+1280),c
 37072   0047B2  6A17               	clrf	(??_processEnumeration+1)^(0+1280),c
 37073                           
 37074                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37075                           ; Switch size 1, requested type "simple"
 37076                           ; Number of cases is 1, Range of values is 0 to 0
 37077                           ; switch strategies available:
 37078                           ; Name         Instructions Cycles
 37079                           ; simple_byte            4     3 (average)
 37080                           ;	Chosen strategy is simple_byte
 37081   0047B4  5017               	movf	(??_processEnumeration+1)^(0+1280),w,c
 37082   0047B6  0A00               	xorlw	0	; case 0
 37083   0047B8  B4D8               	btfsc	status,2,c
 37084   0047BA  EFE1  F023         	goto	l11635
 37085   0047BE  EFF0  F023         	goto	l720
 37086   0047C2                     l11635:
 37087                           
 37088                           ; BSR set to: 5
 37089                           ; Switch size 1, requested type "simple"
 37090                           ; Number of cases is 3, Range of values is 1 to 3
 37091                           ; switch strategies available:
 37092                           ; Name         Instructions Cycles
 37093                           ; simple_byte           10     6 (average)
 37094                           ;	Chosen strategy is simple_byte
 37095   0047C2  5016               	movf	??_processEnumeration^(0+1280),w,c
 37096   0047C4  0A01               	xorlw	1	; case 1
 37097   0047C6  B4D8               	btfsc	status,2,c
 37098   0047C8  EF11  F023         	goto	l8501
 37099   0047CC  0A03               	xorlw	3	; case 2
 37100   0047CE  B4D8               	btfsc	status,2,c
 37101   0047D0  EF33  F023         	goto	l8505
 37102   0047D4  0A01               	xorlw	1	; case 3
 37103   0047D6  B4D8               	btfsc	status,2,c
 37104   0047D8  EF33  F023         	goto	l8505
 37105   0047DC  EFF0  F023         	goto	l720
 37106   0047E0                     l720:
 37107   0047E0  0012               	return		;funcret
 37108   0047E2                     __end_of_processEnumeration:
 37109                           	callstack 0
 37110                           
 37111 ;; *************** function _startEnumeration *****************
 37112 ;; Defined at:
 37113 ;;		line 777 in file "../../VLCBlib_PIC/can18_can_2.c"
 37114 ;; Parameters:    Size  Location     Type
 37115 ;;  txWaiting       1    wreg     enum E23474
 37116 ;; Auto vars:     Size  Location     Type
 37117 ;;  txWaiting       1   10[COMRAM] enum E23474
 37118 ;;  i               1   11[COMRAM] unsigned char 
 37119 ;; Return value:  Size  Location     Type
 37120 ;;                  1    wreg      void 
 37121 ;; Registers used:
 37122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37123 ;; Tracked objects:
 37124 ;;		On entry : 0/0
 37125 ;;		On exit  : 0/0
 37126 ;;		Unchanged: 0/0
 37127 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37129 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37131 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37132 ;;Total ram usage:        2 bytes
 37133 ;; Hardware stack levels used: 1
 37134 ;; Hardware stack levels required when called: 2
 37135 ;; This function calls:
 37136 ;;		_sendRTR
 37137 ;;		_tickGet
 37138 ;; This function is called by:
 37139 ;;		_canSendMessage
 37140 ;;		_processEnumeration
 37141 ;; This function uses a non-reentrant model
 37142 ;;
 37143                           
 37144                           	psect	text95
 37145   0075BA                     __ptext95:
 37146                           	callstack 0
 37147   0075BA                     _startEnumeration:
 37148                           	callstack 118
 37149                           
 37150                           ;incstack = 0
 37151                           ;startEnumeration@txWaiting stored from wreg
 37152   0075BA  6E0B               	movwf	startEnumeration@txWaiting^(0+1280),c
 37153   0075BC                     
 37154                           ;../../VLCBlib_PIC/can18_can_2.c: 778:     uint8_t i;;../../VLCBlib_PIC/can18_can_2.c: 7
      +                          80:     for (i=1; i< (0x7F/8)+1; i++) {
 37155   0075BC  0E01               	movlw	1
 37156   0075BE  6E0C               	movwf	startEnumeration@i^(0+1280),c
 37157   0075C0                     l7375:
 37158                           
 37159                           ;../../VLCBlib_PIC/can18_can_2.c: 781:         enumerationResults[i] = 0;
 37160   0075C0  0E32               	movlw	low _enumerationResults
 37161   0075C2  240C               	addwf	startEnumeration@i^(0+1280),w,c
 37162   0075C4  6ED9               	movwf	fsr2l,c
 37163   0075C6  6ADA               	clrf	fsr2h,c
 37164   0075C8  0E06               	movlw	high _enumerationResults
 37165   0075CA  22DA               	addwfc	fsr2h,f,c
 37166   0075CC  6ADF               	clrf	indf2,c
 37167   0075CE                     
 37168                           ;../../VLCBlib_PIC/can18_can_2.c: 782:     }
 37169   0075CE  2A0C               	incf	startEnumeration@i^(0+1280),f,c
 37170   0075D0  0E0F               	movlw	15
 37171   0075D2  640C               	cpfsgt	startEnumeration@i^(0+1280),c
 37172   0075D4  EFEE  F03A         	goto	u4741
 37173   0075D8  EFF0  F03A         	goto	u4740
 37174   0075DC                     u4741:
 37175   0075DC  EFE0  F03A         	goto	l7375
 37176   0075E0                     u4740:
 37177   0075E0                     
 37178                           ;../../VLCBlib_PIC/can18_can_2.c: 783:     enumerationResults[0] = 1;
 37179   0075E0  0E01               	movlw	1
 37180   0075E2  0106               	movlb	6	; () banked
 37181   0075E4  6F32               	movwf	_enumerationResults& (0+255),b
 37182                           
 37183                           ;../../VLCBlib_PIC/can18_can_2.c: 785:     enumerationState = txWaiting ? ENUMERATION_IN
      +                          _PROGRESS_TX_WAITING : ENUMERATION_IN_PROGRESS;
 37184   0075E6  500B               	movf	startEnumeration@txWaiting^(0+1280),w,c
 37185   0075E8  A4D8               	btfss	status,2,c
 37186   0075EA  EFF9  F03A         	goto	u4751
 37187   0075EE  EFFB  F03A         	goto	u4750
 37188   0075F2                     u4751:
 37189   0075F2  EF00  F03B         	goto	l7385
 37190   0075F6                     u4750:
 37191   0075F6                     
 37192                           ; BSR set to: 6
 37193   0075F6  0E02               	movlw	2
 37194   0075F8  0105               	movlb	5	; () banked
 37195   0075FA  6FA5               	movwf	_enumerationState& (0+255),b
 37196   0075FC  EF03  F03B         	goto	l7387
 37197   007600                     l7385:
 37198                           
 37199                           ; BSR set to: 6
 37200   007600  0E03               	movlw	3
 37201   007602  0105               	movlb	5	; () banked
 37202   007604  6FA5               	movwf	_enumerationState& (0+255),b
 37203   007606                     l7387:
 37204                           
 37205                           ; BSR set to: 5
 37206                           ;../../VLCBlib_PIC/can18_can_2.c: 786:     enumerationStartTime.val = tickGet();
 37207   007606  ECF7  F039         	call	_tickGet	;wreg free
 37208   00760A  C501  F574         	movff	?_tickGet,_enumerationStartTime
 37209   00760E  C502  F575         	movff	?_tickGet+1,_enumerationStartTime+1
 37210   007612  C503  F576         	movff	?_tickGet+2,_enumerationStartTime+2
 37211   007616  C504  F577         	movff	?_tickGet+3,_enumerationStartTime+3
 37212   00761A                     
 37213                           ;../../VLCBlib_PIC/can18_can_2.c: 788:     canDiagnostics[0x0D].asUint++;
 37214   00761A  0106               	movlb	6	; () banked
 37215   00761C  4BA8               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 37216   00761E  2BA9               	incf	(_canDiagnostics+27)& (0+255),f,b
 37217   007620                     
 37218                           ; BSR set to: 6
 37219                           ;../../VLCBlib_PIC/can18_can_2.c: 790:     sendRTR();
 37220   007620  EC60  F03E         	call	_sendRTR	;wreg free
 37221   007624  0012               	return		;funcret
 37222   007626                     __end_of_startEnumeration:
 37223                           	callstack 0
 37224                           
 37225 ;; *************** function _sendRTR *****************
 37226 ;; Defined at:
 37227 ;;		line 680 in file "../../VLCBlib_PIC/can18_can_2.c"
 37228 ;; Parameters:    Size  Location     Type
 37229 ;;		None
 37230 ;; Auto vars:     Size  Location     Type
 37231 ;;  txFifoObj       2    0[COMRAM] PTR unsigned char 
 37232 ;;		 -> RAM(16383), 
 37233 ;; Return value:  Size  Location     Type
 37234 ;;                  1    wreg      void 
 37235 ;; Registers used:
 37236 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37237 ;; Tracked objects:
 37238 ;;		On entry : 0/0
 37239 ;;		On exit  : 0/0
 37240 ;;		Unchanged: 0/0
 37241 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37243 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37245 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37246 ;;Total ram usage:        2 bytes
 37247 ;; Hardware stack levels used: 1
 37248 ;; Hardware stack levels required when called: 1
 37249 ;; This function calls:
 37250 ;;		Nothing
 37251 ;; This function is called by:
 37252 ;;		_startEnumeration
 37253 ;; This function uses a non-reentrant model
 37254 ;;
 37255                           
 37256                           	psect	text96
 37257   007CC0                     __ptext96:
 37258                           	callstack 0
 37259   007CC0                     _sendRTR:
 37260                           	callstack 118
 37261   007CC0                     
 37262                           ;../../VLCBlib_PIC/can18_can_2.c: 681:     uint8_t* txFifoObj = (uint8_t*) C1TXQUA;
 37263   007CC0  C158 F501          	movff	344,sendRTR@txFifoObj	;volatile
 37264   007CC4  C159 F502          	movff	345,sendRTR@txFifoObj+1	;volatile
 37265   007CC8                     
 37266                           ;../../VLCBlib_PIC/can18_can_2.c: 682:     txFifoObj[0] = (canId & 0x7F);
 37267   007CC8  0105               	movlb	5	; () banked
 37268   007CCA  51A8               	movf	_canId& (0+255),w,b
 37269   007CCC  0B7F               	andlw	127
 37270   007CCE  C501  F4D9         	movff	sendRTR@txFifoObj,fsr2l
 37271   007CD2  C502  F4DA         	movff	sendRTR@txFifoObj+1,fsr2h
 37272   007CD6  6EDF               	movwf	indf2,c
 37273   007CD8                     
 37274                           ; BSR set to: 5
 37275                           ;../../VLCBlib_PIC/can18_can_2.c: 683:     txFifoObj[1] = 0;
 37276   007CD8  EE20 F001          	lfsr	2,1
 37277   007CDC  5001               	movf	sendRTR@txFifoObj^(0+1280),w,c
 37278   007CDE  26D9               	addwf	fsr2l,f,c
 37279   007CE0  5002               	movf	(sendRTR@txFifoObj+1)^(0+1280),w,c
 37280   007CE2  22DA               	addwfc	fsr2h,f,c
 37281   007CE4  6ADF               	clrf	indf2,c
 37282   007CE6                     
 37283                           ; BSR set to: 5
 37284                           ;../../VLCBlib_PIC/can18_can_2.c: 684:     txFifoObj[4] = 0x20;
 37285   007CE6  EE20 F004          	lfsr	2,4
 37286   007CEA  5001               	movf	sendRTR@txFifoObj^(0+1280),w,c
 37287   007CEC  26D9               	addwf	fsr2l,f,c
 37288   007CEE  5002               	movf	(sendRTR@txFifoObj+1)^(0+1280),w,c
 37289   007CF0  22DA               	addwfc	fsr2h,f,c
 37290   007CF2  0E20               	movlw	32
 37291   007CF4  6EDF               	movwf	indf2,c
 37292   007CF6                     
 37293                           ; BSR set to: 5
 37294                           ;../../VLCBlib_PIC/can18_can_2.c: 685:     C1TXQCONH |= (0x2 | 0x1);
 37295   007CF6  0E03               	movlw	3
 37296   007CF8  0101               	movlb	1	; () banked
 37297   007CFA  1351               	iorwf	81,f,b	;volatile
 37298   007CFC                     
 37299                           ; BSR set to: 1
 37300                           ;../../VLCBlib_PIC/can18_can_2.c: 687:     canDiagnostics[0x06].asUint++;
 37301   007CFC  0106               	movlb	6	; () banked
 37302   007CFE  4B9A               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 37303   007D00  2B9B               	incf	(_canDiagnostics+13)& (0+255),f,b
 37304   007D02                     
 37305                           ; BSR set to: 6
 37306   007D02  0012               	return		;funcret
 37307   007D04                     __end_of_sendRTR:
 37308                           	callstack 0
 37309                           
 37310 ;; *************** function _setNewCanId *****************
 37311 ;; Defined at:
 37312 ;;		line 896 in file "../../VLCBlib_PIC/can18_can_2.c"
 37313 ;; Parameters:    Size  Location     Type
 37314 ;;  newCanId        1    wreg     unsigned char 
 37315 ;; Auto vars:     Size  Location     Type
 37316 ;;  newCanId        1   20[COMRAM] unsigned char 
 37317 ;; Return value:  Size  Location     Type
 37318 ;;                  1    wreg      enum E23636
 37319 ;; Registers used:
 37320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37321 ;; Tracked objects:
 37322 ;;		On entry : 0/0
 37323 ;;		On exit  : 0/0
 37324 ;;		Unchanged: 0/0
 37325 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37330 ;;Total ram usage:        1 bytes
 37331 ;; Hardware stack levels used: 1
 37332 ;; Hardware stack levels required when called: 6
 37333 ;; This function calls:
 37334 ;;		_prepareSelfEnumResponse
 37335 ;;		_writeNVM
 37336 ;; This function is called by:
 37337 ;;		_processEnumeration
 37338 ;; This function uses a non-reentrant model
 37339 ;;
 37340                           
 37341                           	psect	text97
 37342   007C34                     __ptext97:
 37343                           	callstack 0
 37344   007C34                     _setNewCanId:
 37345                           	callstack 117
 37346                           
 37347                           ; BSR set to: 6
 37348                           ;incstack = 0
 37349                           ;setNewCanId@newCanId stored from wreg
 37350   007C34  6E15               	movwf	setNewCanId@newCanId^(0+1280),c
 37351   007C36                     
 37352                           ;../../VLCBlib_PIC/can18_can_2.c: 897:     if ((newCanId >= 1) && (newCanId <= 99)) {
 37353   007C36  5015               	movf	setNewCanId@newCanId^(0+1280),w,c
 37354   007C38  B4D8               	btfsc	status,2,c
 37355   007C3A  EF21  F03E         	goto	u5471
 37356   007C3E  EF23  F03E         	goto	u5470
 37357   007C42                     u5471:
 37358   007C42  EF3D  F03E         	goto	l724
 37359   007C46                     u5470:
 37360   007C46  0E64               	movlw	100
 37361   007C48  6015               	cpfslt	setNewCanId@newCanId^(0+1280),c
 37362   007C4A  EF29  F03E         	goto	u5481
 37363   007C4E  EF2B  F03E         	goto	u5480
 37364   007C52                     u5481:
 37365   007C52  EF3D  F03E         	goto	l724
 37366   007C56                     u5480:
 37367   007C56                     
 37368                           ;../../VLCBlib_PIC/can18_can_2.c: 898:         canId = newCanId;
 37369   007C56  C515  F5A8         	movff	setNewCanId@newCanId,_canId
 37370   007C5A                     
 37371                           ;../../VLCBlib_PIC/can18_can_2.c: 900:         prepareSelfEnumResponse();
 37372   007C5A  EC7F  F039         	call	_prepareSelfEnumResponse	;wreg free
 37373                           
 37374                           ;../../VLCBlib_PIC/can18_can_2.c: 901:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId
      +                           );
 37375   007C5E  0EFE               	movlw	254
 37376   007C60  6E0E               	movwf	writeNVM@index^(0+1280),c
 37377   007C62  0E03               	movlw	3
 37378   007C64  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 37379   007C66  0E00               	movlw	0
 37380   007C68  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 37381   007C6A  C515  F511         	movff	setNewCanId@newCanId,writeNVM@value
 37382   007C6E  0E00               	movlw	0
 37383   007C70  EC47  F03C         	call	_writeNVM
 37384   007C74                     
 37385                           ;../../VLCBlib_PIC/can18_can_2.c: 903:         canDiagnostics[0x0F].asUint++;
 37386   007C74  0106               	movlb	6	; () banked
 37387   007C76  4BAC               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 37388   007C78  2BAD               	incf	(_canDiagnostics+31)& (0+255),f,b
 37389   007C7A                     l724:
 37390   007C7A  0012               	return		;funcret
 37391   007C7C                     __end_of_setNewCanId:
 37392                           	callstack 0
 37393                           
 37394 ;; *************** function _prepareSelfEnumResponse *****************
 37395 ;; Defined at:
 37396 ;;		line 389 in file "../../VLCBlib_PIC/can18_can_2.c"
 37397 ;; Parameters:    Size  Location     Type
 37398 ;;		None
 37399 ;; Auto vars:     Size  Location     Type
 37400 ;;  txFifoObj       2    0[COMRAM] PTR unsigned char 
 37401 ;;		 -> RAM(16383), 
 37402 ;; Return value:  Size  Location     Type
 37403 ;;                  1    wreg      void 
 37404 ;; Registers used:
 37405 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37406 ;; Tracked objects:
 37407 ;;		On entry : 0/0
 37408 ;;		On exit  : 0/0
 37409 ;;		Unchanged: 0/0
 37410 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37415 ;;Total ram usage:        2 bytes
 37416 ;; Hardware stack levels used: 1
 37417 ;; Hardware stack levels required when called: 1
 37418 ;; This function calls:
 37419 ;;		Nothing
 37420 ;; This function is called by:
 37421 ;;		_canPowerUp
 37422 ;;		_setNewCanId
 37423 ;; This function uses a non-reentrant model
 37424 ;;
 37425                           
 37426                           	psect	text98
 37427   0072FE                     __ptext98:
 37428                           	callstack 0
 37429   0072FE                     _prepareSelfEnumResponse:
 37430                           	callstack 123
 37431   0072FE                     
 37432                           ;../../VLCBlib_PIC/can18_can_2.c: 390:     uint8_t* txFifoObj = (uint8_t*) C1FIFOUA1;
 37433   0072FE  C164 F501          	movff	356,prepareSelfEnumResponse@txFifoObj	;volatile
 37434   007302  C165 F502          	movff	357,prepareSelfEnumResponse@txFifoObj+1	;volatile
 37435                           
 37436                           ;../../VLCBlib_PIC/can18_can_2.c: 392:     while (C1FIFOSTA1Lbits.TFNRFNIF == 1) {
 37437   007306  EFB2  F039         	goto	l7813
 37438   00730A                     l7809:
 37439                           
 37440                           ; BSR set to: 1
 37441                           ;../../VLCBlib_PIC/can18_can_2.c: 394:         txFifoObj[0] = (canId & 0x7F);
 37442   00730A  0105               	movlb	5	; () banked
 37443   00730C  51A8               	movf	_canId& (0+255),w,b
 37444   00730E  0B7F               	andlw	127
 37445   007310  C501  F4D9         	movff	prepareSelfEnumResponse@txFifoObj,fsr2l
 37446   007314  C502  F4DA         	movff	prepareSelfEnumResponse@txFifoObj+1,fsr2h
 37447   007318  6EDF               	movwf	indf2,c
 37448                           
 37449                           ;../../VLCBlib_PIC/can18_can_2.c: 395:         txFifoObj[1] = 0;
 37450   00731A  EE20 F001          	lfsr	2,1
 37451   00731E  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37452   007320  26D9               	addwf	fsr2l,f,c
 37453   007322  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37454   007324  22DA               	addwfc	fsr2h,f,c
 37455   007326  6ADF               	clrf	indf2,c
 37456                           
 37457                           ;../../VLCBlib_PIC/can18_can_2.c: 396:         txFifoObj[4] = 0;
 37458   007328  EE20 F004          	lfsr	2,4
 37459   00732C  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37460   00732E  26D9               	addwf	fsr2l,f,c
 37461   007330  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37462   007332  22DA               	addwfc	fsr2h,f,c
 37463   007334  6ADF               	clrf	indf2,c
 37464                           
 37465                           ;../../VLCBlib_PIC/can18_can_2.c: 397:         txFifoObj[5] = 0;
 37466   007336  EE20 F005          	lfsr	2,5
 37467   00733A  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37468   00733C  26D9               	addwf	fsr2l,f,c
 37469   00733E  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37470   007340  22DA               	addwfc	fsr2h,f,c
 37471   007342  6ADF               	clrf	indf2,c
 37472                           
 37473                           ;../../VLCBlib_PIC/can18_can_2.c: 398:         txFifoObj[6] = 0;
 37474   007344  EE20 F006          	lfsr	2,6
 37475   007348  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37476   00734A  26D9               	addwf	fsr2l,f,c
 37477   00734C  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37478   00734E  22DA               	addwfc	fsr2h,f,c
 37479   007350  6ADF               	clrf	indf2,c
 37480                           
 37481                           ;../../VLCBlib_PIC/can18_can_2.c: 399:         txFifoObj[7] = 0;
 37482   007352  EE20 F007          	lfsr	2,7
 37483   007356  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37484   007358  26D9               	addwf	fsr2l,f,c
 37485   00735A  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37486   00735C  22DA               	addwfc	fsr2h,f,c
 37487   00735E  6ADF               	clrf	indf2,c
 37488   007360                     
 37489                           ; BSR set to: 5
 37490                           ;../../VLCBlib_PIC/can18_can_2.c: 400:         C1FIFOCON1Hbits.UINC = 1;
 37491   007360  0101               	movlb	1	; () banked
 37492   007362  815D               	bsf	93,0,b	;volatile
 37493   007364                     l7813:
 37494                           
 37495                           ;../../VLCBlib_PIC/can18_can_2.c: 392:     while (C1FIFOSTA1Lbits.TFNRFNIF == 1) {
 37496   007364  0101               	movlb	1	; () banked
 37497   007366  B160               	btfsc	96,0,b	;volatile
 37498   007368  EFB8  F039         	goto	u5191
 37499   00736C  EFBA  F039         	goto	u5190
 37500   007370                     u5191:
 37501   007370  EF85  F039         	goto	l7809
 37502   007374                     u5190:
 37503   007374                     
 37504                           ; BSR set to: 1
 37505   007374  0012               	return		;funcret
 37506   007376                     __end_of_prepareSelfEnumResponse:
 37507                           	callstack 0
 37508                           
 37509 ;; *************** function _APP_preProcessMessage *****************
 37510 ;; Defined at:
 37511 ;;		line 73 in file "../canargb_events.c"
 37512 ;; Parameters:    Size  Location     Type
 37513 ;;  m               2    0[COMRAM] PTR struct Message
 37514 ;;		 -> poll@m(9), 
 37515 ;; Auto vars:     Size  Location     Type
 37516 ;;		None
 37517 ;; Return value:  Size  Location     Type
 37518 ;;                  1    wreg      enum E23290
 37519 ;; Registers used:
 37520 ;;		wreg
 37521 ;; Tracked objects:
 37522 ;;		On entry : 0/0
 37523 ;;		On exit  : 0/0
 37524 ;;		Unchanged: 0/0
 37525 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37529 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37530 ;;Total ram usage:        2 bytes
 37531 ;; Hardware stack levels used: 1
 37532 ;; Hardware stack levels required when called: 1
 37533 ;; This function calls:
 37534 ;;		Nothing
 37535 ;; This function is called by:
 37536 ;;		_poll
 37537 ;; This function uses a non-reentrant model
 37538 ;;
 37539                           
 37540                           	psect	text99
 37541   00834C                     __ptext99:
 37542                           	callstack 0
 37543   00834C                     _APP_preProcessMessage:
 37544                           	callstack 124
 37545   00834C                     
 37546                           ;../canargb_events.c: 74:     return NOT_PROCESSED;
 37547   00834C  0E00               	movlw	0
 37548   00834E  0012               	return		;funcret
 37549   008350                     __end_of_APP_preProcessMessage:
 37550                           	callstack 0
 37551                           
 37552 ;; *************** function _APP_postProcessMessage *****************
 37553 ;; Defined at:
 37554 ;;		line 79 in file "../canargb_events.c"
 37555 ;; Parameters:    Size  Location     Type
 37556 ;;  m               2    0[COMRAM] PTR struct Message
 37557 ;;		 -> poll@m(9), 
 37558 ;; Auto vars:     Size  Location     Type
 37559 ;;		None
 37560 ;; Return value:  Size  Location     Type
 37561 ;;                  1    wreg      enum E23290
 37562 ;; Registers used:
 37563 ;;		wreg
 37564 ;; Tracked objects:
 37565 ;;		On entry : 0/0
 37566 ;;		On exit  : 0/0
 37567 ;;		Unchanged: 0/0
 37568 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37572 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37573 ;;Total ram usage:        2 bytes
 37574 ;; Hardware stack levels used: 1
 37575 ;; Hardware stack levels required when called: 1
 37576 ;; This function calls:
 37577 ;;		Nothing
 37578 ;; This function is called by:
 37579 ;;		_poll
 37580 ;; This function uses a non-reentrant model
 37581 ;;
 37582                           
 37583                           	psect	text100
 37584   008350                     __ptext100:
 37585                           	callstack 0
 37586   008350                     _APP_postProcessMessage:
 37587                           	callstack 124
 37588   008350                     
 37589                           ;../canargb_events.c: 80:     return NOT_PROCESSED;
 37590   008350  0E00               	movlw	0
 37591   008352  0012               	return		;funcret
 37592   008354                     __end_of_APP_postProcessMessage:
 37593                           	callstack 0
 37594                           
 37595 ;; *************** function _loop *****************
 37596 ;; Defined at:
 37597 ;;		line 254 in file "../main.c"
 37598 ;; Parameters:    Size  Location     Type
 37599 ;;		None
 37600 ;; Auto vars:     Size  Location     Type
 37601 ;;		None
 37602 ;; Return value:  Size  Location     Type
 37603 ;;                  1    wreg      void 
 37604 ;; Registers used:
 37605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37606 ;; Tracked objects:
 37607 ;;		On entry : 0/0
 37608 ;;		On exit  : 0/0
 37609 ;;		Unchanged: 0/0
 37610 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37613 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37614 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37615 ;;Total ram usage:        4 bytes
 37616 ;; Hardware stack levels used: 1
 37617 ;; Hardware stack levels required when called: 3
 37618 ;; This function calls:
 37619 ;;		_doFlash
 37620 ;;		_refreshString
 37621 ;;		_tickGet
 37622 ;; This function is called by:
 37623 ;;		_main
 37624 ;; This function uses a non-reentrant model
 37625 ;;
 37626                           
 37627                           	psect	text101
 37628   0079AA                     __ptext101:
 37629                           	callstack 0
 37630   0079AA                     _loop:
 37631                           	callstack 123
 37632   0079AA                     
 37633                           ;../main.c: 256:     if ((tickGet() - flashTime.val) > (62500/2)) {
 37634   0079AA  ECF7  F039         	call	_tickGet	;wreg free
 37635   0079AE  0105               	movlb	5	; () banked
 37636   0079B0  5180               	movf	_flashTime& (0+255),w,b
 37637   0079B2  5C01               	subwf	?_tickGet^(0+1280),w,c
 37638   0079B4  6E0B               	movwf	??_loop^(0+1280),c
 37639   0079B6  5181               	movf	(_flashTime+1)& (0+255),w,b
 37640   0079B8  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 37641   0079BA  6E0C               	movwf	(??_loop+1)^(0+1280),c
 37642   0079BC  5182               	movf	(_flashTime+2)& (0+255),w,b
 37643   0079BE  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 37644   0079C0  6E0D               	movwf	(??_loop+2)^(0+1280),c
 37645   0079C2  5183               	movf	(_flashTime+3)& (0+255),w,b
 37646   0079C4  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 37647   0079C6  6E0E               	movwf	(??_loop+3)^(0+1280),c
 37648   0079C8  500E               	movf	(??_loop+3)^(0+1280),w,c
 37649   0079CA  100D               	iorwf	(??_loop+2)^(0+1280),w,c
 37650   0079CC  E10B               	bnz	u8320
 37651   0079CE  0E13               	movlw	19
 37652   0079D0  5C0B               	subwf	??_loop^(0+1280),w,c
 37653   0079D2  0E7A               	movlw	122
 37654   0079D4  580C               	subwfb	(??_loop+1)^(0+1280),w,c
 37655   0079D6  A0D8               	btfss	status,0,c
 37656   0079D8  EFF0  F03C         	goto	u8321
 37657   0079DC  EFF2  F03C         	goto	u8320
 37658   0079E0                     u8321:
 37659   0079E0  EFFE  F03C         	goto	l10917
 37660   0079E4                     u8320:
 37661   0079E4                     
 37662                           ; BSR set to: 5
 37663                           ;../main.c: 257:         doFlash();
 37664   0079E4  EC68  F00F         	call	_doFlash	;wreg free
 37665   0079E8                     
 37666                           ;../main.c: 258:         flashTime.val = tickGet();
 37667   0079E8  ECF7  F039         	call	_tickGet	;wreg free
 37668   0079EC  C501  F580         	movff	?_tickGet,_flashTime
 37669   0079F0  C502  F581         	movff	?_tickGet+1,_flashTime+1
 37670   0079F4  C503  F582         	movff	?_tickGet+2,_flashTime+2
 37671   0079F8  C504  F583         	movff	?_tickGet+3,_flashTime+3
 37672   0079FC                     l10917:
 37673                           
 37674                           ;../main.c: 261:     refreshString();
 37675   0079FC  EC7E  F03B         	call	_refreshString	;wreg free
 37676   007A00  0012               	return		;funcret
 37677   007A02                     __end_of_loop:
 37678                           	callstack 0
 37679                           
 37680 ;; *************** function _refreshString *****************
 37681 ;; Defined at:
 37682 ;;		line 371 in file "../canargb_leds.c"
 37683 ;; Parameters:    Size  Location     Type
 37684 ;;		None
 37685 ;; Auto vars:     Size  Location     Type
 37686 ;;  offset          2    0[COMRAM] unsigned short 
 37687 ;; Return value:  Size  Location     Type
 37688 ;;                  1    wreg      void 
 37689 ;; Registers used:
 37690 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37691 ;; Tracked objects:
 37692 ;;		On entry : 0/0
 37693 ;;		On exit  : 0/0
 37694 ;;		Unchanged: 0/0
 37695 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37697 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37699 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37700 ;;Total ram usage:        2 bytes
 37701 ;; Hardware stack levels used: 1
 37702 ;; Hardware stack levels required when called: 1
 37703 ;; This function calls:
 37704 ;;		Nothing
 37705 ;; This function is called by:
 37706 ;;		_loop
 37707 ;; This function uses a non-reentrant model
 37708 ;;
 37709                           
 37710                           	psect	text102
 37711   0076FC                     __ptext102:
 37712                           	callstack 0
 37713   0076FC                     _refreshString:
 37714                           	callstack 124
 37715   0076FC                     
 37716                           ;../canargb_leds.c: 372:     uint16_t offset;;../canargb_leds.c: 377:     if (refreshReq
      +                          uired) {
 37717   0076FC  0105               	movlb	5	; () banked
 37718   0076FE  51AB               	movf	_refreshRequired& (0+255),w,b
 37719   007700  B4D8               	btfsc	status,2,c
 37720   007702  EF85  F03B         	goto	u6691
 37721   007706  EF87  F03B         	goto	u6690
 37722   00770A                     u6691:
 37723   00770A  EFB1  F03B         	goto	l269
 37724   00770E                     u6690:
 37725   00770E                     
 37726                           ; BSR set to: 5
 37727                           ;../canargb_leds.c: 378:         refreshRequired = 0;
 37728   00770E  6BAB               	clrf	_refreshRequired& (0+255),b
 37729   007710                     
 37730                           ; BSR set to: 5
 37731                           ;../canargb_leds.c: 384:         offset = 0;
 37732   007710  0E00               	movlw	0
 37733   007712  6E02               	movwf	(refreshString@offset+1)^(0+1280),c
 37734   007714  0E00               	movlw	0
 37735   007716  6E01               	movwf	refreshString@offset^(0+1280),c
 37736                           
 37737                           ;../canargb_leds.c: 385:         while (offset < 3*255) {
 37738   007718  EFA0  F03B         	goto	l9333
 37739   00771C                     l266:
 37740                           
 37741                           ;../canargb_leds.c: 386:             if (PIR3bits.SPI1TXIF) {
 37742   00771C  A2B1               	btfss	177,1,c	;volatile
 37743   00771E  EF93  F03B         	goto	u6701
 37744   007722  EF95  F03B         	goto	u6700
 37745   007726                     u6701:
 37746   007726  EFA0  F03B         	goto	l9333
 37747   00772A                     u6700:
 37748   00772A                     
 37749                           ;../canargb_leds.c: 387:                 SPI1TXB = *(offset+(uint8_t *)leds);
 37750   00772A  0EFC               	movlw	low _leds
 37751   00772C  2401               	addwf	refreshString@offset^(0+1280),w,c
 37752   00772E  6ED9               	movwf	fsr2l,c
 37753   007730  0E08               	movlw	high _leds
 37754   007732  2002               	addwfc	(refreshString@offset+1)^(0+1280),w,c
 37755   007734  6EDA               	movwf	fsr2h,c
 37756   007736  50DF               	movf	indf2,w,c
 37757   007738  0100               	movlb	0	; () banked
 37758   00773A  6F81               	movwf	129,b	;volatile
 37759   00773C                     
 37760                           ; BSR set to: 0
 37761                           ;../canargb_leds.c: 388:                 offset++;
 37762   00773C  4A01               	infsnz	refreshString@offset^(0+1280),f,c
 37763   00773E  2A02               	incf	(refreshString@offset+1)^(0+1280),f,c
 37764   007740                     l9333:
 37765                           
 37766                           ;../canargb_leds.c: 385:         while (offset < 3*255) {
 37767   007740  0EFD               	movlw	253
 37768   007742  5C01               	subwf	refreshString@offset^(0+1280),w,c
 37769   007744  0E02               	movlw	2
 37770   007746  5802               	subwfb	(refreshString@offset+1)^(0+1280),w,c
 37771   007748  A0D8               	btfss	status,0,c
 37772   00774A  EFA9  F03B         	goto	u6711
 37773   00774E  EFAB  F03B         	goto	u6710
 37774   007752                     u6711:
 37775   007752  EF8E  F03B         	goto	l266
 37776   007756                     u6710:
 37777   007756                     
 37778                           ;../canargb_leds.c: 393: LATCbits.LATC6 = flashState;
 37779   007756  0105               	movlb	5	; () banked
 37780   007758  B1AC               	btfsc	_flashState& (0+255),0,b
 37781   00775A  D002               	bra	u6725
 37782   00775C  9CC0               	bcf	192,6,c	;volatile
 37783   00775E  D001               	bra	u6726
 37784   007760                     u6725:
 37785   007760  8CC0               	bsf	192,6,c	;volatile
 37786   007762                     u6726:
 37787   007762                     l269:
 37788   007762  0012               	return		;funcret
 37789   007764                     __end_of_refreshString:
 37790                           	callstack 0
 37791                           
 37792 ;; *************** function _doFlash *****************
 37793 ;; Defined at:
 37794 ;;		line 282 in file "../canargb_leds.c"
 37795 ;; Parameters:    Size  Location     Type
 37796 ;;		None
 37797 ;; Auto vars:     Size  Location     Type
 37798 ;;  ledno           1    5[COMRAM] unsigned char 
 37799 ;;  order           1    4[COMRAM] unsigned char 
 37800 ;; Return value:  Size  Location     Type
 37801 ;;                  1    wreg      void 
 37802 ;; Registers used:
 37803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37804 ;; Tracked objects:
 37805 ;;		On entry : 0/0
 37806 ;;		On exit  : 0/0
 37807 ;;		Unchanged: 0/0
 37808 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37810 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37812 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37813 ;;Total ram usage:        2 bytes
 37814 ;; Hardware stack levels used: 1
 37815 ;; Hardware stack levels required when called: 2
 37816 ;; This function calls:
 37817 ;;		_getNV
 37818 ;; This function is called by:
 37819 ;;		_loop
 37820 ;; This function uses a non-reentrant model
 37821 ;;
 37822                           
 37823                           	psect	text103
 37824   001ED0                     __ptext103:
 37825                           	callstack 0
 37826   001ED0                     _doFlash:
 37827                           	callstack 123
 37828   001ED0                     
 37829                           ;../canargb_leds.c: 283:     uint8_t ledno;;../canargb_leds.c: 284:     uint8_t order;;.
      +                          ./canargb_leds.c: 286:     flashState = 1-flashState;
 37830   001ED0  0105               	movlb	5	; () banked
 37831   001ED2  51AC               	movf	_flashState& (0+255),w,b
 37832   001ED4  0801               	sublw	1
 37833   001ED6  6FAC               	movwf	_flashState& (0+255),b
 37834   001ED8                     
 37835                           ; BSR set to: 5
 37836                           ;../canargb_leds.c: 287:     order = (uint8_t)getNV(49);
 37837   001ED8  0E31               	movlw	49
 37838   001EDA  EC56  F03D         	call	_getNV
 37839   001EDE  5001               	movf	?_getNV^(0+1280),w,c
 37840   001EE0  6E05               	movwf	doFlash@order^(0+1280),c
 37841   001EE2                     
 37842                           ;../canargb_leds.c: 289:     for (ledno=0; ledno < 255; ledno++) {
 37843   001EE2  6A06               	clrf	doFlash@ledno^(0+1280),c
 37844   001EE4                     l9281:
 37845                           
 37846                           ;../canargb_leds.c: 290:         if (flashState) {
 37847   001EE4  0105               	movlb	5	; () banked
 37848   001EE6  51AC               	movf	_flashState& (0+255),w,b
 37849   001EE8  B4D8               	btfsc	status,2,c
 37850   001EEA  EF79  F00F         	goto	u6671
 37851   001EEE  EF7B  F00F         	goto	u6670
 37852   001EF2                     u6671:
 37853   001EF2  EFDC  F012         	goto	l9315
 37854   001EF6                     u6670:
 37855   001EF6  EF21  F011         	goto	l9299
 37856   001EFA                     l9285:
 37857                           
 37858                           ; BSR set to: 5
 37859                           ;../canargb_leds.c: 293:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 37860   001EFA  0E00               	movlw	low _ledPaletteIndexes
 37861   001EFC  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37862   001EFE  6ED9               	movwf	fsr2l,c
 37863   001F00  6ADA               	clrf	fsr2h,c
 37864   001F02  0E07               	movlw	high _ledPaletteIndexes
 37865   001F04  22DA               	addwfc	fsr2h,f,c
 37866   001F06  50DF               	movf	223,w,c
 37867   001F08  0B0F               	andlw	15
 37868   001F0A  0D03               	mullw	3
 37869   001F0C  28F3               	incf	243,w,c
 37870   001F0E  EC56  F03D         	call	_getNV
 37871   001F12  5006               	movf	doFlash@ledno^(0+1280),w,c
 37872   001F14  0D03               	mullw	3
 37873   001F16  0EFC               	movlw	low _leds
 37874   001F18  24F3               	addwf	243,w,c
 37875   001F1A  6ED9               	movwf	fsr2l,c
 37876   001F1C  0E08               	movlw	high _leds
 37877   001F1E  20F4               	addwfc	prodh,w,c
 37878   001F20  6EDA               	movwf	fsr2h,c
 37879   001F22  C501  F4DF         	movff	?_getNV,indf2
 37880                           
 37881                           ;../canargb_leds.c: 294:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 37882   001F26  0E00               	movlw	low _ledPaletteIndexes
 37883   001F28  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37884   001F2A  6ED9               	movwf	fsr2l,c
 37885   001F2C  6ADA               	clrf	fsr2h,c
 37886   001F2E  0E07               	movlw	high _ledPaletteIndexes
 37887   001F30  22DA               	addwfc	fsr2h,f,c
 37888   001F32  50DF               	movf	223,w,c
 37889   001F34  0B0F               	andlw	15
 37890   001F36  0D03               	mullw	3
 37891   001F38  50F3               	movf	243,w,c
 37892   001F3A  0F02               	addlw	2
 37893   001F3C  EC56  F03D         	call	_getNV
 37894   001F40  5006               	movf	doFlash@ledno^(0+1280),w,c
 37895   001F42  0D03               	mullw	3
 37896   001F44  0EFD               	movlw	low (_leds+1)
 37897   001F46  24F3               	addwf	243,w,c
 37898   001F48  6ED9               	movwf	fsr2l,c
 37899   001F4A  0E08               	movlw	high (_leds+1)
 37900   001F4C  20F4               	addwfc	prodh,w,c
 37901   001F4E  6EDA               	movwf	fsr2h,c
 37902   001F50  C501  F4DF         	movff	?_getNV,indf2
 37903                           
 37904                           ;../canargb_leds.c: 295:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 37905   001F54  0E00               	movlw	low _ledPaletteIndexes
 37906   001F56  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37907   001F58  6ED9               	movwf	fsr2l,c
 37908   001F5A  6ADA               	clrf	fsr2h,c
 37909   001F5C  0E07               	movlw	high _ledPaletteIndexes
 37910   001F5E  22DA               	addwfc	fsr2h,f,c
 37911   001F60  50DF               	movf	223,w,c
 37912   001F62  0B0F               	andlw	15
 37913   001F64  0D03               	mullw	3
 37914   001F66  50F3               	movf	243,w,c
 37915   001F68  0F03               	addlw	3
 37916   001F6A  EC56  F03D         	call	_getNV
 37917   001F6E  5006               	movf	doFlash@ledno^(0+1280),w,c
 37918   001F70  0D03               	mullw	3
 37919   001F72  0EFE               	movlw	low (_leds+2)
 37920   001F74  24F3               	addwf	243,w,c
 37921   001F76  6ED9               	movwf	fsr2l,c
 37922   001F78  0E08               	movlw	high (_leds+2)
 37923   001F7A  20F4               	addwfc	prodh,w,c
 37924   001F7C  6EDA               	movwf	fsr2h,c
 37925   001F7E  C501  F4DF         	movff	?_getNV,indf2
 37926                           
 37927                           ;../canargb_leds.c: 296:                     break;
 37928   001F82  EFF3  F012         	goto	l9317
 37929   001F86                     l9287:
 37930                           
 37931                           ; BSR set to: 5
 37932                           ;../canargb_leds.c: 298:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 37933   001F86  0E00               	movlw	low _ledPaletteIndexes
 37934   001F88  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37935   001F8A  6ED9               	movwf	fsr2l,c
 37936   001F8C  6ADA               	clrf	fsr2h,c
 37937   001F8E  0E07               	movlw	high _ledPaletteIndexes
 37938   001F90  22DA               	addwfc	fsr2h,f,c
 37939   001F92  50DF               	movf	223,w,c
 37940   001F94  0B0F               	andlw	15
 37941   001F96  0D03               	mullw	3
 37942   001F98  28F3               	incf	243,w,c
 37943   001F9A  EC56  F03D         	call	_getNV
 37944   001F9E  5006               	movf	doFlash@ledno^(0+1280),w,c
 37945   001FA0  0D03               	mullw	3
 37946   001FA2  0EFC               	movlw	low _leds
 37947   001FA4  24F3               	addwf	243,w,c
 37948   001FA6  6ED9               	movwf	fsr2l,c
 37949   001FA8  0E08               	movlw	high _leds
 37950   001FAA  20F4               	addwfc	prodh,w,c
 37951   001FAC  6EDA               	movwf	fsr2h,c
 37952   001FAE  C501  F4DF         	movff	?_getNV,indf2
 37953                           
 37954                           ;../canargb_leds.c: 299:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 37955   001FB2  0E00               	movlw	low _ledPaletteIndexes
 37956   001FB4  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37957   001FB6  6ED9               	movwf	fsr2l,c
 37958   001FB8  6ADA               	clrf	fsr2h,c
 37959   001FBA  0E07               	movlw	high _ledPaletteIndexes
 37960   001FBC  22DA               	addwfc	fsr2h,f,c
 37961   001FBE  50DF               	movf	223,w,c
 37962   001FC0  0B0F               	andlw	15
 37963   001FC2  0D03               	mullw	3
 37964   001FC4  50F3               	movf	243,w,c
 37965   001FC6  0F02               	addlw	2
 37966   001FC8  EC56  F03D         	call	_getNV
 37967   001FCC  5006               	movf	doFlash@ledno^(0+1280),w,c
 37968   001FCE  0D03               	mullw	3
 37969   001FD0  0EFE               	movlw	low (_leds+2)
 37970   001FD2  24F3               	addwf	243,w,c
 37971   001FD4  6ED9               	movwf	fsr2l,c
 37972   001FD6  0E08               	movlw	high (_leds+2)
 37973   001FD8  20F4               	addwfc	prodh,w,c
 37974   001FDA  6EDA               	movwf	fsr2h,c
 37975   001FDC  C501  F4DF         	movff	?_getNV,indf2
 37976                           
 37977                           ;../canargb_leds.c: 300:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 37978   001FE0  0E00               	movlw	low _ledPaletteIndexes
 37979   001FE2  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37980   001FE4  6ED9               	movwf	fsr2l,c
 37981   001FE6  6ADA               	clrf	fsr2h,c
 37982   001FE8  0E07               	movlw	high _ledPaletteIndexes
 37983   001FEA  22DA               	addwfc	fsr2h,f,c
 37984   001FEC  50DF               	movf	223,w,c
 37985   001FEE  0B0F               	andlw	15
 37986   001FF0  0D03               	mullw	3
 37987   001FF2  50F3               	movf	243,w,c
 37988   001FF4  0F03               	addlw	3
 37989   001FF6  EC56  F03D         	call	_getNV
 37990   001FFA  5006               	movf	doFlash@ledno^(0+1280),w,c
 37991   001FFC  0D03               	mullw	3
 37992   001FFE  0EFD               	movlw	low (_leds+1)
 37993   002000  24F3               	addwf	243,w,c
 37994   002002  6ED9               	movwf	fsr2l,c
 37995   002004  0E08               	movlw	high (_leds+1)
 37996   002006  20F4               	addwfc	prodh,w,c
 37997   002008  6EDA               	movwf	fsr2h,c
 37998   00200A  C501  F4DF         	movff	?_getNV,indf2
 37999                           
 38000                           ;../canargb_leds.c: 301:                     break;
 38001   00200E  EFF3  F012         	goto	l9317
 38002   002012                     l9289:
 38003                           
 38004                           ; BSR set to: 5
 38005                           ;../canargb_leds.c: 303:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 38006   002012  0E00               	movlw	low _ledPaletteIndexes
 38007   002014  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38008   002016  6ED9               	movwf	fsr2l,c
 38009   002018  6ADA               	clrf	fsr2h,c
 38010   00201A  0E07               	movlw	high _ledPaletteIndexes
 38011   00201C  22DA               	addwfc	fsr2h,f,c
 38012   00201E  50DF               	movf	223,w,c
 38013   002020  0B0F               	andlw	15
 38014   002022  0D03               	mullw	3
 38015   002024  28F3               	incf	243,w,c
 38016   002026  EC56  F03D         	call	_getNV
 38017   00202A  5006               	movf	doFlash@ledno^(0+1280),w,c
 38018   00202C  0D03               	mullw	3
 38019   00202E  0EFE               	movlw	low (_leds+2)
 38020   002030  24F3               	addwf	243,w,c
 38021   002032  6ED9               	movwf	fsr2l,c
 38022   002034  0E08               	movlw	high (_leds+2)
 38023   002036  20F4               	addwfc	prodh,w,c
 38024   002038  6EDA               	movwf	fsr2h,c
 38025   00203A  C501  F4DF         	movff	?_getNV,indf2
 38026                           
 38027                           ;../canargb_leds.c: 304:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 38028   00203E  0E00               	movlw	low _ledPaletteIndexes
 38029   002040  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38030   002042  6ED9               	movwf	fsr2l,c
 38031   002044  6ADA               	clrf	fsr2h,c
 38032   002046  0E07               	movlw	high _ledPaletteIndexes
 38033   002048  22DA               	addwfc	fsr2h,f,c
 38034   00204A  50DF               	movf	223,w,c
 38035   00204C  0B0F               	andlw	15
 38036   00204E  0D03               	mullw	3
 38037   002050  50F3               	movf	243,w,c
 38038   002052  0F02               	addlw	2
 38039   002054  EC56  F03D         	call	_getNV
 38040   002058  5006               	movf	doFlash@ledno^(0+1280),w,c
 38041   00205A  0D03               	mullw	3
 38042   00205C  0EFC               	movlw	low _leds
 38043   00205E  24F3               	addwf	243,w,c
 38044   002060  6ED9               	movwf	fsr2l,c
 38045   002062  0E08               	movlw	high _leds
 38046   002064  20F4               	addwfc	prodh,w,c
 38047   002066  6EDA               	movwf	fsr2h,c
 38048   002068  C501  F4DF         	movff	?_getNV,indf2
 38049                           
 38050                           ;../canargb_leds.c: 305:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 38051   00206C  0E00               	movlw	low _ledPaletteIndexes
 38052   00206E  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38053   002070  6ED9               	movwf	fsr2l,c
 38054   002072  6ADA               	clrf	fsr2h,c
 38055   002074  0E07               	movlw	high _ledPaletteIndexes
 38056   002076  22DA               	addwfc	fsr2h,f,c
 38057   002078  50DF               	movf	223,w,c
 38058   00207A  0B0F               	andlw	15
 38059   00207C  0D03               	mullw	3
 38060   00207E  50F3               	movf	243,w,c
 38061   002080  0F03               	addlw	3
 38062   002082  EC56  F03D         	call	_getNV
 38063   002086  5006               	movf	doFlash@ledno^(0+1280),w,c
 38064   002088  0D03               	mullw	3
 38065   00208A  0EFD               	movlw	low (_leds+1)
 38066   00208C  24F3               	addwf	243,w,c
 38067   00208E  6ED9               	movwf	fsr2l,c
 38068   002090  0E08               	movlw	high (_leds+1)
 38069   002092  20F4               	addwfc	prodh,w,c
 38070   002094  6EDA               	movwf	fsr2h,c
 38071   002096  C501  F4DF         	movff	?_getNV,indf2
 38072                           
 38073                           ;../canargb_leds.c: 306:                     break;
 38074   00209A  EFF3  F012         	goto	l9317
 38075   00209E                     l9291:
 38076                           
 38077                           ; BSR set to: 5
 38078                           ;../canargb_leds.c: 308:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 38079   00209E  0E00               	movlw	low _ledPaletteIndexes
 38080   0020A0  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38081   0020A2  6ED9               	movwf	fsr2l,c
 38082   0020A4  6ADA               	clrf	fsr2h,c
 38083   0020A6  0E07               	movlw	high _ledPaletteIndexes
 38084   0020A8  22DA               	addwfc	fsr2h,f,c
 38085   0020AA  50DF               	movf	223,w,c
 38086   0020AC  0B0F               	andlw	15
 38087   0020AE  0D03               	mullw	3
 38088   0020B0  28F3               	incf	243,w,c
 38089   0020B2  EC56  F03D         	call	_getNV
 38090   0020B6  5006               	movf	doFlash@ledno^(0+1280),w,c
 38091   0020B8  0D03               	mullw	3
 38092   0020BA  0EFD               	movlw	low (_leds+1)
 38093   0020BC  24F3               	addwf	243,w,c
 38094   0020BE  6ED9               	movwf	fsr2l,c
 38095   0020C0  0E08               	movlw	high (_leds+1)
 38096   0020C2  20F4               	addwfc	prodh,w,c
 38097   0020C4  6EDA               	movwf	fsr2h,c
 38098   0020C6  C501  F4DF         	movff	?_getNV,indf2
 38099                           
 38100                           ;../canargb_leds.c: 309:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 38101   0020CA  0E00               	movlw	low _ledPaletteIndexes
 38102   0020CC  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38103   0020CE  6ED9               	movwf	fsr2l,c
 38104   0020D0  6ADA               	clrf	fsr2h,c
 38105   0020D2  0E07               	movlw	high _ledPaletteIndexes
 38106   0020D4  22DA               	addwfc	fsr2h,f,c
 38107   0020D6  50DF               	movf	223,w,c
 38108   0020D8  0B0F               	andlw	15
 38109   0020DA  0D03               	mullw	3
 38110   0020DC  50F3               	movf	243,w,c
 38111   0020DE  0F02               	addlw	2
 38112   0020E0  EC56  F03D         	call	_getNV
 38113   0020E4  5006               	movf	doFlash@ledno^(0+1280),w,c
 38114   0020E6  0D03               	mullw	3
 38115   0020E8  0EFE               	movlw	low (_leds+2)
 38116   0020EA  24F3               	addwf	243,w,c
 38117   0020EC  6ED9               	movwf	fsr2l,c
 38118   0020EE  0E08               	movlw	high (_leds+2)
 38119   0020F0  20F4               	addwfc	prodh,w,c
 38120   0020F2  6EDA               	movwf	fsr2h,c
 38121   0020F4  C501  F4DF         	movff	?_getNV,indf2
 38122                           
 38123                           ;../canargb_leds.c: 310:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 38124   0020F8  0E00               	movlw	low _ledPaletteIndexes
 38125   0020FA  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38126   0020FC  6ED9               	movwf	fsr2l,c
 38127   0020FE  6ADA               	clrf	fsr2h,c
 38128   002100  0E07               	movlw	high _ledPaletteIndexes
 38129   002102  22DA               	addwfc	fsr2h,f,c
 38130   002104  50DF               	movf	223,w,c
 38131   002106  0B0F               	andlw	15
 38132   002108  0D03               	mullw	3
 38133   00210A  50F3               	movf	243,w,c
 38134   00210C  0F03               	addlw	3
 38135   00210E  EC56  F03D         	call	_getNV
 38136   002112  5006               	movf	doFlash@ledno^(0+1280),w,c
 38137   002114  0D03               	mullw	3
 38138   002116  0EFC               	movlw	low _leds
 38139   002118  24F3               	addwf	243,w,c
 38140   00211A  6ED9               	movwf	fsr2l,c
 38141   00211C  0E08               	movlw	high _leds
 38142   00211E  20F4               	addwfc	prodh,w,c
 38143   002120  6EDA               	movwf	fsr2h,c
 38144   002122  C501  F4DF         	movff	?_getNV,indf2
 38145                           
 38146                           ;../canargb_leds.c: 311:                     break;
 38147   002126  EFF3  F012         	goto	l9317
 38148   00212A                     l9293:
 38149                           
 38150                           ; BSR set to: 5
 38151                           ;../canargb_leds.c: 313:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 38152   00212A  0E00               	movlw	low _ledPaletteIndexes
 38153   00212C  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38154   00212E  6ED9               	movwf	fsr2l,c
 38155   002130  6ADA               	clrf	fsr2h,c
 38156   002132  0E07               	movlw	high _ledPaletteIndexes
 38157   002134  22DA               	addwfc	fsr2h,f,c
 38158   002136  50DF               	movf	223,w,c
 38159   002138  0B0F               	andlw	15
 38160   00213A  0D03               	mullw	3
 38161   00213C  28F3               	incf	243,w,c
 38162   00213E  EC56  F03D         	call	_getNV
 38163   002142  5006               	movf	doFlash@ledno^(0+1280),w,c
 38164   002144  0D03               	mullw	3
 38165   002146  0EFE               	movlw	low (_leds+2)
 38166   002148  24F3               	addwf	243,w,c
 38167   00214A  6ED9               	movwf	fsr2l,c
 38168   00214C  0E08               	movlw	high (_leds+2)
 38169   00214E  20F4               	addwfc	prodh,w,c
 38170   002150  6EDA               	movwf	fsr2h,c
 38171   002152  C501  F4DF         	movff	?_getNV,indf2
 38172                           
 38173                           ;../canargb_leds.c: 314:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 38174   002156  0E00               	movlw	low _ledPaletteIndexes
 38175   002158  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38176   00215A  6ED9               	movwf	fsr2l,c
 38177   00215C  6ADA               	clrf	fsr2h,c
 38178   00215E  0E07               	movlw	high _ledPaletteIndexes
 38179   002160  22DA               	addwfc	fsr2h,f,c
 38180   002162  50DF               	movf	223,w,c
 38181   002164  0B0F               	andlw	15
 38182   002166  0D03               	mullw	3
 38183   002168  50F3               	movf	243,w,c
 38184   00216A  0F02               	addlw	2
 38185   00216C  EC56  F03D         	call	_getNV
 38186   002170  5006               	movf	doFlash@ledno^(0+1280),w,c
 38187   002172  0D03               	mullw	3
 38188   002174  0EFD               	movlw	low (_leds+1)
 38189   002176  24F3               	addwf	243,w,c
 38190   002178  6ED9               	movwf	fsr2l,c
 38191   00217A  0E08               	movlw	high (_leds+1)
 38192   00217C  20F4               	addwfc	prodh,w,c
 38193   00217E  6EDA               	movwf	fsr2h,c
 38194   002180  C501  F4DF         	movff	?_getNV,indf2
 38195                           
 38196                           ;../canargb_leds.c: 315:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 38197   002184  0E00               	movlw	low _ledPaletteIndexes
 38198   002186  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38199   002188  6ED9               	movwf	fsr2l,c
 38200   00218A  6ADA               	clrf	fsr2h,c
 38201   00218C  0E07               	movlw	high _ledPaletteIndexes
 38202   00218E  22DA               	addwfc	fsr2h,f,c
 38203   002190  50DF               	movf	223,w,c
 38204   002192  0B0F               	andlw	15
 38205   002194  0D03               	mullw	3
 38206   002196  50F3               	movf	243,w,c
 38207   002198  0F03               	addlw	3
 38208   00219A  EC56  F03D         	call	_getNV
 38209   00219E  5006               	movf	doFlash@ledno^(0+1280),w,c
 38210   0021A0  0D03               	mullw	3
 38211   0021A2  0EFC               	movlw	low _leds
 38212   0021A4  24F3               	addwf	243,w,c
 38213   0021A6  6ED9               	movwf	fsr2l,c
 38214   0021A8  0E08               	movlw	high _leds
 38215   0021AA  20F4               	addwfc	prodh,w,c
 38216   0021AC  6EDA               	movwf	fsr2h,c
 38217   0021AE  C501  F4DF         	movff	?_getNV,indf2
 38218                           
 38219                           ;../canargb_leds.c: 316:                     break;
 38220   0021B2  EFF3  F012         	goto	l9317
 38221   0021B6                     l9295:
 38222                           
 38223                           ; BSR set to: 5
 38224                           ;../canargb_leds.c: 318:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 38225   0021B6  0E00               	movlw	low _ledPaletteIndexes
 38226   0021B8  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38227   0021BA  6ED9               	movwf	fsr2l,c
 38228   0021BC  6ADA               	clrf	fsr2h,c
 38229   0021BE  0E07               	movlw	high _ledPaletteIndexes
 38230   0021C0  22DA               	addwfc	fsr2h,f,c
 38231   0021C2  50DF               	movf	223,w,c
 38232   0021C4  0B0F               	andlw	15
 38233   0021C6  0D03               	mullw	3
 38234   0021C8  28F3               	incf	243,w,c
 38235   0021CA  EC56  F03D         	call	_getNV
 38236   0021CE  5006               	movf	doFlash@ledno^(0+1280),w,c
 38237   0021D0  0D03               	mullw	3
 38238   0021D2  0EFD               	movlw	low (_leds+1)
 38239   0021D4  24F3               	addwf	243,w,c
 38240   0021D6  6ED9               	movwf	fsr2l,c
 38241   0021D8  0E08               	movlw	high (_leds+1)
 38242   0021DA  20F4               	addwfc	prodh,w,c
 38243   0021DC  6EDA               	movwf	fsr2h,c
 38244   0021DE  C501  F4DF         	movff	?_getNV,indf2
 38245                           
 38246                           ;../canargb_leds.c: 319:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 38247   0021E2  0E00               	movlw	low _ledPaletteIndexes
 38248   0021E4  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38249   0021E6  6ED9               	movwf	fsr2l,c
 38250   0021E8  6ADA               	clrf	fsr2h,c
 38251   0021EA  0E07               	movlw	high _ledPaletteIndexes
 38252   0021EC  22DA               	addwfc	fsr2h,f,c
 38253   0021EE  50DF               	movf	223,w,c
 38254   0021F0  0B0F               	andlw	15
 38255   0021F2  0D03               	mullw	3
 38256   0021F4  50F3               	movf	243,w,c
 38257   0021F6  0F02               	addlw	2
 38258   0021F8  EC56  F03D         	call	_getNV
 38259   0021FC  5006               	movf	doFlash@ledno^(0+1280),w,c
 38260   0021FE  0D03               	mullw	3
 38261   002200  0EFC               	movlw	low _leds
 38262   002202  24F3               	addwf	243,w,c
 38263   002204  6ED9               	movwf	fsr2l,c
 38264   002206  0E08               	movlw	high _leds
 38265   002208  20F4               	addwfc	prodh,w,c
 38266   00220A  6EDA               	movwf	fsr2h,c
 38267   00220C  C501  F4DF         	movff	?_getNV,indf2
 38268                           
 38269                           ;../canargb_leds.c: 320:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 38270   002210  0E00               	movlw	low _ledPaletteIndexes
 38271   002212  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38272   002214  6ED9               	movwf	fsr2l,c
 38273   002216  6ADA               	clrf	fsr2h,c
 38274   002218  0E07               	movlw	high _ledPaletteIndexes
 38275   00221A  22DA               	addwfc	fsr2h,f,c
 38276   00221C  50DF               	movf	223,w,c
 38277   00221E  0B0F               	andlw	15
 38278   002220  0D03               	mullw	3
 38279   002222  50F3               	movf	243,w,c
 38280   002224  0F03               	addlw	3
 38281   002226  EC56  F03D         	call	_getNV
 38282   00222A  5006               	movf	doFlash@ledno^(0+1280),w,c
 38283   00222C  0D03               	mullw	3
 38284   00222E  0EFE               	movlw	low (_leds+2)
 38285   002230  24F3               	addwf	243,w,c
 38286   002232  6ED9               	movwf	fsr2l,c
 38287   002234  0E08               	movlw	high (_leds+2)
 38288   002236  20F4               	addwfc	prodh,w,c
 38289   002238  6EDA               	movwf	fsr2h,c
 38290   00223A  C501  F4DF         	movff	?_getNV,indf2
 38291                           
 38292                           ;../canargb_leds.c: 321:                     break;
 38293   00223E  EFF3  F012         	goto	l9317
 38294   002242                     l9299:
 38295                           
 38296                           ; BSR set to: 5
 38297   002242  5005               	movf	doFlash@order^(0+1280),w,c
 38298                           
 38299                           ; Switch size 1, requested type "simple"
 38300                           ; Number of cases is 5, Range of values is 1 to 6
 38301                           ; switch strategies available:
 38302                           ; Name         Instructions Cycles
 38303                           ; simple_byte           16     9 (average)
 38304                           ;	Chosen strategy is simple_byte
 38305   002244  0A01               	xorlw	1	; case 1
 38306   002246  B4D8               	btfsc	status,2,c
 38307   002248  EF7D  F00F         	goto	l9285
 38308   00224C  0A03               	xorlw	3	; case 2
 38309   00224E  B4D8               	btfsc	status,2,c
 38310   002250  EFC3  F00F         	goto	l9287
 38311   002254  0A06               	xorlw	6	; case 4
 38312   002256  B4D8               	btfsc	status,2,c
 38313   002258  EF09  F010         	goto	l9289
 38314   00225C  0A01               	xorlw	1	; case 5
 38315   00225E  B4D8               	btfsc	status,2,c
 38316   002260  EF95  F010         	goto	l9293
 38317   002264  0A03               	xorlw	3	; case 6
 38318   002266  B4D8               	btfsc	status,2,c
 38319   002268  EF4F  F010         	goto	l9291
 38320   00226C  EFDB  F010         	goto	l9295
 38321   002270                     l9301:
 38322                           
 38323                           ; BSR set to: 5
 38324                           ;../canargb_leds.c: 327:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38325   002270  0E00               	movlw	low _ledPaletteIndexes
 38326   002272  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38327   002274  6ED9               	movwf	fsr2l,c
 38328   002276  6ADA               	clrf	fsr2h,c
 38329   002278  0E07               	movlw	high _ledPaletteIndexes
 38330   00227A  22DA               	addwfc	fsr2h,f,c
 38331   00227C  38DF               	swapf	223,w,c
 38332   00227E  0B0F               	andlw	15
 38333   002280  0D03               	mullw	3
 38334   002282  28F3               	incf	243,w,c
 38335   002284  EC56  F03D         	call	_getNV
 38336   002288  5006               	movf	doFlash@ledno^(0+1280),w,c
 38337   00228A  0D03               	mullw	3
 38338   00228C  0EFC               	movlw	low _leds
 38339   00228E  24F3               	addwf	243,w,c
 38340   002290  6ED9               	movwf	fsr2l,c
 38341   002292  0E08               	movlw	high _leds
 38342   002294  20F4               	addwfc	prodh,w,c
 38343   002296  6EDA               	movwf	fsr2h,c
 38344   002298  C501  F4DF         	movff	?_getNV,indf2
 38345                           
 38346                           ;../canargb_leds.c: 328:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38347   00229C  0E00               	movlw	low _ledPaletteIndexes
 38348   00229E  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38349   0022A0  6ED9               	movwf	fsr2l,c
 38350   0022A2  6ADA               	clrf	fsr2h,c
 38351   0022A4  0E07               	movlw	high _ledPaletteIndexes
 38352   0022A6  22DA               	addwfc	fsr2h,f,c
 38353   0022A8  38DF               	swapf	223,w,c
 38354   0022AA  0B0F               	andlw	15
 38355   0022AC  0D03               	mullw	3
 38356   0022AE  50F3               	movf	243,w,c
 38357   0022B0  0F02               	addlw	2
 38358   0022B2  EC56  F03D         	call	_getNV
 38359   0022B6  5006               	movf	doFlash@ledno^(0+1280),w,c
 38360   0022B8  0D03               	mullw	3
 38361   0022BA  0EFD               	movlw	low (_leds+1)
 38362   0022BC  24F3               	addwf	243,w,c
 38363   0022BE  6ED9               	movwf	fsr2l,c
 38364   0022C0  0E08               	movlw	high (_leds+1)
 38365   0022C2  20F4               	addwfc	prodh,w,c
 38366   0022C4  6EDA               	movwf	fsr2h,c
 38367   0022C6  C501  F4DF         	movff	?_getNV,indf2
 38368                           
 38369                           ;../canargb_leds.c: 329:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38370   0022CA  0E00               	movlw	low _ledPaletteIndexes
 38371   0022CC  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38372   0022CE  6ED9               	movwf	fsr2l,c
 38373   0022D0  6ADA               	clrf	fsr2h,c
 38374   0022D2  0E07               	movlw	high _ledPaletteIndexes
 38375   0022D4  22DA               	addwfc	fsr2h,f,c
 38376   0022D6  38DF               	swapf	223,w,c
 38377   0022D8  0B0F               	andlw	15
 38378   0022DA  0D03               	mullw	3
 38379   0022DC  50F3               	movf	243,w,c
 38380   0022DE  0F03               	addlw	3
 38381   0022E0  EC56  F03D         	call	_getNV
 38382   0022E4  5006               	movf	doFlash@ledno^(0+1280),w,c
 38383   0022E6  0D03               	mullw	3
 38384   0022E8  0EFE               	movlw	low (_leds+2)
 38385   0022EA  24F3               	addwf	243,w,c
 38386   0022EC  6ED9               	movwf	fsr2l,c
 38387   0022EE  0E08               	movlw	high (_leds+2)
 38388   0022F0  20F4               	addwfc	prodh,w,c
 38389   0022F2  6EDA               	movwf	fsr2h,c
 38390   0022F4  C501  F4DF         	movff	?_getNV,indf2
 38391                           
 38392                           ;../canargb_leds.c: 330:                     break;
 38393   0022F8  EFF3  F012         	goto	l9317
 38394   0022FC                     l9303:
 38395                           
 38396                           ; BSR set to: 5
 38397                           ;../canargb_leds.c: 332:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38398   0022FC  0E00               	movlw	low _ledPaletteIndexes
 38399   0022FE  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38400   002300  6ED9               	movwf	fsr2l,c
 38401   002302  6ADA               	clrf	fsr2h,c
 38402   002304  0E07               	movlw	high _ledPaletteIndexes
 38403   002306  22DA               	addwfc	fsr2h,f,c
 38404   002308  38DF               	swapf	223,w,c
 38405   00230A  0B0F               	andlw	15
 38406   00230C  0D03               	mullw	3
 38407   00230E  28F3               	incf	243,w,c
 38408   002310  EC56  F03D         	call	_getNV
 38409   002314  5006               	movf	doFlash@ledno^(0+1280),w,c
 38410   002316  0D03               	mullw	3
 38411   002318  0EFC               	movlw	low _leds
 38412   00231A  24F3               	addwf	243,w,c
 38413   00231C  6ED9               	movwf	fsr2l,c
 38414   00231E  0E08               	movlw	high _leds
 38415   002320  20F4               	addwfc	prodh,w,c
 38416   002322  6EDA               	movwf	fsr2h,c
 38417   002324  C501  F4DF         	movff	?_getNV,indf2
 38418                           
 38419                           ;../canargb_leds.c: 333:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38420   002328  0E00               	movlw	low _ledPaletteIndexes
 38421   00232A  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38422   00232C  6ED9               	movwf	fsr2l,c
 38423   00232E  6ADA               	clrf	fsr2h,c
 38424   002330  0E07               	movlw	high _ledPaletteIndexes
 38425   002332  22DA               	addwfc	fsr2h,f,c
 38426   002334  38DF               	swapf	223,w,c
 38427   002336  0B0F               	andlw	15
 38428   002338  0D03               	mullw	3
 38429   00233A  50F3               	movf	243,w,c
 38430   00233C  0F02               	addlw	2
 38431   00233E  EC56  F03D         	call	_getNV
 38432   002342  5006               	movf	doFlash@ledno^(0+1280),w,c
 38433   002344  0D03               	mullw	3
 38434   002346  0EFE               	movlw	low (_leds+2)
 38435   002348  24F3               	addwf	243,w,c
 38436   00234A  6ED9               	movwf	fsr2l,c
 38437   00234C  0E08               	movlw	high (_leds+2)
 38438   00234E  20F4               	addwfc	prodh,w,c
 38439   002350  6EDA               	movwf	fsr2h,c
 38440   002352  C501  F4DF         	movff	?_getNV,indf2
 38441                           
 38442                           ;../canargb_leds.c: 334:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38443   002356  0E00               	movlw	low _ledPaletteIndexes
 38444   002358  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38445   00235A  6ED9               	movwf	fsr2l,c
 38446   00235C  6ADA               	clrf	fsr2h,c
 38447   00235E  0E07               	movlw	high _ledPaletteIndexes
 38448   002360  22DA               	addwfc	fsr2h,f,c
 38449   002362  38DF               	swapf	223,w,c
 38450   002364  0B0F               	andlw	15
 38451   002366  0D03               	mullw	3
 38452   002368  50F3               	movf	243,w,c
 38453   00236A  0F03               	addlw	3
 38454   00236C  EC56  F03D         	call	_getNV
 38455   002370  5006               	movf	doFlash@ledno^(0+1280),w,c
 38456   002372  0D03               	mullw	3
 38457   002374  0EFD               	movlw	low (_leds+1)
 38458   002376  24F3               	addwf	243,w,c
 38459   002378  6ED9               	movwf	fsr2l,c
 38460   00237A  0E08               	movlw	high (_leds+1)
 38461   00237C  20F4               	addwfc	prodh,w,c
 38462   00237E  6EDA               	movwf	fsr2h,c
 38463   002380  C501  F4DF         	movff	?_getNV,indf2
 38464                           
 38465                           ;../canargb_leds.c: 335:                     break;
 38466   002384  EFF3  F012         	goto	l9317
 38467   002388                     l9305:
 38468                           
 38469                           ; BSR set to: 5
 38470                           ;../canargb_leds.c: 337:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38471   002388  0E00               	movlw	low _ledPaletteIndexes
 38472   00238A  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38473   00238C  6ED9               	movwf	fsr2l,c
 38474   00238E  6ADA               	clrf	fsr2h,c
 38475   002390  0E07               	movlw	high _ledPaletteIndexes
 38476   002392  22DA               	addwfc	fsr2h,f,c
 38477   002394  38DF               	swapf	223,w,c
 38478   002396  0B0F               	andlw	15
 38479   002398  0D03               	mullw	3
 38480   00239A  28F3               	incf	243,w,c
 38481   00239C  EC56  F03D         	call	_getNV
 38482   0023A0  5006               	movf	doFlash@ledno^(0+1280),w,c
 38483   0023A2  0D03               	mullw	3
 38484   0023A4  0EFE               	movlw	low (_leds+2)
 38485   0023A6  24F3               	addwf	243,w,c
 38486   0023A8  6ED9               	movwf	fsr2l,c
 38487   0023AA  0E08               	movlw	high (_leds+2)
 38488   0023AC  20F4               	addwfc	prodh,w,c
 38489   0023AE  6EDA               	movwf	fsr2h,c
 38490   0023B0  C501  F4DF         	movff	?_getNV,indf2
 38491                           
 38492                           ;../canargb_leds.c: 338:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38493   0023B4  0E00               	movlw	low _ledPaletteIndexes
 38494   0023B6  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38495   0023B8  6ED9               	movwf	fsr2l,c
 38496   0023BA  6ADA               	clrf	fsr2h,c
 38497   0023BC  0E07               	movlw	high _ledPaletteIndexes
 38498   0023BE  22DA               	addwfc	fsr2h,f,c
 38499   0023C0  38DF               	swapf	223,w,c
 38500   0023C2  0B0F               	andlw	15
 38501   0023C4  0D03               	mullw	3
 38502   0023C6  50F3               	movf	243,w,c
 38503   0023C8  0F02               	addlw	2
 38504   0023CA  EC56  F03D         	call	_getNV
 38505   0023CE  5006               	movf	doFlash@ledno^(0+1280),w,c
 38506   0023D0  0D03               	mullw	3
 38507   0023D2  0EFC               	movlw	low _leds
 38508   0023D4  24F3               	addwf	243,w,c
 38509   0023D6  6ED9               	movwf	fsr2l,c
 38510   0023D8  0E08               	movlw	high _leds
 38511   0023DA  20F4               	addwfc	prodh,w,c
 38512   0023DC  6EDA               	movwf	fsr2h,c
 38513   0023DE  C501  F4DF         	movff	?_getNV,indf2
 38514                           
 38515                           ;../canargb_leds.c: 339:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38516   0023E2  0E00               	movlw	low _ledPaletteIndexes
 38517   0023E4  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38518   0023E6  6ED9               	movwf	fsr2l,c
 38519   0023E8  6ADA               	clrf	fsr2h,c
 38520   0023EA  0E07               	movlw	high _ledPaletteIndexes
 38521   0023EC  22DA               	addwfc	fsr2h,f,c
 38522   0023EE  38DF               	swapf	223,w,c
 38523   0023F0  0B0F               	andlw	15
 38524   0023F2  0D03               	mullw	3
 38525   0023F4  50F3               	movf	243,w,c
 38526   0023F6  0F03               	addlw	3
 38527   0023F8  EC56  F03D         	call	_getNV
 38528   0023FC  5006               	movf	doFlash@ledno^(0+1280),w,c
 38529   0023FE  0D03               	mullw	3
 38530   002400  0EFD               	movlw	low (_leds+1)
 38531   002402  24F3               	addwf	243,w,c
 38532   002404  6ED9               	movwf	fsr2l,c
 38533   002406  0E08               	movlw	high (_leds+1)
 38534   002408  20F4               	addwfc	prodh,w,c
 38535   00240A  6EDA               	movwf	fsr2h,c
 38536   00240C  C501  F4DF         	movff	?_getNV,indf2
 38537                           
 38538                           ;../canargb_leds.c: 340:                     break;
 38539   002410  EFF3  F012         	goto	l9317
 38540   002414                     l9307:
 38541                           
 38542                           ; BSR set to: 5
 38543                           ;../canargb_leds.c: 342:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38544   002414  0E00               	movlw	low _ledPaletteIndexes
 38545   002416  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38546   002418  6ED9               	movwf	fsr2l,c
 38547   00241A  6ADA               	clrf	fsr2h,c
 38548   00241C  0E07               	movlw	high _ledPaletteIndexes
 38549   00241E  22DA               	addwfc	fsr2h,f,c
 38550   002420  38DF               	swapf	223,w,c
 38551   002422  0B0F               	andlw	15
 38552   002424  0D03               	mullw	3
 38553   002426  28F3               	incf	243,w,c
 38554   002428  EC56  F03D         	call	_getNV
 38555   00242C  5006               	movf	doFlash@ledno^(0+1280),w,c
 38556   00242E  0D03               	mullw	3
 38557   002430  0EFD               	movlw	low (_leds+1)
 38558   002432  24F3               	addwf	243,w,c
 38559   002434  6ED9               	movwf	fsr2l,c
 38560   002436  0E08               	movlw	high (_leds+1)
 38561   002438  20F4               	addwfc	prodh,w,c
 38562   00243A  6EDA               	movwf	fsr2h,c
 38563   00243C  C501  F4DF         	movff	?_getNV,indf2
 38564                           
 38565                           ;../canargb_leds.c: 343:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38566   002440  0E00               	movlw	low _ledPaletteIndexes
 38567   002442  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38568   002444  6ED9               	movwf	fsr2l,c
 38569   002446  6ADA               	clrf	fsr2h,c
 38570   002448  0E07               	movlw	high _ledPaletteIndexes
 38571   00244A  22DA               	addwfc	fsr2h,f,c
 38572   00244C  38DF               	swapf	223,w,c
 38573   00244E  0B0F               	andlw	15
 38574   002450  0D03               	mullw	3
 38575   002452  50F3               	movf	243,w,c
 38576   002454  0F02               	addlw	2
 38577   002456  EC56  F03D         	call	_getNV
 38578   00245A  5006               	movf	doFlash@ledno^(0+1280),w,c
 38579   00245C  0D03               	mullw	3
 38580   00245E  0EFE               	movlw	low (_leds+2)
 38581   002460  24F3               	addwf	243,w,c
 38582   002462  6ED9               	movwf	fsr2l,c
 38583   002464  0E08               	movlw	high (_leds+2)
 38584   002466  20F4               	addwfc	prodh,w,c
 38585   002468  6EDA               	movwf	fsr2h,c
 38586   00246A  C501  F4DF         	movff	?_getNV,indf2
 38587                           
 38588                           ;../canargb_leds.c: 344:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38589   00246E  0E00               	movlw	low _ledPaletteIndexes
 38590   002470  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38591   002472  6ED9               	movwf	fsr2l,c
 38592   002474  6ADA               	clrf	fsr2h,c
 38593   002476  0E07               	movlw	high _ledPaletteIndexes
 38594   002478  22DA               	addwfc	fsr2h,f,c
 38595   00247A  38DF               	swapf	223,w,c
 38596   00247C  0B0F               	andlw	15
 38597   00247E  0D03               	mullw	3
 38598   002480  50F3               	movf	243,w,c
 38599   002482  0F03               	addlw	3
 38600   002484  EC56  F03D         	call	_getNV
 38601   002488  5006               	movf	doFlash@ledno^(0+1280),w,c
 38602   00248A  0D03               	mullw	3
 38603   00248C  0EFC               	movlw	low _leds
 38604   00248E  24F3               	addwf	243,w,c
 38605   002490  6ED9               	movwf	fsr2l,c
 38606   002492  0E08               	movlw	high _leds
 38607   002494  20F4               	addwfc	prodh,w,c
 38608   002496  6EDA               	movwf	fsr2h,c
 38609   002498  C501  F4DF         	movff	?_getNV,indf2
 38610                           
 38611                           ;../canargb_leds.c: 345:                     break;
 38612   00249C  EFF3  F012         	goto	l9317
 38613   0024A0                     l9309:
 38614                           
 38615                           ; BSR set to: 5
 38616                           ;../canargb_leds.c: 347:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38617   0024A0  0E00               	movlw	low _ledPaletteIndexes
 38618   0024A2  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38619   0024A4  6ED9               	movwf	fsr2l,c
 38620   0024A6  6ADA               	clrf	fsr2h,c
 38621   0024A8  0E07               	movlw	high _ledPaletteIndexes
 38622   0024AA  22DA               	addwfc	fsr2h,f,c
 38623   0024AC  38DF               	swapf	223,w,c
 38624   0024AE  0B0F               	andlw	15
 38625   0024B0  0D03               	mullw	3
 38626   0024B2  28F3               	incf	243,w,c
 38627   0024B4  EC56  F03D         	call	_getNV
 38628   0024B8  5006               	movf	doFlash@ledno^(0+1280),w,c
 38629   0024BA  0D03               	mullw	3
 38630   0024BC  0EFE               	movlw	low (_leds+2)
 38631   0024BE  24F3               	addwf	243,w,c
 38632   0024C0  6ED9               	movwf	fsr2l,c
 38633   0024C2  0E08               	movlw	high (_leds+2)
 38634   0024C4  20F4               	addwfc	prodh,w,c
 38635   0024C6  6EDA               	movwf	fsr2h,c
 38636   0024C8  C501  F4DF         	movff	?_getNV,indf2
 38637                           
 38638                           ;../canargb_leds.c: 348:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38639   0024CC  0E00               	movlw	low _ledPaletteIndexes
 38640   0024CE  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38641   0024D0  6ED9               	movwf	fsr2l,c
 38642   0024D2  6ADA               	clrf	fsr2h,c
 38643   0024D4  0E07               	movlw	high _ledPaletteIndexes
 38644   0024D6  22DA               	addwfc	fsr2h,f,c
 38645   0024D8  38DF               	swapf	223,w,c
 38646   0024DA  0B0F               	andlw	15
 38647   0024DC  0D03               	mullw	3
 38648   0024DE  50F3               	movf	243,w,c
 38649   0024E0  0F02               	addlw	2
 38650   0024E2  EC56  F03D         	call	_getNV
 38651   0024E6  5006               	movf	doFlash@ledno^(0+1280),w,c
 38652   0024E8  0D03               	mullw	3
 38653   0024EA  0EFD               	movlw	low (_leds+1)
 38654   0024EC  24F3               	addwf	243,w,c
 38655   0024EE  6ED9               	movwf	fsr2l,c
 38656   0024F0  0E08               	movlw	high (_leds+1)
 38657   0024F2  20F4               	addwfc	prodh,w,c
 38658   0024F4  6EDA               	movwf	fsr2h,c
 38659   0024F6  C501  F4DF         	movff	?_getNV,indf2
 38660                           
 38661                           ;../canargb_leds.c: 349:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38662   0024FA  0E00               	movlw	low _ledPaletteIndexes
 38663   0024FC  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38664   0024FE  6ED9               	movwf	fsr2l,c
 38665   002500  6ADA               	clrf	fsr2h,c
 38666   002502  0E07               	movlw	high _ledPaletteIndexes
 38667   002504  22DA               	addwfc	fsr2h,f,c
 38668   002506  38DF               	swapf	223,w,c
 38669   002508  0B0F               	andlw	15
 38670   00250A  0D03               	mullw	3
 38671   00250C  50F3               	movf	243,w,c
 38672   00250E  0F03               	addlw	3
 38673   002510  EC56  F03D         	call	_getNV
 38674   002514  5006               	movf	doFlash@ledno^(0+1280),w,c
 38675   002516  0D03               	mullw	3
 38676   002518  0EFC               	movlw	low _leds
 38677   00251A  24F3               	addwf	243,w,c
 38678   00251C  6ED9               	movwf	fsr2l,c
 38679   00251E  0E08               	movlw	high _leds
 38680   002520  20F4               	addwfc	prodh,w,c
 38681   002522  6EDA               	movwf	fsr2h,c
 38682   002524  C501  F4DF         	movff	?_getNV,indf2
 38683                           
 38684                           ;../canargb_leds.c: 350:                     break;
 38685   002528  EFF3  F012         	goto	l9317
 38686   00252C                     l9311:
 38687                           
 38688                           ; BSR set to: 5
 38689                           ;../canargb_leds.c: 352:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38690   00252C  0E00               	movlw	low _ledPaletteIndexes
 38691   00252E  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38692   002530  6ED9               	movwf	fsr2l,c
 38693   002532  6ADA               	clrf	fsr2h,c
 38694   002534  0E07               	movlw	high _ledPaletteIndexes
 38695   002536  22DA               	addwfc	fsr2h,f,c
 38696   002538  38DF               	swapf	223,w,c
 38697   00253A  0B0F               	andlw	15
 38698   00253C  0D03               	mullw	3
 38699   00253E  28F3               	incf	243,w,c
 38700   002540  EC56  F03D         	call	_getNV
 38701   002544  5006               	movf	doFlash@ledno^(0+1280),w,c
 38702   002546  0D03               	mullw	3
 38703   002548  0EFD               	movlw	low (_leds+1)
 38704   00254A  24F3               	addwf	243,w,c
 38705   00254C  6ED9               	movwf	fsr2l,c
 38706   00254E  0E08               	movlw	high (_leds+1)
 38707   002550  20F4               	addwfc	prodh,w,c
 38708   002552  6EDA               	movwf	fsr2h,c
 38709   002554  C501  F4DF         	movff	?_getNV,indf2
 38710                           
 38711                           ;../canargb_leds.c: 353:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38712   002558  0E00               	movlw	low _ledPaletteIndexes
 38713   00255A  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38714   00255C  6ED9               	movwf	fsr2l,c
 38715   00255E  6ADA               	clrf	fsr2h,c
 38716   002560  0E07               	movlw	high _ledPaletteIndexes
 38717   002562  22DA               	addwfc	fsr2h,f,c
 38718   002564  38DF               	swapf	223,w,c
 38719   002566  0B0F               	andlw	15
 38720   002568  0D03               	mullw	3
 38721   00256A  50F3               	movf	243,w,c
 38722   00256C  0F02               	addlw	2
 38723   00256E  EC56  F03D         	call	_getNV
 38724   002572  5006               	movf	doFlash@ledno^(0+1280),w,c
 38725   002574  0D03               	mullw	3
 38726   002576  0EFC               	movlw	low _leds
 38727   002578  24F3               	addwf	243,w,c
 38728   00257A  6ED9               	movwf	fsr2l,c
 38729   00257C  0E08               	movlw	high _leds
 38730   00257E  20F4               	addwfc	prodh,w,c
 38731   002580  6EDA               	movwf	fsr2h,c
 38732   002582  C501  F4DF         	movff	?_getNV,indf2
 38733                           
 38734                           ;../canargb_leds.c: 354:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38735   002586  0E00               	movlw	low _ledPaletteIndexes
 38736   002588  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38737   00258A  6ED9               	movwf	fsr2l,c
 38738   00258C  6ADA               	clrf	fsr2h,c
 38739   00258E  0E07               	movlw	high _ledPaletteIndexes
 38740   002590  22DA               	addwfc	fsr2h,f,c
 38741   002592  38DF               	swapf	223,w,c
 38742   002594  0B0F               	andlw	15
 38743   002596  0D03               	mullw	3
 38744   002598  50F3               	movf	243,w,c
 38745   00259A  0F03               	addlw	3
 38746   00259C  EC56  F03D         	call	_getNV
 38747   0025A0  5006               	movf	doFlash@ledno^(0+1280),w,c
 38748   0025A2  0D03               	mullw	3
 38749   0025A4  0EFE               	movlw	low (_leds+2)
 38750   0025A6  24F3               	addwf	243,w,c
 38751   0025A8  6ED9               	movwf	fsr2l,c
 38752   0025AA  0E08               	movlw	high (_leds+2)
 38753   0025AC  20F4               	addwfc	prodh,w,c
 38754   0025AE  6EDA               	movwf	fsr2h,c
 38755   0025B0  C501  F4DF         	movff	?_getNV,indf2
 38756                           
 38757                           ;../canargb_leds.c: 355:                     break;
 38758   0025B4  EFF3  F012         	goto	l9317
 38759   0025B8                     l9315:
 38760                           
 38761                           ; BSR set to: 5
 38762   0025B8  5005               	movf	doFlash@order^(0+1280),w,c
 38763                           
 38764                           ; Switch size 1, requested type "simple"
 38765                           ; Number of cases is 5, Range of values is 1 to 6
 38766                           ; switch strategies available:
 38767                           ; Name         Instructions Cycles
 38768                           ; simple_byte           16     9 (average)
 38769                           ;	Chosen strategy is simple_byte
 38770   0025BA  0A01               	xorlw	1	; case 1
 38771   0025BC  B4D8               	btfsc	status,2,c
 38772   0025BE  EF38  F011         	goto	l9301
 38773   0025C2  0A03               	xorlw	3	; case 2
 38774   0025C4  B4D8               	btfsc	status,2,c
 38775   0025C6  EF7E  F011         	goto	l9303
 38776   0025CA  0A06               	xorlw	6	; case 4
 38777   0025CC  B4D8               	btfsc	status,2,c
 38778   0025CE  EFC4  F011         	goto	l9305
 38779   0025D2  0A01               	xorlw	1	; case 5
 38780   0025D4  B4D8               	btfsc	status,2,c
 38781   0025D6  EF50  F012         	goto	l9309
 38782   0025DA  0A03               	xorlw	3	; case 6
 38783   0025DC  B4D8               	btfsc	status,2,c
 38784   0025DE  EF0A  F012         	goto	l9307
 38785   0025E2  EF96  F012         	goto	l9311
 38786   0025E6                     l9317:
 38787                           
 38788                           ;../canargb_leds.c: 359:     }
 38789   0025E6  2A06               	incf	doFlash@ledno^(0+1280),f,c
 38790   0025E8  2806               	incf	doFlash@ledno^(0+1280),w,c
 38791   0025EA  A4D8               	btfss	status,2,c
 38792   0025EC  EFFA  F012         	goto	u6681
 38793   0025F0  EFFC  F012         	goto	u6680
 38794   0025F4                     u6681:
 38795   0025F4  EF72  F00F         	goto	l9281
 38796   0025F8                     u6680:
 38797   0025F8                     
 38798                           ;../canargb_leds.c: 360:     refreshRequired = 1;
 38799   0025F8  0E01               	movlw	1
 38800   0025FA  0105               	movlb	5	; () banked
 38801   0025FC  6FAB               	movwf	_refreshRequired& (0+255),b
 38802   0025FE                     
 38803                           ; BSR set to: 5
 38804   0025FE  0012               	return		;funcret
 38805   002600                     __end_of_doFlash:
 38806                           	callstack 0
 38807                           
 38808 ;; *************** function _getNV *****************
 38809 ;; Defined at:
 38810 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 38811 ;; Parameters:    Size  Location     Type
 38812 ;;  index           1    wreg     unsigned char 
 38813 ;; Auto vars:     Size  Location     Type
 38814 ;;  index           1    3[COMRAM] unsigned char 
 38815 ;; Return value:  Size  Location     Type
 38816 ;;                  2    0[COMRAM] short 
 38817 ;; Registers used:
 38818 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38819 ;; Tracked objects:
 38820 ;;		On entry : 0/0
 38821 ;;		On exit  : 0/0
 38822 ;;		Unchanged: 0/0
 38823 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38827 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38828 ;;Total ram usage:        4 bytes
 38829 ;; Hardware stack levels used: 1
 38830 ;; Hardware stack levels required when called: 1
 38831 ;; This function calls:
 38832 ;;		Nothing
 38833 ;; This function is called by:
 38834 ;;		_doFlash
 38835 ;;		_nvProcessMessage
 38836 ;;		_nvTRnvrdCallback
 38837 ;; This function uses a non-reentrant model
 38838 ;;
 38839                           
 38840                           	psect	text104
 38841   007AAC                     __ptext104:
 38842                           	callstack 0
 38843   007AAC                     _getNV:
 38844                           	callstack 122
 38845                           
 38846                           ; BSR set to: 5
 38847                           ;incstack = 0
 38848                           ;getNV@index stored from wreg
 38849   007AAC  6E04               	movwf	getNV@index^(0+1280),c
 38850   007AAE                     
 38851                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return 49;
 38852   007AAE  5004               	movf	getNV@index^(0+1280),w,c
 38853   007AB0  A4D8               	btfss	status,2,c
 38854   007AB2  EF5D  F03D         	goto	u5421
 38855   007AB6  EF5F  F03D         	goto	u5420
 38856   007ABA                     u5421:
 38857   007ABA  EF65  F03D         	goto	l7977
 38858   007ABE                     u5420:
 38859   007ABE  0E00               	movlw	0
 38860   007AC0  6E02               	movwf	(?_getNV+1)^(0+1280),c
 38861   007AC2  0E31               	movlw	49
 38862   007AC4  6E01               	movwf	?_getNV^(0+1280),c
 38863   007AC6  EF7E  F03D         	goto	l1532
 38864   007ACA                     l7977:
 38865                           
 38866                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > 49) return -CMDERR_INV_NV_IDX;
 38867   007ACA  0E31               	movlw	49
 38868   007ACC  6404               	cpfsgt	getNV@index^(0+1280),c
 38869   007ACE  EF6B  F03D         	goto	u5431
 38870   007AD2  EF6D  F03D         	goto	u5430
 38871   007AD6                     u5431:
 38872   007AD6  EF73  F03D         	goto	l7983
 38873   007ADA                     u5430:
 38874   007ADA  0EFF               	movlw	255
 38875   007ADC  6E02               	movwf	(?_getNV+1)^(0+1280),c
 38876   007ADE  0EF6               	movlw	246
 38877   007AE0  6E01               	movwf	?_getNV^(0+1280),c
 38878   007AE2  EF7E  F03D         	goto	l1532
 38879   007AE6                     l7983:
 38880                           
 38881                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 38882   007AE6  0E00               	movlw	low _nvCache
 38883   007AE8  2404               	addwf	getNV@index^(0+1280),w,c
 38884   007AEA  6ED9               	movwf	fsr2l,c
 38885   007AEC  6ADA               	clrf	fsr2h,c
 38886   007AEE  0E06               	movlw	high _nvCache
 38887   007AF0  22DA               	addwfc	fsr2h,f,c
 38888   007AF2  50DF               	movf	indf2,w,c
 38889   007AF4  6E03               	movwf	??_getNV^(0+1280),c
 38890   007AF6  5003               	movf	??_getNV^(0+1280),w,c
 38891   007AF8  6E01               	movwf	?_getNV^(0+1280),c
 38892   007AFA  6A02               	clrf	(?_getNV+1)^(0+1280),c
 38893   007AFC                     l1532:
 38894   007AFC  0012               	return		;funcret
 38895   007AFE                     __end_of_getNV:
 38896                           	callstack 0
 38897                           
 38898 ;; *************** function _initRomOps *****************
 38899 ;; Defined at:
 38900 ;;		line 156 in file "../../VLCBlib_PIC/nvm.c"
 38901 ;; Parameters:    Size  Location     Type
 38902 ;;		None
 38903 ;; Auto vars:     Size  Location     Type
 38904 ;;		None
 38905 ;; Return value:  Size  Location     Type
 38906 ;;                  1    wreg      void 
 38907 ;; Registers used:
 38908 ;;		wreg, status,2
 38909 ;; Tracked objects:
 38910 ;;		On entry : 0/0
 38911 ;;		On exit  : 0/0
 38912 ;;		Unchanged: 0/0
 38913 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38918 ;;Total ram usage:        0 bytes
 38919 ;; Hardware stack levels used: 1
 38920 ;; Hardware stack levels required when called: 1
 38921 ;; This function calls:
 38922 ;;		Nothing
 38923 ;; This function is called by:
 38924 ;;		_main
 38925 ;; This function uses a non-reentrant model
 38926 ;;
 38927                           
 38928                           	psect	text105
 38929   00829C                     __ptext105:
 38930                           	callstack 0
 38931   00829C                     _initRomOps:
 38932                           	callstack 125
 38933   00829C                     
 38934                           ;../../VLCBlib_PIC/nvm.c: 157:     flashFlags.asByte = 0;
 38935   00829C  0105               	movlb	5	; () banked
 38936   00829E  6B9B               	clrf	_flashFlags& (0+255),b
 38937   0082A0                     
 38938                           ; BSR set to: 5
 38939                           ;../../VLCBlib_PIC/nvm.c: 158:     flashBlock = 0x0800;
 38940   0082A0  0E00               	movlw	0
 38941   0082A2  6F84               	movwf	_flashBlock& (0+255),b
 38942   0082A4  0E08               	movlw	8
 38943   0082A6  6F85               	movwf	(_flashBlock+1)& (0+255),b
 38944   0082A8  0E00               	movlw	0
 38945   0082AA  6F86               	movwf	(_flashBlock+2)& (0+255),b
 38946   0082AC                     
 38947                           ; BSR set to: 5
 38948                           ;../../VLCBlib_PIC/nvm.c: 160:     TBLPTRU = 0;
 38949   0082AC  6AF8               	clrf	248,c	;volatile
 38950   0082AE                     
 38951                           ; BSR set to: 5
 38952                           ;../../VLCBlib_PIC/nvm.c: 162:     NVMCON1bits.WRERR = 0;
 38953   0082AE  0100               	movlb	0	; () banked
 38954   0082B0  9F41               	bcf	65,7,b	;volsfr
 38955   0082B2                     
 38956                           ; BSR set to: 0
 38957   0082B2  0012               	return		;funcret
 38958   0082B4                     __end_of_initRomOps:
 38959                           	callstack 0
 38960                           
 38961 ;; *************** function _checkPowerOnPb *****************
 38962 ;; Defined at:
 38963 ;;		line 966 in file "../../VLCBlib_PIC/vlcb.c"
 38964 ;; Parameters:    Size  Location     Type
 38965 ;;		None
 38966 ;; Auto vars:     Size  Location     Type
 38967 ;;  i               1   59[COMRAM] unsigned char 
 38968 ;; Return value:  Size  Location     Type
 38969 ;;                  1    wreg      void 
 38970 ;; Registers used:
 38971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38972 ;; Tracked objects:
 38973 ;;		On entry : 0/0
 38974 ;;		On exit  : 0/0
 38975 ;;		Unchanged: 0/0
 38976 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38978 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38980 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38981 ;;Total ram usage:        1 bytes
 38982 ;; Hardware stack levels used: 1
 38983 ;; Hardware stack levels required when called: 11
 38984 ;; This function calls:
 38985 ;;		_APP_testMode
 38986 ;;		_factoryReset
 38987 ;;		_pbDownTimer
 38988 ;;		_pbUpTimer
 38989 ;;		_showStatus
 38990 ;; This function is called by:
 38991 ;;		_main
 38992 ;; This function uses a non-reentrant model
 38993 ;;
 38994                           
 38995                           	psect	text106
 38996   00669A                     __ptext106:
 38997                           	callstack 0
 38998   00669A                     _checkPowerOnPb:
 38999                           	callstack 115
 39000   00669A                     
 39001                           ;../../VLCBlib_PIC/vlcb.c: 967:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 970:     if ((!
      +                          (PORTAbits.RA2))) {
 39002   00669A  B4CE               	btfsc	206,2,c	;volatile
 39003   00669C  EF52  F033         	goto	u8371
 39004   0066A0  EF54  F033         	goto	u8370
 39005   0066A4                     u8371:
 39006   0066A4  EF9F  F033         	goto	l2001
 39007   0066A8                     u8370:
 39008   0066A8                     
 39009                           ;../../VLCBlib_PIC/vlcb.c: 972:         i = pbDownTimer(28);
 39010   0066A8  0E1C               	movlw	28
 39011   0066AA  EC13  F030         	call	_pbDownTimer
 39012   0066AE  6E3C               	movwf	checkPowerOnPb@i^(0+1280),c
 39013   0066B0                     
 39014                           ;../../VLCBlib_PIC/vlcb.c: 973:         if (i == 0) {
 39015   0066B0  503C               	movf	checkPowerOnPb@i^(0+1280),w,c
 39016   0066B2  A4D8               	btfss	status,2,c
 39017   0066B4  EF5E  F033         	goto	u8381
 39018   0066B8  EF60  F033         	goto	u8380
 39019   0066BC                     u8381:
 39020   0066BC  EF64  F033         	goto	l10961
 39021   0066C0                     u8380:
 39022   0066C0  EF9F  F033         	goto	l2001
 39023   0066C4                     l10957:
 39024                           
 39025                           ;../../VLCBlib_PIC/vlcb.c: 975:             return;
 39026   0066C4  EF9F  F033         	goto	l2001
 39027   0066C8                     l10961:
 39028   0066C8  0E04               	movlw	4
 39029   0066CA  603C               	cpfslt	checkPowerOnPb@i^(0+1280),c
 39030   0066CC  EF6A  F033         	goto	u8391
 39031   0066D0  EF6C  F033         	goto	u8390
 39032   0066D4                     u8391:
 39033   0066D4  EF70  F033         	goto	l10965
 39034   0066D8                     u8390:
 39035   0066D8                     
 39036                           ;../../VLCBlib_PIC/vlcb.c: 977:             APP_testMode();
 39037   0066D8  ECCF  F01F         	call	_APP_testMode	;wreg free
 39038                           
 39039                           ;../../VLCBlib_PIC/vlcb.c: 978:         } else if (i >= 8) {
 39040   0066DC  EF9F  F033         	goto	l2001
 39041   0066E0                     l10965:
 39042   0066E0  0E07               	movlw	7
 39043   0066E2  643C               	cpfsgt	checkPowerOnPb@i^(0+1280),c
 39044   0066E4  EF76  F033         	goto	u8401
 39045   0066E8  EF78  F033         	goto	u8400
 39046   0066EC                     u8401:
 39047   0066EC  EF9F  F033         	goto	l2001
 39048   0066F0                     u8400:
 39049   0066F0                     
 39050                           ;../../VLCBlib_PIC/vlcb.c: 979:             showStatus(STATUS_RESET_WARNING);
 39051   0066F0  0E04               	movlw	4
 39052   0066F2  EC33  F028         	call	_showStatus
 39053                           
 39054                           ;../../VLCBlib_PIC/vlcb.c: 981:             i = pbUpTimer(5);
 39055   0066F6  0E05               	movlw	5
 39056   0066F8  ECB2  F02F         	call	_pbUpTimer
 39057   0066FC  6E3C               	movwf	checkPowerOnPb@i^(0+1280),c
 39058   0066FE                     
 39059                           ;../../VLCBlib_PIC/vlcb.c: 982:             if (i == 0) {
 39060   0066FE  503C               	movf	checkPowerOnPb@i^(0+1280),w,c
 39061   006700  A4D8               	btfss	status,2,c
 39062   006702  EF85  F033         	goto	u8411
 39063   006706  EF87  F033         	goto	u8410
 39064   00670A                     u8411:
 39065   00670A  EF89  F033         	goto	l10973
 39066   00670E                     u8410:
 39067   00670E  EF9F  F033         	goto	l2001
 39068   006712                     l10973:
 39069                           
 39070                           ;../../VLCBlib_PIC/vlcb.c: 986:             i = pbDownTimer(5);
 39071   006712  0E05               	movlw	5
 39072   006714  EC13  F030         	call	_pbDownTimer
 39073   006718  6E3C               	movwf	checkPowerOnPb@i^(0+1280),c
 39074   00671A                     
 39075                           ;../../VLCBlib_PIC/vlcb.c: 987:             if ((i>=2) && (i < 4)) {
 39076   00671A  0E01               	movlw	1
 39077   00671C  643C               	cpfsgt	checkPowerOnPb@i^(0+1280),c
 39078   00671E  EF93  F033         	goto	u8421
 39079   006722  EF95  F033         	goto	u8420
 39080   006726                     u8421:
 39081   006726  EF62  F033         	goto	l10957
 39082   00672A                     u8420:
 39083   00672A  0E04               	movlw	4
 39084   00672C  603C               	cpfslt	checkPowerOnPb@i^(0+1280),c
 39085   00672E  EF9B  F033         	goto	u8431
 39086   006732  EF9D  F033         	goto	u8430
 39087   006736                     u8431:
 39088   006736  EF62  F033         	goto	l10957
 39089   00673A                     u8430:
 39090   00673A                     
 39091                           ;../../VLCBlib_PIC/vlcb.c: 988:                 factoryReset();
 39092   00673A  EC19  F02B         	call	_factoryReset	;wreg free
 39093   00673E                     l2001:
 39094   00673E  0012               	return		;funcret
 39095   006740                     __end_of_checkPowerOnPb:
 39096                           	callstack 0
 39097                           
 39098 ;; *************** function _showStatus *****************
 39099 ;; Defined at:
 39100 ;;		line 235 in file "../../VLCBlib_PIC/statusLeds2.c"
 39101 ;; Parameters:    Size  Location     Type
 39102 ;;  s               1    wreg     enum E23436
 39103 ;; Auto vars:     Size  Location     Type
 39104 ;;  s               1    2[COMRAM] enum E23436
 39105 ;; Return value:  Size  Location     Type
 39106 ;;                  1    wreg      void 
 39107 ;; Registers used:
 39108 ;;		wreg, status,2, status,0
 39109 ;; Tracked objects:
 39110 ;;		On entry : 0/0
 39111 ;;		On exit  : 0/0
 39112 ;;		Unchanged: 0/0
 39113 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39116 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39117 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39118 ;;Total ram usage:        3 bytes
 39119 ;; Hardware stack levels used: 1
 39120 ;; Hardware stack levels required when called: 1
 39121 ;; This function calls:
 39122 ;;		Nothing
 39123 ;; This function is called by:
 39124 ;;		_setLEDsByMode
 39125 ;;		_checkPowerOnPb
 39126 ;;		_poll
 39127 ;; This function uses a non-reentrant model
 39128 ;;
 39129                           
 39130                           	psect	text107
 39131   005066                     __ptext107:
 39132                           	callstack 0
 39133   005066                     _showStatus:
 39134                           	callstack 122
 39135                           
 39136                           ;incstack = 0
 39137                           ;showStatus@s stored from wreg
 39138   005066  6E03               	movwf	showStatus@s^(0+1280),c
 39139   005068                     
 39140                           ;../../VLCBlib_PIC/statusLeds2.c: 236:     switch (s) {
 39141   005068  EF92  F028         	goto	l8331
 39142   00506C                     l1774:
 39143                           
 39144                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[0] = LED_OFF;
 39145   00506C  0105               	movlb	5	; () banked
 39146   00506E  6B8B               	clrf	_ledState& (0+255),b
 39147                           
 39148                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             ledState[1] = LED_OFF;
 39149   005070  6B8C               	clrf	(_ledState+1)& (0+255),b
 39150                           
 39151                           ;../../VLCBlib_PIC/statusLeds2.c: 240:             break;
 39152   005072  EFD3  F028         	goto	l1794
 39153   005076                     l8301:
 39154                           
 39155                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[0] = LED_ON;
 39156   005076  0E01               	movlw	1
 39157   005078  0105               	movlb	5	; () banked
 39158   00507A  6F8B               	movwf	_ledState& (0+255),b
 39159   00507C                     
 39160                           ; BSR set to: 5
 39161                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             ledState[1] = LED_OFF;
 39162   00507C  6B8C               	clrf	(_ledState+1)& (0+255),b
 39163                           
 39164                           ;../../VLCBlib_PIC/statusLeds2.c: 244:             break;
 39165   00507E  EFD3  F028         	goto	l1794
 39166   005082                     l1777:
 39167                           
 39168                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[0] = LED_OFF;
 39169   005082  0105               	movlb	5	; () banked
 39170   005084  6B8B               	clrf	_ledState& (0+255),b
 39171   005086                     
 39172                           ; BSR set to: 5
 39173                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             ledState[1] = LED_FLASH_50_1HZ;
 39174   005086  0E03               	movlw	3
 39175   005088  6F8C               	movwf	(_ledState+1)& (0+255),b
 39176                           
 39177                           ;../../VLCBlib_PIC/statusLeds2.c: 248:             break;
 39178   00508A  EFD3  F028         	goto	l1794
 39179   00508E                     l1780:
 39180   00508E                     l1782:
 39181                           
 39182                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[0] = LED_OFF;
 39183   00508E  0105               	movlb	5	; () banked
 39184   005090  6B8B               	clrf	_ledState& (0+255),b
 39185   005092                     
 39186                           ; BSR set to: 5
 39187                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             ledState[1] = LED_ON;
 39188   005092  0E01               	movlw	1
 39189   005094  6F8C               	movwf	(_ledState+1)& (0+255),b
 39190                           
 39191                           ;../../VLCBlib_PIC/statusLeds2.c: 256:             break;
 39192   005096  EFD3  F028         	goto	l1794
 39193   00509A                     l1783:
 39194                           
 39195                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[1] = 0;
 39196   00509A  0105               	movlb	5	; () banked
 39197   00509C  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39198   00509E                     
 39199                           ; BSR set to: 5
 39200                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             flashCounter[0] = 25;
 39201   00509E  0E19               	movlw	25
 39202   0050A0  6F89               	movwf	_flashCounter& (0+255),b
 39203                           
 39204                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[0] = LED_FLASH_50_2HZ;
 39205   0050A2  0E02               	movlw	2
 39206   0050A4  6F8B               	movwf	_ledState& (0+255),b
 39207                           
 39208                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             ledState[1] = LED_FLASH_50_2HZ;
 39209   0050A6  0E02               	movlw	2
 39210   0050A8  6F8C               	movwf	(_ledState+1)& (0+255),b
 39211                           
 39212                           ;../../VLCBlib_PIC/statusLeds2.c: 262:             break;
 39213   0050AA  EFD3  F028         	goto	l1794
 39214   0050AE                     l8311:
 39215                           
 39216                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 39217   0050AE  0105               	movlb	5	; () banked
 39218   0050B0  29A1               	incf	_mode_state& (0+255),w,b
 39219   0050B2  A4D8               	btfss	status,2,c
 39220   0050B4  EF5E  F028         	goto	u5671
 39221   0050B8  EF60  F028         	goto	u5670
 39222   0050BC                     u5671:
 39223   0050BC  EF64  F028         	goto	l8315
 39224   0050C0                     u5670:
 39225   0050C0                     
 39226                           ; BSR set to: 5
 39227                           ;../../VLCBlib_PIC/statusLeds2.c: 265:                 ledState[1] = LED_SINGLE_FLICKER_
      +                          ON;
 39228   0050C0  0E06               	movlw	6
 39229   0050C2  6F8C               	movwf	(_ledState+1)& (0+255),b
 39230                           
 39231                           ;../../VLCBlib_PIC/statusLeds2.c: 266:             } else if (mode_state == MODE_NORMAL)
      +                           {
 39232   0050C4  EFD3  F028         	goto	l1794
 39233   0050C8                     l8315:
 39234                           
 39235                           ; BSR set to: 5
 39236   0050C8  05A1               	decf	_mode_state& (0+255),w,b
 39237   0050CA  A4D8               	btfss	status,2,c
 39238   0050CC  EF6A  F028         	goto	u5681
 39239   0050D0  EF6C  F028         	goto	u5680
 39240   0050D4                     u5681:
 39241   0050D4  EFD3  F028         	goto	l1794
 39242   0050D8                     u5680:
 39243   0050D8                     
 39244                           ; BSR set to: 5
 39245                           ;../../VLCBlib_PIC/statusLeds2.c: 267:                 ledState[0] = LED_SINGLE_FLICKER_
      +                          ON;
 39246   0050D8  0E06               	movlw	6
 39247   0050DA  6F8B               	movwf	_ledState& (0+255),b
 39248   0050DC  EFD3  F028         	goto	l1794
 39249   0050E0                     l8319:
 39250                           
 39251                           ;../../VLCBlib_PIC/statusLeds2.c: 271:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 39252   0050E0  0105               	movlb	5	; () banked
 39253   0050E2  29A1               	incf	_mode_state& (0+255),w,b
 39254   0050E4  A4D8               	btfss	status,2,c
 39255   0050E6  EF77  F028         	goto	u5691
 39256   0050EA  EF79  F028         	goto	u5690
 39257   0050EE                     u5691:
 39258   0050EE  EF7D  F028         	goto	l8323
 39259   0050F2                     u5690:
 39260   0050F2                     
 39261                           ; BSR set to: 5
 39262                           ;../../VLCBlib_PIC/statusLeds2.c: 272:                 ledState[1] = LED_LONG_FLICKER_ON
      +                          ;
 39263   0050F2  0E08               	movlw	8
 39264   0050F4  6F8C               	movwf	(_ledState+1)& (0+255),b
 39265                           
 39266                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             } else if (mode_state == MODE_NORMAL)
      +                           {
 39267   0050F6  EFD3  F028         	goto	l1794
 39268   0050FA                     l8323:
 39269                           
 39270                           ; BSR set to: 5
 39271   0050FA  05A1               	decf	_mode_state& (0+255),w,b
 39272   0050FC  A4D8               	btfss	status,2,c
 39273   0050FE  EF83  F028         	goto	u5701
 39274   005102  EF85  F028         	goto	u5700
 39275   005106                     u5701:
 39276   005106  EFD3  F028         	goto	l1794
 39277   00510A                     u5700:
 39278   00510A                     
 39279                           ; BSR set to: 5
 39280                           ;../../VLCBlib_PIC/statusLeds2.c: 274:                 ledState[0] = LED_LONG_FLICKER_ON
      +                          ;
 39281   00510A  0E08               	movlw	8
 39282   00510C  6F8B               	movwf	_ledState& (0+255),b
 39283   00510E  EFD3  F028         	goto	l1794
 39284   005112                     l1793:
 39285                           
 39286                           ;../../VLCBlib_PIC/statusLeds2.c: 279:             flashCounter[1] = 0;
 39287   005112  0105               	movlb	5	; () banked
 39288   005114  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39289                           
 39290                           ;../../VLCBlib_PIC/statusLeds2.c: 280:             flashCounter[0] = 0;
 39291   005116  6B89               	clrf	_flashCounter& (0+255),b
 39292   005118                     
 39293                           ; BSR set to: 5
 39294                           ;../../VLCBlib_PIC/statusLeds2.c: 281:             ledState[0] = LED_FLASH_50_2HZ;
 39295   005118  0E02               	movlw	2
 39296   00511A  6F8B               	movwf	_ledState& (0+255),b
 39297                           
 39298                           ;../../VLCBlib_PIC/statusLeds2.c: 282:             ledState[1] = LED_FLASH_50_2HZ;
 39299   00511C  0E02               	movlw	2
 39300   00511E  6F8C               	movwf	(_ledState+1)& (0+255),b
 39301                           
 39302                           ;../../VLCBlib_PIC/statusLeds2.c: 283:             break;
 39303   005120  EFD3  F028         	goto	l1794
 39304   005124                     l8331:
 39305   005124  5003               	movf	showStatus@s^(0+1280),w,c
 39306   005126  6E01               	movwf	??_showStatus^(0+1280),c
 39307   005128  6A02               	clrf	(??_showStatus+1)^(0+1280),c
 39308                           
 39309                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39310                           ; Switch size 1, requested type "simple"
 39311                           ; Number of cases is 1, Range of values is 0 to 0
 39312                           ; switch strategies available:
 39313                           ; Name         Instructions Cycles
 39314                           ; simple_byte            4     3 (average)
 39315                           ;	Chosen strategy is simple_byte
 39316   00512A  5002               	movf	(??_showStatus+1)^(0+1280),w,c
 39317   00512C  0A00               	xorlw	0	; case 0
 39318   00512E  B4D8               	btfsc	status,2,c
 39319   005130  EF9C  F028         	goto	l11637
 39320   005134  EFD3  F028         	goto	l1794
 39321   005138                     l11637:
 39322                           
 39323                           ; Switch size 1, requested type "simple"
 39324                           ; Number of cases is 13, Range of values is 0 to 12
 39325                           ; switch strategies available:
 39326                           ; Name         Instructions Cycles
 39327                           ; simple_byte           40    21 (average)
 39328                           ;	Chosen strategy is simple_byte
 39329   005138  5001               	movf	??_showStatus^(0+1280),w,c
 39330   00513A  0A00               	xorlw	0	; case 0
 39331   00513C  B4D8               	btfsc	status,2,c
 39332   00513E  EF36  F028         	goto	l1774
 39333   005142  0A01               	xorlw	1	; case 1
 39334   005144  B4D8               	btfsc	status,2,c
 39335   005146  EF3B  F028         	goto	l8301
 39336   00514A  0A03               	xorlw	3	; case 2
 39337   00514C  B4D8               	btfsc	status,2,c
 39338   00514E  EF41  F028         	goto	l1777
 39339   005152  0A01               	xorlw	1	; case 3
 39340   005154  B4D8               	btfsc	status,2,c
 39341   005156  EF47  F028         	goto	l1780
 39342   00515A  0A07               	xorlw	7	; case 4
 39343   00515C  B4D8               	btfsc	status,2,c
 39344   00515E  EF4D  F028         	goto	l1783
 39345   005162  0A01               	xorlw	1	; case 5
 39346   005164  B4D8               	btfsc	status,2,c
 39347   005166  EF47  F028         	goto	l1782
 39348   00516A  0A03               	xorlw	3	; case 6
 39349   00516C  B4D8               	btfsc	status,2,c
 39350   00516E  EF47  F028         	goto	l1782
 39351   005172  0A01               	xorlw	1	; case 7
 39352   005174  B4D8               	btfsc	status,2,c
 39353   005176  EF57  F028         	goto	l8311
 39354   00517A  0A0F               	xorlw	15	; case 8
 39355   00517C  B4D8               	btfsc	status,2,c
 39356   00517E  EF70  F028         	goto	l8319
 39357   005182  0A01               	xorlw	1	; case 9
 39358   005184  B4D8               	btfsc	status,2,c
 39359   005186  EF47  F028         	goto	l1782
 39360   00518A  0A03               	xorlw	3	; case 10
 39361   00518C  B4D8               	btfsc	status,2,c
 39362   00518E  EF47  F028         	goto	l1782
 39363   005192  0A01               	xorlw	1	; case 11
 39364   005194  B4D8               	btfsc	status,2,c
 39365   005196  EF89  F028         	goto	l1793
 39366   00519A  0A07               	xorlw	7	; case 12
 39367   00519C  B4D8               	btfsc	status,2,c
 39368   00519E  EF89  F028         	goto	l1793
 39369   0051A2  EFD3  F028         	goto	l1794
 39370   0051A6                     l1794:
 39371   0051A6  0012               	return		;funcret
 39372   0051A8                     __end_of_showStatus:
 39373                           	callstack 0
 39374                           
 39375 ;; *************** function _pbUpTimer *****************
 39376 ;; Defined at:
 39377 ;;		line 941 in file "../../VLCBlib_PIC/vlcb.c"
 39378 ;; Parameters:    Size  Location     Type
 39379 ;;  timeout         1    wreg     unsigned char 
 39380 ;; Auto vars:     Size  Location     Type
 39381 ;;  timeout         1   27[COMRAM] unsigned char 
 39382 ;; Return value:  Size  Location     Type
 39383 ;;                  1    wreg      unsigned char 
 39384 ;; Registers used:
 39385 ;;		wreg, status,2, status,0, cstack
 39386 ;; Tracked objects:
 39387 ;;		On entry : 0/0
 39388 ;;		On exit  : 0/0
 39389 ;;		Unchanged: 0/0
 39390 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39393 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39394 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39395 ;;Total ram usage:        5 bytes
 39396 ;; Hardware stack levels used: 1
 39397 ;; Hardware stack levels required when called: 3
 39398 ;; This function calls:
 39399 ;;		___lldiv
 39400 ;;		___lmul
 39401 ;;		_leds_poll
 39402 ;;		_tickGet
 39403 ;; This function is called by:
 39404 ;;		_checkPowerOnPb
 39405 ;; This function uses a non-reentrant model
 39406 ;;
 39407                           
 39408                           	psect	text108
 39409   005F64                     __ptext108:
 39410                           	callstack 0
 39411   005F64                     _pbUpTimer:
 39412                           	callstack 122
 39413                           
 39414                           ;incstack = 0
 39415                           ;pbUpTimer@timeout stored from wreg
 39416   005F64  6E1C               	movwf	pbUpTimer@timeout^(0+1280),c
 39417   005F66                     
 39418                           ;../../VLCBlib_PIC/vlcb.c: 943:     pbTimer.val = tickGet();
 39419   005F66  ECF7  F039         	call	_tickGet	;wreg free
 39420   005F6A  C501  F570         	movff	?_tickGet,_pbTimer
 39421   005F6E  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 39422   005F72  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 39423   005F76  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 39424                           
 39425                           ;../../VLCBlib_PIC/vlcb.c: 944:     while (! ((!(PORTAbits.RA2)))) {
 39426   005F7A  EFF1  F02F         	goto	l1992
 39427   005F7E                     l10843:
 39428                           
 39429                           ;../../VLCBlib_PIC/vlcb.c: 945:         leds_poll();
 39430   005F7E  EC22  F01B         	call	_leds_poll	;wreg free
 39431                           
 39432                           ;../../VLCBlib_PIC/vlcb.c: 946:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 39433   005F82  ECF7  F039         	call	_tickGet	;wreg free
 39434   005F86  0105               	movlb	5	; () banked
 39435   005F88  5170               	movf	_pbTimer& (0+255),w,b
 39436   005F8A  5C01               	subwf	?_tickGet^(0+1280),w,c
 39437   005F8C  6E18               	movwf	??_pbUpTimer^(0+1280),c
 39438   005F8E  5171               	movf	(_pbTimer+1)& (0+255),w,b
 39439   005F90  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39440   005F92  6E19               	movwf	(??_pbUpTimer+1)^(0+1280),c
 39441   005F94  5172               	movf	(_pbTimer+2)& (0+255),w,b
 39442   005F96  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39443   005F98  6E1A               	movwf	(??_pbUpTimer+2)^(0+1280),c
 39444   005F9A  5173               	movf	(_pbTimer+3)& (0+255),w,b
 39445   005F9C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39446   005F9E  6E1B               	movwf	(??_pbUpTimer+3)^(0+1280),c
 39447   005FA0  501C               	movf	pbUpTimer@timeout^(0+1280),w,c
 39448   005FA2  6E01               	movwf	___lmul@multiplier^(0+1280),c
 39449   005FA4  6A02               	clrf	(___lmul@multiplier+1)^(0+1280),c
 39450   005FA6  6A03               	clrf	(___lmul@multiplier+2)^(0+1280),c
 39451   005FA8  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 39452   005FAA  0E24               	movlw	36
 39453   005FAC  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 39454   005FAE  0EF4               	movlw	244
 39455   005FB0  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 39456   005FB2  0E00               	movlw	0
 39457   005FB4  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 39458   005FB6  0E00               	movlw	0
 39459   005FB8  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 39460   005FBA  EC49  F03B         	call	___lmul	;wreg free
 39461   005FBE  5018               	movf	??_pbUpTimer^(0+1280),w,c
 39462   005FC0  5C01               	subwf	?___lmul^(0+1280),w,c
 39463   005FC2  5019               	movf	(??_pbUpTimer+1)^(0+1280),w,c
 39464   005FC4  5802               	subwfb	(?___lmul+1)^(0+1280),w,c
 39465   005FC6  501A               	movf	(??_pbUpTimer+2)^(0+1280),w,c
 39466   005FC8  5803               	subwfb	(?___lmul+2)^(0+1280),w,c
 39467   005FCA  501B               	movf	(??_pbUpTimer+3)^(0+1280),w,c
 39468   005FCC  5804               	subwfb	(?___lmul+3)^(0+1280),w,c
 39469   005FCE  B0D8               	btfsc	status,0,c
 39470   005FD0  EFEC  F02F         	goto	u8301
 39471   005FD4  EFEE  F02F         	goto	u8300
 39472   005FD8                     u8301:
 39473   005FD8  EFF1  F02F         	goto	l1992
 39474   005FDC                     u8300:
 39475   005FDC                     
 39476                           ;../../VLCBlib_PIC/vlcb.c: 947:             return 0;
 39477   005FDC  0E00               	movlw	0
 39478   005FDE  EF12  F030         	goto	l1995
 39479   005FE2                     l1992:
 39480                           
 39481                           ;../../VLCBlib_PIC/vlcb.c: 944:     while (! ((!(PORTAbits.RA2)))) {
 39482   005FE2  B4CE               	btfsc	206,2,c	;volatile
 39483   005FE4  EFF6  F02F         	goto	u8311
 39484   005FE8  EFF8  F02F         	goto	u8310
 39485   005FEC                     u8311:
 39486   005FEC  EFBF  F02F         	goto	l10843
 39487   005FF0                     u8310:
 39488   005FF0                     
 39489                           ;../../VLCBlib_PIC/vlcb.c: 951:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 39490   005FF0  ECF7  F039         	call	_tickGet	;wreg free
 39491   005FF4  0105               	movlb	5	; () banked
 39492   005FF6  5170               	movf	_pbTimer& (0+255),w,b
 39493   005FF8  5C01               	subwf	?_tickGet^(0+1280),w,c
 39494   005FFA  6E0B               	movwf	___lldiv@dividend^(0+1280),c
 39495   005FFC  5171               	movf	(_pbTimer+1)& (0+255),w,b
 39496   005FFE  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39497   006000  6E0C               	movwf	(___lldiv@dividend+1)^(0+1280),c
 39498   006002  5172               	movf	(_pbTimer+2)& (0+255),w,b
 39499   006004  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39500   006006  6E0D               	movwf	(___lldiv@dividend+2)^(0+1280),c
 39501   006008  5173               	movf	(_pbTimer+3)& (0+255),w,b
 39502   00600A  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39503   00600C  6E0E               	movwf	(___lldiv@dividend+3)^(0+1280),c
 39504   00600E  0E24               	movlw	36
 39505   006010  6E0F               	movwf	___lldiv@divisor^(0+1280),c
 39506   006012  0EF4               	movlw	244
 39507   006014  6E10               	movwf	(___lldiv@divisor+1)^(0+1280),c
 39508   006016  0E00               	movlw	0
 39509   006018  6E11               	movwf	(___lldiv@divisor+2)^(0+1280),c
 39510   00601A  0E00               	movlw	0
 39511   00601C  6E12               	movwf	(___lldiv@divisor+3)^(0+1280),c
 39512   00601E  ECF3  F033         	call	___lldiv	;wreg free
 39513   006022  500B               	movf	?___lldiv^(0+1280),w,c
 39514   006024                     l1995:
 39515   006024  0012               	return		;funcret
 39516   006026                     __end_of_pbUpTimer:
 39517                           	callstack 0
 39518                           
 39519 ;; *************** function _pbDownTimer *****************
 39520 ;; Defined at:
 39521 ;;		line 922 in file "../../VLCBlib_PIC/vlcb.c"
 39522 ;; Parameters:    Size  Location     Type
 39523 ;;  timeout         1    wreg     unsigned char 
 39524 ;; Auto vars:     Size  Location     Type
 39525 ;;  timeout         1   27[COMRAM] unsigned char 
 39526 ;; Return value:  Size  Location     Type
 39527 ;;                  1    wreg      unsigned char 
 39528 ;; Registers used:
 39529 ;;		wreg, status,2, status,0, cstack
 39530 ;; Tracked objects:
 39531 ;;		On entry : 0/0
 39532 ;;		On exit  : 0/0
 39533 ;;		Unchanged: 0/0
 39534 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39537 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39538 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39539 ;;Total ram usage:        5 bytes
 39540 ;; Hardware stack levels used: 1
 39541 ;; Hardware stack levels required when called: 3
 39542 ;; This function calls:
 39543 ;;		___lldiv
 39544 ;;		___lmul
 39545 ;;		_leds_poll
 39546 ;;		_tickGet
 39547 ;; This function is called by:
 39548 ;;		_checkPowerOnPb
 39549 ;; This function uses a non-reentrant model
 39550 ;;
 39551                           
 39552                           	psect	text109
 39553   006026                     __ptext109:
 39554                           	callstack 0
 39555   006026                     _pbDownTimer:
 39556                           	callstack 122
 39557                           
 39558                           ;incstack = 0
 39559                           ;pbDownTimer@timeout stored from wreg
 39560   006026  6E1C               	movwf	pbDownTimer@timeout^(0+1280),c
 39561   006028                     
 39562                           ;../../VLCBlib_PIC/vlcb.c: 924:     pbTimer.val = tickGet();
 39563   006028  ECF7  F039         	call	_tickGet	;wreg free
 39564   00602C  C501  F570         	movff	?_tickGet,_pbTimer
 39565   006030  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 39566   006034  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 39567   006038  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 39568                           
 39569                           ;../../VLCBlib_PIC/vlcb.c: 925:     while ((!(PORTAbits.RA2))) {
 39570   00603C  EF52  F030         	goto	l1985
 39571   006040                     l10831:
 39572                           
 39573                           ;../../VLCBlib_PIC/vlcb.c: 926:         leds_poll();
 39574   006040  EC22  F01B         	call	_leds_poll	;wreg free
 39575                           
 39576                           ;../../VLCBlib_PIC/vlcb.c: 927:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 39577   006044  ECF7  F039         	call	_tickGet	;wreg free
 39578   006048  0105               	movlb	5	; () banked
 39579   00604A  5170               	movf	_pbTimer& (0+255),w,b
 39580   00604C  5C01               	subwf	?_tickGet^(0+1280),w,c
 39581   00604E  6E18               	movwf	??_pbDownTimer^(0+1280),c
 39582   006050  5171               	movf	(_pbTimer+1)& (0+255),w,b
 39583   006052  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39584   006054  6E19               	movwf	(??_pbDownTimer+1)^(0+1280),c
 39585   006056  5172               	movf	(_pbTimer+2)& (0+255),w,b
 39586   006058  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39587   00605A  6E1A               	movwf	(??_pbDownTimer+2)^(0+1280),c
 39588   00605C  5173               	movf	(_pbTimer+3)& (0+255),w,b
 39589   00605E  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39590   006060  6E1B               	movwf	(??_pbDownTimer+3)^(0+1280),c
 39591   006062  501C               	movf	pbDownTimer@timeout^(0+1280),w,c
 39592   006064  6E01               	movwf	___lmul@multiplier^(0+1280),c
 39593   006066  6A02               	clrf	(___lmul@multiplier+1)^(0+1280),c
 39594   006068  6A03               	clrf	(___lmul@multiplier+2)^(0+1280),c
 39595   00606A  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 39596   00606C  0E24               	movlw	36
 39597   00606E  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 39598   006070  0EF4               	movlw	244
 39599   006072  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 39600   006074  0E00               	movlw	0
 39601   006076  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 39602   006078  0E00               	movlw	0
 39603   00607A  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 39604   00607C  EC49  F03B         	call	___lmul	;wreg free
 39605   006080  5018               	movf	??_pbDownTimer^(0+1280),w,c
 39606   006082  5C01               	subwf	?___lmul^(0+1280),w,c
 39607   006084  5019               	movf	(??_pbDownTimer+1)^(0+1280),w,c
 39608   006086  5802               	subwfb	(?___lmul+1)^(0+1280),w,c
 39609   006088  501A               	movf	(??_pbDownTimer+2)^(0+1280),w,c
 39610   00608A  5803               	subwfb	(?___lmul+2)^(0+1280),w,c
 39611   00608C  501B               	movf	(??_pbDownTimer+3)^(0+1280),w,c
 39612   00608E  5804               	subwfb	(?___lmul+3)^(0+1280),w,c
 39613   006090  B0D8               	btfsc	status,0,c
 39614   006092  EF4D  F030         	goto	u8281
 39615   006096  EF4F  F030         	goto	u8280
 39616   00609A                     u8281:
 39617   00609A  EF52  F030         	goto	l1985
 39618   00609E                     u8280:
 39619   00609E                     
 39620                           ;../../VLCBlib_PIC/vlcb.c: 928:             return 0;
 39621   00609E  0E00               	movlw	0
 39622   0060A0  EF73  F030         	goto	l1988
 39623   0060A4                     l1985:
 39624                           
 39625                           ;../../VLCBlib_PIC/vlcb.c: 925:     while ((!(PORTAbits.RA2))) {
 39626   0060A4  A4CE               	btfss	206,2,c	;volatile
 39627   0060A6  EF57  F030         	goto	u8291
 39628   0060AA  EF59  F030         	goto	u8290
 39629   0060AE                     u8291:
 39630   0060AE  EF20  F030         	goto	l10831
 39631   0060B2                     u8290:
 39632   0060B2                     
 39633                           ;../../VLCBlib_PIC/vlcb.c: 932:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 39634   0060B2  ECF7  F039         	call	_tickGet	;wreg free
 39635   0060B6  0105               	movlb	5	; () banked
 39636   0060B8  5170               	movf	_pbTimer& (0+255),w,b
 39637   0060BA  5C01               	subwf	?_tickGet^(0+1280),w,c
 39638   0060BC  6E0B               	movwf	___lldiv@dividend^(0+1280),c
 39639   0060BE  5171               	movf	(_pbTimer+1)& (0+255),w,b
 39640   0060C0  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39641   0060C2  6E0C               	movwf	(___lldiv@dividend+1)^(0+1280),c
 39642   0060C4  5172               	movf	(_pbTimer+2)& (0+255),w,b
 39643   0060C6  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39644   0060C8  6E0D               	movwf	(___lldiv@dividend+2)^(0+1280),c
 39645   0060CA  5173               	movf	(_pbTimer+3)& (0+255),w,b
 39646   0060CC  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39647   0060CE  6E0E               	movwf	(___lldiv@dividend+3)^(0+1280),c
 39648   0060D0  0E24               	movlw	36
 39649   0060D2  6E0F               	movwf	___lldiv@divisor^(0+1280),c
 39650   0060D4  0EF4               	movlw	244
 39651   0060D6  6E10               	movwf	(___lldiv@divisor+1)^(0+1280),c
 39652   0060D8  0E00               	movlw	0
 39653   0060DA  6E11               	movwf	(___lldiv@divisor+2)^(0+1280),c
 39654   0060DC  0E00               	movlw	0
 39655   0060DE  6E12               	movwf	(___lldiv@divisor+3)^(0+1280),c
 39656   0060E0  ECF3  F033         	call	___lldiv	;wreg free
 39657   0060E4  500B               	movf	?___lldiv^(0+1280),w,c
 39658   0060E6                     l1988:
 39659   0060E6  0012               	return		;funcret
 39660   0060E8                     __end_of_pbDownTimer:
 39661                           	callstack 0
 39662                           
 39663 ;; *************** function _leds_poll *****************
 39664 ;; Defined at:
 39665 ;;		line 89 in file "../../VLCBlib_PIC/statusLeds2.c"
 39666 ;; Parameters:    Size  Location     Type
 39667 ;;		None
 39668 ;; Auto vars:     Size  Location     Type
 39669 ;;		None
 39670 ;; Return value:  Size  Location     Type
 39671 ;;                  1    wreg      void 
 39672 ;; Registers used:
 39673 ;;		wreg, status,2, status,0, cstack
 39674 ;; Tracked objects:
 39675 ;;		On entry : 0/0
 39676 ;;		On exit  : 0/0
 39677 ;;		Unchanged: 0/0
 39678 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39681 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39682 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39683 ;;Total ram usage:        4 bytes
 39684 ;; Hardware stack levels used: 1
 39685 ;; Hardware stack levels required when called: 2
 39686 ;; This function calls:
 39687 ;;		___awdiv
 39688 ;;		_tickGet
 39689 ;; This function is called by:
 39690 ;;		_pbDownTimer
 39691 ;;		_pbUpTimer
 39692 ;;		_poll
 39693 ;; This function uses a non-reentrant model
 39694 ;;
 39695                           
 39696                           	psect	text110
 39697   003644                     __ptext110:
 39698                           	callstack 0
 39699   003644                     _leds_poll:
 39700                           	callstack 123
 39701   003644                     
 39702                           ;../../VLCBlib_PIC/statusLeds2.c: 90:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 39703   003644  ECF7  F039         	call	_tickGet	;wreg free
 39704   003648  0105               	movlb	5	; () banked
 39705   00364A  5164               	movf	_ledTimer& (0+255),w,b
 39706   00364C  5C01               	subwf	?_tickGet^(0+1280),w,c
 39707   00364E  6E0B               	movwf	??_leds_poll^(0+1280),c
 39708   003650  5165               	movf	(_ledTimer+1)& (0+255),w,b
 39709   003652  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39710   003654  6E0C               	movwf	(??_leds_poll+1)^(0+1280),c
 39711   003656  5166               	movf	(_ledTimer+2)& (0+255),w,b
 39712   003658  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39713   00365A  6E0D               	movwf	(??_leds_poll+2)^(0+1280),c
 39714   00365C  5167               	movf	(_ledTimer+3)& (0+255),w,b
 39715   00365E  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39716   003660  6E0E               	movwf	(??_leds_poll+3)^(0+1280),c
 39717   003662  500E               	movf	(??_leds_poll+3)^(0+1280),w,c
 39718   003664  100D               	iorwf	(??_leds_poll+2)^(0+1280),w,c
 39719   003666  E10B               	bnz	u6390
 39720   003668  0E72               	movlw	114
 39721   00366A  5C0B               	subwf	??_leds_poll^(0+1280),w,c
 39722   00366C  0E02               	movlw	2
 39723   00366E  580C               	subwfb	(??_leds_poll+1)^(0+1280),w,c
 39724   003670  A0D8               	btfss	status,0,c
 39725   003672  EF3D  F01B         	goto	u6391
 39726   003676  EF3F  F01B         	goto	u6390
 39727   00367A                     u6391:
 39728   00367A  EFE6  F01B         	goto	l9101
 39729   00367E                     u6390:
 39730   00367E                     
 39731                           ; BSR set to: 5
 39732                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[0]++;
 39733   00367E  2B89               	incf	_flashCounter& (0+255),f,b
 39734                           
 39735                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         flashCounter[1]++;
 39736   003680  2B8A               	incf	(_flashCounter+1)& (0+255),f,b
 39737   003682                     
 39738                           ; BSR set to: 5
 39739                           ;../../VLCBlib_PIC/statusLeds2.c: 93:         ledTimer.val = tickGet();
 39740   003682  ECF7  F039         	call	_tickGet	;wreg free
 39741   003686  C501  F564         	movff	?_tickGet,_ledTimer
 39742   00368A  C502  F565         	movff	?_tickGet+1,_ledTimer+1
 39743   00368E  C503  F566         	movff	?_tickGet+2,_ledTimer+2
 39744   003692  C504  F567         	movff	?_tickGet+3,_ledTimer+3
 39745   003696  EFE6  F01B         	goto	l9101
 39746   00369A                     l1731:
 39747                           
 39748                           ; BSR set to: 5
 39749                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             (LATBbits.LATB6=1);
 39750   00369A  8CBF               	bsf	191,6,c	;volatile
 39751                           
 39752                           ;../../VLCBlib_PIC/statusLeds2.c: 99:             flashCounter[1] = 0;
 39753   00369C  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39754                           
 39755                           ;../../VLCBlib_PIC/statusLeds2.c: 100:             break;
 39756   00369E  EFB2  F01C         	goto	l9149
 39757   0036A2                     l1733:
 39758                           
 39759                           ; BSR set to: 5
 39760                           ;../../VLCBlib_PIC/statusLeds2.c: 102:             (LATBbits.LATB6=0);
 39761   0036A2  9CBF               	bcf	191,6,c	;volatile
 39762                           
 39763                           ;../../VLCBlib_PIC/statusLeds2.c: 103:             flashCounter[1] = 0;
 39764   0036A4  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39765                           
 39766                           ;../../VLCBlib_PIC/statusLeds2.c: 104:             break;
 39767   0036A6  EFB2  F01C         	goto	l9149
 39768   0036AA                     l9055:
 39769                           
 39770                           ; BSR set to: 5
 39771                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             (LATBbits.LATB6=flashCounter[1]/25);
 39772   0036AA  C58A  F501         	movff	_flashCounter+1,___awdiv@dividend
 39773   0036AE  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39774   0036B0  0E00               	movlw	0
 39775   0036B2  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39776   0036B4  0E19               	movlw	25
 39777   0036B6  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39778   0036B8  EC74  F030         	call	___awdiv	;wreg free
 39779   0036BC  3A01               	swapf	?___awdiv^(0+1280),f,c
 39780   0036BE  4601               	rlncf	?___awdiv^(0+1280),f,c
 39781   0036C0  4601               	rlncf	?___awdiv^(0+1280),f,c
 39782   0036C2  50BF               	movf	191,w,c	;volatile
 39783   0036C4  1801               	xorwf	?___awdiv^(0+1280),w,c
 39784   0036C6  0BBF               	andlw	-65
 39785   0036C8  1801               	xorwf	?___awdiv^(0+1280),w,c
 39786   0036CA  6EBF               	movwf	191,c	;volatile
 39787   0036CC                     
 39788                           ;../../VLCBlib_PIC/statusLeds2.c: 108:             if (flashCounter[1] >= 50) {
 39789   0036CC  0E31               	movlw	49
 39790   0036CE  0105               	movlb	5	; () banked
 39791   0036D0  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39792   0036D2  EF6D  F01B         	goto	u6401
 39793   0036D6  EF6F  F01B         	goto	u6400
 39794   0036DA                     u6401:
 39795   0036DA  EFB2  F01C         	goto	l9149
 39796   0036DE                     u6400:
 39797   0036DE                     l9059:
 39798                           
 39799                           ; BSR set to: 5
 39800                           ;../../VLCBlib_PIC/statusLeds2.c: 109:                 flashCounter[1] = 0;
 39801   0036DE  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39802   0036E0  EFB2  F01C         	goto	l9149
 39803   0036E4                     l9061:
 39804                           
 39805                           ; BSR set to: 5
 39806                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             (LATBbits.LATB6=flashCounter[1]/50);
 39807   0036E4  C58A  F501         	movff	_flashCounter+1,___awdiv@dividend
 39808   0036E8  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39809   0036EA  0E00               	movlw	0
 39810   0036EC  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39811   0036EE  0E32               	movlw	50
 39812   0036F0  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39813   0036F2  EC74  F030         	call	___awdiv	;wreg free
 39814   0036F6  3A01               	swapf	?___awdiv^(0+1280),f,c
 39815   0036F8  4601               	rlncf	?___awdiv^(0+1280),f,c
 39816   0036FA  4601               	rlncf	?___awdiv^(0+1280),f,c
 39817   0036FC  50BF               	movf	191,w,c	;volatile
 39818   0036FE  1801               	xorwf	?___awdiv^(0+1280),w,c
 39819   003700  0BBF               	andlw	-65
 39820   003702  1801               	xorwf	?___awdiv^(0+1280),w,c
 39821   003704  6EBF               	movwf	191,c	;volatile
 39822   003706                     
 39823                           ;../../VLCBlib_PIC/statusLeds2.c: 115:             if (flashCounter[1] >= 100) {
 39824   003706  0E63               	movlw	99
 39825   003708  0105               	movlb	5	; () banked
 39826   00370A  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39827   00370C  EF8A  F01B         	goto	u6411
 39828   003710  EF8C  F01B         	goto	u6410
 39829   003714                     u6411:
 39830   003714  EFB2  F01C         	goto	l9149
 39831   003718                     u6410:
 39832   003718  EF6F  F01B         	goto	l9059
 39833   00371C                     l9067:
 39834                           
 39835                           ; BSR set to: 5
 39836                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             (LATBbits.LATB6=flashCounter[1]/100);
 39837   00371C  C58A  F501         	movff	_flashCounter+1,___awdiv@dividend
 39838   003720  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39839   003722  0E00               	movlw	0
 39840   003724  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39841   003726  0E64               	movlw	100
 39842   003728  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39843   00372A  EC74  F030         	call	___awdiv	;wreg free
 39844   00372E  3A01               	swapf	?___awdiv^(0+1280),f,c
 39845   003730  4601               	rlncf	?___awdiv^(0+1280),f,c
 39846   003732  4601               	rlncf	?___awdiv^(0+1280),f,c
 39847   003734  50BF               	movf	191,w,c	;volatile
 39848   003736  1801               	xorwf	?___awdiv^(0+1280),w,c
 39849   003738  0BBF               	andlw	-65
 39850   00373A  1801               	xorwf	?___awdiv^(0+1280),w,c
 39851   00373C  6EBF               	movwf	191,c	;volatile
 39852   00373E                     
 39853                           ;../../VLCBlib_PIC/statusLeds2.c: 121:             if (flashCounter[1] >= 200) {
 39854   00373E  0EC7               	movlw	199
 39855   003740  0105               	movlb	5	; () banked
 39856   003742  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39857   003744  EFA6  F01B         	goto	u6421
 39858   003748  EFA8  F01B         	goto	u6420
 39859   00374C                     u6421:
 39860   00374C  EFB2  F01C         	goto	l9149
 39861   003750                     u6420:
 39862   003750  EF6F  F01B         	goto	l9059
 39863   003754                     l1740:
 39864                           
 39865                           ; BSR set to: 5
 39866                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             (LATBbits.LATB6=1);
 39867   003754  8CBF               	bsf	191,6,c	;volatile
 39868   003756                     
 39869                           ; BSR set to: 5
 39870                           ;../../VLCBlib_PIC/statusLeds2.c: 127:             if (flashCounter[1] >= 25) {
 39871   003756  0E18               	movlw	24
 39872   003758  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39873   00375A  EFB1  F01B         	goto	u6431
 39874   00375E  EFB3  F01B         	goto	u6430
 39875   003762                     u6431:
 39876   003762  EFB2  F01C         	goto	l9149
 39877   003766                     u6430:
 39878   003766                     l9075:
 39879                           
 39880                           ; BSR set to: 5
 39881                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 flashCounter[1] = 0;
 39882   003766  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39883                           
 39884                           ;../../VLCBlib_PIC/statusLeds2.c: 129:                 ledState[1] = LED_OFF;
 39885   003768  6B8C               	clrf	(_ledState+1)& (0+255),b
 39886   00376A  EFB2  F01C         	goto	l9149
 39887   00376E                     l1742:
 39888                           
 39889                           ; BSR set to: 5
 39890                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             (LATBbits.LATB6=0);
 39891   00376E  9CBF               	bcf	191,6,c	;volatile
 39892   003770                     
 39893                           ; BSR set to: 5
 39894                           ;../../VLCBlib_PIC/statusLeds2.c: 134:             if (flashCounter[1] >= 25) {
 39895   003770  0E18               	movlw	24
 39896   003772  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39897   003774  EFBE  F01B         	goto	u6441
 39898   003778  EFC0  F01B         	goto	u6440
 39899   00377C                     u6441:
 39900   00377C  EFB2  F01C         	goto	l9149
 39901   003780                     u6440:
 39902   003780                     l9079:
 39903                           
 39904                           ; BSR set to: 5
 39905                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 flashCounter[1] = 0;
 39906   003780  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39907   003782                     
 39908                           ; BSR set to: 5
 39909                           ;../../VLCBlib_PIC/statusLeds2.c: 136:                 ledState[1] = LED_ON;
 39910   003782  0E01               	movlw	1
 39911   003784  6F8C               	movwf	(_ledState+1)& (0+255),b
 39912   003786  EFB2  F01C         	goto	l9149
 39913   00378A                     l1744:
 39914                           
 39915                           ; BSR set to: 5
 39916                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             (LATBbits.LATB6=1);
 39917   00378A  8CBF               	bsf	191,6,c	;volatile
 39918   00378C                     
 39919                           ; BSR set to: 5
 39920                           ;../../VLCBlib_PIC/statusLeds2.c: 141:             if (flashCounter[1] >= 50) {
 39921   00378C  0E31               	movlw	49
 39922   00378E  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39923   003790  EFCC  F01B         	goto	u6451
 39924   003794  EFCE  F01B         	goto	u6450
 39925   003798                     u6451:
 39926   003798  EFB2  F01C         	goto	l9149
 39927   00379C                     u6450:
 39928   00379C  EFB3  F01B         	goto	l9075
 39929   0037A0                     l1746:
 39930                           
 39931                           ; BSR set to: 5
 39932                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             (LATBbits.LATB6=0);
 39933   0037A0  9CBF               	bcf	191,6,c	;volatile
 39934   0037A2                     
 39935                           ; BSR set to: 5
 39936                           ;../../VLCBlib_PIC/statusLeds2.c: 148:             if (flashCounter[1] >= 50) {
 39937   0037A2  0E31               	movlw	49
 39938   0037A4  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39939   0037A6  EFD7  F01B         	goto	u6461
 39940   0037AA  EFD9  F01B         	goto	u6460
 39941   0037AE                     u6461:
 39942   0037AE  EFB2  F01C         	goto	l9149
 39943   0037B2                     u6460:
 39944   0037B2  EFC0  F01B         	goto	l9079
 39945   0037B6                     l1748:
 39946                           
 39947                           ; BSR set to: 5
 39948                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             (LATBbits.LATB6=0);
 39949   0037B6  9CBF               	bcf	191,6,c	;volatile
 39950   0037B8                     
 39951                           ; BSR set to: 5
 39952                           ;../../VLCBlib_PIC/statusLeds2.c: 155:             if (flashCounter[1] >= 100) {
 39953   0037B8  0E63               	movlw	99
 39954   0037BA  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39955   0037BC  EFE2  F01B         	goto	u6471
 39956   0037C0  EFE4  F01B         	goto	u6470
 39957   0037C4                     u6471:
 39958   0037C4  EFB2  F01C         	goto	l9149
 39959   0037C8                     u6470:
 39960   0037C8  EFC0  F01B         	goto	l9079
 39961   0037CC                     l9101:
 39962   0037CC  0105               	movlb	5	; () banked
 39963   0037CE  518C               	movf	(_ledState+1)& (0+255),w,b
 39964   0037D0  6E0B               	movwf	??_leds_poll^(0+1280),c
 39965   0037D2  6A0C               	clrf	(??_leds_poll+1)^(0+1280),c
 39966                           
 39967                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39968                           ; Switch size 1, requested type "simple"
 39969                           ; Number of cases is 1, Range of values is 0 to 0
 39970                           ; switch strategies available:
 39971                           ; Name         Instructions Cycles
 39972                           ; simple_byte            4     3 (average)
 39973                           ;	Chosen strategy is simple_byte
 39974   0037D4  500C               	movf	(??_leds_poll+1)^(0+1280),w,c
 39975   0037D6  0A00               	xorlw	0	; case 0
 39976   0037D8  B4D8               	btfsc	status,2,c
 39977   0037DA  EFF1  F01B         	goto	l11639
 39978   0037DE  EFB2  F01C         	goto	l9149
 39979   0037E2                     l11639:
 39980                           
 39981                           ; BSR set to: 5
 39982                           ; Switch size 1, requested type "simple"
 39983                           ; Number of cases is 10, Range of values is 0 to 9
 39984                           ; switch strategies available:
 39985                           ; Name         Instructions Cycles
 39986                           ; simple_byte           31    16 (average)
 39987                           ;	Chosen strategy is simple_byte
 39988   0037E2  500B               	movf	??_leds_poll^(0+1280),w,c
 39989   0037E4  0A00               	xorlw	0	; case 0
 39990   0037E6  B4D8               	btfsc	status,2,c
 39991   0037E8  EF51  F01B         	goto	l1733
 39992   0037EC  0A01               	xorlw	1	; case 1
 39993   0037EE  B4D8               	btfsc	status,2,c
 39994   0037F0  EF4D  F01B         	goto	l1731
 39995   0037F4  0A03               	xorlw	3	; case 2
 39996   0037F6  B4D8               	btfsc	status,2,c
 39997   0037F8  EF55  F01B         	goto	l9055
 39998   0037FC  0A01               	xorlw	1	; case 3
 39999   0037FE  B4D8               	btfsc	status,2,c
 40000   003800  EF72  F01B         	goto	l9061
 40001   003804  0A07               	xorlw	7	; case 4
 40002   003806  B4D8               	btfsc	status,2,c
 40003   003808  EF8E  F01B         	goto	l9067
 40004   00380C  0A01               	xorlw	1	; case 5
 40005   00380E  B4D8               	btfsc	status,2,c
 40006   003810  EFB7  F01B         	goto	l1742
 40007   003814  0A03               	xorlw	3	; case 6
 40008   003816  B4D8               	btfsc	status,2,c
 40009   003818  EFAA  F01B         	goto	l1740
 40010   00381C  0A01               	xorlw	1	; case 7
 40011   00381E  B4D8               	btfsc	status,2,c
 40012   003820  EFD0  F01B         	goto	l1746
 40013   003824  0A0F               	xorlw	15	; case 8
 40014   003826  B4D8               	btfsc	status,2,c
 40015   003828  EFC5  F01B         	goto	l1744
 40016   00382C  0A01               	xorlw	1	; case 9
 40017   00382E  B4D8               	btfsc	status,2,c
 40018   003830  EFDB  F01B         	goto	l1748
 40019   003834  EFB2  F01C         	goto	l9149
 40020   003838                     l1751:
 40021                           
 40022                           ; BSR set to: 5
 40023                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             (LATBbits.LATB7=1);
 40024   003838  8EBF               	bsf	191,7,c	;volatile
 40025                           
 40026                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             flashCounter[0] = 0;
 40027   00383A  6B89               	clrf	_flashCounter& (0+255),b
 40028                           
 40029                           ;../../VLCBlib_PIC/statusLeds2.c: 166:             break;
 40030   00383C  EFE7  F01C         	goto	l1770
 40031   003840                     l1753:
 40032                           
 40033                           ; BSR set to: 5
 40034                           ;../../VLCBlib_PIC/statusLeds2.c: 168:             (LATBbits.LATB7=0);
 40035   003840  9EBF               	bcf	191,7,c	;volatile
 40036                           
 40037                           ;../../VLCBlib_PIC/statusLeds2.c: 169:             flashCounter[0] = 0;
 40038   003842  6B89               	clrf	_flashCounter& (0+255),b
 40039                           
 40040                           ;../../VLCBlib_PIC/statusLeds2.c: 170:             break;
 40041   003844  EFE7  F01C         	goto	l1770
 40042   003848                     l9103:
 40043                           
 40044                           ; BSR set to: 5
 40045                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             (LATBbits.LATB7=flashCounter[0]/25);
 40046   003848  C589  F501         	movff	_flashCounter,___awdiv@dividend
 40047   00384C  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 40048   00384E  0E00               	movlw	0
 40049   003850  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 40050   003852  0E19               	movlw	25
 40051   003854  6E03               	movwf	___awdiv@divisor^(0+1280),c
 40052   003856  EC74  F030         	call	___awdiv	;wreg free
 40053   00385A  3201               	rrcf	?___awdiv^(0+1280),f,c
 40054   00385C  3201               	rrcf	?___awdiv^(0+1280),f,c
 40055   00385E  50BF               	movf	191,w,c	;volatile
 40056   003860  1801               	xorwf	?___awdiv^(0+1280),w,c
 40057   003862  0B7F               	andlw	-129
 40058   003864  1801               	xorwf	?___awdiv^(0+1280),w,c
 40059   003866  6EBF               	movwf	191,c	;volatile
 40060   003868                     
 40061                           ;../../VLCBlib_PIC/statusLeds2.c: 174:             if (flashCounter[0] >= 50) {
 40062   003868  0E31               	movlw	49
 40063   00386A  0105               	movlb	5	; () banked
 40064   00386C  6589               	cpfsgt	_flashCounter& (0+255),b
 40065   00386E  EF3B  F01C         	goto	u6481
 40066   003872  EF3D  F01C         	goto	u6480
 40067   003876                     u6481:
 40068   003876  EFE7  F01C         	goto	l1770
 40069   00387A                     u6480:
 40070   00387A                     l9107:
 40071                           
 40072                           ; BSR set to: 5
 40073                           ;../../VLCBlib_PIC/statusLeds2.c: 175:                 flashCounter[0] = 0;
 40074   00387A  6B89               	clrf	_flashCounter& (0+255),b
 40075   00387C  EFE7  F01C         	goto	l1770
 40076   003880                     l9109:
 40077                           
 40078                           ; BSR set to: 5
 40079                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             (LATBbits.LATB7=flashCounter[0]/50);
 40080   003880  C589  F501         	movff	_flashCounter,___awdiv@dividend
 40081   003884  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 40082   003886  0E00               	movlw	0
 40083   003888  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 40084   00388A  0E32               	movlw	50
 40085   00388C  6E03               	movwf	___awdiv@divisor^(0+1280),c
 40086   00388E  EC74  F030         	call	___awdiv	;wreg free
 40087   003892  3201               	rrcf	?___awdiv^(0+1280),f,c
 40088   003894  3201               	rrcf	?___awdiv^(0+1280),f,c
 40089   003896  50BF               	movf	191,w,c	;volatile
 40090   003898  1801               	xorwf	?___awdiv^(0+1280),w,c
 40091   00389A  0B7F               	andlw	-129
 40092   00389C  1801               	xorwf	?___awdiv^(0+1280),w,c
 40093   00389E  6EBF               	movwf	191,c	;volatile
 40094   0038A0                     
 40095                           ;../../VLCBlib_PIC/statusLeds2.c: 181:             if (flashCounter[0] >= 100) {
 40096   0038A0  0E63               	movlw	99
 40097   0038A2  0105               	movlb	5	; () banked
 40098   0038A4  6589               	cpfsgt	_flashCounter& (0+255),b
 40099   0038A6  EF57  F01C         	goto	u6491
 40100   0038AA  EF59  F01C         	goto	u6490
 40101   0038AE                     u6491:
 40102   0038AE  EFE7  F01C         	goto	l1770
 40103   0038B2                     u6490:
 40104   0038B2  EF3D  F01C         	goto	l9107
 40105   0038B6                     l9115:
 40106                           
 40107                           ; BSR set to: 5
 40108                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             (LATBbits.LATB7=flashCounter[0]/100);
 40109   0038B6  C589  F501         	movff	_flashCounter,___awdiv@dividend
 40110   0038BA  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 40111   0038BC  0E00               	movlw	0
 40112   0038BE  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 40113   0038C0  0E64               	movlw	100
 40114   0038C2  6E03               	movwf	___awdiv@divisor^(0+1280),c
 40115   0038C4  EC74  F030         	call	___awdiv	;wreg free
 40116   0038C8  3201               	rrcf	?___awdiv^(0+1280),f,c
 40117   0038CA  3201               	rrcf	?___awdiv^(0+1280),f,c
 40118   0038CC  50BF               	movf	191,w,c	;volatile
 40119   0038CE  1801               	xorwf	?___awdiv^(0+1280),w,c
 40120   0038D0  0B7F               	andlw	-129
 40121   0038D2  1801               	xorwf	?___awdiv^(0+1280),w,c
 40122   0038D4  6EBF               	movwf	191,c	;volatile
 40123   0038D6                     
 40124                           ;../../VLCBlib_PIC/statusLeds2.c: 187:             if (flashCounter[0] >= 200) {
 40125   0038D6  0EC7               	movlw	199
 40126   0038D8  0105               	movlb	5	; () banked
 40127   0038DA  6589               	cpfsgt	_flashCounter& (0+255),b
 40128   0038DC  EF72  F01C         	goto	u6501
 40129   0038E0  EF74  F01C         	goto	u6500
 40130   0038E4                     u6501:
 40131   0038E4  EFE7  F01C         	goto	l1770
 40132   0038E8                     u6500:
 40133   0038E8  EF3D  F01C         	goto	l9107
 40134   0038EC                     l1760:
 40135                           
 40136                           ; BSR set to: 5
 40137                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             (LATBbits.LATB7=1);
 40138   0038EC  8EBF               	bsf	191,7,c	;volatile
 40139   0038EE                     
 40140                           ; BSR set to: 5
 40141                           ;../../VLCBlib_PIC/statusLeds2.c: 193:             if (flashCounter[0] >= 25) {
 40142   0038EE  0E18               	movlw	24
 40143   0038F0  6589               	cpfsgt	_flashCounter& (0+255),b
 40144   0038F2  EF7D  F01C         	goto	u6511
 40145   0038F6  EF7F  F01C         	goto	u6510
 40146   0038FA                     u6511:
 40147   0038FA  EFE7  F01C         	goto	l1770
 40148   0038FE                     u6510:
 40149   0038FE                     l9123:
 40150                           
 40151                           ; BSR set to: 5
 40152                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 flashCounter[0] = 0;
 40153   0038FE  6B89               	clrf	_flashCounter& (0+255),b
 40154                           
 40155                           ;../../VLCBlib_PIC/statusLeds2.c: 195:                 ledState[0] = LED_OFF;
 40156   003900  6B8B               	clrf	_ledState& (0+255),b
 40157   003902  EFE7  F01C         	goto	l1770
 40158   003906                     l1762:
 40159                           
 40160                           ; BSR set to: 5
 40161                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             (LATBbits.LATB7=0);
 40162   003906  9EBF               	bcf	191,7,c	;volatile
 40163   003908                     
 40164                           ; BSR set to: 5
 40165                           ;../../VLCBlib_PIC/statusLeds2.c: 200:             if (flashCounter[0] >= 25) {
 40166   003908  0E18               	movlw	24
 40167   00390A  6589               	cpfsgt	_flashCounter& (0+255),b
 40168   00390C  EF8A  F01C         	goto	u6521
 40169   003910  EF8C  F01C         	goto	u6520
 40170   003914                     u6521:
 40171   003914  EFE7  F01C         	goto	l1770
 40172   003918                     u6520:
 40173   003918                     l9127:
 40174                           
 40175                           ; BSR set to: 5
 40176                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 flashCounter[0] = 0;
 40177   003918  6B89               	clrf	_flashCounter& (0+255),b
 40178   00391A                     
 40179                           ; BSR set to: 5
 40180                           ;../../VLCBlib_PIC/statusLeds2.c: 202:                 ledState[0] = LED_ON;
 40181   00391A  0E01               	movlw	1
 40182   00391C  6F8B               	movwf	_ledState& (0+255),b
 40183   00391E  EFE7  F01C         	goto	l1770
 40184   003922                     l1764:
 40185                           
 40186                           ; BSR set to: 5
 40187                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             (LATBbits.LATB7=1);
 40188   003922  8EBF               	bsf	191,7,c	;volatile
 40189   003924                     
 40190                           ; BSR set to: 5
 40191                           ;../../VLCBlib_PIC/statusLeds2.c: 207:             if (flashCounter[0] >= 50) {
 40192   003924  0E31               	movlw	49
 40193   003926  6589               	cpfsgt	_flashCounter& (0+255),b
 40194   003928  EF98  F01C         	goto	u6531
 40195   00392C  EF9A  F01C         	goto	u6530
 40196   003930                     u6531:
 40197   003930  EFE7  F01C         	goto	l1770
 40198   003934                     u6530:
 40199   003934  EF7F  F01C         	goto	l9123
 40200   003938                     l1766:
 40201                           
 40202                           ; BSR set to: 5
 40203                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             (LATBbits.LATB7=0);
 40204   003938  9EBF               	bcf	191,7,c	;volatile
 40205   00393A                     
 40206                           ; BSR set to: 5
 40207                           ;../../VLCBlib_PIC/statusLeds2.c: 214:             if (flashCounter[0] >= 50) {
 40208   00393A  0E31               	movlw	49
 40209   00393C  6589               	cpfsgt	_flashCounter& (0+255),b
 40210   00393E  EFA3  F01C         	goto	u6541
 40211   003942  EFA5  F01C         	goto	u6540
 40212   003946                     u6541:
 40213   003946  EFE7  F01C         	goto	l1770
 40214   00394A                     u6540:
 40215   00394A  EF8C  F01C         	goto	l9127
 40216   00394E                     l1768:
 40217                           
 40218                           ; BSR set to: 5
 40219                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             (LATBbits.LATB7=0);
 40220   00394E  9EBF               	bcf	191,7,c	;volatile
 40221   003950                     
 40222                           ; BSR set to: 5
 40223                           ;../../VLCBlib_PIC/statusLeds2.c: 221:             if (flashCounter[0] >= 100) {
 40224   003950  0E63               	movlw	99
 40225   003952  6589               	cpfsgt	_flashCounter& (0+255),b
 40226   003954  EFAE  F01C         	goto	u6551
 40227   003958  EFB0  F01C         	goto	u6550
 40228   00395C                     u6551:
 40229   00395C  EFE7  F01C         	goto	l1770
 40230   003960                     u6550:
 40231   003960  EF8C  F01C         	goto	l9127
 40232   003964                     l9149:
 40233                           
 40234                           ; BSR set to: 5
 40235   003964  518B               	movf	_ledState& (0+255),w,b
 40236   003966  6E0B               	movwf	??_leds_poll^(0+1280),c
 40237   003968  6A0C               	clrf	(??_leds_poll+1)^(0+1280),c
 40238                           
 40239                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40240                           ; Switch size 1, requested type "simple"
 40241                           ; Number of cases is 1, Range of values is 0 to 0
 40242                           ; switch strategies available:
 40243                           ; Name         Instructions Cycles
 40244                           ; simple_byte            4     3 (average)
 40245                           ;	Chosen strategy is simple_byte
 40246   00396A  500C               	movf	(??_leds_poll+1)^(0+1280),w,c
 40247   00396C  0A00               	xorlw	0	; case 0
 40248   00396E  B4D8               	btfsc	status,2,c
 40249   003970  EFBC  F01C         	goto	l11641
 40250   003974  EFE7  F01C         	goto	l1770
 40251   003978                     l11641:
 40252                           
 40253                           ; BSR set to: 5
 40254                           ; Switch size 1, requested type "simple"
 40255                           ; Number of cases is 10, Range of values is 0 to 9
 40256                           ; switch strategies available:
 40257                           ; Name         Instructions Cycles
 40258                           ; simple_byte           31    16 (average)
 40259                           ;	Chosen strategy is simple_byte
 40260   003978  500B               	movf	??_leds_poll^(0+1280),w,c
 40261   00397A  0A00               	xorlw	0	; case 0
 40262   00397C  B4D8               	btfsc	status,2,c
 40263   00397E  EF20  F01C         	goto	l1753
 40264   003982  0A01               	xorlw	1	; case 1
 40265   003984  B4D8               	btfsc	status,2,c
 40266   003986  EF1C  F01C         	goto	l1751
 40267   00398A  0A03               	xorlw	3	; case 2
 40268   00398C  B4D8               	btfsc	status,2,c
 40269   00398E  EF24  F01C         	goto	l9103
 40270   003992  0A01               	xorlw	1	; case 3
 40271   003994  B4D8               	btfsc	status,2,c
 40272   003996  EF40  F01C         	goto	l9109
 40273   00399A  0A07               	xorlw	7	; case 4
 40274   00399C  B4D8               	btfsc	status,2,c
 40275   00399E  EF5B  F01C         	goto	l9115
 40276   0039A2  0A01               	xorlw	1	; case 5
 40277   0039A4  B4D8               	btfsc	status,2,c
 40278   0039A6  EF83  F01C         	goto	l1762
 40279   0039AA  0A03               	xorlw	3	; case 6
 40280   0039AC  B4D8               	btfsc	status,2,c
 40281   0039AE  EF76  F01C         	goto	l1760
 40282   0039B2  0A01               	xorlw	1	; case 7
 40283   0039B4  B4D8               	btfsc	status,2,c
 40284   0039B6  EF9C  F01C         	goto	l1766
 40285   0039BA  0A0F               	xorlw	15	; case 8
 40286   0039BC  B4D8               	btfsc	status,2,c
 40287   0039BE  EF91  F01C         	goto	l1764
 40288   0039C2  0A01               	xorlw	1	; case 9
 40289   0039C4  B4D8               	btfsc	status,2,c
 40290   0039C6  EFA7  F01C         	goto	l1768
 40291   0039CA  EFE7  F01C         	goto	l1770
 40292   0039CE                     l1770:
 40293                           
 40294                           ; BSR set to: 5
 40295   0039CE  0012               	return		;funcret
 40296   0039D0                     __end_of_leds_poll:
 40297                           	callstack 0
 40298                           
 40299 ;; *************** function ___lmul *****************
 40300 ;; Defined at:
 40301 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
 40302 ;; Parameters:    Size  Location     Type
 40303 ;;  multiplier      4    0[COMRAM] unsigned long 
 40304 ;;  multiplicand    4    4[COMRAM] unsigned long 
 40305 ;; Auto vars:     Size  Location     Type
 40306 ;;  product         4    8[COMRAM] unsigned long 
 40307 ;; Return value:  Size  Location     Type
 40308 ;;                  4    0[COMRAM] unsigned long 
 40309 ;; Registers used:
 40310 ;;		wreg, status,2, status,0
 40311 ;; Tracked objects:
 40312 ;;		On entry : 0/0
 40313 ;;		On exit  : 0/0
 40314 ;;		Unchanged: 0/0
 40315 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40316 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40317 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40319 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40320 ;;Total ram usage:       12 bytes
 40321 ;; Hardware stack levels used: 1
 40322 ;; Hardware stack levels required when called: 1
 40323 ;; This function calls:
 40324 ;;		Nothing
 40325 ;; This function is called by:
 40326 ;;		_pbDownTimer
 40327 ;;		_pbUpTimer
 40328 ;;		_poll
 40329 ;; This function uses a non-reentrant model
 40330 ;;
 40331                           
 40332                           	psect	text111
 40333   007692                     __ptext111:
 40334                           	callstack 0
 40335   007692                     ___lmul:
 40336                           	callstack 124
 40337   007692  0E00               	movlw	0
 40338   007694  6E09               	movwf	___lmul@product^(0+1280),c
 40339   007696  0E00               	movlw	0
 40340   007698  6E0A               	movwf	(___lmul@product+1)^(0+1280),c
 40341   00769A  0E00               	movlw	0
 40342   00769C  6E0B               	movwf	(___lmul@product+2)^(0+1280),c
 40343   00769E  0E00               	movlw	0
 40344   0076A0  6E0C               	movwf	(___lmul@product+3)^(0+1280),c
 40345   0076A2                     l9165:
 40346   0076A2  A001               	btfss	___lmul@multiplier^(0+1280),0,c
 40347   0076A4  EF56  F03B         	goto	u6561
 40348   0076A8  EF58  F03B         	goto	u6560
 40349   0076AC                     u6561:
 40350   0076AC  EF60  F03B         	goto	l9169
 40351   0076B0                     u6560:
 40352   0076B0  5005               	movf	___lmul@multiplicand^(0+1280),w,c
 40353   0076B2  2609               	addwf	___lmul@product^(0+1280),f,c
 40354   0076B4  5006               	movf	(___lmul@multiplicand+1)^(0+1280),w,c
 40355   0076B6  220A               	addwfc	(___lmul@product+1)^(0+1280),f,c
 40356   0076B8  5007               	movf	(___lmul@multiplicand+2)^(0+1280),w,c
 40357   0076BA  220B               	addwfc	(___lmul@product+2)^(0+1280),f,c
 40358   0076BC  5008               	movf	(___lmul@multiplicand+3)^(0+1280),w,c
 40359   0076BE  220C               	addwfc	(___lmul@product+3)^(0+1280),f,c
 40360   0076C0                     l9169:
 40361   0076C0  90D8               	bcf	status,0,c
 40362   0076C2  3605               	rlcf	___lmul@multiplicand^(0+1280),f,c
 40363   0076C4  3606               	rlcf	(___lmul@multiplicand+1)^(0+1280),f,c
 40364   0076C6  3607               	rlcf	(___lmul@multiplicand+2)^(0+1280),f,c
 40365   0076C8  3608               	rlcf	(___lmul@multiplicand+3)^(0+1280),f,c
 40366   0076CA  90D8               	bcf	status,0,c
 40367   0076CC  3204               	rrcf	(___lmul@multiplier+3)^(0+1280),f,c
 40368   0076CE  3203               	rrcf	(___lmul@multiplier+2)^(0+1280),f,c
 40369   0076D0  3202               	rrcf	(___lmul@multiplier+1)^(0+1280),f,c
 40370   0076D2  3201               	rrcf	___lmul@multiplier^(0+1280),f,c
 40371   0076D4  5001               	movf	___lmul@multiplier^(0+1280),w,c
 40372   0076D6  1002               	iorwf	(___lmul@multiplier+1)^(0+1280),w,c
 40373   0076D8  1003               	iorwf	(___lmul@multiplier+2)^(0+1280),w,c
 40374   0076DA  1004               	iorwf	(___lmul@multiplier+3)^(0+1280),w,c
 40375   0076DC  A4D8               	btfss	status,2,c
 40376   0076DE  EF73  F03B         	goto	u6571
 40377   0076E2  EF75  F03B         	goto	u6570
 40378   0076E6                     u6571:
 40379   0076E6  EF51  F03B         	goto	l9165
 40380   0076EA                     u6570:
 40381   0076EA  C509  F501         	movff	___lmul@product,?___lmul
 40382   0076EE  C50A  F502         	movff	___lmul@product+1,?___lmul+1
 40383   0076F2  C50B  F503         	movff	___lmul@product+2,?___lmul+2
 40384   0076F6  C50C  F504         	movff	___lmul@product+3,?___lmul+3
 40385   0076FA  0012               	return		;funcret
 40386   0076FC                     __end_of___lmul:
 40387                           	callstack 0
 40388                           
 40389 ;; *************** function ___lldiv *****************
 40390 ;; Defined at:
 40391 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
 40392 ;; Parameters:    Size  Location     Type
 40393 ;;  dividend        4   10[COMRAM] unsigned long 
 40394 ;;  divisor         4   14[COMRAM] unsigned long 
 40395 ;; Auto vars:     Size  Location     Type
 40396 ;;  quotient        4   18[COMRAM] unsigned long 
 40397 ;;  counter         1   22[COMRAM] unsigned char 
 40398 ;; Return value:  Size  Location     Type
 40399 ;;                  4   10[COMRAM] unsigned long 
 40400 ;; Registers used:
 40401 ;;		wreg, status,2, status,0
 40402 ;; Tracked objects:
 40403 ;;		On entry : 0/0
 40404 ;;		On exit  : 0/0
 40405 ;;		Unchanged: 0/0
 40406 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40407 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40408 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40410 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40411 ;;Total ram usage:       13 bytes
 40412 ;; Hardware stack levels used: 1
 40413 ;; Hardware stack levels required when called: 1
 40414 ;; This function calls:
 40415 ;;		Nothing
 40416 ;; This function is called by:
 40417 ;;		_pbDownTimer
 40418 ;;		_pbUpTimer
 40419 ;; This function uses a non-reentrant model
 40420 ;;
 40421                           
 40422                           	psect	text112
 40423   0067E6                     __ptext112:
 40424                           	callstack 0
 40425   0067E6                     ___lldiv:
 40426                           	callstack 123
 40427   0067E6  0E00               	movlw	0
 40428   0067E8  6E13               	movwf	___lldiv@quotient^(0+1280),c
 40429   0067EA  0E00               	movlw	0
 40430   0067EC  6E14               	movwf	(___lldiv@quotient+1)^(0+1280),c
 40431   0067EE  0E00               	movlw	0
 40432   0067F0  6E15               	movwf	(___lldiv@quotient+2)^(0+1280),c
 40433   0067F2  0E00               	movlw	0
 40434   0067F4  6E16               	movwf	(___lldiv@quotient+3)^(0+1280),c
 40435   0067F6  500F               	movf	___lldiv@divisor^(0+1280),w,c
 40436   0067F8  1010               	iorwf	(___lldiv@divisor+1)^(0+1280),w,c
 40437   0067FA  1011               	iorwf	(___lldiv@divisor+2)^(0+1280),w,c
 40438   0067FC  1012               	iorwf	(___lldiv@divisor+3)^(0+1280),w,c
 40439   0067FE  B4D8               	btfsc	status,2,c
 40440   006800  EF04  F034         	goto	u6581
 40441   006804  EF06  F034         	goto	u6580
 40442   006808                     u6581:
 40443   006808  EF3C  F034         	goto	l2119
 40444   00680C                     u6580:
 40445   00680C  0E01               	movlw	1
 40446   00680E  6E17               	movwf	___lldiv@counter^(0+1280),c
 40447   006810  EF10  F034         	goto	l9181
 40448   006814                     l9179:
 40449   006814  90D8               	bcf	status,0,c
 40450   006816  360F               	rlcf	___lldiv@divisor^(0+1280),f,c
 40451   006818  3610               	rlcf	(___lldiv@divisor+1)^(0+1280),f,c
 40452   00681A  3611               	rlcf	(___lldiv@divisor+2)^(0+1280),f,c
 40453   00681C  3612               	rlcf	(___lldiv@divisor+3)^(0+1280),f,c
 40454   00681E  2A17               	incf	___lldiv@counter^(0+1280),f,c
 40455   006820                     l9181:
 40456   006820  AE12               	btfss	(___lldiv@divisor+3)^(0+1280),7,c
 40457   006822  EF15  F034         	goto	u6591
 40458   006826  EF17  F034         	goto	u6590
 40459   00682A                     u6591:
 40460   00682A  EF0A  F034         	goto	l9179
 40461   00682E                     u6590:
 40462   00682E                     l9183:
 40463   00682E  90D8               	bcf	status,0,c
 40464   006830  3613               	rlcf	___lldiv@quotient^(0+1280),f,c
 40465   006832  3614               	rlcf	(___lldiv@quotient+1)^(0+1280),f,c
 40466   006834  3615               	rlcf	(___lldiv@quotient+2)^(0+1280),f,c
 40467   006836  3616               	rlcf	(___lldiv@quotient+3)^(0+1280),f,c
 40468   006838  500F               	movf	___lldiv@divisor^(0+1280),w,c
 40469   00683A  5C0B               	subwf	___lldiv@dividend^(0+1280),w,c
 40470   00683C  5010               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 40471   00683E  580C               	subwfb	(___lldiv@dividend+1)^(0+1280),w,c
 40472   006840  5011               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 40473   006842  580D               	subwfb	(___lldiv@dividend+2)^(0+1280),w,c
 40474   006844  5012               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 40475   006846  580E               	subwfb	(___lldiv@dividend+3)^(0+1280),w,c
 40476   006848  A0D8               	btfss	status,0,c
 40477   00684A  EF29  F034         	goto	u6601
 40478   00684E  EF2B  F034         	goto	u6600
 40479   006852                     u6601:
 40480   006852  EF34  F034         	goto	l9191
 40481   006856                     u6600:
 40482   006856  500F               	movf	___lldiv@divisor^(0+1280),w,c
 40483   006858  5E0B               	subwf	___lldiv@dividend^(0+1280),f,c
 40484   00685A  5010               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 40485   00685C  5A0C               	subwfb	(___lldiv@dividend+1)^(0+1280),f,c
 40486   00685E  5011               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 40487   006860  5A0D               	subwfb	(___lldiv@dividend+2)^(0+1280),f,c
 40488   006862  5012               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 40489   006864  5A0E               	subwfb	(___lldiv@dividend+3)^(0+1280),f,c
 40490   006866  8013               	bsf	___lldiv@quotient^(0+1280),0,c
 40491   006868                     l9191:
 40492   006868  90D8               	bcf	status,0,c
 40493   00686A  3212               	rrcf	(___lldiv@divisor+3)^(0+1280),f,c
 40494   00686C  3211               	rrcf	(___lldiv@divisor+2)^(0+1280),f,c
 40495   00686E  3210               	rrcf	(___lldiv@divisor+1)^(0+1280),f,c
 40496   006870  320F               	rrcf	___lldiv@divisor^(0+1280),f,c
 40497   006872  2E17               	decfsz	___lldiv@counter^(0+1280),f,c
 40498   006874  EF17  F034         	goto	l9183
 40499   006878                     l2119:
 40500   006878  C513  F50B         	movff	___lldiv@quotient,?___lldiv
 40501   00687C  C514  F50C         	movff	___lldiv@quotient+1,?___lldiv+1
 40502   006880  C515  F50D         	movff	___lldiv@quotient+2,?___lldiv+2
 40503   006884  C516  F50E         	movff	___lldiv@quotient+3,?___lldiv+3
 40504   006888  0012               	return		;funcret
 40505   00688A                     __end_of___lldiv:
 40506                           	callstack 0
 40507                           
 40508 ;; *************** function _factoryReset *****************
 40509 ;; Defined at:
 40510 ;;		line 867 in file "../../VLCBlib_PIC/vlcb.c"
 40511 ;; Parameters:    Size  Location     Type
 40512 ;;		None
 40513 ;; Auto vars:     Size  Location     Type
 40514 ;;  i               1   58[COMRAM] unsigned char 
 40515 ;; Return value:  Size  Location     Type
 40516 ;;                  1    wreg      void 
 40517 ;; Registers used:
 40518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40519 ;; Tracked objects:
 40520 ;;		On entry : 0/0
 40521 ;;		On exit  : 0/0
 40522 ;;		Unchanged: 0/0
 40523 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40526 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40527 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40528 ;;Total ram usage:        5 bytes
 40529 ;; Hardware stack levels used: 1
 40530 ;; Hardware stack levels required when called: 10
 40531 ;; This function calls:
 40532 ;;		NULL
 40533 ;;		_APP_factoryReset
 40534 ;;		_canFactoryReset
 40535 ;;		_mnsFactoryReset
 40536 ;;		_nvFactoryReset
 40537 ;;		_teachFactoryReset
 40538 ;;		_writeNVM
 40539 ;; This function is called by:
 40540 ;;		_checkPowerOnPb
 40541 ;;		_main
 40542 ;; This function uses a non-reentrant model
 40543 ;;
 40544                           
 40545                           	psect	text113
 40546   005632                     __ptext113:
 40547                           	callstack 0
 40548   005632                     _factoryReset:
 40549                           	callstack 116
 40550   005632                     
 40551                           ;../../VLCBlib_PIC/vlcb.c: 868:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 870:     for (i
      +                          =0; i<6; i++) {
 40552   005632  6A3B               	clrf	factoryReset@i^(0+1280),c
 40553   005634                     l10815:
 40554                           
 40555                           ;../../VLCBlib_PIC/vlcb.c: 871:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 40556   005634  503B               	movf	factoryReset@i^(0+1280),w,c
 40557   005636  0D02               	mullw	2
 40558   005638  0E89               	movlw	low _services
 40559   00563A  24F3               	addwf	243,w,c
 40560   00563C  6EF6               	movwf	tblptrl,c
 40561   00563E  0EFF               	movlw	high _services
 40562   005640  20F4               	addwfc	244,w,c
 40563   005642  6EF7               	movwf	tblptrh,c
 40564   005644                     	if	1	;There are 3 active tblptr bytes
 40565   005644  6AF8               	clrf	tblptru,c
 40566   005646  0E00               	movlw	low (__mediumconst shr (0+16))
 40567   005648  22F8               	addwfc	tblptru,f,c
 40568   00564A                     	endif
 40569   00564A  0009               	tblrd		*+
 40570   00564C  50F5               	movf	tablat,w,c
 40571   00564E  0009               	tblrd		*+
 40572   005650  10F5               	iorwf	tablat,w,c
 40573   005652  B4D8               	btfsc	status,2,c
 40574   005654  EF2E  F02B         	goto	u8241
 40575   005658  EF30  F02B         	goto	u8240
 40576   00565C                     u8241:
 40577   00565C  EF81  F02B         	goto	l10821
 40578   005660                     u8240:
 40579   005660  503B               	movf	factoryReset@i^(0+1280),w,c
 40580   005662  0D02               	mullw	2
 40581   005664  0E89               	movlw	low _services
 40582   005666  24F3               	addwf	243,w,c
 40583   005668  6EF6               	movwf	tblptrl,c
 40584   00566A  0EFF               	movlw	high _services
 40585   00566C  20F4               	addwfc	244,w,c
 40586   00566E  6EF7               	movwf	tblptrh,c
 40587   005670                     	if	1	;There are 3 active tblptr bytes
 40588   005670  6AF8               	clrf	tblptru,c
 40589   005672  0E00               	movlw	low (__mediumconst shr (0+16))
 40590   005674  22F8               	addwfc	tblptru,f,c
 40591   005676                     	endif
 40592   005676  0009               	tblrd		*+
 40593   005678  C4F5 F537          	movff	tablat,??_factoryReset
 40594   00567C  0009               	tblrd		*+
 40595   00567E  C4F5 F538          	movff	tablat,??_factoryReset+1
 40596   005682  0E02               	movlw	2
 40597   005684  2637               	addwf	??_factoryReset^(0+1280),f,c
 40598   005686  0E00               	movlw	0
 40599   005688  2238               	addwfc	(??_factoryReset+1)^(0+1280),f,c
 40600   00568A  C537  F4F6         	movff	??_factoryReset,tblptrl
 40601   00568E  C538  F4F7         	movff	??_factoryReset+1,tblptrh
 40602   005692                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40603   005692  6AF8               	clrf	tblptru,c
 40604   005694                     	endif
 40605   005694                     	if	0	;tblptru may be non-zero
 40606   005694                     	endif
 40607   005694  0009               	tblrd		*+
 40608   005696  50F5               	movf	tablat,w,c
 40609   005698  0009               	tblrd		*+
 40610   00569A  10F5               	iorwf	tablat,w,c
 40611   00569C  B4D8               	btfsc	status,2,c
 40612   00569E  EF53  F02B         	goto	u8251
 40613   0056A2  EF55  F02B         	goto	u8250
 40614   0056A6                     u8251:
 40615   0056A6  EF81  F02B         	goto	l10821
 40616   0056AA                     u8250:
 40617   0056AA                     
 40618                           ;../../VLCBlib_PIC/vlcb.c: 872:             services[i]->factoryReset();
 40619   0056AA  503B               	movf	factoryReset@i^(0+1280),w,c
 40620   0056AC  0D02               	mullw	2
 40621   0056AE  0E89               	movlw	low _services
 40622   0056B0  24F3               	addwf	243,w,c
 40623   0056B2  6EF6               	movwf	tblptrl,c
 40624   0056B4  0EFF               	movlw	high _services
 40625   0056B6  20F4               	addwfc	244,w,c
 40626   0056B8  6EF7               	movwf	tblptrh,c
 40627   0056BA                     	if	1	;There are 3 active tblptr bytes
 40628   0056BA  6AF8               	clrf	tblptru,c
 40629   0056BC  0E00               	movlw	low (__mediumconst shr (0+16))
 40630   0056BE  22F8               	addwfc	tblptru,f,c
 40631   0056C0                     	endif
 40632   0056C0  0009               	tblrd		*+
 40633   0056C2  C4F5 F537          	movff	tablat,??_factoryReset
 40634   0056C6  0009               	tblrd		*+
 40635   0056C8  C4F5 F538          	movff	tablat,??_factoryReset+1
 40636   0056CC  0E02               	movlw	2
 40637   0056CE  2637               	addwf	??_factoryReset^(0+1280),f,c
 40638   0056D0  0E00               	movlw	0
 40639   0056D2  2238               	addwfc	(??_factoryReset+1)^(0+1280),f,c
 40640   0056D4  C537  F4F6         	movff	??_factoryReset,tblptrl
 40641   0056D8  C538  F4F7         	movff	??_factoryReset+1,tblptrh
 40642   0056DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40643   0056DC  6AF8               	clrf	tblptru,c
 40644   0056DE                     	endif
 40645   0056DE                     	if	0	;tblptru may be non-zero
 40646   0056DE                     	endif
 40647   0056DE  0009               	tblrd		*+
 40648   0056E0  C4F5 F539          	movff	tablat,??_factoryReset+2
 40649   0056E4  0009               	tblrd		*+
 40650   0056E6  C4F5 F53A          	movff	tablat,??_factoryReset+3
 40651   0056EA  D802               	call	u8268
 40652   0056EC  EF81  F02B         	goto	u8269
 40653   0056F0                     u8268:
 40654   0056F0  0005               	push	
 40655   0056F2  6EFA               	movwf	pclath,c
 40656   0056F4  5039               	movf	(??_factoryReset+2)^(0+1280),w,c
 40657   0056F6  6EFD               	movwf	tosl,c
 40658   0056F8  503A               	movf	(??_factoryReset+3)^(0+1280),w,c
 40659   0056FA  6EFE               	movwf	tosh,c
 40660   0056FC  6AFF               	clrf	tosu,c
 40661   0056FE  50FA               	movf	pclath,w,c
 40662   005700  0012               	return		;indir
 40663   005702                     u8269:
 40664   005702                     l10821:
 40665                           
 40666                           ;../../VLCBlib_PIC/vlcb.c: 874:     }
 40667   005702  2A3B               	incf	factoryReset@i^(0+1280),f,c
 40668   005704  0E05               	movlw	5
 40669   005706  643B               	cpfsgt	factoryReset@i^(0+1280),c
 40670   005708  EF88  F02B         	goto	u8271
 40671   00570C  EF8A  F02B         	goto	u8270
 40672   005710                     u8271:
 40673   005710  EF1A  F02B         	goto	l10815
 40674   005714                     u8270:
 40675   005714                     
 40676                           ;../../VLCBlib_PIC/vlcb.c: 876:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, 1);
 40677   005714  0EFA               	movlw	250
 40678   005716  6E0E               	movwf	writeNVM@index^(0+1280),c
 40679   005718  0E03               	movlw	3
 40680   00571A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40681   00571C  0E00               	movlw	0
 40682   00571E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40683   005720  0E01               	movlw	1
 40684   005722  6E11               	movwf	writeNVM@value^(0+1280),c
 40685   005724  0E00               	movlw	0
 40686   005726  EC47  F03C         	call	_writeNVM
 40687   00572A                     
 40688                           ;../../VLCBlib_PIC/vlcb.c: 878:     APP_factoryReset();
 40689   00572A  EC9A  F041         	call	_APP_factoryReset	;wreg free
 40690   00572E  0012               	return		;funcret
 40691   005730                     __end_of_factoryReset:
 40692                           	callstack 0
 40693                           
 40694 ;; *************** function _nvFactoryReset *****************
 40695 ;; Defined at:
 40696 ;;		line 126 in file "../../VLCBlib_PIC/nv.c"
 40697 ;; Parameters:    Size  Location     Type
 40698 ;;		None
 40699 ;; Auto vars:     Size  Location     Type
 40700 ;;  i               1   22[COMRAM] unsigned char 
 40701 ;; Return value:  Size  Location     Type
 40702 ;;                  1    wreg      void 
 40703 ;; Registers used:
 40704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40705 ;; Tracked objects:
 40706 ;;		On entry : 0/0
 40707 ;;		On exit  : 0/0
 40708 ;;		Unchanged: 0/0
 40709 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40711 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40712 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40713 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40714 ;;Total ram usage:        3 bytes
 40715 ;; Hardware stack levels used: 1
 40716 ;; Hardware stack levels required when called: 6
 40717 ;; This function calls:
 40718 ;;		_APP_nvDefault
 40719 ;;		_writeNVM
 40720 ;; This function is called by:
 40721 ;;		_factoryReset
 40722 ;; This function uses a non-reentrant model
 40723 ;;
 40724                           
 40725                           	psect	text114
 40726   007D48                     __ptext114:
 40727                           	callstack 0
 40728   007D48                     _nvFactoryReset:
 40729                           	callstack 119
 40730   007D48                     
 40731                           ;../../VLCBlib_PIC/nv.c: 127:     uint8_t i;;../../VLCBlib_PIC/nv.c: 128:     for (i=1; 
      +                          i<= 49; i++) {
 40732   007D48  0E01               	movlw	1
 40733   007D4A  6E17               	movwf	nvFactoryReset@i^(0+1280),c
 40734   007D4C                     l8967:
 40735                           
 40736                           ;../../VLCBlib_PIC/nv.c: 129:         writeNVM(EEPROM_NVM_TYPE, 0x200 +i, APP_nvDefault(
      +                          i));
 40737   007D4C  0E00               	movlw	0
 40738   007D4E  2417               	addwf	nvFactoryReset@i^(0+1280),w,c
 40739   007D50  6E15               	movwf	??_nvFactoryReset^(0+1280),c
 40740   007D52  6A16               	clrf	(??_nvFactoryReset+1)^(0+1280),c
 40741   007D54  0E02               	movlw	2
 40742   007D56  2216               	addwfc	(??_nvFactoryReset+1)^(0+1280),f,c
 40743   007D58  C515  F50E         	movff	??_nvFactoryReset,writeNVM@index
 40744   007D5C  C516  F50F         	movff	??_nvFactoryReset+1,writeNVM@index+1
 40745   007D60  6A10               	clrf	(writeNVM@index+2)^(0+1280),c
 40746   007D62  BE0F               	btfsc	(writeNVM@index+1)^(0+1280),7,c
 40747   007D64  0610               	decf	(writeNVM@index+2)^(0+1280),f,c
 40748   007D66  5017               	movf	nvFactoryReset@i^(0+1280),w,c
 40749   007D68  ECD4  F028         	call	_APP_nvDefault
 40750   007D6C  6E11               	movwf	writeNVM@value^(0+1280),c
 40751   007D6E  0E00               	movlw	0
 40752   007D70  EC47  F03C         	call	_writeNVM
 40753   007D74                     
 40754                           ;../../VLCBlib_PIC/nv.c: 130:     }
 40755   007D74  2A17               	incf	nvFactoryReset@i^(0+1280),f,c
 40756   007D76  0E31               	movlw	49
 40757   007D78  6417               	cpfsgt	nvFactoryReset@i^(0+1280),c
 40758   007D7A  EFC1  F03E         	goto	u6321
 40759   007D7E  EFC3  F03E         	goto	u6320
 40760   007D82                     u6321:
 40761   007D82  EFA6  F03E         	goto	l8967
 40762   007D86                     u6320:
 40763   007D86  0012               	return		;funcret
 40764   007D88                     __end_of_nvFactoryReset:
 40765                           	callstack 0
 40766                           
 40767 ;; *************** function _mnsFactoryReset *****************
 40768 ;; Defined at:
 40769 ;;		line 279 in file "../../VLCBlib_PIC/mns.c"
 40770 ;; Parameters:    Size  Location     Type
 40771 ;;		None
 40772 ;; Auto vars:     Size  Location     Type
 40773 ;;		None
 40774 ;; Return value:  Size  Location     Type
 40775 ;;                  1    wreg      void 
 40776 ;; Registers used:
 40777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40778 ;; Tracked objects:
 40779 ;;		On entry : 0/0
 40780 ;;		On exit  : 0/0
 40781 ;;		Unchanged: 0/0
 40782 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40787 ;;Total ram usage:        0 bytes
 40788 ;; Hardware stack levels used: 1
 40789 ;; Hardware stack levels required when called: 6
 40790 ;; This function calls:
 40791 ;;		_writeNVM
 40792 ;; This function is called by:
 40793 ;;		_factoryReset
 40794 ;; This function uses a non-reentrant model
 40795 ;;
 40796                           
 40797                           	psect	text115
 40798   007626                     __ptext115:
 40799                           	callstack 0
 40800   007626                     _mnsFactoryReset:
 40801                           	callstack 119
 40802   007626                     
 40803                           ;../../VLCBlib_PIC/mns.c: 280:     nn.bytes.hi = 0;
 40804   007626  0105               	movlb	5	; () banked
 40805   007628  6B90               	clrf	(_nn+1)& (0+255),b
 40806                           
 40807                           ;../../VLCBlib_PIC/mns.c: 281:     nn.bytes.lo = 0;
 40808   00762A  6B8F               	clrf	_nn& (0+255),b
 40809   00762C                     
 40810                           ; BSR set to: 5
 40811                           ;../../VLCBlib_PIC/mns.c: 282:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.hi);
 40812   00762C  0EFD               	movlw	253
 40813   00762E  6E0E               	movwf	writeNVM@index^(0+1280),c
 40814   007630  0E03               	movlw	3
 40815   007632  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40816   007634  0E00               	movlw	0
 40817   007636  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40818   007638  C590  F511         	movff	_nn+1,writeNVM@value
 40819   00763C  0E00               	movlw	0
 40820   00763E  EC47  F03C         	call	_writeNVM
 40821                           
 40822                           ;../../VLCBlib_PIC/mns.c: 283:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.lo);
 40823   007642  0EFC               	movlw	252
 40824   007644  6E0E               	movwf	writeNVM@index^(0+1280),c
 40825   007646  0E03               	movlw	3
 40826   007648  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40827   00764A  0E00               	movlw	0
 40828   00764C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40829   00764E  C58F  F511         	movff	_nn,writeNVM@value
 40830   007652  0E00               	movlw	0
 40831   007654  EC47  F03C         	call	_writeNVM
 40832   007658                     
 40833                           ;../../VLCBlib_PIC/mns.c: 285:     last_mode_state = mode_state = MODE_UNINITIALISED;
 40834   007658  0105               	movlb	5	; () banked
 40835   00765A  69A1               	setf	_mode_state& (0+255),b
 40836   00765C  69A0               	setf	_last_mode_state& (0+255),b
 40837                           
 40838                           ;../../VLCBlib_PIC/mns.c: 286:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 40839   00765E  0EFB               	movlw	251
 40840   007660  6E0E               	movwf	writeNVM@index^(0+1280),c
 40841   007662  0E03               	movlw	3
 40842   007664  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40843   007666  0E00               	movlw	0
 40844   007668  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40845   00766A  C5A1  F511         	movff	_mode_state,writeNVM@value
 40846   00766E  0E00               	movlw	0
 40847   007670  EC47  F03C         	call	_writeNVM
 40848   007674                     
 40849                           ;../../VLCBlib_PIC/mns.c: 288:     last_mode_flags = mode_flags = 0;
 40850   007674  0105               	movlb	5	; () banked
 40851   007676  6BA4               	clrf	_mode_flags& (0+255),b
 40852   007678  6B9F               	clrf	_last_mode_flags& (0+255),b
 40853                           
 40854                           ;../../VLCBlib_PIC/mns.c: 289:     writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 40855   00767A  0EF9               	movlw	249
 40856   00767C  6E0E               	movwf	writeNVM@index^(0+1280),c
 40857   00767E  0E03               	movlw	3
 40858   007680  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40859   007682  0E00               	movlw	0
 40860   007684  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40861   007686  C5A4  F511         	movff	_mode_flags,writeNVM@value
 40862   00768A  0E00               	movlw	0
 40863   00768C  EC47  F03C         	call	_writeNVM
 40864   007690  0012               	return		;funcret
 40865   007692                     __end_of_mnsFactoryReset:
 40866                           	callstack 0
 40867                           
 40868 ;; *************** function _canFactoryReset *****************
 40869 ;; Defined at:
 40870 ;;		line 210 in file "../../VLCBlib_PIC/can18_can_2.c"
 40871 ;; Parameters:    Size  Location     Type
 40872 ;;		None
 40873 ;; Auto vars:     Size  Location     Type
 40874 ;;		None
 40875 ;; Return value:  Size  Location     Type
 40876 ;;                  1    wreg      void 
 40877 ;; Registers used:
 40878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40879 ;; Tracked objects:
 40880 ;;		On entry : 0/0
 40881 ;;		On exit  : 0/0
 40882 ;;		Unchanged: 0/0
 40883 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40888 ;;Total ram usage:        0 bytes
 40889 ;; Hardware stack levels used: 1
 40890 ;; Hardware stack levels required when called: 6
 40891 ;; This function calls:
 40892 ;;		_writeNVM
 40893 ;; This function is called by:
 40894 ;;		_factoryReset
 40895 ;; This function uses a non-reentrant model
 40896 ;;
 40897                           
 40898                           	psect	text116
 40899   008268                     __ptext116:
 40900                           	callstack 0
 40901   008268                     _canFactoryReset:
 40902                           	callstack 119
 40903   008268                     
 40904                           ;../../VLCBlib_PIC/can18_can_2.c: 211:     canId = 0;
 40905   008268  0105               	movlb	5	; () banked
 40906   00826A  6BA8               	clrf	_canId& (0+255),b
 40907   00826C                     
 40908                           ; BSR set to: 5
 40909                           ;../../VLCBlib_PIC/can18_can_2.c: 212:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 40910   00826C  0EFE               	movlw	254
 40911   00826E  6E0E               	movwf	writeNVM@index^(0+1280),c
 40912   008270  0E03               	movlw	3
 40913   008272  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40914   008274  0E00               	movlw	0
 40915   008276  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40916   008278  C5A8  F511         	movff	_canId,writeNVM@value
 40917   00827C  0E00               	movlw	0
 40918   00827E  EC47  F03C         	call	_writeNVM
 40919   008282  0012               	return		;funcret
 40920   008284                     __end_of_canFactoryReset:
 40921                           	callstack 0
 40922                           
 40923 ;; *************** function _teachFactoryReset *****************
 40924 ;; Defined at:
 40925 ;;		line 190 in file "../../VLCBlib_PIC/event_teach_simple.c"
 40926 ;; Parameters:    Size  Location     Type
 40927 ;;		None
 40928 ;; Auto vars:     Size  Location     Type
 40929 ;;		None
 40930 ;; Return value:  Size  Location     Type
 40931 ;;                  1    wreg      void 
 40932 ;; Registers used:
 40933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40934 ;; Tracked objects:
 40935 ;;		On entry : 0/0
 40936 ;;		On exit  : 0/0
 40937 ;;		Unchanged: 0/0
 40938 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40943 ;;Total ram usage:        0 bytes
 40944 ;; Hardware stack levels used: 1
 40945 ;; Hardware stack levels required when called: 8
 40946 ;; This function calls:
 40947 ;;		_clearAllEvents
 40948 ;; This function is called by:
 40949 ;;		_factoryReset
 40950 ;; This function uses a non-reentrant model
 40951 ;;
 40952                           
 40953                           	psect	text117
 40954   00832E                     __ptext117:
 40955                           	callstack 0
 40956   00832E                     _teachFactoryReset:
 40957                           	callstack 117
 40958   00832E                     
 40959                           ;../../VLCBlib_PIC/event_teach_simple.c: 191:     clearAllEvents();
 40960   00832E  EC07  F041         	call	_clearAllEvents	;wreg free
 40961   008332  0012               	return		;funcret
 40962   008334                     __end_of_teachFactoryReset:
 40963                           	callstack 0
 40964                           
 40965 ;; *************** function _APP_nvDefault *****************
 40966 ;; Defined at:
 40967 ;;		line 70 in file "../canargb_nvs.c"
 40968 ;; Parameters:    Size  Location     Type
 40969 ;;  index           1    wreg     unsigned char 
 40970 ;; Auto vars:     Size  Location     Type
 40971 ;;  index           1   10[COMRAM] unsigned char 
 40972 ;; Return value:  Size  Location     Type
 40973 ;;                  1    wreg      unsigned char 
 40974 ;; Registers used:
 40975 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40976 ;; Tracked objects:
 40977 ;;		On entry : 0/0
 40978 ;;		On exit  : 0/0
 40979 ;;		Unchanged: 0/0
 40980 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40983 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40984 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40985 ;;Total ram usage:        3 bytes
 40986 ;; Hardware stack levels used: 1
 40987 ;; Hardware stack levels required when called: 2
 40988 ;; This function calls:
 40989 ;;		___awdiv
 40990 ;;		___awmod
 40991 ;; This function is called by:
 40992 ;;		_nvFactoryReset
 40993 ;; This function uses a non-reentrant model
 40994 ;;
 40995                           
 40996                           	psect	text118
 40997   0051A8                     __ptext118:
 40998                           	callstack 0
 40999   0051A8                     _APP_nvDefault:
 41000                           	callstack 122
 41001                           
 41002                           ;incstack = 0
 41003                           ;APP_nvDefault@index stored from wreg
 41004   0051A8  6E0B               	movwf	APP_nvDefault@index^(0+1280),c
 41005   0051AA                     
 41006                           ;../canargb_nvs.c: 71:     if (index == 49) {
 41007   0051AA  0E31               	movlw	49
 41008   0051AC  180B               	xorwf	APP_nvDefault@index^(0+1280),w,c
 41009   0051AE  A4D8               	btfss	status,2,c
 41010   0051B0  EFDC  F028         	goto	u5441
 41011   0051B4  EFDE  F028         	goto	u5440
 41012   0051B8                     u5441:
 41013   0051B8  EFE1  F028         	goto	l7993
 41014   0051BC                     u5440:
 41015   0051BC                     
 41016                           ;../canargb_nvs.c: 72:         return 3;
 41017   0051BC  0E03               	movlw	3
 41018   0051BE  EF71  F029         	goto	l275
 41019   0051C2                     l7993:
 41020                           
 41021                           ;../canargb_nvs.c: 74:     index--;
 41022   0051C2  060B               	decf	APP_nvDefault@index^(0+1280),f,c
 41023   0051C4                     
 41024                           ;../canargb_nvs.c: 75:     if (index < 49) {
 41025   0051C4  0E31               	movlw	49
 41026   0051C6  600B               	cpfslt	APP_nvDefault@index^(0+1280),c
 41027   0051C8  EFE8  F028         	goto	u5451
 41028   0051CC  EFEA  F028         	goto	u5450
 41029   0051D0                     u5451:
 41030   0051D0  EF70  F029         	goto	l8015
 41031   0051D4                     u5450:
 41032   0051D4  EF51  F029         	goto	l8013
 41033   0051D8                     l7999:
 41034                           
 41035                           ;../canargb_nvs.c: 78:                 return defaultColours[index/3].red;
 41036   0051D8  C50B  F501         	movff	APP_nvDefault@index,___awdiv@dividend
 41037   0051DC  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 41038   0051DE  0E00               	movlw	0
 41039   0051E0  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 41040   0051E2  0E03               	movlw	3
 41041   0051E4  6E03               	movwf	___awdiv@divisor^(0+1280),c
 41042   0051E6  EC74  F030         	call	___awdiv	;wreg free
 41043   0051EA  0E03               	movlw	3
 41044   0051EC  0201               	mulwf	?___awdiv^(0+1280),c
 41045   0051EE  C4F3 F509          	movff	prodl,??_APP_nvDefault
 41046   0051F2  C4F4 F50A          	movff	prodh,??_APP_nvDefault+1
 41047   0051F6  0202               	mulwf	(?___awdiv+1)^(0+1280),c
 41048   0051F8  50F3               	movf	prodl,w,c
 41049   0051FA  260A               	addwf	(??_APP_nvDefault+1)^(0+1280),f,c
 41050   0051FC  0E59               	movlw	low _defaultColours
 41051   0051FE  2409               	addwf	??_APP_nvDefault^(0+1280),w,c
 41052   005200  6EF6               	movwf	tblptrl,c
 41053   005202  0EFF               	movlw	high _defaultColours
 41054   005204  200A               	addwfc	(??_APP_nvDefault+1)^(0+1280),w,c
 41055   005206  6EF7               	movwf	tblptrh,c
 41056   005208                     	if	1	;There are 3 active tblptr bytes
 41057   005208  6AF8               	clrf	tblptru,c
 41058   00520A  0E00               	movlw	low (__mediumconst shr (0+16))
 41059   00520C  22F8               	addwfc	tblptru,f,c
 41060   00520E                     	endif
 41061   00520E  0008               	tblrd		*
 41062   005210  50F5               	movf	tablat,w,c
 41063   005212  EF71  F029         	goto	l275
 41064   005216                     l8003:
 41065                           
 41066                           ;../canargb_nvs.c: 80:                 return defaultColours[index/3].green;
 41067   005216  C50B  F501         	movff	APP_nvDefault@index,___awdiv@dividend
 41068   00521A  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 41069   00521C  0E00               	movlw	0
 41070   00521E  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 41071   005220  0E03               	movlw	3
 41072   005222  6E03               	movwf	___awdiv@divisor^(0+1280),c
 41073   005224  EC74  F030         	call	___awdiv	;wreg free
 41074   005228  0E03               	movlw	3
 41075   00522A  0201               	mulwf	?___awdiv^(0+1280),c
 41076   00522C  C4F3 F509          	movff	prodl,??_APP_nvDefault
 41077   005230  C4F4 F50A          	movff	prodh,??_APP_nvDefault+1
 41078   005234  0202               	mulwf	(?___awdiv+1)^(0+1280),c
 41079   005236  50F3               	movf	prodl,w,c
 41080   005238  260A               	addwf	(??_APP_nvDefault+1)^(0+1280),f,c
 41081   00523A  0E01               	movlw	1
 41082   00523C  2609               	addwf	??_APP_nvDefault^(0+1280),f,c
 41083   00523E  0E00               	movlw	0
 41084   005240  220A               	addwfc	(??_APP_nvDefault+1)^(0+1280),f,c
 41085   005242  0E59               	movlw	low _defaultColours
 41086   005244  2409               	addwf	??_APP_nvDefault^(0+1280),w,c
 41087   005246  6EF6               	movwf	tblptrl,c
 41088   005248  0EFF               	movlw	high _defaultColours
 41089   00524A  200A               	addwfc	(??_APP_nvDefault+1)^(0+1280),w,c
 41090   00524C  6EF7               	movwf	tblptrh,c
 41091   00524E                     	if	1	;There are 3 active tblptr bytes
 41092   00524E  6AF8               	clrf	tblptru,c
 41093   005250  0E00               	movlw	low (__mediumconst shr (0+16))
 41094   005252  22F8               	addwfc	tblptru,f,c
 41095   005254                     	endif
 41096   005254  0008               	tblrd		*
 41097   005256  50F5               	movf	tablat,w,c
 41098   005258  EF71  F029         	goto	l275
 41099   00525C                     l8007:
 41100                           
 41101                           ;../canargb_nvs.c: 82:                 return defaultColours[index/3].blue;
 41102   00525C  C50B  F501         	movff	APP_nvDefault@index,___awdiv@dividend
 41103   005260  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 41104   005262  0E00               	movlw	0
 41105   005264  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 41106   005266  0E03               	movlw	3
 41107   005268  6E03               	movwf	___awdiv@divisor^(0+1280),c
 41108   00526A  EC74  F030         	call	___awdiv	;wreg free
 41109   00526E  0E03               	movlw	3
 41110   005270  0201               	mulwf	?___awdiv^(0+1280),c
 41111   005272  C4F3 F509          	movff	prodl,??_APP_nvDefault
 41112   005276  C4F4 F50A          	movff	prodh,??_APP_nvDefault+1
 41113   00527A  0202               	mulwf	(?___awdiv+1)^(0+1280),c
 41114   00527C  50F3               	movf	prodl,w,c
 41115   00527E  260A               	addwf	(??_APP_nvDefault+1)^(0+1280),f,c
 41116   005280  0E02               	movlw	2
 41117   005282  2609               	addwf	??_APP_nvDefault^(0+1280),f,c
 41118   005284  0E00               	movlw	0
 41119   005286  220A               	addwfc	(??_APP_nvDefault+1)^(0+1280),f,c
 41120   005288  0E59               	movlw	low _defaultColours
 41121   00528A  2409               	addwf	??_APP_nvDefault^(0+1280),w,c
 41122   00528C  6EF6               	movwf	tblptrl,c
 41123   00528E  0EFF               	movlw	high _defaultColours
 41124   005290  200A               	addwfc	(??_APP_nvDefault+1)^(0+1280),w,c
 41125   005292  6EF7               	movwf	tblptrh,c
 41126   005294                     	if	1	;There are 3 active tblptr bytes
 41127   005294  6AF8               	clrf	tblptru,c
 41128   005296  0E00               	movlw	low (__mediumconst shr (0+16))
 41129   005298  22F8               	addwfc	tblptru,f,c
 41130   00529A                     	endif
 41131   00529A  0008               	tblrd		*
 41132   00529C  50F5               	movf	tablat,w,c
 41133   00529E  EF71  F029         	goto	l275
 41134   0052A2                     l8013:
 41135   0052A2  C50B  F501         	movff	APP_nvDefault@index,___awmod@dividend
 41136   0052A6  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
 41137   0052A8  0E00               	movlw	0
 41138   0052AA  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
 41139   0052AC  0E03               	movlw	3
 41140   0052AE  6E03               	movwf	___awmod@divisor^(0+1280),c
 41141   0052B0  EC4E  F032         	call	___awmod	;wreg free
 41142                           
 41143                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41144                           ; Switch size 1, requested type "simple"
 41145                           ; Number of cases is 1, Range of values is 0 to 0
 41146                           ; switch strategies available:
 41147                           ; Name         Instructions Cycles
 41148                           ; simple_byte            4     3 (average)
 41149                           ;	Chosen strategy is simple_byte
 41150   0052B4  5002               	movf	(?___awmod+1)^(0+1280),w,c
 41151   0052B6  0A00               	xorlw	0	; case 0
 41152   0052B8  B4D8               	btfsc	status,2,c
 41153   0052BA  EF61  F029         	goto	l11643
 41154   0052BE  EF70  F029         	goto	l8015
 41155   0052C2                     l11643:
 41156                           
 41157                           ; Switch size 1, requested type "simple"
 41158                           ; Number of cases is 3, Range of values is 0 to 2
 41159                           ; switch strategies available:
 41160                           ; Name         Instructions Cycles
 41161                           ; simple_byte           10     6 (average)
 41162                           ;	Chosen strategy is simple_byte
 41163   0052C2  5001               	movf	?___awmod^(0+1280),w,c
 41164   0052C4  0A00               	xorlw	0	; case 0
 41165   0052C6  B4D8               	btfsc	status,2,c
 41166   0052C8  EFEC  F028         	goto	l7999
 41167   0052CC  0A01               	xorlw	1	; case 1
 41168   0052CE  B4D8               	btfsc	status,2,c
 41169   0052D0  EF0B  F029         	goto	l8003
 41170   0052D4  0A03               	xorlw	3	; case 2
 41171   0052D6  B4D8               	btfsc	status,2,c
 41172   0052D8  EF2E  F029         	goto	l8007
 41173   0052DC  EF70  F029         	goto	l8015
 41174   0052E0                     l8015:
 41175                           
 41176                           ;../canargb_nvs.c: 85:     return 0;
 41177   0052E0  0E00               	movlw	0
 41178   0052E2                     l275:
 41179   0052E2  0012               	return		;funcret
 41180   0052E4                     __end_of_APP_nvDefault:
 41181                           	callstack 0
 41182                           
 41183 ;; *************** function ___awmod *****************
 41184 ;; Defined at:
 41185 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 41186 ;; Parameters:    Size  Location     Type
 41187 ;;  dividend        2    0[COMRAM] int 
 41188 ;;  divisor         2    2[COMRAM] int 
 41189 ;; Auto vars:     Size  Location     Type
 41190 ;;  sign            1    5[COMRAM] unsigned char 
 41191 ;;  counter         1    4[COMRAM] unsigned char 
 41192 ;; Return value:  Size  Location     Type
 41193 ;;                  2    0[COMRAM] int 
 41194 ;; Registers used:
 41195 ;;		wreg, status,2, status,0
 41196 ;; Tracked objects:
 41197 ;;		On entry : 0/0
 41198 ;;		On exit  : 0/0
 41199 ;;		Unchanged: 0/0
 41200 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41201 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41204 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41205 ;;Total ram usage:        6 bytes
 41206 ;; Hardware stack levels used: 1
 41207 ;; Hardware stack levels required when called: 1
 41208 ;; This function calls:
 41209 ;;		Nothing
 41210 ;; This function is called by:
 41211 ;;		_APP_nvDefault
 41212 ;; This function uses a non-reentrant model
 41213 ;;
 41214                           
 41215                           	psect	text119
 41216   00649C                     __ptext119:
 41217                           	callstack 0
 41218   00649C                     ___awmod:
 41219                           	callstack 122
 41220   00649C  6A06               	clrf	___awmod@sign^(0+1280),c
 41221   00649E  BE02               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
 41222   0064A0  EF56  F032         	goto	u5320
 41223   0064A4  EF54  F032         	goto	u5321
 41224   0064A8                     u5321:
 41225   0064A8  EF5C  F032         	goto	l7899
 41226   0064AC                     u5320:
 41227   0064AC  6C01               	negf	___awmod@dividend^(0+1280),c
 41228   0064AE  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
 41229   0064B0  B0D8               	btfsc	status,0,c
 41230   0064B2  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
 41231   0064B4  0E01               	movlw	1
 41232   0064B6  6E06               	movwf	___awmod@sign^(0+1280),c
 41233   0064B8                     l7899:
 41234   0064B8  BE04               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
 41235   0064BA  EF63  F032         	goto	u5330
 41236   0064BE  EF61  F032         	goto	u5331
 41237   0064C2                     u5331:
 41238   0064C2  EF67  F032         	goto	l7903
 41239   0064C6                     u5330:
 41240   0064C6  6C03               	negf	___awmod@divisor^(0+1280),c
 41241   0064C8  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
 41242   0064CA  B0D8               	btfsc	status,0,c
 41243   0064CC  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
 41244   0064CE                     l7903:
 41245   0064CE  5003               	movf	___awmod@divisor^(0+1280),w,c
 41246   0064D0  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
 41247   0064D2  B4D8               	btfsc	status,2,c
 41248   0064D4  EF6E  F032         	goto	u5341
 41249   0064D8  EF70  F032         	goto	u5340
 41250   0064DC                     u5341:
 41251   0064DC  EF94  F032         	goto	l7919
 41252   0064E0                     u5340:
 41253   0064E0  0E01               	movlw	1
 41254   0064E2  6E05               	movwf	___awmod@counter^(0+1280),c
 41255   0064E4  EF78  F032         	goto	l7909
 41256   0064E8                     l7907:
 41257   0064E8  90D8               	bcf	status,0,c
 41258   0064EA  3603               	rlcf	___awmod@divisor^(0+1280),f,c
 41259   0064EC  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
 41260   0064EE  2A05               	incf	___awmod@counter^(0+1280),f,c
 41261   0064F0                     l7909:
 41262   0064F0  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
 41263   0064F2  EF7D  F032         	goto	u5351
 41264   0064F6  EF7F  F032         	goto	u5350
 41265   0064FA                     u5351:
 41266   0064FA  EF74  F032         	goto	l7907
 41267   0064FE                     u5350:
 41268   0064FE                     l7911:
 41269   0064FE  5003               	movf	___awmod@divisor^(0+1280),w,c
 41270   006500  5C01               	subwf	___awmod@dividend^(0+1280),w,c
 41271   006502  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
 41272   006504  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
 41273   006506  A0D8               	btfss	status,0,c
 41274   006508  EF88  F032         	goto	u5361
 41275   00650C  EF8A  F032         	goto	u5360
 41276   006510                     u5361:
 41277   006510  EF8E  F032         	goto	l7915
 41278   006514                     u5360:
 41279   006514  5003               	movf	___awmod@divisor^(0+1280),w,c
 41280   006516  5E01               	subwf	___awmod@dividend^(0+1280),f,c
 41281   006518  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
 41282   00651A  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
 41283   00651C                     l7915:
 41284   00651C  90D8               	bcf	status,0,c
 41285   00651E  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
 41286   006520  3203               	rrcf	___awmod@divisor^(0+1280),f,c
 41287   006522  2E05               	decfsz	___awmod@counter^(0+1280),f,c
 41288   006524  EF7F  F032         	goto	l7911
 41289   006528                     l7919:
 41290   006528  5006               	movf	___awmod@sign^(0+1280),w,c
 41291   00652A  B4D8               	btfsc	status,2,c
 41292   00652C  EF9A  F032         	goto	u5371
 41293   006530  EF9C  F032         	goto	u5370
 41294   006534                     u5371:
 41295   006534  EFA0  F032         	goto	l7923
 41296   006538                     u5370:
 41297   006538  6C01               	negf	___awmod@dividend^(0+1280),c
 41298   00653A  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
 41299   00653C  B0D8               	btfsc	status,0,c
 41300   00653E  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
 41301   006540                     l7923:
 41302   006540  C501  F501         	movff	___awmod@dividend,?___awmod
 41303   006544  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
 41304   006548  0012               	return		;funcret
 41305   00654A                     __end_of___awmod:
 41306                           	callstack 0
 41307                           
 41308 ;; *************** function ___awdiv *****************
 41309 ;; Defined at:
 41310 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 41311 ;; Parameters:    Size  Location     Type
 41312 ;;  dividend        2    0[COMRAM] int 
 41313 ;;  divisor         2    2[COMRAM] int 
 41314 ;; Auto vars:     Size  Location     Type
 41315 ;;  quotient        2    6[COMRAM] int 
 41316 ;;  sign            1    5[COMRAM] unsigned char 
 41317 ;;  counter         1    4[COMRAM] unsigned char 
 41318 ;; Return value:  Size  Location     Type
 41319 ;;                  2    0[COMRAM] int 
 41320 ;; Registers used:
 41321 ;;		wreg, status,2, status,0
 41322 ;; Tracked objects:
 41323 ;;		On entry : 0/0
 41324 ;;		On exit  : 0/0
 41325 ;;		Unchanged: 0/0
 41326 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41327 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41328 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41330 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41331 ;;Total ram usage:        8 bytes
 41332 ;; Hardware stack levels used: 1
 41333 ;; Hardware stack levels required when called: 1
 41334 ;; This function calls:
 41335 ;;		Nothing
 41336 ;; This function is called by:
 41337 ;;		_APP_nvDefault
 41338 ;;		_leds_poll
 41339 ;; This function uses a non-reentrant model
 41340 ;;
 41341                           
 41342                           	psect	text120
 41343   0060E8                     __ptext120:
 41344                           	callstack 0
 41345   0060E8                     ___awdiv:
 41346                           	callstack 123
 41347   0060E8  6A06               	clrf	___awdiv@sign^(0+1280),c
 41348   0060EA  BE04               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
 41349   0060EC  EF7C  F030         	goto	u5260
 41350   0060F0  EF7A  F030         	goto	u5261
 41351   0060F4                     u5261:
 41352   0060F4  EF82  F030         	goto	l7855
 41353   0060F8                     u5260:
 41354   0060F8  6C03               	negf	___awdiv@divisor^(0+1280),c
 41355   0060FA  1E04               	comf	(___awdiv@divisor+1)^(0+1280),f,c
 41356   0060FC  B0D8               	btfsc	status,0,c
 41357   0060FE  2A04               	incf	(___awdiv@divisor+1)^(0+1280),f,c
 41358   006100  0E01               	movlw	1
 41359   006102  6E06               	movwf	___awdiv@sign^(0+1280),c
 41360   006104                     l7855:
 41361   006104  BE02               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
 41362   006106  EF89  F030         	goto	u5270
 41363   00610A  EF87  F030         	goto	u5271
 41364   00610E                     u5271:
 41365   00610E  EF8F  F030         	goto	l7861
 41366   006112                     u5270:
 41367   006112  6C01               	negf	___awdiv@dividend^(0+1280),c
 41368   006114  1E02               	comf	(___awdiv@dividend+1)^(0+1280),f,c
 41369   006116  B0D8               	btfsc	status,0,c
 41370   006118  2A02               	incf	(___awdiv@dividend+1)^(0+1280),f,c
 41371   00611A  0E01               	movlw	1
 41372   00611C  1A06               	xorwf	___awdiv@sign^(0+1280),f,c
 41373   00611E                     l7861:
 41374   00611E  0E00               	movlw	0
 41375   006120  6E08               	movwf	(___awdiv@quotient+1)^(0+1280),c
 41376   006122  0E00               	movlw	0
 41377   006124  6E07               	movwf	___awdiv@quotient^(0+1280),c
 41378   006126  5003               	movf	___awdiv@divisor^(0+1280),w,c
 41379   006128  1004               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
 41380   00612A  B4D8               	btfsc	status,2,c
 41381   00612C  EF9A  F030         	goto	u5281
 41382   006130  EF9C  F030         	goto	u5280
 41383   006134                     u5281:
 41384   006134  EFC4  F030         	goto	l7883
 41385   006138                     u5280:
 41386   006138  0E01               	movlw	1
 41387   00613A  6E05               	movwf	___awdiv@counter^(0+1280),c
 41388   00613C  EFA4  F030         	goto	l7869
 41389   006140                     l7867:
 41390   006140  90D8               	bcf	status,0,c
 41391   006142  3603               	rlcf	___awdiv@divisor^(0+1280),f,c
 41392   006144  3604               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
 41393   006146  2A05               	incf	___awdiv@counter^(0+1280),f,c
 41394   006148                     l7869:
 41395   006148  AE04               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
 41396   00614A  EFA9  F030         	goto	u5291
 41397   00614E  EFAB  F030         	goto	u5290
 41398   006152                     u5291:
 41399   006152  EFA0  F030         	goto	l7867
 41400   006156                     u5290:
 41401   006156                     l7871:
 41402   006156  90D8               	bcf	status,0,c
 41403   006158  3607               	rlcf	___awdiv@quotient^(0+1280),f,c
 41404   00615A  3608               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
 41405   00615C  5003               	movf	___awdiv@divisor^(0+1280),w,c
 41406   00615E  5C01               	subwf	___awdiv@dividend^(0+1280),w,c
 41407   006160  5004               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 41408   006162  5802               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
 41409   006164  A0D8               	btfss	status,0,c
 41410   006166  EFB7  F030         	goto	u5301
 41411   00616A  EFB9  F030         	goto	u5300
 41412   00616E                     u5301:
 41413   00616E  EFBE  F030         	goto	l7879
 41414   006172                     u5300:
 41415   006172  5003               	movf	___awdiv@divisor^(0+1280),w,c
 41416   006174  5E01               	subwf	___awdiv@dividend^(0+1280),f,c
 41417   006176  5004               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 41418   006178  5A02               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
 41419   00617A  8007               	bsf	___awdiv@quotient^(0+1280),0,c
 41420   00617C                     l7879:
 41421   00617C  90D8               	bcf	status,0,c
 41422   00617E  3204               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
 41423   006180  3203               	rrcf	___awdiv@divisor^(0+1280),f,c
 41424   006182  2E05               	decfsz	___awdiv@counter^(0+1280),f,c
 41425   006184  EFAB  F030         	goto	l7871
 41426   006188                     l7883:
 41427   006188  5006               	movf	___awdiv@sign^(0+1280),w,c
 41428   00618A  B4D8               	btfsc	status,2,c
 41429   00618C  EFCA  F030         	goto	u5311
 41430   006190  EFCC  F030         	goto	u5310
 41431   006194                     u5311:
 41432   006194  EFD0  F030         	goto	l7887
 41433   006198                     u5310:
 41434   006198  6C07               	negf	___awdiv@quotient^(0+1280),c
 41435   00619A  1E08               	comf	(___awdiv@quotient+1)^(0+1280),f,c
 41436   00619C  B0D8               	btfsc	status,0,c
 41437   00619E  2A08               	incf	(___awdiv@quotient+1)^(0+1280),f,c
 41438   0061A0                     l7887:
 41439   0061A0  C507  F501         	movff	___awdiv@quotient,?___awdiv
 41440   0061A4  C508  F502         	movff	___awdiv@quotient+1,?___awdiv+1
 41441   0061A8  0012               	return		;funcret
 41442   0061AA                     __end_of___awdiv:
 41443                           	callstack 0
 41444                           
 41445 ;; *************** function _APP_factoryReset *****************
 41446 ;; Defined at:
 41447 ;;		line 125 in file "../main.c"
 41448 ;; Parameters:    Size  Location     Type
 41449 ;;		None
 41450 ;; Auto vars:     Size  Location     Type
 41451 ;;  io              1    0        unsigned char 
 41452 ;; Return value:  Size  Location     Type
 41453 ;;                  1    wreg      void 
 41454 ;; Registers used:
 41455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41456 ;; Tracked objects:
 41457 ;;		On entry : 0/0
 41458 ;;		On exit  : 0/0
 41459 ;;		Unchanged: 0/0
 41460 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41465 ;;Total ram usage:        0 bytes
 41466 ;; Hardware stack levels used: 1
 41467 ;; Hardware stack levels required when called: 9
 41468 ;; This function calls:
 41469 ;;		_factoryResetGlobalEvents
 41470 ;; This function is called by:
 41471 ;;		_factoryReset
 41472 ;; This function uses a non-reentrant model
 41473 ;;
 41474                           
 41475                           	psect	text121
 41476   008334                     __ptext121:
 41477                           	callstack 0
 41478   008334                     _APP_factoryReset:
 41479                           	callstack 116
 41480   008334                     
 41481                           ;../main.c: 126:     uint8_t io;;../main.c: 128:     factoryResetGlobalEvents();
 41482   008334  EC9D  F041         	call	_factoryResetGlobalEvents	;wreg free
 41483   008338  0012               	return		;funcret
 41484   00833A                     __end_of_APP_factoryReset:
 41485                           	callstack 0
 41486                           
 41487 ;; *************** function _factoryResetGlobalEvents *****************
 41488 ;; Defined at:
 41489 ;;		line 53 in file "../canargb_events.c"
 41490 ;; Parameters:    Size  Location     Type
 41491 ;;		None
 41492 ;; Auto vars:     Size  Location     Type
 41493 ;;		None
 41494 ;; Return value:  Size  Location     Type
 41495 ;;                  1    wreg      void 
 41496 ;; Registers used:
 41497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41498 ;; Tracked objects:
 41499 ;;		On entry : 0/0
 41500 ;;		On exit  : 0/0
 41501 ;;		Unchanged: 0/0
 41502 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41507 ;;Total ram usage:        0 bytes
 41508 ;; Hardware stack levels used: 1
 41509 ;; Hardware stack levels required when called: 8
 41510 ;; This function calls:
 41511 ;;		_clearAllEvents
 41512 ;; This function is called by:
 41513 ;;		_APP_factoryReset
 41514 ;; This function uses a non-reentrant model
 41515 ;;
 41516                           
 41517                           	psect	text122
 41518   00833A                     __ptext122:
 41519                           	callstack 0
 41520   00833A                     _factoryResetGlobalEvents:
 41521                           	callstack 116
 41522   00833A                     
 41523                           ;../canargb_events.c: 55:     clearAllEvents();
 41524   00833A  EC07  F041         	call	_clearAllEvents	;wreg free
 41525   00833E  0012               	return		;funcret
 41526   008340                     __end_of_factoryResetGlobalEvents:
 41527                           	callstack 0
 41528                           
 41529 ;; *************** function _clearAllEvents *****************
 41530 ;; Defined at:
 41531 ;;		line 397 in file "../../VLCBlib_PIC/event_teach_simple.c"
 41532 ;; Parameters:    Size  Location     Type
 41533 ;;		None
 41534 ;; Auto vars:     Size  Location     Type
 41535 ;;  tableIndex      1   53[COMRAM] unsigned char 
 41536 ;; Return value:  Size  Location     Type
 41537 ;;                  1    wreg      void 
 41538 ;; Registers used:
 41539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41540 ;; Tracked objects:
 41541 ;;		On entry : 0/0
 41542 ;;		On exit  : 0/0
 41543 ;;		Unchanged: 0/0
 41544 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41546 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41548 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41549 ;;Total ram usage:        1 bytes
 41550 ;; Hardware stack levels used: 1
 41551 ;; Hardware stack levels required when called: 7
 41552 ;; This function calls:
 41553 ;;		_rebuildHashtable
 41554 ;;		_removeTableEntry
 41555 ;; This function is called by:
 41556 ;;		_factoryResetGlobalEvents
 41557 ;;		_teachFactoryReset
 41558 ;;		_doNnclr
 41559 ;; This function uses a non-reentrant model
 41560 ;;
 41561                           
 41562                           	psect	text123
 41563   00820E                     __ptext123:
 41564                           	callstack 0
 41565   00820E                     _clearAllEvents:
 41566                           	callstack 116
 41567   00820E                     
 41568                           ;../../VLCBlib_PIC/event_teach_simple.c: 398:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 400:     for (tableIndex=0; tableIndex<255; tableIndex++) {
 41569   00820E  6A36               	clrf	clearAllEvents@tableIndex^(0+1280),c
 41570   008210                     l7737:
 41571                           
 41572                           ;../../VLCBlib_PIC/event_teach_simple.c: 401:         removeTableEntry(tableIndex);
 41573   008210  5036               	movf	clearAllEvents@tableIndex^(0+1280),w,c
 41574   008212  EC1A  F022         	call	_removeTableEntry
 41575   008216                     
 41576                           ;../../VLCBlib_PIC/event_teach_simple.c: 402:     }
 41577   008216  2A36               	incf	clearAllEvents@tableIndex^(0+1280),f,c
 41578   008218  2836               	incf	clearAllEvents@tableIndex^(0+1280),w,c
 41579   00821A  A4D8               	btfss	status,2,c
 41580   00821C  EF12  F041         	goto	u5111
 41581   008220  EF14  F041         	goto	u5110
 41582   008224                     u5111:
 41583   008224  EF08  F041         	goto	l7737
 41584   008228                     u5110:
 41585   008228                     
 41586                           ;../../VLCBlib_PIC/event_teach_simple.c: 404:     rebuildHashtable();
 41587   008228  EC98  F02B         	call	_rebuildHashtable	;wreg free
 41588   00822C  0012               	return		;funcret
 41589   00822E                     __end_of_clearAllEvents:
 41590                           	callstack 0
 41591                           
 41592 ;; *************** function _removeTableEntry *****************
 41593 ;; Defined at:
 41594 ;;		line 718 in file "../../VLCBlib_PIC/event_teach_simple.c"
 41595 ;; Parameters:    Size  Location     Type
 41596 ;;  tableIndex      1    wreg     unsigned char 
 41597 ;; Auto vars:     Size  Location     Type
 41598 ;;  tableIndex      1   52[COMRAM] unsigned char 
 41599 ;;  i               1   51[COMRAM] unsigned char 
 41600 ;; Return value:  Size  Location     Type
 41601 ;;                  1    wreg      unsigned char 
 41602 ;; Registers used:
 41603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41604 ;; Tracked objects:
 41605 ;;		On entry : 0/0
 41606 ;;		On exit  : 0/0
 41607 ;;		Unchanged: 0/0
 41608 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41611 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41612 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41613 ;;Total ram usage:       14 bytes
 41614 ;; Hardware stack levels used: 1
 41615 ;; Hardware stack levels required when called: 6
 41616 ;; This function calls:
 41617 ;;		_flushFlashBlock
 41618 ;;		_rebuildHashtable
 41619 ;;		_writeNVM
 41620 ;; This function is called by:
 41621 ;;		_clearAllEvents
 41622 ;;		_removeEvent
 41623 ;; This function uses a non-reentrant model
 41624 ;;
 41625                           
 41626                           	psect	text124
 41627   004434                     __ptext124:
 41628                           	callstack 0
 41629   004434                     _removeTableEntry:
 41630                           	callstack 116
 41631                           
 41632                           ;incstack = 0
 41633                           ;removeTableEntry@tableIndex stored from wreg
 41634   004434  6E35               	movwf	removeTableEntry@tableIndex^(0+1280),c
 41635   004436                     
 41636                           ;../../VLCBlib_PIC/event_teach_simple.c: 719:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 724:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (sizeof(Event) + 1 + 252)*table
      +                          Index + 0, 0x00);
 41637   004436  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41638   004438  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41639   00443A  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41640   00443C  0E01               	movlw	1
 41641   00443E  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41642   004440  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41643   004444  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41644   004448  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41645   00444A  50F3               	movf	prodl,w,c
 41646   00444C  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41647   00444E  0E01               	movlw	1
 41648   004450  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41649   004452  50F3               	movf	prodl,w,c
 41650   004454  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41651   004456  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41652   00445A  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41653   00445E  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41654   004460  0E00               	movlw	0
 41655   004462  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41656   004464  6E0E               	movwf	writeNVM@index^(0+1280),c
 41657   004466  0E00               	movlw	0
 41658   004468  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41659   00446A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41660   00446C  0E01               	movlw	1
 41661   00446E  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41662   004470  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41663   004472  0E00               	movlw	0
 41664   004474  6E11               	movwf	writeNVM@value^(0+1280),c
 41665   004476  0E01               	movlw	1
 41666   004478  EC47  F03C         	call	_writeNVM
 41667                           
 41668                           ;../../VLCBlib_PIC/event_teach_simple.c: 725:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 1, 0x00);
 41669   00447C  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41670   00447E  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41671   004480  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41672   004482  0E01               	movlw	1
 41673   004484  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41674   004486  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41675   00448A  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41676   00448E  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41677   004490  50F3               	movf	prodl,w,c
 41678   004492  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41679   004494  0E01               	movlw	1
 41680   004496  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41681   004498  50F3               	movf	prodl,w,c
 41682   00449A  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41683   00449C  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41684   0044A0  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41685   0044A4  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41686   0044A6  0E01               	movlw	1
 41687   0044A8  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41688   0044AA  6E0E               	movwf	writeNVM@index^(0+1280),c
 41689   0044AC  0E00               	movlw	0
 41690   0044AE  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41691   0044B0  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41692   0044B2  0E01               	movlw	1
 41693   0044B4  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41694   0044B6  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41695   0044B8  0E00               	movlw	0
 41696   0044BA  6E11               	movwf	writeNVM@value^(0+1280),c
 41697   0044BC  0E01               	movlw	1
 41698   0044BE  EC47  F03C         	call	_writeNVM
 41699                           
 41700                           ;../../VLCBlib_PIC/event_teach_simple.c: 726:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 2, 0x00);
 41701   0044C2  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41702   0044C4  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41703   0044C6  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41704   0044C8  0E01               	movlw	1
 41705   0044CA  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41706   0044CC  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41707   0044D0  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41708   0044D4  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41709   0044D6  50F3               	movf	prodl,w,c
 41710   0044D8  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41711   0044DA  0E01               	movlw	1
 41712   0044DC  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41713   0044DE  50F3               	movf	prodl,w,c
 41714   0044E0  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41715   0044E2  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41716   0044E6  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41717   0044EA  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41718   0044EC  0E02               	movlw	2
 41719   0044EE  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41720   0044F0  6E0E               	movwf	writeNVM@index^(0+1280),c
 41721   0044F2  0E00               	movlw	0
 41722   0044F4  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41723   0044F6  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41724   0044F8  0E01               	movlw	1
 41725   0044FA  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41726   0044FC  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41727   0044FE  0E00               	movlw	0
 41728   004500  6E11               	movwf	writeNVM@value^(0+1280),c
 41729   004502  0E01               	movlw	1
 41730   004504  EC47  F03C         	call	_writeNVM
 41731                           
 41732                           ;../../VLCBlib_PIC/event_teach_simple.c: 727:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 3, 0x00);
 41733   004508  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41734   00450A  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41735   00450C  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41736   00450E  0E01               	movlw	1
 41737   004510  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41738   004512  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41739   004516  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41740   00451A  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41741   00451C  50F3               	movf	prodl,w,c
 41742   00451E  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41743   004520  0E01               	movlw	1
 41744   004522  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41745   004524  50F3               	movf	prodl,w,c
 41746   004526  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41747   004528  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41748   00452C  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41749   004530  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41750   004532  0E03               	movlw	3
 41751   004534  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41752   004536  6E0E               	movwf	writeNVM@index^(0+1280),c
 41753   004538  0E00               	movlw	0
 41754   00453A  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41755   00453C  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41756   00453E  0E01               	movlw	1
 41757   004540  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41758   004542  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41759   004544  0E00               	movlw	0
 41760   004546  6E11               	movwf	writeNVM@value^(0+1280),c
 41761   004548  0E01               	movlw	1
 41762   00454A  EC47  F03C         	call	_writeNVM
 41763                           
 41764                           ;../../VLCBlib_PIC/event_teach_simple.c: 728:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 4, 0x00);
 41765   00454E  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41766   004550  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41767   004552  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41768   004554  0E01               	movlw	1
 41769   004556  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41770   004558  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41771   00455C  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41772   004560  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41773   004562  50F3               	movf	prodl,w,c
 41774   004564  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41775   004566  0E01               	movlw	1
 41776   004568  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41777   00456A  50F3               	movf	prodl,w,c
 41778   00456C  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41779   00456E  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41780   004572  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41781   004576  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41782   004578  0E04               	movlw	4
 41783   00457A  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41784   00457C  6E0E               	movwf	writeNVM@index^(0+1280),c
 41785   00457E  0E00               	movlw	0
 41786   004580  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41787   004582  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41788   004584  0E01               	movlw	1
 41789   004586  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41790   004588  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41791   00458A  0E00               	movlw	0
 41792   00458C  6E11               	movwf	writeNVM@value^(0+1280),c
 41793   00458E  0E01               	movlw	1
 41794   004590  EC47  F03C         	call	_writeNVM
 41795   004594                     
 41796                           ;../../VLCBlib_PIC/event_teach_simple.c: 730:     for (i=0; i<252; i++) {
 41797   004594  6A34               	clrf	removeTableEntry@i^(0+1280),c
 41798   004596                     l7675:
 41799                           
 41800                           ;../../VLCBlib_PIC/event_teach_simple.c: 731:         writeNVM(FLASH_NVM_TYPE, 0x10000 +
      +                           (sizeof(Event) + 1 + 252)*tableIndex + (5 + i), 0x00);
 41801   004596  5034               	movf	removeTableEntry@i^(0+1280),w,c
 41802   004598  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41803   00459A  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41804   00459C  0E05               	movlw	5
 41805   00459E  2628               	addwf	??_removeTableEntry^(0+1280),f,c
 41806   0045A0  0E00               	movlw	0
 41807   0045A2  2229               	addwfc	(??_removeTableEntry+1)^(0+1280),f,c
 41808   0045A4  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41809   0045A6  6E2A               	movwf	(??_removeTableEntry+2)^(0+1280),c
 41810   0045A8  6A2B               	clrf	(??_removeTableEntry+3)^(0+1280),c
 41811   0045AA  0E01               	movlw	1
 41812   0045AC  022A               	mulwf	(??_removeTableEntry+2)^(0+1280),c
 41813   0045AE  C4F3 F52C          	movff	prodl,??_removeTableEntry+4
 41814   0045B2  C4F4 F52D          	movff	prodh,??_removeTableEntry+5
 41815   0045B6  022B               	mulwf	(??_removeTableEntry+3)^(0+1280),c
 41816   0045B8  50F3               	movf	prodl,w,c
 41817   0045BA  262D               	addwf	(??_removeTableEntry+5)^(0+1280),f,c
 41818   0045BC  0E01               	movlw	1
 41819   0045BE  022A               	mulwf	(??_removeTableEntry+2)^(0+1280),c
 41820   0045C0  50F3               	movf	prodl,w,c
 41821   0045C2  262D               	addwf	(??_removeTableEntry+5)^(0+1280),f,c
 41822   0045C4  C52C  F52E         	movff	??_removeTableEntry+4,??_removeTableEntry+6
 41823   0045C8  C52D  F52F         	movff	??_removeTableEntry+5,??_removeTableEntry+7
 41824   0045CC  6A30               	clrf	(??_removeTableEntry+8)^(0+1280),c
 41825   0045CE  5028               	movf	??_removeTableEntry^(0+1280),w,c
 41826   0045D0  242E               	addwf	(??_removeTableEntry+6)^(0+1280),w,c
 41827   0045D2  6E31               	movwf	(??_removeTableEntry+9)^(0+1280),c
 41828   0045D4  5029               	movf	(??_removeTableEntry+1)^(0+1280),w,c
 41829   0045D6  202F               	addwfc	(??_removeTableEntry+7)^(0+1280),w,c
 41830   0045D8  6E32               	movwf	(??_removeTableEntry+10)^(0+1280),c
 41831   0045DA  0E00               	movlw	0
 41832   0045DC  BE29               	btfsc	(??_removeTableEntry+1)^(0+1280),7,c
 41833   0045DE  0EFF               	movlw	255
 41834   0045E0  2030               	addwfc	(??_removeTableEntry+8)^(0+1280),w,c
 41835   0045E2  6E33               	movwf	(??_removeTableEntry+11)^(0+1280),c
 41836   0045E4  0E00               	movlw	0
 41837   0045E6  2431               	addwf	(??_removeTableEntry+9)^(0+1280),w,c
 41838   0045E8  6E0E               	movwf	writeNVM@index^(0+1280),c
 41839   0045EA  0E00               	movlw	0
 41840   0045EC  2032               	addwfc	(??_removeTableEntry+10)^(0+1280),w,c
 41841   0045EE  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41842   0045F0  0E01               	movlw	1
 41843   0045F2  2033               	addwfc	(??_removeTableEntry+11)^(0+1280),w,c
 41844   0045F4  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41845   0045F6  0E00               	movlw	0
 41846   0045F8  6E11               	movwf	writeNVM@value^(0+1280),c
 41847   0045FA  0E01               	movlw	1
 41848   0045FC  EC47  F03C         	call	_writeNVM
 41849   004600                     
 41850                           ;../../VLCBlib_PIC/event_teach_simple.c: 732:     }
 41851   004600  2A34               	incf	removeTableEntry@i^(0+1280),f,c
 41852   004602  0EFB               	movlw	251
 41853   004604  6434               	cpfsgt	removeTableEntry@i^(0+1280),c
 41854   004606  EF07  F023         	goto	u5051
 41855   00460A  EF09  F023         	goto	u5050
 41856   00460E                     u5051:
 41857   00460E  EFCB  F022         	goto	l7675
 41858   004612                     u5050:
 41859   004612                     
 41860                           ;../../VLCBlib_PIC/event_teach_simple.c: 733:     flushFlashBlock();
 41861   004612  ECE4  F034         	call	_flushFlashBlock	;wreg free
 41862   004616                     
 41863                           ;../../VLCBlib_PIC/event_teach_simple.c: 735:     rebuildHashtable();
 41864   004616  EC98  F02B         	call	_rebuildHashtable	;wreg free
 41865   00461A                     
 41866                           ;../../VLCBlib_PIC/event_teach_simple.c: 737:     return 0;
 41867   00461A  0E00               	movlw	0
 41868   00461C  0012               	return		;funcret
 41869   00461E                     __end_of_removeTableEntry:
 41870                           	callstack 0
 41871                           
 41872 ;; *************** function _writeNVM *****************
 41873 ;; Defined at:
 41874 ;;		line 553 in file "../../VLCBlib_PIC/nvm.c"
 41875 ;; Parameters:    Size  Location     Type
 41876 ;;  type            1    wreg     enum E23276
 41877 ;;  index           3   13[COMRAM] unsigned um
 41878 ;;  value           1   16[COMRAM] unsigned char 
 41879 ;; Auto vars:     Size  Location     Type
 41880 ;;  type            1   19[COMRAM] enum E23276
 41881 ;; Return value:  Size  Location     Type
 41882 ;;                  1    wreg      unsigned char 
 41883 ;; Registers used:
 41884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41885 ;; Tracked objects:
 41886 ;;		On entry : 0/0
 41887 ;;		On exit  : 0/0
 41888 ;;		Unchanged: 0/0
 41889 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41890 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41893 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41894 ;;Total ram usage:        7 bytes
 41895 ;; Hardware stack levels used: 1
 41896 ;; Hardware stack levels required when called: 5
 41897 ;; This function calls:
 41898 ;;		_EEPROM_Write
 41899 ;;		_FLASH_Write
 41900 ;; This function is called by:
 41901 ;;		_bootProcessMessage
 41902 ;;		_canFactoryReset
 41903 ;;		_setNewCanId
 41904 ;;		_removeTableEntry
 41905 ;;		_addEvent
 41906 ;;		_writeEv
 41907 ;;		_mnsFactoryReset
 41908 ;;		_mnsProcessMessage
 41909 ;;		_mnsPoll
 41910 ;;		_nvFactoryReset
 41911 ;;		_setNV
 41912 ;;		_factoryReset
 41913 ;;		_saveNV
 41914 ;; This function uses a non-reentrant model
 41915 ;;
 41916                           
 41917                           	psect	text125
 41918   00788E                     __ptext125:
 41919                           	callstack 0
 41920   00788E                     _writeNVM:
 41921                           	callstack 116
 41922                           
 41923                           ;incstack = 0
 41924                           ;writeNVM@type stored from wreg
 41925   00788E  6E14               	movwf	writeNVM@type^(0+1280),c
 41926   007890                     
 41927                           ;../../VLCBlib_PIC/nvm.c: 554:     switch(type) {
 41928   007890  EF62  F03C         	goto	l7483
 41929   007894                     l7473:
 41930                           
 41931                           ;../../VLCBlib_PIC/nvm.c: 556:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 41932   007894  C50E  F509         	movff	writeNVM@index,EEPROM_Write@index
 41933   007898  C50F  F50A         	movff	writeNVM@index+1,EEPROM_Write@index+1
 41934   00789C  C510  F50B         	movff	writeNVM@index+2,EEPROM_Write@index+2
 41935   0078A0  C511  F50C         	movff	writeNVM@value,EEPROM_Write@value
 41936   0078A4  EC78  F03C         	call	_EEPROM_Write	;wreg free
 41937   0078A8  EF77  F03C         	goto	l1692
 41938   0078AC                     l7477:
 41939                           
 41940                           ;../../VLCBlib_PIC/nvm.c: 558:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 41941   0078AC  C50E  F506         	movff	writeNVM@index,FLASH_Write@index
 41942   0078B0  C50F  F507         	movff	writeNVM@index+1,FLASH_Write@index+1
 41943   0078B4  C510  F508         	movff	writeNVM@index+2,FLASH_Write@index+2
 41944   0078B8  C511  F509         	movff	writeNVM@value,FLASH_Write@value
 41945   0078BC  EC91  F02A         	call	_FLASH_Write	;wreg free
 41946   0078C0  EF77  F03C         	goto	l1692
 41947   0078C4                     l7483:
 41948   0078C4  5014               	movf	writeNVM@type^(0+1280),w,c
 41949   0078C6  6E12               	movwf	??_writeNVM^(0+1280),c
 41950   0078C8  6A13               	clrf	(??_writeNVM+1)^(0+1280),c
 41951                           
 41952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41953                           ; Switch size 1, requested type "simple"
 41954                           ; Number of cases is 1, Range of values is 0 to 0
 41955                           ; switch strategies available:
 41956                           ; Name         Instructions Cycles
 41957                           ; simple_byte            4     3 (average)
 41958                           ;	Chosen strategy is simple_byte
 41959   0078CA  5013               	movf	(??_writeNVM+1)^(0+1280),w,c
 41960   0078CC  0A00               	xorlw	0	; case 0
 41961   0078CE  B4D8               	btfsc	status,2,c
 41962   0078D0  EF6C  F03C         	goto	l11645
 41963   0078D4  EF77  F03C         	goto	l1692
 41964   0078D8                     l11645:
 41965                           
 41966                           ; Switch size 1, requested type "simple"
 41967                           ; Number of cases is 2, Range of values is 0 to 1
 41968                           ; switch strategies available:
 41969                           ; Name         Instructions Cycles
 41970                           ; simple_byte            7     4 (average)
 41971                           ;	Chosen strategy is simple_byte
 41972   0078D8  5012               	movf	??_writeNVM^(0+1280),w,c
 41973   0078DA  0A00               	xorlw	0	; case 0
 41974   0078DC  B4D8               	btfsc	status,2,c
 41975   0078DE  EF4A  F03C         	goto	l7473
 41976   0078E2  0A01               	xorlw	1	; case 1
 41977   0078E4  B4D8               	btfsc	status,2,c
 41978   0078E6  EF56  F03C         	goto	l7477
 41979   0078EA  EF77  F03C         	goto	l1692
 41980   0078EE                     l1692:
 41981   0078EE  0012               	return		;funcret
 41982   0078F0                     __end_of_writeNVM:
 41983                           	callstack 0
 41984                           
 41985 ;; *************** function _FLASH_Write *****************
 41986 ;; Defined at:
 41987 ;;		line 507 in file "../../VLCBlib_PIC/nvm.c"
 41988 ;; Parameters:    Size  Location     Type
 41989 ;;  index           3    5[COMRAM] unsigned um
 41990 ;;  value           1    8[COMRAM] unsigned char 
 41991 ;; Auto vars:     Size  Location     Type
 41992 ;;  oldValue        1    0        unsigned char 
 41993 ;; Return value:  Size  Location     Type
 41994 ;;                  1    wreg      unsigned char 
 41995 ;; Registers used:
 41996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41997 ;; Tracked objects:
 41998 ;;		On entry : 0/0
 41999 ;;		On exit  : 0/0
 42000 ;;		Unchanged: 0/0
 42001 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42002 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42004 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42005 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42006 ;;Total ram usage:        8 bytes
 42007 ;; Hardware stack levels used: 1
 42008 ;; Hardware stack levels required when called: 4
 42009 ;; This function calls:
 42010 ;;		_eraseFlashBlock
 42011 ;;		_flushFlashBlock
 42012 ;;		_loadFlashBlock
 42013 ;; This function is called by:
 42014 ;;		_writeNVM
 42015 ;; This function uses a non-reentrant model
 42016 ;;
 42017                           
 42018                           	psect	text126
 42019   005522                     __ptext126:
 42020                           	callstack 0
 42021   005522                     _FLASH_Write:
 42022                           	callstack 116
 42023   005522                     
 42024                           ;../../VLCBlib_PIC/nvm.c: 508:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 523:     i
      +                          f ((index&(~((flash_address_t)(256U)-1))) != flashBlock) {
 42025   005522  0E00               	movlw	0
 42026   005524  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 42027   005526  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 42028   005528  0EFF               	movlw	255
 42029   00552A  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 42030   00552C  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 42031   00552E  0EFF               	movlw	255
 42032   005530  1408               	andwf	(FLASH_Write@index+2)^(0+1280),w,c
 42033   005532  6E0C               	movwf	(??_FLASH_Write+2)^(0+1280),c
 42034   005534  0105               	movlb	5	; () banked
 42035   005536  5184               	movf	_flashBlock& (0+255),w,b
 42036   005538  180A               	xorwf	??_FLASH_Write^(0+1280),w,c
 42037   00553A  E10C               	bnz	u4790
 42038   00553C  5185               	movf	(_flashBlock+1)& (0+255),w,b
 42039   00553E  180B               	xorwf	(??_FLASH_Write+1)^(0+1280),w,c
 42040   005540  E109               	bnz	u4790
 42041   005542  5186               	movf	(_flashBlock+2)& (0+255),w,b
 42042   005544  180C               	xorwf	(??_FLASH_Write+2)^(0+1280),w,c
 42043   005546  B4D8               	btfsc	status,2,c
 42044   005548  EFA8  F02A         	goto	u4791
 42045   00554C  EFAA  F02A         	goto	u4790
 42046   005550                     u4791:
 42047   005550  EFCD  F02A         	goto	l7459
 42048   005554                     u4790:
 42049   005554                     
 42050                           ; BSR set to: 5
 42051                           ;../../VLCBlib_PIC/nvm.c: 524:         if (flashBlock != 0) {
 42052   005554  5184               	movf	_flashBlock& (0+255),w,b
 42053   005556  1185               	iorwf	(_flashBlock+1)& (0+255),w,b
 42054   005558  1186               	iorwf	(_flashBlock+2)& (0+255),w,b
 42055   00555A  B4D8               	btfsc	status,2,c
 42056   00555C  EFB2  F02A         	goto	u4801
 42057   005560  EFB4  F02A         	goto	u4800
 42058   005564                     u4801:
 42059   005564  EFC1  F02A         	goto	l7455
 42060   005568                     u4800:
 42061   005568                     
 42062                           ; BSR set to: 5
 42063                           ;../../VLCBlib_PIC/nvm.c: 526:             if (flashFlags.eraseNeeded) {
 42064   005568  A39B               	btfss	_flashFlags& (0+255),1,b
 42065   00556A  EFB9  F02A         	goto	u4811
 42066   00556E  EFBB  F02A         	goto	u4810
 42067   005572                     u4811:
 42068   005572  EFBF  F02A         	goto	l1685
 42069   005576                     u4810:
 42070   005576                     
 42071                           ; BSR set to: 5
 42072                           ;../../VLCBlib_PIC/nvm.c: 527:                 eraseFlashBlock();
 42073   005576  ECC1  F037         	call	_eraseFlashBlock	;wreg free
 42074   00557A                     
 42075                           ;../../VLCBlib_PIC/nvm.c: 528:                 flashFlags.eraseNeeded = 0;
 42076   00557A  0105               	movlb	5	; () banked
 42077   00557C  939B               	bcf	_flashFlags& (0+255),1,b
 42078   00557E                     l1685:
 42079                           
 42080                           ; BSR set to: 5
 42081                           ;../../VLCBlib_PIC/nvm.c: 531:             flushFlashBlock();
 42082   00557E  ECE4  F034         	call	_flushFlashBlock	;wreg free
 42083   005582                     l7455:
 42084                           
 42085                           ;../../VLCBlib_PIC/nvm.c: 535:         flashBlock = (index&(~((flash_address_t)(256U)-1)
      +                          ));
 42086   005582  0E00               	movlw	0
 42087   005584  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 42088   005586  0105               	movlb	5	; () banked
 42089   005588  6F84               	movwf	_flashBlock& (0+255),b
 42090   00558A  0EFF               	movlw	255
 42091   00558C  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 42092   00558E  6F85               	movwf	(_flashBlock+1)& (0+255),b
 42093   005590  0EFF               	movlw	255
 42094   005592  1408               	andwf	(FLASH_Write@index+2)^(0+1280),w,c
 42095   005594  6F86               	movwf	(_flashBlock+2)& (0+255),b
 42096   005596                     
 42097                           ; BSR set to: 5
 42098                           ;../../VLCBlib_PIC/nvm.c: 536:         loadFlashBlock();
 42099   005596  EC2C  F03D         	call	_loadFlashBlock	;wreg free
 42100   00559A                     l7459:
 42101                           
 42102                           ;../../VLCBlib_PIC/nvm.c: 538:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&((256U)-1))])?1:0;
 42103   00559A  0EFF               	movlw	255
 42104   00559C  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 42105   00559E  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 42106   0055A0  0E00               	movlw	0
 42107   0055A2  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 42108   0055A4  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 42109   0055A6  0E00               	movlw	0
 42110   0055A8  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 42111   0055AA  6ED9               	movwf	fsr2l,c
 42112   0055AC  0E37               	movlw	55
 42113   0055AE  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 42114   0055B0  6EDA               	movwf	fsr2h,c
 42115   0055B2  50DF               	movf	indf2,w,c
 42116   0055B4  0AFF               	xorlw	255
 42117   0055B6  1409               	andwf	FLASH_Write@value^(0+1280),w,c
 42118   0055B8  0900               	iorlw	0
 42119   0055BA  A4D8               	btfss	status,2,c
 42120   0055BC  EFE2  F02A         	goto	u4821
 42121   0055C0  EFE6  F02A         	goto	u4820
 42122   0055C4                     u4821:
 42123   0055C4  6A0C               	clrf	(??_FLASH_Write+2)^(0+1280),c
 42124   0055C6  2A0C               	incf	(??_FLASH_Write+2)^(0+1280),f,c
 42125   0055C8  EFE7  F02A         	goto	u4838
 42126   0055CC                     u4820:
 42127   0055CC  6A0C               	clrf	(??_FLASH_Write+2)^(0+1280),c
 42128   0055CE                     u4838:
 42129   0055CE  0105               	movlb	5	; () banked
 42130   0055D0  319B               	rrcf	_flashFlags& (0+255),w,b
 42131   0055D2  0B01               	andlw	1
 42132   0055D4  6E0D               	movwf	(??_FLASH_Write+3)^(0+1280),c
 42133   0055D6  500C               	movf	(??_FLASH_Write+2)^(0+1280),w,c
 42134   0055D8  120D               	iorwf	(??_FLASH_Write+3)^(0+1280),f,c
 42135   0055DA  360D               	rlcf	(??_FLASH_Write+3)^(0+1280),f,c
 42136   0055DC  519B               	movf	_flashFlags& (0+255),w,b
 42137   0055DE  180D               	xorwf	(??_FLASH_Write+3)^(0+1280),w,c
 42138   0055E0  0BFD               	andlw	-3
 42139   0055E2  180D               	xorwf	(??_FLASH_Write+3)^(0+1280),w,c
 42140   0055E4  6F9B               	movwf	_flashFlags& (0+255),b
 42141   0055E6                     
 42142                           ; BSR set to: 5
 42143                           ;../../VLCBlib_PIC/nvm.c: 539:     if (flashBuffer[(index&((256U)-1))] != value) {
 42144   0055E6  0EFF               	movlw	255
 42145   0055E8  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 42146   0055EA  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 42147   0055EC  0E00               	movlw	0
 42148   0055EE  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 42149   0055F0  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 42150   0055F2  0E00               	movlw	0
 42151   0055F4  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 42152   0055F6  6ED9               	movwf	fsr2l,c
 42153   0055F8  0E37               	movlw	55
 42154   0055FA  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 42155   0055FC  6EDA               	movwf	fsr2h,c
 42156   0055FE  5009               	movf	FLASH_Write@value^(0+1280),w,c
 42157   005600  18DE               	xorwf	postinc2,w,c
 42158   005602  B4D8               	btfsc	status,2,c
 42159   005604  EF06  F02B         	goto	u4841
 42160   005608  EF08  F02B         	goto	u4840
 42161   00560C                     u4841:
 42162   00560C  EF17  F02B         	goto	l7467
 42163   005610                     u4840:
 42164   005610                     
 42165                           ; BSR set to: 5
 42166                           ;../../VLCBlib_PIC/nvm.c: 540:         flashFlags.writeNeeded = 1;
 42167   005610  819B               	bsf	_flashFlags& (0+255),0,b
 42168   005612                     
 42169                           ; BSR set to: 5
 42170                           ;../../VLCBlib_PIC/nvm.c: 541:         flashBuffer[(index&((256U)-1))] = value;
 42171   005612  0EFF               	movlw	255
 42172   005614  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 42173   005616  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 42174   005618  0E00               	movlw	0
 42175   00561A  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 42176   00561C  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 42177   00561E  0E00               	movlw	0
 42178   005620  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 42179   005622  6ED9               	movwf	fsr2l,c
 42180   005624  0E37               	movlw	55
 42181   005626  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 42182   005628  6EDA               	movwf	fsr2h,c
 42183   00562A  C509  F4DF         	movff	FLASH_Write@value,indf2
 42184   00562E                     l7467:
 42185                           
 42186                           ; BSR set to: 5
 42187                           ;../../VLCBlib_PIC/nvm.c: 543:     return GRSP_OK;
 42188   00562E  0E00               	movlw	0
 42189   005630                     
 42190                           ; BSR set to: 5
 42191   005630  0012               	return		;funcret
 42192   005632                     __end_of_FLASH_Write:
 42193                           	callstack 0
 42194                           
 42195 ;; *************** function _loadFlashBlock *****************
 42196 ;; Defined at:
 42197 ;;		line 469 in file "../../VLCBlib_PIC/nvm.c"
 42198 ;; Parameters:    Size  Location     Type
 42199 ;;		None
 42200 ;; Auto vars:     Size  Location     Type
 42201 ;;		None
 42202 ;; Return value:  Size  Location     Type
 42203 ;;                  1    wreg      void 
 42204 ;; Registers used:
 42205 ;;		wreg, status,2
 42206 ;; Tracked objects:
 42207 ;;		On entry : 0/0
 42208 ;;		On exit  : 0/0
 42209 ;;		Unchanged: 0/0
 42210 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42213 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42214 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42215 ;;Total ram usage:        3 bytes
 42216 ;; Hardware stack levels used: 1
 42217 ;; Hardware stack levels required when called: 1
 42218 ;; This function calls:
 42219 ;;		Nothing
 42220 ;; This function is called by:
 42221 ;;		_FLASH_Write
 42222 ;; This function uses a non-reentrant model
 42223 ;;
 42224                           
 42225                           	psect	text127
 42226   007A58                     __ptext127:
 42227                           	callstack 0
 42228   007A58                     _loadFlashBlock:
 42229                           	callstack 118
 42230   007A58                     l1674:
 42231                           
 42232                           ;../../VLCBlib_PIC/nvm.c: 484:     while (NVMCON0bits.GO)
 42233   007A58  0100               	movlb	0	; () banked
 42234   007A5A  B140               	btfsc	64,0,b	;volatile
 42235   007A5C  EF32  F03D         	goto	u4591
 42236   007A60  EF34  F03D         	goto	u4590
 42237   007A64                     u4591:
 42238   007A64  EF2C  F03D         	goto	l1674
 42239   007A68                     u4590:
 42240   007A68                     
 42241                           ; BSR set to: 0
 42242                           ;../../VLCBlib_PIC/nvm.c: 487:     NVMADRU = (uint8_t) (flashBlock >> 16);
 42243   007A68  C586  F045         	movff	_flashBlock+2,69	;volatile
 42244   007A6C                     
 42245                           ; BSR set to: 0
 42246                           ;../../VLCBlib_PIC/nvm.c: 488:     NVMADRH = (uint8_t) (flashBlock >> 8);
 42247   007A6C  C584  F501         	movff	_flashBlock,??_loadFlashBlock
 42248   007A70  C585  F502         	movff	_flashBlock+1,??_loadFlashBlock+1
 42249   007A74  C586  F503         	movff	_flashBlock+2,??_loadFlashBlock+2
 42250   007A78  C502  F501         	movff	??_loadFlashBlock+1,??_loadFlashBlock
 42251   007A7C  C503  F502         	movff	??_loadFlashBlock+2,??_loadFlashBlock+1
 42252   007A80  6A03               	clrf	(??_loadFlashBlock+2)^(0+1280),c
 42253   007A82  5001               	movf	??_loadFlashBlock^(0+1280),w,c
 42254   007A84  6F44               	movwf	68,b	;volatile
 42255   007A86                     
 42256                           ; BSR set to: 0
 42257                           ;../../VLCBlib_PIC/nvm.c: 489:     NVMADRL = (uint8_t) flashBlock;
 42258   007A86  C584  F043         	movff	_flashBlock,67	;volatile
 42259                           
 42260                           ;../../VLCBlib_PIC/nvm.c: 490:     NVMCON1bits.NVMCMD = 0x02;
 42261   007A8A  5141               	movf	65,w,b	;volsfr
 42262   007A8C  0BF8               	andlw	-8
 42263   007A8E  0902               	iorlw	2
 42264   007A90  6F41               	movwf	65,b	;volsfr
 42265   007A92                     
 42266                           ; BSR set to: 0
 42267                           ;../../VLCBlib_PIC/nvm.c: 491:     NVMCON0bits.GO = 1;
 42268   007A92  8140               	bsf	64,0,b	;volatile
 42269   007A94                     l1677:
 42270                           
 42271                           ; BSR set to: 0
 42272                           ;../../VLCBlib_PIC/nvm.c: 492:     while (NVMCON0bits.GO)
 42273   007A94  B140               	btfsc	64,0,b	;volatile
 42274   007A96  EF4F  F03D         	goto	u4601
 42275   007A9A  EF51  F03D         	goto	u4600
 42276   007A9E                     u4601:
 42277   007A9E  EF4A  F03D         	goto	l1677
 42278   007AA2                     u4600:
 42279   007AA2                     
 42280                           ; BSR set to: 0
 42281                           ;../../VLCBlib_PIC/nvm.c: 494:     NVMCON1bits.NVMCMD = 0x07;
 42282   007AA2  0E07               	movlw	7
 42283   007AA4  1341               	iorwf	65,f,b	;volsfr
 42284   007AA6                     
 42285                           ; BSR set to: 0
 42286                           ;../../VLCBlib_PIC/nvm.c: 496:     flashFlags.asByte = 0;
 42287   007AA6  0105               	movlb	5	; () banked
 42288   007AA8  6B9B               	clrf	_flashFlags& (0+255),b
 42289   007AAA                     
 42290                           ; BSR set to: 5
 42291   007AAA  0012               	return		;funcret
 42292   007AAC                     __end_of_loadFlashBlock:
 42293                           	callstack 0
 42294                           
 42295 ;; *************** function _flushFlashBlock *****************
 42296 ;; Defined at:
 42297 ;;		line 395 in file "../../VLCBlib_PIC/nvm.c"
 42298 ;; Parameters:    Size  Location     Type
 42299 ;;		None
 42300 ;; Auto vars:     Size  Location     Type
 42301 ;;  interruptEna    1    4[COMRAM] unsigned char 
 42302 ;; Return value:  Size  Location     Type
 42303 ;;                  1    wreg      void 
 42304 ;; Registers used:
 42305 ;;		wreg, status,2, cstack
 42306 ;; Tracked objects:
 42307 ;;		On entry : 0/0
 42308 ;;		On exit  : 0/0
 42309 ;;		Unchanged: 0/0
 42310 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42314 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42315 ;;Total ram usage:        1 bytes
 42316 ;; Hardware stack levels used: 1
 42317 ;; Hardware stack levels required when called: 3
 42318 ;; This function calls:
 42319 ;;		_APP_isSuitableTimeToWriteFlash
 42320 ;;		_eraseFlashBlock
 42321 ;; This function is called by:
 42322 ;;		_removeTableEntry
 42323 ;;		_addEvent
 42324 ;;		_FLASH_Write
 42325 ;;		_poll
 42326 ;; This function uses a non-reentrant model
 42327 ;;
 42328                           
 42329                           	psect	text128
 42330   0069C8                     __ptext128:
 42331                           	callstack 0
 42332   0069C8                     _flushFlashBlock:
 42333                           	callstack 116
 42334   0069C8                     
 42335                           ;../../VLCBlib_PIC/nvm.c: 396:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 40
      +                          4:     if (! flashFlags.writeNeeded) return;
 42336   0069C8  0105               	movlb	5	; () banked
 42337   0069CA  B19B               	btfsc	_flashFlags& (0+255),0,b
 42338   0069CC  EFEA  F034         	goto	u4511
 42339   0069D0  EFEC  F034         	goto	u4510
 42340   0069D4                     u4511:
 42341   0069D4  EFEE  F034         	goto	l7247
 42342   0069D8                     u4510:
 42343   0069D8  EF32  F035         	goto	l1660
 42344   0069DC                     l7247:
 42345                           
 42346                           ;../../VLCBlib_PIC/nvm.c: 407:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 42347   0069DC  ECAA  F041         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42348   0069E0  0900               	iorlw	0
 42349   0069E2  B4D8               	btfsc	status,2,c
 42350   0069E4  EFF6  F034         	goto	u4521
 42351   0069E8  EFF8  F034         	goto	u4520
 42352   0069EC                     u4521:
 42353   0069EC  EFEE  F034         	goto	l7247
 42354   0069F0                     u4520:
 42355   0069F0                     
 42356                           ;../../VLCBlib_PIC/nvm.c: 410:     if (flashFlags.eraseNeeded) {
 42357   0069F0  0105               	movlb	5	; () banked
 42358   0069F2  A39B               	btfss	_flashFlags& (0+255),1,b
 42359   0069F4  EFFE  F034         	goto	u4531
 42360   0069F8  EF00  F035         	goto	u4530
 42361   0069FC                     u4531:
 42362   0069FC  EF02  F035         	goto	l7251
 42363   006A00                     u4530:
 42364   006A00                     
 42365                           ; BSR set to: 5
 42366                           ;../../VLCBlib_PIC/nvm.c: 411:         eraseFlashBlock();
 42367   006A00  ECC1  F037         	call	_eraseFlashBlock	;wreg free
 42368   006A04                     l7251:
 42369                           
 42370                           ;../../VLCBlib_PIC/nvm.c: 414:     interruptEnabled = (INTCON0bits.GIE);
 42371   006A04  0E00               	movlw	0
 42372   006A06  BED6               	btfsc	214,7,c	;volatile
 42373   006A08  0E01               	movlw	1
 42374   006A0A  6E05               	movwf	flushFlashBlock@interruptEnabled^(0+1280),c
 42375   006A0C                     
 42376                           ;../../VLCBlib_PIC/nvm.c: 415:     {INTCON0bits.GIE = 0;};
 42377   006A0C  9ED6               	bcf	214,7,c	;volatile
 42378   006A0E                     l1665:
 42379                           
 42380                           ;../../VLCBlib_PIC/nvm.c: 441:     while (NVMCON0bits.GO)
 42381   006A0E  0100               	movlb	0	; () banked
 42382   006A10  B140               	btfsc	64,0,b	;volatile
 42383   006A12  EF0D  F035         	goto	u4541
 42384   006A16  EF0F  F035         	goto	u4540
 42385   006A1A                     u4541:
 42386   006A1A  EF07  F035         	goto	l1665
 42387   006A1E                     u4540:
 42388   006A1E                     
 42389                           ; BSR set to: 0
 42390                           ;../../VLCBlib_PIC/nvm.c: 447:     NVMADR = flashBlock;
 42391   006A1E  C584  F043         	movff	_flashBlock,67	;volatile
 42392   006A22  C585  F044         	movff	_flashBlock+1,68	;volatile
 42393   006A26  C586  F045         	movff	_flashBlock+2,69	;volatile
 42394   006A2A                     
 42395                           ; BSR set to: 0
 42396                           ;../../VLCBlib_PIC/nvm.c: 449:     NVMCON1bits.NVMCMD = 0x05;
 42397   006A2A  5141               	movf	65,w,b	;volsfr
 42398   006A2C  0BF8               	andlw	-8
 42399   006A2E  0905               	iorlw	5
 42400   006A30  6F41               	movwf	65,b	;volsfr
 42401                           
 42402                           ;../../VLCBlib_PIC/nvm.c: 451:     NVMLOCK = 0x55;
 42403   006A32  0E55               	movlw	85
 42404   006A34  6F42               	movwf	66,b	;volatile
 42405                           
 42406                           ;../../VLCBlib_PIC/nvm.c: 452:     NVMLOCK = 0xAA;
 42407   006A36  0EAA               	movlw	170
 42408   006A38  6F42               	movwf	66,b	;volatile
 42409   006A3A                     
 42410                           ; BSR set to: 0
 42411                           ;../../VLCBlib_PIC/nvm.c: 453:     NVMCON0bits.GO = 1;
 42412   006A3A  8140               	bsf	64,0,b	;volatile
 42413   006A3C                     l1668:
 42414                           
 42415                           ; BSR set to: 0
 42416                           ;../../VLCBlib_PIC/nvm.c: 454:     while (NVMCON0bits.GO)
 42417   006A3C  B140               	btfsc	64,0,b	;volatile
 42418   006A3E  EF23  F035         	goto	u4551
 42419   006A42  EF25  F035         	goto	u4550
 42420   006A46                     u4551:
 42421   006A46  EF1E  F035         	goto	l1668
 42422   006A4A                     u4550:
 42423   006A4A                     
 42424                           ; BSR set to: 0
 42425                           ;../../VLCBlib_PIC/nvm.c: 457:     NVMCON1bits.NVMCMD = 0x07;
 42426   006A4A  0E07               	movlw	7
 42427   006A4C  1341               	iorwf	65,f,b	;volsfr
 42428                           
 42429                           ;../../VLCBlib_PIC/nvm.c: 460:     if (interruptEnabled) {
 42430   006A4E  5005               	movf	flushFlashBlock@interruptEnabled^(0+1280),w,c
 42431   006A50  B4D8               	btfsc	status,2,c
 42432   006A52  EF2D  F035         	goto	u4561
 42433   006A56  EF2F  F035         	goto	u4560
 42434   006A5A                     u4561:
 42435   006A5A  EF30  F035         	goto	l1671
 42436   006A5E                     u4560:
 42437   006A5E                     
 42438                           ; BSR set to: 0
 42439                           ;../../VLCBlib_PIC/nvm.c: 461:         {INTCON0bits.GIE = 1;};
 42440   006A5E  8ED6               	bsf	214,7,c	;volatile
 42441   006A60                     l1671:
 42442                           
 42443                           ; BSR set to: 0
 42444                           ;../../VLCBlib_PIC/nvm.c: 463:     flashFlags.asByte = 0;
 42445   006A60  0105               	movlb	5	; () banked
 42446   006A62  6B9B               	clrf	_flashFlags& (0+255),b
 42447   006A64                     l1660:
 42448                           
 42449                           ; BSR set to: 5
 42450   006A64  0012               	return		;funcret
 42451   006A66                     __end_of_flushFlashBlock:
 42452                           	callstack 0
 42453                           
 42454 ;; *************** function _eraseFlashBlock *****************
 42455 ;; Defined at:
 42456 ;;		line 344 in file "../../VLCBlib_PIC/nvm.c"
 42457 ;; Parameters:    Size  Location     Type
 42458 ;;		None
 42459 ;; Auto vars:     Size  Location     Type
 42460 ;;  interruptEna    1    3[COMRAM] unsigned char 
 42461 ;; Return value:  Size  Location     Type
 42462 ;;                  1    wreg      void 
 42463 ;; Registers used:
 42464 ;;		wreg, status,2, cstack
 42465 ;; Tracked objects:
 42466 ;;		On entry : 0/0
 42467 ;;		On exit  : 0/0
 42468 ;;		Unchanged: 0/0
 42469 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42472 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42473 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42474 ;;Total ram usage:        4 bytes
 42475 ;; Hardware stack levels used: 1
 42476 ;; Hardware stack levels required when called: 2
 42477 ;; This function calls:
 42478 ;;		_APP_isSuitableTimeToWriteFlash
 42479 ;; This function is called by:
 42480 ;;		_flushFlashBlock
 42481 ;;		_FLASH_Write
 42482 ;; This function uses a non-reentrant model
 42483 ;;
 42484                           
 42485                           	psect	text129
 42486   006F82                     __ptext129:
 42487                           	callstack 0
 42488   006F82                     _eraseFlashBlock:
 42489                           	callstack 116
 42490   006F82                     l7161:
 42491                           
 42492                           ;../../VLCBlib_PIC/nvm.c: 348:     while (! APP_isSuitableTimeToWriteFlash())
 42493   006F82  ECAA  F041         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42494   006F86  0900               	iorlw	0
 42495   006F88  B4D8               	btfsc	status,2,c
 42496   006F8A  EFC9  F037         	goto	u4431
 42497   006F8E  EFCB  F037         	goto	u4430
 42498   006F92                     u4431:
 42499   006F92  EFC1  F037         	goto	l7161
 42500   006F96                     u4430:
 42501   006F96                     
 42502                           ;../../VLCBlib_PIC/nvm.c: 351:     interruptEnabled = (INTCON0bits.GIE);
 42503   006F96  0E00               	movlw	0
 42504   006F98  BED6               	btfsc	214,7,c	;volatile
 42505   006F9A  0E01               	movlw	1
 42506   006F9C  6E04               	movwf	eraseFlashBlock@interruptEnabled^(0+1280),c
 42507   006F9E                     l1649:
 42508                           
 42509                           ;../../VLCBlib_PIC/nvm.c: 369:     while (NVMCON0bits.GO)
 42510   006F9E  0100               	movlb	0	; () banked
 42511   006FA0  B140               	btfsc	64,0,b	;volatile
 42512   006FA2  EFD5  F037         	goto	u4441
 42513   006FA6  EFD7  F037         	goto	u4440
 42514   006FAA                     u4441:
 42515   006FAA  EFCF  F037         	goto	l1649
 42516   006FAE                     u4440:
 42517   006FAE                     
 42518                           ; BSR set to: 0
 42519                           ;../../VLCBlib_PIC/nvm.c: 372:     NVMADRU = (uint8_t) (flashBlock >> 16);
 42520   006FAE  C586  F045         	movff	_flashBlock+2,69	;volatile
 42521   006FB2                     
 42522                           ; BSR set to: 0
 42523                           ;../../VLCBlib_PIC/nvm.c: 373:     NVMADRH = (uint8_t) (flashBlock >> 8);
 42524   006FB2  C584  F501         	movff	_flashBlock,??_eraseFlashBlock
 42525   006FB6  C585  F502         	movff	_flashBlock+1,??_eraseFlashBlock+1
 42526   006FBA  C586  F503         	movff	_flashBlock+2,??_eraseFlashBlock+2
 42527   006FBE  C502  F501         	movff	??_eraseFlashBlock+1,??_eraseFlashBlock
 42528   006FC2  C503  F502         	movff	??_eraseFlashBlock+2,??_eraseFlashBlock+1
 42529   006FC6  6A03               	clrf	(??_eraseFlashBlock+2)^(0+1280),c
 42530   006FC8  5001               	movf	??_eraseFlashBlock^(0+1280),w,c
 42531   006FCA  6F44               	movwf	68,b	;volatile
 42532                           
 42533                           ;../../VLCBlib_PIC/nvm.c: 375:     NVMCON1bits.NVMCMD = 0x06;
 42534   006FCC  5141               	movf	65,w,b	;volsfr
 42535   006FCE  0BF8               	andlw	-8
 42536   006FD0  0906               	iorlw	6
 42537   006FD2  6F41               	movwf	65,b	;volsfr
 42538   006FD4                     
 42539                           ; BSR set to: 0
 42540                           ;../../VLCBlib_PIC/nvm.c: 376:     {INTCON0bits.GIE = 0;};
 42541   006FD4  9ED6               	bcf	214,7,c	;volatile
 42542                           
 42543                           ;../../VLCBlib_PIC/nvm.c: 378:     NVMLOCK = 0x55;
 42544   006FD6  0E55               	movlw	85
 42545   006FD8  6F42               	movwf	66,b	;volatile
 42546                           
 42547                           ;../../VLCBlib_PIC/nvm.c: 379:     NVMLOCK = 0xAA;
 42548   006FDA  0EAA               	movlw	170
 42549   006FDC  6F42               	movwf	66,b	;volatile
 42550   006FDE                     
 42551                           ; BSR set to: 0
 42552                           ;../../VLCBlib_PIC/nvm.c: 380:     NVMCON0bits.GO = 1;
 42553   006FDE  8140               	bsf	64,0,b	;volatile
 42554   006FE0                     l1652:
 42555                           
 42556                           ; BSR set to: 0
 42557                           ;../../VLCBlib_PIC/nvm.c: 381:     while (NVMCON0bits.GO)
 42558   006FE0  B140               	btfsc	64,0,b	;volatile
 42559   006FE2  EFF5  F037         	goto	u4451
 42560   006FE6  EFF7  F037         	goto	u4450
 42561   006FEA                     u4451:
 42562   006FEA  EFF0  F037         	goto	l1652
 42563   006FEE                     u4450:
 42564   006FEE                     
 42565                           ; BSR set to: 0
 42566                           ;../../VLCBlib_PIC/nvm.c: 383:     NVMCON1bits.NVMCMD = 0x07;
 42567   006FEE  0E07               	movlw	7
 42568   006FF0  1341               	iorwf	65,f,b	;volsfr
 42569                           
 42570                           ;../../VLCBlib_PIC/nvm.c: 385:     if (interruptEnabled) {
 42571   006FF2  5004               	movf	eraseFlashBlock@interruptEnabled^(0+1280),w,c
 42572   006FF4  B4D8               	btfsc	status,2,c
 42573   006FF6  EFFF  F037         	goto	u4461
 42574   006FFA  EF01  F038         	goto	u4460
 42575   006FFE                     u4461:
 42576   006FFE  EF02  F038         	goto	l1656
 42577   007002                     u4460:
 42578   007002                     
 42579                           ; BSR set to: 0
 42580                           ;../../VLCBlib_PIC/nvm.c: 386:         {INTCON0bits.GIE = 1;};
 42581   007002  8ED6               	bsf	214,7,c	;volatile
 42582   007004                     l1656:
 42583                           
 42584                           ; BSR set to: 0
 42585   007004  0012               	return		;funcret
 42586   007006                     __end_of_eraseFlashBlock:
 42587                           	callstack 0
 42588                           
 42589 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 42590 ;; Defined at:
 42591 ;;		line 275 in file "../main.c"
 42592 ;; Parameters:    Size  Location     Type
 42593 ;;		None
 42594 ;; Auto vars:     Size  Location     Type
 42595 ;;		None
 42596 ;; Return value:  Size  Location     Type
 42597 ;;                  1    wreg      enum E23231
 42598 ;; Registers used:
 42599 ;;		wreg
 42600 ;; Tracked objects:
 42601 ;;		On entry : 0/0
 42602 ;;		On exit  : 0/0
 42603 ;;		Unchanged: 0/0
 42604 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42609 ;;Total ram usage:        0 bytes
 42610 ;; Hardware stack levels used: 1
 42611 ;; Hardware stack levels required when called: 1
 42612 ;; This function calls:
 42613 ;;		Nothing
 42614 ;; This function is called by:
 42615 ;;		_eraseFlashBlock
 42616 ;;		_flushFlashBlock
 42617 ;; This function uses a non-reentrant model
 42618 ;;
 42619                           
 42620                           	psect	text130
 42621   008354                     __ptext130:
 42622                           	callstack 0
 42623   008354                     _APP_isSuitableTimeToWriteFlash:
 42624                           	callstack 116
 42625   008354                     
 42626                           ;../main.c: 279:     return GOOD_TIME;
 42627   008354  0E01               	movlw	1
 42628   008356  0012               	return		;funcret
 42629   008358                     __end_of_APP_isSuitableTimeToWriteFlash:
 42630                           	callstack 0
 42631                           
 42632 ;; *************** function _EEPROM_Write *****************
 42633 ;; Defined at:
 42634 ;;		line 218 in file "../../VLCBlib_PIC/nvm.c"
 42635 ;; Parameters:    Size  Location     Type
 42636 ;;  index           3    8[COMRAM] unsigned um
 42637 ;;  value           1   11[COMRAM] unsigned char 
 42638 ;; Auto vars:     Size  Location     Type
 42639 ;;  interruptEna    1    0        unsigned char 
 42640 ;; Return value:  Size  Location     Type
 42641 ;;                  1    wreg      unsigned char 
 42642 ;; Registers used:
 42643 ;;		wreg, status,2, status,0, cstack
 42644 ;; Tracked objects:
 42645 ;;		On entry : 0/0
 42646 ;;		On exit  : 0/0
 42647 ;;		Unchanged: 0/0
 42648 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42652 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42653 ;;Total ram usage:        4 bytes
 42654 ;; Hardware stack levels used: 1
 42655 ;; Hardware stack levels required when called: 2
 42656 ;; This function calls:
 42657 ;;		_EEPROM_Read
 42658 ;;		_EEPROM_WriteNoVerify
 42659 ;;		_updateModuleErrorStatus
 42660 ;; This function is called by:
 42661 ;;		_writeNVM
 42662 ;; This function uses a non-reentrant model
 42663 ;;
 42664                           
 42665                           	psect	text131
 42666   0078F0                     __ptext131:
 42667                           	callstack 0
 42668   0078F0                     _EEPROM_Write:
 42669                           	callstack 118
 42670   0078F0  50D6               	movf	214,w,c	;volatile
 42671   0078F2                     l7429:
 42672                           
 42673                           ;../../VLCBlib_PIC/nvm.c: 223:         EEPROM_WriteNoVerify(index, value);
 42674   0078F2  C509  F501         	movff	EEPROM_Write@index,EEPROM_WriteNoVerify@index
 42675   0078F6  C50A  F502         	movff	EEPROM_Write@index+1,EEPROM_WriteNoVerify@index+1
 42676   0078FA  C50B  F503         	movff	EEPROM_Write@index+2,EEPROM_WriteNoVerify@index+2
 42677   0078FE  C50C  F504         	movff	EEPROM_Write@value,EEPROM_WriteNoVerify@value
 42678   007902  ECB2  F03B         	call	_EEPROM_WriteNoVerify	;wreg free
 42679   007906                     
 42680                           ;../../VLCBlib_PIC/nvm.c: 226:         if (EEPROM_Read(index) == value) {
 42681   007906  C509  F501         	movff	EEPROM_Write@index,EEPROM_Read@index
 42682   00790A  C50A  F502         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 42683   00790E  C50B  F503         	movff	EEPROM_Write@index+2,EEPROM_Read@index+2
 42684   007912  ECA7  F03D         	call	_EEPROM_Read	;wreg free
 42685   007916  180C               	xorwf	EEPROM_Write@value^(0+1280),w,c
 42686   007918  A4D8               	btfss	status,2,c
 42687   00791A  EF91  F03C         	goto	u4781
 42688   00791E  EF93  F03C         	goto	u4780
 42689   007922                     u4781:
 42690   007922  EF95  F03C         	goto	l7435
 42691   007926                     u4780:
 42692   007926  EF9C  F03C         	goto	l7439
 42693   00792A                     l7435:
 42694                           
 42695                           ;../../VLCBlib_PIC/nvm.c: 230:         mnsDiagnostics[0x04].asUint++;
 42696   00792A  0105               	movlb	5	; () banked
 42697   00792C  4BB5               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 42698   00792E  2BB6               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 42699   007930                     
 42700                           ; BSR set to: 5
 42701                           ;../../VLCBlib_PIC/nvm.c: 231:         updateModuleErrorStatus();
 42702   007930  EC65  F041         	call	_updateModuleErrorStatus	;wreg free
 42703                           
 42704                           ;../../VLCBlib_PIC/nvm.c: 233:     } while (1);
 42705   007934  EF79  F03C         	goto	l7429
 42706   007938                     l7439:
 42707                           
 42708                           ;../../VLCBlib_PIC/nvm.c: 236:     NVMCON1bits.NVMCMD = 0x07;
 42709   007938  0E07               	movlw	7
 42710   00793A  0100               	movlb	0	; () banked
 42711   00793C  1341               	iorwf	65,f,b	;volsfr
 42712                           
 42713                           ;../../VLCBlib_PIC/nvm.c: 237:     NVMADR = 0;
 42714   00793E  0E00               	movlw	0
 42715   007940  6F43               	movwf	67,b	;volatile
 42716   007942  0E00               	movlw	0
 42717   007944  6F44               	movwf	68,b	;volatile
 42718   007946  0E00               	movlw	0
 42719   007948  6F45               	movwf	69,b	;volatile
 42720   00794A                     
 42721                           ; BSR set to: 0
 42722                           ;../../VLCBlib_PIC/nvm.c: 239:     return GRSP_OK;
 42723   00794A  0E00               	movlw	0
 42724   00794C                     
 42725                           ; BSR set to: 0
 42726   00794C  0012               	return		;funcret
 42727   00794E                     __end_of_EEPROM_Write:
 42728                           	callstack 0
 42729                           
 42730 ;; *************** function _updateModuleErrorStatus *****************
 42731 ;; Defined at:
 42732 ;;		line 639 in file "../../VLCBlib_PIC/mns.c"
 42733 ;; Parameters:    Size  Location     Type
 42734 ;;		None
 42735 ;; Auto vars:     Size  Location     Type
 42736 ;;		None
 42737 ;; Return value:  Size  Location     Type
 42738 ;;                  1    wreg      void 
 42739 ;; Registers used:
 42740 ;;		wreg, status,2, status,0
 42741 ;; Tracked objects:
 42742 ;;		On entry : 0/0
 42743 ;;		On exit  : 0/0
 42744 ;;		Unchanged: 0/0
 42745 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42750 ;;Total ram usage:        0 bytes
 42751 ;; Hardware stack levels used: 1
 42752 ;; Hardware stack levels required when called: 1
 42753 ;; This function calls:
 42754 ;;		Nothing
 42755 ;; This function is called by:
 42756 ;;		_canSendMessage
 42757 ;;		_processEnumeration
 42758 ;;		_EEPROM_Write
 42759 ;; This function uses a non-reentrant model
 42760 ;;
 42761                           
 42762                           	psect	text132
 42763   0082CA                     __ptext132:
 42764                           	callstack 0
 42765   0082CA                     _updateModuleErrorStatus:
 42766                           	callstack 119
 42767   0082CA                     
 42768                           ;../../VLCBlib_PIC/mns.c: 640:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 42769   0082CA  0105               	movlb	5	; () banked
 42770   0082CC  29AF               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 42771   0082CE  B4D8               	btfsc	status,2,c
 42772   0082D0  EF6C  F041         	goto	u4501
 42773   0082D4  EF6E  F041         	goto	u4500
 42774   0082D8                     u4501:
 42775   0082D8  EF6F  F041         	goto	l1374
 42776   0082DC                     u4500:
 42777   0082DC                     
 42778                           ; BSR set to: 5
 42779                           ;../../VLCBlib_PIC/mns.c: 641:         mnsDiagnostics[0x01].asBytes.lo++;
 42780   0082DC  2BAF               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 42781   0082DE                     l1374:
 42782                           
 42783                           ; BSR set to: 5
 42784   0082DE  0012               	return		;funcret
 42785   0082E0                     __end_of_updateModuleErrorStatus:
 42786                           	callstack 0
 42787                           
 42788 ;; *************** function _EEPROM_WriteNoVerify *****************
 42789 ;; Defined at:
 42790 ;;		line 248 in file "../../VLCBlib_PIC/nvm.c"
 42791 ;; Parameters:    Size  Location     Type
 42792 ;;  index           3    0[COMRAM] unsigned um
 42793 ;;  value           1    3[COMRAM] unsigned char 
 42794 ;; Auto vars:     Size  Location     Type
 42795 ;;  interruptEna    1    7[COMRAM] unsigned char 
 42796 ;; Return value:  Size  Location     Type
 42797 ;;                  1    wreg      unsigned char 
 42798 ;; Registers used:
 42799 ;;		wreg, status,2
 42800 ;; Tracked objects:
 42801 ;;		On entry : 0/0
 42802 ;;		On exit  : 0/0
 42803 ;;		Unchanged: 0/0
 42804 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42805 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42807 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42808 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42809 ;;Total ram usage:        8 bytes
 42810 ;; Hardware stack levels used: 1
 42811 ;; Hardware stack levels required when called: 1
 42812 ;; This function calls:
 42813 ;;		Nothing
 42814 ;; This function is called by:
 42815 ;;		_EEPROM_Write
 42816 ;; This function uses a non-reentrant model
 42817 ;;
 42818                           
 42819                           	psect	text133
 42820   007764                     __ptext133:
 42821                           	callstack 0
 42822   007764                     _EEPROM_WriteNoVerify:
 42823                           	callstack 118
 42824   007764                     
 42825                           ;../../VLCBlib_PIC/nvm.c: 249:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 25
      +                          0:     interruptEnabled = (INTCON0bits.GIE);
 42826   007764  0E00               	movlw	0
 42827   007766  BED6               	btfsc	214,7,c	;volatile
 42828   007768  0E01               	movlw	1
 42829   00776A  6E08               	movwf	EEPROM_WriteNoVerify@interruptEnabled^(0+1280),c
 42830   00776C                     l1634:
 42831                           
 42832                           ;../../VLCBlib_PIC/nvm.c: 276:     while (NVMCON0bits.GO)
 42833   00776C  0100               	movlb	0	; () banked
 42834   00776E  B140               	btfsc	64,0,b	;volatile
 42835   007770  EFBC  F03B         	goto	u4571
 42836   007774  EFBE  F03B         	goto	u4570
 42837   007778                     u4571:
 42838   007778  EFB6  F03B         	goto	l1634
 42839   00777C                     u4570:
 42840   00777C                     
 42841                           ; BSR set to: 0
 42842                           ;../../VLCBlib_PIC/nvm.c: 279:     NVMADRU = 0x38;
 42843   00777C  0E38               	movlw	56
 42844   00777E  6F45               	movwf	69,b	;volatile
 42845                           
 42846                           ;../../VLCBlib_PIC/nvm.c: 280:     NVMADRH = (uint8_t) (index >> 8);
 42847   007780  C501  F505         	movff	EEPROM_WriteNoVerify@index,??_EEPROM_WriteNoVerify
 42848   007784  C502  F506         	movff	EEPROM_WriteNoVerify@index+1,??_EEPROM_WriteNoVerify+1
 42849   007788  C503  F507         	movff	EEPROM_WriteNoVerify@index+2,??_EEPROM_WriteNoVerify+2
 42850   00778C  C506  F505         	movff	??_EEPROM_WriteNoVerify+1,??_EEPROM_WriteNoVerify
 42851   007790  C507  F506         	movff	??_EEPROM_WriteNoVerify+2,??_EEPROM_WriteNoVerify+1
 42852   007794  6A07               	clrf	(??_EEPROM_WriteNoVerify+2)^(0+1280),c
 42853   007796  5005               	movf	??_EEPROM_WriteNoVerify^(0+1280),w,c
 42854   007798  6F44               	movwf	68,b	;volatile
 42855   00779A                     
 42856                           ; BSR set to: 0
 42857                           ;../../VLCBlib_PIC/nvm.c: 281:     NVMADRL = (uint8_t) index;
 42858   00779A  C501  F043         	movff	EEPROM_WriteNoVerify@index,67	;volatile
 42859   00779E                     
 42860                           ; BSR set to: 0
 42861                           ;../../VLCBlib_PIC/nvm.c: 284:     NVMDATL = value;
 42862   00779E  C504  F046         	movff	EEPROM_WriteNoVerify@value,70	;volatile
 42863                           
 42864                           ;../../VLCBlib_PIC/nvm.c: 287:     NVMCON1bits.NVMCMD = 0x03;
 42865   0077A2  5141               	movf	65,w,b	;volsfr
 42866   0077A4  0BF8               	andlw	-8
 42867   0077A6  0903               	iorlw	3
 42868   0077A8  6F41               	movwf	65,b	;volsfr
 42869   0077AA                     
 42870                           ; BSR set to: 0
 42871                           ;../../VLCBlib_PIC/nvm.c: 290:     {INTCON0bits.GIE = 0;};
 42872   0077AA  9ED6               	bcf	214,7,c	;volatile
 42873                           
 42874                           ;../../VLCBlib_PIC/nvm.c: 293:     NVMLOCK = 0x55;
 42875   0077AC  0E55               	movlw	85
 42876   0077AE  6F42               	movwf	66,b	;volatile
 42877                           
 42878                           ;../../VLCBlib_PIC/nvm.c: 294:     NVMLOCK = 0xAA;
 42879   0077B0  0EAA               	movlw	170
 42880   0077B2  6F42               	movwf	66,b	;volatile
 42881   0077B4                     
 42882                           ; BSR set to: 0
 42883                           ;../../VLCBlib_PIC/nvm.c: 297:     NVMCON0bits.GO = 1;
 42884   0077B4  8140               	bsf	64,0,b	;volatile
 42885                           
 42886                           ;../../VLCBlib_PIC/nvm.c: 299:     if (interruptEnabled) {
 42887   0077B6  5008               	movf	EEPROM_WriteNoVerify@interruptEnabled^(0+1280),w,c
 42888   0077B8  B4D8               	btfsc	status,2,c
 42889   0077BA  EFE1  F03B         	goto	u4581
 42890   0077BE  EFE3  F03B         	goto	u4580
 42891   0077C2                     u4581:
 42892   0077C2  EFE4  F03B         	goto	l1638
 42893   0077C6                     u4580:
 42894   0077C6                     
 42895                           ; BSR set to: 0
 42896                           ;../../VLCBlib_PIC/nvm.c: 301:         {INTCON0bits.GIE = 1;};
 42897   0077C6  8ED6               	bsf	214,7,c	;volatile
 42898   0077C8                     l1638:
 42899                           
 42900                           ; BSR set to: 0
 42901   0077C8  0012               	return		;funcret
 42902   0077CA                     __end_of_EEPROM_WriteNoVerify:
 42903                           	callstack 0
 42904                           
 42905 ;; *************** function _rebuildHashtable *****************
 42906 ;; Defined at:
 42907 ;;		line 1007 in file "../../VLCBlib_PIC/event_teach_simple.c"
 42908 ;; Parameters:    Size  Location     Type
 42909 ;;		None
 42910 ;; Auto vars:     Size  Location     Type
 42911 ;;  ev              2    0        short 
 42912 ;;  a               2    0        int 
 42913 ;;  chainIdx        1   38[COMRAM] unsigned char 
 42914 ;;  tableIndex      1   37[COMRAM] unsigned char 
 42915 ;;  hash            1   36[COMRAM] unsigned char 
 42916 ;; Return value:  Size  Location     Type
 42917 ;;                  1    wreg      void 
 42918 ;; Registers used:
 42919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42920 ;; Tracked objects:
 42921 ;;		On entry : 0/0
 42922 ;;		On exit  : 0/0
 42923 ;;		Unchanged: 0/0
 42924 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42926 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42927 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42928 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42929 ;;Total ram usage:        6 bytes
 42930 ;; Hardware stack levels used: 1
 42931 ;; Hardware stack levels required when called: 4
 42932 ;; This function calls:
 42933 ;;		_getEN
 42934 ;;		_getHash
 42935 ;;		_getNN
 42936 ;; This function is called by:
 42937 ;;		_teachPowerUp
 42938 ;;		_clearAllEvents
 42939 ;;		_removeTableEntry
 42940 ;;		_addEvent
 42941 ;;		_mnsProcessMessage
 42942 ;; This function uses a non-reentrant model
 42943 ;;
 42944                           
 42945                           	psect	text134
 42946   005730                     __ptext134:
 42947                           	callstack 0
 42948   005730                     _rebuildHashtable:
 42949                           	callstack 120
 42950   005730                     
 42951                           ;../../VLCBlib_PIC/event_teach_simple.c: 1009:     uint8_t hash;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 1010:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach_simple.c: 101
      +                          1:     uint8_t tableIndex;;../../VLCBlib_PIC/event_teach_simple.c: 1012:     int a;;../.
      +                          ./VLCBlib_PIC/event_teach_simple.c: 1014:     for (hash=0; hash<32; hash++) {
 42952   005730  6A25               	clrf	rebuildHashtable@hash^(0+1280),c
 42953   005732                     l1147:
 42954                           
 42955                           ;../../VLCBlib_PIC/event_teach_simple.c: 1015:         for (chainIdx=0; chainIdx < 20; c
      +                          hainIdx++) {
 42956   005732  6A27               	clrf	rebuildHashtable@chainIdx^(0+1280),c
 42957   005734                     l7597:
 42958                           
 42959                           ;../../VLCBlib_PIC/event_teach_simple.c: 1016:             eventChains[hash][chainIdx] =
      +                           0xff;
 42960   005734  5025               	movf	rebuildHashtable@hash^(0+1280),w,c
 42961   005736  0D14               	mullw	20
 42962   005738  0EF9               	movlw	low _eventChains
 42963   00573A  24F3               	addwf	243,w,c
 42964   00573C  6E22               	movwf	??_rebuildHashtable^(0+1280),c
 42965   00573E  0E0B               	movlw	high _eventChains
 42966   005740  20F4               	addwfc	prodh,w,c
 42967   005742  6E23               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 42968   005744  5027               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 42969   005746  2422               	addwf	??_rebuildHashtable^(0+1280),w,c
 42970   005748  6ED9               	movwf	fsr2l,c
 42971   00574A  0E00               	movlw	0
 42972   00574C  2023               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 42973   00574E  6EDA               	movwf	fsr2h,c
 42974   005750  0EFF               	movlw	255
 42975   005752  6EDF               	movwf	indf2,c
 42976   005754                     
 42977                           ;../../VLCBlib_PIC/event_teach_simple.c: 1017:         }
 42978   005754  2A27               	incf	rebuildHashtable@chainIdx^(0+1280),f,c
 42979   005756  0E13               	movlw	19
 42980   005758  6427               	cpfsgt	rebuildHashtable@chainIdx^(0+1280),c
 42981   00575A  EFB1  F02B         	goto	u4951
 42982   00575E  EFB3  F02B         	goto	u4950
 42983   005762                     u4951:
 42984   005762  EF9A  F02B         	goto	l7597
 42985   005766                     u4950:
 42986   005766                     
 42987                           ;../../VLCBlib_PIC/event_teach_simple.c: 1018:     }
 42988   005766  2A25               	incf	rebuildHashtable@hash^(0+1280),f,c
 42989   005768  0E1F               	movlw	31
 42990   00576A  6425               	cpfsgt	rebuildHashtable@hash^(0+1280),c
 42991   00576C  EFBA  F02B         	goto	u4961
 42992   005770  EFBC  F02B         	goto	u4960
 42993   005774                     u4961:
 42994   005774  EF99  F02B         	goto	l1147
 42995   005778                     u4960:
 42996   005778                     
 42997                           ;../../VLCBlib_PIC/event_teach_simple.c: 1020:     for (tableIndex=0; tableIndex<255; ta
      +                          bleIndex++) {
 42998   005778  6A26               	clrf	rebuildHashtable@tableIndex^(0+1280),c
 42999   00577A                     l7611:
 43000                           
 43001                           ;../../VLCBlib_PIC/event_teach_simple.c: 1021:         if (getEN(tableIndex) != 0) {
 43002   00577A  5026               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 43003   00577C  ECA0  F033         	call	_getEN
 43004   005780  500D               	movf	?_getEN^(0+1280),w,c
 43005   005782  100E               	iorwf	(?_getEN+1)^(0+1280),w,c
 43006   005784  B4D8               	btfsc	status,2,c
 43007   005786  EFC7  F02B         	goto	u4971
 43008   00578A  EFC9  F02B         	goto	u4970
 43009   00578E                     u4971:
 43010   00578E  EF0C  F02C         	goto	l7629
 43011   005792                     u4970:
 43012   005792                     
 43013                           ;../../VLCBlib_PIC/event_teach_simple.c: 1022:             int16_t ev;;../../VLCBlib_PIC
      +                          /event_teach_simple.c: 1025:             hash = getHash(getNN(tableIndex), getEN(tableIn
      +                          dex));
 43014   005792  5026               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 43015   005794  EC72  F029         	call	_getNN
 43016   005798  C50D  F51C         	movff	?_getNN,getHash@nn
 43017   00579C  C50E  F51D         	movff	?_getNN+1,getHash@nn+1
 43018   0057A0  5026               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 43019   0057A2  ECA0  F033         	call	_getEN
 43020   0057A6  C50D  F51E         	movff	?_getEN,getHash@en
 43021   0057AA  C50E  F51F         	movff	?_getEN+1,getHash@en+1
 43022   0057AE  EC17  F041         	call	_getHash	;wreg free
 43023   0057B2  6E25               	movwf	rebuildHashtable@hash^(0+1280),c
 43024   0057B4                     
 43025                           ;../../VLCBlib_PIC/event_teach_simple.c: 1026:             for (chainIdx=0; chainIdx<20;
      +                           chainIdx++) {
 43026   0057B4  6A27               	clrf	rebuildHashtable@chainIdx^(0+1280),c
 43027   0057B6                     l7621:
 43028                           
 43029                           ;../../VLCBlib_PIC/event_teach_simple.c: 1027:                 if (eventChains[hash][cha
      +                          inIdx] == 0xff) {
 43030   0057B6  5025               	movf	rebuildHashtable@hash^(0+1280),w,c
 43031   0057B8  0D14               	mullw	20
 43032   0057BA  0EF9               	movlw	low _eventChains
 43033   0057BC  24F3               	addwf	243,w,c
 43034   0057BE  6E22               	movwf	??_rebuildHashtable^(0+1280),c
 43035   0057C0  0E0B               	movlw	high _eventChains
 43036   0057C2  20F4               	addwfc	prodh,w,c
 43037   0057C4  6E23               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 43038   0057C6  5027               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 43039   0057C8  2422               	addwf	??_rebuildHashtable^(0+1280),w,c
 43040   0057CA  6ED9               	movwf	fsr2l,c
 43041   0057CC  0E00               	movlw	0
 43042   0057CE  2023               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 43043   0057D0  6EDA               	movwf	fsr2h,c
 43044   0057D2  28DE               	incf	postinc2,w,c
 43045   0057D4  A4D8               	btfss	status,2,c
 43046   0057D6  EFEF  F02B         	goto	u4981
 43047   0057DA  EFF1  F02B         	goto	u4980
 43048   0057DE                     u4981:
 43049   0057DE  EF03  F02C         	goto	l7625
 43050   0057E2                     u4980:
 43051   0057E2                     
 43052                           ;../../VLCBlib_PIC/event_teach_simple.c: 1029:                     eventChains[hash][cha
      +                          inIdx] = tableIndex;
 43053   0057E2  5025               	movf	rebuildHashtable@hash^(0+1280),w,c
 43054   0057E4  0D14               	mullw	20
 43055   0057E6  0EF9               	movlw	low _eventChains
 43056   0057E8  24F3               	addwf	243,w,c
 43057   0057EA  6E22               	movwf	??_rebuildHashtable^(0+1280),c
 43058   0057EC  0E0B               	movlw	high _eventChains
 43059   0057EE  20F4               	addwfc	prodh,w,c
 43060   0057F0  6E23               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 43061   0057F2  5027               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 43062   0057F4  2422               	addwf	??_rebuildHashtable^(0+1280),w,c
 43063   0057F6  6ED9               	movwf	fsr2l,c
 43064   0057F8  0E00               	movlw	0
 43065   0057FA  2023               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 43066   0057FC  6EDA               	movwf	fsr2h,c
 43067   0057FE  C526  F4DF         	movff	rebuildHashtable@tableIndex,indf2
 43068                           
 43069                           ;../../VLCBlib_PIC/event_teach_simple.c: 1030:                     break;
 43070   005802  EF0C  F02C         	goto	l7629
 43071   005806                     l7625:
 43072                           
 43073                           ;../../VLCBlib_PIC/event_teach_simple.c: 1032:             }
 43074   005806  2A27               	incf	rebuildHashtable@chainIdx^(0+1280),f,c
 43075   005808  0E13               	movlw	19
 43076   00580A  6427               	cpfsgt	rebuildHashtable@chainIdx^(0+1280),c
 43077   00580C  EF0A  F02C         	goto	u4991
 43078   005810  EF0C  F02C         	goto	u4990
 43079   005814                     u4991:
 43080   005814  EFDB  F02B         	goto	l7621
 43081   005818                     u4990:
 43082   005818                     l7629:
 43083                           
 43084                           ;../../VLCBlib_PIC/event_teach_simple.c: 1034:     }
 43085   005818  2A26               	incf	rebuildHashtable@tableIndex^(0+1280),f,c
 43086   00581A  2826               	incf	rebuildHashtable@tableIndex^(0+1280),w,c
 43087   00581C  A4D8               	btfss	status,2,c
 43088   00581E  EF13  F02C         	goto	u5001
 43089   005822  EF15  F02C         	goto	u5000
 43090   005826                     u5001:
 43091   005826  EFBD  F02B         	goto	l7611
 43092   00582A                     u5000:
 43093   00582A  0012               	return		;funcret
 43094   00582C                     __end_of_rebuildHashtable:
 43095                           	callstack 0
 43096                           
 43097 ;; *************** function _getNN *****************
 43098 ;; Defined at:
 43099 ;;		line 915 in file "../../VLCBlib_PIC/event_teach_simple.c"
 43100 ;; Parameters:    Size  Location     Type
 43101 ;;  tableIndex      1    wreg     unsigned char 
 43102 ;; Auto vars:     Size  Location     Type
 43103 ;;  tableIndex      1   26[COMRAM] unsigned char 
 43104 ;;  lo              2   23[COMRAM] unsigned short 
 43105 ;;  hi              2   21[COMRAM] unsigned short 
 43106 ;;  flags           1   25[COMRAM] unsigned char 
 43107 ;; Return value:  Size  Location     Type
 43108 ;;                  2   12[COMRAM] unsigned short 
 43109 ;; Registers used:
 43110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43111 ;; Tracked objects:
 43112 ;;		On entry : 0/0
 43113 ;;		On exit  : 0/0
 43114 ;;		Unchanged: 0/0
 43115 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43117 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43118 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43119 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43120 ;;Total ram usage:       15 bytes
 43121 ;; Hardware stack levels used: 1
 43122 ;; Hardware stack levels required when called: 3
 43123 ;; This function calls:
 43124 ;;		_readNVM
 43125 ;; This function is called by:
 43126 ;;		_nerdCallback
 43127 ;;		_doNenrd
 43128 ;;		_reqevCallback
 43129 ;;		_findEvent
 43130 ;;		_rebuildHashtable
 43131 ;; This function uses a non-reentrant model
 43132 ;;
 43133                           
 43134                           	psect	text135
 43135   0052E4                     __ptext135:
 43136                           	callstack 0
 43137   0052E4                     _getNN:
 43138                           	callstack 120
 43139                           
 43140                           ;incstack = 0
 43141                           ;getNN@tableIndex stored from wreg
 43142   0052E4  6E1B               	movwf	getNN@tableIndex^(0+1280),c
 43143   0052E6                     
 43144                           ;../../VLCBlib_PIC/event_teach_simple.c: 916:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_simple.c: 917:     uint16_t lo;;../../VLCBlib_PIC/event_teach_simple.c: 918:     ui
      +                          nt8_t flags;;../../VLCBlib_PIC/event_teach_simple.c: 919:     if (tableIndex >= 255) {
 43145   0052E6  281B               	incf	getNN@tableIndex^(0+1280),w,c
 43146   0052E8  A4D8               	btfss	status,2,c
 43147   0052EA  EF79  F029         	goto	u4761
 43148   0052EE  EF7B  F029         	goto	u4760
 43149   0052F2                     u4761:
 43150   0052F2  EF81  F029         	goto	l7405
 43151   0052F6                     u4760:
 43152   0052F6                     
 43153                           ;../../VLCBlib_PIC/event_teach_simple.c: 920:         return CMDERR_INV_EN_IDX;
 43154   0052F6  0E00               	movlw	0
 43155   0052F8  6E0E               	movwf	(?_getNN+1)^(0+1280),c
 43156   0052FA  0E08               	movlw	8
 43157   0052FC  6E0D               	movwf	?_getNN^(0+1280),c
 43158   0052FE  EF02  F02A         	goto	l1131
 43159   005302                     l7405:
 43160                           
 43161                           ;../../VLCBlib_PIC/event_teach_simple.c: 923:     flags = (uint8_t)readNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+4);
 43162   005302  501B               	movf	getNN@tableIndex^(0+1280),w,c
 43163   005304  6E0F               	movwf	??_getNN^(0+1280),c
 43164   005306  6A10               	clrf	(??_getNN+1)^(0+1280),c
 43165   005308  0E01               	movlw	1
 43166   00530A  020F               	mulwf	??_getNN^(0+1280),c
 43167   00530C  C4F3 F511          	movff	prodl,??_getNN+2
 43168   005310  C4F4 F512          	movff	prodh,??_getNN+3
 43169   005314  0210               	mulwf	(??_getNN+1)^(0+1280),c
 43170   005316  50F3               	movf	prodl,w,c
 43171   005318  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43172   00531A  0E01               	movlw	1
 43173   00531C  020F               	mulwf	??_getNN^(0+1280),c
 43174   00531E  50F3               	movf	prodl,w,c
 43175   005320  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43176   005322  C511  F513         	movff	??_getNN+2,??_getNN+4
 43177   005326  C512  F514         	movff	??_getNN+3,??_getNN+5
 43178   00532A  6A15               	clrf	(??_getNN+6)^(0+1280),c
 43179   00532C  0E04               	movlw	4
 43180   00532E  2413               	addwf	(??_getNN+4)^(0+1280),w,c
 43181   005330  6E07               	movwf	readNVM@index^(0+1280),c
 43182   005332  0E00               	movlw	0
 43183   005334  2014               	addwfc	(??_getNN+5)^(0+1280),w,c
 43184   005336  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43185   005338  0E01               	movlw	1
 43186   00533A  2015               	addwfc	(??_getNN+6)^(0+1280),w,c
 43187   00533C  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43188   00533E  0E01               	movlw	1
 43189   005340  EC6C  F03A         	call	_readNVM
 43190   005344  5007               	movf	?_readNVM^(0+1280),w,c
 43191   005346  6E1A               	movwf	getNN@flags^(0+1280),c
 43192   005348                     
 43193                           ;../../VLCBlib_PIC/event_teach_simple.c: 924:     if (flags & 1) {
 43194   005348  A01A               	btfss	getNN@flags^(0+1280),0,c
 43195   00534A  EFA9  F029         	goto	u4771
 43196   00534E  EFAB  F029         	goto	u4770
 43197   005352                     u4771:
 43198   005352  EFB1  F029         	goto	l7411
 43199   005356                     u4770:
 43200   005356                     
 43201                           ;../../VLCBlib_PIC/event_teach_simple.c: 925:         return nn.word;
 43202   005356  C58F  F50D         	movff	_nn,?_getNN
 43203   00535A  C590  F50E         	movff	_nn+1,?_getNN+1
 43204   00535E  EF02  F02A         	goto	l1131
 43205   005362                     l7411:
 43206                           
 43207                           ;../../VLCBlib_PIC/event_teach_simple.c: 927:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+1);
 43208   005362  501B               	movf	getNN@tableIndex^(0+1280),w,c
 43209   005364  6E0F               	movwf	??_getNN^(0+1280),c
 43210   005366  6A10               	clrf	(??_getNN+1)^(0+1280),c
 43211   005368  0E01               	movlw	1
 43212   00536A  020F               	mulwf	??_getNN^(0+1280),c
 43213   00536C  C4F3 F511          	movff	prodl,??_getNN+2
 43214   005370  C4F4 F512          	movff	prodh,??_getNN+3
 43215   005374  0210               	mulwf	(??_getNN+1)^(0+1280),c
 43216   005376  50F3               	movf	prodl,w,c
 43217   005378  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43218   00537A  0E01               	movlw	1
 43219   00537C  020F               	mulwf	??_getNN^(0+1280),c
 43220   00537E  50F3               	movf	prodl,w,c
 43221   005380  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43222   005382  C511  F513         	movff	??_getNN+2,??_getNN+4
 43223   005386  C512  F514         	movff	??_getNN+3,??_getNN+5
 43224   00538A  6A15               	clrf	(??_getNN+6)^(0+1280),c
 43225   00538C  0E01               	movlw	1
 43226   00538E  2413               	addwf	(??_getNN+4)^(0+1280),w,c
 43227   005390  6E07               	movwf	readNVM@index^(0+1280),c
 43228   005392  0E00               	movlw	0
 43229   005394  2014               	addwfc	(??_getNN+5)^(0+1280),w,c
 43230   005396  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43231   005398  0E01               	movlw	1
 43232   00539A  2015               	addwfc	(??_getNN+6)^(0+1280),w,c
 43233   00539C  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43234   00539E  0E01               	movlw	1
 43235   0053A0  EC6C  F03A         	call	_readNVM
 43236   0053A4  5007               	movf	?_readNVM^(0+1280),w,c
 43237   0053A6  6E18               	movwf	getNN@lo^(0+1280),c
 43238   0053A8  6A19               	clrf	(getNN@lo+1)^(0+1280),c
 43239                           
 43240                           ;../../VLCBlib_PIC/event_teach_simple.c: 928:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+0);
 43241   0053AA  501B               	movf	getNN@tableIndex^(0+1280),w,c
 43242   0053AC  6E0F               	movwf	??_getNN^(0+1280),c
 43243   0053AE  6A10               	clrf	(??_getNN+1)^(0+1280),c
 43244   0053B0  0E01               	movlw	1
 43245   0053B2  020F               	mulwf	??_getNN^(0+1280),c
 43246   0053B4  C4F3 F511          	movff	prodl,??_getNN+2
 43247   0053B8  C4F4 F512          	movff	prodh,??_getNN+3
 43248   0053BC  0210               	mulwf	(??_getNN+1)^(0+1280),c
 43249   0053BE  50F3               	movf	prodl,w,c
 43250   0053C0  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43251   0053C2  0E01               	movlw	1
 43252   0053C4  020F               	mulwf	??_getNN^(0+1280),c
 43253   0053C6  50F3               	movf	prodl,w,c
 43254   0053C8  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43255   0053CA  C511  F513         	movff	??_getNN+2,??_getNN+4
 43256   0053CE  C512  F514         	movff	??_getNN+3,??_getNN+5
 43257   0053D2  6A15               	clrf	(??_getNN+6)^(0+1280),c
 43258   0053D4  0E00               	movlw	0
 43259   0053D6  2413               	addwf	(??_getNN+4)^(0+1280),w,c
 43260   0053D8  6E07               	movwf	readNVM@index^(0+1280),c
 43261   0053DA  0E00               	movlw	0
 43262   0053DC  2014               	addwfc	(??_getNN+5)^(0+1280),w,c
 43263   0053DE  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43264   0053E0  0E01               	movlw	1
 43265   0053E2  2015               	addwfc	(??_getNN+6)^(0+1280),w,c
 43266   0053E4  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43267   0053E6  0E01               	movlw	1
 43268   0053E8  EC6C  F03A         	call	_readNVM
 43269   0053EC  5007               	movf	?_readNVM^(0+1280),w,c
 43270   0053EE  6E16               	movwf	getNN@hi^(0+1280),c
 43271   0053F0  6A17               	clrf	(getNN@hi+1)^(0+1280),c
 43272   0053F2                     
 43273                           ;../../VLCBlib_PIC/event_teach_simple.c: 929:     return lo | (hi << 8);
 43274   0053F2  5016               	movf	getNN@hi^(0+1280),w,c
 43275   0053F4  6E10               	movwf	(??_getNN+1)^(0+1280),c
 43276   0053F6  6A0F               	clrf	??_getNN^(0+1280),c
 43277   0053F8  5018               	movf	getNN@lo^(0+1280),w,c
 43278   0053FA  100F               	iorwf	??_getNN^(0+1280),w,c
 43279   0053FC  6E0D               	movwf	?_getNN^(0+1280),c
 43280   0053FE  5019               	movf	(getNN@lo+1)^(0+1280),w,c
 43281   005400  1010               	iorwf	(??_getNN+1)^(0+1280),w,c
 43282   005402  6E0E               	movwf	(?_getNN+1)^(0+1280),c
 43283   005404                     l1131:
 43284   005404  0012               	return		;funcret
 43285   005406                     __end_of_getNN:
 43286                           	callstack 0
 43287                           
 43288 ;; *************** function _getHash *****************
 43289 ;; Defined at:
 43290 ;;		line 993 in file "../../VLCBlib_PIC/event_teach_simple.c"
 43291 ;; Parameters:    Size  Location     Type
 43292 ;;  nn              2   27[COMRAM] unsigned short 
 43293 ;;  en              2   29[COMRAM] unsigned short 
 43294 ;; Auto vars:     Size  Location     Type
 43295 ;;  hash            1   32[COMRAM] unsigned char 
 43296 ;; Return value:  Size  Location     Type
 43297 ;;                  1    wreg      unsigned char 
 43298 ;; Registers used:
 43299 ;;		wreg, status,2, status,0, prodl, prodh
 43300 ;; Tracked objects:
 43301 ;;		On entry : 0/0
 43302 ;;		On exit  : 0/0
 43303 ;;		Unchanged: 0/0
 43304 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43307 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43308 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43309 ;;Total ram usage:        6 bytes
 43310 ;; Hardware stack levels used: 1
 43311 ;; Hardware stack levels required when called: 1
 43312 ;; This function calls:
 43313 ;;		Nothing
 43314 ;; This function is called by:
 43315 ;;		_findEvent
 43316 ;;		_rebuildHashtable
 43317 ;; This function uses a non-reentrant model
 43318 ;;
 43319                           
 43320                           	psect	text136
 43321   00822E                     __ptext136:
 43322                           	callstack 0
 43323   00822E                     _getHash:
 43324                           	callstack 122
 43325   00822E                     
 43326                           ;../../VLCBlib_PIC/event_teach_simple.c: 994:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_simple.c: 996:     hash = (uint8_t)(nn ^ (nn >> 8U));
 43327   00822E  501D               	movf	(getHash@nn+1)^(0+1280),w,c
 43328   008230  181C               	xorwf	getHash@nn^(0+1280),w,c
 43329   008232  6E21               	movwf	getHash@hash^(0+1280),c
 43330   008234                     
 43331                           ;../../VLCBlib_PIC/event_teach_simple.c: 997:     hash = (uint8_t)(7U*hash + (en ^ (en>>
      +                          8U)));
 43332   008234  501F               	movf	(getHash@en+1)^(0+1280),w,c
 43333   008236  181E               	xorwf	getHash@en^(0+1280),w,c
 43334   008238  6E20               	movwf	??_getHash^(0+1280),c
 43335   00823A  5021               	movf	getHash@hash^(0+1280),w,c
 43336   00823C  0D07               	mullw	7
 43337   00823E  50F3               	movf	243,w,c
 43338   008240  2420               	addwf	??_getHash^(0+1280),w,c
 43339   008242  6E21               	movwf	getHash@hash^(0+1280),c
 43340   008244                     
 43341                           ;../../VLCBlib_PIC/event_teach_simple.c: 999:     hash %= 32;
 43342   008244  0E1F               	movlw	31
 43343   008246  1621               	andwf	getHash@hash^(0+1280),f,c
 43344   008248                     
 43345                           ;../../VLCBlib_PIC/event_teach_simple.c: 1000:     return hash;
 43346   008248  5021               	movf	getHash@hash^(0+1280),w,c
 43347   00824A  0012               	return		;funcret
 43348   00824C                     __end_of_getHash:
 43349                           	callstack 0
 43350                           
 43351 ;; *************** function _getEN *****************
 43352 ;; Defined at:
 43353 ;;		line 939 in file "../../VLCBlib_PIC/event_teach_simple.c"
 43354 ;; Parameters:    Size  Location     Type
 43355 ;;  tableIndex      1    wreg     unsigned char 
 43356 ;; Auto vars:     Size  Location     Type
 43357 ;;  tableIndex      1   25[COMRAM] unsigned char 
 43358 ;;  lo              2   23[COMRAM] unsigned short 
 43359 ;;  hi              2   21[COMRAM] unsigned short 
 43360 ;; Return value:  Size  Location     Type
 43361 ;;                  2   12[COMRAM] unsigned short 
 43362 ;; Registers used:
 43363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43364 ;; Tracked objects:
 43365 ;;		On entry : 0/0
 43366 ;;		On exit  : 0/0
 43367 ;;		Unchanged: 0/0
 43368 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43370 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43371 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43372 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43373 ;;Total ram usage:       14 bytes
 43374 ;; Hardware stack levels used: 1
 43375 ;; Hardware stack levels required when called: 3
 43376 ;; This function calls:
 43377 ;;		_readNVM
 43378 ;; This function is called by:
 43379 ;;		_doNnevn
 43380 ;;		_nerdCallback
 43381 ;;		_doNenrd
 43382 ;;		_doRqevn
 43383 ;;		_reqevCallback
 43384 ;;		_addEvent
 43385 ;;		_findEvent
 43386 ;;		_rebuildHashtable
 43387 ;; This function uses a non-reentrant model
 43388 ;;
 43389                           
 43390                           	psect	text137
 43391   006740                     __ptext137:
 43392                           	callstack 0
 43393   006740                     _getEN:
 43394                           	callstack 120
 43395                           
 43396                           ;incstack = 0
 43397                           ;getEN@tableIndex stored from wreg
 43398   006740  6E1A               	movwf	getEN@tableIndex^(0+1280),c
 43399   006742                     
 43400                           ;../../VLCBlib_PIC/event_teach_simple.c: 940:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_simple.c: 941:     uint16_t lo;;../../VLCBlib_PIC/event_teach_simple.c: 943:     lo
      +                           = (uint8_t)readNVM(FLASH_NVM_TYPE, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+3);
 43401   006742  501A               	movf	getEN@tableIndex^(0+1280),w,c
 43402   006744  6E0F               	movwf	??_getEN^(0+1280),c
 43403   006746  6A10               	clrf	(??_getEN+1)^(0+1280),c
 43404   006748  0E01               	movlw	1
 43405   00674A  020F               	mulwf	??_getEN^(0+1280),c
 43406   00674C  C4F3 F511          	movff	prodl,??_getEN+2
 43407   006750  C4F4 F512          	movff	prodh,??_getEN+3
 43408   006754  0210               	mulwf	(??_getEN+1)^(0+1280),c
 43409   006756  50F3               	movf	prodl,w,c
 43410   006758  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 43411   00675A  0E01               	movlw	1
 43412   00675C  020F               	mulwf	??_getEN^(0+1280),c
 43413   00675E  50F3               	movf	prodl,w,c
 43414   006760  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 43415   006762  C511  F513         	movff	??_getEN+2,??_getEN+4
 43416   006766  C512  F514         	movff	??_getEN+3,??_getEN+5
 43417   00676A  6A15               	clrf	(??_getEN+6)^(0+1280),c
 43418   00676C  0E03               	movlw	3
 43419   00676E  2413               	addwf	(??_getEN+4)^(0+1280),w,c
 43420   006770  6E07               	movwf	readNVM@index^(0+1280),c
 43421   006772  0E00               	movlw	0
 43422   006774  2014               	addwfc	(??_getEN+5)^(0+1280),w,c
 43423   006776  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43424   006778  0E01               	movlw	1
 43425   00677A  2015               	addwfc	(??_getEN+6)^(0+1280),w,c
 43426   00677C  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43427   00677E  0E01               	movlw	1
 43428   006780  EC6C  F03A         	call	_readNVM
 43429   006784  5007               	movf	?_readNVM^(0+1280),w,c
 43430   006786  6E18               	movwf	getEN@lo^(0+1280),c
 43431   006788  6A19               	clrf	(getEN@lo+1)^(0+1280),c
 43432                           
 43433                           ;../../VLCBlib_PIC/event_teach_simple.c: 944:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+2);
 43434   00678A  501A               	movf	getEN@tableIndex^(0+1280),w,c
 43435   00678C  6E0F               	movwf	??_getEN^(0+1280),c
 43436   00678E  6A10               	clrf	(??_getEN+1)^(0+1280),c
 43437   006790  0E01               	movlw	1
 43438   006792  020F               	mulwf	??_getEN^(0+1280),c
 43439   006794  C4F3 F511          	movff	prodl,??_getEN+2
 43440   006798  C4F4 F512          	movff	prodh,??_getEN+3
 43441   00679C  0210               	mulwf	(??_getEN+1)^(0+1280),c
 43442   00679E  50F3               	movf	prodl,w,c
 43443   0067A0  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 43444   0067A2  0E01               	movlw	1
 43445   0067A4  020F               	mulwf	??_getEN^(0+1280),c
 43446   0067A6  50F3               	movf	prodl,w,c
 43447   0067A8  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 43448   0067AA  C511  F513         	movff	??_getEN+2,??_getEN+4
 43449   0067AE  C512  F514         	movff	??_getEN+3,??_getEN+5
 43450   0067B2  6A15               	clrf	(??_getEN+6)^(0+1280),c
 43451   0067B4  0E02               	movlw	2
 43452   0067B6  2413               	addwf	(??_getEN+4)^(0+1280),w,c
 43453   0067B8  6E07               	movwf	readNVM@index^(0+1280),c
 43454   0067BA  0E00               	movlw	0
 43455   0067BC  2014               	addwfc	(??_getEN+5)^(0+1280),w,c
 43456   0067BE  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43457   0067C0  0E01               	movlw	1
 43458   0067C2  2015               	addwfc	(??_getEN+6)^(0+1280),w,c
 43459   0067C4  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43460   0067C6  0E01               	movlw	1
 43461   0067C8  EC6C  F03A         	call	_readNVM
 43462   0067CC  5007               	movf	?_readNVM^(0+1280),w,c
 43463   0067CE  6E16               	movwf	getEN@hi^(0+1280),c
 43464   0067D0  6A17               	clrf	(getEN@hi+1)^(0+1280),c
 43465   0067D2                     
 43466                           ;../../VLCBlib_PIC/event_teach_simple.c: 945:     return lo | (hi << 8);
 43467   0067D2  5016               	movf	getEN@hi^(0+1280),w,c
 43468   0067D4  6E10               	movwf	(??_getEN+1)^(0+1280),c
 43469   0067D6  6A0F               	clrf	??_getEN^(0+1280),c
 43470   0067D8  5018               	movf	getEN@lo^(0+1280),w,c
 43471   0067DA  100F               	iorwf	??_getEN^(0+1280),w,c
 43472   0067DC  6E0D               	movwf	?_getEN^(0+1280),c
 43473   0067DE  5019               	movf	(getEN@lo+1)^(0+1280),w,c
 43474   0067E0  1010               	iorwf	(??_getEN+1)^(0+1280),w,c
 43475   0067E2  6E0E               	movwf	(?_getEN+1)^(0+1280),c
 43476   0067E4  0012               	return		;funcret
 43477   0067E6                     __end_of_getEN:
 43478                           	callstack 0
 43479                           
 43480 ;; *************** function _readNVM *****************
 43481 ;; Defined at:
 43482 ;;		line 570 in file "../../VLCBlib_PIC/nvm.c"
 43483 ;; Parameters:    Size  Location     Type
 43484 ;;  type            1    wreg     enum E23276
 43485 ;;  index           3    6[COMRAM] unsigned um
 43486 ;; Auto vars:     Size  Location     Type
 43487 ;;  type            1   11[COMRAM] enum E23276
 43488 ;; Return value:  Size  Location     Type
 43489 ;;                  2    6[COMRAM] short 
 43490 ;; Registers used:
 43491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43492 ;; Tracked objects:
 43493 ;;		On entry : 0/0
 43494 ;;		On exit  : 0/0
 43495 ;;		Unchanged: 0/0
 43496 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43497 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43499 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43500 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43501 ;;Total ram usage:        6 bytes
 43502 ;; Hardware stack levels used: 1
 43503 ;; Hardware stack levels required when called: 2
 43504 ;; This function calls:
 43505 ;;		_EEPROM_Read
 43506 ;;		_FLASH_Read
 43507 ;; This function is called by:
 43508 ;;		_bootPowerUp
 43509 ;;		_canPowerUp
 43510 ;;		_getEv
 43511 ;;		_getEVs
 43512 ;;		_getNN
 43513 ;;		_getEN
 43514 ;;		_mnsPowerUp
 43515 ;;		_loadNvCache
 43516 ;;		_main
 43517 ;; This function uses a non-reentrant model
 43518 ;;
 43519                           
 43520                           	psect	text138
 43521   0074D8                     __ptext138:
 43522                           	callstack 0
 43523   0074D8                     _readNVM:
 43524                           	callstack 124
 43525                           
 43526                           ;incstack = 0
 43527                           ;readNVM@type stored from wreg
 43528   0074D8  6E0C               	movwf	readNVM@type^(0+1280),c
 43529   0074DA                     
 43530                           ;../../VLCBlib_PIC/nvm.c: 571:     switch(type) {
 43531   0074DA  EF90  F03A         	goto	l7221
 43532   0074DE                     l7207:
 43533                           
 43534                           ;../../VLCBlib_PIC/nvm.c: 573:             return EEPROM_Read((uint16_t)index);
 43535   0074DE  C507  F501         	movff	readNVM@index,EEPROM_Read@index
 43536   0074E2  C508  F502         	movff	readNVM@index+1,EEPROM_Read@index+1
 43537   0074E6  6A03               	clrf	(EEPROM_Read@index+2)^(0+1280),c
 43538   0074E8  ECA7  F03D         	call	_EEPROM_Read	;wreg free
 43539   0074EC  6E0A               	movwf	??_readNVM^(0+1280),c
 43540   0074EE  500A               	movf	??_readNVM^(0+1280),w,c
 43541   0074F0  6E07               	movwf	?_readNVM^(0+1280),c
 43542   0074F2  6A08               	clrf	(?_readNVM+1)^(0+1280),c
 43543   0074F4  EFA5  F03A         	goto	l1700
 43544   0074F8                     l7211:
 43545                           
 43546                           ;../../VLCBlib_PIC/nvm.c: 579:             return FLASH_Read(index);
 43547   0074F8  C507  F501         	movff	readNVM@index,FLASH_Read@address
 43548   0074FC  C508  F502         	movff	readNVM@index+1,FLASH_Read@address+1
 43549   007500  C509  F503         	movff	readNVM@index+2,FLASH_Read@address+2
 43550   007504  ECBB  F039         	call	_FLASH_Read	;wreg free
 43551   007508  6E0A               	movwf	??_readNVM^(0+1280),c
 43552   00750A  500A               	movf	??_readNVM^(0+1280),w,c
 43553   00750C  6E07               	movwf	?_readNVM^(0+1280),c
 43554   00750E  6A08               	clrf	(?_readNVM+1)^(0+1280),c
 43555   007510  EFA5  F03A         	goto	l1700
 43556   007514                     l7215:
 43557                           
 43558                           ;../../VLCBlib_PIC/nvm.c: 582:             return -GRSP_UNKNOWN_NVM_TYPE;
 43559   007514  0EFF               	movlw	255
 43560   007516  6E08               	movwf	(?_readNVM+1)^(0+1280),c
 43561   007518  0E02               	movlw	2
 43562   00751A  6E07               	movwf	?_readNVM^(0+1280),c
 43563   00751C  EFA5  F03A         	goto	l1700
 43564   007520                     l7221:
 43565   007520  500C               	movf	readNVM@type^(0+1280),w,c
 43566   007522  6E0A               	movwf	??_readNVM^(0+1280),c
 43567   007524  6A0B               	clrf	(??_readNVM+1)^(0+1280),c
 43568                           
 43569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 43570                           ; Switch size 1, requested type "simple"
 43571                           ; Number of cases is 1, Range of values is 0 to 0
 43572                           ; switch strategies available:
 43573                           ; Name         Instructions Cycles
 43574                           ; simple_byte            4     3 (average)
 43575                           ;	Chosen strategy is simple_byte
 43576   007526  500B               	movf	(??_readNVM+1)^(0+1280),w,c
 43577   007528  0A00               	xorlw	0	; case 0
 43578   00752A  B4D8               	btfsc	status,2,c
 43579   00752C  EF9A  F03A         	goto	l11647
 43580   007530  EF8A  F03A         	goto	l7215
 43581   007534                     l11647:
 43582                           
 43583                           ; Switch size 1, requested type "simple"
 43584                           ; Number of cases is 2, Range of values is 0 to 1
 43585                           ; switch strategies available:
 43586                           ; Name         Instructions Cycles
 43587                           ; simple_byte            7     4 (average)
 43588                           ;	Chosen strategy is simple_byte
 43589   007534  500A               	movf	??_readNVM^(0+1280),w,c
 43590   007536  0A00               	xorlw	0	; case 0
 43591   007538  B4D8               	btfsc	status,2,c
 43592   00753A  EF6F  F03A         	goto	l7207
 43593   00753E  0A01               	xorlw	1	; case 1
 43594   007540  B4D8               	btfsc	status,2,c
 43595   007542  EF7C  F03A         	goto	l7211
 43596   007546  EF8A  F03A         	goto	l7215
 43597   00754A                     l1700:
 43598   00754A  0012               	return		;funcret
 43599   00754C                     __end_of_readNVM:
 43600                           	callstack 0
 43601                           
 43602 ;; *************** function _FLASH_Read *****************
 43603 ;; Defined at:
 43604 ;;		line 315 in file "../../VLCBlib_PIC/nvm.c"
 43605 ;; Parameters:    Size  Location     Type
 43606 ;;  address         3    0[COMRAM] unsigned um
 43607 ;; Auto vars:     Size  Location     Type
 43608 ;;		None
 43609 ;; Return value:  Size  Location     Type
 43610 ;;                  1    wreg      unsigned char 
 43611 ;; Registers used:
 43612 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43613 ;; Tracked objects:
 43614 ;;		On entry : 0/0
 43615 ;;		On exit  : 0/0
 43616 ;;		Unchanged: 0/0
 43617 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43618 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43620 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43621 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43622 ;;Total ram usage:        6 bytes
 43623 ;; Hardware stack levels used: 1
 43624 ;; Hardware stack levels required when called: 1
 43625 ;; This function calls:
 43626 ;;		Nothing
 43627 ;; This function is called by:
 43628 ;;		_readNVM
 43629 ;; This function uses a non-reentrant model
 43630 ;;
 43631                           
 43632                           	psect	text139
 43633   007376                     __ptext139:
 43634                           	callstack 0
 43635   007376                     _FLASH_Read:
 43636                           	callstack 124
 43637   007376                     
 43638                           ;../../VLCBlib_PIC/nvm.c: 317:     if ((address&(~((flash_address_t)(256U)-1))) == flash
      +                          Block) {
 43639   007376  0E00               	movlw	0
 43640   007378  1401               	andwf	FLASH_Read@address^(0+1280),w,c
 43641   00737A  6E04               	movwf	??_FLASH_Read^(0+1280),c
 43642   00737C  0EFF               	movlw	255
 43643   00737E  1402               	andwf	(FLASH_Read@address+1)^(0+1280),w,c
 43644   007380  6E05               	movwf	(??_FLASH_Read+1)^(0+1280),c
 43645   007382  0EFF               	movlw	255
 43646   007384  1403               	andwf	(FLASH_Read@address+2)^(0+1280),w,c
 43647   007386  6E06               	movwf	(??_FLASH_Read+2)^(0+1280),c
 43648   007388  0105               	movlb	5	; () banked
 43649   00738A  5184               	movf	_flashBlock& (0+255),w,b
 43650   00738C  1804               	xorwf	??_FLASH_Read^(0+1280),w,c
 43651   00738E  E10A               	bnz	u4421
 43652   007390  5185               	movf	(_flashBlock+1)& (0+255),w,b
 43653   007392  1805               	xorwf	(??_FLASH_Read+1)^(0+1280),w,c
 43654   007394  E107               	bnz	u4421
 43655   007396  5186               	movf	(_flashBlock+2)& (0+255),w,b
 43656   007398  1806               	xorwf	(??_FLASH_Read+2)^(0+1280),w,c
 43657   00739A  A4D8               	btfss	status,2,c
 43658   00739C  EFD2  F039         	goto	u4421
 43659   0073A0  EFD4  F039         	goto	u4420
 43660   0073A4                     u4421:
 43661   0073A4  EFE3  F039         	goto	l1641
 43662   0073A8                     u4420:
 43663   0073A8                     
 43664                           ; BSR set to: 5
 43665                           ;../../VLCBlib_PIC/nvm.c: 319:         return flashBuffer[(address&((256U)-1))];
 43666   0073A8  0EFF               	movlw	255
 43667   0073AA  1401               	andwf	FLASH_Read@address^(0+1280),w,c
 43668   0073AC  6E04               	movwf	??_FLASH_Read^(0+1280),c
 43669   0073AE  0E00               	movlw	0
 43670   0073B0  1402               	andwf	(FLASH_Read@address+1)^(0+1280),w,c
 43671   0073B2  6E05               	movwf	(??_FLASH_Read+1)^(0+1280),c
 43672   0073B4  0E00               	movlw	0
 43673   0073B6  2404               	addwf	??_FLASH_Read^(0+1280),w,c
 43674   0073B8  6ED9               	movwf	fsr2l,c
 43675   0073BA  0E37               	movlw	55
 43676   0073BC  2005               	addwfc	(??_FLASH_Read+1)^(0+1280),w,c
 43677   0073BE  6EDA               	movwf	fsr2h,c
 43678   0073C0  50DF               	movf	indf2,w,c
 43679   0073C2  EFF6  F039         	goto	l1642
 43680   0073C6                     l1641:
 43681                           
 43682                           ; BSR set to: 5
 43683                           ;../../VLCBlib_PIC/nvm.c: 329:         TBLPTRU = (uint8_t) (address >> 16);
 43684   0073C6  C503  F4F8         	movff	FLASH_Read@address+2,tblptru	;volatile
 43685   0073CA                     
 43686                           ; BSR set to: 5
 43687                           ;../../VLCBlib_PIC/nvm.c: 330:         TBLPTRH = (uint8_t) (address >> 8);
 43688   0073CA  C501  F504         	movff	FLASH_Read@address,??_FLASH_Read
 43689   0073CE  C502  F505         	movff	FLASH_Read@address+1,??_FLASH_Read+1
 43690   0073D2  C503  F506         	movff	FLASH_Read@address+2,??_FLASH_Read+2
 43691   0073D6  C505  F504         	movff	??_FLASH_Read+1,??_FLASH_Read
 43692   0073DA  C506  F505         	movff	??_FLASH_Read+2,??_FLASH_Read+1
 43693   0073DE  6A06               	clrf	(??_FLASH_Read+2)^(0+1280),c
 43694   0073E0  5004               	movf	??_FLASH_Read^(0+1280),w,c
 43695   0073E2  6EF7               	movwf	247,c	;volatile
 43696   0073E4                     
 43697                           ; BSR set to: 5
 43698                           ;../../VLCBlib_PIC/nvm.c: 331:         TBLPTRL = (uint8_t) address;
 43699   0073E4  C501  F4F6         	movff	FLASH_Read@address,tblptrl	;volatile
 43700   0073E8  0008               	tblrd		*	;# 
 43701                           
 43702                           ;../../VLCBlib_PIC/nvm.c: 335:         return TABLAT;
 43703   0073EA  50F5               	movf	245,w,c	;volatile
 43704   0073EC                     l1642:
 43705   0073EC  0012               	return		;funcret
 43706   0073EE                     __end_of_FLASH_Read:
 43707                           	callstack 0
 43708                           
 43709 ;; *************** function _EEPROM_Read *****************
 43710 ;; Defined at:
 43711 ;;		line 171 in file "../../VLCBlib_PIC/nvm.c"
 43712 ;; Parameters:    Size  Location     Type
 43713 ;;  index           3    0[COMRAM] unsigned um
 43714 ;; Auto vars:     Size  Location     Type
 43715 ;;		None
 43716 ;; Return value:  Size  Location     Type
 43717 ;;                  1    wreg      unsigned char 
 43718 ;; Registers used:
 43719 ;;		wreg, status,2
 43720 ;; Tracked objects:
 43721 ;;		On entry : 0/0
 43722 ;;		On exit  : 0/0
 43723 ;;		Unchanged: 0/0
 43724 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43725 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43727 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43728 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43729 ;;Total ram usage:        6 bytes
 43730 ;; Hardware stack levels used: 1
 43731 ;; Hardware stack levels required when called: 1
 43732 ;; This function calls:
 43733 ;;		Nothing
 43734 ;; This function is called by:
 43735 ;;		_EEPROM_Write
 43736 ;;		_readNVM
 43737 ;; This function uses a non-reentrant model
 43738 ;;
 43739                           
 43740                           	psect	text140
 43741   007B4E                     __ptext140:
 43742                           	callstack 0
 43743   007B4E                     _EEPROM_Read:
 43744                           	callstack 124
 43745   007B4E                     l1619:
 43746                           
 43747                           ;../../VLCBlib_PIC/nvm.c: 191:     while (NVMCON0bits.GO)
 43748   007B4E  0100               	movlb	0	; () banked
 43749   007B50  B140               	btfsc	64,0,b	;volatile
 43750   007B52  EFAD  F03D         	goto	u4401
 43751   007B56  EFAF  F03D         	goto	u4400
 43752   007B5A                     u4401:
 43753   007B5A  EFA7  F03D         	goto	l1619
 43754   007B5E                     u4400:
 43755   007B5E                     
 43756                           ; BSR set to: 0
 43757                           ;../../VLCBlib_PIC/nvm.c: 194:     NVMADRU = 0x38;
 43758   007B5E  0E38               	movlw	56
 43759   007B60  6F45               	movwf	69,b	;volatile
 43760                           
 43761                           ;../../VLCBlib_PIC/nvm.c: 195:     NVMADRH = (uint8_t) (index >> 8);
 43762   007B62  C501  F504         	movff	EEPROM_Read@index,??_EEPROM_Read
 43763   007B66  C502  F505         	movff	EEPROM_Read@index+1,??_EEPROM_Read+1
 43764   007B6A  C503  F506         	movff	EEPROM_Read@index+2,??_EEPROM_Read+2
 43765   007B6E  C505  F504         	movff	??_EEPROM_Read+1,??_EEPROM_Read
 43766   007B72  C506  F505         	movff	??_EEPROM_Read+2,??_EEPROM_Read+1
 43767   007B76  6A06               	clrf	(??_EEPROM_Read+2)^(0+1280),c
 43768   007B78  5004               	movf	??_EEPROM_Read^(0+1280),w,c
 43769   007B7A  6F44               	movwf	68,b	;volatile
 43770   007B7C                     
 43771                           ; BSR set to: 0
 43772                           ;../../VLCBlib_PIC/nvm.c: 196:     NVMADRL = (uint8_t) index;
 43773   007B7C  C501  F043         	movff	EEPROM_Read@index,67	;volatile
 43774                           
 43775                           ;../../VLCBlib_PIC/nvm.c: 199:     NVMCON1bits.NVMCMD = 0x00;
 43776   007B80  0EF8               	movlw	-8
 43777   007B82  1741               	andwf	65,f,b	;volsfr
 43778   007B84                     
 43779                           ; BSR set to: 0
 43780                           ;../../VLCBlib_PIC/nvm.c: 202:     NVMCON0bits.GO = 1;
 43781   007B84  8140               	bsf	64,0,b	;volatile
 43782   007B86                     l1622:
 43783                           
 43784                           ; BSR set to: 0
 43785                           ;../../VLCBlib_PIC/nvm.c: 203:     while (NVMCON0bits.GO)
 43786   007B86  B140               	btfsc	64,0,b	;volatile
 43787   007B88  EFC8  F03D         	goto	u4411
 43788   007B8C  EFCA  F03D         	goto	u4410
 43789   007B90                     u4411:
 43790   007B90  EFC3  F03D         	goto	l1622
 43791   007B94                     u4410:
 43792   007B94                     
 43793                           ; BSR set to: 0
 43794                           ;../../VLCBlib_PIC/nvm.c: 207:     NVMCON1bits.NVMCMD = 0x07;
 43795   007B94  0E07               	movlw	7
 43796   007B96  1341               	iorwf	65,f,b	;volsfr
 43797                           
 43798                           ;../../VLCBlib_PIC/nvm.c: 208:     return NVMDATL;
 43799   007B98  5146               	movf	70,w,b	;volatile
 43800   007B9A                     
 43801                           ; BSR set to: 0
 43802   007B9A  0012               	return		;funcret
 43803   007B9C                     __end_of_EEPROM_Read:
 43804                           	callstack 0
 43805                           
 43806 ;; *************** function _APP_testMode *****************
 43807 ;; Defined at:
 43808 ;;		line 138 in file "../main.c"
 43809 ;; Parameters:    Size  Location     Type
 43810 ;;		None
 43811 ;; Auto vars:     Size  Location     Type
 43812 ;;  i               1   16[COMRAM] unsigned char 
 43813 ;;  step            1   15[COMRAM] unsigned char 
 43814 ;;  c               1   14[COMRAM] unsigned char 
 43815 ;; Return value:  Size  Location     Type
 43816 ;;                  1    wreg      void 
 43817 ;; Registers used:
 43818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43819 ;; Tracked objects:
 43820 ;;		On entry : 0/0
 43821 ;;		On exit  : 0/0
 43822 ;;		Unchanged: 0/0
 43823 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43825 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43826 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43827 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43828 ;;Total ram usage:        7 bytes
 43829 ;; Hardware stack levels used: 1
 43830 ;; Hardware stack levels required when called: 2
 43831 ;; This function calls:
 43832 ;;		_initARGB
 43833 ;;		_tickGet
 43834 ;;		_updateLedRange
 43835 ;; This function is called by:
 43836 ;;		_checkPowerOnPb
 43837 ;; This function uses a non-reentrant model
 43838 ;;
 43839                           
 43840                           	psect	text141
 43841   003F9E                     __ptext141:
 43842                           	callstack 0
 43843   003F9E                     _APP_testMode:
 43844                           	callstack 123
 43845   003F9E                     
 43846                           ;../main.c: 139:     uint8_t step;;../main.c: 140:     uint8_t i,c;;../main.c: 142:     
      +                          initARGB();
 43847   003F9E  EC6B  F025         	call	_initARGB	;wreg free
 43848   003FA2                     
 43849                           ;../main.c: 143:     ANSELA = 0x00;
 43850   003FA2  0104               	movlb	4	; () banked
 43851   003FA4  6B00               	clrf	0,b	;volatile
 43852   003FA6                     
 43853                           ; BSR set to: 4
 43854                           ;../main.c: 144:     ANSELB = 0x00;
 43855   003FA6  6B08               	clrf	8,b	;volatile
 43856   003FA8                     
 43857                           ; BSR set to: 4
 43858                           ;../main.c: 145:     ANSELC = 0x00;
 43859   003FA8  6B10               	clrf	16,b	;volatile
 43860   003FAA                     
 43861                           ; BSR set to: 4
 43862                           ;../main.c: 148:     (INTCON0bits.GIE = 1);
 43863   003FAA  8ED6               	bsf	214,7,c	;volatile
 43864   003FAC                     
 43865                           ; BSR set to: 4
 43866                           ;../main.c: 150:     testTime.val = tickGet();
 43867   003FAC  ECF7  F039         	call	_tickGet	;wreg free
 43868   003FB0  C501  F57C         	movff	?_tickGet,_testTime
 43869   003FB4  C502  F57D         	movff	?_tickGet+1,_testTime+1
 43870   003FB8  C503  F57E         	movff	?_tickGet+2,_testTime+2
 43871   003FBC  C504  F57F         	movff	?_tickGet+3,_testTime+3
 43872   003FC0                     
 43873                           ;../main.c: 152:     step = 0;
 43874   003FC0  6A10               	clrf	APP_testMode@step^(0+1280),c
 43875   003FC2                     l9209:
 43876                           
 43877                           ;../main.c: 154:         if ((tickGet() - testTime.val) > (4 * 62500)) {
 43878   003FC2  ECF7  F039         	call	_tickGet	;wreg free
 43879   003FC6  0105               	movlb	5	; () banked
 43880   003FC8  517C               	movf	_testTime& (0+255),w,b
 43881   003FCA  5C01               	subwf	?_tickGet^(0+1280),w,c
 43882   003FCC  6E0B               	movwf	??_APP_testMode^(0+1280),c
 43883   003FCE  517D               	movf	(_testTime+1)& (0+255),w,b
 43884   003FD0  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 43885   003FD2  6E0C               	movwf	(??_APP_testMode+1)^(0+1280),c
 43886   003FD4  517E               	movf	(_testTime+2)& (0+255),w,b
 43887   003FD6  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 43888   003FD8  6E0D               	movwf	(??_APP_testMode+2)^(0+1280),c
 43889   003FDA  517F               	movf	(_testTime+3)& (0+255),w,b
 43890   003FDC  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 43891   003FDE  6E0E               	movwf	(??_APP_testMode+3)^(0+1280),c
 43892   003FE0  500E               	movf	(??_APP_testMode+3)^(0+1280),w,c
 43893   003FE2  E10D               	bnz	u6610
 43894   003FE4  0E91               	movlw	145
 43895   003FE6  5C0B               	subwf	??_APP_testMode^(0+1280),w,c
 43896   003FE8  0ED0               	movlw	208
 43897   003FEA  580C               	subwfb	(??_APP_testMode+1)^(0+1280),w,c
 43898   003FEC  0E03               	movlw	3
 43899   003FEE  580D               	subwfb	(??_APP_testMode+2)^(0+1280),w,c
 43900   003FF0  A0D8               	btfss	status,0,c
 43901   003FF2  EFFD  F01F         	goto	u6611
 43902   003FF6  EFFF  F01F         	goto	u6610
 43903   003FFA                     u6611:
 43904   003FFA  EFE4  F020         	goto	l9259
 43905   003FFE                     u6610:
 43906   003FFE                     
 43907                           ; BSR set to: 5
 43908                           ;../main.c: 155:             testTime.val = tickGet();
 43909   003FFE  ECF7  F039         	call	_tickGet	;wreg free
 43910   004002  C501  F57C         	movff	?_tickGet,_testTime
 43911   004006  C502  F57D         	movff	?_tickGet+1,_testTime+1
 43912   00400A  C503  F57E         	movff	?_tickGet+2,_testTime+2
 43913   00400E  C504  F57F         	movff	?_tickGet+3,_testTime+3
 43914   004012                     
 43915                           ;../main.c: 156:             step++;
 43916   004012  2A10               	incf	APP_testMode@step^(0+1280),f,c
 43917   004014                     
 43918                           ;../main.c: 157:             if (step >= 6) step = 0;
 43919   004014  0E05               	movlw	5
 43920   004016  6410               	cpfsgt	APP_testMode@step^(0+1280),c
 43921   004018  EF10  F020         	goto	u6621
 43922   00401C  EF12  F020         	goto	u6620
 43923   004020                     u6621:
 43924   004020  EFC9  F020         	goto	l9257
 43925   004024                     u6620:
 43926   004024  6A10               	clrf	APP_testMode@step^(0+1280),c
 43927   004026  EFC9  F020         	goto	l9257
 43928   00402A                     l9219:
 43929                           
 43930                           ;../main.c: 161:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          x99));
 43931   00402A  0EFE               	movlw	254
 43932   00402C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43933   00402E  0E99               	movlw	153
 43934   004030  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43935   004032  0E00               	movlw	0
 43936   004034  EC82  F03E         	call	_updateLedRange
 43937                           
 43938                           ;../main.c: 162:                     break;
 43939   004038  EFE4  F020         	goto	l9259
 43940   00403C                     l9221:
 43941                           
 43942                           ;../main.c: 164:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          xAA));
 43943   00403C  0EFE               	movlw	254
 43944   00403E  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43945   004040  0EAA               	movlw	170
 43946   004042  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43947   004044  0E00               	movlw	0
 43948   004046  EC82  F03E         	call	_updateLedRange
 43949                           
 43950                           ;../main.c: 165:                     break;
 43951   00404A  EFE4  F020         	goto	l9259
 43952   00404E                     l9223:
 43953                           
 43954                           ;../main.c: 167:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          xBB));
 43955   00404E  0EFE               	movlw	254
 43956   004050  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43957   004052  0EBB               	movlw	187
 43958   004054  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43959   004056  0E00               	movlw	0
 43960   004058  EC82  F03E         	call	_updateLedRange
 43961                           
 43962                           ;../main.c: 168:                     break;
 43963   00405C  EFE4  F020         	goto	l9259
 43964   004060                     l9225:
 43965                           
 43966                           ;../main.c: 170:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          x00));
 43967   004060  0EFE               	movlw	254
 43968   004062  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43969   004064  0E00               	movlw	0
 43970   004066  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43971   004068  0E00               	movlw	0
 43972   00406A  EC82  F03E         	call	_updateLedRange
 43973   00406E                     
 43974                           ;../main.c: 171:                     for (i=0,c=1; i<255; i++) {
 43975   00406E  6A11               	clrf	APP_testMode@i^(0+1280),c
 43976   004070  0E01               	movlw	1
 43977   004072  6E0F               	movwf	APP_testMode@c^(0+1280),c
 43978   004074                     l9235:
 43979                           
 43980                           ;../main.c: 172:                         ledPaletteIndexes[i].asByte = c;
 43981   004074  0E00               	movlw	low _ledPaletteIndexes
 43982   004076  2411               	addwf	APP_testMode@i^(0+1280),w,c
 43983   004078  6ED9               	movwf	fsr2l,c
 43984   00407A  6ADA               	clrf	fsr2h,c
 43985   00407C  0E07               	movlw	high _ledPaletteIndexes
 43986   00407E  22DA               	addwfc	fsr2h,f,c
 43987   004080  C50F  F4DF         	movff	APP_testMode@c,indf2
 43988   004084                     
 43989                           ;../main.c: 173:                         c++;
 43990   004084  2A0F               	incf	APP_testMode@c^(0+1280),f,c
 43991   004086                     
 43992                           ;../main.c: 174:                         if (c >= 0x10) c=1;
 43993   004086  0E0F               	movlw	15
 43994   004088  640F               	cpfsgt	APP_testMode@c^(0+1280),c
 43995   00408A  EF49  F020         	goto	u6631
 43996   00408E  EF4B  F020         	goto	u6630
 43997   004092                     u6631:
 43998   004092  EF4D  F020         	goto	l9243
 43999   004096                     u6630:
 44000   004096  0E01               	movlw	1
 44001   004098  6E0F               	movwf	APP_testMode@c^(0+1280),c
 44002   00409A                     l9243:
 44003                           
 44004                           ;../main.c: 175:                     }
 44005   00409A  2A11               	incf	APP_testMode@i^(0+1280),f,c
 44006   00409C  2811               	incf	APP_testMode@i^(0+1280),w,c
 44007   00409E  A4D8               	btfss	status,2,c
 44008   0040A0  EF54  F020         	goto	u6641
 44009   0040A4  EF56  F020         	goto	u6640
 44010   0040A8                     u6641:
 44011   0040A8  EF3A  F020         	goto	l9235
 44012   0040AC                     u6640:
 44013   0040AC  EFE4  F020         	goto	l9259
 44014   0040B0                     l9247:
 44015                           
 44016                           ;../main.c: 178:                     updateLedRange(0, 19, (PaletteIndex)((uint8_t)0x0F)
      +                          );
 44017   0040B0  0E13               	movlw	19
 44018   0040B2  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44019   0040B4  0E0F               	movlw	15
 44020   0040B6  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44021   0040B8  0E00               	movlw	0
 44022   0040BA  EC82  F03E         	call	_updateLedRange
 44023                           
 44024                           ;../main.c: 179:                     updateLedRange(20, 39, (PaletteIndex)((uint8_t)0xF0
      +                          ));
 44025   0040BE  0E27               	movlw	39
 44026   0040C0  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44027   0040C2  0EF0               	movlw	240
 44028   0040C4  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44029   0040C6  0E14               	movlw	20
 44030   0040C8  EC82  F03E         	call	_updateLedRange
 44031                           
 44032                           ;../main.c: 180:                     updateLedRange(40, 59, (PaletteIndex)((uint8_t)0x0F
      +                          ));
 44033   0040CC  0E3B               	movlw	59
 44034   0040CE  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44035   0040D0  0E0F               	movlw	15
 44036   0040D2  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44037   0040D4  0E28               	movlw	40
 44038   0040D6  EC82  F03E         	call	_updateLedRange
 44039                           
 44040                           ;../main.c: 181:                     updateLedRange(60, 79, (PaletteIndex)((uint8_t)0xF0
      +                          ));
 44041   0040DA  0E4F               	movlw	79
 44042   0040DC  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44043   0040DE  0EF0               	movlw	240
 44044   0040E0  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44045   0040E2  0E3C               	movlw	60
 44046   0040E4  EC82  F03E         	call	_updateLedRange
 44047                           
 44048                           ;../main.c: 182:                     updateLedRange(80, 99, (PaletteIndex)((uint8_t)0x0F
      +                          ));
 44049   0040E8  0E63               	movlw	99
 44050   0040EA  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44051   0040EC  0E0F               	movlw	15
 44052   0040EE  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44053   0040F0  0E50               	movlw	80
 44054   0040F2  EC82  F03E         	call	_updateLedRange
 44055                           
 44056                           ;../main.c: 183:                     updateLedRange(100, 119, (PaletteIndex)((uint8_t)0x
      +                          F0));
 44057   0040F6  0E77               	movlw	119
 44058   0040F8  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44059   0040FA  0EF0               	movlw	240
 44060   0040FC  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44061   0040FE  0E64               	movlw	100
 44062   004100  EC82  F03E         	call	_updateLedRange
 44063                           
 44064                           ;../main.c: 184:                     updateLedRange(120, 139, (PaletteIndex)((uint8_t)0x
      +                          0F));
 44065   004104  0E8B               	movlw	139
 44066   004106  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44067   004108  0E0F               	movlw	15
 44068   00410A  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44069   00410C  0E78               	movlw	120
 44070   00410E  EC82  F03E         	call	_updateLedRange
 44071                           
 44072                           ;../main.c: 185:                     updateLedRange(140, 159, (PaletteIndex)((uint8_t)0x
      +                          F0));
 44073   004112  0E9F               	movlw	159
 44074   004114  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44075   004116  0EF0               	movlw	240
 44076   004118  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44077   00411A  0E8C               	movlw	140
 44078   00411C  EC82  F03E         	call	_updateLedRange
 44079                           
 44080                           ;../main.c: 186:                     updateLedRange(160, 179, (PaletteIndex)((uint8_t)0x
      +                          0F));
 44081   004120  0EB3               	movlw	179
 44082   004122  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44083   004124  0E0F               	movlw	15
 44084   004126  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44085   004128  0EA0               	movlw	160
 44086   00412A  EC82  F03E         	call	_updateLedRange
 44087                           
 44088                           ;../main.c: 187:                     updateLedRange(180, 199, (PaletteIndex)((uint8_t)0x
      +                          F0));
 44089   00412E  0EC7               	movlw	199
 44090   004130  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44091   004132  0EF0               	movlw	240
 44092   004134  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44093   004136  0EB4               	movlw	180
 44094   004138  EC82  F03E         	call	_updateLedRange
 44095                           
 44096                           ;../main.c: 188:                     updateLedRange(200, 219, (PaletteIndex)((uint8_t)0x
      +                          0F));
 44097   00413C  0EDB               	movlw	219
 44098   00413E  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44099   004140  0E0F               	movlw	15
 44100   004142  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44101   004144  0EC8               	movlw	200
 44102   004146  EC82  F03E         	call	_updateLedRange
 44103                           
 44104                           ;../main.c: 189:                     updateLedRange(220, 239, (PaletteIndex)((uint8_t)0x
      +                          F0));
 44105   00414A  0EEF               	movlw	239
 44106   00414C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44107   00414E  0EF0               	movlw	240
 44108   004150  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44109   004152  0EDC               	movlw	220
 44110   004154  EC82  F03E         	call	_updateLedRange
 44111                           
 44112                           ;../main.c: 190:                     updateLedRange(240, 255 -1, (PaletteIndex)((uint8_t
      +                          )0x0F));
 44113   004158  0EFE               	movlw	254
 44114   00415A  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44115   00415C  0E0F               	movlw	15
 44116   00415E  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44117   004160  0EF0               	movlw	240
 44118   004162  EC82  F03E         	call	_updateLedRange
 44119                           
 44120                           ;../main.c: 191:                     break;
 44121   004166  EFE4  F020         	goto	l9259
 44122   00416A                     l9249:
 44123                           
 44124                           ;../main.c: 193:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          x00));
 44125   00416A  0EFE               	movlw	254
 44126   00416C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44127   00416E  0E00               	movlw	0
 44128   004170  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44129   004172  0E00               	movlw	0
 44130   004174  EC82  F03E         	call	_updateLedRange
 44131   004178                     
 44132                           ;../main.c: 194:                     i=0;
 44133   004178  6A11               	clrf	APP_testMode@i^(0+1280),c
 44134   00417A                     
 44135                           ;../main.c: 195:                     subtestTime.val = tickGet();
 44136   00417A  ECF7  F039         	call	_tickGet	;wreg free
 44137   00417E  C501  F578         	movff	?_tickGet,_subtestTime
 44138   004182  C502  F579         	movff	?_tickGet+1,_subtestTime+1
 44139   004186  C503  F57A         	movff	?_tickGet+2,_subtestTime+2
 44140   00418A  C504  F57B         	movff	?_tickGet+3,_subtestTime+3
 44141                           
 44142                           ;../main.c: 196:                     break;
 44143   00418E  EFE4  F020         	goto	l9259
 44144   004192                     l9257:
 44145   004192  5010               	movf	APP_testMode@step^(0+1280),w,c
 44146                           
 44147                           ; Switch size 1, requested type "simple"
 44148                           ; Number of cases is 6, Range of values is 0 to 5
 44149                           ; switch strategies available:
 44150                           ; Name         Instructions Cycles
 44151                           ; simple_byte           19    10 (average)
 44152                           ;	Chosen strategy is simple_byte
 44153   004194  0A00               	xorlw	0	; case 0
 44154   004196  B4D8               	btfsc	status,2,c
 44155   004198  EF15  F020         	goto	l9219
 44156   00419C  0A01               	xorlw	1	; case 1
 44157   00419E  B4D8               	btfsc	status,2,c
 44158   0041A0  EF1E  F020         	goto	l9221
 44159   0041A4  0A03               	xorlw	3	; case 2
 44160   0041A6  B4D8               	btfsc	status,2,c
 44161   0041A8  EF27  F020         	goto	l9223
 44162   0041AC  0A01               	xorlw	1	; case 3
 44163   0041AE  B4D8               	btfsc	status,2,c
 44164   0041B0  EF30  F020         	goto	l9225
 44165   0041B4  0A07               	xorlw	7	; case 4
 44166   0041B6  B4D8               	btfsc	status,2,c
 44167   0041B8  EF58  F020         	goto	l9247
 44168   0041BC  0A01               	xorlw	1	; case 5
 44169   0041BE  B4D8               	btfsc	status,2,c
 44170   0041C0  EFB5  F020         	goto	l9249
 44171   0041C4  EFE4  F020         	goto	l9259
 44172   0041C8                     l9259:
 44173                           
 44174                           ;../main.c: 199:         if (step == 5) {
 44175   0041C8  0E05               	movlw	5
 44176   0041CA  1810               	xorwf	APP_testMode@step^(0+1280),w,c
 44177   0041CC  A4D8               	btfss	status,2,c
 44178   0041CE  EFEB  F020         	goto	u6651
 44179   0041D2  EFED  F020         	goto	u6650
 44180   0041D6                     u6651:
 44181   0041D6  EFE1  F01F         	goto	l9209
 44182   0041DA                     u6650:
 44183   0041DA                     
 44184                           ;../main.c: 200:             if ((tickGet() - subtestTime.val) > (62500/10)) {
 44185   0041DA  ECF7  F039         	call	_tickGet	;wreg free
 44186   0041DE  0105               	movlb	5	; () banked
 44187   0041E0  5178               	movf	_subtestTime& (0+255),w,b
 44188   0041E2  5C01               	subwf	?_tickGet^(0+1280),w,c
 44189   0041E4  6E0B               	movwf	??_APP_testMode^(0+1280),c
 44190   0041E6  5179               	movf	(_subtestTime+1)& (0+255),w,b
 44191   0041E8  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 44192   0041EA  6E0C               	movwf	(??_APP_testMode+1)^(0+1280),c
 44193   0041EC  517A               	movf	(_subtestTime+2)& (0+255),w,b
 44194   0041EE  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 44195   0041F0  6E0D               	movwf	(??_APP_testMode+2)^(0+1280),c
 44196   0041F2  517B               	movf	(_subtestTime+3)& (0+255),w,b
 44197   0041F4  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 44198   0041F6  6E0E               	movwf	(??_APP_testMode+3)^(0+1280),c
 44199   0041F8  500E               	movf	(??_APP_testMode+3)^(0+1280),w,c
 44200   0041FA  100D               	iorwf	(??_APP_testMode+2)^(0+1280),w,c
 44201   0041FC  E10B               	bnz	u6660
 44202   0041FE  0E6B               	movlw	107
 44203   004200  5C0B               	subwf	??_APP_testMode^(0+1280),w,c
 44204   004202  0E18               	movlw	24
 44205   004204  580C               	subwfb	(??_APP_testMode+1)^(0+1280),w,c
 44206   004206  A0D8               	btfss	status,0,c
 44207   004208  EF08  F021         	goto	u6661
 44208   00420C  EF0A  F021         	goto	u6660
 44209   004210                     u6661:
 44210   004210  EFE1  F01F         	goto	l9209
 44211   004214                     u6660:
 44212   004214                     
 44213                           ; BSR set to: 5
 44214                           ;../main.c: 201:                 subtestTime.val = tickGet();
 44215   004214  ECF7  F039         	call	_tickGet	;wreg free
 44216   004218  C501  F578         	movff	?_tickGet,_subtestTime
 44217   00421C  C502  F579         	movff	?_tickGet+1,_subtestTime+1
 44218   004220  C503  F57A         	movff	?_tickGet+2,_subtestTime+2
 44219   004224  C504  F57B         	movff	?_tickGet+3,_subtestTime+3
 44220   004228                     
 44221                           ;../main.c: 202:                 updateLedRange(i,i, (PaletteIndex)((uint8_t)0xFF));
 44222   004228  C511  F501         	movff	APP_testMode@i,updateLedRange@end_ledno
 44223   00422C  0EFF               	movlw	255
 44224   00422E  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44225   004230  5011               	movf	APP_testMode@i^(0+1280),w,c
 44226   004232  EC82  F03E         	call	_updateLedRange
 44227   004236                     
 44228                           ;../main.c: 203:                 i++;
 44229   004236  2A11               	incf	APP_testMode@i^(0+1280),f,c
 44230   004238  EFE1  F01F         	goto	l9209
 44231   00423C  0012               	return		;funcret
 44232   00423E                     __end_of_APP_testMode:
 44233                           	callstack 0
 44234                           
 44235 ;; *************** function _updateLedRange *****************
 44236 ;; Defined at:
 44237 ;;		line 262 in file "../canargb_leds.c"
 44238 ;; Parameters:    Size  Location     Type
 44239 ;;  start_ledno     1    wreg     unsigned char 
 44240 ;;  end_ledno       1    0[COMRAM] unsigned char 
 44241 ;;  colourIndexP    1    1[COMRAM] struct PaletteIndex
 44242 ;; Auto vars:     Size  Location     Type
 44243 ;;  start_ledno     1    2[COMRAM] unsigned char 
 44244 ;;  ledno           1    3[COMRAM] unsigned char 
 44245 ;; Return value:  Size  Location     Type
 44246 ;;                  1    wreg      void 
 44247 ;; Registers used:
 44248 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44249 ;; Tracked objects:
 44250 ;;		On entry : 0/0
 44251 ;;		On exit  : 0/0
 44252 ;;		Unchanged: 0/0
 44253 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44257 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44258 ;;Total ram usage:        4 bytes
 44259 ;; Hardware stack levels used: 1
 44260 ;; Hardware stack levels required when called: 1
 44261 ;; This function calls:
 44262 ;;		Nothing
 44263 ;; This function is called by:
 44264 ;;		_APP_testMode
 44265 ;;		_setup
 44266 ;;		_APP_processConsumedEvent
 44267 ;; This function uses a non-reentrant model
 44268 ;;
 44269                           
 44270                           	psect	text142
 44271   007D04                     __ptext142:
 44272                           	callstack 0
 44273   007D04                     _updateLedRange:
 44274                           	callstack 124
 44275                           
 44276                           ;incstack = 0
 44277                           ;updateLedRange@start_ledno stored from wreg
 44278   007D04  6E03               	movwf	updateLedRange@start_ledno^(0+1280),c
 44279   007D06                     
 44280                           ;../canargb_leds.c: 263:     uint8_t ledno;;../canargb_leds.c: 264:     if (end_ledno >=
      +                           255) end_ledno = 255 -1;
 44281   007D06  2801               	incf	updateLedRange@end_ledno^(0+1280),w,c
 44282   007D08  A4D8               	btfss	status,2,c
 44283   007D0A  EF89  F03E         	goto	u5381
 44284   007D0E  EF8B  F03E         	goto	u5380
 44285   007D12                     u5381:
 44286   007D12  EF8D  F03E         	goto	l7933
 44287   007D16                     u5380:
 44288   007D16  0EFE               	movlw	254
 44289   007D18  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44290   007D1A                     l7933:
 44291                           
 44292                           ;../canargb_leds.c: 266:     for(ledno=start_ledno; ledno<=end_ledno; ledno++) {
 44293   007D1A  C503  F504         	movff	updateLedRange@start_ledno,updateLedRange@ledno
 44294   007D1E  EF9A  F03E         	goto	l7939
 44295   007D22                     l7935:
 44296                           
 44297                           ;../canargb_leds.c: 267:         ledPaletteIndexes[ledno] = colourIndexPair;
 44298   007D22  0E00               	movlw	low _ledPaletteIndexes
 44299   007D24  2404               	addwf	updateLedRange@ledno^(0+1280),w,c
 44300   007D26  6ED9               	movwf	fsr2l,c
 44301   007D28  6ADA               	clrf	fsr2h,c
 44302   007D2A  0E07               	movlw	high _ledPaletteIndexes
 44303   007D2C  22DA               	addwfc	fsr2h,f,c
 44304   007D2E  C502  F4DF         	movff	updateLedRange@colourIndexPair,indf2
 44305   007D32                     
 44306                           ;../canargb_leds.c: 268:     }
 44307   007D32  2A04               	incf	updateLedRange@ledno^(0+1280),f,c
 44308   007D34                     l7939:
 44309   007D34  5004               	movf	updateLedRange@ledno^(0+1280),w,c
 44310   007D36  5C01               	subwf	updateLedRange@end_ledno^(0+1280),w,c
 44311   007D38  B0D8               	btfsc	status,0,c
 44312   007D3A  EFA1  F03E         	goto	u5391
 44313   007D3E  EFA3  F03E         	goto	u5390
 44314   007D42                     u5391:
 44315   007D42  EF91  F03E         	goto	l7935
 44316   007D46                     u5390:
 44317   007D46  0012               	return		;funcret
 44318   007D48                     __end_of_updateLedRange:
 44319                           	callstack 0
 44320                           
 44321 ;; *************** function _tickGet *****************
 44322 ;; Defined at:
 44323 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 44324 ;; Parameters:    Size  Location     Type
 44325 ;;		None
 44326 ;; Auto vars:     Size  Location     Type
 44327 ;;  currentTime     4    6[COMRAM] struct _TickValue
 44328 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 44329 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 44330 ;; Return value:  Size  Location     Type
 44331 ;;                  4    0[COMRAM] unsigned long 
 44332 ;; Registers used:
 44333 ;;		wreg, status,2, status,0
 44334 ;; Tracked objects:
 44335 ;;		On entry : 0/0
 44336 ;;		On exit  : 0/0
 44337 ;;		Unchanged: 0/0
 44338 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44339 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44340 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44342 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44343 ;;Total ram usage:       10 bytes
 44344 ;; Hardware stack levels used: 1
 44345 ;; Hardware stack levels required when called: 1
 44346 ;; This function calls:
 44347 ;;		Nothing
 44348 ;; This function is called by:
 44349 ;;		_APP_testMode
 44350 ;;		_setup
 44351 ;;		_loop
 44352 ;;		_canPowerUp
 44353 ;;		_startEnumeration
 44354 ;;		_handleSelfEnumeration
 44355 ;;		_processEnumeration
 44356 ;;		_mnsPowerUp
 44357 ;;		_mnsPoll
 44358 ;;		_leds_powerUp
 44359 ;;		_leds_poll
 44360 ;;		_pbDownTimer
 44361 ;;		_pbUpTimer
 44362 ;;		_poll
 44363 ;; This function uses a non-reentrant model
 44364 ;;
 44365                           
 44366                           	psect	text143
 44367   0073EE                     __ptext143:
 44368                           	callstack 0
 44369   0073EE                     _tickGet:
 44370                           	callstack 124
 44371   0073EE                     
 44372                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 44373   0073EE  6A09               	clrf	(tickGet@currentTime+2)^(0+1280),c
 44374                           
 44375                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 44376   0073F0  6A0A               	clrf	(tickGet@currentTime+3)^(0+1280),c
 44377                           
 44378                           ;../../VLCBlib_PIC/ticktime.c: 169:     TMR0IE = 0;
 44379   0073F2  9EA1               	bcf	1185,7,c	;volatile
 44380   0073F4                     l7177:
 44381                           
 44382                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = TMR0IF;
 44383   0073F4  0E00               	movlw	0
 44384   0073F6  BEB1               	btfsc	1201,7,c	;volatile
 44385   0073F8  0E01               	movlw	1
 44386   0073FA  6E06               	movwf	tickGet@IntFlag1^(0+1280),c
 44387   0073FC                     
 44388                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 44389   0073FC  C318 F507          	movff	792,tickGet@currentTime	;volatile
 44390   007400                     
 44391                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 44392   007400  C319 F508          	movff	793,tickGet@currentTime+1	;volatile
 44393                           
 44394                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = TMR0IF;
 44395   007404  0E00               	movlw	0
 44396   007406  BEB1               	btfsc	1201,7,c	;volatile
 44397   007408  0E01               	movlw	1
 44398   00740A  6E05               	movwf	tickGet@IntFlag2^(0+1280),c
 44399   00740C                     
 44400                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 44401   00740C  5005               	movf	tickGet@IntFlag2^(0+1280),w,c
 44402   00740E  1806               	xorwf	tickGet@IntFlag1^(0+1280),w,c
 44403   007410  A4D8               	btfss	status,2,c
 44404   007412  EF0D  F03A         	goto	u4471
 44405   007416  EF0F  F03A         	goto	u4470
 44406   00741A                     u4471:
 44407   00741A  EFFA  F039         	goto	l7177
 44408   00741E                     u4470:
 44409   00741E                     
 44410                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 44411   00741E  5006               	movf	tickGet@IntFlag1^(0+1280),w,c
 44412   007420  B4D8               	btfsc	status,2,c
 44413   007422  EF15  F03A         	goto	u4481
 44414   007426  EF17  F03A         	goto	u4480
 44415   00742A                     u4481:
 44416   00742A  EF23  F03A         	goto	l7195
 44417   00742E                     u4480:
 44418   00742E                     
 44419                           ;../../VLCBlib_PIC/ticktime.c: 178:         TMR0IF = 0;
 44420   00742E  9EB1               	bcf	1201,7,c	;volatile
 44421   007430                     
 44422                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 44423   007430  0105               	movlb	5	; () banked
 44424   007432  2B9A               	incf	_timerExtension1& (0+255),f,b	;volatile
 44425   007434                     
 44426                           ; BSR set to: 5
 44427                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 44428   007434  519A               	movf	_timerExtension1& (0+255),w,b	;volatile
 44429   007436  A4D8               	btfss	status,2,c
 44430   007438  EF20  F03A         	goto	u4491
 44431   00743C  EF22  F03A         	goto	u4490
 44432   007440                     u4491:
 44433   007440  EF23  F03A         	goto	l7195
 44434   007444                     u4490:
 44435   007444                     
 44436                           ; BSR set to: 5
 44437                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 44438   007444  2B99               	incf	_timerExtension2& (0+255),f,b	;volatile
 44439   007446                     l7195:
 44440                           
 44441                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 44442   007446  0105               	movlb	5	; () banked
 44443   007448  519A               	movf	_timerExtension1& (0+255),w,b	;volatile
 44444   00744A  2609               	addwf	(tickGet@currentTime+2)^(0+1280),f,c
 44445   00744C                     
 44446                           ; BSR set to: 5
 44447                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 44448   00744C  5199               	movf	_timerExtension2& (0+255),w,b	;volatile
 44449   00744E  260A               	addwf	(tickGet@currentTime+3)^(0+1280),f,c
 44450   007450                     
 44451                           ; BSR set to: 5
 44452                           ;../../VLCBlib_PIC/ticktime.c: 191:     TMR0IE = 1;
 44453   007450  8EA1               	bsf	1185,7,c	;volatile
 44454   007452                     
 44455                           ; BSR set to: 5
 44456                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 44457   007452  C507  F501         	movff	tickGet@currentTime,?_tickGet
 44458   007456  C508  F502         	movff	tickGet@currentTime+1,?_tickGet+1
 44459   00745A  C509  F503         	movff	tickGet@currentTime+2,?_tickGet+2
 44460   00745E  C50A  F504         	movff	tickGet@currentTime+3,?_tickGet+3
 44461   007462                     
 44462                           ; BSR set to: 5
 44463   007462  0012               	return		;funcret
 44464   007464                     __end_of_tickGet:
 44465                           	callstack 0
 44466                           
 44467 ;; *************** function _initARGB *****************
 44468 ;; Defined at:
 44469 ;;		line 60 in file "../canargb_leds.c"
 44470 ;; Parameters:    Size  Location     Type
 44471 ;;		None
 44472 ;; Auto vars:     Size  Location     Type
 44473 ;;  ledno           1    0[COMRAM] unsigned char 
 44474 ;; Return value:  Size  Location     Type
 44475 ;;                  1    wreg      void 
 44476 ;; Registers used:
 44477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44478 ;; Tracked objects:
 44479 ;;		On entry : 0/0
 44480 ;;		On exit  : 0/0
 44481 ;;		Unchanged: 0/0
 44482 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44484 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44486 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44487 ;;Total ram usage:        1 bytes
 44488 ;; Hardware stack levels used: 1
 44489 ;; Hardware stack levels required when called: 1
 44490 ;; This function calls:
 44491 ;;		Nothing
 44492 ;; This function is called by:
 44493 ;;		_APP_testMode
 44494 ;;		_setup
 44495 ;; This function uses a non-reentrant model
 44496 ;;
 44497                           
 44498                           	psect	text144
 44499   004AD6                     __ptext144:
 44500                           	callstack 0
 44501   004AD6                     _initARGB:
 44502                           	callstack 124
 44503   004AD6                     
 44504                           ;../canargb_leds.c: 61:     uint8_t ledno;;../canargb_leds.c: 63:     flashState = 0;
 44505   004AD6  0105               	movlb	5	; () banked
 44506   004AD8  6BAC               	clrf	_flashState& (0+255),b
 44507                           
 44508                           ;../canargb_leds.c: 65:     for (ledno=0; ledno <255; ledno++) {
 44509   004ADA  6A01               	clrf	initARGB@ledno^(0+1280),c
 44510   004ADC                     l8355:
 44511                           
 44512                           ;../canargb_leds.c: 66:         leds[ledno].r = 0;
 44513   004ADC  5001               	movf	initARGB@ledno^(0+1280),w,c
 44514   004ADE  0D03               	mullw	3
 44515   004AE0  0EFC               	movlw	low _leds
 44516   004AE2  24F3               	addwf	243,w,c
 44517   004AE4  6ED9               	movwf	fsr2l,c
 44518   004AE6  0E08               	movlw	high _leds
 44519   004AE8  20F4               	addwfc	prodh,w,c
 44520   004AEA  6EDA               	movwf	fsr2h,c
 44521   004AEC  6ADF               	clrf	indf2,c
 44522                           
 44523                           ;../canargb_leds.c: 67:         leds[ledno].g = 0;
 44524   004AEE  5001               	movf	initARGB@ledno^(0+1280),w,c
 44525   004AF0  0D03               	mullw	3
 44526   004AF2  0EFD               	movlw	low (_leds+1)
 44527   004AF4  24F3               	addwf	243,w,c
 44528   004AF6  6ED9               	movwf	fsr2l,c
 44529   004AF8  0E08               	movlw	high (_leds+1)
 44530   004AFA  20F4               	addwfc	prodh,w,c
 44531   004AFC  6EDA               	movwf	fsr2h,c
 44532   004AFE  6ADF               	clrf	indf2,c
 44533                           
 44534                           ;../canargb_leds.c: 68:         leds[ledno].b = 0;
 44535   004B00  5001               	movf	initARGB@ledno^(0+1280),w,c
 44536   004B02  0D03               	mullw	3
 44537   004B04  0EFE               	movlw	low (_leds+2)
 44538   004B06  24F3               	addwf	243,w,c
 44539   004B08  6ED9               	movwf	fsr2l,c
 44540   004B0A  0E08               	movlw	high (_leds+2)
 44541   004B0C  20F4               	addwfc	prodh,w,c
 44542   004B0E  6EDA               	movwf	fsr2h,c
 44543   004B10  6ADF               	clrf	indf2,c
 44544   004B12                     
 44545                           ;../canargb_leds.c: 69:         ledPaletteIndexes[ledno].asNibbles.flashOnPaletteIndex =
      +                           0;
 44546   004B12  0E00               	movlw	low _ledPaletteIndexes
 44547   004B14  2401               	addwf	initARGB@ledno^(0+1280),w,c
 44548   004B16  6ED9               	movwf	fsr2l,c
 44549   004B18  6ADA               	clrf	fsr2h,c
 44550   004B1A  0E07               	movlw	high _ledPaletteIndexes
 44551   004B1C  22DA               	addwfc	fsr2h,f,c
 44552   004B1E  0EF0               	movlw	-16
 44553   004B20  16DF               	andwf	223,f,c
 44554   004B22                     
 44555                           ;../canargb_leds.c: 70:         ledPaletteIndexes[ledno].asNibbles.flashOffPaletteIndex 
      +                          = 0;
 44556   004B22  0E00               	movlw	low _ledPaletteIndexes
 44557   004B24  2401               	addwf	initARGB@ledno^(0+1280),w,c
 44558   004B26  6ED9               	movwf	fsr2l,c
 44559   004B28  6ADA               	clrf	fsr2h,c
 44560   004B2A  0E07               	movlw	high _ledPaletteIndexes
 44561   004B2C  22DA               	addwfc	fsr2h,f,c
 44562   004B2E  0E0F               	movlw	-241
 44563   004B30  16DF               	andwf	223,f,c
 44564   004B32                     
 44565                           ;../canargb_leds.c: 71:     }
 44566   004B32  2A01               	incf	initARGB@ledno^(0+1280),f,c
 44567   004B34  2801               	incf	initARGB@ledno^(0+1280),w,c
 44568   004B36  A4D8               	btfss	status,2,c
 44569   004B38  EFA0  F025         	goto	u5721
 44570   004B3C  EFA2  F025         	goto	u5720
 44571   004B40                     u5721:
 44572   004B40  EF6E  F025         	goto	l8355
 44573   004B44                     u5720:
 44574   004B44                     
 44575                           ;../canargb_leds.c: 106:     TRISC = 0;
 44576   004B44  6AC8               	clrf	200,c	;volatile
 44577   004B46                     
 44578                           ;../canargb_leds.c: 107:     RC0PPS = 0x43;
 44579   004B46  0E43               	movlw	67
 44580   004B48  0102               	movlb	2	; () banked
 44581   004B4A  6F11               	movwf	17,b	;volatile
 44582                           
 44583                           ;../canargb_leds.c: 108:     RC1PPS = 0x32;
 44584   004B4C  0E32               	movlw	50
 44585   004B4E  6F12               	movwf	18,b	;volatile
 44586                           
 44587                           ;../canargb_leds.c: 109:     RC2PPS = 0x31;
 44588   004B50  0E31               	movlw	49
 44589   004B52  6F13               	movwf	19,b	;volatile
 44590                           
 44591                           ;../canargb_leds.c: 110:     RC3PPS = 0x01;
 44592   004B54  0E01               	movlw	1
 44593   004B56  6F14               	movwf	20,b	;volatile
 44594                           
 44595                           ;../canargb_leds.c: 111:     RC4PPS = 0x02;
 44596   004B58  0E02               	movlw	2
 44597   004B5A  6F15               	movwf	21,b	;volatile
 44598                           
 44599                           ;../canargb_leds.c: 112:     RC5PPS = 0x04;
 44600   004B5C  0E04               	movlw	4
 44601   004B5E  6F16               	movwf	22,b	;volatile
 44602   004B60                     
 44603                           ; BSR set to: 2
 44604                           ;../canargb_leds.c: 113:     RC6PPS = 0x00;
 44605   004B60  6B17               	clrf	23,b	;volatile
 44606   004B62                     
 44607                           ; BSR set to: 2
 44608                           ;../canargb_leds.c: 116:     {;../canargb_leds.c: 117:         SPI1CON0bits.LSBF=0;
 44609   004B62  0100               	movlb	0	; () banked
 44610   004B64  9584               	bcf	132,2,b	;volatile
 44611   004B66                     
 44612                           ; BSR set to: 0
 44613                           ;../canargb_leds.c: 118:         SPI1CON0bits.BMODE=1;
 44614   004B66  8184               	bsf	132,0,b	;volatile
 44615   004B68                     
 44616                           ; BSR set to: 0
 44617                           ;../canargb_leds.c: 119:         SPI1CON0bits.MST=1;
 44618   004B68  8384               	bsf	132,1,b	;volatile
 44619                           
 44620                           ;../canargb_leds.c: 121:         SPI1TWIDTHbits.TWIDTH=0;
 44621   004B6A  0EF8               	movlw	-8
 44622   004B6C  1788               	andwf	136,f,b	;volatile
 44623                           
 44624                           ;../canargb_leds.c: 122:         SPI1TCNT=0;
 44625   004B6E  0E00               	movlw	0
 44626   004B70  6F83               	movwf	131,b	;volatile
 44627   004B72  0E00               	movlw	0
 44628   004B74  6F82               	movwf	130,b	;volatile
 44629   004B76                     
 44630                           ; BSR set to: 0
 44631                           ;../canargb_leds.c: 124:         SPI1CON1bits.SMP=0;
 44632   004B76  9F85               	bcf	133,7,b	;volatile
 44633   004B78                     
 44634                           ; BSR set to: 0
 44635                           ;../canargb_leds.c: 125:         SPI1CON1bits.CKE=1;
 44636   004B78  8D85               	bsf	133,6,b	;volatile
 44637   004B7A                     
 44638                           ; BSR set to: 0
 44639                           ;../canargb_leds.c: 126:         SPI1CON1bits.CKP=0;
 44640   004B7A  9B85               	bcf	133,5,b	;volatile
 44641   004B7C                     
 44642                           ; BSR set to: 0
 44643                           ;../canargb_leds.c: 127:         SPI1CON1bits.SDIP=1;
 44644   004B7C  8385               	bsf	133,1,b	;volatile
 44645   004B7E                     
 44646                           ; BSR set to: 0
 44647                           ;../canargb_leds.c: 129:         SPI1CON2bits.SSET=0;
 44648   004B7E  9586               	bcf	134,2,b	;volatile
 44649   004B80                     
 44650                           ; BSR set to: 0
 44651                           ;../canargb_leds.c: 130:         SPI1CON1bits.SSP=1;
 44652   004B80  8585               	bsf	133,2,b	;volatile
 44653   004B82                     
 44654                           ; BSR set to: 0
 44655                           ;../canargb_leds.c: 131:         SPI1CON2bits.TXR=1;
 44656   004B82  8386               	bsf	134,1,b	;volatile
 44657   004B84                     
 44658                           ; BSR set to: 0
 44659                           ;../canargb_leds.c: 132:         SPI1CON2bits.RXR=0;
 44660   004B84  9186               	bcf	134,0,b	;volatile
 44661   004B86                     
 44662                           ; BSR set to: 0
 44663                           ;../canargb_leds.c: 134:         SPI1CLKbits.CLKSEL=0b00000;
 44664   004B86  6B8C               	clrf	140,b	;volatile
 44665                           
 44666                           ;../canargb_leds.c: 138:         SPI1BAUDbits.BAUD = 39;
 44667   004B88  0E27               	movlw	39
 44668   004B8A  6F89               	movwf	137,b	;volatile
 44669   004B8C                     
 44670                           ; BSR set to: 0
 44671                           ;../canargb_leds.c: 140:         SPI1INTF=0;
 44672   004B8C  6B8A               	clrf	138,b	;volatile
 44673   004B8E                     
 44674                           ; BSR set to: 0
 44675                           ;../canargb_leds.c: 141:         SPI1CON0bits.EN=1;
 44676   004B8E  8F84               	bsf	132,7,b	;volatile
 44677   004B90                     
 44678                           ; BSR set to: 0
 44679                           ;../canargb_leds.c: 142:     };../canargb_leds.c: 145:     {;../canargb_leds.c: 146:    
      +                               CLCSELECT = 0;
 44680   004B90  6BD5               	clrf	213,b	;volatile
 44681                           
 44682                           ;../canargb_leds.c: 147:         CLCnCON = 0x82;
 44683   004B92  0E82               	movlw	130
 44684   004B94  6FD6               	movwf	214,b	;volatile
 44685                           
 44686                           ;../canargb_leds.c: 148:         CLCnPOL = 0x0E;
 44687   004B96  0E0E               	movlw	14
 44688   004B98  6FD7               	movwf	215,b	;volatile
 44689                           
 44690                           ;../canargb_leds.c: 149:         CLCnSEL0 = 0x41;
 44691   004B9A  0E41               	movlw	65
 44692   004B9C  6FD8               	movwf	216,b	;volatile
 44693                           
 44694                           ;../canargb_leds.c: 150:         CLCnSEL1 = 0x41;
 44695   004B9E  0E41               	movlw	65
 44696   004BA0  6FD9               	movwf	217,b	;volatile
 44697                           
 44698                           ;../canargb_leds.c: 151:         CLCnSEL2 = 0x41;
 44699   004BA2  0E41               	movlw	65
 44700   004BA4  6FDA               	movwf	218,b	;volatile
 44701                           
 44702                           ;../canargb_leds.c: 152:         CLCnSEL3 = 0x41;
 44703   004BA6  0E41               	movlw	65
 44704   004BA8  6FDB               	movwf	219,b	;volatile
 44705                           
 44706                           ;../canargb_leds.c: 153:         CLCnGLS0 = 1;
 44707   004BAA  0E01               	movlw	1
 44708   004BAC  6FDC               	movwf	220,b	;volatile
 44709   004BAE                     
 44710                           ; BSR set to: 0
 44711                           ;../canargb_leds.c: 154:         CLCnGLS1 = 0;
 44712   004BAE  6BDD               	clrf	221,b	;volatile
 44713   004BB0                     
 44714                           ; BSR set to: 0
 44715                           ;../canargb_leds.c: 155:         CLCnGLS2 = 0;
 44716   004BB0  6BDE               	clrf	222,b	;volatile
 44717   004BB2                     
 44718                           ; BSR set to: 0
 44719                           ;../canargb_leds.c: 156:         CLCnGLS3 = 0;
 44720   004BB2  6BDF               	clrf	223,b	;volatile
 44721   004BB4                     
 44722                           ; BSR set to: 0
 44723                           ;../canargb_leds.c: 157:     };../canargb_leds.c: 160:     {;../canargb_leds.c: 161:    
      +                               T2CON = 0x0;
 44724   004BB4  0103               	movlb	3	; () banked
 44725   004BB6  6B24               	clrf	36,b	;volatile
 44726                           
 44727                           ;../canargb_leds.c: 162:         T2CLKCON = 0x02;
 44728   004BB8  0E02               	movlw	2
 44729   004BBA  6F26               	movwf	38,b	;volatile
 44730                           
 44731                           ;../canargb_leds.c: 163:         T2HLT = 0x11;
 44732   004BBC  0E11               	movlw	17
 44733   004BBE  6F25               	movwf	37,b	;volatile
 44734                           
 44735                           ;../canargb_leds.c: 164:         T2RST = 0x12;
 44736   004BC0  0E12               	movlw	18
 44737   004BC2  6F27               	movwf	39,b	;volatile
 44738                           
 44739                           ;../canargb_leds.c: 168:         T2PR = 51;
 44740   004BC4  0E33               	movlw	51
 44741   004BC6  6F23               	movwf	35,b	;volatile
 44742   004BC8                     
 44743                           ; BSR set to: 3
 44744                           ;../canargb_leds.c: 170:     };../canargb_leds.c: 173:     {;../canargb_leds.c: 174:    
      +                               T4CON = 0x0;
 44745   004BC8  6B30               	clrf	48,b	;volatile
 44746                           
 44747                           ;../canargb_leds.c: 175:         T4CLKCON = 0x02;
 44748   004BCA  0E02               	movlw	2
 44749   004BCC  6F32               	movwf	50,b	;volatile
 44750                           
 44751                           ;../canargb_leds.c: 176:         T4HLT = 0x11;
 44752   004BCE  0E11               	movlw	17
 44753   004BD0  6F31               	movwf	49,b	;volatile
 44754                           
 44755                           ;../canargb_leds.c: 177:         T4RST = 0x12;
 44756   004BD2  0E12               	movlw	18
 44757   004BD4  6F33               	movwf	51,b	;volatile
 44758                           
 44759                           ;../canargb_leds.c: 181:         T4PR = 29;
 44760   004BD6  0E1D               	movlw	29
 44761   004BD8  6F2F               	movwf	47,b	;volatile
 44762                           
 44763                           ;../canargb_leds.c: 183:     };../canargb_leds.c: 187:     {;../canargb_leds.c: 188:    
      +                               CLCSELECT = 1;
 44764   004BDA  0E01               	movlw	1
 44765   004BDC  0100               	movlb	0	; () banked
 44766   004BDE  6FD5               	movwf	213,b	;volatile
 44767                           
 44768                           ;../canargb_leds.c: 189:         CLCnCON = 0x82;
 44769   004BE0  0E82               	movlw	130
 44770   004BE2  6FD6               	movwf	214,b	;volatile
 44771                           
 44772                           ;../canargb_leds.c: 190:         CLCnPOL = 0x8E;
 44773   004BE4  0E8E               	movlw	142
 44774   004BE6  6FD7               	movwf	215,b	;volatile
 44775                           
 44776                           ;../canargb_leds.c: 191:         CLCnSEL0 = 0x14;
 44777   004BE8  0E14               	movlw	20
 44778   004BEA  6FD8               	movwf	216,b	;volatile
 44779                           
 44780                           ;../canargb_leds.c: 192:         CLCnSEL1 = 0x14;
 44781   004BEC  0E14               	movlw	20
 44782   004BEE  6FD9               	movwf	217,b	;volatile
 44783                           
 44784                           ;../canargb_leds.c: 193:         CLCnSEL2 = 0x14;
 44785   004BF0  0E14               	movlw	20
 44786   004BF2  6FDA               	movwf	218,b	;volatile
 44787                           
 44788                           ;../canargb_leds.c: 194:         CLCnSEL3 = 0x14;
 44789   004BF4  0E14               	movlw	20
 44790   004BF6  6FDB               	movwf	219,b	;volatile
 44791                           
 44792                           ;../canargb_leds.c: 195:         CLCnGLS0 = 0x01;
 44793   004BF8  0E01               	movlw	1
 44794   004BFA  6FDC               	movwf	220,b	;volatile
 44795   004BFC                     
 44796                           ; BSR set to: 0
 44797                           ;../canargb_leds.c: 196:         CLCnGLS1 = 0x00;
 44798   004BFC  6BDD               	clrf	221,b	;volatile
 44799   004BFE                     
 44800                           ; BSR set to: 0
 44801                           ;../canargb_leds.c: 197:         CLCnGLS2 = 0x00;
 44802   004BFE  6BDE               	clrf	222,b	;volatile
 44803   004C00                     
 44804                           ; BSR set to: 0
 44805                           ;../canargb_leds.c: 198:         CLCnGLS3 = 0x00;
 44806   004C00  6BDF               	clrf	223,b	;volatile
 44807                           
 44808                           ;../canargb_leds.c: 199:     };../canargb_leds.c: 203:     {;../canargb_leds.c: 204:    
      +                               CLCSELECT = 3;
 44809   004C02  0E03               	movlw	3
 44810   004C04  6FD5               	movwf	213,b	;volatile
 44811                           
 44812                           ;../canargb_leds.c: 205:         CLCnCON = 0x82;
 44813   004C06  0E82               	movlw	130
 44814   004C08  6FD6               	movwf	214,b	;volatile
 44815                           
 44816                           ;../canargb_leds.c: 206:         CLCnPOL = 0x8E;
 44817   004C0A  0E8E               	movlw	142
 44818   004C0C  6FD7               	movwf	215,b	;volatile
 44819                           
 44820                           ;../canargb_leds.c: 207:         CLCnSEL0 = 0x16;
 44821   004C0E  0E16               	movlw	22
 44822   004C10  6FD8               	movwf	216,b	;volatile
 44823                           
 44824                           ;../canargb_leds.c: 208:         CLCnSEL1 = 0x16;
 44825   004C12  0E16               	movlw	22
 44826   004C14  6FD9               	movwf	217,b	;volatile
 44827                           
 44828                           ;../canargb_leds.c: 209:         CLCnSEL2 = 0x16;
 44829   004C16  0E16               	movlw	22
 44830   004C18  6FDA               	movwf	218,b	;volatile
 44831                           
 44832                           ;../canargb_leds.c: 210:         CLCnSEL3 = 0x16;
 44833   004C1A  0E16               	movlw	22
 44834   004C1C  6FDB               	movwf	219,b	;volatile
 44835                           
 44836                           ;../canargb_leds.c: 211:         CLCnGLS0 = 0x01;
 44837   004C1E  0E01               	movlw	1
 44838   004C20  6FDC               	movwf	220,b	;volatile
 44839   004C22                     
 44840                           ; BSR set to: 0
 44841                           ;../canargb_leds.c: 212:         CLCnGLS1 = 0x00;
 44842   004C22  6BDD               	clrf	221,b	;volatile
 44843   004C24                     
 44844                           ; BSR set to: 0
 44845                           ;../canargb_leds.c: 213:         CLCnGLS2 = 0x00;
 44846   004C24  6BDE               	clrf	222,b	;volatile
 44847   004C26                     
 44848                           ; BSR set to: 0
 44849                           ;../canargb_leds.c: 214:         CLCnGLS3 = 0x00;
 44850   004C26  6BDF               	clrf	223,b	;volatile
 44851   004C28                     
 44852                           ; BSR set to: 0
 44853                           ;../canargb_leds.c: 215:     };../canargb_leds.c: 218:     {;../canargb_leds.c: 219:    
      +                               MD1CON0 = 0;
 44854   004C28  6B6A               	clrf	106,b	;volatile
 44855   004C2A                     
 44856                           ; BSR set to: 0
 44857                           ;../canargb_leds.c: 220:         MD1CON1 = 0x00;
 44858   004C2A  6B6B               	clrf	107,b	;volatile
 44859                           
 44860                           ;../canargb_leds.c: 221:         MD1CARH = 0x12;
 44861   004C2C  0E12               	movlw	18
 44862   004C2E  6F6E               	movwf	110,b	;volatile
 44863                           
 44864                           ;../canargb_leds.c: 222:         MD1CARL = 0x10;
 44865   004C30  0E10               	movlw	16
 44866   004C32  6F6D               	movwf	109,b	;volatile
 44867                           
 44868                           ;../canargb_leds.c: 223:         MD1SRC = 0x1F;
 44869   004C34  0E1F               	movlw	31
 44870   004C36  6F6C               	movwf	108,b	;volatile
 44871   004C38                     
 44872                           ; BSR set to: 0
 44873                           ;../canargb_leds.c: 224:     };../canargb_leds.c: 251:     T2CONbits.ON = 1;
 44874   004C38  0103               	movlb	3	; () banked
 44875   004C3A  8F24               	bsf	36,7,b	;volatile
 44876   004C3C                     
 44877                           ; BSR set to: 3
 44878                           ;../canargb_leds.c: 252:     T4CONbits.ON = 1;
 44879   004C3C  8F30               	bsf	48,7,b	;volatile
 44880   004C3E                     
 44881                           ; BSR set to: 3
 44882                           ;../canargb_leds.c: 253:     MD1CON0bits.EN = 1;
 44883   004C3E  0100               	movlb	0	; () banked
 44884   004C40  8F6A               	bsf	106,7,b	;volatile
 44885                           
 44886                           ;../canargb_leds.c: 255:     refreshRequired = 1;
 44887   004C42  0E01               	movlw	1
 44888   004C44  0105               	movlb	5	; () banked
 44889   004C46  6FAB               	movwf	_refreshRequired& (0+255),b
 44890   004C48                     
 44891                           ; BSR set to: 5
 44892   004C48  0012               	return		;funcret
 44893   004C4A                     __end_of_initARGB:
 44894                           	callstack 0
 44895                           
 44896 ;; *************** function _receiveOverrun *****************
 44897 ;; Defined at:
 44898 ;;		line 370 in file "../../VLCBlib_PIC/can18_can_2.c"
 44899 ;; Parameters:    Size  Location     Type
 44900 ;;		None
 44901 ;; Auto vars:     Size  Location     Type
 44902 ;;		None
 44903 ;; Return value:  Size  Location     Type
 44904 ;;                  1    wreg      void 
 44905 ;; Registers used:
 44906 ;;		status,2, status,0
 44907 ;; Tracked objects:
 44908 ;;		On entry : 0/0
 44909 ;;		On exit  : 0/0
 44910 ;;		Unchanged: 0/0
 44911 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44916 ;;Total ram usage:        0 bytes
 44917 ;; Hardware stack levels used: 1
 44918 ;; This function calls:
 44919 ;;		Nothing
 44920 ;; This function is called by:
 44921 ;;		Interrupt level 2
 44922 ;; This function uses a non-reentrant model
 44923 ;;
 44924                           
 44925                           	psect	text145
 44926   007F08                     __ptext145:
 44927                           	callstack 0
 44928   007F08                     _receiveOverrun:
 44929                           	callstack 115
 44930   007F08                     
 44931                           ;../../VLCBlib_PIC/can18_can_2.c: 371:     if (C1FIFOSTA3Lbits.RXOVIF == 1) {
 44932   007F08  0101               	movlb	1	; () banked
 44933   007F0A  A778               	btfss	120,3,b	;volatile
 44934   007F0C  EF8A  F03F         	goto	i2u863_41
 44935   007F10  EF8C  F03F         	goto	i2u863_40
 44936   007F14                     i2u863_41:
 44937   007F14  EF91  F03F         	goto	i2l11059
 44938   007F18                     i2u863_40:
 44939   007F18                     
 44940                           ; BSR set to: 1
 44941                           ;../../VLCBlib_PIC/can18_can_2.c: 373:         canDiagnostics[0x08].asUint++;
 44942   007F18  0106               	movlb	6	; () banked
 44943   007F1A  4B9E               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 44944   007F1C  2B9F               	incf	(_canDiagnostics+17)& (0+255),f,b
 44945   007F1E                     
 44946                           ; BSR set to: 6
 44947                           ;../../VLCBlib_PIC/can18_can_2.c: 375:         C1FIFOSTA3Lbits.RXOVIF = 0;
 44948   007F1E  0101               	movlb	1	; () banked
 44949   007F20  9778               	bcf	120,3,b	;volatile
 44950   007F22                     i2l11059:
 44951                           
 44952                           ; BSR set to: 1
 44953                           ;../../VLCBlib_PIC/can18_can_2.c: 377:     if (C1INTHbits.IVMIF == 1) {
 44954   007F22  AF1D               	btfss	29,7,b	;volatile
 44955   007F24  EF96  F03F         	goto	i2u864_41
 44956   007F28  EF98  F03F         	goto	i2u864_40
 44957   007F2C                     i2u864_41:
 44958   007F2C  EF9D  F03F         	goto	i2l592
 44959   007F30                     i2u864_40:
 44960   007F30                     
 44961                           ; BSR set to: 1
 44962                           ;../../VLCBlib_PIC/can18_can_2.c: 379:         canDiagnostics[0x01].asUint++;
 44963   007F30  0106               	movlb	6	; () banked
 44964   007F32  4B90               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 44965   007F34  2B91               	incf	(_canDiagnostics+3)& (0+255),f,b
 44966   007F36                     
 44967                           ; BSR set to: 6
 44968                           ;../../VLCBlib_PIC/can18_can_2.c: 381:         C1INTHbits.IVMIF = 0;
 44969   007F36  0101               	movlb	1	; () banked
 44970   007F38  9F1D               	bcf	29,7,b	;volatile
 44971   007F3A                     i2l592:
 44972                           
 44973                           ; BSR set to: 1
 44974   007F3A  0011               	retfie		f
 44975   007F3C                     __end_of_receiveOverrun:
 44976                           	callstack 0
 44977                           
 44978 ;; *************** function _TMR0_ISR *****************
 44979 ;; Defined at:
 44980 ;;		line 201 in file "../../VLCBlib_PIC/ticktime.c"
 44981 ;; Parameters:    Size  Location     Type
 44982 ;;		None
 44983 ;; Auto vars:     Size  Location     Type
 44984 ;;		None
 44985 ;; Return value:  Size  Location     Type
 44986 ;;                  1    wreg      void 
 44987 ;; Registers used:
 44988 ;;		wreg, status,2, status,0
 44989 ;; Tracked objects:
 44990 ;;		On entry : 0/0
 44991 ;;		On exit  : 0/0
 44992 ;;		Unchanged: 0/0
 44993 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44998 ;;Total ram usage:        0 bytes
 44999 ;; Hardware stack levels used: 1
 45000 ;; This function calls:
 45001 ;;		Nothing
 45002 ;; This function is called by:
 45003 ;;		Interrupt level 2
 45004 ;; This function uses a non-reentrant model
 45005 ;;
 45006                           
 45007                           	psect	text146
 45008   008180                     __ptext146:
 45009                           	callstack 0
 45010   008180                     _TMR0_ISR:
 45011                           	callstack 115
 45012   008180                     
 45013                           ;../../VLCBlib_PIC/ticktime.c: 205:     if(TMR0IF) {
 45014   008180  AEB1               	btfss	1201,7,c	;volatile
 45015   008182  EFC5  F040         	goto	i2u865_41
 45016   008186  EFC7  F040         	goto	i2u865_40
 45017   00818A                     i2u865_41:
 45018   00818A  EFD3  F040         	goto	i2l1831
 45019   00818E                     i2u865_40:
 45020   00818E                     
 45021                           ;../../VLCBlib_PIC/ticktime.c: 207:         TMR0IF = 0;
 45022   00818E  9EB1               	bcf	1201,7,c	;volatile
 45023   008190                     
 45024                           ;../../VLCBlib_PIC/ticktime.c: 208:         timerExtension1++;
 45025   008190  0105               	movlb	5	; () banked
 45026   008192  2B9A               	incf	_timerExtension1& (0+255),f,b	;volatile
 45027   008194                     
 45028                           ; BSR set to: 5
 45029                           ;../../VLCBlib_PIC/ticktime.c: 209:         if(timerExtension1 == 0) {
 45030   008194  519A               	movf	_timerExtension1& (0+255),w,b	;volatile
 45031   008196  A4D8               	btfss	status,2,c
 45032   008198  EFD0  F040         	goto	i2u866_41
 45033   00819C  EFD2  F040         	goto	i2u866_40
 45034   0081A0                     i2u866_41:
 45035   0081A0  EFD3  F040         	goto	i2l1831
 45036   0081A4                     i2u866_40:
 45037   0081A4                     
 45038                           ; BSR set to: 5
 45039                           ;../../VLCBlib_PIC/ticktime.c: 210:             timerExtension2++;
 45040   0081A4  2B99               	incf	_timerExtension2& (0+255),f,b	;volatile
 45041   0081A6                     i2l1831:
 45042   0081A6  0011               	retfie		f
 45043   0081A8                     __end_of_TMR0_ISR:
 45044                           	callstack 0
 45045                           
 45046 ;; *************** function _DEFAULT_ISR *****************
 45047 ;; Defined at:
 45048 ;;		line 1369 in file "../../VLCBlib_PIC/vlcb.c"
 45049 ;; Parameters:    Size  Location     Type
 45050 ;;		None
 45051 ;; Auto vars:     Size  Location     Type
 45052 ;;		None
 45053 ;; Return value:  Size  Location     Type
 45054 ;;                  1    wreg      void 
 45055 ;; Registers used:
 45056 ;;		None
 45057 ;; Tracked objects:
 45058 ;;		On entry : 0/0
 45059 ;;		On exit  : 0/0
 45060 ;;		Unchanged: 0/0
 45061 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45066 ;;Total ram usage:        0 bytes
 45067 ;; Hardware stack levels used: 1
 45068 ;; This function calls:
 45069 ;;		Nothing
 45070 ;; This function is called by:
 45071 ;;		Interrupt level 2
 45072 ;; This function uses a non-reentrant model
 45073 ;;
 45074                           
 45075                           	psect	text147
 45076   00835C                     __ptext147:
 45077                           	callstack 0
 45078   00835C                     _DEFAULT_ISR:
 45079                           	callstack 115
 45080   00835C  0011               	retfie		f
 45081   00835E                     __end_of_DEFAULT_ISR:
 45082                           	callstack 0
 45083                           
 45084                           ;
 45085                           ; H/W Interrupt Vector Table @ 0x900
 45086                           ;
 45087                           
 45088                           	psect	ivt0x900
 45089   000900                     __pivt0x900:
 45090                           	callstack 0
 45091   000900                     ivt0x900_base:
 45092                           	callstack 0
 45093                           
 45094                           ; Vector 0 : SWINT
 45095   000900  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45096                           
 45097                           ; Vector 1 : HLVD
 45098   000902  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45099                           
 45100                           ; Vector 2 : OSF
 45101   000904  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45102                           
 45103                           ; Vector 3 : CSW
 45104   000906  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45105                           
 45106                           ; Vector 4 : TU16A
 45107   000908  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45108                           
 45109                           ; Vector 5 : CLC1
 45110   00090A  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45111                           
 45112                           ; Vector 6 : CAN
 45113   00090C  1FC2               	dw	_receiveOverrun shr (0+2)
 45114                           
 45115                           ; Vector 7 : IOC
 45116   00090E  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45117                           
 45118                           ; Vector 8 : INT0
 45119   000910  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45120                           
 45121                           ; Vector 9 : ZCD
 45122   000912  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45123                           
 45124                           ; Vector 10 : AD
 45125   000914  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45126                           
 45127                           ; Vector 11 : ACT
 45128   000916  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45129                           
 45130                           ; Vector 12 : CM1
 45131   000918  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45132                           
 45133                           ; Vector 13 : SMT1
 45134   00091A  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45135                           
 45136                           ; Vector 14 : SMT1PRA
 45137   00091C  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45138                           
 45139                           ; Vector 15 : SMT1PWA
 45140   00091E  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45141                           
 45142                           ; Vector 16 : ADCH1
 45143   000920  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45144                           
 45145                           ; Vector 17 : ADCH2
 45146   000922  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45147                           
 45148                           ; Vector 18 : ADCH3
 45149   000924  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45150                           
 45151                           ; Vector 19 : ADCH4
 45152   000926  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45153                           
 45154                           ; Vector 20 : DMA1SCNT
 45155   000928  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45156                           
 45157                           ; Vector 21 : DMA1DCNT
 45158   00092A  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45159                           
 45160                           ; Vector 22 : DMA1OR
 45161   00092C  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45162                           
 45163                           ; Vector 23 : DMA1A
 45164   00092E  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45165                           
 45166                           ; Vector 24 : SPI1RX
 45167   000930  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45168                           
 45169                           ; Vector 25 : SPI1TX
 45170   000932  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45171                           
 45172                           ; Vector 26 : SPI1
 45173   000934  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45174                           
 45175                           ; Vector 27 : TMR2
 45176   000936  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45177                           
 45178                           ; Vector 28 : TMR1
 45179   000938  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45180                           
 45181                           ; Vector 29 : TMR1G
 45182   00093A  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45183                           
 45184                           ; Vector 30 : CCP1
 45185   00093C  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45186                           
 45187                           ; Vector 31 : TMR0
 45188   00093E  2060               	dw	_TMR0_ISR shr (0+2)
 45189                           
 45190                           ; Vector 32 : U1RX
 45191   000940  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45192                           
 45193                           ; Vector 33 : U1TX
 45194   000942  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45195                           
 45196                           ; Vector 34 : U1E
 45197   000944  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45198                           
 45199                           ; Vector 35 : U1
 45200   000946  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45201                           
 45202                           ; Vector 36 : CANRX
 45203   000948  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45204                           
 45205                           ; Vector 37 : CANTX
 45206   00094A  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45207                           
 45208                           ; Vector 38 : PWM1PR
 45209   00094C  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45210                           
 45211                           ; Vector 39 : PWM1
 45212   00094E  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45213                           
 45214                           ; Vector 40 : SPI2RX
 45215   000950  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45216                           
 45217                           ; Vector 41 : SPI2TX
 45218   000952  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45219                           
 45220                           ; Vector 42 : SPI2
 45221   000954  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45222                           
 45223                           ; Vector 43 : TU16B
 45224   000956  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45225                           
 45226                           ; Vector 44 : TMR3
 45227   000958  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45228                           
 45229                           ; Vector 45 : TMR3G
 45230   00095A  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45231                           
 45232                           ; Vector 46 : PWM2PR
 45233   00095C  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45234                           
 45235                           ; Vector 47 : PWM2
 45236   00095E  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45237                           
 45238                           ; Vector 48 : INT1
 45239   000960  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45240                           
 45241                           ; Vector 49 : CLC2
 45242   000962  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45243                           
 45244                           ; Vector 50 : CWG1
 45245   000964  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45246                           
 45247                           ; Vector 51 : NCO1
 45248   000966  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45249                           
 45250                           ; Vector 52 : DMA2SCNT
 45251   000968  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45252                           
 45253                           ; Vector 53 : DMA2DCNT
 45254   00096A  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45255                           
 45256                           ; Vector 54 : DMA2OR
 45257   00096C  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45258                           
 45259                           ; Vector 55 : DMA2A
 45260   00096E  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45261                           
 45262                           ; Vector 56 : I2C1RX
 45263   000970  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45264                           
 45265                           ; Vector 57 : I2C1TX
 45266   000972  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45267                           
 45268                           ; Vector 58 : I2C1
 45269   000974  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45270                           
 45271                           ; Vector 59 : I2C1E
 45272   000976  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45273                           
 45274                           ; Vector 60 : Undefined
 45275   000978  0280               	dw	ivt0x900_undefint shr (0+2)
 45276                           
 45277                           ; Vector 61 : CLC3
 45278   00097A  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45279                           
 45280                           ; Vector 62 : PWM3PR
 45281   00097C  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45282                           
 45283                           ; Vector 63 : PWM3
 45284   00097E  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45285                           
 45286                           ; Vector 64 : U2RX
 45287   000980  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45288                           
 45289                           ; Vector 65 : U2TX
 45290   000982  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45291                           
 45292                           ; Vector 66 : U2E
 45293   000984  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45294                           
 45295                           ; Vector 67 : U2
 45296   000986  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45297                           
 45298                           ; Vector 68 : TMR5
 45299   000988  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45300                           
 45301                           ; Vector 69 : TMR5G
 45302   00098A  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45303                           
 45304                           ; Vector 70 : CCP2
 45305   00098C  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45306                           
 45307                           ; Vector 71 : SCAN
 45308   00098E  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45309                           
 45310                           ; Vector 72 : U3RX
 45311   000990  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45312                           
 45313                           ; Vector 73 : U3TX
 45314   000992  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45315                           
 45316                           ; Vector 74 : U3E
 45317   000994  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45318                           
 45319                           ; Vector 75 : U3
 45320   000996  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45321                           
 45322                           ; Vector 76 : Undefined
 45323   000998  0280               	dw	ivt0x900_undefint shr (0+2)
 45324                           
 45325                           ; Vector 77 : CLC4
 45326   00099A  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45327                           
 45328                           ; Vector 78 : PWM4PR
 45329   00099C  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45330                           
 45331                           ; Vector 79 : PWM4
 45332   00099E  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45333                           
 45334                           ; Vector 80 : INT2
 45335   0009A0  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45336                           
 45337                           ; Vector 81 : CLC5
 45338   0009A2  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45339                           
 45340                           ; Vector 82 : CWG2
 45341   0009A4  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45342                           
 45343                           ; Vector 83 : NCO2
 45344   0009A6  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45345                           
 45346                           ; Vector 84 : DMA3SCNT
 45347   0009A8  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45348                           
 45349                           ; Vector 85 : DMA3DCNT
 45350   0009AA  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45351                           
 45352                           ; Vector 86 : DMA3OR
 45353   0009AC  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45354                           
 45355                           ; Vector 87 : DMA3A
 45356   0009AE  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45357                           
 45358                           ; Vector 88 : CCP3
 45359   0009B0  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45360                           
 45361                           ; Vector 89 : CLC6
 45362   0009B2  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45363                           
 45364                           ; Vector 90 : CWG3
 45365   0009B4  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45366                           
 45367                           ; Vector 91 : TMR4
 45368   0009B6  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45369                           
 45370                           ; Vector 92 : DMA4SCNT
 45371   0009B8  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45372                           
 45373                           ; Vector 93 : DMA4DCNT
 45374   0009BA  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45375                           
 45376                           ; Vector 94 : DMA4OR
 45377   0009BC  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45378                           
 45379                           ; Vector 95 : DMA4A
 45380   0009BE  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45381                           
 45382                           ; Vector 96 : U4RX
 45383   0009C0  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45384                           
 45385                           ; Vector 97 : U4TX
 45386   0009C2  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45387                           
 45388                           ; Vector 98 : U4E
 45389   0009C4  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45390                           
 45391                           ; Vector 99 : U4
 45392   0009C6  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45393                           
 45394                           ; Vector 100 : DMA5SCNT
 45395   0009C8  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45396                           
 45397                           ; Vector 101 : DMA5DCNT
 45398   0009CA  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45399                           
 45400                           ; Vector 102 : DMA5OR
 45401   0009CC  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45402                           
 45403                           ; Vector 103 : DMA5A
 45404   0009CE  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45405                           
 45406                           ; Vector 104 : U5RX
 45407   0009D0  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45408                           
 45409                           ; Vector 105 : U5TX
 45410   0009D2  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45411                           
 45412                           ; Vector 106 : U5E
 45413   0009D4  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45414                           
 45415                           ; Vector 107 : U5
 45416   0009D6  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45417                           
 45418                           ; Vector 108 : DMA6SCNT
 45419   0009D8  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45420                           
 45421                           ; Vector 109 : DMA6DCNT
 45422   0009DA  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45423                           
 45424                           ; Vector 110 : DMA6OR
 45425   0009DC  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45426                           
 45427                           ; Vector 111 : DMA6A
 45428   0009DE  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45429                           
 45430                           ; Vector 112 : Undefined
 45431   0009E0  0280               	dw	ivt0x900_undefint shr (0+2)
 45432                           
 45433                           ; Vector 113 : CLC7
 45434   0009E2  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45435                           
 45436                           ; Vector 114 : CM2
 45437   0009E4  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45438                           
 45439                           ; Vector 115 : NCO3
 45440   0009E6  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45441                           
 45442                           ; Vector 116 : DMA7SCNT
 45443   0009E8  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45444                           
 45445                           ; Vector 117 : DMA7DCNT
 45446   0009EA  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45447                           
 45448                           ; Vector 118 : DMA7OR
 45449   0009EC  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45450                           
 45451                           ; Vector 119 : DMA7A
 45452   0009EE  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45453                           
 45454                           ; Vector 120 : NVM
 45455   0009F0  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45456                           
 45457                           ; Vector 121 : CLC8
 45458   0009F2  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45459                           
 45460                           ; Vector 122 : CRC
 45461   0009F4  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45462                           
 45463                           ; Vector 123 : TMR6
 45464   0009F6  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45465                           
 45466                           ; Vector 124 : DMA8SCNT
 45467   0009F8  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45468                           
 45469                           ; Vector 125 : DMA8DCNT
 45470   0009FA  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45471                           
 45472                           ; Vector 126 : DMA8OR
 45473   0009FC  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45474                           
 45475                           ; Vector 127 : DMA8A
 45476   0009FE  20D7               	dw	_DEFAULT_ISR shr (0+2)
 45477   000A00                     ivt0x900_undefint:
 45478                           	callstack 0
 45479   000A00  00FF               	reset	
 45480                           
 45481                           	psect	rparam
 45482   000001                     ___rparam_used  equ	1
 45483   000000                     ___param_bank   equ	0
 45484   000000                     __Lparam        equ	__Lrparam
 45485   000000                     __Hparam        equ	__Hrparam
 45486                           
 45487                           	psect	config
 45488                           
 45489                           ;Config register CONFIG1 @ 0x300000
 45490                           ;	External Oscillator Selection
 45491                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz
 45492                           ;	Reset Oscillator Selection
 45493                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
 45494   300000                     	org	3145728
 45495   300000  FA                 	db	250
 45496                           
 45497                           ;Config register CONFIG2 @ 0x300001
 45498                           ;	Clock out Enable bit
 45499                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 45500                           ;	PRLOCKED One-Way Set Enable bit
 45501                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 45502                           ;	Clock Switch Enable bit
 45503                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 45504                           ;	JTAG Enable bit
 45505                           ;	JTAGEN = OFF, Disable JTAG Boundary Scan mode, JTAG pins revert to user functions
 45506                           ;	Fail-Safe Clock Monitor Enable bit
 45507                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 45508                           ;	Fail-Safe Clock Monitor -Primary XTAL Enable bit
 45509                           ;	FCMENP = ON, FSCM timer will set FSCMP bit and OSFIF interrupt on Primary XTAL failure
 45510                           ;	Fail-Safe Clock Monitor -Secondary XTAL Enable bit
 45511                           ;	FCMENS = ON, FSCM timer will set FSCMS bit and OSFIF interrupt on Secondary XTAL failu
      +                          re
 45512   300001                     	org	3145729
 45513   300001  EF                 	db	239
 45514                           
 45515                           ;Config register CONFIG3 @ 0x300002
 45516                           ;	MCLR Enable bit
 45517                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 45518                           ;	Power-up timer selection bits
 45519                           ;	PWRTS = PWRT_64, PWRT set at 64ms
 45520                           ;	Multi-vector enable bit
 45521                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 45522                           ;	IVTLOCK bit One-way set enable bit
 45523                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 45524                           ;	Low Power BOR Enable bit
 45525                           ;	LPBOREN = OFF, Low-Power BOR disabled
 45526                           ;	Brown-out Reset Enable bits
 45527                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 45528   300002                     	org	3145730
 45529   300002  FD                 	db	253
 45530                           
 45531                           ;Config register CONFIG4 @ 0x300003
 45532                           ;	Brown-out Reset Voltage Selection bits
 45533                           ;	BORV = VBOR_2P7, Brown-out Reset Voltage (VBOR) set to 2.7V
 45534                           ;	ZCD Disable bit
 45535                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 45536                           ;	PPSLOCK bit One-Way Set Enable bit
 45537                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 45538                           ;	Stack Full/Underflow Reset Enable bit
 45539                           ;	STVREN = ON, Stack full/underflow will cause Reset
 45540                           ;	Low Voltage Programming Enable bit
 45541                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 45542                           ;	Extended Instruction Set Enable bit
 45543                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 45544   300003                     	org	3145731
 45545   300003  FD                 	db	253
 45546                           
 45547                           ;Config register CONFIG5 @ 0x300004
 45548                           ;	WDT Period selection bits
 45549                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 45550                           ;	WDT operating mode
 45551                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 45552   300004                     	org	3145732
 45553   300004  9F                 	db	159
 45554                           
 45555                           ;Config register CONFIG6 @ 0x300005
 45556                           ;	WDT Window Select bits
 45557                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 45558                           ;	WDT input clock selector
 45559                           ;	WDTCCS = SC, Software Control
 45560   300005                     	org	3145733
 45561   300005  FF                 	db	255
 45562                           
 45563                           ;Config register CONFIG7 @ 0x300006
 45564                           ;	Boot Block Size selection bits
 45565                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 45566                           ;	Boot Block enable bit
 45567                           ;	BBEN = ON, Boot block enabled
 45568                           ;	Storage Area Flash enable bit
 45569                           ;	SAFEN = OFF, SAF disabled
 45570                           ;	Background Debugger
 45571                           ;	DEBUG = 0x1, unprogrammed default
 45572   300006                     	org	3145734
 45573   300006  F7                 	db	247
 45574                           
 45575                           ;Config register CONFIG8 @ 0x300007
 45576                           ;	Boot Block Write Protection bit
 45577                           ;	WRTB = ON, Boot Block Write protected
 45578                           ;	Configuration Register Write Protection bit
 45579                           ;	WRTC = ON, Configuration registers Write protected
 45580                           ;	Data EEPROM Write Protection bit
 45581                           ;	WRTD = OFF, Data EEPROM not Write protected
 45582                           ;	SAF Write protection bit
 45583                           ;	WRTSAF = OFF, SAF not Write Protected
 45584                           ;	Application Block write protection bit
 45585                           ;	WRTAPP = OFF, Application Block not write protected
 45586   300007                     	org	3145735
 45587   300007  FC                 	db	252
 45588                           
 45589                           ;Config register CONFIG9 @ 0x300008
 45590                           ;	CRC on boot output pin selection
 45591                           ;	BOOTPINSEL = RC5, CRC on boot output pin is RC5
 45592                           ;	CRC on boot output pin enable bit
 45593                           ;	BPEN = OFF, CRC on boot output pin disabled
 45594                           ;	CRC on boot output pin open drain bit
 45595                           ;	ODCON = OFF, Pin drives both high-going and low-going signals
 45596   300008                     	org	3145736
 45597   300008  FF                 	db	255
 45598                           
 45599                           ;Config register CONFIG10 @ 0x300009
 45600                           ;	PFM and Data EEPROM Code Protection bit
 45601                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 45602   300009                     	org	3145737
 45603   300009  FF                 	db	255
 45604                           
 45605                           ;Config register CONFIG11 @ 0x30000A
 45606                           ;	CRC on boot scan enable for boot area
 45607                           ;	BOOTSCEN = OFF, CRC on boot will not include the boot area of program memory in its ca
      +                          lculation
 45608                           ;	CRC on boot Continue on Error for boot areas bit
 45609                           ;	BOOTCOE = HALT, CRC on boot will stop device if error is detected in boot areas
 45610                           ;	CRC on boot application code scan enable
 45611                           ;	APPSCEN = OFF, CRC on boot will not include the application area of program memory in 
      +                          its calculation
 45612                           ;	CRC on boot SAF area scan enable
 45613                           ;	SAFSCEN = OFF, CRC on boot will not include the SAF area of program memory in its calc
      +                          ulation
 45614                           ;	CRC on boot Data EEPROM scan enable
 45615                           ;	DATASCEN = OFF, CRC on boot will not include data EEPROM in its calculation
 45616                           ;	CRC on boot Config fuses scan enable
 45617                           ;	CFGSCEN = OFF, CRC on boot will not include the configuration fuses in its calculation
 45618                           ;	CRC on boot Continue on Error for non-boot areas bit
 45619                           ;	COE = HALT, CRC on boot will stop device if error is detected in non-boot areas
 45620                           ;	Boot on CRC Enable bit
 45621                           ;	BOOTPOR = OFF, CRC on boot will not run
 45622   30000A                     	org	3145738
 45623   30000A  FF                 	db	255
 45624                           
 45625                           ;Config register CONFIG12 @ 0x30000B
 45626                           ;	Boot Sector Polynomial for CRC on boot bits 31-24
 45627                           ;	BCRCPOLT = hFF, Bits 31:24 of BCRCPOL are 0xFF
 45628   30000B                     	org	3145739
 45629   30000B  FF                 	db	255
 45630                           
 45631                           ;Config register CONFIG13 @ 0x30000C
 45632                           ;	Boot Sector Polynomial for CRC on boot bits 23-16
 45633                           ;	BCRCPOLU = hFF, Bits 23:16 of BCRCPOL are 0xFF
 45634   30000C                     	org	3145740
 45635   30000C  FF                 	db	255
 45636                           
 45637                           ;Config register CONFIG14 @ 0x30000D
 45638                           ;	Boot Sector Polynomial for CRC on boot bits 15-8
 45639                           ;	BCRCPOLH = hFF, Bits 15:8 of BCRCPOL are 0xFF
 45640   30000D                     	org	3145741
 45641   30000D  FF                 	db	255
 45642                           
 45643                           ;Config register CONFIG15 @ 0x30000E
 45644                           ;	Boot Sector Polynomial for CRC on boot bits 7-0
 45645                           ;	BCRCPOLL = hFF, Bits 7:0 of BCRCPOL are 0xFF
 45646   30000E                     	org	3145742
 45647   30000E  FF                 	db	255
 45648                           
 45649                           ;Config register CONFIG16 @ 0x30000F
 45650                           ;	Boot Sector Seed for CRC on boot bits 31-24
 45651                           ;	BCRCSEEDT = hFF, Bits 31:24 of BCRCSEED are 0xFF
 45652   30000F                     	org	3145743
 45653   30000F  FF                 	db	255
 45654                           
 45655                           ;Config register CONFIG17 @ 0x300010
 45656                           ;	Boot Sector Seed for CRC on boot bits 23-16
 45657                           ;	BCRCSEEDU = hFF, Bits 23:16 of BCRCSEED are 0xFF
 45658   300010                     	org	3145744
 45659   300010  FF                 	db	255
 45660                           
 45661                           ;Config register CONFIG18 @ 0x300011
 45662                           ;	Boot Sector Seed for CRC on boot bits 15-8
 45663                           ;	BCRCSEEDH = hFF, Bits 15:8 of BCRCSEED are 0xFF
 45664   300011                     	org	3145745
 45665   300011  FF                 	db	255
 45666                           
 45667                           ;Config register CONFIG19 @ 0x300012
 45668                           ;	Boot Sector Seed for CRC on boot bits 7-0
 45669                           ;	BCRCSEEDL = hFF, Bits 7:0 of BCRCSEED are 0xFF
 45670   300012                     	org	3145746
 45671   300012  FF                 	db	255
 45672                           
 45673                           ;Config register CONFIG20 @ 0x300013
 45674                           ;	Boot Sector Expected Result for CRC on boot bits 31-24
 45675                           ;	BCRCEREST = hFF, Bits 31:24 of BCRCERES are 0xFF
 45676   300013                     	org	3145747
 45677   300013  FF                 	db	255
 45678                           
 45679                           ;Config register CONFIG21 @ 0x300014
 45680                           ;	Boot Sector Expected Result for CRC on boot bits 23-16
 45681                           ;	BCRCERESU = hFF, Bits 23:16 of BCRCERES are 0xFF
 45682   300014                     	org	3145748
 45683   300014  FF                 	db	255
 45684                           
 45685                           ;Config register CONFIG22 @ 0x300015
 45686                           ;	Boot Sector Expected Result for CRC on boot bits 15-8
 45687                           ;	BCRCERESH = hFF, Bits 15:8 of BCRCERES are 0xFF
 45688   300015                     	org	3145749
 45689   300015  FF                 	db	255
 45690                           
 45691                           ;Config register CONFIG23 @ 0x300016
 45692                           ;	Boot Sector Expected Result for CRC on boot bits 7-0
 45693                           ;	BCRCERESL = hFF, Bits 7:0 of BCRCERES are 0xFF
 45694   300016                     	org	3145750
 45695   300016  FF                 	db	255
 45696                           
 45697                           ;Config register CONFIG24 @ 0x300017
 45698                           ;	Non-Boot Sector Polynomial for CRC on boot bits 31-24
 45699                           ;	CRCPOLT = hFF, Bits 31:24 of CRCPOL are 0xFF
 45700   300017                     	org	3145751
 45701   300017  FF                 	db	255
 45702                           
 45703                           ;Config register CONFIG25 @ 0x300018
 45704                           ;	Non-Boot Sector Polynomial for CRC on boot bits 23-16
 45705                           ;	CRCPOLU = hFF, Bits 23:16 of CRCPOL are 0xFF
 45706   300018                     	org	3145752
 45707   300018  FF                 	db	255
 45708                           
 45709                           ;Config register CONFIG26 @ 0x300019
 45710                           ;	Non-Boot Sector Polynomial for CRC on boot bits 15-8
 45711                           ;	CRCPOLH = hFF, Bits 15:8 of CRCPOL are 0xFF
 45712   300019                     	org	3145753
 45713   300019  FF                 	db	255
 45714                           
 45715                           ;Config register CONFIG27 @ 0x30001A
 45716                           ;	Non-Boot Sector Polynomial for CRC on boot bits 7-0
 45717                           ;	CRCPOLL = hFF, Bits 7:0 of CRCPOL are 0xFF
 45718   30001A                     	org	3145754
 45719   30001A  FF                 	db	255
 45720                           
 45721                           ;Config register CONFIG28 @ 0x30001B
 45722                           ;	Non-Boot Sector Seed for CRC on boot bits 31-24
 45723                           ;	CRCSEEDT = hFF, Bits 31:24 of CRCSEED are 0xFF
 45724   30001B                     	org	3145755
 45725   30001B  FF                 	db	255
 45726                           
 45727                           ;Config register CONFIG29 @ 0x30001C
 45728                           ;	Non-Boot Sector Seed for CRC on boot bits 23-16
 45729                           ;	CRCSEEDU = hFF, Bits 23:16 of CRCSEED are 0xFF
 45730   30001C                     	org	3145756
 45731   30001C  FF                 	db	255
 45732                           
 45733                           ;Config register CONFIG30 @ 0x30001D
 45734                           ;	Non-Boot Sector Seed for CRC on boot bits 15-8
 45735                           ;	CRCSEEDH = hFF, Bits 15:8 of CRCSEED are 0xFF
 45736   30001D                     	org	3145757
 45737   30001D  FF                 	db	255
 45738                           
 45739                           ;Config register CONFIG31 @ 0x30001E
 45740                           ;	Non-Boot Sector Seed for CRC on boot bits 7-0
 45741                           ;	CRCSEEDL = hFF, Bits 7:0 of CRCSEED are 0xFF
 45742   30001E                     	org	3145758
 45743   30001E  FF                 	db	255
 45744                           
 45745                           ;Config register CONFIG32 @ 0x30001F
 45746                           ;	Non-Boot Sector Expected Result for CRC on boot bits 31-24
 45747                           ;	CRCEREST = hFF, Bits 31:24 of CRCERES are 0xFF
 45748   30001F                     	org	3145759
 45749   30001F  FF                 	db	255
 45750                           
 45751                           ;Config register CONFIG33 @ 0x300020
 45752                           ;	Non-Boot Sector Expected Result for CRC on boot bits 23-16
 45753                           ;	CRCERESU = hFF, Bits 23:16 of CRCERES are 0xFF
 45754   300020                     	org	3145760
 45755   300020  FF                 	db	255
 45756                           
 45757                           ;Config register CONFIG34 @ 0x300021
 45758                           ;	Non-Boot Sector Expected Result for CRC on boot bits 15-8
 45759                           ;	CRCERESH = hFF, Bits 15:8 of CRCERES are 0xFF
 45760   300021                     	org	3145761
 45761   300021  FF                 	db	255
 45762                           
 45763                           ;Config register CONFIG35 @ 0x300022
 45764                           ;	Non-Boot Sector Expected Result for CRC on boot bits 7-0
 45765                           ;	CRCERESL = hFF, Bits 7:0 of CRCERES are 0xFF
 45766   300022                     	org	3145762
 45767   300022  FF                 	db	255
 45768                           tosu	equ	0x4FF
 45769                           tosh	equ	0x4FE
 45770                           tosl	equ	0x4FD
 45771                           stkptr	equ	0x4FC
 45772                           pclatu	equ	0x4FB
 45773                           pclath	equ	0x4FA
 45774                           pcl	equ	0x4F9
 45775                           tblptru	equ	0x4F8
 45776                           tblptrh	equ	0x4F7
 45777                           tblptrl	equ	0x4F6
 45778                           tablat	equ	0x4F5
 45779                           prodh	equ	0x4F4
 45780                           prodl	equ	0x4F3
 45781                           indf0	equ	0x4EF
 45782                           postinc0	equ	0x4EE
 45783                           postdec0	equ	0x4ED
 45784                           preinc0	equ	0x4EC
 45785                           plusw0	equ	0x4EB
 45786                           fsr0h	equ	0x4EA
 45787                           fsr0l	equ	0x4E9
 45788                           wreg	equ	0x4E8
 45789                           indf1	equ	0x4E7
 45790                           postinc1	equ	0x4E6
 45791                           postdec1	equ	0x4E5
 45792                           preinc1	equ	0x4E4
 45793                           plusw1	equ	0x4E3
 45794                           fsr1h	equ	0x4E2
 45795                           fsr1l	equ	0x4E1
 45796                           bsr	equ	0x4E0
 45797                           indf2	equ	0x4DF
 45798                           postinc2	equ	0x4DE
 45799                           postdec2	equ	0x4DD
 45800                           preinc2	equ	0x4DC
 45801                           plusw2	equ	0x4DB
 45802                           fsr2h	equ	0x4DA
 45803                           fsr2l	equ	0x4D9
 45804                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    422
    Data        2
    BSS         2213
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK5           160     45     159
    BANK6           256      0     189
    BANK7           256      0     255
    BANK8           256      0     252
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0
    BANK37          256      0       0
    BANK38          256      0       0
    BANK39          256      0       0
    BANK40          256      0       0
    BANK41          256      0       0
    BANK42          256      0       0
    BANK43          256      0       0
    BANK44          256      0       0
    BANK45          256      0       0
    BANK46          256      0       0
    BANK47          256      0       0
    BANK48          256      0       0
    BANK49          256      0       0
    BANK50          256      0       0
    BANK51          256      0       0
    BANK52          256      0       0
    BANK53          256      0       0
    BANK54          256      0       0

Pointer List with Targets:

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    APP_processConsumedEvent@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    bootService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    bootService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    canReceiveMessage@rxFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK6[9]), 

    canSendMessage@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    canService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    canService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E23398 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E23402 size(2) Largest target is 1
		 -> canSendMessage(), 

    canTransport$waitForTxQueueToDrain	PTR FTN()void  size(2) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    consumerEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    consumerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    eventConsumerService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    eventConsumerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    eventConsumerService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventConsumerService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    eventConsumerService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    eventTeachService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    flashBuffer	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    getNextWriteMessage@q	PTR struct MessageQueue size(2) Largest target is 5
		 -> rxQueue(BANK5[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    mnsService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    mnsService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    nvService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    nvService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    pop@q	PTR struct MessageQueue size(2) Largest target is 5
		 -> rxQueue(BANK5[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    prepareSelfEnumResponse@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    push@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    S1833MessageQueue$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    S201$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    S201Service$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S201Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    S201Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    S201Service$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    S201Service$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    S201Service$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    S343$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK6[9]), 

    S343$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    S343Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E23398 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    S343Transport$sendMessage	PTR FTN(PTR struct Message,)enum E23402 size(2) Largest target is 1
		 -> canSendMessage(), 

    S343Transport$waitForTxQueueToDrain	PTR FTN()void  size(2) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 

    sendRTR@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    services	const PTR const struct Service[6] size(2) Largest target is 14
		 -> bootService(CODE[14]), canService(CODE[14]), eventConsumerService(CODE[14]), eventTeachService(CODE[14]), 
		 -> mnsService(CODE[14]), nvService(CODE[14]), 

    services$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    services$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__consumerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 14
		 -> bootService(CODE[14]), canService(CODE[14]), eventConsumerService(CODE[14]), eventTeachService(CODE[14]), 
		 -> mnsService(CODE[14]), nvService(CODE[14]), NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp_S201$7	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E23467 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E23467 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 6
		 -> canTransport(CODE[6]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E23398 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E23402 size(2) Largest target is 1
		 -> canSendMessage(), 

    transport$waitForTxQueueToDrain	PTR FTN()void  size(2) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 


Critical Paths under _main in COMRAM

    _setup->_tickGet
    _powerUp->_teachPowerUp
    _teachPowerUp->_rebuildHashtable
    _nvPowerUp->_loadNvCache
    _loadNvCache->_readNVM
    _mnsPowerUp->_readNVM
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _bootPowerUp->_readNVM
    _poll->_consumerProcessMessage
    _teachProcessMessage->_doEvlrn
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage5
    _doReqev->_findEvent
    _doNnevn->_sendMessage3
    _doNnclr->_clearAllEvents
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _addEvent->_findEvent
    _writeEv->_writeNVM
    _pollTimedResponse->_reqevCallback
    _getEv->_readNVM
    _nerdCallback->_sendMessage7
    _setNV->_writeNVM
    _startTimedResponse->_findServiceIndex
    _sendMessage6->_sendMessage
    _sendMessage4->_sendMessage
    _sendMessage3->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _canGetDiagnostic->_getNumRxBuffersInUse
    _canGetDiagnostic->_getNumTxBuffersInUse
    _mnsPoll->_sendMessage5
    _setLEDsByMode->_showStatus
    _sendMessage2->_sendMessage
    _sendMessage7->_sendMessage
    _findEvent->_getHash
    _consumerEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _APP_processConsumedEvent->_getEVs
    _getEVs->_readNVM
    _canReceiveMessage->_handleSelfEnumeration
    _handleSelfEnumeration->_tickGet
    _sendMessage5->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_getNextWriteMessage
    _canSendMessage->_startEnumeration
    _canPoll->_processEnumeration
    _processEnumeration->_setNewCanId
    _startEnumeration->_tickGet
    _setNewCanId->_writeNVM
    _loop->_tickGet
    _doFlash->_getNV
    _checkPowerOnPb->_factoryReset
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->_tickGet
    ___lldiv->_tickGet
    _teachFactoryReset->_clearAllEvents
    _nvFactoryReset->_writeNVM
    _APP_nvDefault->___awdiv
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _factoryResetGlobalEvents->_clearAllEvents
    _clearAllEvents->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _writeNVM->_FLASH_Write
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_WriteNoVerify
    _rebuildHashtable->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _readNVM->_EEPROM_Read
    _readNVM->_FLASH_Read
    _APP_testMode->_tickGet

Critical Paths under _receiveOverrun in COMRAM

    None.

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    _main->_poll
    _poll->_mnsProcessMessage

Critical Paths under _receiveOverrun in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _receiveOverrun in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _receiveOverrun in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _receiveOverrun in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _receiveOverrun in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _receiveOverrun in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _receiveOverrun in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _receiveOverrun in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _receiveOverrun in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _receiveOverrun in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _receiveOverrun in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _receiveOverrun in BANK16

    None.

Critical Paths under _TMR0_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _receiveOverrun in BANK17

    None.

Critical Paths under _TMR0_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _receiveOverrun in BANK18

    None.

Critical Paths under _TMR0_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _receiveOverrun in BANK19

    None.

Critical Paths under _TMR0_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _receiveOverrun in BANK20

    None.

Critical Paths under _TMR0_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _receiveOverrun in BANK21

    None.

Critical Paths under _TMR0_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _receiveOverrun in BANK22

    None.

Critical Paths under _TMR0_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _receiveOverrun in BANK23

    None.

Critical Paths under _TMR0_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _receiveOverrun in BANK24

    None.

Critical Paths under _TMR0_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _receiveOverrun in BANK25

    None.

Critical Paths under _TMR0_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _receiveOverrun in BANK26

    None.

Critical Paths under _TMR0_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _receiveOverrun in BANK27

    None.

Critical Paths under _TMR0_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _receiveOverrun in BANK28

    None.

Critical Paths under _TMR0_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _receiveOverrun in BANK29

    None.

Critical Paths under _TMR0_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _receiveOverrun in BANK30

    None.

Critical Paths under _TMR0_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _receiveOverrun in BANK31

    None.

Critical Paths under _TMR0_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _receiveOverrun in BANK32

    None.

Critical Paths under _TMR0_ISR in BANK32

    None.

Critical Paths under _DEFAULT_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _receiveOverrun in BANK33

    None.

Critical Paths under _TMR0_ISR in BANK33

    None.

Critical Paths under _DEFAULT_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _receiveOverrun in BANK34

    None.

Critical Paths under _TMR0_ISR in BANK34

    None.

Critical Paths under _DEFAULT_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _receiveOverrun in BANK35

    None.

Critical Paths under _TMR0_ISR in BANK35

    None.

Critical Paths under _DEFAULT_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _receiveOverrun in BANK36

    None.

Critical Paths under _TMR0_ISR in BANK36

    None.

Critical Paths under _DEFAULT_ISR in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _receiveOverrun in BANK37

    None.

Critical Paths under _TMR0_ISR in BANK37

    None.

Critical Paths under _DEFAULT_ISR in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _receiveOverrun in BANK38

    None.

Critical Paths under _TMR0_ISR in BANK38

    None.

Critical Paths under _DEFAULT_ISR in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _receiveOverrun in BANK39

    None.

Critical Paths under _TMR0_ISR in BANK39

    None.

Critical Paths under _DEFAULT_ISR in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _receiveOverrun in BANK40

    None.

Critical Paths under _TMR0_ISR in BANK40

    None.

Critical Paths under _DEFAULT_ISR in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _receiveOverrun in BANK41

    None.

Critical Paths under _TMR0_ISR in BANK41

    None.

Critical Paths under _DEFAULT_ISR in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _receiveOverrun in BANK42

    None.

Critical Paths under _TMR0_ISR in BANK42

    None.

Critical Paths under _DEFAULT_ISR in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _receiveOverrun in BANK43

    None.

Critical Paths under _TMR0_ISR in BANK43

    None.

Critical Paths under _DEFAULT_ISR in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _receiveOverrun in BANK44

    None.

Critical Paths under _TMR0_ISR in BANK44

    None.

Critical Paths under _DEFAULT_ISR in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _receiveOverrun in BANK45

    None.

Critical Paths under _TMR0_ISR in BANK45

    None.

Critical Paths under _DEFAULT_ISR in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _receiveOverrun in BANK46

    None.

Critical Paths under _TMR0_ISR in BANK46

    None.

Critical Paths under _DEFAULT_ISR in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _receiveOverrun in BANK47

    None.

Critical Paths under _TMR0_ISR in BANK47

    None.

Critical Paths under _DEFAULT_ISR in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _receiveOverrun in BANK48

    None.

Critical Paths under _TMR0_ISR in BANK48

    None.

Critical Paths under _DEFAULT_ISR in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _receiveOverrun in BANK49

    None.

Critical Paths under _TMR0_ISR in BANK49

    None.

Critical Paths under _DEFAULT_ISR in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _receiveOverrun in BANK50

    None.

Critical Paths under _TMR0_ISR in BANK50

    None.

Critical Paths under _DEFAULT_ISR in BANK50

    None.

Critical Paths under _main in BANK51

    None.

Critical Paths under _receiveOverrun in BANK51

    None.

Critical Paths under _TMR0_ISR in BANK51

    None.

Critical Paths under _DEFAULT_ISR in BANK51

    None.

Critical Paths under _main in BANK52

    None.

Critical Paths under _receiveOverrun in BANK52

    None.

Critical Paths under _TMR0_ISR in BANK52

    None.

Critical Paths under _DEFAULT_ISR in BANK52

    None.

Critical Paths under _main in BANK53

    None.

Critical Paths under _receiveOverrun in BANK53

    None.

Critical Paths under _TMR0_ISR in BANK53

    None.

Critical Paths under _DEFAULT_ISR in BANK53

    None.

Critical Paths under _main in BANK54

    None.

Critical Paths under _receiveOverrun in BANK54

    None.

Critical Paths under _TMR0_ISR in BANK54

    None.

Critical Paths under _DEFAULT_ISR in BANK54

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  179606
                                             92 COMRAM     3     3      0
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     622
                           _initARGB
              _setTimedResponseDelay
                            _tickGet
                     _updateLedRange
 ---------------------------------------------------------------------------------
 (2) _setTimedResponseDelay                                1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              6     6      0    4604
                                             40 COMRAM     5     5      0
                        _bootPowerUp *
                         _canPowerUp *
                    _consumerPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0    1395
                                             39 COMRAM     1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0     450
                                             17 COMRAM     1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0     382
                                             12 COMRAM     5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0     735
                                             12 COMRAM     3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     211
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           4     4      0      99
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _consumerPowerUp                                      1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                          20    20      0    1037
                                             12 COMRAM     2     2      0
              _CAN1_OperationModeSet
            _prepareSelfEnumResponse
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _CAN1_OperationModeSet                                2     2      0     141
                                              0 COMRAM     2     2      0
              _CAN1_OperationModeGet
 ---------------------------------------------------------------------------------
 (4) _CAN1_OperationModeGet                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bootPowerUp                                          6     6      0     497
                                             12 COMRAM     6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0  147023
                                             30 BANK5     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
                 _bootProcessMessage *
                            _canPoll *
                  _canProcessMessage *
                  _canReceiveMessage *
             _consumerProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2   72439
                                             83 COMRAM     8     6      2
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4    5601
                                             48 COMRAM     5     1      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              4     4      0    2884
                                             41 COMRAM     4     4      0
                              _getEN
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doReval                                              6     5      1    6035
                                             43 COMRAM     6     5      1
                 _evtIdxToTableIndex
                   _findServiceIndex
                              _getEv
                       _sendMessage3
                       _sendMessage5
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5    9898
                                             46 COMRAM     8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              4     4      0    2884
                                             41 COMRAM     4     4      0
                              _getEN
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0    8662
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0     296
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0    6080
                                             43 COMRAM     6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4   11133
                                             58 COMRAM     5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4    3606
                                             53 COMRAM     5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              6     0      6   12637
                                             77 COMRAM     6     0      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                         7     0      7    5104
                                             70 COMRAM     7     0      7
                           _addEvent
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            24    17      7    4989
                                             46 COMRAM    24    17      7
                          _findEvent
                    _flushFlashBlock
                              _getEN
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _writeEv                                             16    14      2     782
                                             20 COMRAM    16    14      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0   21461
                                             60 COMRAM     3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2    6722
                                             45 COMRAM    15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage5
                       _sendMessage6
                 _tableIndexToEvtIdx
 ---------------------------------------------------------------------------------
 (4) _numEv                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _getEv                                               16    14      2     352
                                             12 COMRAM    16    14      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2    2603
                                             45 COMRAM     4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2    3505
                                             45 COMRAM     6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2    2723
                                             45 COMRAM     6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2    2788
                                             45 COMRAM     2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          9     7      2    3097
                                             45 COMRAM     8     6      2
                                NULL *
                   _canGetDiagnostic *
              _consumerGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2   11789
                                             83 COMRAM     6     4      2
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1     946
                                             20 COMRAM     5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   3     1      2       2
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       2     1      1       1
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   38    36      2   19277
                                             83 COMRAM     7     5      2
                                              0 BANK5     30    30      0
                                NULL *
                        _bootEsdData *
                         _canEsdData *
                   _canGetDiagnostic *
           _canWaitForTxQueueToDrain *
                    _consumerEsdData *
              _consumerGetDiagnostic *
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
                   _rebuildHashtable
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   4     1      3     155
                                              4 COMRAM     4     1      3
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6    2463
                                             37 COMRAM     7     1      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _sendMessage4                                         5     1      4    2403
                                             37 COMRAM     5     1      4
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3    2418
                                             37 COMRAM     4     1      3
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         5     5      0     319
                                              5 COMRAM     4     4      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     171
                                              4 COMRAM     1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     141
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (4) _consumerGetDiagnostic                                3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _consumerEsdData                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _canWaitForTxQueueToDrain                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     6     4      2     203
                                              6 COMRAM     4     2      2
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootEsdData                                          1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0    5892
                                             43 COMRAM     4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      29
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2    2361
                                             37 COMRAM     3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _consumerProcessMessage                               9     7      2    8192
                                             83 COMRAM     9     7      2
           _APP_processConsumedEvent
              _consumerEventCheckLen
                          _findEvent
                    _isConsumedEvent
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7    2491
                                             37 COMRAM     8     1      7
                                NULL (ARG) *
                        _bootEsdData (ARG) *
                         _canEsdData (ARG) *
                    _consumerEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _isConsumedEvent                                      1     1      0      29
                                              0 COMRAM     1     1      0
                _APP_isConsumedEvent
 ---------------------------------------------------------------------------------
 (4) _APP_isConsumedEvent                                  1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4    1244
                                             33 COMRAM    13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (3) _consumerEventCheckLen                                3     0      3    2841
                                             48 COMRAM     3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4    2795
                                             43 COMRAM     5     1      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _APP_processConsumedEvent                             9     7      2    1032
                                             27 COMRAM     9     7      2
                             _getEVs
                     _updateLedRange
                          _updateRGB
 ---------------------------------------------------------------------------------
 (4) _updateRGB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getEVs                                              15    15      0     395
                                             12 COMRAM    15    15      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                   10     8      2    1290
                                             15 COMRAM    10     8      2
               _getNumRxBuffersInUse
              _handleSelfEnumeration
                             _memcpy
                                _pop
 ---------------------------------------------------------------------------------
 (3) _pop                                                  9     7      2     200
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     146
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                5     5      0     298
                                             10 COMRAM     5     5      0
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2    2745
                                             83 COMRAM     4     2      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5    2635
                                             37 COMRAM     6     1      5
                  _getParameterFlags (ARG)
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                         11     3      8    2266
                                             26 COMRAM    11     3      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                      15    13      2    1997
                                             12 COMRAM    14    12      2
                _getNextWriteMessage
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
                               _have
                            _isEvent
                   _startEnumeration
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      82
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     119
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNumTxBuffersInUse                                 6     6      0      69
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _getNumRxBuffersInUse                                 6     6      0      47
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 12    10      2     222
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (2) _canPoll                                              1     1      0    1741
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0    1741
                                             21 COMRAM     7     7      0
                        _setNewCanId
                   _startEnumeration
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _startEnumeration                                     2     2      0     375
                                             10 COMRAM     2     2      0
                            _sendRTR
                            _tickGet
 ---------------------------------------------------------------------------------
 (8) _sendRTR                                              2     2      0      67
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0     905
                                             20 COMRAM     1     1      0
            _prepareSelfEnumResponse
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _prepareSelfEnumResponse                              2     2      0     133
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2     722
                                             83 COMRAM     4     2      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                                2     0      2       1
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2       1
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 4     4      0    2019
                                             10 COMRAM     4     4      0
                            _doFlash
                      _refreshString
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _refreshString                                        2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _doFlash                                              2     2      0    1762
                                              4 COMRAM     2     2      0
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _getNV                                                4     2      2      87
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0   14003
                                             59 COMRAM     1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      29
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    1033
                                             23 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    1033
                                             23 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0     529
                                             10 COMRAM     4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8      98
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     166
                                             10 COMRAM    13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (1) _factoryReset                                         5     5      0   10950
                                             54 COMRAM     5     5      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _teachFactoryReset                                    0     0      0    3666
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (2) _nvFactoryReset                                       3     3      0    1538
                                             20 COMRAM     3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _APP_nvDefault                                        3     3      0     792
                                              8 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     318
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _mnsFactoryReset                                      0     0      0     656
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _canFactoryReset                                      0     0      0     656
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _APP_factoryReset                                     1     1      0    3666
           _factoryResetGlobalEvents
 ---------------------------------------------------------------------------------
 (3) _factoryResetGlobalEvents                             0     0      0    3666
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       1     1      0    3666
                                             53 COMRAM     1     1      0
                   _rebuildHashtable
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                    14    14      0    2271
                                             39 COMRAM    14    14      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _writeNVM                                             7     3      4     656
                                             13 COMRAM     7     3      4
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (7) _FLASH_Write                                          9     5      4     247
                                              5 COMRAM     8     4      4
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (8) _loadFlashBlock                                       3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) _flushFlashBlock                                      1     1      0      46
                                              4 COMRAM     1     1      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (9) _eraseFlashBlock                                      4     4      0      23
                                              0 COMRAM     4     4      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (10) _APP_isSuitableTimeToWriteFlash                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EEPROM_Write                                         5     1      4     228
                                              8 COMRAM     4     0      4
                        _EEPROM_Read
               _EEPROM_WriteNoVerify
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EEPROM_WriteNoVerify                                 8     4      4      91
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    10    10      0    1327
                                             33 COMRAM     6     6      0
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               15    13      2     432
                                             12 COMRAM    15    13      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     139
                                             27 COMRAM     6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               14    12      2     351
                                             12 COMRAM    14    12      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _readNVM                                              6     3      3     247
                                              6 COMRAM     6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (2) _FLASH_Read                                           6     3      3     111
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          6     3      3      46
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (4) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         7     7      0     823
                                             10 COMRAM     7     7      0
                           _initARGB
                            _tickGet
                     _updateLedRange
 ---------------------------------------------------------------------------------
 (2) _updateLedRange                                       4     2      2     226
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) _initARGB                                             1     1      0     156
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _receiveOverrun                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DEFAULT_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
       _initARGB
       _tickGet
       _updateLedRange
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
           _clearAllEvents
             _rebuildHashtable
               _getEN
                 _readNVM
                   _EEPROM_Read
                   _FLASH_Read
               _getHash
                 _getEN (ARG)
                 _getNN (ARG)
                   _readNVM
               _getNN
             _removeTableEntry
               _flushFlashBlock
                 _APP_isSuitableTimeToWriteFlash
                 _eraseFlashBlock
                   _APP_isSuitableTimeToWriteFlash
               _rebuildHashtable
               _writeNVM
                 _APP_nvDefault (ARG)
                   ___awdiv
                   ___awmod
                 _EEPROM_Write (ARG)
                   _EEPROM_Read
                   _EEPROM_WriteNoVerify
                   _updateModuleErrorStatus
                 _FLASH_Write (ARG)
                   _eraseFlashBlock
                   _flushFlashBlock
                   _loadFlashBlock
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     _doFlash
       _getNV
     _refreshString
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
     ___lmul *
     _bootProcessMessage *
       _writeNVM
     _canPoll *
       _processEnumeration
         _setNewCanId
           _prepareSelfEnumResponse
           _writeNVM
         _startEnumeration
           _sendRTR
           _tickGet
         _tickGet
         _updateModuleErrorStatus
     _canProcessMessage *
       _sendMessage5
         _getParameterFlags (ARG)
           _have
         _sendMessage (ARG)
           _canSendMessage *
             _getNextWriteMessage
             _getNumRxBuffersInUse
             _getNumTxBuffersInUse
             _have
             _isEvent
             _startEnumeration
             _updateModuleErrorStatus
         _tableIndexToEvtIdx (ARG)
     _canReceiveMessage *
       _getNumRxBuffersInUse
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
     _consumerProcessMessage *
       _APP_processConsumedEvent
         _getEVs
           _readNVM
         _updateLedRange
         _updateRGB
       _consumerEventCheckLen
         _checkLen
           _sendMessage5
       _findEvent
         _getEN
         _getHash
         _getNN
       _isConsumedEvent
         _APP_isConsumedEvent
       _sendMessage7
         NULL(Fake) (ARG) *
         _bootEsdData (ARG) *
         _canEsdData (ARG) *
         _consumerEsdData (ARG) *
         _nvGetESDdata (ARG) *
         _sendMessage (ARG) *
         _tableIndexToEvtIdx (ARG) *
         _teachGetESDdata (ARG) *
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
         _sendMessage
       _sendMessage5
       _setLEDsByMode
         _showStatus
       _tickGet
       _writeNVM
     _mnsProcessMessage *
       NULL(Fake) *
       _bootEsdData *
       _canEsdData *
       _canGetDiagnostic *
         _getNumRxBuffersInUse
         _getNumTxBuffersInUse
       _canWaitForTxQueueToDrain *
       _consumerEsdData *
       _consumerGetDiagnostic *
       _findServiceIndex *
       _getParameter *
         _getParameterFlags
         _have
       _getParameterFlags *
       _mnsGetDiagnostic *
       _nvGetDiagnostic *
       _nvGetESDdata *
       _rebuildHashtable *
       _sendMessage2 *
       _sendMessage3 *
         _sendMessage
       _sendMessage4 *
         _getParameter (ARG)
         _sendMessage (ARG)
       _sendMessage5 *
       _sendMessage6 *
         _numEv (ARG)
         _sendMessage (ARG)
       _sendMessage7 *
       _setLEDsByMode *
       _startTimedResponse *
         _findServiceIndex (ARG)
       _teachGetDiagnostic *
       _teachGetESDdata *
       _writeNVM *
     _nvProcessMessage *
       _findServiceIndex
       _getNV
       _sendMessage2
       _sendMessage3
       _sendMessage4
       _sendMessage5
       _setNV
         _APP_nvValidate
         _APP_nvValueChanged
         _writeNVM
       _startTimedResponse
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _canGetDiagnostic *
         _consumerGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
           _readNVM
         _getNN
         _numEv
         _sendMessage5
         _sendMessage6
         _tableIndexToEvtIdx
     _showStatus *
     _teachProcessMessage *
       _doEvlrn
         _APP_addEvent
           _addEvent
             _findEvent
             _flushFlashBlock
             _getEN
             _rebuildHashtable
             _writeEv
               _writeNVM
             _writeNVM
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doEvuln
         _removeEvent
           _findEvent
           _removeTableEntry
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doNenrd
         _evtIdxToTableIndex
         _getEN
         _getNN
         _sendMessage3
         _sendMessage5
       _doNerd
         _findServiceIndex
         _startTimedResponse
       _doNnclr
         _clearAllEvents
         _sendMessage2
         _sendMessage5
       _doNnevn
         _getEN
         _sendMessage3
       _doReqev
         _findEvent
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _sendMessage6
         _startTimedResponse
       _doReval
         _evtIdxToTableIndex
         _findServiceIndex
         _getEv
         _sendMessage3
         _sendMessage5
         _startTimedResponse
       _doRqevn
         _getEN
         _sendMessage3
       _sendMessage3
       _sendMessage5
       _teachCheckLen
         _checkLen
         _sendMessage5
     _tickGet *
   _powerUp
     _bootPowerUp *
       _readNVM
     _canPowerUp *
       _CAN1_OperationModeSet
         _CAN1_OperationModeGet
       _prepareSelfEnumResponse
       _readNVM
       _tickGet
     _consumerPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
         _readNVM
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _initARGB
     _setTimedResponseDelay
     _tickGet
     _updateLedRange

 _receiveOverrun (ROOT)

 _TMR0_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM           12799      0    1405     11.0%
BITBIGSFR_1       2304      0       0      0.0%
BITBIGSFRlhl       577      0       0      0.0%
BITBANK54          256      0       0      0.0%
BANK54             256      0       0      0.0%
BITBANK53          256      0       0      0.0%
BANK53             256      0       0      0.0%
BITBANK52          256      0       0      0.0%
BANK52             256      0       0      0.0%
BITBANK51          256      0       0      0.0%
BANK51             256      0       0      0.0%
BITBANK50          256      0       0      0.0%
BANK50             256      0       0      0.0%
BITBANK49          256      0       0      0.0%
BANK49             256      0       0      0.0%
BITBANK48          256      0       0      0.0%
BANK48             256      0       0      0.0%
BITBANK47          256      0       0      0.0%
BANK47             256      0       0      0.0%
BITBANK46          256      0       0      0.0%
BANK46             256      0       0      0.0%
BITBANK45          256      0       0      0.0%
BANK45             256      0       0      0.0%
BITBANK44          256      0       0      0.0%
BANK44             256      0       0      0.0%
BITBANK43          256      0       0      0.0%
BANK43             256      0       0      0.0%
BITBANK42          256      0       0      0.0%
BANK42             256      0       0      0.0%
BITBANK41          256      0       0      0.0%
BANK41             256      0       0      0.0%
BITBANK40          256      0       0      0.0%
BANK40             256      0       0      0.0%
BITBANK39          256      0       0      0.0%
BANK39             256      0       0      0.0%
BITBANK38          256      0       0      0.0%
BANK38             256      0       0      0.0%
BITBANK37          256      0       0      0.0%
BANK37             256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0     252     98.4%
BITBANK7           256      0       0      0.0%
BANK7              256      0     255     99.6%
BITBANK6           256      0       0      0.0%
BANK6              256      0     189     73.8%
BITBIGSFRhllh      243      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160     45     159     99.4%
BITBIGSFRhlh       156      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     95      95    100.0%
BITBIGSFRllllll     64      0       0      0.0%
BITBIGSFRhlll       61      0       0      0.0%
BITBIGSFRllhl       43      0       0      0.0%
BITBIGSFRllhh       40      0       0      0.0%
BITBIGSFRlllllh     37      0       0      0.0%
BITBIGSFRlllh       20      0       0      0.0%
BITBIGSFRlhh        11      0       0      0.0%
BITBIGSFRhh          8      0       0      0.0%
BITBIGSFRllllh       1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0    2355      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Apr 23 15:01:24 2025

                      nerdCallback@nodeNumber 0530                           findEvent@tableIndex 052E  
                   __end_of_pollTimedResponse 626A                        ?_handleSelfEnumeration 0501  
                            sendMessage@data1 051C                              sendMessage@data2 051D  
                            sendMessage@data3 051E                              sendMessage@data4 051F  
                            sendMessage@data5 0520                              sendMessage@data6 0521  
                            sendMessage@data7 0522                           findEvent@nodeNumber 0522  
               __end_of_setTimedResponseDelay 830E                                 ?_APP_addEvent 0547  
                        _getNumRxBuffersInUse 7464                                            l51 8338  
                                          l82 8356                                            l75 4F14  
                                          l79 7A00                                            l97 833E  
                       _timedResponseCallback 0587                           _timedResponseOpcode 05A2  
                                ___awdiv@sign 0506                                            _nn 058F  
                            ?_flushFlashBlock 0501                       __end_of_eraseFlashBlock 7006  
                                         l100 834A                                           l103 834E  
                                         l112 5A5A                                           l113 5B10  
                                         l106 8352                                           l109 81C8  
                                         l227 4B44                                           l235 7D46  
                                         l323 6C2E                                           l228 4C48  
                                         l332 7EDA                                           l261 25FE  
                                         l333 7F06                                           l238 8314  
                                         l334 7EE2                                           l318 5CBE  
                                         l319 5CE2                                           l266 771C  
                                         l602 5DBA                                           l275 52E2  
                                         l268 7756                                           l284 8346  
                                         l269 7762                                           l613 832C  
                                         l630 6642                                           l631 664E  
                                         l287 835A                        __end_of_updateLedRange 7D48  
                                         l720 47E0                                           l624 6698  
                                         l545 8282                                           l641 74D6  
                                         l810 8304                                           l626 6612  
                                         l618 820C                                           l635 7284  
                                         l651 2C48                                           l724 7C7A  
                                         l652 2EC4                                           l660 82E0  
                                         l732 7050                                           l548 4C8C  
                                         l805 3EEA                                           l646 2C2A  
                                         l670 4432                                           l814 7FFA  
                                         l663 82F0                                           l735 7084  
                                         l824 82C8                                           l736 7086  
                                         l585 4DBA                                           l666 7D02  
                                         l930 7DC4                                           l819 8266  
                                         l739 82FA                                           l684 7624  
                                         l925 8332                                           l669 4286  
                                         l598 7374                                           l694 65F2  
                                         l950 1910                                           l774 7E34  
                                         l936 1ECE                                           l953 19A4  
                                         l793 3DDC                                           l962 1AF4  
                                         l947 185C                                           l779 3F9C  
                                         l788 3DD0                               checkPowerOnPb@i 053C  
                          _enumerationResults 0632              ??_APP_isSuitableTimeToWriteFlash 0501  
             ?_APP_isSuitableTimeToWriteFlash 0501                                           _evs 0800  
                                         _pop 626A                                 _APP_nvDefault 51A8  
                                ___awmod@sign 0506                                           prod 04F3  
                                         tosl 04FD                                           wreg 04E8  
                tableIndexToEvtIdx@tableIndex 0501                       APP_nvValueChanged@index 0501  
                     APP_nvValueChanged@value 0501                                   _subtestTime 0578  
         __end_of_mnsTRallDiagnosticsCallback 5522                   _mnsTRallDiagnosticsCallback 5406  
                                        l1000 7108                                          l1012 802A  
                                        l1005 7F6A                                          l1030 75B8  
                                        l1110 6CC0                                          l1022 7C0E  
                                        l1023 7C32                                          l1040 7BC2  
                                        l1017 822C                                          l2001 673E  
                                        l1105 649A                                          l1041 7BE6  
                                        l1026 829A                                          l1131 5404  
                                        l1115 69C6                                          l1035 718A  
                                        l1124 6A7E                                          l1044 8058  
                                        l1125 6B00                                          l1141 8326  
                                        l1061 720A                                          l1053 5BFA  
                                        l1301 0CC0                                          l1135 67E4  
                                        l2103 76EA                                          l1119 8342  
                                        l1144 824A                                          l2104 76FA  
                                        l2032 6928                                          l1400 2930  
                                        l1048 5F62                                          l1320 0ED4  
                                        l1081 7E9E                                          l1065 4AD4  
                                        l2017 327A                                          l1402 2954  
                                        l1074 5E90                                          l1138 8320  
                                        l2026 3296                                          l1147 5732  
                                        l1171 6326                                          l1411 7FCA  
                                        l1148 5778                                          l2036 7E68  
                                        l1420 7CBE                                          l2052 80AC  
                                        l1157 582A                                          l2037 7E6A  
                                        l2061 812A                                          l1086 461C  
                                        l1270 7690                                          l2126 6888  
                                        l1166 5A1A                                          l2046 8100  
                                        l1350 15D8                                          l2119 6878  
                                        l2055 8154                                          l1407 2A9C  
                                        l1319 0E58                                          l2071 6336  
                                        l1512 7D86                                          l1096 3C5E  
                                        l2080 63C2                                          l1425 4960  
                                        l2049 80D6                                          l1521 7F9A  
                                        l1273 4F48                                          l2073 6344  
                                        l2066 6D52                                          l1370 6F80  
                                        l2058 8082                                          l1098 3CB6  
                                        l2074 6346                                          l2323 61A8  
                                        l1291 16F6                                          l1283 5064  
                                        l1275 4F78                                          l2075 6382  
                                        l1700 754A                                          l1532 7AFC  
                                        l1540 6DE0                                          l1452 6B98  
                                        l2076 6348                                          l1461 7ED2  
                                        l1277 4FAC                                          l1517 7DFE  
                                        l1622 7B86                                          l1374 82DE  
                                        l1278 4FB0                                          l2078 634A  
                                        l1631 794C                                          l1359 169A  
                                        l1279 4FE4                                          l2336 6548  
                                        l1616 82B2                                          l1456 5520  
                                        l1528 782A                                          l1625 7B9A  
                                        l1641 73C6                                          l1369 6F7C  
                                        l1545 3642                                          l1642 73EC  
                                        l1634 776C                                          l1394 27FA  
                                        l1619 7B4E                                          l1651 6FAE  
                                        l1731 369A                                          l1652 6FE0  
                                        l1660 6A64                                          l1740 3754  
                                        l1396 2836                                          l1572 7A56  
                                        l1733 36A2                                          l1389 278A  
                                        l1638 77C8                                          l1742 376E  
                                        l1566 81EA                                          l1726 817C  
                                        l1671 6A60                                          l1663 69F0  
                                        l1751 3838                                          l1824 7462  
                                        l1656 7004                                          l1680 7AAA  
                                        l1760 38EC                                          l1744 378A  
                                        l1649 6F9E                                          l1665 6A0E  
                                        l1753 3840                                          l1817 788C  
                                        l1674 7A58                                          l1762 3906  
                                        l1770 39CE                                          l1746 37A0  
                                        l1850 7970                                          l1667 6A1E  
                                        l1668 6A3C                                          l1676 7A68  
                                        l1692 78EE                                          l1764 3922  
                                        l1748 37B6                                          l1780 508E  
                                        l1844 831A                                          l1677 7A94  
                                        l1685 557E                                          l1766 3938  
                                        l1782 508E                                          l1774 506C  
                                        l1854 7994                                          l1687 5630  
                                        l1783 509A                                          l1855 79A8  
                                        l1768 394E                                          l1864 6228  
                                        l1793 5112                                          l1777 5082  
                                        l1961 6E6C                                          l1794 51A6  
                                        l1859 6268                                _bootloaderType 05AA  
                                        l1973 572E                                          l1982 830C  
                                        l1967 6EF8                                          l1992 5FE2  
                                        l7201 7452                                          l1985 60A4  
                                        l2769 7B4C                                          l7211 74F8  
                                        l8003 5216                                          l1995 6024  
                                        l1979 5922                                          l1988 60E6  
                                        l7141 7B94                                          l7133 7B4E  
                                        l7221 7520                                          l7205 74DA  
                                        l8013 52A2                                          l7301 7282  
                                        l8101 801A                                          l7135 7B5E  
                                        l7215 7514                                          l7207 74DE  
                                        l8007 525C                                          l8015 52E0  
                                        l7231 7CC0                                          l8111 6DE6  
                                        l8023 8344                                          l7137 7B7C  
                                        l7153 73CA                                          l7145 7376  
                                        l7401 52F6                                          l7129 8354  
                                        l7161 6F82                                          l7241 7CFC  
                                        l7233 7CC8                                          l7313 747A  
                                        l7305 7464                                          l7321 7E38  
                                        l8121 6E5A                                          l8113 6E12  
                                        l8105 6DE4                                          l8201 47FA  
                                        l8033 661E                                          l8041 6688  
                                        l7139 7B84                                          l7155 73E4  
                                        l7147 73A8                                          l7411 5362  
                                        l7227 82CA                                          l7171 6FEE  
                                        l7163 6F96                                          l7251 6A04  
                                        l7243 69C8                                          l8051 7C5A  
                                        l7235 7CD8                                          l7315 74CC  
                                        l7307 7474                                          l7331 6E70  
                                        l7323 7E3A                                          l8123 6E6A  
                                        l8115 6E52                                          l8131 7964  
                                        l8035 6630                                          l8027 65F6  
                                        l9003 6D8C                                          l7181 7400  
                                        l7421 8244                                          l7413 53F2  
                                        l7405 5302                                          l7229 82DC  
                                        l7173 7002                                          l7165 6FB2  
                                        l7261 6A5E                                          l7253 6A0C  
                                        l9101 37CC                                          l8301 5076  
                                        l8053 7C74                                          l8045 7C36  
                                        l7237 7CE6                                          l7317 74D4  
                                        l7341 6EDE                                          l7325 7E4E  
                                        l7501 2B0A                                          l8221 4812  
                                        l8213 4806                                          l8205 4800  
                                        l8141 799E                                          l8133 796A  
                                        l8029 6606                                          l9013 81CC  
                                        l9005 6DAC                                          l7191 7434  
                                        l7183 740C                                          l7175 73EE  
                                        l7423 8248                                          l7407 5348  
                                        l7271 77AA                                          l7263 7764  
                                        l7431 7906                                          l7167 6FD4  
                                        l7159 6F82                                          l7255 6A2A  
                                        l7247 69DC                                          l9111 38A0  
                                        l9103 3848                                          l8311 50AE  
                                        l8303 507C                                          l8047 7C46  
                                        l7239 7CF6                                          l7327 7E64  
                                        l7511 2B8E                                          l7503 2B26  
                                        l8063 8104                                          l8151 80DA  
                                        l8119 6E58                                          l8135 7974  
                                        l8127 7950                                          l8039 665A  
                                        l8071 7FEA                                          l9015 81D0  
                                        l9007 6DD0                                          l8143 8324  
                                        l8401 4BB0                                          l7193 7444  
                                        l7185 741E                                          l7177 73F4  
                                        l9201 3FA8                                          l7417 822E  
                                        l7409 5356                                          l7601 5756  
                                        l7273 77B4                                          l7265 777C  
                                        l7441 794A                                          l7169 6FDE  
                                        l7257 6A3A                                          l7249 6A00  
                                        l7281 7A86                                          l9121 38EE  
                                        l9105 3868                                          l8321 50F2  
                                        l8313 50C0                                          l8305 5086  
                                        l8049 7C56                                          l7361 59BA  
                                        l7353 5924                                          l7345 6EE4  
                                        l7337 6E72                                          l7521 2C0A  
                                        l7513 2BAA                                          l7505 2B3A  
                                        l8081 68DC                                          l8225 481A  
                                        l8217 480C                                          l8137 7984  
                                        l8129 7954                                          l8065 7FCE  
                                        l9025 81DC                                          l9009 6DDE  
                                        l8161 6958                                          l8153 692C  
                                        l9041 7A38                                          l9033 7A18  
                                        l8411 4BFE                                          l8403 4BB2  
                                        l7187 742E                                          l7195 7446  
                                        l7179 73FC                                          l9211 3FFE  
                                        l9203 3FAA                                          l7419 8234  
                                        l7611 577A                                          l7603 5766  
                                        l7275 77C6                                          l7267 779A  
                                        l7435 792A                                          l7427 78F0  
                                        l7259 6A4A                                          l7283 7A92  
                                        l7451 5576                                          l9131 3924  
                                        l9123 38FE                                          l9115 38B6  
                                        l9107 387A                                          l9051 367E  
                                        l8323 50FA                                          l8315 50C8  
                                        l8307 5092                                          l8331 5124  
                                        l7363 59E4                                          l7355 5990  
                                        l7291 721C                                          l7347 6EE6  
                                        l7339 6E9E                                          l7531 2C56  
                                        l7523 2C22                                          l7515 2BC6  
                                        l7507 2B56                                          l8083 68FA  
                                        l8075 688A                                          l8243 4840  
                                        l8235 483A                                          l8139 799A  
                                        l8067 7FDE                                          l9019 81D6  
                                        l8155 693C                                          l9043 7A4E  
                                        l9035 7A26                                          l9027 7A02  
                                        l8171 7E82                                          l8147 831E  
                                        l8059 82F2                                          l8421 4C28  
                                        l8413 4C00                                          l8405 4BB4  
                                        l7197 744C                                          l7189 7430  
                                        l9221 403C                                          l9213 4012  
                                        l9205 3FAC                                          l7621 57B6  
                                        l7613 5792                                          l7605 5768  
                                        l7269 779E                                          l7437 7930  
                                        l7429 78F2                                          l7285 7AA2  
                                        l7277 7A58                                          l7461 55E6  
                                        l7453 557A                                          l7445 5522  
                                        l9141 3950                                          l9125 3908  
                                        l9117 38D6                                          l9109 3880  
                                        l9061 36E4                                          l9053 3682  
                                        l8325 510A                                          l8317 50D8  
                                        l8309 509E                                          l9301 2270  
                                        l7381 75E0                                          l8501 4622  
                                        l7365 59F2                                          l7349 6EF6  
                                        l7541 2C8E                                          l7533 2C5C  
                                        l7525 2C3A                                          l7517 2BE2  
                                        l7509 2B72                                          l8085 6920  
                                        l8077 68A4                                          l8229 4820  
                                        l8093 80B0                                          l8165 6964  
                                        l8181 8340                                          l9045 7A54  
                                        l9029 7A12                                          l7701 6C5E  
                                        l8173 7E92                                          l8423 4C2A  
                                        l8415 4C22                                          l8407 4BC8  
                                        l7199 7450                                          l9223 404E  
                                        l9215 4014                                          l9207 3FC0  
                                        l7631 581A                                          l7623 57E2  
                                        l7615 57B4                                          l7439 7938  
                                        l7287 7AA6                                          l7279 7A6C  
                                        l7463 5610                                          l7455 5582  
                                        l7447 5554                                          l7471 7890  
                                        l9135 393A                                          l9127 3918  
                                        l9063 3706                                          l9055 36AA  
                                        l8327 5118                                          l8319 50E0  
                                        l9311 252C                                          l9303 22FC  
                                        l7391 7620                                          l7383 75F6  
                                        l7375 75C0                                          l8511 46A8  
                                        l8503 465C                                          l7359 599C  
                                        l7551 2D80                                          l7543 2CF4  
                                        l7535 2C6E                                          l7527 2C40  
                                        l7519 2BFE                                          l7711 6CCC  
                                        l8431 5A1E                                          l8079 68BC  
                                        l8263 486E                                          l8255 4846  
                                        l8095 7FFE                                          l8343 7F8A  
                                        l8159 6948                                          l7703 6CBE  
                                        l8425 4C38                                          l8417 4C24  
                                        l8409 4BFC                                          l8361 4B32  
                                        l9241 4096                                          l9225 4060  
                                        l9217 4024                                          l9209 3FC2  
                                        l7393 6742                                          l7625 5806  
                                        l7465 5612                                          l7457 5596  
                                        l7449 5568                                          l7473 7894  
                                        l9129 391A                                          l9081 3782  
                                        l9073 3756                                          l9057 36CC  
                                        l9049 3644                                          l9321 25F8  
                                        l9305 2388                                          l7385 7600  
                                        l7377 75CE                                          l7369 75BC  
                                        l8521 4704                                          l8513 46C4  
                                        l8505 4666                                          l7297 7222  
                                        l7289 720C                                          l7561 2DFE  
                                        l7553 2D8E                                          l7545 2D4A  
                                        l7537 2C7E                                          l7721 6CE0  
                                        l7713 6CD0                                          l8433 5A3E  
                                        l8089 6926                                          l7641 63FC  
                                        l7633 63E4                                          l8193 47EE  
                                        l8185 805C                                          l8097 800E  
                                        l8337 7F6E                                          l7801 3CB0  
                                        l8177 7E98                                          l8169 7E6C  
                                        l8427 4C3C                                          l8419 4C26  
                                        l8371 4B66                                          l8363 4B34  
                                        l8355 4ADC                                          l9251 4178  
                                        l9243 409A                                          l9235 4074  
                                        l9227 406E                                          l9219 402A  
                                        l7395 67D2                                          l7627 5808  
                                        l7467 562E                                          l7459 559A  
                                        l7483 78C4                                          l7731 820E  
                                        l8347 8334                                          l9171 76CA  
                                        l9163 7692                                          l9083 378C  
                                        l9075 3766                                          l9067 371C  
                                        l9059 36DE                                          l9307 2414  
                                        l9315 25B8                                          l9331 773C  
                                        l9323 76FC                                          l7811 7360  
                                        l7387 7606                                          l7379 75D0  
                                        l8531 4738                                          l8523 4706  
                                        l8515 46D4                                          l8507 46A0  
                                        l7299 727A                                          l7571 2E74  
                                        l7563 2E1A                                          l7555 2DAA  
                                        l7547 2D64                                          l7539 2C86  
                                        l7491 2AC0                                          l7723 6CE4  
                                        l7715 6CD4                                          l7707 6CC4  
                                        l8611 7B2E                                          l8603 7AFE  
                                        l8451 5AC8                                          l8443 5A5C  
                                        l8435 5A54                                          l7651 644E  
                                        l7643 641C                                          l7635 63FA  
                                        l8267 4882                                          l8259 485A  
                                        l8187 47E4                                          l8291 7FAE  
                                        l8339 7F7E                                          l7803 3CB4  
                                        l8429 4C3E                                          l8381 4B7C  
                                        l8373 4B68                                          l8365 4B46  
                                        l8357 4B12                                          l8349 4AD6  
                                        l9261 41DA                                          l9253 417A  
                                        l9245 409C                                          l9237 4084  
                                        l9229 4070                                          l7629 5818  
                                        l7477 78AC                                          l7741 8218  
                                        l7901 64C6                                          l9181 6820  
                                        l9173 67E6                                          l9165 76A2  
                                        l9093 37B8                                          l9077 3770  
                                        l9069 373E                                          l9149 3964  
                                        l9309 24A0                                          l9317 25E6  
                                        l9333 7740                                          l9325 770E  
                                        l7813 7364                                          l7389 761A  
                                        l8541 474E                                          l8525 4714  
                                        l8517 46F4                                          l8533 4744  
                                        l8509 46A6                                          l7581 2EB6  
                                        l7573 2E78                                          l7565 2E36  
                                        l7557 2DC6                                          l7549 2D72  
                                        l7493 2AD6                                          l7725 6CE8  
                                        l7717 6CD8                                          l7709 6CC8  
                                        l8621 659C                                          l8605 7B12  
                                        l8613 7B32                                          l8461 5B08  
                                        l8453 5AD8                                          l8445 5A9C  
                                        l7661 6486                                          l7653 6466  
                                        l7645 642C                                          l7821 6F12  
                                        l8197 47F4                                          l8189 47E8  
                                        l8285 48B2                                          l8701 5F48  
                                        l9405 6C00                                          l9501 4D68  
                                        l9421 4C76                                          l9413 4C4A  
                                        l8391 4B86                                          l8383 4B7E  
                                        l8375 4B76                                          l8367 4B60  
                                        l8359 4B22                                          l9263 4214  
                                        l9247 40B0                                          l9239 4086  
                                        l7399 52E6                                          l7743 8228  
                                        l7911 64FE                                          l7903 64CE  
                                        l9191 6868                                          l9183 682E  
                                        l9175 67F6                                          l9167 76B0  
                                        l9087 37A2                                          l9079 3780  
                                        l9319 25E8                                          l9271 1ED0  
                                        l9327 7710                                          l9335 834C  
                                        l7807 72FE                                          l8551 478E  
                                        l8543 4762                                          l8535 474A  
                                        l8527 4724                                          l8519 4700  
                                        l7583 2EC0                                          l7575 2E84  
                                        l7567 2E52                                          l7559 2DE2  
                                        l7495 2AEA                                          l7727 6CFC  
                                        l7719 6CDC                                          l7815 812E  
                                        l8623 65A0                                          l8615 654C  
                                        l8607 7B1E                                          l8455 5AE6  
                                        l8447 5AAC                                          l7655 647E  
                                        l7831 6F40                                          l7823 6F14  
                                        l8287 8086                                          l8295 7FBA  
                                        l7751 39FC                                          l9351 5C0E  
                                        l9343 5BFC                                          l9511 4D6E  
                                        l9503 4D6C                                          l9431 4C98  
                                        l9423 4C84                                          l9415 4C50  
                                        l8393 4B8C                                          l8385 4B80  
                                        l8377 4B78                                          l8369 4B62  
                                        l9265 4228                                          l9249 416A  
                                        l9257 4192                                          l7681 4612  
                                        l7737 8210                                          l7921 6538  
                                        l7913 6514                                          l7905 64E0  
                                        l9193 6872                                          l9185 6838  
                                        l9177 680C                                          l9169 76C0  
                                        l9281 1EE4                                          l9273 1ED8  
                                        l9329 772A                                          l7809 730A  
                                        l8553 4790                                          l8529 4734  
                                        l8561 47AC                                          l7577 2E9C  
                                        l7569 2E6E                                          l7497 2AFC  
                                        l7489 2A9E                                          l7729 6D1C  
                                        l8625 65A6                                          l8617 6550  
                                        l8609 7B22                                          l8457 5AF4  
                                        l8449 5ABA                                          l7649 6432  
                                        l8641 82FE                                          l7841 6F7A  
                                        l7833 6F56                                          l7825 6F2A  
                                        l7817 6EFA                                          l8289 7F9E  
                                        l7761 3A32                                          l7753 39FE  
                                        l7745 39D0                                          l8713 71E2  
                                        l8705 718C                                          l8481 7008  
                                        l9361 5C2C                                          l9353 5C0E  
                                        l9345 5C02                                          l9521 4D78  
                                        l9513 4D6E                                          l9441 4CE6  
                                        l9433 4CAE                                          l9425 4C90  
                                        l9417 4C58                                          l8395 4B8E  
                                        l8387 4B82                                          l8379 4B7A  
                                        l7931 7D16                                          l9267 4236  
                                        l9259 41C8                                          l9195 3F9E  
                                        l7587 5730                                          l7683 4616  
                                        l7675 4596                                          l7667 4436  
                                        l7739 8216                                          l7851 60F8  
                                        l7923 6540                                          l7915 651C  
                                        l7907 64E8                                          l9187 6856  
                                        l9179 6814                                          l8299 5068  
                                        l9291 209E                                          l9275 1EE2  
                                        l9339 8350                                          l8555 47A0  
                                        l7579 2EA4                                          l7499 2B02  
                                        l8619 658A                                          l9611 4280  
                                        l8459 5AF8                                          l7659 6484  
                                        l9603 8328                                          l7843 6F7E  
                                        l7835 6F58                                          l7827 6F2C  
                                        l7819 6EFC                                          l8475 7EF0  
                                        l8467 7ED6                                          l8571 81F2  
                                        l7691 6C42                                          l7763 3B4A  
                                        l7747 39E6                                          l8707 71A2  
                                        l8803 7154                                          l8731 4A08  
                                        l8723 49B8                                          l8715 4962  
                                        l8811 5B2C                                          l8491 705E  
                                        l8483 700A                                          l9371 5C5E  
                                        l9363 5C52                                          l9531 4D84  
                                        l9523 4D7A                                          l9515 4D72  
                                        l9451 4D08                                          l9443 4CE8  
                                        l9435 4CB2                                          l9419 4C5C  
                          doEvuln@eventNumber 053D                                          l8397 4B90  
                                        l8389 4B84                                          l7933 7D1A  
                                        l9197 3FA2                                          l7597 5734  
                                        l7685 461A                                          l7677 4600  
                                        l7669 4594                                          l7861 611E  
                                        l7853 6100                                          l7917 6522  
                                        l7909 64F0                                          l8477 8268  
                                        l8901 7674                                          l9189 6866  
                                        l9293 212A                                          l9285 1EFA  
                                        l8549 4764                                          l8557 47A4  
                                        l8629 65BE                                          l9621 429C  
                                        l9605 423E                                          l8637 82B4  
                                        l7941 8348                                          l7837 6F68  
                                        l7829 6F3E                                          l8469 7EEA  
                                        l8581 81FE                                          l8645 824E  
                                        l7765 3B5A                                          l7781 3C66  
                                        l7757 3A12                                          l7749 39F6  
                                        l8709 71B2                                          l8805 7170  
                                        l8733 4A10                                          l8725 49C8  
                                        l8717 4978                                          l8821 5B5E  
                                        l8661 7088                                          l9381 6B9A  
                                        l9701 3D7C                                          l8493 7066  
                                        l8485 701E                                          l9373 5C6E  
                                        l9541 4DAA                                          l9533 4D88  
                                        l9525 4D7C                                          l9517 4D74  
                                        l9453 4D1A                                          l9445 4CEA  
                                        l9437 4CCE                                          l9269 8308  
                                        ?_pop 0501                                          l8399 4BAE  
                                        l7935 7D22                                          l9199 3FA6  
                                        l7599 5754                                          l7679 4602  
                                        l7927 833A                                          l7871 6156  
                                        l7863 6126                                          l7855 6104  
                                        l7847 60E8                                          l7919 6528  
                                        l8479 826C                                          l9295 21B6  
                                        l9287 1F86                                          l8591 62A0  
                                        l9631 42DE                                          l9623 42A8  
                                        l9607 4252                                          l7951 6A78  
                                        l8903 7C7C                                          l8583 82E0  
                                        l7839 6F6A                                          l8575 81F8  
                                        l8647 8252                                          l7695 6C48  
                                        l7775 3BEC                                          l7767 3BA4  
                                        l7759 3A20                                          l7791 3C84  
                                        l8751 4AB6                                          l8735 4A20  
                                        l8743 4A62                                          l8719 4988  
                                        l8831 5BAC                                          l8823 5B6E  
                                        l8815 5B42                                          l8807 5B14  
                                        l8663 7098                                          l9383 6BBA  
                                        l9711 3D88                                          l8495 7080  
                                        l8487 702E                                          l9375 5C7E  
                                        l9367 5C58                                          l9359 5C10  
                                        l9551 4DB8                                          l9543 4DAE  
                                        l9527 4D7E                                          l9519 4D76  
                                        l9471 4D4E                                          l9463 4D42  
                                        l9455 4D28                                          l9535 4D8E  
                                        l9447 4CEE                                          l9439 4CD8  
                                        l7937 7D32                                          l7929 7D06  
                                        l7881 6182                                          l7873 615C  
                                        l7865 6138                                          l7857 6112  
                                        l7849 60EA                                          l9289 2012  
                                        l8593 62D8                                          l8585 626A  
                                        l9633 42E4                                          l9625 42C0  
                                        l9617 4296                                          l9609 4264  
                                        l7961 6AEC                                          l8905 7C80  
                                        l8913 7C9E                                          l8569 81EE  
                                        l8657 8258                                          l8921 6B18  
                                        l7697 6C58                                          l7689 6C32  
                                        l7793 3CA2                                          l7777 3C4C  
                                        l7769 3BEA                                          l7785 3C6C  
                                        l7945 81A8                                          l8681 5E92  
                                        l8761 8284                                          l8737 4A42  
                                        l8745 4A74                                          l8729 49F8  
                                        l8825 5B72                                          l8817 5B46  
                                        l8809 5B1C                                          l8665 70B2  
                                        l8673 70EE                                          l9393 6BE2  
                                        l9553 5CE4                                          l8489 7040  
                                        l9369 5C5C                                          l9545 4DB0  
                                        l9537 4D92                                          l9529 4D80  
                                        l9481 4D52                                          l9465 4D42  
                                        l9449 4CF2                                          l7939 7D34  
                                        l7875 6172                                          l7867 6140  
                                        l7883 6188                                          l7859 611A  
                                        l7891 649C                                          l8659 832E  
                                        l7971 7AAE                                          l9299 2242  
                                        l8499 461E                                          l8595 62E6  
                                        l8587 6294                                          l9635 42EA  
                                        l9627 42C8                                          l7963 6AEE  
                                        l8907 7C8A                                          l8843 7F48  
                                        l8931 546E                                          l8923 6B96  
                                        l8915 6B02                                          l7787 3C7E  
                                        l7779 3C4E                                          l8691 5EF4  
                                        l8683 5E94                                          l8755 802C  
                                        l8771 7BFA                                          l8763 7BE8  
                                        l8747 4A82                                          l8739 4A48  
                                        l8835 5BE0                                          l8819 5B56  
                                        l8827 5B8C                                          l8667 70C2  
                                        l9811 1798                                          l9395 6BFA  
                                        l9387 6BC0                                          l9571 5D48  
                                        l9555 5CFC                                          l9731 3E86  
                                        l9707 3D82                                          l9379 5CCA  
                                        l9547 4DB4                                          l9539 4D96  
                                        l9483 4D54                                          l9467 4D46  
                                        l7885 6198                                          l7877 617A  
                                        l7869 6148                                          l7893 649E  
                                        l7973 7ABE                                          l8597 6310  
                                        l9637 4304                                          l9645 4310  
                                        l9629 42D0                                          l7965 6AFE  
                                        l7949 6A68                                          l8909 7C94  
                                        l8853 7F54                                          l8837 7F3E  
                                        l8861 7562                                          l8917 6B12  
                                        l8693 5F06                                          l8685 5EA4  
                                        l8757 8030                                          l8773 7C0C  
                                        l8829 5B9E                                          l8669 70E8  
                                        l8677 70F4                                          l9813 17B8  
                                        l9805 1770                                          l9565 5D26  
                                        l9733 3EBC                                          l9717 3DA4  
                                        l9549 4DB6                                          l9485 4D58  
                                        l9469 4D4A                                          l7887 61A0  
                                        l7879 617C                                          l7895 64AC  
                                        l7983 7AE6                                          l8599 631E  
                                        l9655 434A                                          l9647 432A  
                                        l9639 430A                                          l7959 6A80  
                                        l8847 7F4E                                          l8839 7F42  
                                        l8863 7570                                          l8855 754C  
                                        l8951 7EB0                                          l8943 54EC  
                                        l8935 5474                                          l8927 5406  
                                        l7799 3CAC                                          l8759 803E  
                                        l8775 7C10                                          l8791 7BC4  
                                        l9815 17D6                                          l9575 5D4E  
                                        l9559 5D02                                          l9751 3F74  
                                        l9719 3DD0                                          l9495 4D60  
                                        l9487 4D5C                                          l9479 4D52  
                                        l9671 7E18                                          l9663 7E00  
                                        l7897 64B4                                          l7993 51C2  
                                        l8961 7D48                                          l7977 7ACA  
                                        l9657 442A                                          l9649 4342  
                                        l7969 830E                                          l8881 5DFE  
                                        l8873 5DBE                                          l8865 7582  
                                        l8857 755C                                          l8945 551E  
                                        l8937 54D6                                          l8929 5450  
                                        l8697 5F36                                          l8689 5ED4  
                                        l8777 7C20                                          l8769 7BEC  
                                        l8793 7BD4                                          l8785 7BA0  
                                        l9841 1846                                          l9825 17F8  
                                        l9833 181A                                          l9577 5D66  
                                        l9753 3F84                                          l9745 3EFA  
                                        l9729 3DE0                                          l9681 3CF6  
                                        l9497 4D60                                          l9673 7E1A  
                                        l7899 64B8                                          l7995 51C4  
                                        l7987 51AA                                          l8971 7D76  
                                        l7979 7ADA                                          l8891 5E8E  
                                        l8883 5E2C                                          l8875 5DC6  
                                        l8867 7590                                          l8955 7EB6  
                                        l8699 5F3A                                          l8795 710C  
                                        l8787 7BAE                                          l8779 7B9C  
                                        l9931 1B3A                                          l9923 1B02  
                                        l9915 1AB2                                          l9851 1870  
                                        l9835 181C                                          l9755 3F94  
                                        l9747 3F10                                          l9739 3ED0  
                                        l9691 3D58                                          l9499 4D64  
                                        l9675 7E2A                                          l7989 51BC  
                                        l8885 5E3A                                          l8877 5DF8  
                                        l8869 75B6                                          l8957 7ED0  
                                        l8949 7EA0                                          l8797 7114  
                                        l8789 7BC0                                          l9917 1AD2  
                                        l9909 1A8A                                          l9589 5D84  
                                        l9757 3F9A                                          l9749 3F6E  
                                        l9685 3CFC                                          l9677 3CB8  
                                        l8981 77F6                                          l8973 77CA  
                                        l9781 7DC0                                          l9773 7D90  
                                        l9765 7D88                                          l9669 7E04  
                                        l7999 51D8                                          l8895 7626  
                                        l8967 7D4C                                          l8991 6D56  
                                        l8887 5E4E                                          l8799 7124  
                                        l9951 1BAC                                          l9839 1822  
                                        l9687 3D1C                                          l9679 3CD6  
                                        l9783 7DC2                                          l9775 7DA4  
                                        l9767 7D8C                                          l8897 762C  
                                        l8969 7D74                                          l8993 6D66  
                                        l8889 5E70                                          l9945 1BA4  
                                        l9937 1B62                                          l9929 1B32  
                                        l9873 197C                                          l9857 18E8  
                                        l9793 1726                                          l9785 16F8  
                                        l9689 3D3A                                          l8985 7808  
                                        l9777 7DA6                                          l8899 7658  
                                        l9971 1C1E                                          l9939 1B82  
                                        l9883 19B8                                          l9867 1924  
                                        l9795 1746                                          l9787 16FC  
                                        l9699 3D5E                                          l8987 7818  
                                        l8979 77CE                                          l9779 7DB6  
                                        l8997 6D6C                                          l9965 1C16  
                                        l9957 1BD4                                          l9797 1764  
                                        l9789 1720                                          l8989 781A  
                                        l8999 6D86                                          l9991 1C90  
                                        l9959 1BF4                                          l9895 1A48  
                                        l9799 176A                                          l9985 1C88  
                                        l9977 1C46                                          l9897 1A68  
                                        l9889 1A20                                          l9979 1C66  
                                        l9997 1CB8                        __end_of_checkPowerOnPb 6740  
                                        l9999 1CD8                                          u5000 582A  
                                        u5001 5826                                          u5010 642C  
                                        _T2PR 0323                                          u5011 6428  
                                        u5020 6466                                          u5021 6462  
                                        u5110 8228                                          u5030 647E  
                                        u5111 8224                                          u5031 647A  
                                        u4400 7B5E                                          u5040 6496  
                                        u5200 6F12                                          u5120 39F6  
                                        u4401 7B5A                                          u5041 6492  
                                        u5201 6F0E                                          u5121 39F2  
                                        _IPR5 0367                                          u4410 7B94  
                                        u5050 4612                                          u6010 659C  
                                        u5210 6F2A                                          u5130 3A0E  
                                        _T4PR 032F                                          u4411 7B90  
                                        u5051 460E                                          u6011 6598  
                                        u5211 6F26                                          u5131 3A0A  
                                        u4420 73A8                                          u4500 82DC  
                                        u5300 6172                                          u5108 6D40  
                                        u6004 6566                                          u5220 6F3E  
                                        u5060 6C42                                          u5140 3A32  
                                        u6100 4A08                                          u6020 7098  
                                        u4421 73A4                                          u4501 82D8  
                                        u5301 616E                                          u5109 6D52  
                                        u6005 6562                                          u5221 6F3A  
                                        u5061 6C3E                                          u5141 3A2E  
                                        u6101 4A04                                          u6021 7094  
                                        u4430 6F96                                          u4510 69D8  
                                        u5310 6198                                          u5230 6F56  
                                        u5070 6C58                                          u5150 3B5A  
                                        u6110 4A20                                          u6030 70B2  
                                        u4431 6F92                                          u4511 69D4  
                                        u5311 6194                                          u5231 6F52  
                                        u5071 6C54                                          u5151 3B56  
                                        u6111 4A1C                                          u6031 70AE  
                                        u4440 6FAE                                          u4520 69F0  
                                        u4600 7AA2                                          u5320 64AC  
                                        u5080 6CFC                                          u5400 6A78  
                                        u5240 6F68                                          u5160 3C5E  
                                        u6120 4A82                                          u6200 5B6E  
                                        u6040 70C2                                          u7000 3EE6  
                           doEvuln@nodeNumber 053B                                          u4441 6FAA  
                                        u4521 69EC                                          u4601 7A9E  
                                        u5321 64A8                                          u5081 6CF8  
                                        u5401 6A74                                          u5241 6F64  
                                        u5161 3C5A                                          u6121 4A7E  
                                        u6201 5B6A                                          u6041 70BE  
                                        u7001 3EE2                                          u4450 6FEE  
                                        u4530 6A00                                          u5330 64C6  
                                        u4610 721C                                          u5090 6D1C  
                                        u5410 6AFE                                          u5250 6F7A  
                                        u5170 3C7E                                          u6050 5EA4  
                                        u6130 7C0C                                          u6210 5BAC  
                                        u7010 3EFA                                          u4451 6FEA  
                                        u4531 69FC                                          u5331 64C2  
                                        u4611 7218                                          u5091 6D18  
                                        u5411 6AFA                                          u5251 6F76  
                                        u5171 3C7A                                          u6051 5EA0  
                                        u6131 7C08                                          u6211 5BA8  
                                        u7011 3EF6                                          u4460 7002  
                                        u4540 6A1E                                          u5260 60F8  
                                        u5340 64E0                                          u5420 7ABE  
                                        u4620 724A                                          u4700 6EDE  
                                        u5500 68A4                                          u6220 755C  
                                        u6300 54E8                                          u5180 3CA2  
                                        u6060 5F06                                          u6140 7C20  
                                        u7100 17D6                                          u7020 3F10  
                                        u4461 6FFE                                          u4541 6A1A  
                                        u5261 60F4                                          u5341 64DC  
                                        u5421 7ABA                                          u4701 6EDA  
                                        u5501 68A0                                          u6221 7558  
                                        u6301 54E4                                          u5181 3C9E  
                                        u6061 5F02                                          u6141 7C1C  
                                        u7101 17D2                                          u7021 3F0C  
                                        u4470 741E                                          u4550 6A4A  
                                        u5270 6112                                          u5350 64FE  
                                        u5430 7ADA                                          u5190 7374  
                                        u4630 727A                                          u4710 6EF6  
                                        u5510 68BC                                          u6230 7582  
                                        u6310 7EB0                                          u6070 71B2  
                                        u6150 7BC0                                          u7110 17F4  
                                        u7030 3F94                                          u4471 741A  
                                        u4551 6A46                                          u5271 610E  
                                        u5351 64FA                                          u5431 7AD6  
                                        u5191 7370                                          u4631 7276  
                                        u4711 6EF2                                          u5511 68B8  
                                        u6231 757E                                          u6311 7EAC  
                                        u6071 71AE                                          u6151 7BBC  
                                        u7111 17F0                                          u7031 3F90  
                                        u4480 742E                                          u4560 6A5E  
                                        u4800 5568                                          u5280 6138  
                                        u5360 6514                                          u5440 51BC  
                                        u6320 7D86                                          u6400 36DE  
                                        u4720 5990                                          u4640 7474  
                                        u5520 68DC                                          u8000 29E8  
                                        u5600 7994                                          u6240 5DF8  
                                        u6080 4988                                          u6160 7BD4  
                                        u7200 1A68                                          u7120 1816  
                                        u7040 7DB6                                          u4481 742A  
                                        u4561 6A5A                                          u4801 5564  
                                        u5281 6134                                          u5361 6510  
                                        u5441 51B8                                          u6321 7D82  
                                        u6401 36DA                                          u4721 598C  
                                        u4641 7470                                          u4625 7240  
                                        u5521 68D8                                          u8001 29E4  
                                        u5601 7990                                          u6241 5DF4  
                                        u6081 4984                                          u6161 7BD0  
                                        u7201 1A64                                          u7121 1812  
                                        u7041 7DB2                                          u4490 7444  
                                        u4570 777C                                          u4810 5576  
                                        u5290 6156                                          u5370 6538  
                                        u5450 51D4                                          u6410 3718  
                                        u4730 59E4                                          u4650 74A2  
                                        u5530 68FA                                          u8010 2A1E  
                                        u5610 693C                                          u6250 5E3A  
                                        u6170 7124                                          u6090 49C8  
                                        u7210 1A86                                          u7130 1846  
                                        u7050 1720                                          u6330 7804  
                                        u4491 7440                                          u4571 7778  
                                        u4811 5572                                          u5291 6152  
                                        u5371 6534                                          u5451 51D0  
                                        u6411 3714                                          u4731 59E0  
                                        u5531 68F6                                          u8011 2A1A  
                                        u5611 6938                                          u6251 5E36  
                                        u6171 7120                                          u6091 49C4  
                                        u7211 1A82                                          u7131 1842  
                                        u7051 171C                                          u6331 7800  
                                        u5380 7D16                                          u4580 77C6  
                                        u4820 55CC                                          u6500 38E8  
                                        u6420 3750                                          u5700 510A  
                                        u4740 75E0                                          u4660 74CC  
                                        u4900 2C56                                          u8020 2A5A  
                                        u5540 800E                                          u5460 6606  
                                        u5620 6958                                          u6260 5E4E  
                                        u6180 5B2C                                          u7300 1BF4  
                                        u7220 1AAE                                          u7140 186C  
                                        u7060 1746                                          u8100 33FC  
                                        u6340 782A                                          u5381 7D12  
                                        u4581 77C2                                          u4821 55C4  
                                        u6501 38E4                                          u6421 374C  
                                        u5701 5106                                          u4741 75DC  
                                        u4661 74C8                                          u4901 2C52  
                                        u8021 2A56                                          u5541 800A  
                                        u5461 6602                                          u5621 6954  
                                        u6261 5E4A                                          u6181 5B28  
                                        u7301 1BF0                                          u7221 1AAA  
                                        u7141 1868                                          u7061 1742  
                                        u8101 33F8                                          u6341 7826  
                                        u5390 7D46                                          u4590 7A68  
                                        u6510 38FE                                          u6430 3766  
                                        u5470 7C46                                          u4750 75F6  
                                        u4670 7E4E                                          u4910 2C6E  
                                        u5550 6E12                                          u5710 7F7E  
                                        u6350 6D66                                          u6270 6B12  
                                        u5630 7E92                                          u6190 5B56  
                                        u7310 1C12                                          u7230 1AD2  
                                        u7150 190C                                          u7070 1764  
                                        u8110 342E                                          u8030 7DF0  
                                        u5391 7D42                                          u4591 7A64  
                                        u6511 38FA                                          u6431 3762  
                                        u5471 7C42                                          u4751 75F2  
                                        u4655 7498                                          u4671 7E4A  
                                        u4911 2C6A                                          u5551 6E0E  
                                        u5711 7F7A                                          u6351 6D62  
                                        u6271 6B0E                                          u5631 7E8E  
                                        u6191 5B52                                          u7311 1C0E  
                                        u7231 1ACE                                          u7151 1908  
                                        u7071 1760                                          u8111 342A  
                                        u8031 7DEC                                          u5720 4B44  
                                        u4760 52F6                                          u4840 5610  
                                        u6600 6856                                          u6520 3918  
                                        u6440 3780                                          u5480 7C56  
                                        u4680 7E64                                          u4920 2C7E  
                                        u5800 5B08                                          u5560 6E52  
                                        u5640 4836                                          u6360 6D86  
                                        u6280 5450                                          u8200 61D2  
                                        u7400 1D76                                          u7320 1C42  
                                        u7240 1AF0                                          u7160 1920  
                                        u7080 1794                                          u8120 3490  
                                        u8040 32B0                                          u5721 4B40  
                                        u4761 52F2                                          u4841 560C  
                                        u6601 6852                                          u6521 3914  
                                        u6441 377C                                          u5481 7C52  
                                        u4681 7E60                                          u4921 2C7A  
                                        u5801 5B04                                          u5561 6E4E  
                                        u5641 4832                                          u6361 6D82  
                                        u6281 544C                                          u8201 61CE  
                                        u7401 1D72                                          u7321 1C3E  
                                        u7241 1AEC                                          u7161 191C  
                                        u7081 1790                                          u8121 348C  
                                        u8041 32AC                                          u6610 3FFE  
                                        u4770 5356                                          u6530 3934  
                                        u6450 379C                                          u4690 6E9E  
                                        u4930 2E9C                                          u4850 2AC0  
                                        u5730 5A3A                                          u5570 6E6A  
                                        u5650 48AE                                          u5490 7FDE  
                                        u6370 7A12                                          u7410 1DC4  
                                        u7330 1C66                                          u7250 1B02  
                                        u7170 19A0                                          u7090 17B8  
                                        u8130 34EA                                          u8050 32D6  
                                        u5810 701E                                          u6611 3FFA  
                                        u4771 5352                                          u6531 3930  
                                        u6451 3798                                          u4691 6E9A  
                                        u4931 2E98                                          u4851 2ABC  
                                        u5731 5A34                                          u5571 6E66  
                                        u5491 7FDA                                          u6371 7A0E  
                                        u7411 1DC0                                          u7331 1C62  
                                        u7251 1AFE                                          u7171 199C  
                                        u7091 17B4                                          u8131 34E6  
                                        u8051 32D2                                          u5811 701A  
                                        u6620 4024                                          u4780 7926  
                                        u6540 394A                                          u6460 37B2  
                                        u8300 5FDC                                          u6700 772A  
                                        u5900 46F4                                          u4940 2EB6  
                                        u4860 2AD6                                          u5740 5A3C  
                                        u5580 7964                                          u5660 7FAE  
                                        u6380 7A34                                          u8220 6212  
                                        u7340 1C84                                          u7260 1B5E  
                                        u7180 19B4                                          u7500 0C52  
                                        u8140 354C                                          u8060 32F8  
                                        u5820 702E                                          u7420 4F3E  
                                        u6621 4020                                          u4781 7922  
                                        u6541 3946                                          u6461 37AE  
                                        u8301 5FD8                                          u6701 7726  
                                        u5901 46F0                                          u4941 2EB2  
                                        u4861 2AD2                                          u5581 7960  
                                        u5661 7FAA                                          u6381 7A30  
                                        u8221 620E                                          u7341 1C80  
                                        u7261 1B5A                                          u7181 19B0  
                                        u7501 0C4E                                          u8141 3548  
                                        u8061 32F4                                          u5821 702A  
                                        u7421 4F3A                                          u6630 4096  
                                        u4950 5766                                          u4838 55CE  
                                        u4790 5554                                          u6550 3960  
                                        u6470 37C8                                          u6390 367E  
                                        u8310 5FF0                                          u5670 50C0  
                                        u6710 7756                                          u5910 4714  
                                        u4870 2AFC                                          u5750 5A54  
                                        u5590 7984                                          u8230 6224  
                                        u7350 1CB4                                          u7270 1B82  
                                        u7190 1A44                                          u7510 0C6E  
                                        u8150 35A4                                          u8070 3314  
                                        u5830 7040                                          u7430 4F74  
                                        u6631 4092                                          u4951 5762  
                                        u4791 5550                                          u6551 395C  
                                        u6471 37C4                                          u6391 367A  
                                        u8311 5FEC                                          u5671 50BC  
                                        u6711 7752                                          u5911 4710  
                                        u4871 2AF8                                          u5751 5A50  
                                        u5591 7980                                          u8231 6220  
                                        u7351 1CB0                                          u7271 1B7E  
                                        u7191 1A40                                          u7511 0C6A  
                                        u8151 35A0                                          u8071 3310  
                                        u5831 703C                                          u7431 4F70  
                                        u6640 40AC                                          u4960 5778  
                                        u8240 5660                                          u6560 76B0  
                                        u6480 387A                                          u5680 50D8  
                                        u8400 66F0                                          u8320 79E4  
                                        u5920 4724                                          u4880 2C22  
                                        u5760 5AAC                                          u7360 1CD8  
                                        u7280 1BA0                                          u7520 0D12  
                                        u8080 3374                                          u5840 705E  
                                        u8160 784A                                          u6800 4CCE  
                                        u7440 4FA4                                          u6641 40A8  
                                        u4961 5774                                          u8241 565C  
                                        u6561 76AC                                          u6481 3876  
                                        u5681 50D4                                          u8401 66EC  
                                        u8321 79E0                                          u5921 4720  
                                        u4881 2C1E                                          u5761 5AA8  
                                        u5657 48A4                                          u7361 1CD4  
                                        u7281 1B9C                                          u7521 0D0E  
                                        u8081 3370                                          u5841 705A  
                                        u8161 7846                                          u6801 4CCA  
                                        u7441 4FA0                                          u6650 41DA  
                                        u4970 5792                                          u8250 56AA  
                                        u6570 76EA                                          u6490 38B2  
                                        u5690 50F2                                          u8410 670E  
                                        u5930 4734                                          u4890 2C3A  
                                        u5770 5ABA                                          u6298 54BA  
                                        u8218 61DE                                          u7370 1CF6  
                                        u7290 1BD0                                          u7610 0EEE  
                                        u7530 0D34                                          u8090 33E0  
                                        u5850 707C                                          u8170 787C  
                                        u6730 5C52                                          u6810 4D08  
                                        u7450 4FDC                                          u8330 586E  
                                        u6651 41D6                                          u4971 578E  
                                        u8251 56A6                                          u6571 76E6  
                                        u6491 38AE                                          u5691 50EE  
                                        u8411 670A                                          u5931 4730  
                                        u4891 2C36                                          u5771 5AB6  
                                        u6299 54CE                                          u8219 61FA  
                                        u7371 1CF2                                          u7291 1BCC  
                                        u7611 0EEA                                          u7531 0D30  
                                        u8091 33DC                                          u5851 7078  
                                        u8171 7876                                          u6731 5C4E  
                                        u6811 4D04                                          u7451 4FD8  
                                        u8331 586A                                          u6660 4214  
                                        u4980 57E2                                          u6580 680C  
                                        u8420 672A                                          u5940 4762  
                                        u5860 465C                                          u6900 4342  
                                        u5780 5AD8                                          u7380 1D34  
                                        u6820 5CFC                                          u7700 11F4  
                                        u7620 0F28                                          u7540 0D56  
                                        u8500 309A                                          u6740 5C6E  
                                        u7460 5038                                          u8340 58B8  
                                        u6661 4210                                          u4981 57DE  
                                        u6581 6808                                          u8421 6726  
                                        u6725 7760                                          u5941 475E  
                                        u5861 4658                                          u6901 433E  
                                        u5781 5AD4                                          u7381 1D30  
                                        u6821 5CF8                                          u7701 11F0  
                                        u7621 0F24                                          u7541 0D52  
                                        u8501 3096                                          u6741 5C6A  
                                        u7461 5034                                          u8341 58B4  
                                        u4990 5818                                          u8270 5714  
                                        u6590 682E                                          u8430 673A  
                                        u6670 1EF6                                          u6726 7762  
                                        u5950 47A0                                          u5870 46A0  
                                        u5790 5AE6                                          u8190 61BC  
                                        u7390 1D58                                          u6830 5D22  
                                        u7710 127C                                          u7630 0F5A  
                                        u7550 0D72                                          u7470 0A18  
                                        u8510 30C6                                          u6750 5C7E  
                                        u6910 7E2A                                          u4991 5814  
                                        u8271 5710                                          u6591 682A  
                                        u8431 6736                                          u6671 1EF2  
                                        u5951 479C                                          u5871 469C  
                                        u5791 5AE2                                          u8191 61B8  
                                        u7391 1D54                                          u6831 5D1E  
                                        u7711 1278                                          u7631 0F56  
                                        u7551 0D6E                                          u7471 0A14  
                                        u8511 30C2                                          u6751 5C7A  
                                        u6911 7E26                                          u8280 609E  
                                        u6680 25F8                                          u5880 46C4  
                                        u7800 264E                                          u5960 82F0  
                                        u6840 5D44                                          u6920 3CD6  
                                        u7640 0FE4                                          u7608 0EC2  
                                        u7560 0DAC                                          u7480 0A34  
                                        u8600 3256                                          u8440 2F22  
                                        u6760 5CE2                                          u8360 5922  
                                        u8281 609A                                          u6681 25F4  
                                        u5881 46C0                                          u7801 264A  
                                        u5961 82EC                                          u6841 5D40  
                                        u6921 3CD2                                          u7641 0FE0  
                                        u7609 0ED4                                          u7561 0DA8  
                                        u7481 0A30                                          u8601 3252  
                                        u8441 2F1E                                          u8185 7880  
                                        u6761 5CDE                                          u8361 591E  
                                        u8290 60B2                                          u8370 66A8  
                                        u6690 770E                                          u5890 46D4  
                                        u5970 6294                                          u7810 265C  
                                        u6770 6BBA                                          u6850 5D66  
                                        u6930 3CF6                                          u7650 1026  
                                        u7570 0E22                                          u7490 0C18  
                                        u8610 3266                                          u8530 3118  
                                        u8450 2F82                                          u8291 60AE  
                                        u8371 66A4                                          u6691 770A  
                                        u5891 46D0                                          u5971 6290  
                                        u7811 2658                                          u6771 6BB6  
                                        u6851 5D62                                          u6931 3CF2  
                                        u7651 1022                                          u7571 0E1E  
                                        u7491 0C14                                          u8611 3262  
                                        u8531 3114                                          u8451 2F7E  
                                        u8268 56F0                                          u8380 66C0  
                                        u5980 6310                                          u6860 4264  
                                        u7900 27EC                                          u7820 26A0  
                                        u6780 6BDE                                          u6940 3D1C  
                                        u7580 0E3E                                          u8620 328C  
                                        u8540 312A                                          u8460 2FCA  
                                        u8700 6382                                          u8269 5702  
                                        u8381 66BC                                          u5981 630C  
                                        u6861 4260                                          u7901 27E8  
                                        u7821 269C                                          u6781 6BDA  
                                        u6941 3D18                                          u7581 0E3A  
                                        u8621 3288                                          u8541 3126  
                                        u8461 2FC6                                          u8701 637E  
                                        u8390 66D8                                          u5990 7B4C  
                                        u6870 4296                                          u7910 2808  
                                        u7830 26B4                                          u6950 3D3A  
                                        u7750 1500                                          u7670 10EA  
                                        u7590 0E8A                                          u8550 3150  
                                        u8470 3014                                          u6790 4C84  
                                        u8358 58FE                                          u8710 63BE  
                                        u8391 66D4                                          u5991 7B48  
                                        u6871 4292                                          u7911 2804  
                                        u7831 26B0                                          u6951 3D36  
                                        u7751 14FC                                          u7671 10E6  
                                        u7591 0E86                                          u8551 314C  
                                        u8471 3010                                          u6791 4C80  
                                        u8359 5910                                          u8711 63BA  
                                        u6880 42C0                                          u7920 2844  
                                        u7840 26E2                                          u6960 3D58  
                                        u7760 154A                                          u7728 13CC  
                                        u7680 116E                                          u8560 317E  
                                        u8528 30F6                                          u6881 42BC  
                                        u7921 2840                                          u7841 26DE  
                                        u6961 3D54                                          u7761 1546  
                                        u7729 13E0                                          u7681 116A  
                                        u8561 317A                                          u8529 3108  
                                        u6890 4304                                          u7930 287E  
                                        u7850 26F2                                          u6970 3D7C  
                                        u7770 155A                                          u7738 144A  
                                        u7690 11A8                                          u8570 31C8  
                                        u8490 3080                                          u6891 4300  
                                        u7931 287A                                          u7851 26EE  
                                        u6971 3D78                                          u7771 1556  
                                        u7739 145E                                          u7691 11A4  
                                        u8571 31C4                                          u8491 307C  
                                        u7940 28BA                                          u7860 2702  
                                        u6980 3DA0                                          u7780 15D0  
                                        u7748 14C8                                          u7668 10B0  
                                        u7941 28B6                                          u7861 26FE  
                                        u6981 3D9C                                          u7781 15CC  
                                        u7749 14DC                                          u7669 10D0  
                                        u7950 28CE                                          u7870 2756  
                                        u7790 2612                                          u6990 3ECC  
                                        u8590 3238                                          u8670 6344  
                                        u7951 28CA                                          u7871 2752  
                                        u7791 260E                                          u6991 3EC8  
                                        u8591 3234                                          u8671 6340  
                                        u7960 292A                                          u7880 2782  
                                        u8488 305A                                          u8680 635E  
                                        u7961 2926                                          u7881 277E  
                                        u8489 306C                                          u8681 635A  
                                        u7970 2962                                          u7890 2798  
                                        u8690 6370                                          u7971 295E  
                                        u7891 2794                                          u8691 636C  
                                        u7980 2972                                          u8588 3216  
                                        u7981 296E                                          u8589 3228  
                                        u7990 29AC                                          u7991 29A8  
                     getNumTxBuffersInUse@i16 0505                                          _have 6E6E  
                                        _main 6328                                          _leds 08FC  
                                        _name 0848                                          _loop 79AA  
                                        _poll 2EC6                    __end_of_mnsTRrqnpnCallback 7ED4  
                                        fsr1h 04E2                                          fsr2h 04DA  
                                        indf1 04E7                                          indf2 04DF  
                                        fsr1l 04E1                                          fsr2l 04D9  
                           ?_removeTableEntry 0501                                          pop@q 0501  
                                        prodh 04F4                                          prodl 04F3  
                                        start 0A02                                  ?_loadNvCache 0501  
                                bootPowerUp@a 0510                                  bootPowerUp@b 050D  
                                bootPowerUp@i 050F                            ??_removeTableEntry 0528  
                               ?_APP_testMode 0501                               getEN@tableIndex 051A  
                                ___param_bank 0000                                ??_APP_addEvent 054E  
                       ?_getNumRxBuffersInUse 0501                             findServiceIndex@i 0504  
                        __end_of_EEPROM_Write 794E                                   _uptimeTimer 0568  
                                       ??_pop 0503                                         l10011 1D10  
                                       l10005 1CFA                                         l10101 5038  
                                       l10031 1DA0                                         l10111 0A34  
                                       l10103 5042                                         l10025 1D7A  
                                       l10017 1D38                                         l10121 0AA4  
                                       l10113 0A52                                         l10105 0A06  
                                       l11001 2FCA                                         l10019 1D58  
                                       l10211 0CFA                                         l10123 0AA8  
                                       l10115 0A72                                         l11011 3084  
                                       l11003 3014                                _SPI1TWIDTHbits 0088  
                                       l10037 1DC8                                         l10045 1E40  
                                       l10301 1048                                         l10205 0C9A  
                                       l10133 0AC6                                         l10125 0AB6  
                                       l10117 0A88                                         l10109 0A1C  
                                       l11021 312A                                         l11013 3088  
                                       l11005 306C                                         l10061 4F4C  
                                       l11101 634E                                         l10303 10D8  
                                       l10231 0D72                                         l10223 0D38  
                                       l10127 0ABC                                         l10119 0A9E  
                                       l11031 3152                                         l11023 3140  
                                       l11015 309A                                         l11007 3070  
                                       l10071 4FA4                                         l10063 4F66  
                                       l10055 4F16                                         l11111 6386  
                                       l11103 635E                                         l10321 118C  
                                       l10313 1156                                         l10305 10EA  
                                       l10217 0D16                                         l10145 0B74  
                                       l10129 0AC0                                         l10153 0B94  
                                       l10209 0CC4                                         l11041 3246  
                                       l11033 317E                                         l11025 3150  
                                       l11017 30C6                                         l11009 3080  
                                       l10081 4FEE                                         l10073 4FB4  
                                       l10057 4F30                                         l11121 63BE  
                                       l11113 638A                                         l11105 6360  
                                       l10411 1644                                         l10403 1624  
                                       l10323 11A8                                         l10315 116E  
                                       l10307 1108                                         l10251 0E22  
                                       l10155 0BDA                                         l10139 0AEC  
                                       l11051 3290                                         l11043 3256  
                                       l11035 31C8                                         l11019 3118  
                                       l10083 4FF2                                         l10075 4FCE  
                                       l10067 4F7C                                         l10059 4F3E  
                                       l11131 63D4                                         l11123 63C6  
                                       l11115 6394                                         l11107 6370  
                                       l10501 2770                                         l10413 1646  
                                       l10405 1626                                         l10421 1664  
                                       l10341 12FC                                         l10325 11C2  
                                       l10261 0E76                                         l10253 0E3E  
                                       l10245 0DDC                                         l10237 0D90  
                                       l10229 0D5A                                         l10173 0C36  
                                       l10165 0C00                                         l11045 3266  
                                       l11037 3238                                         l10085 4FF6  
                                       l10077 4FDC                                         l10069 4F96  
                                       l11133 63D8                                         l11125 63CC  
                                       l11117 6396                                         l11109 6372  
                                       l10511 27F0                                         l10503 2782  
                                       l10327 11D8                                         l10263 0E8A  
                                       l10247 0DF0                                         l10239 0DAC  
                                       l10191 0C8E                                         l10175 0C52  
                                       l10167 0C18                                         l10159 0BE0  
                                       l11039 3242                                         l11047 327A  
                                       l10095 5012                                         l10087 500A  
                                       l10079 4FE8                                         l11127 63CE  
                                       l11119 639A                                         l10521 282E  
                                       l10513 27F2                                         l10505 2798  
                                       l10361 154A                                         l10329 11F4  
                                       l10337 1212                                         l10281 0F5A  
                                       l10265 0E98                                         l10249 0E12  
                                       l10433 16A0                                         l10185 0C88  
                                       l10177 0C6E                                         l10601 3298  
                                       l11049 328C                                         l10097 5026  
                                       l10089 500E                                         l11129 63D2  
                                       l10531 28BE                                         l10515 2808  
                                       l10507 27B0                                         l10371 158E  
                                       l10363 155A                                         l10355 151E  
                                       l10347 14E8                                         l10339 127C  
                                       l10291 100A                                         l10275 0F0C  
                                       l10267 0ED6                                         l10259 0E60  
                                       l10179 0C82                                         l10603 32B0  
                                       l10099 5028                                         l10533 28CE  
                                       l10541 28EE                                         l10525 2844  
                                       l10517 280C                                         l10509 27EC  
                                       l10373 1594                                         l10365 1562  
                                       l10357 152E                                         l10349 1500  
                                       l10293 1026                                         l10277 0F28  
                                       l10269 0EEE                                         l10197 0C94  
                                       l10621 3314                                         l10613 32DA  
                                       l11085 6328                                         l10551 2962  
                                       l10543 292A                                         l10535 28D6  
                                       l10527 287E                                         l10519 2820  
                                       l10471 2676                                         l10463 2600  
                                       l10375 15AA                                         l10367 1566  
                                       l10359 153A                                         l10287 0F78  
                                       l10279 0F3E                                         l10631 3366  
                                       l10623 3340                                         l10607 32B6  
                                       l10561 29FA                                         l10553 2972  
                                       l10545 292C                                         l10537 28E4  
                                       l10529 28BA                                         l10481 26B4  
                                       l10473 267A                                         l10465 2612  
                                       l10377 15D0                                         l10369 1574  
                                       l10289 0FE4                                         l10705 357C  
                                       l10633 3374                                         l10641 33A8  
                                       l10625 3346                                         l10571 2A68  
                                       l10563 2A08                                         l10555 29AC  
                                       l10547 2944                                         l10539 28EA  
                                       l10491 2702                                         l10483 26CA  
                                       l10475 268E                                         l10467 264E  
                                       l10803 6236                                         l10395 1604  
                                       l10387 15E4                                         l10379 15DC  
                                       l10707 3596                                         l10643 33AE  
                                       l10619 32FC                                         l10731 3604  
                                       l11099 634C                                         l10821 5702  
                                       l10573 2A6C                                         l10557 29E8  
                                       l10565 2A0C                                         l10549 294C  
                                       l10493 2718                                         l10485 26CE  
                                       l10477 26A0                                         l10469 265C  
                                       l11621 16C0                                         l10397 1606  
                                       l10389 15E6                                         l10709 35A4  
                                       l10717 35D8                                         l10645 33D0  
                                       l10629 334C                                         l10741 8168  
                                       l10901 4ECE                                         l10823 5704  
                                       l10815 5634                                         l10831 6040  
                                       l10911 79AA                                         l10567 2A1E  
                                       l10559 29F6                                         l10583 2A7E  
                                       l10487 26E2                                         l10495 271C  
                                       l10479 26A2                                         l11631 624A  
                                       l11623 3E00                                         l11615 3624  
                                       l10719 35FA                                         l10655 3416  
                                       l10647 33E0                                         l10751 7834  
                                       l10743 782E                                         l10591 7DCA  
                                       l10903 4EDC                                         l10825 5714  
                                       l10817 5660                                         l10809 5632  
                                       l11641 3978                                         l10833 609E  
                                       l10841 5F66                                         l10921 82A0  
                                       l10913 79E4                                         l11633 65D4  
                                       l10569 2A5A                                         l10497 2756  
                                       l10489 26F2                                         l11625 5DA4  
                                       l11617 0BB4                                         l10657 342E  
                                       l10665 344C                                         l10649 33FC  
                                       l10761 7860                                         l10753 7836  
                                       l10745 7830                                         l10593 7DDE  
                                       l10585 7DC6                                         l10905 4EEA  
                                       l11643 52C2                                         l10827 572A  
                                       l10819 56AA                                         l10843 5F7E  
                                       l10923 82AC                                         l10915 79E8  
                                       l11635 47C2                                         l10499 276A  
                                       l11627 6C20                                         l11619 0CE4  
                                       l10683 34D2                                         l10667 3476  
                                       l10771 7882                                         l10763 7868  
                                       l10755 783A                                         l10739 8156  
                                       l10595 7DE0                                         l10931 5836  
                                       l10907 4EF8                                         l11645 78D8  
                                       l10837 60B2                                         l10829 6028  
                                       l10845 5FDC                                         l11637 5138  
                                       l10925 82AE                                         l10917 79FC  
                                       l10781 61AA                                         l11629 1E60  
                                       l10685 34EA                                         l10693 3508  
                                       l10669 3490                                         l10677 34A6  
                                       l10773 7884                                         l10765 786A  
                                       l10757 784A                                         l10597 7DF0  
                                       l10941 5842                                         l10933 583A  
                                       l10909 4F06                                         l10861 4DD4  
                                       l10853 4DBC                                         l11647 7534  
                                       l11639 37E2                                         l10951 669A  
                                       l10919 829C                                         l10791 6200  
                                       l10695 3532                                         l10775 7886  
                                       l10767 786C                                         l10759 785E  
                                       l10599 7DFA                                         l10943 586E  
                                       l10935 5840                                         l10927 582C  
                                       l10871 4DFC                                         l10863 4DD6  
                                       l10855 4DC6                                         l10849 5FF0  
                                       l10961 66C8                                         l10953 66A8  
                                       l10793 6212                                         l10785 61C0  
                                       l10697 354C                                         l10777 788A  
                                       l10769 7880                                         l10945 58B8  
                                       l10929 5832                                         l10881 4E42  
                                       l10873 4E0A                                         l10865 4DD8  
                                       l10857 4DCC                                         l10963 66D8  
                                       l10955 66B0                                         l10795 6214  
                                       l10787 61D2                                         l10779 8316  
                                       l10947 5910                                         l10891 4E88  
                                       l10883 4E50                                         l10875 4E18  
                                       l10867 4DDA                                         l10859 4DD0  
                                       l10973 6712                                         l10965 66E0  
                                       l10957 66C4                                         l10789 61D8  
                                       l10981 2EC6                                         l10949 5912  
                                       l10893 4E96                                         l10885 4E5E  
                                       l10877 4E26                                         l10869 4DEE  
                                       l10975 671A                                         l10967 66F0  
                                       l10799 622E                                         l10991 2F86  
                                       l10983 2F22                                         l10895 4EA4  
                                       l10887 4E6C                                         l10879 4E34  
                                       l10977 672A                                         l10969 66FE  
                                       l10993 2F9A                                         l10985 2F26  
                                       l10897 4EB2                                         l10889 4E7A  
                                       l10979 673A                                         l10987 2F3A  
                                       l10899 4EC0                                         l10989 2F82  
                                       l10999 2F9E                                         ?_have 0501  
                                       ?_main 0501                                _defaultColours FF59  
                         processEnumeration@i 051C                               __end_of___awdiv 61AA  
                                       ?_loop 0501                               __end_of___awmod 654A  
                                       ?_poll 0501                               __end_of___lldiv 688A  
                             ___awdiv@divisor 0503                                         _T2CON 0324  
                                       _T4CON 0330                                         _T2HLT 0325  
                             ?_updateLedRange 0501                                         _T4HLT 0331  
                             reqevCallback@ev 0538                          __end_of_factoryReset 5730  
                                       _T2RST 0327                             _initTimedResponse 8316  
                                       _T4RST 0333                                         i2l592 7F3A  
                              ?_APP_nvDefault 0501                               ___awdiv@counter 0505  
                             __end_of_canPoll 832E                      __end_of_nvTRnvrdCallback 7A58  
                             __end_of_doFlash 2600              __end_of_factoryResetGlobalEvents 8340  
                              _APP_nvValidate 8344                                         _TMR0H 0319  
                                       _TMR0L 0318                                         _TRISC 04C8  
                             __end_of_doEvlrn 5F64                               __end_of_doNenrd 718C  
                nvProcessMessage@valueOrError 0558                               __end_of_doEvuln 720C  
                             __end_of_doNnclr 805A                               __end_of_doNnevn 7C34  
                             __end_of_doReqev 4AD6                               __end_of_doReval 5BFC  
                             __end_of_doRqevn 7BE8                               __end_of_getHash 824C  
                         ___lmul@multiplicand 0505                            ?_initTimedResponse 0501  
                          __p_paramBlock_text 0820                                 ?_leds_powerUp 0501  
                            __end_of_TMR0_ISR 81A8                               __end_of_isEvent 7E6C  
              APP_processConsumedEvent@action 0520                                         _canId 05A8  
                                       _getEN 6740                                         _getNN 52E4  
                                       _getNV 7AAC                                         _getEv 692A  
                        _enumerationStartTime 0574                               __end_of_readNVM 754C  
                                       _errno 05A3                                         _setNV 6D54  
                                       _numEv 8340                         __end_of_refreshString 7764  
                                       have@i 0504                         _consumerEventCheckLen 82B4  
                                       _setup 4DBC                           canReceiveMessage@mp 0514  
                             __end_of_sendRTR 7D04                  __end_of_getNumTxBuffersInUse 7286  
                                       main@i 055D                               __end_of_mnsPoll 2A9E  
                               setNV@oldValue 0518                        APP_preProcessMessage@m 0501  
                             __end_of_tickGet 7464                               ?_checkPowerOnPb 0501  
                                       pclath 04FA                                         tablat 04F5  
                         ??_initTimedResponse 0501               mnsTRallDiagnosticsCallback@step 052F  
             mnsTRallDiagnosticsCallback@type 0501                                         poll@i 05F3  
                                       poll@m 05F4                               __end_of_powerUp 5924  
                     reqevCallback@tableIndex 053C                                         status 04D8  
                               ?_nvGetESDdata 0501                       reqevCallback@nodeNumber 053A  
                             __end_of_writeEv 6CC2                      ?_updateModuleErrorStatus 0501  
                  __end_of_startTimedResponse 79AA                              ?_nvGetDiagnostic 0507  
                              ??_APP_testMode 050B                  processEnumeration@enumResult 051A  
                             __initialization 7286                                  __end_of_have 6EFA  
                                __end_of_main 63E4                                  __end_of_name 0850  
                                __end_of_loop 7A02                                  __end_of_poll 3298  
                               ?_nerdCallback 052E                        __end_of_defaultColours FF89  
                        __end_of_getParameter 4962                     __end_of_initTimedResponse 831C  
                      __end_of_APP_nvValidate 8348                                        ??_have 0501  
                                ?_setNewCanId 0501                                        ??_main 055D  
                            ?_eraseFlashBlock 0501                                        ??_loop 050B  
                                ?_sendMessage 051B                                        ??_poll 05EE  
                       __end_of_reqevCallback 5E92                                 __activetblptr 0003  
                           ??_consumerEsdData 0501                                   readNVM@type 050C  
                           startEnumeration@i 050C                                ??_leds_powerUp 050B  
            __end_of_canWaitForTxQueueToDrain 82F2                       APP_postProcessMessage@m 0501  
                    ??_APP_postProcessMessage 0503                                        _C1CONH 0101  
                                      _C1CONL 0100                                        _C1CONT 0103  
                                      _C1CONU 0102                                        ?_getEN 050D  
                                      ?_getNN 050D                                        ?_getNV 0501  
                                      ?_getEv 050D                              __end_of_addEvent 3CB8  
                                      ?_setNV 0515                                  _canTransport FFF9  
                                      ?_numEv 0501                              ___awdiv@dividend 0501  
                                      ?_setup 0501                           APP_nvValidate@index 0501  
                           ??_consumerPowerUp 0501                                        _ANSELA 0400  
                                      _ANSELB 0408                                        _ANSELC 0410  
                                      _MD1SRC 006C                           APP_nvValidate@value 0501  
                                      _RC0PPS 0211                                        _RB2PPS 020B  
                                      _RC1PPS 0212                                        _RC2PPS 0213  
                                      _RC3PPS 0214                                        _RC4PPS 0215  
                                      _RC5PPS 0216                              reqevCallback@nEv 0535  
                                      _RC6PPS 0217                                        i2l2089 835C  
                                      i2l1831 81A6                                        _TABLAT 04F5  
                     ??_CAN1_OperationModeGet 0501                                ??_nvGetESDdata 0501  
                     ??_CAN1_OperationModeSet 0501                                        _NVMADR 0043  
                                      _TMR0IE 250F                                        _TMR0IF 258F  
                                      _TMR0IP 1B2F                              __end_of_checkLen 692A  
                                ?_removeEvent 0536                                _clearAllEvents 820E  
                    __end_of_APP_factoryReset 833A                                   initTicker@i 0504  
                           ?_findServiceIndex 0501                              _rebuildHashtable 5730  
                           _canProcessMessage 5CE4  APP_processConsumedEvent@colourPixelIndexPair 0523  
                               teachPowerUp@i 0528                      reqevCallback@eventNumber 0536  
                  __end_of_APP_nvValueChanged 835C                            ??_findServiceIndex 0501  
                          _processEnumeration 461E                            ?_canProcessMessage 0554  
                  ??_APP_processConsumedEvent 051E                        ??_getNumRxBuffersInUse 0501  
                              teachCheckLen@m 0531                                        ___lmul 7692  
                    __end_of_mnsGetDiagnostic 7FCC                          consumerEsdData@index 0501  
                              ??_nerdCallback 0530                                        _canPri FFA0  
                            __end_of_initARGB 4C4A                                     ??___awdiv 0505  
                                      _doNerd 8284                                     ??___awmod 0505  
                       _APP_preProcessMessage 834C                                        _getEVs 6A66  
                                   ??___lldiv 0513                                 _nvDiagnostics 05BB  
                                   ??_canPoll 051D                                     ??_doFlash 0505  
                             getParameter@idx 0509                                        _memcpy 7AFE  
                                   ??_doEvlrn 0554                                     ??_doNenrd 052C  
                                   ??_doEvuln 053F                                     ??_doNnclr 0537  
                                      clear_0 72A6                                        clear_1 72B8  
                                      clear_2 72C6                                     ??_doNnevn 052A  
                                      clear_3 72D8                                        clear_4 72E4  
                                   ??_doReqev 0534                                     ??_doReval 052D  
                            ___awdiv@quotient 0507                               ___awmod@divisor 0503  
                                   ??_doRqevn 052A                           ?_processEnumeration 0501  
                                      have@id 0503                                     ??_getHash 0520  
                             ??_APP_nvDefault 0509                           ??_canProcessMessage 0556  
                                      isa$std 0001                               ___awmod@counter 0505  
                             ?_APP_nvValidate 0501                                        main@t1 055E  
                                      main@t2 055F                                     ??_isEvent 0501  
                                   ??_readNVM 050A                      nerdCallback@serviceIndex 052E  
                           _canReceiveMessage 423E                    __end_of_teachGetDiagnostic 802C  
                            _nvProcessMessage 3298                                     ??_sendRTR 0501  
                                   ??_mnsPoll 052C                                        pop@ret 0508  
                           ??_mnsFactoryReset 0515                                  ivt0x900_base 0900  
                                __mediumconst FE58            APP_processConsumedEvent@tableIndex 051E  
                                   ??_tickGet 0505                              __end_of_services FF95  
                          _tableIndexToEvtIdx 8322                   findServiceIndex@serviceType 0503  
                                      tblptrh 04F7                                        tblptrl 04F6  
                           doEvlrn@nodeNumber 054E                                        tblptru 04F8  
                                ??_FLASH_Read 0504                             nvProcessMessage@m 0554  
                      ?_consumerEventCheckLen 0531                            ?_canReceiveMessage 0510  
                                   ??_powerUp 0529                        getParameterFlags@flags 0505  
           mnsTRserviceDiscoveryCallback@step 052F             mnsTRserviceDiscoveryCallback@type 0501  
                     consumerProcessMessage@m 0554                          __end_of_APP_addEvent 81CA  
                                   ??_writeEv 0517                                  __p_name_text 0848  
                         addEvent@eventNumber 0531                  nvTRnvrdCallback@valueOrError 0530  
                            __end_of_writeNVM 78F0                           ?_tableIndexToEvtIdx 0501  
                      __end_of_clearAllEvents 822E                         mnsGetDiagnostic@index 0509  
                        ??_processEnumeration 0516                              ??_receiveOverrun 0501  
                                  __accesstop 0560                       __end_of__initialization 72F8  
                   __end_of_canProcessMessage 5DBC                 __end_of_consumerGetDiagnostic 7FFC  
                         ??_canReceiveMessage 0512                             EEPROM_Write@index 0509  
                              nvGetESDdata@id 0501                              APP_testMode@step 0510  
                           EEPROM_Write@value 050C                                 doEvuln@result 053F  
                               ___rparam_used 0001                            teachCheckLen@learn 0534  
                                  _eeBootFlag 0594                       ??_handleSelfEnumeration 050B  
                   ?_factoryResetGlobalEvents 0501                                 ?_teachPowerUp 0501  
                            FLASH_Write@index 0506                             _getParameterFlags 6EFA  
                            FLASH_Write@value 0509                                __pcstackCOMRAM 0501  
   mnsTRserviceDiscoveryCallback@serviceIndex 052E                                  __pidataBANK5 8358  
                                  _canEsdData 81EC                            ?_getParameterFlags 0501  
                                   ?_TMR0_ISR 0501                                 __end_of_getEN 67E6  
                               __end_of_getNN 5406                                 __end_of_getNV 7AFE  
                               __end_of_getEv 69C8                            __end_of_FLASH_Read 73EE  
                               __end_of_setNV 6DE2                                 __end_of_numEv 8344  
                               __end_of_setup 4F16                          ??_tableIndexToEvtIdx 0501  
                           _ledPaletteIndexes 0700                          _getNumTxBuffersInUse 720C  
                   __end_of_canReceiveMessage 4434                  nvTRnvrdCallback@serviceIndex 052E  
                  __end_of_bootProcessMessage 6C30                    consumerGetDiagnostic@index 0509  
                         ??_getParameterFlags 0505                                    _canService FFEB  
                           ??_isConsumedEvent 0501                                    addEvent@en 0543  
                                  _canPowerUp 4C4A                     reqevCallback@serviceIndex 052E  
                        __end_of_APP_testMode 423E                    rebuildHashtable@tableIndex 0526  
                             _refreshRequired 05AB                                       ??_getEN 050F  
                                     ??_getNN 050F                                       ??_getNV 0503  
                                     ??_getEv 050F                                       ??_setNV 0516  
                               ?_sendMessage2 0526                                 ?_sendMessage3 0526  
                               ?_sendMessage4 0526                                 ?_sendMessage5 0526  
                               ?_sendMessage6 0526                                 ?_sendMessage7 0526  
                                     ??_numEv 0501                         _setupModePreviousMode 059E  
                                     ??_setup 050B                                  canEsdData@id 0501  
                                readNVM@index 0507                      mnsProcessMessage@newMode 055A  
                           initTicker@divider 0503                                  _EEPROM_Write 78F0  
                                  __pbssBANK5 0560                                    __pbssBANK6 0600  
                                  __pbssBANK7 0700                                    __pbssBANK8 0800  
                                loadNvCache@i 0511                               ?_clearAllEvents 0501  
                  startTimedResponse@callback 0506                               canSendMessage@m 0517  
                  APP_processConsumedEvent@ev 0524                           setNewCanId@newCanId 0515  
                   __end_of_getParameterFlags 6F82                                _loadFlashBlock 7A58  
                                _factoryReset 5632                                ??_teachPowerUp 0528  
                               _setLEDsByMode 7C7C                                       IVTBASEH 045E  
                                     IVTBASEL 045D                                       IVTBASEU 045F  
                               addEvent@evVal 0534                                 addEvent@evNum 0533  
                                  __pivt0x900 0900                                _canDiagnostics 068E  
                                 mnsPowerUp@i 050D                            mnsProcessMessage@d 0558  
                          mnsProcessMessage@i 0556                            mnsProcessMessage@m 0554  
                        __end_of_leds_powerUp 817E                                    _bl_version FF95  
                   ?_canWaitForTxQueueToDrain 0501                        ?_APP_preProcessMessage 0501  
                                     ?___lmul 0501                             _bootloaderVersion 05A9  
                                  ??_TMR0_ISR 0501                                       ?_doNerd 0501  
                                     _C1TRECU 0136                                       ?_getEVs 0501  
                            ??_updateLedRange 0503                                       _C1TXQUA 0158  
                                   _C1FIFOUA1 0164                                     _C1FIFOUA2 0170  
                                   _C1FIFOUA3 017C                         ?_getNumTxBuffersInUse 0501  
                                     ?_memcpy 0501                                 _C1BDIAG0Hbits 0139  
                                   ?_addEvent 052F                            _mnsTRrqnpnCallback 7EA0  
                              ___lmul@product 0509                                 _C1BDIAG0Lbits 0138  
                                   _C1NBTCFGH 0105                                     _C1NBTCFGL 0104  
                                   _C1NBTCFGT 0107                                     _C1NBTCFGU 0106  
                       _setTimedResponseDelay 8306                                       _MD1CARH 006E  
                                     _MD1CARL 006D                                       _MD1CON0 006A  
                                     _MD1CON1 006B                          __end_of_nvGetESDdata 81EC  
                                     _CLCnCON 00D6                                       _CLCnPOL 00D7  
                            _canGetDiagnostic 65F4                                    _flashBlock 0584  
                                  _flashFlags 059B                                 ??_DEFAULT_ISR 0501  
                                     i2l11061 7F30                                       i2l11053 7F08  
                                     i2l11071 818E                                       i2l11063 7F36  
                                     i2l11055 7F18                                       i2l11073 8190  
                                     i2l11057 7F1E                                       i2l11075 8194  
                                     i2l11059 7F22                                       i2l11077 81A4  
                                     i2l11069 8180                                     ?_checkLen 052C  
                                  _flashState 05AC                             ?_nvTRnvrdCallback 052E  
                           reqevCallback@step 052F                           ?_mnsTRrqnpnCallback 052E  
                            ??_checkPowerOnPb 053C                                       _IVTLOCK 0459  
                                     _TBLPTRH 04F7                                       _TBLPTRL 04F6  
                                     _TBLPTRU 04F8                                     _C1TXQCONH 0151  
                                   _C1TXQCONL 0150               flushFlashBlock@interruptEnabled 0505  
                                   _C1TXQCONT 0153                                     _C1TXQCONU 0152  
                                     _NVMADRH 0044                                       _NVMADRL 0043  
                                     _SPI1TXB 0081                                       _NVMADRU 0045  
                                     _NVMDATL 0046                            ??_nvTRnvrdCallback 0530  
                                 _C1FIFOCON1H 015D                                   _C1FIFOCON2H 0169  
                                 _C1FIFOCON1L 015C                                   _C1FIFOCON3H 0175  
                                 _C1FIFOCON2L 0168                                   _C1FIFOCON3L 0174  
                                 _C1FIFOCON1T 015F                                   _C1FIFOCON1U 015E  
                                 _C1FIFOCON2T 016B                                   _C1FIFOCON2U 016A  
                                 _C1FIFOCON3T 0177                                   _C1FIFOCON3U 0176  
                                     _NVMLOCK 0042                                ??_sendMessage2 0528  
                              ??_sendMessage3 0529                                ??_sendMessage4 052A  
                              ??_sendMessage5 052B                                ??_sendMessage6 052C  
                              ??_sendMessage7 052D                              _teachDiagnostics 05CC  
                        __end_of_nerdCallback 75BA                     isConsumedEvent@eventIndex 0501  
                                   ?_initARGB 0501                                checkLen@needed 052E  
                                _getParameter 47E2                        __end_of_loadFlashBlock 7AAC  
                             _timerExtension1 059A                               _timerExtension2 0599  
                __end_of_eventConsumerService FFB3                           refreshString@offset 0501  
                              ?_setLEDsByMode 0501                        mnsTRrqnpnCallback@step 052F  
                      mnsTRrqnpnCallback@type 0501                canReceiveMessage@incomingCanId 0513  
                         _consumerDiagnostics 05C1                                 initARGB@ledno 0501  
                                 poll@handled 05F2                          ??_mnsTRrqnpnCallback 0530  
                           __end_of_findEvent 649C                                       __Hparam 0000  
                 consumerEventCheckLen@needed 0533                                       __Lparam 0000  
                             _consumerEsdData 824C                                     _CLCSELECT 00D5  
                      _APP_postProcessMessage 8350                            pbDownTimer@timeout 051C  
                                 ?_canEsdData 0501                             __end_of_pbUpTimer 6026  
                            pbUpTimer@timeout 051C                                 APP_testMode@c 050F  
                               APP_testMode@i 0511                                    _initTicker 782C  
                                     ___awdiv 60E8                                    _initRomOps 829C  
                                     ___awmod 649C                                       ___lldiv 67E6  
                                     _canPoll 8328                                       _doFlash 1ED0  
                                  ??_addEvent 0536                                       _doEvlrn 5E92  
                                  _paramBlock 0820                                       _doNenrd 710A  
                          canProcessMessage@m 0554                                       _doEvuln 718C  
                                     _doNnclr 802C                                       _doNnevn 7BE8  
                                     _doReqev 4962                                       _doReval 5B12  
                                     __pcinit 7286                                 _teachCheckLen 7088  
                                     _doRqevn 7B9C                             __end_of_leds_poll 39D0  
                          _startTimedResponse 794E                                       __ramtop 4000  
                                     _getHash 822E                                     ?_writeNVM 050E  
                          doEvlrn@eventNumber 0550                                       __ptext0 6328  
                                     __ptext1 4DBC                                       __ptext2 8306  
                                     __ptext3 582C                                       __ptext4 7DC6  
                                     __ptext5 4F16                                       __ptext6 7E00  
                                     __ptext7 4C4A                                       __ptext8 5BFC  
                                     __ptext9 7D88                               _consumerPowerUp 7E00  
                                     _isEvent 7E36                                       _pbTimer 0570  
                          APP_nvDefault@index 050B                               getEv@tableIndex 051C  
                            _EnumerationState 05A6                             ??_canFactoryReset 0515  
                           _mnsProcessMessage 0A06                                       _nvCache 0600  
                                  _mode_flags 05A4                                   ?_canPowerUp 0501  
                                     _readNVM 74D8                     startEnumeration@txWaiting 050B  
                                  getNN@flags 051A                                _nvFactoryReset 7D48  
                                     getEN@hi 0516                                     _T2CONbits 0324  
                                     getEN@lo 0518                             ??_teachGetESDdata 0501  
                    __end_of_rebuildHashtable 582C                                    ??_checkLen 0530  
                                     getNN@hi 0516                                       getNN@lo 0518  
                                  _mode_state 05A1                              ___awmod@dividend 0501  
                          doReqev@eventNumber 0531                                       _sendRTR 7CC0  
                                     _mnsPoll 2600                                     _T4CONbits 0330  
                          ?_mnsProcessMessage 0554                                       _tickGet 73EE  
                                _flashCounter 0589                             doNenrd@tableIndex 0531  
                         ?_startTimedResponse 0505                                  _isEvent$5760 0501  
                                  getNV@index 0504                                       _rxQueue 05C7  
                           doNenrd@nodeNumber 052C                      ??_consumerProcessMessage 0556  
                                     _powerUp 582C                         canReceiveMessage@temp 0516  
                          doRqevn@eventNumber 052A                                    _mnsService FFDD  
                           __end_of_nvService FFDD                                    _mnsPowerUp 4F16  
                           __end_of_nvPowerUp 7E00                           __end_of_DEFAULT_ISR 835E  
                                     _writeEv 6C30                          end_of_initialization 72F8  
                                  ??_initARGB 0501                           ??_mnsProcessMessage 05D0  
                                writeNVM@type 0514                                    getEv@evNum 050D  
            prepareSelfEnumResponse@txFifoObj 0501                                       memcpy@d 0507  
                                     memcpy@n 0505                                       memcpy@s 0509  
                  APP_nvValueChanged@oldValue 0502                                 ??_EEPROM_Read 0504  
                             ?_loadFlashBlock 0501                 __end_of_CAN1_OperationModeGet 82FC  
               __end_of_CAN1_OperationModeSet 7088                             ?_APP_factoryReset 0501  
                            _startEnumeration 75BA                               ___lldiv@divisor 050F  
                                writeEv@evVal 0516                      __end_of_nvProcessMessage 3644  
                                writeEv@evNum 0515                               ___lldiv@counter 0517  
                        ??_startTimedResponse 0508                       pollTimedResponse@result 053F  
                          ??_APP_factoryReset 0537               eraseFlashBlock@interruptEnabled 0504  
                           __end_of_updateRGB 8316                              ??_APP_nvValidate 0502  
                               ??_FLASH_Write 050A                          nvGetDiagnostic@index 0509  
                                     postdec1 04E5                                       postdec2 04DD  
                      ??_getNumTxBuffersInUse 0501                                       postinc0 04EE  
                                     postinc1 04E6                                       postinc2 04DE  
                   updateLedRange@start_ledno 0503                               _mnsFactoryReset 7626  
                           ?_mnsGetDiagnostic 0507          EEPROM_WriteNoVerify@interruptEnabled 0508  
                     _prepareSelfEnumResponse 72FE                        ?_setTimedResponseDelay 0501  
                                _APP_addEvent 81A8                                ?_teachCheckLen 0531  
                   __end_of_mnsProcessMessage 16F8                            doNnevn@eventNumber 052A  
                                doFlash@ledno 0506                                    _tmpMessage 06B4  
                          ??_mnsGetDiagnostic 0509                                  doFlash@order 0505  
              startTimedResponse@serviceIndex 0505                        __end_of_nvFactoryReset 7D88  
                                  ??_writeNVM 0512                                    _showStatus 5066  
                                   _PORTAbits 04CE                                    _previousNN 058D  
                     ??_consumerEventCheckLen 0534                            _APP_nvValueChanged 835A  
                   _timedResponseServiceIndex 0598                                    _priorities FE59  
                               ??_pbDownTimer 0518                               sendMessage2@opc 0528  
                        __end_of_teachPowerUp 7DC6                               sendMessage3@opc 0529  
                             sendMessage4@opc 052A                               sendMessage5@opc 052B  
                             sendMessage6@opc 052C                               sendMessage7@opc 052D  
                           _eventTeachService FFB3                                     _TRISAbits 04C6  
                                   _TRISBbits 04C7                        _mnsProcessMessage$4430 0557  
                          _timedResponseDelay 0593                                   showStatus@s 0503  
                             loadNvCache@temp 050F                           ?_APP_nvValueChanged 0501  
                               ??_bootEsdData 0501                                    isEvent@opc 0502  
                             ??_setLEDsByMode 0504                           teachCheckLen@needed 0533  
                     __end_of_consumerEsdData 8268               ??_mnsTRserviceDiscoveryCallback 0530  
                           ??_flushFlashBlock 0505                            _teachGetDiagnostic 7FFC  
                           _heartbeatSequence 059C                           _teachProcessMessage 16F8  
                          canSendMessage@temp 0515                             removeTableEntry@i 0534  
                               ??_bootPowerUp 050D                                  _APP_testMode 3F9E  
                             _isConsumedEvent 82FC                 __end_of_handleSelfEnumeration 65F4  
                         __end_of_EEPROM_Read 7B9C                       __end_of_consumerPowerUp 7E36  
                         ?_teachGetDiagnostic 0507                             _canTransmitFailed 05A7  
                                 ?_initTicker 0501                                   ?_initRomOps 0501  
                        ??_APP_nvValueChanged 0503                          __end_of_sendMessage2 8102  
                        __end_of_sendMessage3 80D8                          __end_of_sendMessage4 80AE  
                        __end_of_sendMessage5 8156                          __end_of_sendMessage6 8084  
                        __end_of_sendMessage7 812C                                __end_of___lmul 76FC  
                              __end_of_canPri FFA5                                __end_of_doNerd 829C  
                  removeTableEntry@tableIndex 0535                                __end_of_getEVs 6B02  
                             ?_nvFactoryReset 0501                              _removeTableEntry 4434  
                              __end_of_memcpy 7B4E                            canReceiveMessage@m 0510  
                        ?_teachProcessMessage 0554                     __end_of_eventTeachService FFC1  
                         __end_of_FLASH_Write 5632                     consumerProcessMessage@enn 0559  
                       __end_of_APP_nvDefault 52E4                     consumerProcessMessage@ret 055B  
                        _eventConsumerService FFA5                                _canSendMessage 2A9E  
                                 _DEFAULT_ISR 835C                                  _name_absaddr 0848  
                         start_initialization 7286                              ??_clearAllEvents 0536  
                   ?_APP_processConsumedEvent 051C                                  _leds_powerUp 8156  
                        ??_teachGetDiagnostic 0509                                   __end_of_pop 6328  
                               factoryReset@i 053B                                   ?_mnsPowerUp 0501  
                         _APP_isConsumedEvent 8348                  ?_mnsTRallDiagnosticsCallback 052E  
                __end_of_EEPROM_WriteNoVerify 77CA                                 _refreshString 76FC  
                         __end_of_pbDownTimer 60E8                            _bootProcessMessage 6B9A  
                         _getNextWriteMessage 5924                                  _nvGetESDdata 81CA  
                    __end_of_canGetDiagnostic 669A                       ??_APP_preProcessMessage 0503  
                     __end_of_mnsFactoryReset 7692                                 ??_loadNvCache 050D  
                       _consumerGetDiagnostic 7FCC                           __end_of_bootEsdData 7F08  
                         ?_bootProcessMessage 0554                                  doEvlrn@evVal 0553  
                                doEvlrn@evNum 0552                               numEv@tableIndex 0501  
                   ??_prepareSelfEnumResponse 0501                        startTimedResponse@type 0508  
                  __end_of_evtIdxToTableIndex 8322                      rebuildHashtable@chainIdx 0527  
                                    ??___lmul 0509                               ??_teachCheckLen 0535  
                                doNenrd@index 0530                          ?_APP_isConsumedEvent 0501  
                                    ??_doNerd 0509                                      ??_getEVs 050D  
                         bootProcessMessage@m 0554                            addEvent@forceOwnNN 0535  
                                 _MD1CON0bits 006A                                  _nerdCallback 754C  
                                 __pdataBANK5 05FD                       _updateModuleErrorStatus 82CA  
                         __end_of_bootService FFCF                                      ??_memcpy 0507  
                         __end_of_bootPowerUp 5CE4                        __end_of_canSendMessage 2EC6  
                                 ?_showStatus 0501                          ?_getNextWriteMessage 0501  
                       ??_teachProcessMessage 0556                                   __pbssBIGRAM 08FC  
                               _reqevCallback 5DBC                          ??_bootProcessMessage 0556  
                           ??_nvGetDiagnostic 0509                              canSendMessage@mp 050D  
                               __pcstackBANK5 05D0                                    setNV@index 0519  
                                  setNV@value 0515           APP_processConsumedEvent@start_ledno 0521  
                          addEvent@tableIndex 0546                                ?_refreshString 0501  
                  setTimedResponseDelay@delay 0501                                     addEvent@e 0545  
                          addEvent@nodeNumber 052F                 ??_mnsTRallDiagnosticsCallback 0530  
                    _factoryResetGlobalEvents 833A                       __end_of_isConsumedEvent 8306  
                            ?_consumerEsdData 0501                                   _EEPROM_Read 7B4E  
                          initTicker@priority 0502                       ?_APP_postProcessMessage 0501  
                           ??_eraseFlashBlock 0501                     APP_processConsumedEvent@m 051C  
                              mnsPowerUp@temp 050E                                  doNnevn@count 052C  
                        teachProcessMessage@m 0554                               _canFactoryReset 8268  
       __end_of_mnsTRserviceDiscoveryCallback 6B9A                 _mnsTRserviceDiscoveryCallback 6B02  
                mnsTRallDiagnosticsCallback@d 0534                                    nvPowerUp@i 0512  
                             tickGet@IntFlag1 0506                               tickGet@IntFlag2 0505  
                      _consumerProcessMessage 3CB8                               _teachGetESDdata 7F3C  
                       ??_APP_isConsumedEvent 0501                                  ??_canEsdData 0501  
                                    _C1FIFOBA 014C                                 __pmediumconst FE58  
                            ?_consumerPowerUp 0501                              getEVs@tableIndex 051A  
                                    ?___awdiv 0501                                     __ptext100 8350  
                                   __ptext101 79AA                                     __ptext110 3644  
                                   __ptext102 76FC                                     __ptext111 7692  
                                   __ptext103 1ED0                                     __ptext120 60E8  
                                   __ptext112 67E6                                     __ptext104 7AAC  
                                   __ptext121 8334                                     __ptext113 5632  
                                   __ptext105 829C                                     __ptext130 8354  
                                   __ptext122 833A                                     __ptext114 7D48  
                                   __ptext106 669A                                     __ptext131 78F0  
                                   __ptext123 820E                                     __ptext115 7626  
                                   __ptext107 5066                                     __ptext140 7B4E  
                                   __ptext132 82CA                                     __ptext124 4434  
                                   __ptext116 8268                                     __ptext108 5F64  
                                   __ptext141 3F9E                                     __ptext133 7764  
                                   __ptext125 788E                                     __ptext117 832E  
                                   __ptext109 6026                                   _FLASH_Write 5522  
                                   __ptext142 7D04                                     __ptext134 5730  
                                   __ptext126 5522                                     __ptext118 51A8  
                                   __ptext143 73EE                                     __ptext135 52E4  
                                   __ptext127 7A58                                     __ptext119 649C  
                                   __ptext144 4AD6                                     __ptext136 822E  
                                   __ptext128 69C8                                     __ptext145 7F08  
                                   __ptext137 6740                                     __ptext129 6F82  
                                   __ptext146 8180                                     __ptext138 74D8  
                                   __ptext147 835C                                     __ptext139 7376  
                                    _C1MASK0H 0191                                      ?___awmod 0501  
                                    _C1MASK0L 0190                                      _C1MASK0T 0193  
                                    _C1MASK0U 0192                                     _findEvent 63E4  
                                    ?___lldiv 050B                           __end_of_loadNvCache 782C  
                                doReqev@evVal 0534                                  doReqev@evNum 0533  
                             getNN@tableIndex 051B                                      ?_canPoll 0501  
                                doReval@enNum 052E                                      ?_doFlash 0501  
                                doReval@evVal 0530                                  doReval@evNum 052C  
                                   _flashTime 0580                                      ?_doEvlrn 054E  
                                    ?_doNenrd 0501                                      ?_doEvuln 053B  
                                    ?_doNnclr 0501                                      ?_doNnevn 0501  
                                    ?_doReqev 052F                                      ?_doReval 052C  
                           teachGetESDdata@id 0501                                      ?_doRqevn 0501  
                       ??_getNextWriteMessage 0503                                      ?_getHash 051C  
                               ??_setNewCanId 0515                                     _pbUpTimer 5F64  
                             ?_canSendMessage 050D                                 ??_sendMessage 0523  
                                    ?_isEvent 0501                              _findServiceIndex 6DE2  
                            nerdCallback@step 052F                              nerdCallback@type 0501  
                              ?_reqevCallback 052E                                  ??_canPowerUp 050D  
                              _heartbeatTimer 056C                                   __smallconst FE58  
                                    ?_readNVM 0507                                    _C1FLTCON0L 0180  
                    __end_of_startEnumeration 7626                                    _C1FLTOBJ0H 018D  
                                  _C1FLTOBJ0L 018C                                    _C1FLTOBJ0T 018F  
                                  _C1FLTOBJ0U 018E                                    _C1CONHbits 0101  
                                   _leds_poll 3644                                      ?_sendRTR 0501  
                                    ?_mnsPoll 0501                             ?_rebuildHashtable 0501  
             __end_of_prepareSelfEnumResponse 7376              CAN1_OperationModeSet@requestMode 0502  
                                    ?_tickGet 0501       mnsTRallDiagnosticsCallback@serviceIndex 052E  
                                    _CANRXPPS 023D                                   _pbDownTimer 6026  
                                  _C1CONTbits 0103                                    _C1CONUbits 0102  
                                   checkLen@m 052C                              ??_loadFlashBlock 0501  
                                    ?_powerUp 0501                            ??_rebuildHashtable 0522  
                                    _T2CLKCON 0326                                      _CLCnGLS0 00DC  
                                    _CLCnGLS1 00DD                                      _CLCnGLS2 00DE  
                                    _CLCnGLS3 00DF                                      _CLCnSEL0 00D8  
                                    _CLCnSEL1 00D9                                      _CLCnSEL2 00DA  
                                    _CLCnSEL3 00DB                                      ?_writeEv 0515  
                                    _T4CLKCON 0332                                    _C1INTHbits 011D  
                                 _bootEsdData 7ED4                            __end_of_canEsdData 820E  
                                  _C1INTTbits 011F                                    _C1INTUbits 011E  
                                 _flashBuffer 05FD                        consumerEventCheckLen@m 0531  
                              doReval@evIndex 052D                __end_of_APP_postProcessMessage 8354  
                     getNumRxBuffersInUse@i16 0505                                     _nvService FFCF  
                         consumerPowerUp@temp 0501                                 ??_removeEvent 053A  
                                _SPI1BAUDbits 0089                                      _LATBbits 04BF  
                                    _LATCbits 04C0                                     _nvPowerUp 7DC6  
                           findEvent@chainIdx 052D                        ?_consumerGetDiagnostic 0507  
                    _canWaitForTxQueueToDrain 82E0                                      _IPR0bits 0362  
                                    _PIE0bits 049E                          rebuildHashtable@hash 0525  
                            ?_mnsFactoryReset 0501                                     _rxBuffers 0646  
                                   getHash@en 051E                                     getHash@nn 051C  
                              _flashFlushTime 0642                                  _SPI1CON0bits 0084  
                                    _IVTBASEH 045E                                      _IVTBASEL 045D  
                                _SPI1CON1bits 0085                                      _IVTBASEU 045F  
                                _SPI1CON2bits 0086        __end_of_APP_isSuitableTimeToWriteFlash 8358  
              _APP_isSuitableTimeToWriteFlash 8354                                   _bootService FFC1  
                          __end_of_canService FFF9                                  _teachPowerUp 7D88  
                                 _bootPowerUp 5BFC                                      _PIR0bits 04AE  
                          __end_of_canPowerUp 4DBC                                      _PIR3bits 04B1  
                           ?_nvProcessMessage 0554                       ??_setTimedResponseDelay 0501  
                           doReqev@tableIndex 0536                                      _SPI1INTF 008A  
                                    i2u863_40 7F18                                      _SPI1TCNT 0082  
                                    i2u863_41 7F14                                _mnsDiagnostics 05AD  
                                    i2u864_40 7F30                                      i2u864_41 7F2C  
                   ??_updateModuleErrorStatus 0501                                      i2u865_40 818E  
                                    i2u865_41 818A                                      i2u866_40 81A4  
                                    i2u866_41 81A0                              ivt0x900_undefint 0A00  
                           doReqev@nodeNumber 052F                                   _pbWasPushed 059D  
                                    _TMR0_ISR 8180                            ??_nvProcessMessage 0556  
                   EEPROM_WriteNoVerify@index 0501                                    ?_findEvent 0522  
                   EEPROM_WriteNoVerify@value 0504                                     _updateRGB 830E  
                        _EEPROM_WriteNoVerify 7764              consumerProcessMessage@tableIndex 055C  
               updateLedRange@colourIndexPair 0502                             _teachFactoryReset 832E  
                                  ?_pbUpTimer 0501                                sendMessage@len 051B  
                              sendMessage@opc 0525                             _timedResponseTime 0560  
                           _timedResponseStep 0595                             _timedResponseType 0596  
                            _enumerationState 05A5                                  doRqevn@count 052C  
                                   _transport 0591                            ?_teachFactoryReset 0501  
               APP_processConsumedEvent@onOff 051F                    canReceiveMessage@rxFifoObj 0518  
                                  ?_leds_poll 0501                               _flushFlashBlock 69C8  
               __end_of_consumerEventCheckLen 82CA                               ??_refreshString 0501  
                         __end_of_setNewCanId 7C7C                           __end_of_sendMessage 6D54  
                         ??_teachFactoryReset 0537                               checkLen@service 052F  
                                 _INTCON0bits 04D6                            __end_of_bl_version FFA0  
                           ___lmul@multiplier 0501                                  _sendMessage2 80D8  
                                _sendMessage3 80AE                                  _sendMessage4 8084  
                                _sendMessage5 812C                                  _sendMessage6 805A  
                                _sendMessage7 8102                               nvFactoryReset@i 0517  
                     __end_of_canFactoryReset 8284             APP_processConsumedEvent@end_ledno 0522  
                    __end_of_removeTableEntry 461E                              ?_isConsumedEvent 0501  
                     __end_of_teachGetESDdata 7F6C                                    ?_nvPowerUp 0501  
                                 _loadNvCache 77CA                                      __Hrparam 0000  
                                 _eventChains 0BF9                      evtIdxToTableIndex@evtIdx 0501  
                     APP_addEvent@eventNumber 0549                                     memcpy@tmp 050B  
                       _CAN1_OperationModeGet 82F2                                      __Lrparam 0000  
                       _CAN1_OperationModeSet 7006                             doReval@tableIndex 052F  
                            ??_nvFactoryReset 0515                                  ??_initTicker 0501  
                         __end_of_removeEvent 7EA0                                  ??_initRomOps 0501  
                      removeEvent@eventNumber 0538              __end_of_APP_processConsumedEvent 5B12  
                   __end_of_teachFactoryReset 8334                         ?_EEPROM_WriteNoVerify 0501  
                                    _addEvent 39D0                                    ?_updateRGB 0501  
              ?_mnsTRserviceDiscoveryCallback 052E                               ??_reqevCallback 0530  
                          doNenrd@eventNumber 052E                                  ?_DEFAULT_ISR 0501  
                                    _checkLen 688A                                    _T0CON0bits 031A  
                                  _T0CON1bits 031B               __end_of_updateModuleErrorStatus 82E0  
                                  _FLASH_Read 7376                         getNextWriteMessage@wr 050C  
                                    __ptext10 77CA                                      __ptext11 8156  
                                    __ptext20 5CE4                                      __ptext12 8316  
                                    __ptext21 6B9A                                      __ptext13 782C  
                                    __ptext30 710A                                      __ptext22 16F8  
                                    __ptext14 7006                                      __ptext31 831C  
                                    __ptext23 7088                                      __ptext15 82F2  
                                    __ptext40 6B02                                      __ptext32 718C  
                                    __ptext24 7B9C                                      __ptext16 2EC6  
                                    __ptext41 5406                                      __ptext33 7E6C  
                                    __ptext25 5B12                                      __ptext17 3298  
                                    __ptext50 8344                                      __ptext42 7EA0  
                                    __ptext34 5E92                                      __ptext26 4962  
                                    __ptext18 0A06                                      __ptext51 81CA  
                                    __ptext43 754C                                      __ptext35 81A8  
                                    __ptext27 7BE8                                      __ptext19 3CB8  
                                    __ptext60 7FFC                                      __ptext52 824C  
                                    __ptext44 5DBC                                      __ptext36 39D0  
                                    __ptext28 802C                                      __ptext61 794E  
                                    __ptext53 81EC                                      __ptext45 8340  
                                    __ptext37 6C30                                      __ptext29 8284  
                                    __ptext70 2600                                      __ptext62 805A  
                                    __ptext54 7ED4                                      __ptext46 692A  
                                    __ptext38 61AA                                      __ptext71 7C7C  
                                    __ptext63 8084                                      __ptext55 7F3C  
                                    __ptext47 8322                                      __ptext39 7A02  
                                    __ptext80 830E                                      __ptext72 80D8  
                                    __ptext64 80AE                                      __ptext56 7F6C  
                                    __ptext48 6D54                                      __ptext81 6A66  
                                    __ptext73 8102                                      __ptext65 47E2  
                                    __ptext57 7F9C                                      __ptext49 835A  
                                    __ptext90 6E6E                                      __ptext82 423E  
                                    __ptext74 82FC                                      __ptext66 6EFA  
                                    __ptext58 7FCC                                      __ptext91 720C  
                                    __ptext83 626A                                      __ptext75 8348  
                                    __ptext67 6DE2                                      __ptext59 65F4  
                                    __ptext92 7464                                      __ptext84 7AFE  
                                    __ptext76 63E4                                      __ptext68 82E0  
                                    __ptext93 5924                                      __ptext85 654A  
                                    __ptext77 82B4                                      __ptext69 8328  
                                    __ptext94 461E                                      __ptext86 812C  
                                    __ptext78 688A                                      __ptext95 75BA  
                                    __ptext87 6CC2                                      __ptext79 5A1C  
                                    __ptext96 7CC0                                      __ptext88 2A9E  
                                    __ptext97 7C34                                      __ptext89 7E36  
                                    __ptext98 72FE                                      __ptext99 834C  
                __end_of_getNumRxBuffersInUse 74D8                                  ??_mnsPowerUp 050D  
                                    _ledTimer 0564                                      _ledState 058B  
                               ?_EEPROM_Write 0509                   CAN1_OperationModeSet@status 0501  
                                    _initARGB 4AD6                                   _OSCCON1bits 00AD  
                                 _OSCCON3bits 00AF                            __end_of_initTicker 788E  
                          __end_of_initRomOps 82B4                                      doNnevn@i 052D  
                          __end_of_paramBlock 0840                                canPowerUp@temp 050D  
                       __end_of_setLEDsByMode 7CC0                                 ?_factoryReset 0501  
                            _nvTRnvrdCallback 7A02                                 findEvent@hash 052C  
                                    doRqevn@i 052D                             ?_canGetDiagnostic 0507  
                                 getEVs@evIdx 051B                                   _IVTLOCKbits 0459  
               __end_of_APP_preProcessMessage 8350                            ??_canGetDiagnostic 0509  
                                 _SPI1CLKbits 008C                                      isa$xinst 0000  
                                    _testTime 057C                                      _services FF89  
                              _receiveOverrun 7F08                      clearAllEvents@tableIndex 0536  
                             _nvGetDiagnostic 7F6C                                   ??_findEvent 0526  
                       _handleSelfEnumeration 654A                       canSendMessage@txFifoObj 0519  
                          __end_of_mnsService FFEB                       __end_of_flushFlashBlock 6A66  
                           writeEv@tableIndex 0524                            __end_of_mnsPowerUp 5066  
                                ??_showStatus 0501                                   ??_pbUpTimer 0518  
                                    _writeNVM 788E                              sendRTR@txFifoObj 0501  
                  processEnumeration@newCanId 051B                        APP_addEvent@forceOwnNN 054D  
                                 _setNewCanId 7C34                                   _sendMessage 6CC2  
          handleSelfEnumeration@receivedCanId 050F                                 writeNVM@index 050E  
                     updateLedRange@end_ledno 0501                                 writeNVM@value 0511  
                                 ??_leds_poll 050B                    ??_factoryResetGlobalEvents 0537  
                          _evtIdxToTableIndex 831C                         canGetDiagnostic@index 050A  
                                 _NVMCON0bits 0040                                   _NVMCON1bits 0041  
                                    memcpy@d1 0501                                      memcpy@s1 0503  
                             _eraseFlashBlock 6F82                             APP_addEvent@evVal 054C  
                           APP_addEvent@evNum 054B                       teachGetDiagnostic@index 0509  
                              ??_EEPROM_Write 050D                    __end_of_processEnumeration 47E2  
                                 getHash@hash 0521                               _C1FIFOCON1Hbits 015D  
                                    intlevel2 0000                           ?_evtIdxToTableIndex 0501  
                             _C1FIFOCON3Hbits 0175                                 ?_getParameter 0501  
                        getNextWriteMessage@q 0501                              ?_canFactoryReset 0501  
                                ?_EEPROM_Read 0501                              ___lldiv@dividend 050B  
                              ??_factoryReset 0537                                   ??_nvPowerUp 0512  
                       removeEvent@tableIndex 053A                              ?_teachGetESDdata 0501  
                    __end_of_findServiceIndex 6E6E                                   _removeEvent 7E6C  
                      APP_addEvent@nodeNumber 0547                       ?_consumerProcessMessage 0554  
                          __end_of_showStatus 51A8                mnsTRrqnpnCallback@serviceIndex 052E  
                       removeEvent@nodeNumber 0536                        ?_CAN1_OperationModeGet 0501  
                      ?_CAN1_OperationModeSet 0501                            _paramBlock_absaddr 0820  
                      __end_of_receiveOverrun 7F3C                           updateLedRange@ledno 0504  
                          __end_of_priorities FF59                              ??_canSendMessage 050F  
                 __end_of_teachProcessMessage 1ED0                    __end_of_tableIndexToEvtIdx 8328  
                        __end_of_canTransport FFFF                                  ?_FLASH_Write 0506  
                          tickGet@currentTime 0507                        ??_EEPROM_WriteNoVerify 0505  
                                    powerUp@i 052D                          ??_evtIdxToTableIndex 0501  
                           _pollTimedResponse 61AA                         __end_of_teachCheckLen 710A  
                                 ??_updateRGB 0501                            ?_pollTimedResponse 0501  
                    _APP_processConsumedEvent 5A1C                             FLASH_Read@address 0501  
                            _APP_factoryReset 8334                       nerdCallback@eventNumber 0532  
               APP_isConsumedEvent@tableIndex 0501                              ___lldiv@quotient 0513  
                              _updateLedRange 7D04                             ?_startEnumeration 0501  
                                ?_pbDownTimer 0501                                   findEvent@en 052A  
                                 findEvent@nn 0528                          findEvent@eventNumber 0524  
                                 ?_FLASH_Read 0501                                 bootEsdData@id 0501  
                  ??_canWaitForTxQueueToDrain 0501                           ??_pollTimedResponse 053D  
                            _mnsGetDiagnostic 7F9C                            ??_startEnumeration 050B  
                _timedResponseAllServicesFlag 0597                               _C1FIFOSTA2Hbits 016D  
                     ??_consumerGetDiagnostic 0509                               _C1FIFOSTA1Lbits 0160  
                             _C1FIFOSTA3Hbits 0179                                ??_getParameter 0506  
                             _C1FIFOSTA2Lbits 016C                                  ?_bootEsdData 0501  
                             _C1FIFOSTA3Lbits 0178                             sendMessage2@data1 0526  
                           sendMessage2@data2 0527                             sendMessage3@data1 0526  
                           sendMessage3@data2 0527                             sendMessage3@data3 0528  
                           sendMessage4@data1 0526                             sendMessage4@data2 0527  
                           sendMessage4@data3 0528                             sendMessage4@data4 0529  
                           sendMessage5@data1 0526                             sendMessage5@data2 0527  
                           sendMessage5@data3 0528                             sendMessage5@data4 0529  
                           sendMessage5@data5 052A                             sendMessage6@data1 0526  
                           sendMessage6@data2 0527                             sendMessage6@data3 0528  
                           sendMessage6@data4 0529                             sendMessage6@data5 052A  
                           sendMessage6@data6 052B                              bootPowerUp@found 050E  
                             _last_mode_flags 059F                             sendMessage7@data1 0526  
                           sendMessage7@data2 0527                             sendMessage7@data3 0528  
                           sendMessage7@data4 0529                             sendMessage7@data5 052A  
                           sendMessage7@data6 052B                             sendMessage7@data7 052C  
              __end_of_consumerProcessMessage 3F9E                                _checkPowerOnPb 669A  
                            EEPROM_Read@index 0501                      ?_prepareSelfEnumResponse 0501  
                             _last_mode_state 05A0                   __end_of_APP_isConsumedEvent 834C  
                     __end_of_nvGetDiagnostic 7F9C                                  ?_bootPowerUp 0501  
                             ?_receiveOverrun 0501                          nvTRnvrdCallback@step 052F  
                        nvTRnvrdCallback@type 0501                   __end_of_getNextWriteMessage 5A1C  
