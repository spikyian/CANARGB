

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Apr 25 02:53:33 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F27Q83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,space=0,delta=1
     6                           	psect	idataBANK5,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,space=0,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,space=0,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1,group=2
   104                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1,group=1
   131                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1,group=1
   132                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,space=0,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,space=0,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,space=0,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,space=0,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,space=0,delta=1,group=1
   139                           	psect	text120,global,reloc=2,class=CODE,space=0,delta=1,group=1
   140                           	psect	text121,global,reloc=2,class=CODE,space=0,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,space=0,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,space=0,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,space=0,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,space=0,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,space=0,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,space=0,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,space=0,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,space=0,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,space=0,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,space=0,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,space=0,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,space=0,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,space=0,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,space=0,delta=1
   155                           	psect	text136,global,reloc=2,class=CODE,space=0,delta=1
   156                           	psect	text137,global,reloc=2,class=CODE,space=0,delta=1
   157                           	psect	text138,global,reloc=2,class=CODE,space=0,delta=1
   158                           	psect	text139,global,reloc=2,class=CODE,space=0,delta=1
   159                           	psect	text140,global,reloc=2,class=CODE,space=0,delta=1
   160                           	psect	text141,global,reloc=2,class=CODE,space=0,delta=1
   161                           	psect	text142,global,reloc=2,class=CODE,space=0,delta=1
   162                           	psect	text143,global,reloc=2,class=CODE,space=0,delta=1
   163                           	psect	text144,global,reloc=2,class=CODE,space=0,delta=1
   164                           	psect	text145,global,reloc=4,class=CODE,space=0,delta=1
   165                           	psect	text146,global,reloc=4,class=CODE,space=0,delta=1
   166                           	psect	text147,global,reloc=4,class=CODE,space=0,delta=1
   167                           	psect	ivt0x900,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   168                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   169                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   170                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   171   000000                     
   172                           ; Generated 24/03/2025 GMT
   173                           ; 
   174                           ; Copyright © 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
   175                           ; All rights reserved.
   176                           ; 
   177                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   178                           ; 
   179                           ; Redistribution and use in source and binary forms, with or without modification, are
   180                           ; permitted provided that the following conditions are met:
   181                           ; 
   182                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   183                           ;        conditions and the following disclaimer.
   184                           ; 
   185                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   186                           ;        of conditions and the following disclaimer in the documentation and/or other
   187                           ;        materials provided with the distribution. Publication is not required when
   188                           ;        this file is used in an embedded application.
   189                           ; 
   190                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   191                           ;        software without specific prior written permission.
   192                           ; 
   193                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   194                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   195                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   196                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   197                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   198                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   199                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   200                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   201                           ; 
   202                           ; 
   203                           ; Code-generator required, PIC18F27Q83 Definitions
   204                           ; 
   205                           ; SFR Addresses
   206   0004E0                     bsr             equ	1248
   207   0004E9                     fsr0            equ	1257
   208   0004EA                     fsr0h           equ	1258
   209   0004E9                     fsr0l           equ	1257
   210   0004E1                     fsr1            equ	1249
   211   0004E2                     fsr1h           equ	1250
   212   0004E1                     fsr1l           equ	1249
   213   0004D9                     fsr2            equ	1241
   214   0004DA                     fsr2h           equ	1242
   215   0004D9                     fsr2l           equ	1241
   216   0004EF                     indf0           equ	1263
   217   0004E7                     indf1           equ	1255
   218   0004DF                     indf2           equ	1247
   219   0004D6                     intcon          equ	1238
   220   000041                     nvmcon          equ	65
   221   0004F9                     pcl             equ	1273
   222   0004FA                     pclath          equ	1274
   223   0004FB                     pclatu          equ	1275
   224   0004EB                     plusw0          equ	1259
   225   0004E3                     plusw1          equ	1251
   226   0004DB                     plusw2          equ	1243
   227   0004ED                     postdec0        equ	1261
   228   0004E5                     postdec1        equ	1253
   229   0004DD                     postdec2        equ	1245
   230   0004EE                     postinc0        equ	1262
   231   0004E6                     postinc1        equ	1254
   232   0004DE                     postinc2        equ	1246
   233   0004EC                     preinc0         equ	1260
   234   0004E4                     preinc1         equ	1252
   235   0004DC                     preinc2         equ	1244
   236   0004F3                     prod            equ	1267
   237   0004F4                     prodh           equ	1268
   238   0004F3                     prodl           equ	1267
   239   0004D8                     status          equ	1240
   240   0004F5                     tablat          equ	1269
   241   0004F6                     tblptr          equ	1270
   242   0004F7                     tblptrh         equ	1271
   243   0004F6                     tblptrl         equ	1270
   244   0004F8                     tblptru         equ	1272
   245   0004FD                     tosl            equ	1277
   246   0004E8                     wreg            equ	1256
   247   000038                     BOOTREG         equ	56	;# 
   248   000039                     CLKRCON         equ	57	;# 
   249   00003A                     CLKRCLK         equ	58	;# 
   250   000040                     NVMCON0         equ	64	;# 
   251   000041                     NVMCON1         equ	65	;# 
   252   000042                     NVMLOCK         equ	66	;# 
   253   000043                     NVMADR          equ	67	;# 
   254   000043                     NVMADRL         equ	67	;# 
   255   000044                     NVMADRH         equ	68	;# 
   256   000045                     NVMADRU         equ	69	;# 
   257   000046                     NVMDAT          equ	70	;# 
   258   000046                     NVMDATL         equ	70	;# 
   259   000047                     NVMDATH         equ	71	;# 
   260   000048                     VREGCON         equ	72	;# 
   261   000049                     BORCON          equ	73	;# 
   262   00004A                     HLVDCON0        equ	74	;# 
   263   00004B                     HLVDCON1        equ	75	;# 
   264   00004C                     ZCDCON          equ	76	;# 
   265   000060                     PMD0            equ	96	;# 
   266   000061                     PMD1            equ	97	;# 
   267   000062                     PMD2            equ	98	;# 
   268   000063                     PMD3            equ	99	;# 
   269   000064                     PMD4            equ	100	;# 
   270   000065                     PMD5            equ	101	;# 
   271   000066                     PMD6            equ	102	;# 
   272   000067                     PMD7            equ	103	;# 
   273   000068                     PMD8            equ	104	;# 
   274   00006A                     MD1CON0         equ	106	;# 
   275   00006B                     MD1CON1         equ	107	;# 
   276   00006C                     MD1SRC          equ	108	;# 
   277   00006D                     MD1CARL         equ	109	;# 
   278   00006E                     MD1CARH         equ	110	;# 
   279   00006F                     CMOUT           equ	111	;# 
   280   000070                     CM1CON0         equ	112	;# 
   281   000071                     CM1CON1         equ	113	;# 
   282   000072                     CM1NCH          equ	114	;# 
   283   000073                     CM1PCH          equ	115	;# 
   284   000074                     CM2CON0         equ	116	;# 
   285   000075                     CM2CON1         equ	117	;# 
   286   000076                     CM2NCH          equ	118	;# 
   287   000077                     CM2PCH          equ	119	;# 
   288   000078                     WDTCON0         equ	120	;# 
   289   000079                     WDTCON1         equ	121	;# 
   290   00007A                     WDTPSL          equ	122	;# 
   291   00007B                     WDTPSH          equ	123	;# 
   292   00007C                     WDTTMR          equ	124	;# 
   293   00007D                     DAC1DAT         equ	125	;# 
   294   00007D                     DAC1DATL        equ	125	;# 
   295   00007F                     DAC1CON         equ	127	;# 
   296   000080                     SPI1RXB         equ	128	;# 
   297   000081                     SPI1TXB         equ	129	;# 
   298   000082                     SPI1TCNT        equ	130	;# 
   299   000082                     SPI1TCNTL       equ	130	;# 
   300   000083                     SPI1TCNTH       equ	131	;# 
   301   000084                     SPI1CON0        equ	132	;# 
   302   000085                     SPI1CON1        equ	133	;# 
   303   000086                     SPI1CON2        equ	134	;# 
   304   000087                     SPI1STATUS      equ	135	;# 
   305   000088                     SPI1TWIDTH      equ	136	;# 
   306   000089                     SPI1BAUD        equ	137	;# 
   307   00008A                     SPI1INTF        equ	138	;# 
   308   00008B                     SPI1INTE        equ	139	;# 
   309   00008C                     SPI1CLK         equ	140	;# 
   310   00008D                     SPI2RXB         equ	141	;# 
   311   00008E                     SPI2TXB         equ	142	;# 
   312   00008F                     SPI2TCNT        equ	143	;# 
   313   00008F                     SPI2TCNTL       equ	143	;# 
   314   000090                     SPI2TCNTH       equ	144	;# 
   315   000091                     SPI2CON0        equ	145	;# 
   316   000092                     SPI2CON1        equ	146	;# 
   317   000093                     SPI2CON2        equ	147	;# 
   318   000094                     SPI2STATUS      equ	148	;# 
   319   000095                     SPI2TWIDTH      equ	149	;# 
   320   000096                     SPI2BAUD        equ	150	;# 
   321   000097                     SPI2INTF        equ	151	;# 
   322   000098                     SPI2INTE        equ	152	;# 
   323   000099                     SPI2CLK         equ	153	;# 
   324   0000AC                     ACTCON          equ	172	;# 
   325   0000AD                     OSCCON1         equ	173	;# 
   326   0000AE                     OSCCON2         equ	174	;# 
   327   0000AF                     OSCCON3         equ	175	;# 
   328   0000B0                     OSCTUNE         equ	176	;# 
   329   0000B1                     OSCFRQ          equ	177	;# 
   330   0000B1                     OSCFREQ         equ	177	;# 
   331   0000B2                     OSCSTAT         equ	178	;# 
   332   0000B2                     OSCSTAT1        equ	178	;# 
   333   0000B3                     OSCEN           equ	179	;# 
   334   0000B4                     PRLOCK          equ	180	;# 
   335   0000B5                     SCANPR          equ	181	;# 
   336   0000B6                     DMA1PR          equ	182	;# 
   337   0000B7                     DMA2PR          equ	183	;# 
   338   0000B8                     DMA3PR          equ	184	;# 
   339   0000B9                     DMA4PR          equ	185	;# 
   340   0000BA                     DMA5PR          equ	186	;# 
   341   0000BB                     DMA6PR          equ	187	;# 
   342   0000BC                     DMA7PR          equ	188	;# 
   343   0000BD                     DMA8PR          equ	189	;# 
   344   0000BE                     MAINPR          equ	190	;# 
   345   0000BF                     ISRPR           equ	191	;# 
   346   0000D4                     CLCDATA         equ	212	;# 
   347   0000D5                     CLCSELECT       equ	213	;# 
   348   0000D6                     CLCnCON         equ	214	;# 
   349   0000D7                     CLCnPOL         equ	215	;# 
   350   0000D8                     CLCnSEL0        equ	216	;# 
   351   0000D9                     CLCnSEL1        equ	217	;# 
   352   0000DA                     CLCnSEL2        equ	218	;# 
   353   0000DB                     CLCnSEL3        equ	219	;# 
   354   0000DC                     CLCnGLS0        equ	220	;# 
   355   0000DD                     CLCnGLS1        equ	221	;# 
   356   0000DE                     CLCnGLS2        equ	222	;# 
   357   0000DF                     CLCnGLS3        equ	223	;# 
   358   0000E8                     DMASELECT       equ	232	;# 
   359   0000E9                     DMAnBUF         equ	233	;# 
   360   0000EA                     DMAnDCNT        equ	234	;# 
   361   0000EA                     DMAnDCNTL       equ	234	;# 
   362   0000EB                     DMAnDCNTH       equ	235	;# 
   363   0000EC                     DMAnDPTR        equ	236	;# 
   364   0000EC                     DMAnDPTRL       equ	236	;# 
   365   0000ED                     DMAnDPTRH       equ	237	;# 
   366   0000EE                     DMAnDSZ         equ	238	;# 
   367   0000EE                     DMAnDSZL        equ	238	;# 
   368   0000EF                     DMAnDSZH        equ	239	;# 
   369   0000F0                     DMAnDSA         equ	240	;# 
   370   0000F0                     DMAnDSAL        equ	240	;# 
   371   0000F1                     DMAnDSAH        equ	241	;# 
   372   0000F2                     DMAnSCNT        equ	242	;# 
   373   0000F2                     DMAnSCNTL       equ	242	;# 
   374   0000F3                     DMAnSCNTH       equ	243	;# 
   375   0000F4                     DMAnSPTR        equ	244	;# 
   376   0000F4                     DMAnSPTRL       equ	244	;# 
   377   0000F5                     DMAnSPTRH       equ	245	;# 
   378   0000F6                     DMAnSPTRU       equ	246	;# 
   379   0000F7                     DMAnSSZ         equ	247	;# 
   380   0000F7                     DMAnSSZL        equ	247	;# 
   381   0000F8                     DMAnSSZH        equ	248	;# 
   382   0000F9                     DMAnSSA         equ	249	;# 
   383   0000F9                     DMAnSSAL        equ	249	;# 
   384   0000FA                     DMAnSSAH        equ	250	;# 
   385   0000FB                     DMAnSSAU        equ	251	;# 
   386   0000FC                     DMAnCON0        equ	252	;# 
   387   0000FD                     DMAnCON1        equ	253	;# 
   388   0000FE                     DMAnAIRQ        equ	254	;# 
   389   0000FF                     DMAnSIRQ        equ	255	;# 
   390   000100                     C1CONL          equ	256	;# 
   391   000101                     C1CONH          equ	257	;# 
   392   000102                     C1CONU          equ	258	;# 
   393   000103                     C1CONT          equ	259	;# 
   394   000104                     C1NBTCFGL       equ	260	;# 
   395   000105                     C1NBTCFGH       equ	261	;# 
   396   000106                     C1NBTCFGU       equ	262	;# 
   397   000107                     C1NBTCFGT       equ	263	;# 
   398   000108                     C1DBTCFGL       equ	264	;# 
   399   000109                     C1DBTCFGH       equ	265	;# 
   400   00010A                     C1DBTCFGU       equ	266	;# 
   401   00010B                     C1DBTCFGT       equ	267	;# 
   402   00010C                     C1TDCL          equ	268	;# 
   403   00010D                     C1TDCH          equ	269	;# 
   404   00010E                     C1TDCU          equ	270	;# 
   405   000110                     C1TBC           equ	272	;# 
   406   000110                     C1TBCL          equ	272	;# 
   407   000111                     C1TBCH          equ	273	;# 
   408   000112                     C1TBCU          equ	274	;# 
   409   000113                     C1TBCT          equ	275	;# 
   410   000114                     C1TSCONL        equ	276	;# 
   411   000115                     C1TSCONH        equ	277	;# 
   412   000116                     C1TSCONU        equ	278	;# 
   413   000117                     C1TSCONT        equ	279	;# 
   414   000118                     C1VECL          equ	280	;# 
   415   000119                     C1VECH          equ	281	;# 
   416   00011A                     C1VECU          equ	282	;# 
   417   00011B                     C1VECT          equ	283	;# 
   418   00011C                     C1INTL          equ	284	;# 
   419   00011D                     C1INTH          equ	285	;# 
   420   00011E                     C1INTU          equ	286	;# 
   421   00011F                     C1INTT          equ	287	;# 
   422   000120                     C1RXIF          equ	288	;# 
   423   000120                     C1RXIFL         equ	288	;# 
   424   000121                     C1RXIFH         equ	289	;# 
   425   000122                     C1RXIFU         equ	290	;# 
   426   000123                     C1RXIFT         equ	291	;# 
   427   000124                     C1TXIF          equ	292	;# 
   428   000124                     C1TXIFL         equ	292	;# 
   429   000125                     C1TXIFH         equ	293	;# 
   430   000126                     C1TXIFU         equ	294	;# 
   431   000127                     C1TXIFT         equ	295	;# 
   432   000128                     C1RXOVIF        equ	296	;# 
   433   000128                     C1RXOVIFL       equ	296	;# 
   434   000129                     C1RXOVIFH       equ	297	;# 
   435   00012A                     C1RXOVIFU       equ	298	;# 
   436   00012B                     C1RXOVIFT       equ	299	;# 
   437   00012C                     C1TXATIF        equ	300	;# 
   438   00012C                     C1TXATIFL       equ	300	;# 
   439   00012D                     C1TXATIFH       equ	301	;# 
   440   00012E                     C1TXATIFU       equ	302	;# 
   441   00012F                     C1TXATIFT       equ	303	;# 
   442   000130                     C1TXREQ         equ	304	;# 
   443   000130                     C1TXREQL        equ	304	;# 
   444   000131                     C1TXREQH        equ	305	;# 
   445   000132                     C1TXREQU        equ	306	;# 
   446   000133                     C1TXREQT        equ	307	;# 
   447   000134                     C1TRECL         equ	308	;# 
   448   000135                     C1TRECH         equ	309	;# 
   449   000136                     C1TRECU         equ	310	;# 
   450   000137                     C1TRECT         equ	311	;# 
   451   000138                     C1BDIAG0L       equ	312	;# 
   452   000139                     C1BDIAG0H       equ	313	;# 
   453   00013C                     C1BDIAG1L       equ	316	;# 
   454   00013D                     C1BDIAG1H       equ	317	;# 
   455   00013E                     C1BDIAG1U       equ	318	;# 
   456   00013F                     C1BDIAG1T       equ	319	;# 
   457   000140                     C1TEFCONL       equ	320	;# 
   458   000141                     C1TEFCONH       equ	321	;# 
   459   000142                     C1TEFCONU       equ	322	;# 
   460   000143                     C1TEFCONT       equ	323	;# 
   461   000144                     C1TEFSTAL       equ	324	;# 
   462   000145                     C1TEFSTAH       equ	325	;# 
   463   000146                     C1TEFSTAU       equ	326	;# 
   464   000147                     C1TEFSTAT       equ	327	;# 
   465   000148                     C1TEFUA         equ	328	;# 
   466   000148                     C1TEFUAL        equ	328	;# 
   467   000149                     C1TEFUAH        equ	329	;# 
   468   00014A                     C1TEFUAU        equ	330	;# 
   469   00014B                     C1TEFUAT        equ	331	;# 
   470   00014C                     C1FIFOBA        equ	332	;# 
   471   00014C                     C1FIFOBAL       equ	332	;# 
   472   00014D                     C1FIFOBAH       equ	333	;# 
   473   00014E                     C1FIFOBAU       equ	334	;# 
   474   00014F                     C1FIFOBAT       equ	335	;# 
   475   000150                     C1TXQCONL       equ	336	;# 
   476   000151                     C1TXQCONH       equ	337	;# 
   477   000152                     C1TXQCONU       equ	338	;# 
   478   000153                     C1TXQCONT       equ	339	;# 
   479   000154                     C1TXQSTAL       equ	340	;# 
   480   000155                     C1TXQSTAH       equ	341	;# 
   481   000156                     C1TXQSTAU       equ	342	;# 
   482   000157                     C1TXQSTAT       equ	343	;# 
   483   000158                     C1TXQUA         equ	344	;# 
   484   000158                     C1TXQUAL        equ	344	;# 
   485   000159                     C1TXQUAH        equ	345	;# 
   486   00015A                     C1TXQUAU        equ	346	;# 
   487   00015B                     C1TXQUAT        equ	347	;# 
   488   00015C                     C1FIFOCON1      equ	348	;# 
   489   00015C                     C1FIFOCON1L     equ	348	;# 
   490   00015D                     C1FIFOCON1H     equ	349	;# 
   491   00015E                     C1FIFOCON1U     equ	350	;# 
   492   00015F                     C1FIFOCON1T     equ	351	;# 
   493   000160                     C1FIFOSTA1      equ	352	;# 
   494   000160                     C1FIFOSTA1L     equ	352	;# 
   495   000161                     C1FIFOSTA1H     equ	353	;# 
   496   000162                     C1FIFOSTA1U     equ	354	;# 
   497   000163                     C1FIFOSTA1T     equ	355	;# 
   498   000164                     C1FIFOUA1       equ	356	;# 
   499   000164                     C1FIFOUA1L      equ	356	;# 
   500   000165                     C1FIFOUA1H      equ	357	;# 
   501   000166                     C1FIFOUA1U      equ	358	;# 
   502   000167                     C1FIFOUA1T      equ	359	;# 
   503   000168                     C1FIFOCON2      equ	360	;# 
   504   000168                     C1FIFOCON2L     equ	360	;# 
   505   000169                     C1FIFOCON2H     equ	361	;# 
   506   00016A                     C1FIFOCON2U     equ	362	;# 
   507   00016B                     C1FIFOCON2T     equ	363	;# 
   508   00016C                     C1FIFOSTA2      equ	364	;# 
   509   00016C                     C1FIFOSTA2L     equ	364	;# 
   510   00016D                     C1FIFOSTA2H     equ	365	;# 
   511   00016E                     C1FIFOSTA2U     equ	366	;# 
   512   00016F                     C1FIFOSTA2T     equ	367	;# 
   513   000170                     C1FIFOUA2       equ	368	;# 
   514   000170                     C1FIFOUA2L      equ	368	;# 
   515   000171                     C1FIFOUA2H      equ	369	;# 
   516   000172                     C1FIFOUA2U      equ	370	;# 
   517   000173                     C1FIFOUA2T      equ	371	;# 
   518   000174                     C1FIFOCON3      equ	372	;# 
   519   000174                     C1FIFOCON3L     equ	372	;# 
   520   000175                     C1FIFOCON3H     equ	373	;# 
   521   000176                     C1FIFOCON3U     equ	374	;# 
   522   000177                     C1FIFOCON3T     equ	375	;# 
   523   000178                     C1FIFOSTA3      equ	376	;# 
   524   000178                     C1FIFOSTA3L     equ	376	;# 
   525   000179                     C1FIFOSTA3H     equ	377	;# 
   526   00017A                     C1FIFOSTA3U     equ	378	;# 
   527   00017B                     C1FIFOSTA3T     equ	379	;# 
   528   00017C                     C1FIFOUA3       equ	380	;# 
   529   00017C                     C1FIFOUA3L      equ	380	;# 
   530   00017D                     C1FIFOUA3H      equ	381	;# 
   531   00017E                     C1FIFOUA3U      equ	382	;# 
   532   00017F                     C1FIFOUA3T      equ	383	;# 
   533   000180                     C1FLTCON0L      equ	384	;# 
   534   000181                     C1FLTCON0H      equ	385	;# 
   535   000182                     C1FLTCON0U      equ	386	;# 
   536   000183                     C1FLTCON0T      equ	387	;# 
   537   000184                     C1FLTCON1L      equ	388	;# 
   538   000185                     C1FLTCON1H      equ	389	;# 
   539   000186                     C1FLTCON1U      equ	390	;# 
   540   000187                     C1FLTCON1T      equ	391	;# 
   541   000188                     C1FLTCON2L      equ	392	;# 
   542   000189                     C1FLTCON2H      equ	393	;# 
   543   00018A                     C1FLTCON2U      equ	394	;# 
   544   00018B                     C1FLTCON2T      equ	395	;# 
   545   00018C                     C1FLTOBJ0       equ	396	;# 
   546   00018C                     C1FLTOBJ0L      equ	396	;# 
   547   00018D                     C1FLTOBJ0H      equ	397	;# 
   548   00018E                     C1FLTOBJ0U      equ	398	;# 
   549   00018F                     C1FLTOBJ0T      equ	399	;# 
   550   000190                     C1MASK0         equ	400	;# 
   551   000190                     C1MASK0L        equ	400	;# 
   552   000191                     C1MASK0H        equ	401	;# 
   553   000192                     C1MASK0U        equ	402	;# 
   554   000193                     C1MASK0T        equ	403	;# 
   555   000194                     C1FLTOBJ1       equ	404	;# 
   556   000194                     C1FLTOBJ1L      equ	404	;# 
   557   000195                     C1FLTOBJ1H      equ	405	;# 
   558   000196                     C1FLTOBJ1U      equ	406	;# 
   559   000197                     C1FLTOBJ1T      equ	407	;# 
   560   000198                     C1MASK1         equ	408	;# 
   561   000198                     C1MASK1L        equ	408	;# 
   562   000199                     C1MASK1H        equ	409	;# 
   563   00019A                     C1MASK1U        equ	410	;# 
   564   00019B                     C1MASK1T        equ	411	;# 
   565   00019C                     C1FLTOBJ2       equ	412	;# 
   566   00019C                     C1FLTOBJ2L      equ	412	;# 
   567   00019D                     C1FLTOBJ2H      equ	413	;# 
   568   00019E                     C1FLTOBJ2U      equ	414	;# 
   569   00019F                     C1FLTOBJ2T      equ	415	;# 
   570   0001A0                     C1MASK2         equ	416	;# 
   571   0001A0                     C1MASK2L        equ	416	;# 
   572   0001A1                     C1MASK2H        equ	417	;# 
   573   0001A2                     C1MASK2U        equ	418	;# 
   574   0001A3                     C1MASK2T        equ	419	;# 
   575   0001A4                     C1FLTOBJ3       equ	420	;# 
   576   0001A4                     C1FLTOBJ3L      equ	420	;# 
   577   0001A5                     C1FLTOBJ3H      equ	421	;# 
   578   0001A6                     C1FLTOBJ3U      equ	422	;# 
   579   0001A7                     C1FLTOBJ3T      equ	423	;# 
   580   0001A8                     C1MASK3         equ	424	;# 
   581   0001A8                     C1MASK3L        equ	424	;# 
   582   0001A9                     C1MASK3H        equ	425	;# 
   583   0001AA                     C1MASK3U        equ	426	;# 
   584   0001AB                     C1MASK3T        equ	427	;# 
   585   0001AC                     C1FLTOBJ4       equ	428	;# 
   586   0001AC                     C1FLTOBJ4L      equ	428	;# 
   587   0001AD                     C1FLTOBJ4H      equ	429	;# 
   588   0001AE                     C1FLTOBJ4U      equ	430	;# 
   589   0001AF                     C1FLTOBJ4T      equ	431	;# 
   590   0001B0                     C1MASK4         equ	432	;# 
   591   0001B0                     C1MASK4L        equ	432	;# 
   592   0001B1                     C1MASK4H        equ	433	;# 
   593   0001B2                     C1MASK4U        equ	434	;# 
   594   0001B3                     C1MASK4T        equ	435	;# 
   595   0001B4                     C1FLTOBJ5       equ	436	;# 
   596   0001B4                     C1FLTOBJ5L      equ	436	;# 
   597   0001B5                     C1FLTOBJ5H      equ	437	;# 
   598   0001B6                     C1FLTOBJ5U      equ	438	;# 
   599   0001B7                     C1FLTOBJ5T      equ	439	;# 
   600   0001B8                     C1MASK5         equ	440	;# 
   601   0001B8                     C1MASK5L        equ	440	;# 
   602   0001B9                     C1MASK5H        equ	441	;# 
   603   0001BA                     C1MASK5U        equ	442	;# 
   604   0001BB                     C1MASK5T        equ	443	;# 
   605   0001BC                     C1FLTOBJ6       equ	444	;# 
   606   0001BC                     C1FLTOBJ6L      equ	444	;# 
   607   0001BD                     C1FLTOBJ6H      equ	445	;# 
   608   0001BE                     C1FLTOBJ6U      equ	446	;# 
   609   0001BF                     C1FLTOBJ6T      equ	447	;# 
   610   0001C0                     C1MASK6         equ	448	;# 
   611   0001C0                     C1MASK6L        equ	448	;# 
   612   0001C1                     C1MASK6H        equ	449	;# 
   613   0001C2                     C1MASK6U        equ	450	;# 
   614   0001C3                     C1MASK6T        equ	451	;# 
   615   0001C4                     C1FLTOBJ7       equ	452	;# 
   616   0001C4                     C1FLTOBJ7L      equ	452	;# 
   617   0001C5                     C1FLTOBJ7H      equ	453	;# 
   618   0001C6                     C1FLTOBJ7U      equ	454	;# 
   619   0001C7                     C1FLTOBJ7T      equ	455	;# 
   620   0001C8                     C1MASK7         equ	456	;# 
   621   0001C8                     C1MASK7L        equ	456	;# 
   622   0001C9                     C1MASK7H        equ	457	;# 
   623   0001CA                     C1MASK7U        equ	458	;# 
   624   0001CB                     C1MASK7T        equ	459	;# 
   625   0001CC                     C1FLTOBJ8       equ	460	;# 
   626   0001CC                     C1FLTOBJ8L      equ	460	;# 
   627   0001CD                     C1FLTOBJ8H      equ	461	;# 
   628   0001CE                     C1FLTOBJ8U      equ	462	;# 
   629   0001CF                     C1FLTOBJ8T      equ	463	;# 
   630   0001D0                     C1MASK8         equ	464	;# 
   631   0001D0                     C1MASK8L        equ	464	;# 
   632   0001D1                     C1MASK8H        equ	465	;# 
   633   0001D2                     C1MASK8U        equ	466	;# 
   634   0001D3                     C1MASK8T        equ	467	;# 
   635   0001D4                     C1FLTOBJ9       equ	468	;# 
   636   0001D4                     C1FLTOBJ9L      equ	468	;# 
   637   0001D5                     C1FLTOBJ9H      equ	469	;# 
   638   0001D6                     C1FLTOBJ9U      equ	470	;# 
   639   0001D7                     C1FLTOBJ9T      equ	471	;# 
   640   0001D8                     C1MASK9         equ	472	;# 
   641   0001D8                     C1MASK9L        equ	472	;# 
   642   0001D9                     C1MASK9H        equ	473	;# 
   643   0001DA                     C1MASK9U        equ	474	;# 
   644   0001DB                     C1MASK9T        equ	475	;# 
   645   0001DC                     C1FLTOBJ10      equ	476	;# 
   646   0001DC                     C1FLTOBJ10L     equ	476	;# 
   647   0001DD                     C1FLTOBJ10H     equ	477	;# 
   648   0001DE                     C1FLTOBJ10U     equ	478	;# 
   649   0001DF                     C1FLTOBJ10T     equ	479	;# 
   650   0001E0                     C1MASK10        equ	480	;# 
   651   0001E0                     C1MASK10L       equ	480	;# 
   652   0001E1                     C1MASK10H       equ	481	;# 
   653   0001E2                     C1MASK10U       equ	482	;# 
   654   0001E3                     C1MASK10T       equ	483	;# 
   655   0001E4                     C1FLTOBJ11      equ	484	;# 
   656   0001E4                     C1FLTOBJ11L     equ	484	;# 
   657   0001E5                     C1FLTOBJ11H     equ	485	;# 
   658   0001E6                     C1FLTOBJ11U     equ	486	;# 
   659   0001E7                     C1FLTOBJ11T     equ	487	;# 
   660   0001E8                     C1MASK11        equ	488	;# 
   661   0001E8                     C1MASK11L       equ	488	;# 
   662   0001E9                     C1MASK11H       equ	489	;# 
   663   0001EA                     C1MASK11U       equ	490	;# 
   664   0001EB                     C1MASK11T       equ	491	;# 
   665   000200                     PPSLOCK         equ	512	;# 
   666   000201                     RA0PPS          equ	513	;# 
   667   000202                     RA1PPS          equ	514	;# 
   668   000203                     RA2PPS          equ	515	;# 
   669   000204                     RA3PPS          equ	516	;# 
   670   000205                     RA4PPS          equ	517	;# 
   671   000206                     RA5PPS          equ	518	;# 
   672   000207                     RA6PPS          equ	519	;# 
   673   000208                     RA7PPS          equ	520	;# 
   674   000209                     RB0PPS          equ	521	;# 
   675   00020A                     RB1PPS          equ	522	;# 
   676   00020B                     RB2PPS          equ	523	;# 
   677   00020C                     RB3PPS          equ	524	;# 
   678   00020D                     RB4PPS          equ	525	;# 
   679   00020E                     RB5PPS          equ	526	;# 
   680   00020F                     RB6PPS          equ	527	;# 
   681   000210                     RB7PPS          equ	528	;# 
   682   000211                     RC0PPS          equ	529	;# 
   683   000212                     RC1PPS          equ	530	;# 
   684   000213                     RC2PPS          equ	531	;# 
   685   000214                     RC3PPS          equ	532	;# 
   686   000215                     RC4PPS          equ	533	;# 
   687   000216                     RC5PPS          equ	534	;# 
   688   000217                     RC6PPS          equ	535	;# 
   689   000218                     RC7PPS          equ	536	;# 
   690   00023D                     CANRXPPS        equ	573	;# 
   691   00023E                     INT0PPS         equ	574	;# 
   692   00023F                     INT1PPS         equ	575	;# 
   693   000240                     INT2PPS         equ	576	;# 
   694   000241                     T0CKIPPS        equ	577	;# 
   695   000242                     T1CKIPPS        equ	578	;# 
   696   000243                     T1GPPS          equ	579	;# 
   697   000244                     T3CKIPPS        equ	580	;# 
   698   000245                     T3GPPS          equ	581	;# 
   699   000246                     T5CKIPPS        equ	582	;# 
   700   000247                     T5GPPS          equ	583	;# 
   701   000248                     T2INPPS         equ	584	;# 
   702   000249                     T4INPPS         equ	585	;# 
   703   00024A                     T6INPPS         equ	586	;# 
   704   00024B                     TUIN0PPS        equ	587	;# 
   705   00024C                     TUIN1PPS        equ	588	;# 
   706   00024F                     CCP1PPS         equ	591	;# 
   707   000250                     CCP2PPS         equ	592	;# 
   708   000251                     CCP3PPS         equ	593	;# 
   709   000253                     PWM1ERSPPS      equ	595	;# 
   710   000254                     PWM2ERSPPS      equ	596	;# 
   711   000255                     PWM3ERSPPS      equ	597	;# 
   712   000256                     PWM4ERSPPS      equ	598	;# 
   713   000257                     PWMIN0PPS       equ	599	;# 
   714   000258                     PWMIN1PPS       equ	600	;# 
   715   000259                     SMT1WINPPS      equ	601	;# 
   716   00025A                     SMT1SIGPPS      equ	602	;# 
   717   00025B                     CWG1PPS         equ	603	;# 
   718   00025B                     CWG1INPPS       equ	603	;# 
   719   00025C                     CWG2PPS         equ	604	;# 
   720   00025C                     CWG2INPPS       equ	604	;# 
   721   00025D                     CWG3PPS         equ	605	;# 
   722   00025D                     CWG3INPPS       equ	605	;# 
   723   00025E                     MD1CARLPPS      equ	606	;# 
   724   00025E                     MDCARLPPS       equ	606	;# 
   725   00025F                     MD1CARHPPS      equ	607	;# 
   726   00025F                     MDCARHPPS       equ	607	;# 
   727   000260                     MD1SRCPPS       equ	608	;# 
   728   000260                     MDSRCPPS        equ	608	;# 
   729   000261                     CLCIN0PPS       equ	609	;# 
   730   000262                     CLCIN1PPS       equ	610	;# 
   731   000263                     CLCIN2PPS       equ	611	;# 
   732   000264                     CLCIN3PPS       equ	612	;# 
   733   000265                     CLCIN4PPS       equ	613	;# 
   734   000266                     CLCIN5PPS       equ	614	;# 
   735   000267                     CLCIN6PPS       equ	615	;# 
   736   000268                     CLCIN7PPS       equ	616	;# 
   737   000269                     ADACTPPS        equ	617	;# 
   738   00026A                     SPI1SCKPPS      equ	618	;# 
   739   00026B                     SPI1SDIPPS      equ	619	;# 
   740   00026C                     SPI1SSPPS       equ	620	;# 
   741   00026D                     SPI2SCKPPS      equ	621	;# 
   742   00026E                     SPI2SDIPPS      equ	622	;# 
   743   00026F                     SPI2SSPPS       equ	623	;# 
   744   000270                     I2C1SDAPPS      equ	624	;# 
   745   000271                     I2C1SCLPPS      equ	625	;# 
   746   000272                     U1RXPPS         equ	626	;# 
   747   000273                     U1CTSPPS        equ	627	;# 
   748   000274                     U2RXPPS         equ	628	;# 
   749   000275                     U2CTSPPS        equ	629	;# 
   750   000276                     U3RXPPS         equ	630	;# 
   751   000277                     U3CTSPPS        equ	631	;# 
   752   000278                     U4RXPPS         equ	632	;# 
   753   000279                     U4CTSPPS        equ	633	;# 
   754   00027A                     U5RXPPS         equ	634	;# 
   755   00027B                     U5CTSPPS        equ	635	;# 
   756   000286                     RC4I2C          equ	646	;# 
   757   000287                     RC3I2C          equ	647	;# 
   758   000288                     RB2I2C          equ	648	;# 
   759   000289                     RB1I2C          equ	649	;# 
   760   00028A                     I2C1RXB         equ	650	;# 
   761   00028B                     I2C1TXB         equ	651	;# 
   762   00028C                     I2C1CNTL        equ	652	;# 
   763   00028D                     I2C1CNTH        equ	653	;# 
   764   00028E                     I2C1ADB0        equ	654	;# 
   765   00028F                     I2C1ADB1        equ	655	;# 
   766   000290                     I2C1ADR0        equ	656	;# 
   767   000291                     I2C1ADR1        equ	657	;# 
   768   000292                     I2C1ADR2        equ	658	;# 
   769   000293                     I2C1ADR3        equ	659	;# 
   770   000294                     I2C1CON0        equ	660	;# 
   771   000295                     I2C1CON1        equ	661	;# 
   772   000296                     I2C1CON2        equ	662	;# 
   773   000297                     I2C1ERR         equ	663	;# 
   774   000298                     I2C1STAT0       equ	664	;# 
   775   000299                     I2C1STAT1       equ	665	;# 
   776   00029A                     I2C1PIR         equ	666	;# 
   777   00029B                     I2C1PIE         equ	667	;# 
   778   00029C                     I2C1BTO         equ	668	;# 
   779   00029D                     I2C1BAUD        equ	669	;# 
   780   00029E                     I2C1CLK         equ	670	;# 
   781   00029F                     I2C1BTOC        equ	671	;# 
   782   0002A1                     U1RXB           equ	673	;# 
   783   0002A1                     U1RXBL          equ	673	;# 
   784   0002A2                     U1RXCHK         equ	674	;# 
   785   0002A3                     U1TXB           equ	675	;# 
   786   0002A3                     U1TXBL          equ	675	;# 
   787   0002A4                     U1TXCHK         equ	676	;# 
   788   0002A5                     U1P1            equ	677	;# 
   789   0002A5                     U1P1L           equ	677	;# 
   790   0002A6                     U1P1H           equ	678	;# 
   791   0002A7                     U1P2            equ	679	;# 
   792   0002A7                     U1P2L           equ	679	;# 
   793   0002A8                     U1P2H           equ	680	;# 
   794   0002A9                     U1P3            equ	681	;# 
   795   0002A9                     U1P3L           equ	681	;# 
   796   0002AA                     U1P3H           equ	682	;# 
   797   0002AB                     U1CON0          equ	683	;# 
   798   0002AC                     U1CON1          equ	684	;# 
   799   0002AD                     U1CON2          equ	685	;# 
   800   0002AE                     U1BRG           equ	686	;# 
   801   0002AE                     U1BRGL          equ	686	;# 
   802   0002AF                     U1BRGH          equ	687	;# 
   803   0002B0                     U1FIFO          equ	688	;# 
   804   0002B1                     U1UIR           equ	689	;# 
   805   0002B2                     U1ERRIR         equ	690	;# 
   806   0002B3                     U1ERRIE         equ	691	;# 
   807   0002B4                     U2RXB           equ	692	;# 
   808   0002B4                     U2RXBL          equ	692	;# 
   809   0002B5                     U2RXCHK         equ	693	;# 
   810   0002B6                     U2TXB           equ	694	;# 
   811   0002B6                     U2TXBL          equ	694	;# 
   812   0002B7                     U2TXCHK         equ	695	;# 
   813   0002B8                     U2P1            equ	696	;# 
   814   0002B8                     U2P1L           equ	696	;# 
   815   0002B9                     U2P1H           equ	697	;# 
   816   0002BA                     U2P2            equ	698	;# 
   817   0002BA                     U2P2L           equ	698	;# 
   818   0002BB                     U2P2H           equ	699	;# 
   819   0002BC                     U2P3            equ	700	;# 
   820   0002BC                     U2P3L           equ	700	;# 
   821   0002BD                     U2P3H           equ	701	;# 
   822   0002BE                     U2CON0          equ	702	;# 
   823   0002BF                     U2CON1          equ	703	;# 
   824   0002C0                     U2CON2          equ	704	;# 
   825   0002C1                     U2BRG           equ	705	;# 
   826   0002C1                     U2BRGL          equ	705	;# 
   827   0002C2                     U2BRGH          equ	706	;# 
   828   0002C3                     U2FIFO          equ	707	;# 
   829   0002C4                     U2UIR           equ	708	;# 
   830   0002C5                     U2ERRIR         equ	709	;# 
   831   0002C6                     U2ERRIE         equ	710	;# 
   832   0002C7                     U3RXB           equ	711	;# 
   833   0002C7                     U3RXBL          equ	711	;# 
   834   0002C9                     U3TXB           equ	713	;# 
   835   0002C9                     U3TXBL          equ	713	;# 
   836   0002CB                     U3P1            equ	715	;# 
   837   0002CB                     U3P1L           equ	715	;# 
   838   0002CD                     U3P2            equ	717	;# 
   839   0002CD                     U3P2L           equ	717	;# 
   840   0002CF                     U3P3            equ	719	;# 
   841   0002CF                     U3P3L           equ	719	;# 
   842   0002D1                     U3CON0          equ	721	;# 
   843   0002D2                     U3CON1          equ	722	;# 
   844   0002D3                     U3CON2          equ	723	;# 
   845   0002D4                     U3BRG           equ	724	;# 
   846   0002D4                     U3BRGL          equ	724	;# 
   847   0002D5                     U3BRGH          equ	725	;# 
   848   0002D6                     U3FIFO          equ	726	;# 
   849   0002D7                     U3UIR           equ	727	;# 
   850   0002D8                     U3ERRIR         equ	728	;# 
   851   0002D9                     U3ERRIE         equ	729	;# 
   852   0002DA                     U4RXB           equ	730	;# 
   853   0002DA                     U4RXBL          equ	730	;# 
   854   0002DC                     U4TXB           equ	732	;# 
   855   0002DC                     U4TXBL          equ	732	;# 
   856   0002DE                     U4P1            equ	734	;# 
   857   0002DE                     U4P1L           equ	734	;# 
   858   0002E0                     U4P2            equ	736	;# 
   859   0002E0                     U4P2L           equ	736	;# 
   860   0002E2                     U4P3            equ	738	;# 
   861   0002E2                     U4P3L           equ	738	;# 
   862   0002E4                     U4CON0          equ	740	;# 
   863   0002E5                     U4CON1          equ	741	;# 
   864   0002E6                     U4CON2          equ	742	;# 
   865   0002E7                     U4BRG           equ	743	;# 
   866   0002E7                     U4BRGL          equ	743	;# 
   867   0002E8                     U4BRGH          equ	744	;# 
   868   0002E9                     U4FIFO          equ	745	;# 
   869   0002EA                     U4UIR           equ	746	;# 
   870   0002EB                     U4ERRIR         equ	747	;# 
   871   0002EC                     U4ERRIE         equ	748	;# 
   872   0002ED                     U5RXB           equ	749	;# 
   873   0002ED                     U5RXBL          equ	749	;# 
   874   0002EF                     U5TXB           equ	751	;# 
   875   0002EF                     U5TXBL          equ	751	;# 
   876   0002F1                     U5P1            equ	753	;# 
   877   0002F1                     U5P1L           equ	753	;# 
   878   0002F3                     U5P2            equ	755	;# 
   879   0002F3                     U5P2L           equ	755	;# 
   880   0002F5                     U5P3            equ	757	;# 
   881   0002F5                     U5P3L           equ	757	;# 
   882   0002F7                     U5CON0          equ	759	;# 
   883   0002F8                     U5CON1          equ	760	;# 
   884   0002F9                     U5CON2          equ	761	;# 
   885   0002FA                     U5BRG           equ	762	;# 
   886   0002FA                     U5BRGL          equ	762	;# 
   887   0002FB                     U5BRGH          equ	763	;# 
   888   0002FC                     U5FIFO          equ	764	;# 
   889   0002FD                     U5UIR           equ	765	;# 
   890   0002FE                     U5ERRIR         equ	766	;# 
   891   0002FF                     U5ERRIE         equ	767	;# 
   892   000300                     SMT1TMR         equ	768	;# 
   893   000300                     SMT1TMRL        equ	768	;# 
   894   000301                     SMT1TMRH        equ	769	;# 
   895   000302                     SMT1TMRU        equ	770	;# 
   896   000303                     SMT1CPR         equ	771	;# 
   897   000303                     SMT1CPRL        equ	771	;# 
   898   000304                     SMT1CPRH        equ	772	;# 
   899   000305                     SMT1CPRU        equ	773	;# 
   900   000306                     SMT1CPW         equ	774	;# 
   901   000306                     SMT1CPWL        equ	774	;# 
   902   000307                     SMT1CPWH        equ	775	;# 
   903   000308                     SMT1CPWU        equ	776	;# 
   904   000309                     SMT1PR          equ	777	;# 
   905   000309                     SMT1PRL         equ	777	;# 
   906   00030A                     SMT1PRH         equ	778	;# 
   907   00030B                     SMT1PRU         equ	779	;# 
   908   00030C                     SMT1CON0        equ	780	;# 
   909   00030D                     SMT1CON1        equ	781	;# 
   910   00030E                     SMT1STAT        equ	782	;# 
   911   00030F                     SMT1CLK         equ	783	;# 
   912   000310                     SMT1SIG         equ	784	;# 
   913   000311                     SMT1WIN         equ	785	;# 
   914   000318                     TMR0L           equ	792	;# 
   915   000318                     TMR0            equ	792	;# 
   916   000319                     TMR0H           equ	793	;# 
   917   000319                     PR0             equ	793	;# 
   918   00031A                     T0CON0          equ	794	;# 
   919   00031B                     T0CON1          equ	795	;# 
   920   00031C                     TMR1            equ	796	;# 
   921   00031C                     TMR1L           equ	796	;# 
   922   00031D                     TMR1H           equ	797	;# 
   923   00031E                     T1CON           equ	798	;# 
   924   00031E                     TMR1CON         equ	798	;# 
   925   00031F                     T1GCON          equ	799	;# 
   926   00031F                     TMR1GCON        equ	799	;# 
   927   000320                     T1GATE          equ	800	;# 
   928   000320                     TMR1GATE        equ	800	;# 
   929   000321                     T1CLK           equ	801	;# 
   930   000321                     TMR1CLK         equ	801	;# 
   931   000321                     PR1             equ	801	;# 
   932   000322                     T2TMR           equ	802	;# 
   933   000322                     TMR2            equ	802	;# 
   934   000323                     T2PR            equ	803	;# 
   935   000323                     PR2             equ	803	;# 
   936   000324                     T2CON           equ	804	;# 
   937   000325                     T2HLT           equ	805	;# 
   938   000326                     T2CLKCON        equ	806	;# 
   939   000326                     T2CLK           equ	806	;# 
   940   000327                     T2RST           equ	807	;# 
   941   000328                     TMR3            equ	808	;# 
   942   000328                     TMR3L           equ	808	;# 
   943   000329                     TMR3H           equ	809	;# 
   944   00032A                     T3CON           equ	810	;# 
   945   00032A                     TMR3CON         equ	810	;# 
   946   00032B                     T3GCON          equ	811	;# 
   947   00032B                     TMR3GCON        equ	811	;# 
   948   00032C                     T3GATE          equ	812	;# 
   949   00032C                     TMR3GATE        equ	812	;# 
   950   00032D                     T3CLK           equ	813	;# 
   951   00032D                     TMR3CLK         equ	813	;# 
   952   00032D                     PR3             equ	813	;# 
   953   00032E                     T4TMR           equ	814	;# 
   954   00032E                     TMR4            equ	814	;# 
   955   00032F                     T4PR            equ	815	;# 
   956   00032F                     PR4             equ	815	;# 
   957   000330                     T4CON           equ	816	;# 
   958   000331                     T4HLT           equ	817	;# 
   959   000332                     T4CLKCON        equ	818	;# 
   960   000332                     T4CLK           equ	818	;# 
   961   000333                     T4RST           equ	819	;# 
   962   000334                     TMR5            equ	820	;# 
   963   000334                     TMR5L           equ	820	;# 
   964   000335                     TMR5H           equ	821	;# 
   965   000336                     T5CON           equ	822	;# 
   966   000336                     TMR5CON         equ	822	;# 
   967   000337                     T5GCON          equ	823	;# 
   968   000337                     TMR5GCON        equ	823	;# 
   969   000338                     T5GATE          equ	824	;# 
   970   000338                     TMR5GATE        equ	824	;# 
   971   000339                     T5CLK           equ	825	;# 
   972   000339                     TMR5CLK         equ	825	;# 
   973   000339                     PR5             equ	825	;# 
   974   00033A                     T6TMR           equ	826	;# 
   975   00033A                     TMR6            equ	826	;# 
   976   00033B                     T6PR            equ	827	;# 
   977   00033B                     PR6             equ	827	;# 
   978   00033C                     T6CON           equ	828	;# 
   979   00033D                     T6HLT           equ	829	;# 
   980   00033E                     T6CLKCON        equ	830	;# 
   981   00033E                     T6CLK           equ	830	;# 
   982   00033F                     T6RST           equ	831	;# 
   983   000340                     CCPR1           equ	832	;# 
   984   000340                     CCPR1L          equ	832	;# 
   985   000341                     CCPR1H          equ	833	;# 
   986   000342                     CCP1CON         equ	834	;# 
   987   000343                     CCP1CAP         equ	835	;# 
   988   000344                     CCPR2           equ	836	;# 
   989   000344                     CCPR2L          equ	836	;# 
   990   000345                     CCPR2H          equ	837	;# 
   991   000346                     CCP2CON         equ	838	;# 
   992   000347                     CCP2CAP         equ	839	;# 
   993   000348                     CCPR3           equ	840	;# 
   994   000348                     CCPR3L          equ	840	;# 
   995   000349                     CCPR3H          equ	841	;# 
   996   00034A                     CCP3CON         equ	842	;# 
   997   00034B                     CCP3CAP         equ	843	;# 
   998   00034C                     CCPTMRS0        equ	844	;# 
   999   00034F                     CRCDATA         equ	847	;# 
  1000   00034F                     CRCDATAL        equ	847	;# 
  1001   000350                     CRCDATAH        equ	848	;# 
  1002   000351                     CRCDATAU        equ	849	;# 
  1003   000352                     CRCDATAT        equ	850	;# 
  1004   000353                     CRCOUT          equ	851	;# 
  1005   000353                     CRCSHFT         equ	851	;# 
  1006   000353                     CRCXOR          equ	851	;# 
  1007   000353                     CRCOUTL         equ	851	;# 
  1008   000353                     CRCSHFTL        equ	851	;# 
  1009   000353                     CRCSHIFTL       equ	851	;# 
  1010   000353                     CRCXORL         equ	851	;# 
  1011   000354                     CRCOUTH         equ	852	;# 
  1012   000354                     CRCSHFTH        equ	852	;# 
  1013   000354                     CRCSHIFTH       equ	852	;# 
  1014   000354                     CRCXORH         equ	852	;# 
  1015   000355                     CRCOUTU         equ	853	;# 
  1016   000355                     CRCSHFTU        equ	853	;# 
  1017   000355                     CRCSHIFTU       equ	853	;# 
  1018   000355                     CRCXORU         equ	853	;# 
  1019   000356                     CRCOUTT         equ	854	;# 
  1020   000356                     CRCSHFTT        equ	854	;# 
  1021   000356                     CRCSHIFTT       equ	854	;# 
  1022   000356                     CRCXORT         equ	854	;# 
  1023   000357                     CRCCON0         equ	855	;# 
  1024   000358                     CRCCON1         equ	856	;# 
  1025   000359                     CRCCON2         equ	857	;# 
  1026   00035A                     SCANLADR        equ	858	;# 
  1027   00035A                     SCANLADRL       equ	858	;# 
  1028   00035B                     SCANLADRH       equ	859	;# 
  1029   00035C                     SCANLADRU       equ	860	;# 
  1030   00035D                     SCANHADR        equ	861	;# 
  1031   00035D                     SCANHADRL       equ	861	;# 
  1032   00035E                     SCANHADRH       equ	862	;# 
  1033   00035F                     SCANHADRU       equ	863	;# 
  1034   000360                     SCANCON0        equ	864	;# 
  1035   000361                     SCANTRIG        equ	865	;# 
  1036   000362                     IPR0            equ	866	;# 
  1037   000363                     IPR1            equ	867	;# 
  1038   000364                     IPR2            equ	868	;# 
  1039   000365                     IPR3            equ	869	;# 
  1040   000366                     IPR4            equ	870	;# 
  1041   000367                     IPR5            equ	871	;# 
  1042   000368                     IPR6            equ	872	;# 
  1043   000369                     IPR7            equ	873	;# 
  1044   00036A                     IPR8            equ	874	;# 
  1045   00036B                     IPR9            equ	875	;# 
  1046   00036C                     IPR10           equ	876	;# 
  1047   00036D                     IPR11           equ	877	;# 
  1048   00036E                     IPR12           equ	878	;# 
  1049   00036F                     IPR13           equ	879	;# 
  1050   000370                     IPR14           equ	880	;# 
  1051   000371                     IPR15           equ	881	;# 
  1052   000373                     STATUS_CSHAD    equ	883	;# 
  1053   000374                     WREG_CSHAD      equ	884	;# 
  1054   000375                     BSR_CSHAD       equ	885	;# 
  1055   000376                     SHADCON         equ	886	;# 
  1056   000377                     STATUS_SHAD     equ	887	;# 
  1057   000378                     WREG_SHAD       equ	888	;# 
  1058   000379                     BSR_SHAD        equ	889	;# 
  1059   00037A                     PCLATH_SHAD     equ	890	;# 
  1060   00037B                     PCLATU_SHAD     equ	891	;# 
  1061   00037C                     FSR0SH          equ	892	;# 
  1062   00037C                     FSR0L_SHAD      equ	892	;# 
  1063   00037D                     FSR0H_SHAD      equ	893	;# 
  1064   00037E                     FSR1SH          equ	894	;# 
  1065   00037E                     FSR1L_SHAD      equ	894	;# 
  1066   00037F                     FSR1H_SHAD      equ	895	;# 
  1067   000380                     FSR2SH          equ	896	;# 
  1068   000380                     FSR2L_SHAD      equ	896	;# 
  1069   000381                     FSR2H_SHAD      equ	897	;# 
  1070   000382                     PRODSH          equ	898	;# 
  1071   000382                     PRODL_SHAD      equ	898	;# 
  1072   000383                     PRODH_SHAD      equ	899	;# 
  1073   000387                     TU16ACON0       equ	903	;# 
  1074   000388                     TU16ACON1       equ	904	;# 
  1075   000389                     TU16AHLT        equ	905	;# 
  1076   00038A                     TU16APS         equ	906	;# 
  1077   00038B                     TU16ATMR        equ	907	;# 
  1078   00038B                     TU16ACR         equ	907	;# 
  1079   00038B                     TU16ATMRL       equ	907	;# 
  1080   00038B                     TU16ACRL        equ	907	;# 
  1081   00038C                     TU16ATMRH       equ	908	;# 
  1082   00038C                     TU16ACRH        equ	908	;# 
  1083   00038D                     TU16APR         equ	909	;# 
  1084   00038D                     TU16APRL        equ	909	;# 
  1085   00038E                     TU16APRH        equ	910	;# 
  1086   00038F                     TU16ACLK        equ	911	;# 
  1087   000390                     TU16AERS        equ	912	;# 
  1088   000393                     TU16BCON0       equ	915	;# 
  1089   000394                     TU16BCON1       equ	916	;# 
  1090   000395                     TU16BHLT        equ	917	;# 
  1091   000396                     TU16BPS         equ	918	;# 
  1092   000397                     TU16BTMR        equ	919	;# 
  1093   000397                     TU16BCR         equ	919	;# 
  1094   000397                     TU16BTMRL       equ	919	;# 
  1095   000397                     TU16BCRL        equ	919	;# 
  1096   000398                     TU16BTMRH       equ	920	;# 
  1097   000398                     TU16BCRH        equ	920	;# 
  1098   000399                     TU16BPR         equ	921	;# 
  1099   000399                     TU16BPRL        equ	921	;# 
  1100   00039A                     TU16BPRH        equ	922	;# 
  1101   00039B                     TU16BCLK        equ	923	;# 
  1102   00039C                     TU16BERS        equ	924	;# 
  1103   0003BB                     TUCHAIN         equ	955	;# 
  1104   0003BC                     CWG1CLK         equ	956	;# 
  1105   0003BC                     CWG1CLKCON      equ	956	;# 
  1106   0003BD                     CWG1ISM         equ	957	;# 
  1107   0003BE                     CWG1DBR         equ	958	;# 
  1108   0003BF                     CWG1DBF         equ	959	;# 
  1109   0003C0                     CWG1CON0        equ	960	;# 
  1110   0003C1                     CWG1CON1        equ	961	;# 
  1111   0003C2                     CWG1AS0         equ	962	;# 
  1112   0003C3                     CWG1AS1         equ	963	;# 
  1113   0003C4                     CWG1STR         equ	964	;# 
  1114   0003C5                     CWG2CLK         equ	965	;# 
  1115   0003C5                     CWG2CLKCON      equ	965	;# 
  1116   0003C6                     CWG2ISM         equ	966	;# 
  1117   0003C7                     CWG2DBR         equ	967	;# 
  1118   0003C8                     CWG2DBF         equ	968	;# 
  1119   0003C9                     CWG2CON0        equ	969	;# 
  1120   0003CA                     CWG2CON1        equ	970	;# 
  1121   0003CB                     CWG2AS0         equ	971	;# 
  1122   0003CC                     CWG2AS1         equ	972	;# 
  1123   0003CD                     CWG2STR         equ	973	;# 
  1124   0003CE                     CWG3CLK         equ	974	;# 
  1125   0003CE                     CWG3CLKCON      equ	974	;# 
  1126   0003CF                     CWG3ISM         equ	975	;# 
  1127   0003D0                     CWG3DBR         equ	976	;# 
  1128   0003D1                     CWG3DBF         equ	977	;# 
  1129   0003D2                     CWG3CON0        equ	978	;# 
  1130   0003D3                     CWG3CON1        equ	979	;# 
  1131   0003D4                     CWG3AS0         equ	980	;# 
  1132   0003D5                     CWG3AS1         equ	981	;# 
  1133   0003D6                     CWG3STR         equ	982	;# 
  1134   0003D7                     FVRCON          equ	983	;# 
  1135   0003D8                     ADCPCON         equ	984	;# 
  1136   0003D8                     ADCP            equ	984	;# 
  1137   0003D9                     ADLTH           equ	985	;# 
  1138   0003D9                     ADLTHL          equ	985	;# 
  1139   0003DA                     ADLTHH          equ	986	;# 
  1140   0003DB                     ADUTH           equ	987	;# 
  1141   0003DB                     ADUTHL          equ	987	;# 
  1142   0003DC                     ADUTHH          equ	988	;# 
  1143   0003DD                     ADERR           equ	989	;# 
  1144   0003DD                     ADERRL          equ	989	;# 
  1145   0003DE                     ADERRH          equ	990	;# 
  1146   0003DF                     ADSTPT          equ	991	;# 
  1147   0003DF                     ADSTPTL         equ	991	;# 
  1148   0003E0                     ADSTPTH         equ	992	;# 
  1149   0003E1                     ADFLTR          equ	993	;# 
  1150   0003E1                     ADFLTRL         equ	993	;# 
  1151   0003E2                     ADFLTRH         equ	994	;# 
  1152   0003E3                     ADACC           equ	995	;# 
  1153   0003E3                     ADACCL          equ	995	;# 
  1154   0003E4                     ADACCH          equ	996	;# 
  1155   0003E5                     ADACCU          equ	997	;# 
  1156   0003E6                     ADCNT           equ	998	;# 
  1157   0003E7                     ADRPT           equ	999	;# 
  1158   0003E8                     ADPREV          equ	1000	;# 
  1159   0003E8                     ADPREVL         equ	1000	;# 
  1160   0003E9                     ADPREVH         equ	1001	;# 
  1161   0003EA                     ADRES           equ	1002	;# 
  1162   0003EA                     ADRESL          equ	1002	;# 
  1163   0003EB                     ADRESH          equ	1003	;# 
  1164   0003EC                     ADPCH           equ	1004	;# 
  1165   0003EE                     ADACQ           equ	1006	;# 
  1166   0003EE                     ADACQL          equ	1006	;# 
  1167   0003EF                     ADACQH          equ	1007	;# 
  1168   0003F0                     ADCAP           equ	1008	;# 
  1169   0003F1                     ADPRE           equ	1009	;# 
  1170   0003F1                     ADPREL          equ	1009	;# 
  1171   0003F2                     ADPREH          equ	1010	;# 
  1172   0003F3                     ADCON0          equ	1011	;# 
  1173   0003F4                     ADCON1          equ	1012	;# 
  1174   0003F5                     ADCON2          equ	1013	;# 
  1175   0003F6                     ADCON3          equ	1014	;# 
  1176   0003F7                     ADSTAT          equ	1015	;# 
  1177   0003F8                     ADREF           equ	1016	;# 
  1178   0003F9                     ADACT           equ	1017	;# 
  1179   0003FA                     ADCLK           equ	1018	;# 
  1180   0003FB                     ADCTX           equ	1019	;# 
  1181   0003FC                     ADCSEL1         equ	1020	;# 
  1182   0003FD                     ADCSEL2         equ	1021	;# 
  1183   0003FE                     ADCSEL3         equ	1022	;# 
  1184   0003FF                     ADCSEL4         equ	1023	;# 
  1185   000400                     ANSELA          equ	1024	;# 
  1186   000401                     WPUA            equ	1025	;# 
  1187   000402                     ODCONA          equ	1026	;# 
  1188   000403                     SLRCONA         equ	1027	;# 
  1189   000404                     INLVLA          equ	1028	;# 
  1190   000405                     IOCAP           equ	1029	;# 
  1191   000406                     IOCAN           equ	1030	;# 
  1192   000407                     IOCAF           equ	1031	;# 
  1193   000408                     ANSELB          equ	1032	;# 
  1194   000409                     WPUB            equ	1033	;# 
  1195   00040A                     ODCONB          equ	1034	;# 
  1196   00040B                     SLRCONB         equ	1035	;# 
  1197   00040C                     INLVLB          equ	1036	;# 
  1198   00040D                     IOCBP           equ	1037	;# 
  1199   00040E                     IOCBN           equ	1038	;# 
  1200   00040F                     IOCBF           equ	1039	;# 
  1201   000410                     ANSELC          equ	1040	;# 
  1202   000411                     WPUC            equ	1041	;# 
  1203   000412                     ODCONC          equ	1042	;# 
  1204   000413                     SLRCONC         equ	1043	;# 
  1205   000414                     INLVLC          equ	1044	;# 
  1206   000415                     IOCCP           equ	1045	;# 
  1207   000416                     IOCCN           equ	1046	;# 
  1208   000417                     IOCCF           equ	1047	;# 
  1209   000421                     WPUE            equ	1057	;# 
  1210   000424                     INLVLE          equ	1060	;# 
  1211   000425                     IOCEP           equ	1061	;# 
  1212   000426                     IOCEN           equ	1062	;# 
  1213   000427                     IOCEF           equ	1063	;# 
  1214   000440                     NCO1ACC         equ	1088	;# 
  1215   000440                     NCO1ACCL        equ	1088	;# 
  1216   000441                     NCO1ACCH        equ	1089	;# 
  1217   000442                     NCO1ACCU        equ	1090	;# 
  1218   000443                     NCO1INC         equ	1091	;# 
  1219   000443                     NCO1INCL        equ	1091	;# 
  1220   000444                     NCO1INCH        equ	1092	;# 
  1221   000445                     NCO1INCU        equ	1093	;# 
  1222   000446                     NCO1CON         equ	1094	;# 
  1223   000447                     NCO1CLK         equ	1095	;# 
  1224   000448                     NCO2ACC         equ	1096	;# 
  1225   000448                     NCO2ACCL        equ	1096	;# 
  1226   000449                     NCO2ACCH        equ	1097	;# 
  1227   00044A                     NCO2ACCU        equ	1098	;# 
  1228   00044B                     NCO2INC         equ	1099	;# 
  1229   00044B                     NCO2INCL        equ	1099	;# 
  1230   00044C                     NCO2INCH        equ	1100	;# 
  1231   00044D                     NCO2INCU        equ	1101	;# 
  1232   00044E                     NCO2CON         equ	1102	;# 
  1233   00044F                     NCO2CLK         equ	1103	;# 
  1234   000450                     NCO3ACC         equ	1104	;# 
  1235   000450                     NCO3ACCL        equ	1104	;# 
  1236   000451                     NCO3ACCH        equ	1105	;# 
  1237   000452                     NCO3ACCU        equ	1106	;# 
  1238   000453                     NCO3INC         equ	1107	;# 
  1239   000453                     NCO3INCL        equ	1107	;# 
  1240   000454                     NCO3INCH        equ	1108	;# 
  1241   000455                     NCO3INCU        equ	1109	;# 
  1242   000456                     NCO3CON         equ	1110	;# 
  1243   000457                     NCO3CLK         equ	1111	;# 
  1244   000458                     FSCMCON         equ	1112	;# 
  1245   000459                     IVTLOCK         equ	1113	;# 
  1246   00045A                     IVTAD           equ	1114	;# 
  1247   00045A                     IVTADL          equ	1114	;# 
  1248   00045B                     IVTADH          equ	1115	;# 
  1249   00045C                     IVTADU          equ	1116	;# 
  1250   00045D                     IVTBASE         equ	1117	;# 
  1251   00045D                     IVTBASEL        equ	1117	;# 
  1252   00045E                     IVTBASEH        equ	1118	;# 
  1253   00045F                     IVTBASEU        equ	1119	;# 
  1254   000460                     PWM1ERS         equ	1120	;# 
  1255   000461                     PWM1CLK         equ	1121	;# 
  1256   000462                     PWM1LDS         equ	1122	;# 
  1257   000463                     PWM1PR          equ	1123	;# 
  1258   000463                     PWM1PRL         equ	1123	;# 
  1259   000464                     PWM1PRH         equ	1124	;# 
  1260   000465                     PWM1CPRE        equ	1125	;# 
  1261   000466                     PWM1PIPOS       equ	1126	;# 
  1262   000467                     PWM1GIR         equ	1127	;# 
  1263   000468                     PWM1GIE         equ	1128	;# 
  1264   000469                     PWM1CON         equ	1129	;# 
  1265   00046A                     PWM1S1CFG       equ	1130	;# 
  1266   00046B                     PWM1S1P1        equ	1131	;# 
  1267   00046B                     PWM1S1P1L       equ	1131	;# 
  1268   00046C                     PWM1S1P1H       equ	1132	;# 
  1269   00046D                     PWM1S1P2        equ	1133	;# 
  1270   00046D                     PWM1S1P2L       equ	1133	;# 
  1271   00046E                     PWM1S1P2H       equ	1134	;# 
  1272   00046F                     PWM2ERS         equ	1135	;# 
  1273   000470                     PWM2CLK         equ	1136	;# 
  1274   000471                     PWM2LDS         equ	1137	;# 
  1275   000472                     PWM2PR          equ	1138	;# 
  1276   000472                     PWM2PRL         equ	1138	;# 
  1277   000473                     PWM2PRH         equ	1139	;# 
  1278   000474                     PWM2CPRE        equ	1140	;# 
  1279   000475                     PWM2PIPOS       equ	1141	;# 
  1280   000476                     PWM2GIR         equ	1142	;# 
  1281   000477                     PWM2GIE         equ	1143	;# 
  1282   000478                     PWM2CON         equ	1144	;# 
  1283   000479                     PWM2S1CFG       equ	1145	;# 
  1284   00047A                     PWM2S1P1        equ	1146	;# 
  1285   00047A                     PWM2S1P1L       equ	1146	;# 
  1286   00047B                     PWM2S1P1H       equ	1147	;# 
  1287   00047C                     PWM2S1P2        equ	1148	;# 
  1288   00047C                     PWM2S1P2L       equ	1148	;# 
  1289   00047D                     PWM2S1P2H       equ	1149	;# 
  1290   00047E                     PWM3ERS         equ	1150	;# 
  1291   00047F                     PWM3CLK         equ	1151	;# 
  1292   000480                     PWM3LDS         equ	1152	;# 
  1293   000481                     PWM3PR          equ	1153	;# 
  1294   000481                     PWM3PRL         equ	1153	;# 
  1295   000482                     PWM3PRH         equ	1154	;# 
  1296   000483                     PWM3CPRE        equ	1155	;# 
  1297   000484                     PWM3PIPOS       equ	1156	;# 
  1298   000485                     PWM3GIR         equ	1157	;# 
  1299   000486                     PWM3GIE         equ	1158	;# 
  1300   000487                     PWM3CON         equ	1159	;# 
  1301   000488                     PWM3S1CFG       equ	1160	;# 
  1302   000489                     PWM3S1P1        equ	1161	;# 
  1303   000489                     PWM3S1P1L       equ	1161	;# 
  1304   00048A                     PWM3S1P1H       equ	1162	;# 
  1305   00048B                     PWM3S1P2        equ	1163	;# 
  1306   00048B                     PWM3S1P2L       equ	1163	;# 
  1307   00048C                     PWM3S1P2H       equ	1164	;# 
  1308   00048D                     PWM4ERS         equ	1165	;# 
  1309   00048E                     PWM4CLK         equ	1166	;# 
  1310   00048F                     PWM4LDS         equ	1167	;# 
  1311   000490                     PWM4PR          equ	1168	;# 
  1312   000490                     PWM4PRL         equ	1168	;# 
  1313   000491                     PWM4PRH         equ	1169	;# 
  1314   000492                     PWM4CPRE        equ	1170	;# 
  1315   000493                     PWM4PIPOS       equ	1171	;# 
  1316   000494                     PWM4GIR         equ	1172	;# 
  1317   000495                     PWM4GIE         equ	1173	;# 
  1318   000496                     PWM4CON         equ	1174	;# 
  1319   000497                     PWM4S1CFG       equ	1175	;# 
  1320   000498                     PWM4S1P1        equ	1176	;# 
  1321   000498                     PWM4S1P1L       equ	1176	;# 
  1322   000499                     PWM4S1P1H       equ	1177	;# 
  1323   00049A                     PWM4S1P2        equ	1178	;# 
  1324   00049A                     PWM4S1P2L       equ	1178	;# 
  1325   00049B                     PWM4S1P2H       equ	1179	;# 
  1326   00049C                     PWMLOAD         equ	1180	;# 
  1327   00049D                     PWMEN           equ	1181	;# 
  1328   00049E                     PIE0            equ	1182	;# 
  1329   00049F                     PIE1            equ	1183	;# 
  1330   0004A0                     PIE2            equ	1184	;# 
  1331   0004A1                     PIE3            equ	1185	;# 
  1332   0004A2                     PIE4            equ	1186	;# 
  1333   0004A3                     PIE5            equ	1187	;# 
  1334   0004A4                     PIE6            equ	1188	;# 
  1335   0004A5                     PIE7            equ	1189	;# 
  1336   0004A6                     PIE8            equ	1190	;# 
  1337   0004A7                     PIE9            equ	1191	;# 
  1338   0004A8                     PIE10           equ	1192	;# 
  1339   0004A9                     PIE11           equ	1193	;# 
  1340   0004AA                     PIE12           equ	1194	;# 
  1341   0004AB                     PIE13           equ	1195	;# 
  1342   0004AC                     PIE14           equ	1196	;# 
  1343   0004AD                     PIE15           equ	1197	;# 
  1344   0004AE                     PIR0            equ	1198	;# 
  1345   0004AF                     PIR1            equ	1199	;# 
  1346   0004B0                     PIR2            equ	1200	;# 
  1347   0004B1                     PIR3            equ	1201	;# 
  1348   0004B2                     PIR4            equ	1202	;# 
  1349   0004B3                     PIR5            equ	1203	;# 
  1350   0004B4                     PIR6            equ	1204	;# 
  1351   0004B5                     PIR7            equ	1205	;# 
  1352   0004B6                     PIR8            equ	1206	;# 
  1353   0004B7                     PIR9            equ	1207	;# 
  1354   0004B8                     PIR10           equ	1208	;# 
  1355   0004B9                     PIR11           equ	1209	;# 
  1356   0004BA                     PIR12           equ	1210	;# 
  1357   0004BB                     PIR13           equ	1211	;# 
  1358   0004BC                     PIR14           equ	1212	;# 
  1359   0004BD                     PIR15           equ	1213	;# 
  1360   0004BE                     LATA            equ	1214	;# 
  1361   0004BF                     LATB            equ	1215	;# 
  1362   0004C0                     LATC            equ	1216	;# 
  1363   0004C6                     TRISA           equ	1222	;# 
  1364   0004C7                     TRISB           equ	1223	;# 
  1365   0004C8                     TRISC           equ	1224	;# 
  1366   0004CA                     TRISE           equ	1226	;# 
  1367   0004CE                     PORTA           equ	1230	;# 
  1368   0004CF                     PORTB           equ	1231	;# 
  1369   0004D0                     PORTC           equ	1232	;# 
  1370   0004D2                     PORTE           equ	1234	;# 
  1371   0004D6                     INTCON0         equ	1238	;# 
  1372   0004D7                     INTCON1         equ	1239	;# 
  1373   0004D8                     STATUS          equ	1240	;# 
  1374   0004D9                     FSR2            equ	1241	;# 
  1375   0004D9                     FSR2L           equ	1241	;# 
  1376   0004DA                     FSR2H           equ	1242	;# 
  1377   0004DB                     PLUSW2          equ	1243	;# 
  1378   0004DC                     PREINC2         equ	1244	;# 
  1379   0004DD                     POSTDEC2        equ	1245	;# 
  1380   0004DE                     POSTINC2        equ	1246	;# 
  1381   0004DF                     INDF2           equ	1247	;# 
  1382   0004E0                     BSR             equ	1248	;# 
  1383   0004E1                     FSR1            equ	1249	;# 
  1384   0004E1                     FSR1L           equ	1249	;# 
  1385   0004E2                     FSR1H           equ	1250	;# 
  1386   0004E3                     PLUSW1          equ	1251	;# 
  1387   0004E4                     PREINC1         equ	1252	;# 
  1388   0004E5                     POSTDEC1        equ	1253	;# 
  1389   0004E6                     POSTINC1        equ	1254	;# 
  1390   0004E7                     INDF1           equ	1255	;# 
  1391   0004E8                     WREG            equ	1256	;# 
  1392   0004E9                     FSR0            equ	1257	;# 
  1393   0004E9                     FSR0L           equ	1257	;# 
  1394   0004EA                     FSR0H           equ	1258	;# 
  1395   0004EB                     PLUSW0          equ	1259	;# 
  1396   0004EC                     PREINC0         equ	1260	;# 
  1397   0004ED                     POSTDEC0        equ	1261	;# 
  1398   0004EE                     POSTINC0        equ	1262	;# 
  1399   0004EF                     INDF0           equ	1263	;# 
  1400   0004F0                     PCON0           equ	1264	;# 
  1401   0004F1                     PCON1           equ	1265	;# 
  1402   0004F2                     CPUDOZE         equ	1266	;# 
  1403   0004F3                     PROD            equ	1267	;# 
  1404   0004F3                     PRODL           equ	1267	;# 
  1405   0004F4                     PRODH           equ	1268	;# 
  1406   0004F5                     TABLAT          equ	1269	;# 
  1407   0004F6                     TBLPTR          equ	1270	;# 
  1408   0004F6                     TBLPTRL         equ	1270	;# 
  1409   0004F7                     TBLPTRH         equ	1271	;# 
  1410   0004F8                     TBLPTRU         equ	1272	;# 
  1411   0004F9                     PCLAT           equ	1273	;# 
  1412   0004F9                     PCL             equ	1273	;# 
  1413   0004FA                     PCLATH          equ	1274	;# 
  1414   0004FB                     PCLATU          equ	1275	;# 
  1415   0004FC                     STKPTR          equ	1276	;# 
  1416   0004FD                     TOS             equ	1277	;# 
  1417   0004FD                     TOSL            equ	1277	;# 
  1418   0004FE                     TOSH            equ	1278	;# 
  1419   0004FF                     TOSU            equ	1279	;# 
  1420   000038                     BOOTREG         equ	56	;# 
  1421   000039                     CLKRCON         equ	57	;# 
  1422   00003A                     CLKRCLK         equ	58	;# 
  1423   000040                     NVMCON0         equ	64	;# 
  1424   000041                     NVMCON1         equ	65	;# 
  1425   000042                     NVMLOCK         equ	66	;# 
  1426   000043                     NVMADR          equ	67	;# 
  1427   000043                     NVMADRL         equ	67	;# 
  1428   000044                     NVMADRH         equ	68	;# 
  1429   000045                     NVMADRU         equ	69	;# 
  1430   000046                     NVMDAT          equ	70	;# 
  1431   000046                     NVMDATL         equ	70	;# 
  1432   000047                     NVMDATH         equ	71	;# 
  1433   000048                     VREGCON         equ	72	;# 
  1434   000049                     BORCON          equ	73	;# 
  1435   00004A                     HLVDCON0        equ	74	;# 
  1436   00004B                     HLVDCON1        equ	75	;# 
  1437   00004C                     ZCDCON          equ	76	;# 
  1438   000060                     PMD0            equ	96	;# 
  1439   000061                     PMD1            equ	97	;# 
  1440   000062                     PMD2            equ	98	;# 
  1441   000063                     PMD3            equ	99	;# 
  1442   000064                     PMD4            equ	100	;# 
  1443   000065                     PMD5            equ	101	;# 
  1444   000066                     PMD6            equ	102	;# 
  1445   000067                     PMD7            equ	103	;# 
  1446   000068                     PMD8            equ	104	;# 
  1447   00006A                     MD1CON0         equ	106	;# 
  1448   00006B                     MD1CON1         equ	107	;# 
  1449   00006C                     MD1SRC          equ	108	;# 
  1450   00006D                     MD1CARL         equ	109	;# 
  1451   00006E                     MD1CARH         equ	110	;# 
  1452   00006F                     CMOUT           equ	111	;# 
  1453   000070                     CM1CON0         equ	112	;# 
  1454   000071                     CM1CON1         equ	113	;# 
  1455   000072                     CM1NCH          equ	114	;# 
  1456   000073                     CM1PCH          equ	115	;# 
  1457   000074                     CM2CON0         equ	116	;# 
  1458   000075                     CM2CON1         equ	117	;# 
  1459   000076                     CM2NCH          equ	118	;# 
  1460   000077                     CM2PCH          equ	119	;# 
  1461   000078                     WDTCON0         equ	120	;# 
  1462   000079                     WDTCON1         equ	121	;# 
  1463   00007A                     WDTPSL          equ	122	;# 
  1464   00007B                     WDTPSH          equ	123	;# 
  1465   00007C                     WDTTMR          equ	124	;# 
  1466   00007D                     DAC1DAT         equ	125	;# 
  1467   00007D                     DAC1DATL        equ	125	;# 
  1468   00007F                     DAC1CON         equ	127	;# 
  1469   000080                     SPI1RXB         equ	128	;# 
  1470   000081                     SPI1TXB         equ	129	;# 
  1471   000082                     SPI1TCNT        equ	130	;# 
  1472   000082                     SPI1TCNTL       equ	130	;# 
  1473   000083                     SPI1TCNTH       equ	131	;# 
  1474   000084                     SPI1CON0        equ	132	;# 
  1475   000085                     SPI1CON1        equ	133	;# 
  1476   000086                     SPI1CON2        equ	134	;# 
  1477   000087                     SPI1STATUS      equ	135	;# 
  1478   000088                     SPI1TWIDTH      equ	136	;# 
  1479   000089                     SPI1BAUD        equ	137	;# 
  1480   00008A                     SPI1INTF        equ	138	;# 
  1481   00008B                     SPI1INTE        equ	139	;# 
  1482   00008C                     SPI1CLK         equ	140	;# 
  1483   00008D                     SPI2RXB         equ	141	;# 
  1484   00008E                     SPI2TXB         equ	142	;# 
  1485   00008F                     SPI2TCNT        equ	143	;# 
  1486   00008F                     SPI2TCNTL       equ	143	;# 
  1487   000090                     SPI2TCNTH       equ	144	;# 
  1488   000091                     SPI2CON0        equ	145	;# 
  1489   000092                     SPI2CON1        equ	146	;# 
  1490   000093                     SPI2CON2        equ	147	;# 
  1491   000094                     SPI2STATUS      equ	148	;# 
  1492   000095                     SPI2TWIDTH      equ	149	;# 
  1493   000096                     SPI2BAUD        equ	150	;# 
  1494   000097                     SPI2INTF        equ	151	;# 
  1495   000098                     SPI2INTE        equ	152	;# 
  1496   000099                     SPI2CLK         equ	153	;# 
  1497   0000AC                     ACTCON          equ	172	;# 
  1498   0000AD                     OSCCON1         equ	173	;# 
  1499   0000AE                     OSCCON2         equ	174	;# 
  1500   0000AF                     OSCCON3         equ	175	;# 
  1501   0000B0                     OSCTUNE         equ	176	;# 
  1502   0000B1                     OSCFRQ          equ	177	;# 
  1503   0000B1                     OSCFREQ         equ	177	;# 
  1504   0000B2                     OSCSTAT         equ	178	;# 
  1505   0000B2                     OSCSTAT1        equ	178	;# 
  1506   0000B3                     OSCEN           equ	179	;# 
  1507   0000B4                     PRLOCK          equ	180	;# 
  1508   0000B5                     SCANPR          equ	181	;# 
  1509   0000B6                     DMA1PR          equ	182	;# 
  1510   0000B7                     DMA2PR          equ	183	;# 
  1511   0000B8                     DMA3PR          equ	184	;# 
  1512   0000B9                     DMA4PR          equ	185	;# 
  1513   0000BA                     DMA5PR          equ	186	;# 
  1514   0000BB                     DMA6PR          equ	187	;# 
  1515   0000BC                     DMA7PR          equ	188	;# 
  1516   0000BD                     DMA8PR          equ	189	;# 
  1517   0000BE                     MAINPR          equ	190	;# 
  1518   0000BF                     ISRPR           equ	191	;# 
  1519   0000D4                     CLCDATA         equ	212	;# 
  1520   0000D5                     CLCSELECT       equ	213	;# 
  1521   0000D6                     CLCnCON         equ	214	;# 
  1522   0000D7                     CLCnPOL         equ	215	;# 
  1523   0000D8                     CLCnSEL0        equ	216	;# 
  1524   0000D9                     CLCnSEL1        equ	217	;# 
  1525   0000DA                     CLCnSEL2        equ	218	;# 
  1526   0000DB                     CLCnSEL3        equ	219	;# 
  1527   0000DC                     CLCnGLS0        equ	220	;# 
  1528   0000DD                     CLCnGLS1        equ	221	;# 
  1529   0000DE                     CLCnGLS2        equ	222	;# 
  1530   0000DF                     CLCnGLS3        equ	223	;# 
  1531   0000E8                     DMASELECT       equ	232	;# 
  1532   0000E9                     DMAnBUF         equ	233	;# 
  1533   0000EA                     DMAnDCNT        equ	234	;# 
  1534   0000EA                     DMAnDCNTL       equ	234	;# 
  1535   0000EB                     DMAnDCNTH       equ	235	;# 
  1536   0000EC                     DMAnDPTR        equ	236	;# 
  1537   0000EC                     DMAnDPTRL       equ	236	;# 
  1538   0000ED                     DMAnDPTRH       equ	237	;# 
  1539   0000EE                     DMAnDSZ         equ	238	;# 
  1540   0000EE                     DMAnDSZL        equ	238	;# 
  1541   0000EF                     DMAnDSZH        equ	239	;# 
  1542   0000F0                     DMAnDSA         equ	240	;# 
  1543   0000F0                     DMAnDSAL        equ	240	;# 
  1544   0000F1                     DMAnDSAH        equ	241	;# 
  1545   0000F2                     DMAnSCNT        equ	242	;# 
  1546   0000F2                     DMAnSCNTL       equ	242	;# 
  1547   0000F3                     DMAnSCNTH       equ	243	;# 
  1548   0000F4                     DMAnSPTR        equ	244	;# 
  1549   0000F4                     DMAnSPTRL       equ	244	;# 
  1550   0000F5                     DMAnSPTRH       equ	245	;# 
  1551   0000F6                     DMAnSPTRU       equ	246	;# 
  1552   0000F7                     DMAnSSZ         equ	247	;# 
  1553   0000F7                     DMAnSSZL        equ	247	;# 
  1554   0000F8                     DMAnSSZH        equ	248	;# 
  1555   0000F9                     DMAnSSA         equ	249	;# 
  1556   0000F9                     DMAnSSAL        equ	249	;# 
  1557   0000FA                     DMAnSSAH        equ	250	;# 
  1558   0000FB                     DMAnSSAU        equ	251	;# 
  1559   0000FC                     DMAnCON0        equ	252	;# 
  1560   0000FD                     DMAnCON1        equ	253	;# 
  1561   0000FE                     DMAnAIRQ        equ	254	;# 
  1562   0000FF                     DMAnSIRQ        equ	255	;# 
  1563   000100                     C1CONL          equ	256	;# 
  1564   000101                     C1CONH          equ	257	;# 
  1565   000102                     C1CONU          equ	258	;# 
  1566   000103                     C1CONT          equ	259	;# 
  1567   000104                     C1NBTCFGL       equ	260	;# 
  1568   000105                     C1NBTCFGH       equ	261	;# 
  1569   000106                     C1NBTCFGU       equ	262	;# 
  1570   000107                     C1NBTCFGT       equ	263	;# 
  1571   000108                     C1DBTCFGL       equ	264	;# 
  1572   000109                     C1DBTCFGH       equ	265	;# 
  1573   00010A                     C1DBTCFGU       equ	266	;# 
  1574   00010B                     C1DBTCFGT       equ	267	;# 
  1575   00010C                     C1TDCL          equ	268	;# 
  1576   00010D                     C1TDCH          equ	269	;# 
  1577   00010E                     C1TDCU          equ	270	;# 
  1578   000110                     C1TBC           equ	272	;# 
  1579   000110                     C1TBCL          equ	272	;# 
  1580   000111                     C1TBCH          equ	273	;# 
  1581   000112                     C1TBCU          equ	274	;# 
  1582   000113                     C1TBCT          equ	275	;# 
  1583   000114                     C1TSCONL        equ	276	;# 
  1584   000115                     C1TSCONH        equ	277	;# 
  1585   000116                     C1TSCONU        equ	278	;# 
  1586   000117                     C1TSCONT        equ	279	;# 
  1587   000118                     C1VECL          equ	280	;# 
  1588   000119                     C1VECH          equ	281	;# 
  1589   00011A                     C1VECU          equ	282	;# 
  1590   00011B                     C1VECT          equ	283	;# 
  1591   00011C                     C1INTL          equ	284	;# 
  1592   00011D                     C1INTH          equ	285	;# 
  1593   00011E                     C1INTU          equ	286	;# 
  1594   00011F                     C1INTT          equ	287	;# 
  1595   000120                     C1RXIF          equ	288	;# 
  1596   000120                     C1RXIFL         equ	288	;# 
  1597   000121                     C1RXIFH         equ	289	;# 
  1598   000122                     C1RXIFU         equ	290	;# 
  1599   000123                     C1RXIFT         equ	291	;# 
  1600   000124                     C1TXIF          equ	292	;# 
  1601   000124                     C1TXIFL         equ	292	;# 
  1602   000125                     C1TXIFH         equ	293	;# 
  1603   000126                     C1TXIFU         equ	294	;# 
  1604   000127                     C1TXIFT         equ	295	;# 
  1605   000128                     C1RXOVIF        equ	296	;# 
  1606   000128                     C1RXOVIFL       equ	296	;# 
  1607   000129                     C1RXOVIFH       equ	297	;# 
  1608   00012A                     C1RXOVIFU       equ	298	;# 
  1609   00012B                     C1RXOVIFT       equ	299	;# 
  1610   00012C                     C1TXATIF        equ	300	;# 
  1611   00012C                     C1TXATIFL       equ	300	;# 
  1612   00012D                     C1TXATIFH       equ	301	;# 
  1613   00012E                     C1TXATIFU       equ	302	;# 
  1614   00012F                     C1TXATIFT       equ	303	;# 
  1615   000130                     C1TXREQ         equ	304	;# 
  1616   000130                     C1TXREQL        equ	304	;# 
  1617   000131                     C1TXREQH        equ	305	;# 
  1618   000132                     C1TXREQU        equ	306	;# 
  1619   000133                     C1TXREQT        equ	307	;# 
  1620   000134                     C1TRECL         equ	308	;# 
  1621   000135                     C1TRECH         equ	309	;# 
  1622   000136                     C1TRECU         equ	310	;# 
  1623   000137                     C1TRECT         equ	311	;# 
  1624   000138                     C1BDIAG0L       equ	312	;# 
  1625   000139                     C1BDIAG0H       equ	313	;# 
  1626   00013C                     C1BDIAG1L       equ	316	;# 
  1627   00013D                     C1BDIAG1H       equ	317	;# 
  1628   00013E                     C1BDIAG1U       equ	318	;# 
  1629   00013F                     C1BDIAG1T       equ	319	;# 
  1630   000140                     C1TEFCONL       equ	320	;# 
  1631   000141                     C1TEFCONH       equ	321	;# 
  1632   000142                     C1TEFCONU       equ	322	;# 
  1633   000143                     C1TEFCONT       equ	323	;# 
  1634   000144                     C1TEFSTAL       equ	324	;# 
  1635   000145                     C1TEFSTAH       equ	325	;# 
  1636   000146                     C1TEFSTAU       equ	326	;# 
  1637   000147                     C1TEFSTAT       equ	327	;# 
  1638   000148                     C1TEFUA         equ	328	;# 
  1639   000148                     C1TEFUAL        equ	328	;# 
  1640   000149                     C1TEFUAH        equ	329	;# 
  1641   00014A                     C1TEFUAU        equ	330	;# 
  1642   00014B                     C1TEFUAT        equ	331	;# 
  1643   00014C                     C1FIFOBA        equ	332	;# 
  1644   00014C                     C1FIFOBAL       equ	332	;# 
  1645   00014D                     C1FIFOBAH       equ	333	;# 
  1646   00014E                     C1FIFOBAU       equ	334	;# 
  1647   00014F                     C1FIFOBAT       equ	335	;# 
  1648   000150                     C1TXQCONL       equ	336	;# 
  1649   000151                     C1TXQCONH       equ	337	;# 
  1650   000152                     C1TXQCONU       equ	338	;# 
  1651   000153                     C1TXQCONT       equ	339	;# 
  1652   000154                     C1TXQSTAL       equ	340	;# 
  1653   000155                     C1TXQSTAH       equ	341	;# 
  1654   000156                     C1TXQSTAU       equ	342	;# 
  1655   000157                     C1TXQSTAT       equ	343	;# 
  1656   000158                     C1TXQUA         equ	344	;# 
  1657   000158                     C1TXQUAL        equ	344	;# 
  1658   000159                     C1TXQUAH        equ	345	;# 
  1659   00015A                     C1TXQUAU        equ	346	;# 
  1660   00015B                     C1TXQUAT        equ	347	;# 
  1661   00015C                     C1FIFOCON1      equ	348	;# 
  1662   00015C                     C1FIFOCON1L     equ	348	;# 
  1663   00015D                     C1FIFOCON1H     equ	349	;# 
  1664   00015E                     C1FIFOCON1U     equ	350	;# 
  1665   00015F                     C1FIFOCON1T     equ	351	;# 
  1666   000160                     C1FIFOSTA1      equ	352	;# 
  1667   000160                     C1FIFOSTA1L     equ	352	;# 
  1668   000161                     C1FIFOSTA1H     equ	353	;# 
  1669   000162                     C1FIFOSTA1U     equ	354	;# 
  1670   000163                     C1FIFOSTA1T     equ	355	;# 
  1671   000164                     C1FIFOUA1       equ	356	;# 
  1672   000164                     C1FIFOUA1L      equ	356	;# 
  1673   000165                     C1FIFOUA1H      equ	357	;# 
  1674   000166                     C1FIFOUA1U      equ	358	;# 
  1675   000167                     C1FIFOUA1T      equ	359	;# 
  1676   000168                     C1FIFOCON2      equ	360	;# 
  1677   000168                     C1FIFOCON2L     equ	360	;# 
  1678   000169                     C1FIFOCON2H     equ	361	;# 
  1679   00016A                     C1FIFOCON2U     equ	362	;# 
  1680   00016B                     C1FIFOCON2T     equ	363	;# 
  1681   00016C                     C1FIFOSTA2      equ	364	;# 
  1682   00016C                     C1FIFOSTA2L     equ	364	;# 
  1683   00016D                     C1FIFOSTA2H     equ	365	;# 
  1684   00016E                     C1FIFOSTA2U     equ	366	;# 
  1685   00016F                     C1FIFOSTA2T     equ	367	;# 
  1686   000170                     C1FIFOUA2       equ	368	;# 
  1687   000170                     C1FIFOUA2L      equ	368	;# 
  1688   000171                     C1FIFOUA2H      equ	369	;# 
  1689   000172                     C1FIFOUA2U      equ	370	;# 
  1690   000173                     C1FIFOUA2T      equ	371	;# 
  1691   000174                     C1FIFOCON3      equ	372	;# 
  1692   000174                     C1FIFOCON3L     equ	372	;# 
  1693   000175                     C1FIFOCON3H     equ	373	;# 
  1694   000176                     C1FIFOCON3U     equ	374	;# 
  1695   000177                     C1FIFOCON3T     equ	375	;# 
  1696   000178                     C1FIFOSTA3      equ	376	;# 
  1697   000178                     C1FIFOSTA3L     equ	376	;# 
  1698   000179                     C1FIFOSTA3H     equ	377	;# 
  1699   00017A                     C1FIFOSTA3U     equ	378	;# 
  1700   00017B                     C1FIFOSTA3T     equ	379	;# 
  1701   00017C                     C1FIFOUA3       equ	380	;# 
  1702   00017C                     C1FIFOUA3L      equ	380	;# 
  1703   00017D                     C1FIFOUA3H      equ	381	;# 
  1704   00017E                     C1FIFOUA3U      equ	382	;# 
  1705   00017F                     C1FIFOUA3T      equ	383	;# 
  1706   000180                     C1FLTCON0L      equ	384	;# 
  1707   000181                     C1FLTCON0H      equ	385	;# 
  1708   000182                     C1FLTCON0U      equ	386	;# 
  1709   000183                     C1FLTCON0T      equ	387	;# 
  1710   000184                     C1FLTCON1L      equ	388	;# 
  1711   000185                     C1FLTCON1H      equ	389	;# 
  1712   000186                     C1FLTCON1U      equ	390	;# 
  1713   000187                     C1FLTCON1T      equ	391	;# 
  1714   000188                     C1FLTCON2L      equ	392	;# 
  1715   000189                     C1FLTCON2H      equ	393	;# 
  1716   00018A                     C1FLTCON2U      equ	394	;# 
  1717   00018B                     C1FLTCON2T      equ	395	;# 
  1718   00018C                     C1FLTOBJ0       equ	396	;# 
  1719   00018C                     C1FLTOBJ0L      equ	396	;# 
  1720   00018D                     C1FLTOBJ0H      equ	397	;# 
  1721   00018E                     C1FLTOBJ0U      equ	398	;# 
  1722   00018F                     C1FLTOBJ0T      equ	399	;# 
  1723   000190                     C1MASK0         equ	400	;# 
  1724   000190                     C1MASK0L        equ	400	;# 
  1725   000191                     C1MASK0H        equ	401	;# 
  1726   000192                     C1MASK0U        equ	402	;# 
  1727   000193                     C1MASK0T        equ	403	;# 
  1728   000194                     C1FLTOBJ1       equ	404	;# 
  1729   000194                     C1FLTOBJ1L      equ	404	;# 
  1730   000195                     C1FLTOBJ1H      equ	405	;# 
  1731   000196                     C1FLTOBJ1U      equ	406	;# 
  1732   000197                     C1FLTOBJ1T      equ	407	;# 
  1733   000198                     C1MASK1         equ	408	;# 
  1734   000198                     C1MASK1L        equ	408	;# 
  1735   000199                     C1MASK1H        equ	409	;# 
  1736   00019A                     C1MASK1U        equ	410	;# 
  1737   00019B                     C1MASK1T        equ	411	;# 
  1738   00019C                     C1FLTOBJ2       equ	412	;# 
  1739   00019C                     C1FLTOBJ2L      equ	412	;# 
  1740   00019D                     C1FLTOBJ2H      equ	413	;# 
  1741   00019E                     C1FLTOBJ2U      equ	414	;# 
  1742   00019F                     C1FLTOBJ2T      equ	415	;# 
  1743   0001A0                     C1MASK2         equ	416	;# 
  1744   0001A0                     C1MASK2L        equ	416	;# 
  1745   0001A1                     C1MASK2H        equ	417	;# 
  1746   0001A2                     C1MASK2U        equ	418	;# 
  1747   0001A3                     C1MASK2T        equ	419	;# 
  1748   0001A4                     C1FLTOBJ3       equ	420	;# 
  1749   0001A4                     C1FLTOBJ3L      equ	420	;# 
  1750   0001A5                     C1FLTOBJ3H      equ	421	;# 
  1751   0001A6                     C1FLTOBJ3U      equ	422	;# 
  1752   0001A7                     C1FLTOBJ3T      equ	423	;# 
  1753   0001A8                     C1MASK3         equ	424	;# 
  1754   0001A8                     C1MASK3L        equ	424	;# 
  1755   0001A9                     C1MASK3H        equ	425	;# 
  1756   0001AA                     C1MASK3U        equ	426	;# 
  1757   0001AB                     C1MASK3T        equ	427	;# 
  1758   0001AC                     C1FLTOBJ4       equ	428	;# 
  1759   0001AC                     C1FLTOBJ4L      equ	428	;# 
  1760   0001AD                     C1FLTOBJ4H      equ	429	;# 
  1761   0001AE                     C1FLTOBJ4U      equ	430	;# 
  1762   0001AF                     C1FLTOBJ4T      equ	431	;# 
  1763   0001B0                     C1MASK4         equ	432	;# 
  1764   0001B0                     C1MASK4L        equ	432	;# 
  1765   0001B1                     C1MASK4H        equ	433	;# 
  1766   0001B2                     C1MASK4U        equ	434	;# 
  1767   0001B3                     C1MASK4T        equ	435	;# 
  1768   0001B4                     C1FLTOBJ5       equ	436	;# 
  1769   0001B4                     C1FLTOBJ5L      equ	436	;# 
  1770   0001B5                     C1FLTOBJ5H      equ	437	;# 
  1771   0001B6                     C1FLTOBJ5U      equ	438	;# 
  1772   0001B7                     C1FLTOBJ5T      equ	439	;# 
  1773   0001B8                     C1MASK5         equ	440	;# 
  1774   0001B8                     C1MASK5L        equ	440	;# 
  1775   0001B9                     C1MASK5H        equ	441	;# 
  1776   0001BA                     C1MASK5U        equ	442	;# 
  1777   0001BB                     C1MASK5T        equ	443	;# 
  1778   0001BC                     C1FLTOBJ6       equ	444	;# 
  1779   0001BC                     C1FLTOBJ6L      equ	444	;# 
  1780   0001BD                     C1FLTOBJ6H      equ	445	;# 
  1781   0001BE                     C1FLTOBJ6U      equ	446	;# 
  1782   0001BF                     C1FLTOBJ6T      equ	447	;# 
  1783   0001C0                     C1MASK6         equ	448	;# 
  1784   0001C0                     C1MASK6L        equ	448	;# 
  1785   0001C1                     C1MASK6H        equ	449	;# 
  1786   0001C2                     C1MASK6U        equ	450	;# 
  1787   0001C3                     C1MASK6T        equ	451	;# 
  1788   0001C4                     C1FLTOBJ7       equ	452	;# 
  1789   0001C4                     C1FLTOBJ7L      equ	452	;# 
  1790   0001C5                     C1FLTOBJ7H      equ	453	;# 
  1791   0001C6                     C1FLTOBJ7U      equ	454	;# 
  1792   0001C7                     C1FLTOBJ7T      equ	455	;# 
  1793   0001C8                     C1MASK7         equ	456	;# 
  1794   0001C8                     C1MASK7L        equ	456	;# 
  1795   0001C9                     C1MASK7H        equ	457	;# 
  1796   0001CA                     C1MASK7U        equ	458	;# 
  1797   0001CB                     C1MASK7T        equ	459	;# 
  1798   0001CC                     C1FLTOBJ8       equ	460	;# 
  1799   0001CC                     C1FLTOBJ8L      equ	460	;# 
  1800   0001CD                     C1FLTOBJ8H      equ	461	;# 
  1801   0001CE                     C1FLTOBJ8U      equ	462	;# 
  1802   0001CF                     C1FLTOBJ8T      equ	463	;# 
  1803   0001D0                     C1MASK8         equ	464	;# 
  1804   0001D0                     C1MASK8L        equ	464	;# 
  1805   0001D1                     C1MASK8H        equ	465	;# 
  1806   0001D2                     C1MASK8U        equ	466	;# 
  1807   0001D3                     C1MASK8T        equ	467	;# 
  1808   0001D4                     C1FLTOBJ9       equ	468	;# 
  1809   0001D4                     C1FLTOBJ9L      equ	468	;# 
  1810   0001D5                     C1FLTOBJ9H      equ	469	;# 
  1811   0001D6                     C1FLTOBJ9U      equ	470	;# 
  1812   0001D7                     C1FLTOBJ9T      equ	471	;# 
  1813   0001D8                     C1MASK9         equ	472	;# 
  1814   0001D8                     C1MASK9L        equ	472	;# 
  1815   0001D9                     C1MASK9H        equ	473	;# 
  1816   0001DA                     C1MASK9U        equ	474	;# 
  1817   0001DB                     C1MASK9T        equ	475	;# 
  1818   0001DC                     C1FLTOBJ10      equ	476	;# 
  1819   0001DC                     C1FLTOBJ10L     equ	476	;# 
  1820   0001DD                     C1FLTOBJ10H     equ	477	;# 
  1821   0001DE                     C1FLTOBJ10U     equ	478	;# 
  1822   0001DF                     C1FLTOBJ10T     equ	479	;# 
  1823   0001E0                     C1MASK10        equ	480	;# 
  1824   0001E0                     C1MASK10L       equ	480	;# 
  1825   0001E1                     C1MASK10H       equ	481	;# 
  1826   0001E2                     C1MASK10U       equ	482	;# 
  1827   0001E3                     C1MASK10T       equ	483	;# 
  1828   0001E4                     C1FLTOBJ11      equ	484	;# 
  1829   0001E4                     C1FLTOBJ11L     equ	484	;# 
  1830   0001E5                     C1FLTOBJ11H     equ	485	;# 
  1831   0001E6                     C1FLTOBJ11U     equ	486	;# 
  1832   0001E7                     C1FLTOBJ11T     equ	487	;# 
  1833   0001E8                     C1MASK11        equ	488	;# 
  1834   0001E8                     C1MASK11L       equ	488	;# 
  1835   0001E9                     C1MASK11H       equ	489	;# 
  1836   0001EA                     C1MASK11U       equ	490	;# 
  1837   0001EB                     C1MASK11T       equ	491	;# 
  1838   000200                     PPSLOCK         equ	512	;# 
  1839   000201                     RA0PPS          equ	513	;# 
  1840   000202                     RA1PPS          equ	514	;# 
  1841   000203                     RA2PPS          equ	515	;# 
  1842   000204                     RA3PPS          equ	516	;# 
  1843   000205                     RA4PPS          equ	517	;# 
  1844   000206                     RA5PPS          equ	518	;# 
  1845   000207                     RA6PPS          equ	519	;# 
  1846   000208                     RA7PPS          equ	520	;# 
  1847   000209                     RB0PPS          equ	521	;# 
  1848   00020A                     RB1PPS          equ	522	;# 
  1849   00020B                     RB2PPS          equ	523	;# 
  1850   00020C                     RB3PPS          equ	524	;# 
  1851   00020D                     RB4PPS          equ	525	;# 
  1852   00020E                     RB5PPS          equ	526	;# 
  1853   00020F                     RB6PPS          equ	527	;# 
  1854   000210                     RB7PPS          equ	528	;# 
  1855   000211                     RC0PPS          equ	529	;# 
  1856   000212                     RC1PPS          equ	530	;# 
  1857   000213                     RC2PPS          equ	531	;# 
  1858   000214                     RC3PPS          equ	532	;# 
  1859   000215                     RC4PPS          equ	533	;# 
  1860   000216                     RC5PPS          equ	534	;# 
  1861   000217                     RC6PPS          equ	535	;# 
  1862   000218                     RC7PPS          equ	536	;# 
  1863   00023D                     CANRXPPS        equ	573	;# 
  1864   00023E                     INT0PPS         equ	574	;# 
  1865   00023F                     INT1PPS         equ	575	;# 
  1866   000240                     INT2PPS         equ	576	;# 
  1867   000241                     T0CKIPPS        equ	577	;# 
  1868   000242                     T1CKIPPS        equ	578	;# 
  1869   000243                     T1GPPS          equ	579	;# 
  1870   000244                     T3CKIPPS        equ	580	;# 
  1871   000245                     T3GPPS          equ	581	;# 
  1872   000246                     T5CKIPPS        equ	582	;# 
  1873   000247                     T5GPPS          equ	583	;# 
  1874   000248                     T2INPPS         equ	584	;# 
  1875   000249                     T4INPPS         equ	585	;# 
  1876   00024A                     T6INPPS         equ	586	;# 
  1877   00024B                     TUIN0PPS        equ	587	;# 
  1878   00024C                     TUIN1PPS        equ	588	;# 
  1879   00024F                     CCP1PPS         equ	591	;# 
  1880   000250                     CCP2PPS         equ	592	;# 
  1881   000251                     CCP3PPS         equ	593	;# 
  1882   000253                     PWM1ERSPPS      equ	595	;# 
  1883   000254                     PWM2ERSPPS      equ	596	;# 
  1884   000255                     PWM3ERSPPS      equ	597	;# 
  1885   000256                     PWM4ERSPPS      equ	598	;# 
  1886   000257                     PWMIN0PPS       equ	599	;# 
  1887   000258                     PWMIN1PPS       equ	600	;# 
  1888   000259                     SMT1WINPPS      equ	601	;# 
  1889   00025A                     SMT1SIGPPS      equ	602	;# 
  1890   00025B                     CWG1PPS         equ	603	;# 
  1891   00025B                     CWG1INPPS       equ	603	;# 
  1892   00025C                     CWG2PPS         equ	604	;# 
  1893   00025C                     CWG2INPPS       equ	604	;# 
  1894   00025D                     CWG3PPS         equ	605	;# 
  1895   00025D                     CWG3INPPS       equ	605	;# 
  1896   00025E                     MD1CARLPPS      equ	606	;# 
  1897   00025E                     MDCARLPPS       equ	606	;# 
  1898   00025F                     MD1CARHPPS      equ	607	;# 
  1899   00025F                     MDCARHPPS       equ	607	;# 
  1900   000260                     MD1SRCPPS       equ	608	;# 
  1901   000260                     MDSRCPPS        equ	608	;# 
  1902   000261                     CLCIN0PPS       equ	609	;# 
  1903   000262                     CLCIN1PPS       equ	610	;# 
  1904   000263                     CLCIN2PPS       equ	611	;# 
  1905   000264                     CLCIN3PPS       equ	612	;# 
  1906   000265                     CLCIN4PPS       equ	613	;# 
  1907   000266                     CLCIN5PPS       equ	614	;# 
  1908   000267                     CLCIN6PPS       equ	615	;# 
  1909   000268                     CLCIN7PPS       equ	616	;# 
  1910   000269                     ADACTPPS        equ	617	;# 
  1911   00026A                     SPI1SCKPPS      equ	618	;# 
  1912   00026B                     SPI1SDIPPS      equ	619	;# 
  1913   00026C                     SPI1SSPPS       equ	620	;# 
  1914   00026D                     SPI2SCKPPS      equ	621	;# 
  1915   00026E                     SPI2SDIPPS      equ	622	;# 
  1916   00026F                     SPI2SSPPS       equ	623	;# 
  1917   000270                     I2C1SDAPPS      equ	624	;# 
  1918   000271                     I2C1SCLPPS      equ	625	;# 
  1919   000272                     U1RXPPS         equ	626	;# 
  1920   000273                     U1CTSPPS        equ	627	;# 
  1921   000274                     U2RXPPS         equ	628	;# 
  1922   000275                     U2CTSPPS        equ	629	;# 
  1923   000276                     U3RXPPS         equ	630	;# 
  1924   000277                     U3CTSPPS        equ	631	;# 
  1925   000278                     U4RXPPS         equ	632	;# 
  1926   000279                     U4CTSPPS        equ	633	;# 
  1927   00027A                     U5RXPPS         equ	634	;# 
  1928   00027B                     U5CTSPPS        equ	635	;# 
  1929   000286                     RC4I2C          equ	646	;# 
  1930   000287                     RC3I2C          equ	647	;# 
  1931   000288                     RB2I2C          equ	648	;# 
  1932   000289                     RB1I2C          equ	649	;# 
  1933   00028A                     I2C1RXB         equ	650	;# 
  1934   00028B                     I2C1TXB         equ	651	;# 
  1935   00028C                     I2C1CNTL        equ	652	;# 
  1936   00028D                     I2C1CNTH        equ	653	;# 
  1937   00028E                     I2C1ADB0        equ	654	;# 
  1938   00028F                     I2C1ADB1        equ	655	;# 
  1939   000290                     I2C1ADR0        equ	656	;# 
  1940   000291                     I2C1ADR1        equ	657	;# 
  1941   000292                     I2C1ADR2        equ	658	;# 
  1942   000293                     I2C1ADR3        equ	659	;# 
  1943   000294                     I2C1CON0        equ	660	;# 
  1944   000295                     I2C1CON1        equ	661	;# 
  1945   000296                     I2C1CON2        equ	662	;# 
  1946   000297                     I2C1ERR         equ	663	;# 
  1947   000298                     I2C1STAT0       equ	664	;# 
  1948   000299                     I2C1STAT1       equ	665	;# 
  1949   00029A                     I2C1PIR         equ	666	;# 
  1950   00029B                     I2C1PIE         equ	667	;# 
  1951   00029C                     I2C1BTO         equ	668	;# 
  1952   00029D                     I2C1BAUD        equ	669	;# 
  1953   00029E                     I2C1CLK         equ	670	;# 
  1954   00029F                     I2C1BTOC        equ	671	;# 
  1955   0002A1                     U1RXB           equ	673	;# 
  1956   0002A1                     U1RXBL          equ	673	;# 
  1957   0002A2                     U1RXCHK         equ	674	;# 
  1958   0002A3                     U1TXB           equ	675	;# 
  1959   0002A3                     U1TXBL          equ	675	;# 
  1960   0002A4                     U1TXCHK         equ	676	;# 
  1961   0002A5                     U1P1            equ	677	;# 
  1962   0002A5                     U1P1L           equ	677	;# 
  1963   0002A6                     U1P1H           equ	678	;# 
  1964   0002A7                     U1P2            equ	679	;# 
  1965   0002A7                     U1P2L           equ	679	;# 
  1966   0002A8                     U1P2H           equ	680	;# 
  1967   0002A9                     U1P3            equ	681	;# 
  1968   0002A9                     U1P3L           equ	681	;# 
  1969   0002AA                     U1P3H           equ	682	;# 
  1970   0002AB                     U1CON0          equ	683	;# 
  1971   0002AC                     U1CON1          equ	684	;# 
  1972   0002AD                     U1CON2          equ	685	;# 
  1973   0002AE                     U1BRG           equ	686	;# 
  1974   0002AE                     U1BRGL          equ	686	;# 
  1975   0002AF                     U1BRGH          equ	687	;# 
  1976   0002B0                     U1FIFO          equ	688	;# 
  1977   0002B1                     U1UIR           equ	689	;# 
  1978   0002B2                     U1ERRIR         equ	690	;# 
  1979   0002B3                     U1ERRIE         equ	691	;# 
  1980   0002B4                     U2RXB           equ	692	;# 
  1981   0002B4                     U2RXBL          equ	692	;# 
  1982   0002B5                     U2RXCHK         equ	693	;# 
  1983   0002B6                     U2TXB           equ	694	;# 
  1984   0002B6                     U2TXBL          equ	694	;# 
  1985   0002B7                     U2TXCHK         equ	695	;# 
  1986   0002B8                     U2P1            equ	696	;# 
  1987   0002B8                     U2P1L           equ	696	;# 
  1988   0002B9                     U2P1H           equ	697	;# 
  1989   0002BA                     U2P2            equ	698	;# 
  1990   0002BA                     U2P2L           equ	698	;# 
  1991   0002BB                     U2P2H           equ	699	;# 
  1992   0002BC                     U2P3            equ	700	;# 
  1993   0002BC                     U2P3L           equ	700	;# 
  1994   0002BD                     U2P3H           equ	701	;# 
  1995   0002BE                     U2CON0          equ	702	;# 
  1996   0002BF                     U2CON1          equ	703	;# 
  1997   0002C0                     U2CON2          equ	704	;# 
  1998   0002C1                     U2BRG           equ	705	;# 
  1999   0002C1                     U2BRGL          equ	705	;# 
  2000   0002C2                     U2BRGH          equ	706	;# 
  2001   0002C3                     U2FIFO          equ	707	;# 
  2002   0002C4                     U2UIR           equ	708	;# 
  2003   0002C5                     U2ERRIR         equ	709	;# 
  2004   0002C6                     U2ERRIE         equ	710	;# 
  2005   0002C7                     U3RXB           equ	711	;# 
  2006   0002C7                     U3RXBL          equ	711	;# 
  2007   0002C9                     U3TXB           equ	713	;# 
  2008   0002C9                     U3TXBL          equ	713	;# 
  2009   0002CB                     U3P1            equ	715	;# 
  2010   0002CB                     U3P1L           equ	715	;# 
  2011   0002CD                     U3P2            equ	717	;# 
  2012   0002CD                     U3P2L           equ	717	;# 
  2013   0002CF                     U3P3            equ	719	;# 
  2014   0002CF                     U3P3L           equ	719	;# 
  2015   0002D1                     U3CON0          equ	721	;# 
  2016   0002D2                     U3CON1          equ	722	;# 
  2017   0002D3                     U3CON2          equ	723	;# 
  2018   0002D4                     U3BRG           equ	724	;# 
  2019   0002D4                     U3BRGL          equ	724	;# 
  2020   0002D5                     U3BRGH          equ	725	;# 
  2021   0002D6                     U3FIFO          equ	726	;# 
  2022   0002D7                     U3UIR           equ	727	;# 
  2023   0002D8                     U3ERRIR         equ	728	;# 
  2024   0002D9                     U3ERRIE         equ	729	;# 
  2025   0002DA                     U4RXB           equ	730	;# 
  2026   0002DA                     U4RXBL          equ	730	;# 
  2027   0002DC                     U4TXB           equ	732	;# 
  2028   0002DC                     U4TXBL          equ	732	;# 
  2029   0002DE                     U4P1            equ	734	;# 
  2030   0002DE                     U4P1L           equ	734	;# 
  2031   0002E0                     U4P2            equ	736	;# 
  2032   0002E0                     U4P2L           equ	736	;# 
  2033   0002E2                     U4P3            equ	738	;# 
  2034   0002E2                     U4P3L           equ	738	;# 
  2035   0002E4                     U4CON0          equ	740	;# 
  2036   0002E5                     U4CON1          equ	741	;# 
  2037   0002E6                     U4CON2          equ	742	;# 
  2038   0002E7                     U4BRG           equ	743	;# 
  2039   0002E7                     U4BRGL          equ	743	;# 
  2040   0002E8                     U4BRGH          equ	744	;# 
  2041   0002E9                     U4FIFO          equ	745	;# 
  2042   0002EA                     U4UIR           equ	746	;# 
  2043   0002EB                     U4ERRIR         equ	747	;# 
  2044   0002EC                     U4ERRIE         equ	748	;# 
  2045   0002ED                     U5RXB           equ	749	;# 
  2046   0002ED                     U5RXBL          equ	749	;# 
  2047   0002EF                     U5TXB           equ	751	;# 
  2048   0002EF                     U5TXBL          equ	751	;# 
  2049   0002F1                     U5P1            equ	753	;# 
  2050   0002F1                     U5P1L           equ	753	;# 
  2051   0002F3                     U5P2            equ	755	;# 
  2052   0002F3                     U5P2L           equ	755	;# 
  2053   0002F5                     U5P3            equ	757	;# 
  2054   0002F5                     U5P3L           equ	757	;# 
  2055   0002F7                     U5CON0          equ	759	;# 
  2056   0002F8                     U5CON1          equ	760	;# 
  2057   0002F9                     U5CON2          equ	761	;# 
  2058   0002FA                     U5BRG           equ	762	;# 
  2059   0002FA                     U5BRGL          equ	762	;# 
  2060   0002FB                     U5BRGH          equ	763	;# 
  2061   0002FC                     U5FIFO          equ	764	;# 
  2062   0002FD                     U5UIR           equ	765	;# 
  2063   0002FE                     U5ERRIR         equ	766	;# 
  2064   0002FF                     U5ERRIE         equ	767	;# 
  2065   000300                     SMT1TMR         equ	768	;# 
  2066   000300                     SMT1TMRL        equ	768	;# 
  2067   000301                     SMT1TMRH        equ	769	;# 
  2068   000302                     SMT1TMRU        equ	770	;# 
  2069   000303                     SMT1CPR         equ	771	;# 
  2070   000303                     SMT1CPRL        equ	771	;# 
  2071   000304                     SMT1CPRH        equ	772	;# 
  2072   000305                     SMT1CPRU        equ	773	;# 
  2073   000306                     SMT1CPW         equ	774	;# 
  2074   000306                     SMT1CPWL        equ	774	;# 
  2075   000307                     SMT1CPWH        equ	775	;# 
  2076   000308                     SMT1CPWU        equ	776	;# 
  2077   000309                     SMT1PR          equ	777	;# 
  2078   000309                     SMT1PRL         equ	777	;# 
  2079   00030A                     SMT1PRH         equ	778	;# 
  2080   00030B                     SMT1PRU         equ	779	;# 
  2081   00030C                     SMT1CON0        equ	780	;# 
  2082   00030D                     SMT1CON1        equ	781	;# 
  2083   00030E                     SMT1STAT        equ	782	;# 
  2084   00030F                     SMT1CLK         equ	783	;# 
  2085   000310                     SMT1SIG         equ	784	;# 
  2086   000311                     SMT1WIN         equ	785	;# 
  2087   000318                     TMR0L           equ	792	;# 
  2088   000318                     TMR0            equ	792	;# 
  2089   000319                     TMR0H           equ	793	;# 
  2090   000319                     PR0             equ	793	;# 
  2091   00031A                     T0CON0          equ	794	;# 
  2092   00031B                     T0CON1          equ	795	;# 
  2093   00031C                     TMR1            equ	796	;# 
  2094   00031C                     TMR1L           equ	796	;# 
  2095   00031D                     TMR1H           equ	797	;# 
  2096   00031E                     T1CON           equ	798	;# 
  2097   00031E                     TMR1CON         equ	798	;# 
  2098   00031F                     T1GCON          equ	799	;# 
  2099   00031F                     TMR1GCON        equ	799	;# 
  2100   000320                     T1GATE          equ	800	;# 
  2101   000320                     TMR1GATE        equ	800	;# 
  2102   000321                     T1CLK           equ	801	;# 
  2103   000321                     TMR1CLK         equ	801	;# 
  2104   000321                     PR1             equ	801	;# 
  2105   000322                     T2TMR           equ	802	;# 
  2106   000322                     TMR2            equ	802	;# 
  2107   000323                     T2PR            equ	803	;# 
  2108   000323                     PR2             equ	803	;# 
  2109   000324                     T2CON           equ	804	;# 
  2110   000325                     T2HLT           equ	805	;# 
  2111   000326                     T2CLKCON        equ	806	;# 
  2112   000326                     T2CLK           equ	806	;# 
  2113   000327                     T2RST           equ	807	;# 
  2114   000328                     TMR3            equ	808	;# 
  2115   000328                     TMR3L           equ	808	;# 
  2116   000329                     TMR3H           equ	809	;# 
  2117   00032A                     T3CON           equ	810	;# 
  2118   00032A                     TMR3CON         equ	810	;# 
  2119   00032B                     T3GCON          equ	811	;# 
  2120   00032B                     TMR3GCON        equ	811	;# 
  2121   00032C                     T3GATE          equ	812	;# 
  2122   00032C                     TMR3GATE        equ	812	;# 
  2123   00032D                     T3CLK           equ	813	;# 
  2124   00032D                     TMR3CLK         equ	813	;# 
  2125   00032D                     PR3             equ	813	;# 
  2126   00032E                     T4TMR           equ	814	;# 
  2127   00032E                     TMR4            equ	814	;# 
  2128   00032F                     T4PR            equ	815	;# 
  2129   00032F                     PR4             equ	815	;# 
  2130   000330                     T4CON           equ	816	;# 
  2131   000331                     T4HLT           equ	817	;# 
  2132   000332                     T4CLKCON        equ	818	;# 
  2133   000332                     T4CLK           equ	818	;# 
  2134   000333                     T4RST           equ	819	;# 
  2135   000334                     TMR5            equ	820	;# 
  2136   000334                     TMR5L           equ	820	;# 
  2137   000335                     TMR5H           equ	821	;# 
  2138   000336                     T5CON           equ	822	;# 
  2139   000336                     TMR5CON         equ	822	;# 
  2140   000337                     T5GCON          equ	823	;# 
  2141   000337                     TMR5GCON        equ	823	;# 
  2142   000338                     T5GATE          equ	824	;# 
  2143   000338                     TMR5GATE        equ	824	;# 
  2144   000339                     T5CLK           equ	825	;# 
  2145   000339                     TMR5CLK         equ	825	;# 
  2146   000339                     PR5             equ	825	;# 
  2147   00033A                     T6TMR           equ	826	;# 
  2148   00033A                     TMR6            equ	826	;# 
  2149   00033B                     T6PR            equ	827	;# 
  2150   00033B                     PR6             equ	827	;# 
  2151   00033C                     T6CON           equ	828	;# 
  2152   00033D                     T6HLT           equ	829	;# 
  2153   00033E                     T6CLKCON        equ	830	;# 
  2154   00033E                     T6CLK           equ	830	;# 
  2155   00033F                     T6RST           equ	831	;# 
  2156   000340                     CCPR1           equ	832	;# 
  2157   000340                     CCPR1L          equ	832	;# 
  2158   000341                     CCPR1H          equ	833	;# 
  2159   000342                     CCP1CON         equ	834	;# 
  2160   000343                     CCP1CAP         equ	835	;# 
  2161   000344                     CCPR2           equ	836	;# 
  2162   000344                     CCPR2L          equ	836	;# 
  2163   000345                     CCPR2H          equ	837	;# 
  2164   000346                     CCP2CON         equ	838	;# 
  2165   000347                     CCP2CAP         equ	839	;# 
  2166   000348                     CCPR3           equ	840	;# 
  2167   000348                     CCPR3L          equ	840	;# 
  2168   000349                     CCPR3H          equ	841	;# 
  2169   00034A                     CCP3CON         equ	842	;# 
  2170   00034B                     CCP3CAP         equ	843	;# 
  2171   00034C                     CCPTMRS0        equ	844	;# 
  2172   00034F                     CRCDATA         equ	847	;# 
  2173   00034F                     CRCDATAL        equ	847	;# 
  2174   000350                     CRCDATAH        equ	848	;# 
  2175   000351                     CRCDATAU        equ	849	;# 
  2176   000352                     CRCDATAT        equ	850	;# 
  2177   000353                     CRCOUT          equ	851	;# 
  2178   000353                     CRCSHFT         equ	851	;# 
  2179   000353                     CRCXOR          equ	851	;# 
  2180   000353                     CRCOUTL         equ	851	;# 
  2181   000353                     CRCSHFTL        equ	851	;# 
  2182   000353                     CRCSHIFTL       equ	851	;# 
  2183   000353                     CRCXORL         equ	851	;# 
  2184   000354                     CRCOUTH         equ	852	;# 
  2185   000354                     CRCSHFTH        equ	852	;# 
  2186   000354                     CRCSHIFTH       equ	852	;# 
  2187   000354                     CRCXORH         equ	852	;# 
  2188   000355                     CRCOUTU         equ	853	;# 
  2189   000355                     CRCSHFTU        equ	853	;# 
  2190   000355                     CRCSHIFTU       equ	853	;# 
  2191   000355                     CRCXORU         equ	853	;# 
  2192   000356                     CRCOUTT         equ	854	;# 
  2193   000356                     CRCSHFTT        equ	854	;# 
  2194   000356                     CRCSHIFTT       equ	854	;# 
  2195   000356                     CRCXORT         equ	854	;# 
  2196   000357                     CRCCON0         equ	855	;# 
  2197   000358                     CRCCON1         equ	856	;# 
  2198   000359                     CRCCON2         equ	857	;# 
  2199   00035A                     SCANLADR        equ	858	;# 
  2200   00035A                     SCANLADRL       equ	858	;# 
  2201   00035B                     SCANLADRH       equ	859	;# 
  2202   00035C                     SCANLADRU       equ	860	;# 
  2203   00035D                     SCANHADR        equ	861	;# 
  2204   00035D                     SCANHADRL       equ	861	;# 
  2205   00035E                     SCANHADRH       equ	862	;# 
  2206   00035F                     SCANHADRU       equ	863	;# 
  2207   000360                     SCANCON0        equ	864	;# 
  2208   000361                     SCANTRIG        equ	865	;# 
  2209   000362                     IPR0            equ	866	;# 
  2210   000363                     IPR1            equ	867	;# 
  2211   000364                     IPR2            equ	868	;# 
  2212   000365                     IPR3            equ	869	;# 
  2213   000366                     IPR4            equ	870	;# 
  2214   000367                     IPR5            equ	871	;# 
  2215   000368                     IPR6            equ	872	;# 
  2216   000369                     IPR7            equ	873	;# 
  2217   00036A                     IPR8            equ	874	;# 
  2218   00036B                     IPR9            equ	875	;# 
  2219   00036C                     IPR10           equ	876	;# 
  2220   00036D                     IPR11           equ	877	;# 
  2221   00036E                     IPR12           equ	878	;# 
  2222   00036F                     IPR13           equ	879	;# 
  2223   000370                     IPR14           equ	880	;# 
  2224   000371                     IPR15           equ	881	;# 
  2225   000373                     STATUS_CSHAD    equ	883	;# 
  2226   000374                     WREG_CSHAD      equ	884	;# 
  2227   000375                     BSR_CSHAD       equ	885	;# 
  2228   000376                     SHADCON         equ	886	;# 
  2229   000377                     STATUS_SHAD     equ	887	;# 
  2230   000378                     WREG_SHAD       equ	888	;# 
  2231   000379                     BSR_SHAD        equ	889	;# 
  2232   00037A                     PCLATH_SHAD     equ	890	;# 
  2233   00037B                     PCLATU_SHAD     equ	891	;# 
  2234   00037C                     FSR0SH          equ	892	;# 
  2235   00037C                     FSR0L_SHAD      equ	892	;# 
  2236   00037D                     FSR0H_SHAD      equ	893	;# 
  2237   00037E                     FSR1SH          equ	894	;# 
  2238   00037E                     FSR1L_SHAD      equ	894	;# 
  2239   00037F                     FSR1H_SHAD      equ	895	;# 
  2240   000380                     FSR2SH          equ	896	;# 
  2241   000380                     FSR2L_SHAD      equ	896	;# 
  2242   000381                     FSR2H_SHAD      equ	897	;# 
  2243   000382                     PRODSH          equ	898	;# 
  2244   000382                     PRODL_SHAD      equ	898	;# 
  2245   000383                     PRODH_SHAD      equ	899	;# 
  2246   000387                     TU16ACON0       equ	903	;# 
  2247   000388                     TU16ACON1       equ	904	;# 
  2248   000389                     TU16AHLT        equ	905	;# 
  2249   00038A                     TU16APS         equ	906	;# 
  2250   00038B                     TU16ATMR        equ	907	;# 
  2251   00038B                     TU16ACR         equ	907	;# 
  2252   00038B                     TU16ATMRL       equ	907	;# 
  2253   00038B                     TU16ACRL        equ	907	;# 
  2254   00038C                     TU16ATMRH       equ	908	;# 
  2255   00038C                     TU16ACRH        equ	908	;# 
  2256   00038D                     TU16APR         equ	909	;# 
  2257   00038D                     TU16APRL        equ	909	;# 
  2258   00038E                     TU16APRH        equ	910	;# 
  2259   00038F                     TU16ACLK        equ	911	;# 
  2260   000390                     TU16AERS        equ	912	;# 
  2261   000393                     TU16BCON0       equ	915	;# 
  2262   000394                     TU16BCON1       equ	916	;# 
  2263   000395                     TU16BHLT        equ	917	;# 
  2264   000396                     TU16BPS         equ	918	;# 
  2265   000397                     TU16BTMR        equ	919	;# 
  2266   000397                     TU16BCR         equ	919	;# 
  2267   000397                     TU16BTMRL       equ	919	;# 
  2268   000397                     TU16BCRL        equ	919	;# 
  2269   000398                     TU16BTMRH       equ	920	;# 
  2270   000398                     TU16BCRH        equ	920	;# 
  2271   000399                     TU16BPR         equ	921	;# 
  2272   000399                     TU16BPRL        equ	921	;# 
  2273   00039A                     TU16BPRH        equ	922	;# 
  2274   00039B                     TU16BCLK        equ	923	;# 
  2275   00039C                     TU16BERS        equ	924	;# 
  2276   0003BB                     TUCHAIN         equ	955	;# 
  2277   0003BC                     CWG1CLK         equ	956	;# 
  2278   0003BC                     CWG1CLKCON      equ	956	;# 
  2279   0003BD                     CWG1ISM         equ	957	;# 
  2280   0003BE                     CWG1DBR         equ	958	;# 
  2281   0003BF                     CWG1DBF         equ	959	;# 
  2282   0003C0                     CWG1CON0        equ	960	;# 
  2283   0003C1                     CWG1CON1        equ	961	;# 
  2284   0003C2                     CWG1AS0         equ	962	;# 
  2285   0003C3                     CWG1AS1         equ	963	;# 
  2286   0003C4                     CWG1STR         equ	964	;# 
  2287   0003C5                     CWG2CLK         equ	965	;# 
  2288   0003C5                     CWG2CLKCON      equ	965	;# 
  2289   0003C6                     CWG2ISM         equ	966	;# 
  2290   0003C7                     CWG2DBR         equ	967	;# 
  2291   0003C8                     CWG2DBF         equ	968	;# 
  2292   0003C9                     CWG2CON0        equ	969	;# 
  2293   0003CA                     CWG2CON1        equ	970	;# 
  2294   0003CB                     CWG2AS0         equ	971	;# 
  2295   0003CC                     CWG2AS1         equ	972	;# 
  2296   0003CD                     CWG2STR         equ	973	;# 
  2297   0003CE                     CWG3CLK         equ	974	;# 
  2298   0003CE                     CWG3CLKCON      equ	974	;# 
  2299   0003CF                     CWG3ISM         equ	975	;# 
  2300   0003D0                     CWG3DBR         equ	976	;# 
  2301   0003D1                     CWG3DBF         equ	977	;# 
  2302   0003D2                     CWG3CON0        equ	978	;# 
  2303   0003D3                     CWG3CON1        equ	979	;# 
  2304   0003D4                     CWG3AS0         equ	980	;# 
  2305   0003D5                     CWG3AS1         equ	981	;# 
  2306   0003D6                     CWG3STR         equ	982	;# 
  2307   0003D7                     FVRCON          equ	983	;# 
  2308   0003D8                     ADCPCON         equ	984	;# 
  2309   0003D8                     ADCP            equ	984	;# 
  2310   0003D9                     ADLTH           equ	985	;# 
  2311   0003D9                     ADLTHL          equ	985	;# 
  2312   0003DA                     ADLTHH          equ	986	;# 
  2313   0003DB                     ADUTH           equ	987	;# 
  2314   0003DB                     ADUTHL          equ	987	;# 
  2315   0003DC                     ADUTHH          equ	988	;# 
  2316   0003DD                     ADERR           equ	989	;# 
  2317   0003DD                     ADERRL          equ	989	;# 
  2318   0003DE                     ADERRH          equ	990	;# 
  2319   0003DF                     ADSTPT          equ	991	;# 
  2320   0003DF                     ADSTPTL         equ	991	;# 
  2321   0003E0                     ADSTPTH         equ	992	;# 
  2322   0003E1                     ADFLTR          equ	993	;# 
  2323   0003E1                     ADFLTRL         equ	993	;# 
  2324   0003E2                     ADFLTRH         equ	994	;# 
  2325   0003E3                     ADACC           equ	995	;# 
  2326   0003E3                     ADACCL          equ	995	;# 
  2327   0003E4                     ADACCH          equ	996	;# 
  2328   0003E5                     ADACCU          equ	997	;# 
  2329   0003E6                     ADCNT           equ	998	;# 
  2330   0003E7                     ADRPT           equ	999	;# 
  2331   0003E8                     ADPREV          equ	1000	;# 
  2332   0003E8                     ADPREVL         equ	1000	;# 
  2333   0003E9                     ADPREVH         equ	1001	;# 
  2334   0003EA                     ADRES           equ	1002	;# 
  2335   0003EA                     ADRESL          equ	1002	;# 
  2336   0003EB                     ADRESH          equ	1003	;# 
  2337   0003EC                     ADPCH           equ	1004	;# 
  2338   0003EE                     ADACQ           equ	1006	;# 
  2339   0003EE                     ADACQL          equ	1006	;# 
  2340   0003EF                     ADACQH          equ	1007	;# 
  2341   0003F0                     ADCAP           equ	1008	;# 
  2342   0003F1                     ADPRE           equ	1009	;# 
  2343   0003F1                     ADPREL          equ	1009	;# 
  2344   0003F2                     ADPREH          equ	1010	;# 
  2345   0003F3                     ADCON0          equ	1011	;# 
  2346   0003F4                     ADCON1          equ	1012	;# 
  2347   0003F5                     ADCON2          equ	1013	;# 
  2348   0003F6                     ADCON3          equ	1014	;# 
  2349   0003F7                     ADSTAT          equ	1015	;# 
  2350   0003F8                     ADREF           equ	1016	;# 
  2351   0003F9                     ADACT           equ	1017	;# 
  2352   0003FA                     ADCLK           equ	1018	;# 
  2353   0003FB                     ADCTX           equ	1019	;# 
  2354   0003FC                     ADCSEL1         equ	1020	;# 
  2355   0003FD                     ADCSEL2         equ	1021	;# 
  2356   0003FE                     ADCSEL3         equ	1022	;# 
  2357   0003FF                     ADCSEL4         equ	1023	;# 
  2358   000400                     ANSELA          equ	1024	;# 
  2359   000401                     WPUA            equ	1025	;# 
  2360   000402                     ODCONA          equ	1026	;# 
  2361   000403                     SLRCONA         equ	1027	;# 
  2362   000404                     INLVLA          equ	1028	;# 
  2363   000405                     IOCAP           equ	1029	;# 
  2364   000406                     IOCAN           equ	1030	;# 
  2365   000407                     IOCAF           equ	1031	;# 
  2366   000408                     ANSELB          equ	1032	;# 
  2367   000409                     WPUB            equ	1033	;# 
  2368   00040A                     ODCONB          equ	1034	;# 
  2369   00040B                     SLRCONB         equ	1035	;# 
  2370   00040C                     INLVLB          equ	1036	;# 
  2371   00040D                     IOCBP           equ	1037	;# 
  2372   00040E                     IOCBN           equ	1038	;# 
  2373   00040F                     IOCBF           equ	1039	;# 
  2374   000410                     ANSELC          equ	1040	;# 
  2375   000411                     WPUC            equ	1041	;# 
  2376   000412                     ODCONC          equ	1042	;# 
  2377   000413                     SLRCONC         equ	1043	;# 
  2378   000414                     INLVLC          equ	1044	;# 
  2379   000415                     IOCCP           equ	1045	;# 
  2380   000416                     IOCCN           equ	1046	;# 
  2381   000417                     IOCCF           equ	1047	;# 
  2382   000421                     WPUE            equ	1057	;# 
  2383   000424                     INLVLE          equ	1060	;# 
  2384   000425                     IOCEP           equ	1061	;# 
  2385   000426                     IOCEN           equ	1062	;# 
  2386   000427                     IOCEF           equ	1063	;# 
  2387   000440                     NCO1ACC         equ	1088	;# 
  2388   000440                     NCO1ACCL        equ	1088	;# 
  2389   000441                     NCO1ACCH        equ	1089	;# 
  2390   000442                     NCO1ACCU        equ	1090	;# 
  2391   000443                     NCO1INC         equ	1091	;# 
  2392   000443                     NCO1INCL        equ	1091	;# 
  2393   000444                     NCO1INCH        equ	1092	;# 
  2394   000445                     NCO1INCU        equ	1093	;# 
  2395   000446                     NCO1CON         equ	1094	;# 
  2396   000447                     NCO1CLK         equ	1095	;# 
  2397   000448                     NCO2ACC         equ	1096	;# 
  2398   000448                     NCO2ACCL        equ	1096	;# 
  2399   000449                     NCO2ACCH        equ	1097	;# 
  2400   00044A                     NCO2ACCU        equ	1098	;# 
  2401   00044B                     NCO2INC         equ	1099	;# 
  2402   00044B                     NCO2INCL        equ	1099	;# 
  2403   00044C                     NCO2INCH        equ	1100	;# 
  2404   00044D                     NCO2INCU        equ	1101	;# 
  2405   00044E                     NCO2CON         equ	1102	;# 
  2406   00044F                     NCO2CLK         equ	1103	;# 
  2407   000450                     NCO3ACC         equ	1104	;# 
  2408   000450                     NCO3ACCL        equ	1104	;# 
  2409   000451                     NCO3ACCH        equ	1105	;# 
  2410   000452                     NCO3ACCU        equ	1106	;# 
  2411   000453                     NCO3INC         equ	1107	;# 
  2412   000453                     NCO3INCL        equ	1107	;# 
  2413   000454                     NCO3INCH        equ	1108	;# 
  2414   000455                     NCO3INCU        equ	1109	;# 
  2415   000456                     NCO3CON         equ	1110	;# 
  2416   000457                     NCO3CLK         equ	1111	;# 
  2417   000458                     FSCMCON         equ	1112	;# 
  2418   000459                     IVTLOCK         equ	1113	;# 
  2419   00045A                     IVTAD           equ	1114	;# 
  2420   00045A                     IVTADL          equ	1114	;# 
  2421   00045B                     IVTADH          equ	1115	;# 
  2422   00045C                     IVTADU          equ	1116	;# 
  2423   00045D                     IVTBASE         equ	1117	;# 
  2424   00045D                     IVTBASEL        equ	1117	;# 
  2425   00045E                     IVTBASEH        equ	1118	;# 
  2426   00045F                     IVTBASEU        equ	1119	;# 
  2427   000460                     PWM1ERS         equ	1120	;# 
  2428   000461                     PWM1CLK         equ	1121	;# 
  2429   000462                     PWM1LDS         equ	1122	;# 
  2430   000463                     PWM1PR          equ	1123	;# 
  2431   000463                     PWM1PRL         equ	1123	;# 
  2432   000464                     PWM1PRH         equ	1124	;# 
  2433   000465                     PWM1CPRE        equ	1125	;# 
  2434   000466                     PWM1PIPOS       equ	1126	;# 
  2435   000467                     PWM1GIR         equ	1127	;# 
  2436   000468                     PWM1GIE         equ	1128	;# 
  2437   000469                     PWM1CON         equ	1129	;# 
  2438   00046A                     PWM1S1CFG       equ	1130	;# 
  2439   00046B                     PWM1S1P1        equ	1131	;# 
  2440   00046B                     PWM1S1P1L       equ	1131	;# 
  2441   00046C                     PWM1S1P1H       equ	1132	;# 
  2442   00046D                     PWM1S1P2        equ	1133	;# 
  2443   00046D                     PWM1S1P2L       equ	1133	;# 
  2444   00046E                     PWM1S1P2H       equ	1134	;# 
  2445   00046F                     PWM2ERS         equ	1135	;# 
  2446   000470                     PWM2CLK         equ	1136	;# 
  2447   000471                     PWM2LDS         equ	1137	;# 
  2448   000472                     PWM2PR          equ	1138	;# 
  2449   000472                     PWM2PRL         equ	1138	;# 
  2450   000473                     PWM2PRH         equ	1139	;# 
  2451   000474                     PWM2CPRE        equ	1140	;# 
  2452   000475                     PWM2PIPOS       equ	1141	;# 
  2453   000476                     PWM2GIR         equ	1142	;# 
  2454   000477                     PWM2GIE         equ	1143	;# 
  2455   000478                     PWM2CON         equ	1144	;# 
  2456   000479                     PWM2S1CFG       equ	1145	;# 
  2457   00047A                     PWM2S1P1        equ	1146	;# 
  2458   00047A                     PWM2S1P1L       equ	1146	;# 
  2459   00047B                     PWM2S1P1H       equ	1147	;# 
  2460   00047C                     PWM2S1P2        equ	1148	;# 
  2461   00047C                     PWM2S1P2L       equ	1148	;# 
  2462   00047D                     PWM2S1P2H       equ	1149	;# 
  2463   00047E                     PWM3ERS         equ	1150	;# 
  2464   00047F                     PWM3CLK         equ	1151	;# 
  2465   000480                     PWM3LDS         equ	1152	;# 
  2466   000481                     PWM3PR          equ	1153	;# 
  2467   000481                     PWM3PRL         equ	1153	;# 
  2468   000482                     PWM3PRH         equ	1154	;# 
  2469   000483                     PWM3CPRE        equ	1155	;# 
  2470   000484                     PWM3PIPOS       equ	1156	;# 
  2471   000485                     PWM3GIR         equ	1157	;# 
  2472   000486                     PWM3GIE         equ	1158	;# 
  2473   000487                     PWM3CON         equ	1159	;# 
  2474   000488                     PWM3S1CFG       equ	1160	;# 
  2475   000489                     PWM3S1P1        equ	1161	;# 
  2476   000489                     PWM3S1P1L       equ	1161	;# 
  2477   00048A                     PWM3S1P1H       equ	1162	;# 
  2478   00048B                     PWM3S1P2        equ	1163	;# 
  2479   00048B                     PWM3S1P2L       equ	1163	;# 
  2480   00048C                     PWM3S1P2H       equ	1164	;# 
  2481   00048D                     PWM4ERS         equ	1165	;# 
  2482   00048E                     PWM4CLK         equ	1166	;# 
  2483   00048F                     PWM4LDS         equ	1167	;# 
  2484   000490                     PWM4PR          equ	1168	;# 
  2485   000490                     PWM4PRL         equ	1168	;# 
  2486   000491                     PWM4PRH         equ	1169	;# 
  2487   000492                     PWM4CPRE        equ	1170	;# 
  2488   000493                     PWM4PIPOS       equ	1171	;# 
  2489   000494                     PWM4GIR         equ	1172	;# 
  2490   000495                     PWM4GIE         equ	1173	;# 
  2491   000496                     PWM4CON         equ	1174	;# 
  2492   000497                     PWM4S1CFG       equ	1175	;# 
  2493   000498                     PWM4S1P1        equ	1176	;# 
  2494   000498                     PWM4S1P1L       equ	1176	;# 
  2495   000499                     PWM4S1P1H       equ	1177	;# 
  2496   00049A                     PWM4S1P2        equ	1178	;# 
  2497   00049A                     PWM4S1P2L       equ	1178	;# 
  2498   00049B                     PWM4S1P2H       equ	1179	;# 
  2499   00049C                     PWMLOAD         equ	1180	;# 
  2500   00049D                     PWMEN           equ	1181	;# 
  2501   00049E                     PIE0            equ	1182	;# 
  2502   00049F                     PIE1            equ	1183	;# 
  2503   0004A0                     PIE2            equ	1184	;# 
  2504   0004A1                     PIE3            equ	1185	;# 
  2505   0004A2                     PIE4            equ	1186	;# 
  2506   0004A3                     PIE5            equ	1187	;# 
  2507   0004A4                     PIE6            equ	1188	;# 
  2508   0004A5                     PIE7            equ	1189	;# 
  2509   0004A6                     PIE8            equ	1190	;# 
  2510   0004A7                     PIE9            equ	1191	;# 
  2511   0004A8                     PIE10           equ	1192	;# 
  2512   0004A9                     PIE11           equ	1193	;# 
  2513   0004AA                     PIE12           equ	1194	;# 
  2514   0004AB                     PIE13           equ	1195	;# 
  2515   0004AC                     PIE14           equ	1196	;# 
  2516   0004AD                     PIE15           equ	1197	;# 
  2517   0004AE                     PIR0            equ	1198	;# 
  2518   0004AF                     PIR1            equ	1199	;# 
  2519   0004B0                     PIR2            equ	1200	;# 
  2520   0004B1                     PIR3            equ	1201	;# 
  2521   0004B2                     PIR4            equ	1202	;# 
  2522   0004B3                     PIR5            equ	1203	;# 
  2523   0004B4                     PIR6            equ	1204	;# 
  2524   0004B5                     PIR7            equ	1205	;# 
  2525   0004B6                     PIR8            equ	1206	;# 
  2526   0004B7                     PIR9            equ	1207	;# 
  2527   0004B8                     PIR10           equ	1208	;# 
  2528   0004B9                     PIR11           equ	1209	;# 
  2529   0004BA                     PIR12           equ	1210	;# 
  2530   0004BB                     PIR13           equ	1211	;# 
  2531   0004BC                     PIR14           equ	1212	;# 
  2532   0004BD                     PIR15           equ	1213	;# 
  2533   0004BE                     LATA            equ	1214	;# 
  2534   0004BF                     LATB            equ	1215	;# 
  2535   0004C0                     LATC            equ	1216	;# 
  2536   0004C6                     TRISA           equ	1222	;# 
  2537   0004C7                     TRISB           equ	1223	;# 
  2538   0004C8                     TRISC           equ	1224	;# 
  2539   0004CA                     TRISE           equ	1226	;# 
  2540   0004CE                     PORTA           equ	1230	;# 
  2541   0004CF                     PORTB           equ	1231	;# 
  2542   0004D0                     PORTC           equ	1232	;# 
  2543   0004D2                     PORTE           equ	1234	;# 
  2544   0004D6                     INTCON0         equ	1238	;# 
  2545   0004D7                     INTCON1         equ	1239	;# 
  2546   0004D8                     STATUS          equ	1240	;# 
  2547   0004D9                     FSR2            equ	1241	;# 
  2548   0004D9                     FSR2L           equ	1241	;# 
  2549   0004DA                     FSR2H           equ	1242	;# 
  2550   0004DB                     PLUSW2          equ	1243	;# 
  2551   0004DC                     PREINC2         equ	1244	;# 
  2552   0004DD                     POSTDEC2        equ	1245	;# 
  2553   0004DE                     POSTINC2        equ	1246	;# 
  2554   0004DF                     INDF2           equ	1247	;# 
  2555   0004E0                     BSR             equ	1248	;# 
  2556   0004E1                     FSR1            equ	1249	;# 
  2557   0004E1                     FSR1L           equ	1249	;# 
  2558   0004E2                     FSR1H           equ	1250	;# 
  2559   0004E3                     PLUSW1          equ	1251	;# 
  2560   0004E4                     PREINC1         equ	1252	;# 
  2561   0004E5                     POSTDEC1        equ	1253	;# 
  2562   0004E6                     POSTINC1        equ	1254	;# 
  2563   0004E7                     INDF1           equ	1255	;# 
  2564   0004E8                     WREG            equ	1256	;# 
  2565   0004E9                     FSR0            equ	1257	;# 
  2566   0004E9                     FSR0L           equ	1257	;# 
  2567   0004EA                     FSR0H           equ	1258	;# 
  2568   0004EB                     PLUSW0          equ	1259	;# 
  2569   0004EC                     PREINC0         equ	1260	;# 
  2570   0004ED                     POSTDEC0        equ	1261	;# 
  2571   0004EE                     POSTINC0        equ	1262	;# 
  2572   0004EF                     INDF0           equ	1263	;# 
  2573   0004F0                     PCON0           equ	1264	;# 
  2574   0004F1                     PCON1           equ	1265	;# 
  2575   0004F2                     CPUDOZE         equ	1266	;# 
  2576   0004F3                     PROD            equ	1267	;# 
  2577   0004F3                     PRODL           equ	1267	;# 
  2578   0004F4                     PRODH           equ	1268	;# 
  2579   0004F5                     TABLAT          equ	1269	;# 
  2580   0004F6                     TBLPTR          equ	1270	;# 
  2581   0004F6                     TBLPTRL         equ	1270	;# 
  2582   0004F7                     TBLPTRH         equ	1271	;# 
  2583   0004F8                     TBLPTRU         equ	1272	;# 
  2584   0004F9                     PCLAT           equ	1273	;# 
  2585   0004F9                     PCL             equ	1273	;# 
  2586   0004FA                     PCLATH          equ	1274	;# 
  2587   0004FB                     PCLATU          equ	1275	;# 
  2588   0004FC                     STKPTR          equ	1276	;# 
  2589   0004FD                     TOS             equ	1277	;# 
  2590   0004FD                     TOSL            equ	1277	;# 
  2591   0004FE                     TOSH            equ	1278	;# 
  2592   0004FF                     TOSU            equ	1279	;# 
  2593   000038                     BOOTREG         equ	56	;# 
  2594   000039                     CLKRCON         equ	57	;# 
  2595   00003A                     CLKRCLK         equ	58	;# 
  2596   000040                     NVMCON0         equ	64	;# 
  2597   000041                     NVMCON1         equ	65	;# 
  2598   000042                     NVMLOCK         equ	66	;# 
  2599   000043                     NVMADR          equ	67	;# 
  2600   000043                     NVMADRL         equ	67	;# 
  2601   000044                     NVMADRH         equ	68	;# 
  2602   000045                     NVMADRU         equ	69	;# 
  2603   000046                     NVMDAT          equ	70	;# 
  2604   000046                     NVMDATL         equ	70	;# 
  2605   000047                     NVMDATH         equ	71	;# 
  2606   000048                     VREGCON         equ	72	;# 
  2607   000049                     BORCON          equ	73	;# 
  2608   00004A                     HLVDCON0        equ	74	;# 
  2609   00004B                     HLVDCON1        equ	75	;# 
  2610   00004C                     ZCDCON          equ	76	;# 
  2611   000060                     PMD0            equ	96	;# 
  2612   000061                     PMD1            equ	97	;# 
  2613   000062                     PMD2            equ	98	;# 
  2614   000063                     PMD3            equ	99	;# 
  2615   000064                     PMD4            equ	100	;# 
  2616   000065                     PMD5            equ	101	;# 
  2617   000066                     PMD6            equ	102	;# 
  2618   000067                     PMD7            equ	103	;# 
  2619   000068                     PMD8            equ	104	;# 
  2620   00006A                     MD1CON0         equ	106	;# 
  2621   00006B                     MD1CON1         equ	107	;# 
  2622   00006C                     MD1SRC          equ	108	;# 
  2623   00006D                     MD1CARL         equ	109	;# 
  2624   00006E                     MD1CARH         equ	110	;# 
  2625   00006F                     CMOUT           equ	111	;# 
  2626   000070                     CM1CON0         equ	112	;# 
  2627   000071                     CM1CON1         equ	113	;# 
  2628   000072                     CM1NCH          equ	114	;# 
  2629   000073                     CM1PCH          equ	115	;# 
  2630   000074                     CM2CON0         equ	116	;# 
  2631   000075                     CM2CON1         equ	117	;# 
  2632   000076                     CM2NCH          equ	118	;# 
  2633   000077                     CM2PCH          equ	119	;# 
  2634   000078                     WDTCON0         equ	120	;# 
  2635   000079                     WDTCON1         equ	121	;# 
  2636   00007A                     WDTPSL          equ	122	;# 
  2637   00007B                     WDTPSH          equ	123	;# 
  2638   00007C                     WDTTMR          equ	124	;# 
  2639   00007D                     DAC1DAT         equ	125	;# 
  2640   00007D                     DAC1DATL        equ	125	;# 
  2641   00007F                     DAC1CON         equ	127	;# 
  2642   000080                     SPI1RXB         equ	128	;# 
  2643   000081                     SPI1TXB         equ	129	;# 
  2644   000082                     SPI1TCNT        equ	130	;# 
  2645   000082                     SPI1TCNTL       equ	130	;# 
  2646   000083                     SPI1TCNTH       equ	131	;# 
  2647   000084                     SPI1CON0        equ	132	;# 
  2648   000085                     SPI1CON1        equ	133	;# 
  2649   000086                     SPI1CON2        equ	134	;# 
  2650   000087                     SPI1STATUS      equ	135	;# 
  2651   000088                     SPI1TWIDTH      equ	136	;# 
  2652   000089                     SPI1BAUD        equ	137	;# 
  2653   00008A                     SPI1INTF        equ	138	;# 
  2654   00008B                     SPI1INTE        equ	139	;# 
  2655   00008C                     SPI1CLK         equ	140	;# 
  2656   00008D                     SPI2RXB         equ	141	;# 
  2657   00008E                     SPI2TXB         equ	142	;# 
  2658   00008F                     SPI2TCNT        equ	143	;# 
  2659   00008F                     SPI2TCNTL       equ	143	;# 
  2660   000090                     SPI2TCNTH       equ	144	;# 
  2661   000091                     SPI2CON0        equ	145	;# 
  2662   000092                     SPI2CON1        equ	146	;# 
  2663   000093                     SPI2CON2        equ	147	;# 
  2664   000094                     SPI2STATUS      equ	148	;# 
  2665   000095                     SPI2TWIDTH      equ	149	;# 
  2666   000096                     SPI2BAUD        equ	150	;# 
  2667   000097                     SPI2INTF        equ	151	;# 
  2668   000098                     SPI2INTE        equ	152	;# 
  2669   000099                     SPI2CLK         equ	153	;# 
  2670   0000AC                     ACTCON          equ	172	;# 
  2671   0000AD                     OSCCON1         equ	173	;# 
  2672   0000AE                     OSCCON2         equ	174	;# 
  2673   0000AF                     OSCCON3         equ	175	;# 
  2674   0000B0                     OSCTUNE         equ	176	;# 
  2675   0000B1                     OSCFRQ          equ	177	;# 
  2676   0000B1                     OSCFREQ         equ	177	;# 
  2677   0000B2                     OSCSTAT         equ	178	;# 
  2678   0000B2                     OSCSTAT1        equ	178	;# 
  2679   0000B3                     OSCEN           equ	179	;# 
  2680   0000B4                     PRLOCK          equ	180	;# 
  2681   0000B5                     SCANPR          equ	181	;# 
  2682   0000B6                     DMA1PR          equ	182	;# 
  2683   0000B7                     DMA2PR          equ	183	;# 
  2684   0000B8                     DMA3PR          equ	184	;# 
  2685   0000B9                     DMA4PR          equ	185	;# 
  2686   0000BA                     DMA5PR          equ	186	;# 
  2687   0000BB                     DMA6PR          equ	187	;# 
  2688   0000BC                     DMA7PR          equ	188	;# 
  2689   0000BD                     DMA8PR          equ	189	;# 
  2690   0000BE                     MAINPR          equ	190	;# 
  2691   0000BF                     ISRPR           equ	191	;# 
  2692   0000D4                     CLCDATA         equ	212	;# 
  2693   0000D5                     CLCSELECT       equ	213	;# 
  2694   0000D6                     CLCnCON         equ	214	;# 
  2695   0000D7                     CLCnPOL         equ	215	;# 
  2696   0000D8                     CLCnSEL0        equ	216	;# 
  2697   0000D9                     CLCnSEL1        equ	217	;# 
  2698   0000DA                     CLCnSEL2        equ	218	;# 
  2699   0000DB                     CLCnSEL3        equ	219	;# 
  2700   0000DC                     CLCnGLS0        equ	220	;# 
  2701   0000DD                     CLCnGLS1        equ	221	;# 
  2702   0000DE                     CLCnGLS2        equ	222	;# 
  2703   0000DF                     CLCnGLS3        equ	223	;# 
  2704   0000E8                     DMASELECT       equ	232	;# 
  2705   0000E9                     DMAnBUF         equ	233	;# 
  2706   0000EA                     DMAnDCNT        equ	234	;# 
  2707   0000EA                     DMAnDCNTL       equ	234	;# 
  2708   0000EB                     DMAnDCNTH       equ	235	;# 
  2709   0000EC                     DMAnDPTR        equ	236	;# 
  2710   0000EC                     DMAnDPTRL       equ	236	;# 
  2711   0000ED                     DMAnDPTRH       equ	237	;# 
  2712   0000EE                     DMAnDSZ         equ	238	;# 
  2713   0000EE                     DMAnDSZL        equ	238	;# 
  2714   0000EF                     DMAnDSZH        equ	239	;# 
  2715   0000F0                     DMAnDSA         equ	240	;# 
  2716   0000F0                     DMAnDSAL        equ	240	;# 
  2717   0000F1                     DMAnDSAH        equ	241	;# 
  2718   0000F2                     DMAnSCNT        equ	242	;# 
  2719   0000F2                     DMAnSCNTL       equ	242	;# 
  2720   0000F3                     DMAnSCNTH       equ	243	;# 
  2721   0000F4                     DMAnSPTR        equ	244	;# 
  2722   0000F4                     DMAnSPTRL       equ	244	;# 
  2723   0000F5                     DMAnSPTRH       equ	245	;# 
  2724   0000F6                     DMAnSPTRU       equ	246	;# 
  2725   0000F7                     DMAnSSZ         equ	247	;# 
  2726   0000F7                     DMAnSSZL        equ	247	;# 
  2727   0000F8                     DMAnSSZH        equ	248	;# 
  2728   0000F9                     DMAnSSA         equ	249	;# 
  2729   0000F9                     DMAnSSAL        equ	249	;# 
  2730   0000FA                     DMAnSSAH        equ	250	;# 
  2731   0000FB                     DMAnSSAU        equ	251	;# 
  2732   0000FC                     DMAnCON0        equ	252	;# 
  2733   0000FD                     DMAnCON1        equ	253	;# 
  2734   0000FE                     DMAnAIRQ        equ	254	;# 
  2735   0000FF                     DMAnSIRQ        equ	255	;# 
  2736   000100                     C1CONL          equ	256	;# 
  2737   000101                     C1CONH          equ	257	;# 
  2738   000102                     C1CONU          equ	258	;# 
  2739   000103                     C1CONT          equ	259	;# 
  2740   000104                     C1NBTCFGL       equ	260	;# 
  2741   000105                     C1NBTCFGH       equ	261	;# 
  2742   000106                     C1NBTCFGU       equ	262	;# 
  2743   000107                     C1NBTCFGT       equ	263	;# 
  2744   000108                     C1DBTCFGL       equ	264	;# 
  2745   000109                     C1DBTCFGH       equ	265	;# 
  2746   00010A                     C1DBTCFGU       equ	266	;# 
  2747   00010B                     C1DBTCFGT       equ	267	;# 
  2748   00010C                     C1TDCL          equ	268	;# 
  2749   00010D                     C1TDCH          equ	269	;# 
  2750   00010E                     C1TDCU          equ	270	;# 
  2751   000110                     C1TBC           equ	272	;# 
  2752   000110                     C1TBCL          equ	272	;# 
  2753   000111                     C1TBCH          equ	273	;# 
  2754   000112                     C1TBCU          equ	274	;# 
  2755   000113                     C1TBCT          equ	275	;# 
  2756   000114                     C1TSCONL        equ	276	;# 
  2757   000115                     C1TSCONH        equ	277	;# 
  2758   000116                     C1TSCONU        equ	278	;# 
  2759   000117                     C1TSCONT        equ	279	;# 
  2760   000118                     C1VECL          equ	280	;# 
  2761   000119                     C1VECH          equ	281	;# 
  2762   00011A                     C1VECU          equ	282	;# 
  2763   00011B                     C1VECT          equ	283	;# 
  2764   00011C                     C1INTL          equ	284	;# 
  2765   00011D                     C1INTH          equ	285	;# 
  2766   00011E                     C1INTU          equ	286	;# 
  2767   00011F                     C1INTT          equ	287	;# 
  2768   000120                     C1RXIF          equ	288	;# 
  2769   000120                     C1RXIFL         equ	288	;# 
  2770   000121                     C1RXIFH         equ	289	;# 
  2771   000122                     C1RXIFU         equ	290	;# 
  2772   000123                     C1RXIFT         equ	291	;# 
  2773   000124                     C1TXIF          equ	292	;# 
  2774   000124                     C1TXIFL         equ	292	;# 
  2775   000125                     C1TXIFH         equ	293	;# 
  2776   000126                     C1TXIFU         equ	294	;# 
  2777   000127                     C1TXIFT         equ	295	;# 
  2778   000128                     C1RXOVIF        equ	296	;# 
  2779   000128                     C1RXOVIFL       equ	296	;# 
  2780   000129                     C1RXOVIFH       equ	297	;# 
  2781   00012A                     C1RXOVIFU       equ	298	;# 
  2782   00012B                     C1RXOVIFT       equ	299	;# 
  2783   00012C                     C1TXATIF        equ	300	;# 
  2784   00012C                     C1TXATIFL       equ	300	;# 
  2785   00012D                     C1TXATIFH       equ	301	;# 
  2786   00012E                     C1TXATIFU       equ	302	;# 
  2787   00012F                     C1TXATIFT       equ	303	;# 
  2788   000130                     C1TXREQ         equ	304	;# 
  2789   000130                     C1TXREQL        equ	304	;# 
  2790   000131                     C1TXREQH        equ	305	;# 
  2791   000132                     C1TXREQU        equ	306	;# 
  2792   000133                     C1TXREQT        equ	307	;# 
  2793   000134                     C1TRECL         equ	308	;# 
  2794   000135                     C1TRECH         equ	309	;# 
  2795   000136                     C1TRECU         equ	310	;# 
  2796   000137                     C1TRECT         equ	311	;# 
  2797   000138                     C1BDIAG0L       equ	312	;# 
  2798   000139                     C1BDIAG0H       equ	313	;# 
  2799   00013C                     C1BDIAG1L       equ	316	;# 
  2800   00013D                     C1BDIAG1H       equ	317	;# 
  2801   00013E                     C1BDIAG1U       equ	318	;# 
  2802   00013F                     C1BDIAG1T       equ	319	;# 
  2803   000140                     C1TEFCONL       equ	320	;# 
  2804   000141                     C1TEFCONH       equ	321	;# 
  2805   000142                     C1TEFCONU       equ	322	;# 
  2806   000143                     C1TEFCONT       equ	323	;# 
  2807   000144                     C1TEFSTAL       equ	324	;# 
  2808   000145                     C1TEFSTAH       equ	325	;# 
  2809   000146                     C1TEFSTAU       equ	326	;# 
  2810   000147                     C1TEFSTAT       equ	327	;# 
  2811   000148                     C1TEFUA         equ	328	;# 
  2812   000148                     C1TEFUAL        equ	328	;# 
  2813   000149                     C1TEFUAH        equ	329	;# 
  2814   00014A                     C1TEFUAU        equ	330	;# 
  2815   00014B                     C1TEFUAT        equ	331	;# 
  2816   00014C                     C1FIFOBA        equ	332	;# 
  2817   00014C                     C1FIFOBAL       equ	332	;# 
  2818   00014D                     C1FIFOBAH       equ	333	;# 
  2819   00014E                     C1FIFOBAU       equ	334	;# 
  2820   00014F                     C1FIFOBAT       equ	335	;# 
  2821   000150                     C1TXQCONL       equ	336	;# 
  2822   000151                     C1TXQCONH       equ	337	;# 
  2823   000152                     C1TXQCONU       equ	338	;# 
  2824   000153                     C1TXQCONT       equ	339	;# 
  2825   000154                     C1TXQSTAL       equ	340	;# 
  2826   000155                     C1TXQSTAH       equ	341	;# 
  2827   000156                     C1TXQSTAU       equ	342	;# 
  2828   000157                     C1TXQSTAT       equ	343	;# 
  2829   000158                     C1TXQUA         equ	344	;# 
  2830   000158                     C1TXQUAL        equ	344	;# 
  2831   000159                     C1TXQUAH        equ	345	;# 
  2832   00015A                     C1TXQUAU        equ	346	;# 
  2833   00015B                     C1TXQUAT        equ	347	;# 
  2834   00015C                     C1FIFOCON1      equ	348	;# 
  2835   00015C                     C1FIFOCON1L     equ	348	;# 
  2836   00015D                     C1FIFOCON1H     equ	349	;# 
  2837   00015E                     C1FIFOCON1U     equ	350	;# 
  2838   00015F                     C1FIFOCON1T     equ	351	;# 
  2839   000160                     C1FIFOSTA1      equ	352	;# 
  2840   000160                     C1FIFOSTA1L     equ	352	;# 
  2841   000161                     C1FIFOSTA1H     equ	353	;# 
  2842   000162                     C1FIFOSTA1U     equ	354	;# 
  2843   000163                     C1FIFOSTA1T     equ	355	;# 
  2844   000164                     C1FIFOUA1       equ	356	;# 
  2845   000164                     C1FIFOUA1L      equ	356	;# 
  2846   000165                     C1FIFOUA1H      equ	357	;# 
  2847   000166                     C1FIFOUA1U      equ	358	;# 
  2848   000167                     C1FIFOUA1T      equ	359	;# 
  2849   000168                     C1FIFOCON2      equ	360	;# 
  2850   000168                     C1FIFOCON2L     equ	360	;# 
  2851   000169                     C1FIFOCON2H     equ	361	;# 
  2852   00016A                     C1FIFOCON2U     equ	362	;# 
  2853   00016B                     C1FIFOCON2T     equ	363	;# 
  2854   00016C                     C1FIFOSTA2      equ	364	;# 
  2855   00016C                     C1FIFOSTA2L     equ	364	;# 
  2856   00016D                     C1FIFOSTA2H     equ	365	;# 
  2857   00016E                     C1FIFOSTA2U     equ	366	;# 
  2858   00016F                     C1FIFOSTA2T     equ	367	;# 
  2859   000170                     C1FIFOUA2       equ	368	;# 
  2860   000170                     C1FIFOUA2L      equ	368	;# 
  2861   000171                     C1FIFOUA2H      equ	369	;# 
  2862   000172                     C1FIFOUA2U      equ	370	;# 
  2863   000173                     C1FIFOUA2T      equ	371	;# 
  2864   000174                     C1FIFOCON3      equ	372	;# 
  2865   000174                     C1FIFOCON3L     equ	372	;# 
  2866   000175                     C1FIFOCON3H     equ	373	;# 
  2867   000176                     C1FIFOCON3U     equ	374	;# 
  2868   000177                     C1FIFOCON3T     equ	375	;# 
  2869   000178                     C1FIFOSTA3      equ	376	;# 
  2870   000178                     C1FIFOSTA3L     equ	376	;# 
  2871   000179                     C1FIFOSTA3H     equ	377	;# 
  2872   00017A                     C1FIFOSTA3U     equ	378	;# 
  2873   00017B                     C1FIFOSTA3T     equ	379	;# 
  2874   00017C                     C1FIFOUA3       equ	380	;# 
  2875   00017C                     C1FIFOUA3L      equ	380	;# 
  2876   00017D                     C1FIFOUA3H      equ	381	;# 
  2877   00017E                     C1FIFOUA3U      equ	382	;# 
  2878   00017F                     C1FIFOUA3T      equ	383	;# 
  2879   000180                     C1FLTCON0L      equ	384	;# 
  2880   000181                     C1FLTCON0H      equ	385	;# 
  2881   000182                     C1FLTCON0U      equ	386	;# 
  2882   000183                     C1FLTCON0T      equ	387	;# 
  2883   000184                     C1FLTCON1L      equ	388	;# 
  2884   000185                     C1FLTCON1H      equ	389	;# 
  2885   000186                     C1FLTCON1U      equ	390	;# 
  2886   000187                     C1FLTCON1T      equ	391	;# 
  2887   000188                     C1FLTCON2L      equ	392	;# 
  2888   000189                     C1FLTCON2H      equ	393	;# 
  2889   00018A                     C1FLTCON2U      equ	394	;# 
  2890   00018B                     C1FLTCON2T      equ	395	;# 
  2891   00018C                     C1FLTOBJ0       equ	396	;# 
  2892   00018C                     C1FLTOBJ0L      equ	396	;# 
  2893   00018D                     C1FLTOBJ0H      equ	397	;# 
  2894   00018E                     C1FLTOBJ0U      equ	398	;# 
  2895   00018F                     C1FLTOBJ0T      equ	399	;# 
  2896   000190                     C1MASK0         equ	400	;# 
  2897   000190                     C1MASK0L        equ	400	;# 
  2898   000191                     C1MASK0H        equ	401	;# 
  2899   000192                     C1MASK0U        equ	402	;# 
  2900   000193                     C1MASK0T        equ	403	;# 
  2901   000194                     C1FLTOBJ1       equ	404	;# 
  2902   000194                     C1FLTOBJ1L      equ	404	;# 
  2903   000195                     C1FLTOBJ1H      equ	405	;# 
  2904   000196                     C1FLTOBJ1U      equ	406	;# 
  2905   000197                     C1FLTOBJ1T      equ	407	;# 
  2906   000198                     C1MASK1         equ	408	;# 
  2907   000198                     C1MASK1L        equ	408	;# 
  2908   000199                     C1MASK1H        equ	409	;# 
  2909   00019A                     C1MASK1U        equ	410	;# 
  2910   00019B                     C1MASK1T        equ	411	;# 
  2911   00019C                     C1FLTOBJ2       equ	412	;# 
  2912   00019C                     C1FLTOBJ2L      equ	412	;# 
  2913   00019D                     C1FLTOBJ2H      equ	413	;# 
  2914   00019E                     C1FLTOBJ2U      equ	414	;# 
  2915   00019F                     C1FLTOBJ2T      equ	415	;# 
  2916   0001A0                     C1MASK2         equ	416	;# 
  2917   0001A0                     C1MASK2L        equ	416	;# 
  2918   0001A1                     C1MASK2H        equ	417	;# 
  2919   0001A2                     C1MASK2U        equ	418	;# 
  2920   0001A3                     C1MASK2T        equ	419	;# 
  2921   0001A4                     C1FLTOBJ3       equ	420	;# 
  2922   0001A4                     C1FLTOBJ3L      equ	420	;# 
  2923   0001A5                     C1FLTOBJ3H      equ	421	;# 
  2924   0001A6                     C1FLTOBJ3U      equ	422	;# 
  2925   0001A7                     C1FLTOBJ3T      equ	423	;# 
  2926   0001A8                     C1MASK3         equ	424	;# 
  2927   0001A8                     C1MASK3L        equ	424	;# 
  2928   0001A9                     C1MASK3H        equ	425	;# 
  2929   0001AA                     C1MASK3U        equ	426	;# 
  2930   0001AB                     C1MASK3T        equ	427	;# 
  2931   0001AC                     C1FLTOBJ4       equ	428	;# 
  2932   0001AC                     C1FLTOBJ4L      equ	428	;# 
  2933   0001AD                     C1FLTOBJ4H      equ	429	;# 
  2934   0001AE                     C1FLTOBJ4U      equ	430	;# 
  2935   0001AF                     C1FLTOBJ4T      equ	431	;# 
  2936   0001B0                     C1MASK4         equ	432	;# 
  2937   0001B0                     C1MASK4L        equ	432	;# 
  2938   0001B1                     C1MASK4H        equ	433	;# 
  2939   0001B2                     C1MASK4U        equ	434	;# 
  2940   0001B3                     C1MASK4T        equ	435	;# 
  2941   0001B4                     C1FLTOBJ5       equ	436	;# 
  2942   0001B4                     C1FLTOBJ5L      equ	436	;# 
  2943   0001B5                     C1FLTOBJ5H      equ	437	;# 
  2944   0001B6                     C1FLTOBJ5U      equ	438	;# 
  2945   0001B7                     C1FLTOBJ5T      equ	439	;# 
  2946   0001B8                     C1MASK5         equ	440	;# 
  2947   0001B8                     C1MASK5L        equ	440	;# 
  2948   0001B9                     C1MASK5H        equ	441	;# 
  2949   0001BA                     C1MASK5U        equ	442	;# 
  2950   0001BB                     C1MASK5T        equ	443	;# 
  2951   0001BC                     C1FLTOBJ6       equ	444	;# 
  2952   0001BC                     C1FLTOBJ6L      equ	444	;# 
  2953   0001BD                     C1FLTOBJ6H      equ	445	;# 
  2954   0001BE                     C1FLTOBJ6U      equ	446	;# 
  2955   0001BF                     C1FLTOBJ6T      equ	447	;# 
  2956   0001C0                     C1MASK6         equ	448	;# 
  2957   0001C0                     C1MASK6L        equ	448	;# 
  2958   0001C1                     C1MASK6H        equ	449	;# 
  2959   0001C2                     C1MASK6U        equ	450	;# 
  2960   0001C3                     C1MASK6T        equ	451	;# 
  2961   0001C4                     C1FLTOBJ7       equ	452	;# 
  2962   0001C4                     C1FLTOBJ7L      equ	452	;# 
  2963   0001C5                     C1FLTOBJ7H      equ	453	;# 
  2964   0001C6                     C1FLTOBJ7U      equ	454	;# 
  2965   0001C7                     C1FLTOBJ7T      equ	455	;# 
  2966   0001C8                     C1MASK7         equ	456	;# 
  2967   0001C8                     C1MASK7L        equ	456	;# 
  2968   0001C9                     C1MASK7H        equ	457	;# 
  2969   0001CA                     C1MASK7U        equ	458	;# 
  2970   0001CB                     C1MASK7T        equ	459	;# 
  2971   0001CC                     C1FLTOBJ8       equ	460	;# 
  2972   0001CC                     C1FLTOBJ8L      equ	460	;# 
  2973   0001CD                     C1FLTOBJ8H      equ	461	;# 
  2974   0001CE                     C1FLTOBJ8U      equ	462	;# 
  2975   0001CF                     C1FLTOBJ8T      equ	463	;# 
  2976   0001D0                     C1MASK8         equ	464	;# 
  2977   0001D0                     C1MASK8L        equ	464	;# 
  2978   0001D1                     C1MASK8H        equ	465	;# 
  2979   0001D2                     C1MASK8U        equ	466	;# 
  2980   0001D3                     C1MASK8T        equ	467	;# 
  2981   0001D4                     C1FLTOBJ9       equ	468	;# 
  2982   0001D4                     C1FLTOBJ9L      equ	468	;# 
  2983   0001D5                     C1FLTOBJ9H      equ	469	;# 
  2984   0001D6                     C1FLTOBJ9U      equ	470	;# 
  2985   0001D7                     C1FLTOBJ9T      equ	471	;# 
  2986   0001D8                     C1MASK9         equ	472	;# 
  2987   0001D8                     C1MASK9L        equ	472	;# 
  2988   0001D9                     C1MASK9H        equ	473	;# 
  2989   0001DA                     C1MASK9U        equ	474	;# 
  2990   0001DB                     C1MASK9T        equ	475	;# 
  2991   0001DC                     C1FLTOBJ10      equ	476	;# 
  2992   0001DC                     C1FLTOBJ10L     equ	476	;# 
  2993   0001DD                     C1FLTOBJ10H     equ	477	;# 
  2994   0001DE                     C1FLTOBJ10U     equ	478	;# 
  2995   0001DF                     C1FLTOBJ10T     equ	479	;# 
  2996   0001E0                     C1MASK10        equ	480	;# 
  2997   0001E0                     C1MASK10L       equ	480	;# 
  2998   0001E1                     C1MASK10H       equ	481	;# 
  2999   0001E2                     C1MASK10U       equ	482	;# 
  3000   0001E3                     C1MASK10T       equ	483	;# 
  3001   0001E4                     C1FLTOBJ11      equ	484	;# 
  3002   0001E4                     C1FLTOBJ11L     equ	484	;# 
  3003   0001E5                     C1FLTOBJ11H     equ	485	;# 
  3004   0001E6                     C1FLTOBJ11U     equ	486	;# 
  3005   0001E7                     C1FLTOBJ11T     equ	487	;# 
  3006   0001E8                     C1MASK11        equ	488	;# 
  3007   0001E8                     C1MASK11L       equ	488	;# 
  3008   0001E9                     C1MASK11H       equ	489	;# 
  3009   0001EA                     C1MASK11U       equ	490	;# 
  3010   0001EB                     C1MASK11T       equ	491	;# 
  3011   000200                     PPSLOCK         equ	512	;# 
  3012   000201                     RA0PPS          equ	513	;# 
  3013   000202                     RA1PPS          equ	514	;# 
  3014   000203                     RA2PPS          equ	515	;# 
  3015   000204                     RA3PPS          equ	516	;# 
  3016   000205                     RA4PPS          equ	517	;# 
  3017   000206                     RA5PPS          equ	518	;# 
  3018   000207                     RA6PPS          equ	519	;# 
  3019   000208                     RA7PPS          equ	520	;# 
  3020   000209                     RB0PPS          equ	521	;# 
  3021   00020A                     RB1PPS          equ	522	;# 
  3022   00020B                     RB2PPS          equ	523	;# 
  3023   00020C                     RB3PPS          equ	524	;# 
  3024   00020D                     RB4PPS          equ	525	;# 
  3025   00020E                     RB5PPS          equ	526	;# 
  3026   00020F                     RB6PPS          equ	527	;# 
  3027   000210                     RB7PPS          equ	528	;# 
  3028   000211                     RC0PPS          equ	529	;# 
  3029   000212                     RC1PPS          equ	530	;# 
  3030   000213                     RC2PPS          equ	531	;# 
  3031   000214                     RC3PPS          equ	532	;# 
  3032   000215                     RC4PPS          equ	533	;# 
  3033   000216                     RC5PPS          equ	534	;# 
  3034   000217                     RC6PPS          equ	535	;# 
  3035   000218                     RC7PPS          equ	536	;# 
  3036   00023D                     CANRXPPS        equ	573	;# 
  3037   00023E                     INT0PPS         equ	574	;# 
  3038   00023F                     INT1PPS         equ	575	;# 
  3039   000240                     INT2PPS         equ	576	;# 
  3040   000241                     T0CKIPPS        equ	577	;# 
  3041   000242                     T1CKIPPS        equ	578	;# 
  3042   000243                     T1GPPS          equ	579	;# 
  3043   000244                     T3CKIPPS        equ	580	;# 
  3044   000245                     T3GPPS          equ	581	;# 
  3045   000246                     T5CKIPPS        equ	582	;# 
  3046   000247                     T5GPPS          equ	583	;# 
  3047   000248                     T2INPPS         equ	584	;# 
  3048   000249                     T4INPPS         equ	585	;# 
  3049   00024A                     T6INPPS         equ	586	;# 
  3050   00024B                     TUIN0PPS        equ	587	;# 
  3051   00024C                     TUIN1PPS        equ	588	;# 
  3052   00024F                     CCP1PPS         equ	591	;# 
  3053   000250                     CCP2PPS         equ	592	;# 
  3054   000251                     CCP3PPS         equ	593	;# 
  3055   000253                     PWM1ERSPPS      equ	595	;# 
  3056   000254                     PWM2ERSPPS      equ	596	;# 
  3057   000255                     PWM3ERSPPS      equ	597	;# 
  3058   000256                     PWM4ERSPPS      equ	598	;# 
  3059   000257                     PWMIN0PPS       equ	599	;# 
  3060   000258                     PWMIN1PPS       equ	600	;# 
  3061   000259                     SMT1WINPPS      equ	601	;# 
  3062   00025A                     SMT1SIGPPS      equ	602	;# 
  3063   00025B                     CWG1PPS         equ	603	;# 
  3064   00025B                     CWG1INPPS       equ	603	;# 
  3065   00025C                     CWG2PPS         equ	604	;# 
  3066   00025C                     CWG2INPPS       equ	604	;# 
  3067   00025D                     CWG3PPS         equ	605	;# 
  3068   00025D                     CWG3INPPS       equ	605	;# 
  3069   00025E                     MD1CARLPPS      equ	606	;# 
  3070   00025E                     MDCARLPPS       equ	606	;# 
  3071   00025F                     MD1CARHPPS      equ	607	;# 
  3072   00025F                     MDCARHPPS       equ	607	;# 
  3073   000260                     MD1SRCPPS       equ	608	;# 
  3074   000260                     MDSRCPPS        equ	608	;# 
  3075   000261                     CLCIN0PPS       equ	609	;# 
  3076   000262                     CLCIN1PPS       equ	610	;# 
  3077   000263                     CLCIN2PPS       equ	611	;# 
  3078   000264                     CLCIN3PPS       equ	612	;# 
  3079   000265                     CLCIN4PPS       equ	613	;# 
  3080   000266                     CLCIN5PPS       equ	614	;# 
  3081   000267                     CLCIN6PPS       equ	615	;# 
  3082   000268                     CLCIN7PPS       equ	616	;# 
  3083   000269                     ADACTPPS        equ	617	;# 
  3084   00026A                     SPI1SCKPPS      equ	618	;# 
  3085   00026B                     SPI1SDIPPS      equ	619	;# 
  3086   00026C                     SPI1SSPPS       equ	620	;# 
  3087   00026D                     SPI2SCKPPS      equ	621	;# 
  3088   00026E                     SPI2SDIPPS      equ	622	;# 
  3089   00026F                     SPI2SSPPS       equ	623	;# 
  3090   000270                     I2C1SDAPPS      equ	624	;# 
  3091   000271                     I2C1SCLPPS      equ	625	;# 
  3092   000272                     U1RXPPS         equ	626	;# 
  3093   000273                     U1CTSPPS        equ	627	;# 
  3094   000274                     U2RXPPS         equ	628	;# 
  3095   000275                     U2CTSPPS        equ	629	;# 
  3096   000276                     U3RXPPS         equ	630	;# 
  3097   000277                     U3CTSPPS        equ	631	;# 
  3098   000278                     U4RXPPS         equ	632	;# 
  3099   000279                     U4CTSPPS        equ	633	;# 
  3100   00027A                     U5RXPPS         equ	634	;# 
  3101   00027B                     U5CTSPPS        equ	635	;# 
  3102   000286                     RC4I2C          equ	646	;# 
  3103   000287                     RC3I2C          equ	647	;# 
  3104   000288                     RB2I2C          equ	648	;# 
  3105   000289                     RB1I2C          equ	649	;# 
  3106   00028A                     I2C1RXB         equ	650	;# 
  3107   00028B                     I2C1TXB         equ	651	;# 
  3108   00028C                     I2C1CNTL        equ	652	;# 
  3109   00028D                     I2C1CNTH        equ	653	;# 
  3110   00028E                     I2C1ADB0        equ	654	;# 
  3111   00028F                     I2C1ADB1        equ	655	;# 
  3112   000290                     I2C1ADR0        equ	656	;# 
  3113   000291                     I2C1ADR1        equ	657	;# 
  3114   000292                     I2C1ADR2        equ	658	;# 
  3115   000293                     I2C1ADR3        equ	659	;# 
  3116   000294                     I2C1CON0        equ	660	;# 
  3117   000295                     I2C1CON1        equ	661	;# 
  3118   000296                     I2C1CON2        equ	662	;# 
  3119   000297                     I2C1ERR         equ	663	;# 
  3120   000298                     I2C1STAT0       equ	664	;# 
  3121   000299                     I2C1STAT1       equ	665	;# 
  3122   00029A                     I2C1PIR         equ	666	;# 
  3123   00029B                     I2C1PIE         equ	667	;# 
  3124   00029C                     I2C1BTO         equ	668	;# 
  3125   00029D                     I2C1BAUD        equ	669	;# 
  3126   00029E                     I2C1CLK         equ	670	;# 
  3127   00029F                     I2C1BTOC        equ	671	;# 
  3128   0002A1                     U1RXB           equ	673	;# 
  3129   0002A1                     U1RXBL          equ	673	;# 
  3130   0002A2                     U1RXCHK         equ	674	;# 
  3131   0002A3                     U1TXB           equ	675	;# 
  3132   0002A3                     U1TXBL          equ	675	;# 
  3133   0002A4                     U1TXCHK         equ	676	;# 
  3134   0002A5                     U1P1            equ	677	;# 
  3135   0002A5                     U1P1L           equ	677	;# 
  3136   0002A6                     U1P1H           equ	678	;# 
  3137   0002A7                     U1P2            equ	679	;# 
  3138   0002A7                     U1P2L           equ	679	;# 
  3139   0002A8                     U1P2H           equ	680	;# 
  3140   0002A9                     U1P3            equ	681	;# 
  3141   0002A9                     U1P3L           equ	681	;# 
  3142   0002AA                     U1P3H           equ	682	;# 
  3143   0002AB                     U1CON0          equ	683	;# 
  3144   0002AC                     U1CON1          equ	684	;# 
  3145   0002AD                     U1CON2          equ	685	;# 
  3146   0002AE                     U1BRG           equ	686	;# 
  3147   0002AE                     U1BRGL          equ	686	;# 
  3148   0002AF                     U1BRGH          equ	687	;# 
  3149   0002B0                     U1FIFO          equ	688	;# 
  3150   0002B1                     U1UIR           equ	689	;# 
  3151   0002B2                     U1ERRIR         equ	690	;# 
  3152   0002B3                     U1ERRIE         equ	691	;# 
  3153   0002B4                     U2RXB           equ	692	;# 
  3154   0002B4                     U2RXBL          equ	692	;# 
  3155   0002B5                     U2RXCHK         equ	693	;# 
  3156   0002B6                     U2TXB           equ	694	;# 
  3157   0002B6                     U2TXBL          equ	694	;# 
  3158   0002B7                     U2TXCHK         equ	695	;# 
  3159   0002B8                     U2P1            equ	696	;# 
  3160   0002B8                     U2P1L           equ	696	;# 
  3161   0002B9                     U2P1H           equ	697	;# 
  3162   0002BA                     U2P2            equ	698	;# 
  3163   0002BA                     U2P2L           equ	698	;# 
  3164   0002BB                     U2P2H           equ	699	;# 
  3165   0002BC                     U2P3            equ	700	;# 
  3166   0002BC                     U2P3L           equ	700	;# 
  3167   0002BD                     U2P3H           equ	701	;# 
  3168   0002BE                     U2CON0          equ	702	;# 
  3169   0002BF                     U2CON1          equ	703	;# 
  3170   0002C0                     U2CON2          equ	704	;# 
  3171   0002C1                     U2BRG           equ	705	;# 
  3172   0002C1                     U2BRGL          equ	705	;# 
  3173   0002C2                     U2BRGH          equ	706	;# 
  3174   0002C3                     U2FIFO          equ	707	;# 
  3175   0002C4                     U2UIR           equ	708	;# 
  3176   0002C5                     U2ERRIR         equ	709	;# 
  3177   0002C6                     U2ERRIE         equ	710	;# 
  3178   0002C7                     U3RXB           equ	711	;# 
  3179   0002C7                     U3RXBL          equ	711	;# 
  3180   0002C9                     U3TXB           equ	713	;# 
  3181   0002C9                     U3TXBL          equ	713	;# 
  3182   0002CB                     U3P1            equ	715	;# 
  3183   0002CB                     U3P1L           equ	715	;# 
  3184   0002CD                     U3P2            equ	717	;# 
  3185   0002CD                     U3P2L           equ	717	;# 
  3186   0002CF                     U3P3            equ	719	;# 
  3187   0002CF                     U3P3L           equ	719	;# 
  3188   0002D1                     U3CON0          equ	721	;# 
  3189   0002D2                     U3CON1          equ	722	;# 
  3190   0002D3                     U3CON2          equ	723	;# 
  3191   0002D4                     U3BRG           equ	724	;# 
  3192   0002D4                     U3BRGL          equ	724	;# 
  3193   0002D5                     U3BRGH          equ	725	;# 
  3194   0002D6                     U3FIFO          equ	726	;# 
  3195   0002D7                     U3UIR           equ	727	;# 
  3196   0002D8                     U3ERRIR         equ	728	;# 
  3197   0002D9                     U3ERRIE         equ	729	;# 
  3198   0002DA                     U4RXB           equ	730	;# 
  3199   0002DA                     U4RXBL          equ	730	;# 
  3200   0002DC                     U4TXB           equ	732	;# 
  3201   0002DC                     U4TXBL          equ	732	;# 
  3202   0002DE                     U4P1            equ	734	;# 
  3203   0002DE                     U4P1L           equ	734	;# 
  3204   0002E0                     U4P2            equ	736	;# 
  3205   0002E0                     U4P2L           equ	736	;# 
  3206   0002E2                     U4P3            equ	738	;# 
  3207   0002E2                     U4P3L           equ	738	;# 
  3208   0002E4                     U4CON0          equ	740	;# 
  3209   0002E5                     U4CON1          equ	741	;# 
  3210   0002E6                     U4CON2          equ	742	;# 
  3211   0002E7                     U4BRG           equ	743	;# 
  3212   0002E7                     U4BRGL          equ	743	;# 
  3213   0002E8                     U4BRGH          equ	744	;# 
  3214   0002E9                     U4FIFO          equ	745	;# 
  3215   0002EA                     U4UIR           equ	746	;# 
  3216   0002EB                     U4ERRIR         equ	747	;# 
  3217   0002EC                     U4ERRIE         equ	748	;# 
  3218   0002ED                     U5RXB           equ	749	;# 
  3219   0002ED                     U5RXBL          equ	749	;# 
  3220   0002EF                     U5TXB           equ	751	;# 
  3221   0002EF                     U5TXBL          equ	751	;# 
  3222   0002F1                     U5P1            equ	753	;# 
  3223   0002F1                     U5P1L           equ	753	;# 
  3224   0002F3                     U5P2            equ	755	;# 
  3225   0002F3                     U5P2L           equ	755	;# 
  3226   0002F5                     U5P3            equ	757	;# 
  3227   0002F5                     U5P3L           equ	757	;# 
  3228   0002F7                     U5CON0          equ	759	;# 
  3229   0002F8                     U5CON1          equ	760	;# 
  3230   0002F9                     U5CON2          equ	761	;# 
  3231   0002FA                     U5BRG           equ	762	;# 
  3232   0002FA                     U5BRGL          equ	762	;# 
  3233   0002FB                     U5BRGH          equ	763	;# 
  3234   0002FC                     U5FIFO          equ	764	;# 
  3235   0002FD                     U5UIR           equ	765	;# 
  3236   0002FE                     U5ERRIR         equ	766	;# 
  3237   0002FF                     U5ERRIE         equ	767	;# 
  3238   000300                     SMT1TMR         equ	768	;# 
  3239   000300                     SMT1TMRL        equ	768	;# 
  3240   000301                     SMT1TMRH        equ	769	;# 
  3241   000302                     SMT1TMRU        equ	770	;# 
  3242   000303                     SMT1CPR         equ	771	;# 
  3243   000303                     SMT1CPRL        equ	771	;# 
  3244   000304                     SMT1CPRH        equ	772	;# 
  3245   000305                     SMT1CPRU        equ	773	;# 
  3246   000306                     SMT1CPW         equ	774	;# 
  3247   000306                     SMT1CPWL        equ	774	;# 
  3248   000307                     SMT1CPWH        equ	775	;# 
  3249   000308                     SMT1CPWU        equ	776	;# 
  3250   000309                     SMT1PR          equ	777	;# 
  3251   000309                     SMT1PRL         equ	777	;# 
  3252   00030A                     SMT1PRH         equ	778	;# 
  3253   00030B                     SMT1PRU         equ	779	;# 
  3254   00030C                     SMT1CON0        equ	780	;# 
  3255   00030D                     SMT1CON1        equ	781	;# 
  3256   00030E                     SMT1STAT        equ	782	;# 
  3257   00030F                     SMT1CLK         equ	783	;# 
  3258   000310                     SMT1SIG         equ	784	;# 
  3259   000311                     SMT1WIN         equ	785	;# 
  3260   000318                     TMR0L           equ	792	;# 
  3261   000318                     TMR0            equ	792	;# 
  3262   000319                     TMR0H           equ	793	;# 
  3263   000319                     PR0             equ	793	;# 
  3264   00031A                     T0CON0          equ	794	;# 
  3265   00031B                     T0CON1          equ	795	;# 
  3266   00031C                     TMR1            equ	796	;# 
  3267   00031C                     TMR1L           equ	796	;# 
  3268   00031D                     TMR1H           equ	797	;# 
  3269   00031E                     T1CON           equ	798	;# 
  3270   00031E                     TMR1CON         equ	798	;# 
  3271   00031F                     T1GCON          equ	799	;# 
  3272   00031F                     TMR1GCON        equ	799	;# 
  3273   000320                     T1GATE          equ	800	;# 
  3274   000320                     TMR1GATE        equ	800	;# 
  3275   000321                     T1CLK           equ	801	;# 
  3276   000321                     TMR1CLK         equ	801	;# 
  3277   000321                     PR1             equ	801	;# 
  3278   000322                     T2TMR           equ	802	;# 
  3279   000322                     TMR2            equ	802	;# 
  3280   000323                     T2PR            equ	803	;# 
  3281   000323                     PR2             equ	803	;# 
  3282   000324                     T2CON           equ	804	;# 
  3283   000325                     T2HLT           equ	805	;# 
  3284   000326                     T2CLKCON        equ	806	;# 
  3285   000326                     T2CLK           equ	806	;# 
  3286   000327                     T2RST           equ	807	;# 
  3287   000328                     TMR3            equ	808	;# 
  3288   000328                     TMR3L           equ	808	;# 
  3289   000329                     TMR3H           equ	809	;# 
  3290   00032A                     T3CON           equ	810	;# 
  3291   00032A                     TMR3CON         equ	810	;# 
  3292   00032B                     T3GCON          equ	811	;# 
  3293   00032B                     TMR3GCON        equ	811	;# 
  3294   00032C                     T3GATE          equ	812	;# 
  3295   00032C                     TMR3GATE        equ	812	;# 
  3296   00032D                     T3CLK           equ	813	;# 
  3297   00032D                     TMR3CLK         equ	813	;# 
  3298   00032D                     PR3             equ	813	;# 
  3299   00032E                     T4TMR           equ	814	;# 
  3300   00032E                     TMR4            equ	814	;# 
  3301   00032F                     T4PR            equ	815	;# 
  3302   00032F                     PR4             equ	815	;# 
  3303   000330                     T4CON           equ	816	;# 
  3304   000331                     T4HLT           equ	817	;# 
  3305   000332                     T4CLKCON        equ	818	;# 
  3306   000332                     T4CLK           equ	818	;# 
  3307   000333                     T4RST           equ	819	;# 
  3308   000334                     TMR5            equ	820	;# 
  3309   000334                     TMR5L           equ	820	;# 
  3310   000335                     TMR5H           equ	821	;# 
  3311   000336                     T5CON           equ	822	;# 
  3312   000336                     TMR5CON         equ	822	;# 
  3313   000337                     T5GCON          equ	823	;# 
  3314   000337                     TMR5GCON        equ	823	;# 
  3315   000338                     T5GATE          equ	824	;# 
  3316   000338                     TMR5GATE        equ	824	;# 
  3317   000339                     T5CLK           equ	825	;# 
  3318   000339                     TMR5CLK         equ	825	;# 
  3319   000339                     PR5             equ	825	;# 
  3320   00033A                     T6TMR           equ	826	;# 
  3321   00033A                     TMR6            equ	826	;# 
  3322   00033B                     T6PR            equ	827	;# 
  3323   00033B                     PR6             equ	827	;# 
  3324   00033C                     T6CON           equ	828	;# 
  3325   00033D                     T6HLT           equ	829	;# 
  3326   00033E                     T6CLKCON        equ	830	;# 
  3327   00033E                     T6CLK           equ	830	;# 
  3328   00033F                     T6RST           equ	831	;# 
  3329   000340                     CCPR1           equ	832	;# 
  3330   000340                     CCPR1L          equ	832	;# 
  3331   000341                     CCPR1H          equ	833	;# 
  3332   000342                     CCP1CON         equ	834	;# 
  3333   000343                     CCP1CAP         equ	835	;# 
  3334   000344                     CCPR2           equ	836	;# 
  3335   000344                     CCPR2L          equ	836	;# 
  3336   000345                     CCPR2H          equ	837	;# 
  3337   000346                     CCP2CON         equ	838	;# 
  3338   000347                     CCP2CAP         equ	839	;# 
  3339   000348                     CCPR3           equ	840	;# 
  3340   000348                     CCPR3L          equ	840	;# 
  3341   000349                     CCPR3H          equ	841	;# 
  3342   00034A                     CCP3CON         equ	842	;# 
  3343   00034B                     CCP3CAP         equ	843	;# 
  3344   00034C                     CCPTMRS0        equ	844	;# 
  3345   00034F                     CRCDATA         equ	847	;# 
  3346   00034F                     CRCDATAL        equ	847	;# 
  3347   000350                     CRCDATAH        equ	848	;# 
  3348   000351                     CRCDATAU        equ	849	;# 
  3349   000352                     CRCDATAT        equ	850	;# 
  3350   000353                     CRCOUT          equ	851	;# 
  3351   000353                     CRCSHFT         equ	851	;# 
  3352   000353                     CRCXOR          equ	851	;# 
  3353   000353                     CRCOUTL         equ	851	;# 
  3354   000353                     CRCSHFTL        equ	851	;# 
  3355   000353                     CRCSHIFTL       equ	851	;# 
  3356   000353                     CRCXORL         equ	851	;# 
  3357   000354                     CRCOUTH         equ	852	;# 
  3358   000354                     CRCSHFTH        equ	852	;# 
  3359   000354                     CRCSHIFTH       equ	852	;# 
  3360   000354                     CRCXORH         equ	852	;# 
  3361   000355                     CRCOUTU         equ	853	;# 
  3362   000355                     CRCSHFTU        equ	853	;# 
  3363   000355                     CRCSHIFTU       equ	853	;# 
  3364   000355                     CRCXORU         equ	853	;# 
  3365   000356                     CRCOUTT         equ	854	;# 
  3366   000356                     CRCSHFTT        equ	854	;# 
  3367   000356                     CRCSHIFTT       equ	854	;# 
  3368   000356                     CRCXORT         equ	854	;# 
  3369   000357                     CRCCON0         equ	855	;# 
  3370   000358                     CRCCON1         equ	856	;# 
  3371   000359                     CRCCON2         equ	857	;# 
  3372   00035A                     SCANLADR        equ	858	;# 
  3373   00035A                     SCANLADRL       equ	858	;# 
  3374   00035B                     SCANLADRH       equ	859	;# 
  3375   00035C                     SCANLADRU       equ	860	;# 
  3376   00035D                     SCANHADR        equ	861	;# 
  3377   00035D                     SCANHADRL       equ	861	;# 
  3378   00035E                     SCANHADRH       equ	862	;# 
  3379   00035F                     SCANHADRU       equ	863	;# 
  3380   000360                     SCANCON0        equ	864	;# 
  3381   000361                     SCANTRIG        equ	865	;# 
  3382   000362                     IPR0            equ	866	;# 
  3383   000363                     IPR1            equ	867	;# 
  3384   000364                     IPR2            equ	868	;# 
  3385   000365                     IPR3            equ	869	;# 
  3386   000366                     IPR4            equ	870	;# 
  3387   000367                     IPR5            equ	871	;# 
  3388   000368                     IPR6            equ	872	;# 
  3389   000369                     IPR7            equ	873	;# 
  3390   00036A                     IPR8            equ	874	;# 
  3391   00036B                     IPR9            equ	875	;# 
  3392   00036C                     IPR10           equ	876	;# 
  3393   00036D                     IPR11           equ	877	;# 
  3394   00036E                     IPR12           equ	878	;# 
  3395   00036F                     IPR13           equ	879	;# 
  3396   000370                     IPR14           equ	880	;# 
  3397   000371                     IPR15           equ	881	;# 
  3398   000373                     STATUS_CSHAD    equ	883	;# 
  3399   000374                     WREG_CSHAD      equ	884	;# 
  3400   000375                     BSR_CSHAD       equ	885	;# 
  3401   000376                     SHADCON         equ	886	;# 
  3402   000377                     STATUS_SHAD     equ	887	;# 
  3403   000378                     WREG_SHAD       equ	888	;# 
  3404   000379                     BSR_SHAD        equ	889	;# 
  3405   00037A                     PCLATH_SHAD     equ	890	;# 
  3406   00037B                     PCLATU_SHAD     equ	891	;# 
  3407   00037C                     FSR0SH          equ	892	;# 
  3408   00037C                     FSR0L_SHAD      equ	892	;# 
  3409   00037D                     FSR0H_SHAD      equ	893	;# 
  3410   00037E                     FSR1SH          equ	894	;# 
  3411   00037E                     FSR1L_SHAD      equ	894	;# 
  3412   00037F                     FSR1H_SHAD      equ	895	;# 
  3413   000380                     FSR2SH          equ	896	;# 
  3414   000380                     FSR2L_SHAD      equ	896	;# 
  3415   000381                     FSR2H_SHAD      equ	897	;# 
  3416   000382                     PRODSH          equ	898	;# 
  3417   000382                     PRODL_SHAD      equ	898	;# 
  3418   000383                     PRODH_SHAD      equ	899	;# 
  3419   000387                     TU16ACON0       equ	903	;# 
  3420   000388                     TU16ACON1       equ	904	;# 
  3421   000389                     TU16AHLT        equ	905	;# 
  3422   00038A                     TU16APS         equ	906	;# 
  3423   00038B                     TU16ATMR        equ	907	;# 
  3424   00038B                     TU16ACR         equ	907	;# 
  3425   00038B                     TU16ATMRL       equ	907	;# 
  3426   00038B                     TU16ACRL        equ	907	;# 
  3427   00038C                     TU16ATMRH       equ	908	;# 
  3428   00038C                     TU16ACRH        equ	908	;# 
  3429   00038D                     TU16APR         equ	909	;# 
  3430   00038D                     TU16APRL        equ	909	;# 
  3431   00038E                     TU16APRH        equ	910	;# 
  3432   00038F                     TU16ACLK        equ	911	;# 
  3433   000390                     TU16AERS        equ	912	;# 
  3434   000393                     TU16BCON0       equ	915	;# 
  3435   000394                     TU16BCON1       equ	916	;# 
  3436   000395                     TU16BHLT        equ	917	;# 
  3437   000396                     TU16BPS         equ	918	;# 
  3438   000397                     TU16BTMR        equ	919	;# 
  3439   000397                     TU16BCR         equ	919	;# 
  3440   000397                     TU16BTMRL       equ	919	;# 
  3441   000397                     TU16BCRL        equ	919	;# 
  3442   000398                     TU16BTMRH       equ	920	;# 
  3443   000398                     TU16BCRH        equ	920	;# 
  3444   000399                     TU16BPR         equ	921	;# 
  3445   000399                     TU16BPRL        equ	921	;# 
  3446   00039A                     TU16BPRH        equ	922	;# 
  3447   00039B                     TU16BCLK        equ	923	;# 
  3448   00039C                     TU16BERS        equ	924	;# 
  3449   0003BB                     TUCHAIN         equ	955	;# 
  3450   0003BC                     CWG1CLK         equ	956	;# 
  3451   0003BC                     CWG1CLKCON      equ	956	;# 
  3452   0003BD                     CWG1ISM         equ	957	;# 
  3453   0003BE                     CWG1DBR         equ	958	;# 
  3454   0003BF                     CWG1DBF         equ	959	;# 
  3455   0003C0                     CWG1CON0        equ	960	;# 
  3456   0003C1                     CWG1CON1        equ	961	;# 
  3457   0003C2                     CWG1AS0         equ	962	;# 
  3458   0003C3                     CWG1AS1         equ	963	;# 
  3459   0003C4                     CWG1STR         equ	964	;# 
  3460   0003C5                     CWG2CLK         equ	965	;# 
  3461   0003C5                     CWG2CLKCON      equ	965	;# 
  3462   0003C6                     CWG2ISM         equ	966	;# 
  3463   0003C7                     CWG2DBR         equ	967	;# 
  3464   0003C8                     CWG2DBF         equ	968	;# 
  3465   0003C9                     CWG2CON0        equ	969	;# 
  3466   0003CA                     CWG2CON1        equ	970	;# 
  3467   0003CB                     CWG2AS0         equ	971	;# 
  3468   0003CC                     CWG2AS1         equ	972	;# 
  3469   0003CD                     CWG2STR         equ	973	;# 
  3470   0003CE                     CWG3CLK         equ	974	;# 
  3471   0003CE                     CWG3CLKCON      equ	974	;# 
  3472   0003CF                     CWG3ISM         equ	975	;# 
  3473   0003D0                     CWG3DBR         equ	976	;# 
  3474   0003D1                     CWG3DBF         equ	977	;# 
  3475   0003D2                     CWG3CON0        equ	978	;# 
  3476   0003D3                     CWG3CON1        equ	979	;# 
  3477   0003D4                     CWG3AS0         equ	980	;# 
  3478   0003D5                     CWG3AS1         equ	981	;# 
  3479   0003D6                     CWG3STR         equ	982	;# 
  3480   0003D7                     FVRCON          equ	983	;# 
  3481   0003D8                     ADCPCON         equ	984	;# 
  3482   0003D8                     ADCP            equ	984	;# 
  3483   0003D9                     ADLTH           equ	985	;# 
  3484   0003D9                     ADLTHL          equ	985	;# 
  3485   0003DA                     ADLTHH          equ	986	;# 
  3486   0003DB                     ADUTH           equ	987	;# 
  3487   0003DB                     ADUTHL          equ	987	;# 
  3488   0003DC                     ADUTHH          equ	988	;# 
  3489   0003DD                     ADERR           equ	989	;# 
  3490   0003DD                     ADERRL          equ	989	;# 
  3491   0003DE                     ADERRH          equ	990	;# 
  3492   0003DF                     ADSTPT          equ	991	;# 
  3493   0003DF                     ADSTPTL         equ	991	;# 
  3494   0003E0                     ADSTPTH         equ	992	;# 
  3495   0003E1                     ADFLTR          equ	993	;# 
  3496   0003E1                     ADFLTRL         equ	993	;# 
  3497   0003E2                     ADFLTRH         equ	994	;# 
  3498   0003E3                     ADACC           equ	995	;# 
  3499   0003E3                     ADACCL          equ	995	;# 
  3500   0003E4                     ADACCH          equ	996	;# 
  3501   0003E5                     ADACCU          equ	997	;# 
  3502   0003E6                     ADCNT           equ	998	;# 
  3503   0003E7                     ADRPT           equ	999	;# 
  3504   0003E8                     ADPREV          equ	1000	;# 
  3505   0003E8                     ADPREVL         equ	1000	;# 
  3506   0003E9                     ADPREVH         equ	1001	;# 
  3507   0003EA                     ADRES           equ	1002	;# 
  3508   0003EA                     ADRESL          equ	1002	;# 
  3509   0003EB                     ADRESH          equ	1003	;# 
  3510   0003EC                     ADPCH           equ	1004	;# 
  3511   0003EE                     ADACQ           equ	1006	;# 
  3512   0003EE                     ADACQL          equ	1006	;# 
  3513   0003EF                     ADACQH          equ	1007	;# 
  3514   0003F0                     ADCAP           equ	1008	;# 
  3515   0003F1                     ADPRE           equ	1009	;# 
  3516   0003F1                     ADPREL          equ	1009	;# 
  3517   0003F2                     ADPREH          equ	1010	;# 
  3518   0003F3                     ADCON0          equ	1011	;# 
  3519   0003F4                     ADCON1          equ	1012	;# 
  3520   0003F5                     ADCON2          equ	1013	;# 
  3521   0003F6                     ADCON3          equ	1014	;# 
  3522   0003F7                     ADSTAT          equ	1015	;# 
  3523   0003F8                     ADREF           equ	1016	;# 
  3524   0003F9                     ADACT           equ	1017	;# 
  3525   0003FA                     ADCLK           equ	1018	;# 
  3526   0003FB                     ADCTX           equ	1019	;# 
  3527   0003FC                     ADCSEL1         equ	1020	;# 
  3528   0003FD                     ADCSEL2         equ	1021	;# 
  3529   0003FE                     ADCSEL3         equ	1022	;# 
  3530   0003FF                     ADCSEL4         equ	1023	;# 
  3531   000400                     ANSELA          equ	1024	;# 
  3532   000401                     WPUA            equ	1025	;# 
  3533   000402                     ODCONA          equ	1026	;# 
  3534   000403                     SLRCONA         equ	1027	;# 
  3535   000404                     INLVLA          equ	1028	;# 
  3536   000405                     IOCAP           equ	1029	;# 
  3537   000406                     IOCAN           equ	1030	;# 
  3538   000407                     IOCAF           equ	1031	;# 
  3539   000408                     ANSELB          equ	1032	;# 
  3540   000409                     WPUB            equ	1033	;# 
  3541   00040A                     ODCONB          equ	1034	;# 
  3542   00040B                     SLRCONB         equ	1035	;# 
  3543   00040C                     INLVLB          equ	1036	;# 
  3544   00040D                     IOCBP           equ	1037	;# 
  3545   00040E                     IOCBN           equ	1038	;# 
  3546   00040F                     IOCBF           equ	1039	;# 
  3547   000410                     ANSELC          equ	1040	;# 
  3548   000411                     WPUC            equ	1041	;# 
  3549   000412                     ODCONC          equ	1042	;# 
  3550   000413                     SLRCONC         equ	1043	;# 
  3551   000414                     INLVLC          equ	1044	;# 
  3552   000415                     IOCCP           equ	1045	;# 
  3553   000416                     IOCCN           equ	1046	;# 
  3554   000417                     IOCCF           equ	1047	;# 
  3555   000421                     WPUE            equ	1057	;# 
  3556   000424                     INLVLE          equ	1060	;# 
  3557   000425                     IOCEP           equ	1061	;# 
  3558   000426                     IOCEN           equ	1062	;# 
  3559   000427                     IOCEF           equ	1063	;# 
  3560   000440                     NCO1ACC         equ	1088	;# 
  3561   000440                     NCO1ACCL        equ	1088	;# 
  3562   000441                     NCO1ACCH        equ	1089	;# 
  3563   000442                     NCO1ACCU        equ	1090	;# 
  3564   000443                     NCO1INC         equ	1091	;# 
  3565   000443                     NCO1INCL        equ	1091	;# 
  3566   000444                     NCO1INCH        equ	1092	;# 
  3567   000445                     NCO1INCU        equ	1093	;# 
  3568   000446                     NCO1CON         equ	1094	;# 
  3569   000447                     NCO1CLK         equ	1095	;# 
  3570   000448                     NCO2ACC         equ	1096	;# 
  3571   000448                     NCO2ACCL        equ	1096	;# 
  3572   000449                     NCO2ACCH        equ	1097	;# 
  3573   00044A                     NCO2ACCU        equ	1098	;# 
  3574   00044B                     NCO2INC         equ	1099	;# 
  3575   00044B                     NCO2INCL        equ	1099	;# 
  3576   00044C                     NCO2INCH        equ	1100	;# 
  3577   00044D                     NCO2INCU        equ	1101	;# 
  3578   00044E                     NCO2CON         equ	1102	;# 
  3579   00044F                     NCO2CLK         equ	1103	;# 
  3580   000450                     NCO3ACC         equ	1104	;# 
  3581   000450                     NCO3ACCL        equ	1104	;# 
  3582   000451                     NCO3ACCH        equ	1105	;# 
  3583   000452                     NCO3ACCU        equ	1106	;# 
  3584   000453                     NCO3INC         equ	1107	;# 
  3585   000453                     NCO3INCL        equ	1107	;# 
  3586   000454                     NCO3INCH        equ	1108	;# 
  3587   000455                     NCO3INCU        equ	1109	;# 
  3588   000456                     NCO3CON         equ	1110	;# 
  3589   000457                     NCO3CLK         equ	1111	;# 
  3590   000458                     FSCMCON         equ	1112	;# 
  3591   000459                     IVTLOCK         equ	1113	;# 
  3592   00045A                     IVTAD           equ	1114	;# 
  3593   00045A                     IVTADL          equ	1114	;# 
  3594   00045B                     IVTADH          equ	1115	;# 
  3595   00045C                     IVTADU          equ	1116	;# 
  3596   00045D                     IVTBASE         equ	1117	;# 
  3597   00045D                     IVTBASEL        equ	1117	;# 
  3598   00045E                     IVTBASEH        equ	1118	;# 
  3599   00045F                     IVTBASEU        equ	1119	;# 
  3600   000460                     PWM1ERS         equ	1120	;# 
  3601   000461                     PWM1CLK         equ	1121	;# 
  3602   000462                     PWM1LDS         equ	1122	;# 
  3603   000463                     PWM1PR          equ	1123	;# 
  3604   000463                     PWM1PRL         equ	1123	;# 
  3605   000464                     PWM1PRH         equ	1124	;# 
  3606   000465                     PWM1CPRE        equ	1125	;# 
  3607   000466                     PWM1PIPOS       equ	1126	;# 
  3608   000467                     PWM1GIR         equ	1127	;# 
  3609   000468                     PWM1GIE         equ	1128	;# 
  3610   000469                     PWM1CON         equ	1129	;# 
  3611   00046A                     PWM1S1CFG       equ	1130	;# 
  3612   00046B                     PWM1S1P1        equ	1131	;# 
  3613   00046B                     PWM1S1P1L       equ	1131	;# 
  3614   00046C                     PWM1S1P1H       equ	1132	;# 
  3615   00046D                     PWM1S1P2        equ	1133	;# 
  3616   00046D                     PWM1S1P2L       equ	1133	;# 
  3617   00046E                     PWM1S1P2H       equ	1134	;# 
  3618   00046F                     PWM2ERS         equ	1135	;# 
  3619   000470                     PWM2CLK         equ	1136	;# 
  3620   000471                     PWM2LDS         equ	1137	;# 
  3621   000472                     PWM2PR          equ	1138	;# 
  3622   000472                     PWM2PRL         equ	1138	;# 
  3623   000473                     PWM2PRH         equ	1139	;# 
  3624   000474                     PWM2CPRE        equ	1140	;# 
  3625   000475                     PWM2PIPOS       equ	1141	;# 
  3626   000476                     PWM2GIR         equ	1142	;# 
  3627   000477                     PWM2GIE         equ	1143	;# 
  3628   000478                     PWM2CON         equ	1144	;# 
  3629   000479                     PWM2S1CFG       equ	1145	;# 
  3630   00047A                     PWM2S1P1        equ	1146	;# 
  3631   00047A                     PWM2S1P1L       equ	1146	;# 
  3632   00047B                     PWM2S1P1H       equ	1147	;# 
  3633   00047C                     PWM2S1P2        equ	1148	;# 
  3634   00047C                     PWM2S1P2L       equ	1148	;# 
  3635   00047D                     PWM2S1P2H       equ	1149	;# 
  3636   00047E                     PWM3ERS         equ	1150	;# 
  3637   00047F                     PWM3CLK         equ	1151	;# 
  3638   000480                     PWM3LDS         equ	1152	;# 
  3639   000481                     PWM3PR          equ	1153	;# 
  3640   000481                     PWM3PRL         equ	1153	;# 
  3641   000482                     PWM3PRH         equ	1154	;# 
  3642   000483                     PWM3CPRE        equ	1155	;# 
  3643   000484                     PWM3PIPOS       equ	1156	;# 
  3644   000485                     PWM3GIR         equ	1157	;# 
  3645   000486                     PWM3GIE         equ	1158	;# 
  3646   000487                     PWM3CON         equ	1159	;# 
  3647   000488                     PWM3S1CFG       equ	1160	;# 
  3648   000489                     PWM3S1P1        equ	1161	;# 
  3649   000489                     PWM3S1P1L       equ	1161	;# 
  3650   00048A                     PWM3S1P1H       equ	1162	;# 
  3651   00048B                     PWM3S1P2        equ	1163	;# 
  3652   00048B                     PWM3S1P2L       equ	1163	;# 
  3653   00048C                     PWM3S1P2H       equ	1164	;# 
  3654   00048D                     PWM4ERS         equ	1165	;# 
  3655   00048E                     PWM4CLK         equ	1166	;# 
  3656   00048F                     PWM4LDS         equ	1167	;# 
  3657   000490                     PWM4PR          equ	1168	;# 
  3658   000490                     PWM4PRL         equ	1168	;# 
  3659   000491                     PWM4PRH         equ	1169	;# 
  3660   000492                     PWM4CPRE        equ	1170	;# 
  3661   000493                     PWM4PIPOS       equ	1171	;# 
  3662   000494                     PWM4GIR         equ	1172	;# 
  3663   000495                     PWM4GIE         equ	1173	;# 
  3664   000496                     PWM4CON         equ	1174	;# 
  3665   000497                     PWM4S1CFG       equ	1175	;# 
  3666   000498                     PWM4S1P1        equ	1176	;# 
  3667   000498                     PWM4S1P1L       equ	1176	;# 
  3668   000499                     PWM4S1P1H       equ	1177	;# 
  3669   00049A                     PWM4S1P2        equ	1178	;# 
  3670   00049A                     PWM4S1P2L       equ	1178	;# 
  3671   00049B                     PWM4S1P2H       equ	1179	;# 
  3672   00049C                     PWMLOAD         equ	1180	;# 
  3673   00049D                     PWMEN           equ	1181	;# 
  3674   00049E                     PIE0            equ	1182	;# 
  3675   00049F                     PIE1            equ	1183	;# 
  3676   0004A0                     PIE2            equ	1184	;# 
  3677   0004A1                     PIE3            equ	1185	;# 
  3678   0004A2                     PIE4            equ	1186	;# 
  3679   0004A3                     PIE5            equ	1187	;# 
  3680   0004A4                     PIE6            equ	1188	;# 
  3681   0004A5                     PIE7            equ	1189	;# 
  3682   0004A6                     PIE8            equ	1190	;# 
  3683   0004A7                     PIE9            equ	1191	;# 
  3684   0004A8                     PIE10           equ	1192	;# 
  3685   0004A9                     PIE11           equ	1193	;# 
  3686   0004AA                     PIE12           equ	1194	;# 
  3687   0004AB                     PIE13           equ	1195	;# 
  3688   0004AC                     PIE14           equ	1196	;# 
  3689   0004AD                     PIE15           equ	1197	;# 
  3690   0004AE                     PIR0            equ	1198	;# 
  3691   0004AF                     PIR1            equ	1199	;# 
  3692   0004B0                     PIR2            equ	1200	;# 
  3693   0004B1                     PIR3            equ	1201	;# 
  3694   0004B2                     PIR4            equ	1202	;# 
  3695   0004B3                     PIR5            equ	1203	;# 
  3696   0004B4                     PIR6            equ	1204	;# 
  3697   0004B5                     PIR7            equ	1205	;# 
  3698   0004B6                     PIR8            equ	1206	;# 
  3699   0004B7                     PIR9            equ	1207	;# 
  3700   0004B8                     PIR10           equ	1208	;# 
  3701   0004B9                     PIR11           equ	1209	;# 
  3702   0004BA                     PIR12           equ	1210	;# 
  3703   0004BB                     PIR13           equ	1211	;# 
  3704   0004BC                     PIR14           equ	1212	;# 
  3705   0004BD                     PIR15           equ	1213	;# 
  3706   0004BE                     LATA            equ	1214	;# 
  3707   0004BF                     LATB            equ	1215	;# 
  3708   0004C0                     LATC            equ	1216	;# 
  3709   0004C6                     TRISA           equ	1222	;# 
  3710   0004C7                     TRISB           equ	1223	;# 
  3711   0004C8                     TRISC           equ	1224	;# 
  3712   0004CA                     TRISE           equ	1226	;# 
  3713   0004CE                     PORTA           equ	1230	;# 
  3714   0004CF                     PORTB           equ	1231	;# 
  3715   0004D0                     PORTC           equ	1232	;# 
  3716   0004D2                     PORTE           equ	1234	;# 
  3717   0004D6                     INTCON0         equ	1238	;# 
  3718   0004D7                     INTCON1         equ	1239	;# 
  3719   0004D8                     STATUS          equ	1240	;# 
  3720   0004D9                     FSR2            equ	1241	;# 
  3721   0004D9                     FSR2L           equ	1241	;# 
  3722   0004DA                     FSR2H           equ	1242	;# 
  3723   0004DB                     PLUSW2          equ	1243	;# 
  3724   0004DC                     PREINC2         equ	1244	;# 
  3725   0004DD                     POSTDEC2        equ	1245	;# 
  3726   0004DE                     POSTINC2        equ	1246	;# 
  3727   0004DF                     INDF2           equ	1247	;# 
  3728   0004E0                     BSR             equ	1248	;# 
  3729   0004E1                     FSR1            equ	1249	;# 
  3730   0004E1                     FSR1L           equ	1249	;# 
  3731   0004E2                     FSR1H           equ	1250	;# 
  3732   0004E3                     PLUSW1          equ	1251	;# 
  3733   0004E4                     PREINC1         equ	1252	;# 
  3734   0004E5                     POSTDEC1        equ	1253	;# 
  3735   0004E6                     POSTINC1        equ	1254	;# 
  3736   0004E7                     INDF1           equ	1255	;# 
  3737   0004E8                     WREG            equ	1256	;# 
  3738   0004E9                     FSR0            equ	1257	;# 
  3739   0004E9                     FSR0L           equ	1257	;# 
  3740   0004EA                     FSR0H           equ	1258	;# 
  3741   0004EB                     PLUSW0          equ	1259	;# 
  3742   0004EC                     PREINC0         equ	1260	;# 
  3743   0004ED                     POSTDEC0        equ	1261	;# 
  3744   0004EE                     POSTINC0        equ	1262	;# 
  3745   0004EF                     INDF0           equ	1263	;# 
  3746   0004F0                     PCON0           equ	1264	;# 
  3747   0004F1                     PCON1           equ	1265	;# 
  3748   0004F2                     CPUDOZE         equ	1266	;# 
  3749   0004F3                     PROD            equ	1267	;# 
  3750   0004F3                     PRODL           equ	1267	;# 
  3751   0004F4                     PRODH           equ	1268	;# 
  3752   0004F5                     TABLAT          equ	1269	;# 
  3753   0004F6                     TBLPTR          equ	1270	;# 
  3754   0004F6                     TBLPTRL         equ	1270	;# 
  3755   0004F7                     TBLPTRH         equ	1271	;# 
  3756   0004F8                     TBLPTRU         equ	1272	;# 
  3757   0004F9                     PCLAT           equ	1273	;# 
  3758   0004F9                     PCL             equ	1273	;# 
  3759   0004FA                     PCLATH          equ	1274	;# 
  3760   0004FB                     PCLATU          equ	1275	;# 
  3761   0004FC                     STKPTR          equ	1276	;# 
  3762   0004FD                     TOS             equ	1277	;# 
  3763   0004FD                     TOSL            equ	1277	;# 
  3764   0004FE                     TOSH            equ	1278	;# 
  3765   0004FF                     TOSU            equ	1279	;# 
  3766   000038                     BOOTREG         equ	56	;# 
  3767   000039                     CLKRCON         equ	57	;# 
  3768   00003A                     CLKRCLK         equ	58	;# 
  3769   000040                     NVMCON0         equ	64	;# 
  3770   000041                     NVMCON1         equ	65	;# 
  3771   000042                     NVMLOCK         equ	66	;# 
  3772   000043                     NVMADR          equ	67	;# 
  3773   000043                     NVMADRL         equ	67	;# 
  3774   000044                     NVMADRH         equ	68	;# 
  3775   000045                     NVMADRU         equ	69	;# 
  3776   000046                     NVMDAT          equ	70	;# 
  3777   000046                     NVMDATL         equ	70	;# 
  3778   000047                     NVMDATH         equ	71	;# 
  3779   000048                     VREGCON         equ	72	;# 
  3780   000049                     BORCON          equ	73	;# 
  3781   00004A                     HLVDCON0        equ	74	;# 
  3782   00004B                     HLVDCON1        equ	75	;# 
  3783   00004C                     ZCDCON          equ	76	;# 
  3784   000060                     PMD0            equ	96	;# 
  3785   000061                     PMD1            equ	97	;# 
  3786   000062                     PMD2            equ	98	;# 
  3787   000063                     PMD3            equ	99	;# 
  3788   000064                     PMD4            equ	100	;# 
  3789   000065                     PMD5            equ	101	;# 
  3790   000066                     PMD6            equ	102	;# 
  3791   000067                     PMD7            equ	103	;# 
  3792   000068                     PMD8            equ	104	;# 
  3793   00006A                     MD1CON0         equ	106	;# 
  3794   00006B                     MD1CON1         equ	107	;# 
  3795   00006C                     MD1SRC          equ	108	;# 
  3796   00006D                     MD1CARL         equ	109	;# 
  3797   00006E                     MD1CARH         equ	110	;# 
  3798   00006F                     CMOUT           equ	111	;# 
  3799   000070                     CM1CON0         equ	112	;# 
  3800   000071                     CM1CON1         equ	113	;# 
  3801   000072                     CM1NCH          equ	114	;# 
  3802   000073                     CM1PCH          equ	115	;# 
  3803   000074                     CM2CON0         equ	116	;# 
  3804   000075                     CM2CON1         equ	117	;# 
  3805   000076                     CM2NCH          equ	118	;# 
  3806   000077                     CM2PCH          equ	119	;# 
  3807   000078                     WDTCON0         equ	120	;# 
  3808   000079                     WDTCON1         equ	121	;# 
  3809   00007A                     WDTPSL          equ	122	;# 
  3810   00007B                     WDTPSH          equ	123	;# 
  3811   00007C                     WDTTMR          equ	124	;# 
  3812   00007D                     DAC1DAT         equ	125	;# 
  3813   00007D                     DAC1DATL        equ	125	;# 
  3814   00007F                     DAC1CON         equ	127	;# 
  3815   000080                     SPI1RXB         equ	128	;# 
  3816   000081                     SPI1TXB         equ	129	;# 
  3817   000082                     SPI1TCNT        equ	130	;# 
  3818   000082                     SPI1TCNTL       equ	130	;# 
  3819   000083                     SPI1TCNTH       equ	131	;# 
  3820   000084                     SPI1CON0        equ	132	;# 
  3821   000085                     SPI1CON1        equ	133	;# 
  3822   000086                     SPI1CON2        equ	134	;# 
  3823   000087                     SPI1STATUS      equ	135	;# 
  3824   000088                     SPI1TWIDTH      equ	136	;# 
  3825   000089                     SPI1BAUD        equ	137	;# 
  3826   00008A                     SPI1INTF        equ	138	;# 
  3827   00008B                     SPI1INTE        equ	139	;# 
  3828   00008C                     SPI1CLK         equ	140	;# 
  3829   00008D                     SPI2RXB         equ	141	;# 
  3830   00008E                     SPI2TXB         equ	142	;# 
  3831   00008F                     SPI2TCNT        equ	143	;# 
  3832   00008F                     SPI2TCNTL       equ	143	;# 
  3833   000090                     SPI2TCNTH       equ	144	;# 
  3834   000091                     SPI2CON0        equ	145	;# 
  3835   000092                     SPI2CON1        equ	146	;# 
  3836   000093                     SPI2CON2        equ	147	;# 
  3837   000094                     SPI2STATUS      equ	148	;# 
  3838   000095                     SPI2TWIDTH      equ	149	;# 
  3839   000096                     SPI2BAUD        equ	150	;# 
  3840   000097                     SPI2INTF        equ	151	;# 
  3841   000098                     SPI2INTE        equ	152	;# 
  3842   000099                     SPI2CLK         equ	153	;# 
  3843   0000AC                     ACTCON          equ	172	;# 
  3844   0000AD                     OSCCON1         equ	173	;# 
  3845   0000AE                     OSCCON2         equ	174	;# 
  3846   0000AF                     OSCCON3         equ	175	;# 
  3847   0000B0                     OSCTUNE         equ	176	;# 
  3848   0000B1                     OSCFRQ          equ	177	;# 
  3849   0000B1                     OSCFREQ         equ	177	;# 
  3850   0000B2                     OSCSTAT         equ	178	;# 
  3851   0000B2                     OSCSTAT1        equ	178	;# 
  3852   0000B3                     OSCEN           equ	179	;# 
  3853   0000B4                     PRLOCK          equ	180	;# 
  3854   0000B5                     SCANPR          equ	181	;# 
  3855   0000B6                     DMA1PR          equ	182	;# 
  3856   0000B7                     DMA2PR          equ	183	;# 
  3857   0000B8                     DMA3PR          equ	184	;# 
  3858   0000B9                     DMA4PR          equ	185	;# 
  3859   0000BA                     DMA5PR          equ	186	;# 
  3860   0000BB                     DMA6PR          equ	187	;# 
  3861   0000BC                     DMA7PR          equ	188	;# 
  3862   0000BD                     DMA8PR          equ	189	;# 
  3863   0000BE                     MAINPR          equ	190	;# 
  3864   0000BF                     ISRPR           equ	191	;# 
  3865   0000D4                     CLCDATA         equ	212	;# 
  3866   0000D5                     CLCSELECT       equ	213	;# 
  3867   0000D6                     CLCnCON         equ	214	;# 
  3868   0000D7                     CLCnPOL         equ	215	;# 
  3869   0000D8                     CLCnSEL0        equ	216	;# 
  3870   0000D9                     CLCnSEL1        equ	217	;# 
  3871   0000DA                     CLCnSEL2        equ	218	;# 
  3872   0000DB                     CLCnSEL3        equ	219	;# 
  3873   0000DC                     CLCnGLS0        equ	220	;# 
  3874   0000DD                     CLCnGLS1        equ	221	;# 
  3875   0000DE                     CLCnGLS2        equ	222	;# 
  3876   0000DF                     CLCnGLS3        equ	223	;# 
  3877   0000E8                     DMASELECT       equ	232	;# 
  3878   0000E9                     DMAnBUF         equ	233	;# 
  3879   0000EA                     DMAnDCNT        equ	234	;# 
  3880   0000EA                     DMAnDCNTL       equ	234	;# 
  3881   0000EB                     DMAnDCNTH       equ	235	;# 
  3882   0000EC                     DMAnDPTR        equ	236	;# 
  3883   0000EC                     DMAnDPTRL       equ	236	;# 
  3884   0000ED                     DMAnDPTRH       equ	237	;# 
  3885   0000EE                     DMAnDSZ         equ	238	;# 
  3886   0000EE                     DMAnDSZL        equ	238	;# 
  3887   0000EF                     DMAnDSZH        equ	239	;# 
  3888   0000F0                     DMAnDSA         equ	240	;# 
  3889   0000F0                     DMAnDSAL        equ	240	;# 
  3890   0000F1                     DMAnDSAH        equ	241	;# 
  3891   0000F2                     DMAnSCNT        equ	242	;# 
  3892   0000F2                     DMAnSCNTL       equ	242	;# 
  3893   0000F3                     DMAnSCNTH       equ	243	;# 
  3894   0000F4                     DMAnSPTR        equ	244	;# 
  3895   0000F4                     DMAnSPTRL       equ	244	;# 
  3896   0000F5                     DMAnSPTRH       equ	245	;# 
  3897   0000F6                     DMAnSPTRU       equ	246	;# 
  3898   0000F7                     DMAnSSZ         equ	247	;# 
  3899   0000F7                     DMAnSSZL        equ	247	;# 
  3900   0000F8                     DMAnSSZH        equ	248	;# 
  3901   0000F9                     DMAnSSA         equ	249	;# 
  3902   0000F9                     DMAnSSAL        equ	249	;# 
  3903   0000FA                     DMAnSSAH        equ	250	;# 
  3904   0000FB                     DMAnSSAU        equ	251	;# 
  3905   0000FC                     DMAnCON0        equ	252	;# 
  3906   0000FD                     DMAnCON1        equ	253	;# 
  3907   0000FE                     DMAnAIRQ        equ	254	;# 
  3908   0000FF                     DMAnSIRQ        equ	255	;# 
  3909   000100                     C1CONL          equ	256	;# 
  3910   000101                     C1CONH          equ	257	;# 
  3911   000102                     C1CONU          equ	258	;# 
  3912   000103                     C1CONT          equ	259	;# 
  3913   000104                     C1NBTCFGL       equ	260	;# 
  3914   000105                     C1NBTCFGH       equ	261	;# 
  3915   000106                     C1NBTCFGU       equ	262	;# 
  3916   000107                     C1NBTCFGT       equ	263	;# 
  3917   000108                     C1DBTCFGL       equ	264	;# 
  3918   000109                     C1DBTCFGH       equ	265	;# 
  3919   00010A                     C1DBTCFGU       equ	266	;# 
  3920   00010B                     C1DBTCFGT       equ	267	;# 
  3921   00010C                     C1TDCL          equ	268	;# 
  3922   00010D                     C1TDCH          equ	269	;# 
  3923   00010E                     C1TDCU          equ	270	;# 
  3924   000110                     C1TBC           equ	272	;# 
  3925   000110                     C1TBCL          equ	272	;# 
  3926   000111                     C1TBCH          equ	273	;# 
  3927   000112                     C1TBCU          equ	274	;# 
  3928   000113                     C1TBCT          equ	275	;# 
  3929   000114                     C1TSCONL        equ	276	;# 
  3930   000115                     C1TSCONH        equ	277	;# 
  3931   000116                     C1TSCONU        equ	278	;# 
  3932   000117                     C1TSCONT        equ	279	;# 
  3933   000118                     C1VECL          equ	280	;# 
  3934   000119                     C1VECH          equ	281	;# 
  3935   00011A                     C1VECU          equ	282	;# 
  3936   00011B                     C1VECT          equ	283	;# 
  3937   00011C                     C1INTL          equ	284	;# 
  3938   00011D                     C1INTH          equ	285	;# 
  3939   00011E                     C1INTU          equ	286	;# 
  3940   00011F                     C1INTT          equ	287	;# 
  3941   000120                     C1RXIF          equ	288	;# 
  3942   000120                     C1RXIFL         equ	288	;# 
  3943   000121                     C1RXIFH         equ	289	;# 
  3944   000122                     C1RXIFU         equ	290	;# 
  3945   000123                     C1RXIFT         equ	291	;# 
  3946   000124                     C1TXIF          equ	292	;# 
  3947   000124                     C1TXIFL         equ	292	;# 
  3948   000125                     C1TXIFH         equ	293	;# 
  3949   000126                     C1TXIFU         equ	294	;# 
  3950   000127                     C1TXIFT         equ	295	;# 
  3951   000128                     C1RXOVIF        equ	296	;# 
  3952   000128                     C1RXOVIFL       equ	296	;# 
  3953   000129                     C1RXOVIFH       equ	297	;# 
  3954   00012A                     C1RXOVIFU       equ	298	;# 
  3955   00012B                     C1RXOVIFT       equ	299	;# 
  3956   00012C                     C1TXATIF        equ	300	;# 
  3957   00012C                     C1TXATIFL       equ	300	;# 
  3958   00012D                     C1TXATIFH       equ	301	;# 
  3959   00012E                     C1TXATIFU       equ	302	;# 
  3960   00012F                     C1TXATIFT       equ	303	;# 
  3961   000130                     C1TXREQ         equ	304	;# 
  3962   000130                     C1TXREQL        equ	304	;# 
  3963   000131                     C1TXREQH        equ	305	;# 
  3964   000132                     C1TXREQU        equ	306	;# 
  3965   000133                     C1TXREQT        equ	307	;# 
  3966   000134                     C1TRECL         equ	308	;# 
  3967   000135                     C1TRECH         equ	309	;# 
  3968   000136                     C1TRECU         equ	310	;# 
  3969   000137                     C1TRECT         equ	311	;# 
  3970   000138                     C1BDIAG0L       equ	312	;# 
  3971   000139                     C1BDIAG0H       equ	313	;# 
  3972   00013C                     C1BDIAG1L       equ	316	;# 
  3973   00013D                     C1BDIAG1H       equ	317	;# 
  3974   00013E                     C1BDIAG1U       equ	318	;# 
  3975   00013F                     C1BDIAG1T       equ	319	;# 
  3976   000140                     C1TEFCONL       equ	320	;# 
  3977   000141                     C1TEFCONH       equ	321	;# 
  3978   000142                     C1TEFCONU       equ	322	;# 
  3979   000143                     C1TEFCONT       equ	323	;# 
  3980   000144                     C1TEFSTAL       equ	324	;# 
  3981   000145                     C1TEFSTAH       equ	325	;# 
  3982   000146                     C1TEFSTAU       equ	326	;# 
  3983   000147                     C1TEFSTAT       equ	327	;# 
  3984   000148                     C1TEFUA         equ	328	;# 
  3985   000148                     C1TEFUAL        equ	328	;# 
  3986   000149                     C1TEFUAH        equ	329	;# 
  3987   00014A                     C1TEFUAU        equ	330	;# 
  3988   00014B                     C1TEFUAT        equ	331	;# 
  3989   00014C                     C1FIFOBA        equ	332	;# 
  3990   00014C                     C1FIFOBAL       equ	332	;# 
  3991   00014D                     C1FIFOBAH       equ	333	;# 
  3992   00014E                     C1FIFOBAU       equ	334	;# 
  3993   00014F                     C1FIFOBAT       equ	335	;# 
  3994   000150                     C1TXQCONL       equ	336	;# 
  3995   000151                     C1TXQCONH       equ	337	;# 
  3996   000152                     C1TXQCONU       equ	338	;# 
  3997   000153                     C1TXQCONT       equ	339	;# 
  3998   000154                     C1TXQSTAL       equ	340	;# 
  3999   000155                     C1TXQSTAH       equ	341	;# 
  4000   000156                     C1TXQSTAU       equ	342	;# 
  4001   000157                     C1TXQSTAT       equ	343	;# 
  4002   000158                     C1TXQUA         equ	344	;# 
  4003   000158                     C1TXQUAL        equ	344	;# 
  4004   000159                     C1TXQUAH        equ	345	;# 
  4005   00015A                     C1TXQUAU        equ	346	;# 
  4006   00015B                     C1TXQUAT        equ	347	;# 
  4007   00015C                     C1FIFOCON1      equ	348	;# 
  4008   00015C                     C1FIFOCON1L     equ	348	;# 
  4009   00015D                     C1FIFOCON1H     equ	349	;# 
  4010   00015E                     C1FIFOCON1U     equ	350	;# 
  4011   00015F                     C1FIFOCON1T     equ	351	;# 
  4012   000160                     C1FIFOSTA1      equ	352	;# 
  4013   000160                     C1FIFOSTA1L     equ	352	;# 
  4014   000161                     C1FIFOSTA1H     equ	353	;# 
  4015   000162                     C1FIFOSTA1U     equ	354	;# 
  4016   000163                     C1FIFOSTA1T     equ	355	;# 
  4017   000164                     C1FIFOUA1       equ	356	;# 
  4018   000164                     C1FIFOUA1L      equ	356	;# 
  4019   000165                     C1FIFOUA1H      equ	357	;# 
  4020   000166                     C1FIFOUA1U      equ	358	;# 
  4021   000167                     C1FIFOUA1T      equ	359	;# 
  4022   000168                     C1FIFOCON2      equ	360	;# 
  4023   000168                     C1FIFOCON2L     equ	360	;# 
  4024   000169                     C1FIFOCON2H     equ	361	;# 
  4025   00016A                     C1FIFOCON2U     equ	362	;# 
  4026   00016B                     C1FIFOCON2T     equ	363	;# 
  4027   00016C                     C1FIFOSTA2      equ	364	;# 
  4028   00016C                     C1FIFOSTA2L     equ	364	;# 
  4029   00016D                     C1FIFOSTA2H     equ	365	;# 
  4030   00016E                     C1FIFOSTA2U     equ	366	;# 
  4031   00016F                     C1FIFOSTA2T     equ	367	;# 
  4032   000170                     C1FIFOUA2       equ	368	;# 
  4033   000170                     C1FIFOUA2L      equ	368	;# 
  4034   000171                     C1FIFOUA2H      equ	369	;# 
  4035   000172                     C1FIFOUA2U      equ	370	;# 
  4036   000173                     C1FIFOUA2T      equ	371	;# 
  4037   000174                     C1FIFOCON3      equ	372	;# 
  4038   000174                     C1FIFOCON3L     equ	372	;# 
  4039   000175                     C1FIFOCON3H     equ	373	;# 
  4040   000176                     C1FIFOCON3U     equ	374	;# 
  4041   000177                     C1FIFOCON3T     equ	375	;# 
  4042   000178                     C1FIFOSTA3      equ	376	;# 
  4043   000178                     C1FIFOSTA3L     equ	376	;# 
  4044   000179                     C1FIFOSTA3H     equ	377	;# 
  4045   00017A                     C1FIFOSTA3U     equ	378	;# 
  4046   00017B                     C1FIFOSTA3T     equ	379	;# 
  4047   00017C                     C1FIFOUA3       equ	380	;# 
  4048   00017C                     C1FIFOUA3L      equ	380	;# 
  4049   00017D                     C1FIFOUA3H      equ	381	;# 
  4050   00017E                     C1FIFOUA3U      equ	382	;# 
  4051   00017F                     C1FIFOUA3T      equ	383	;# 
  4052   000180                     C1FLTCON0L      equ	384	;# 
  4053   000181                     C1FLTCON0H      equ	385	;# 
  4054   000182                     C1FLTCON0U      equ	386	;# 
  4055   000183                     C1FLTCON0T      equ	387	;# 
  4056   000184                     C1FLTCON1L      equ	388	;# 
  4057   000185                     C1FLTCON1H      equ	389	;# 
  4058   000186                     C1FLTCON1U      equ	390	;# 
  4059   000187                     C1FLTCON1T      equ	391	;# 
  4060   000188                     C1FLTCON2L      equ	392	;# 
  4061   000189                     C1FLTCON2H      equ	393	;# 
  4062   00018A                     C1FLTCON2U      equ	394	;# 
  4063   00018B                     C1FLTCON2T      equ	395	;# 
  4064   00018C                     C1FLTOBJ0       equ	396	;# 
  4065   00018C                     C1FLTOBJ0L      equ	396	;# 
  4066   00018D                     C1FLTOBJ0H      equ	397	;# 
  4067   00018E                     C1FLTOBJ0U      equ	398	;# 
  4068   00018F                     C1FLTOBJ0T      equ	399	;# 
  4069   000190                     C1MASK0         equ	400	;# 
  4070   000190                     C1MASK0L        equ	400	;# 
  4071   000191                     C1MASK0H        equ	401	;# 
  4072   000192                     C1MASK0U        equ	402	;# 
  4073   000193                     C1MASK0T        equ	403	;# 
  4074   000194                     C1FLTOBJ1       equ	404	;# 
  4075   000194                     C1FLTOBJ1L      equ	404	;# 
  4076   000195                     C1FLTOBJ1H      equ	405	;# 
  4077   000196                     C1FLTOBJ1U      equ	406	;# 
  4078   000197                     C1FLTOBJ1T      equ	407	;# 
  4079   000198                     C1MASK1         equ	408	;# 
  4080   000198                     C1MASK1L        equ	408	;# 
  4081   000199                     C1MASK1H        equ	409	;# 
  4082   00019A                     C1MASK1U        equ	410	;# 
  4083   00019B                     C1MASK1T        equ	411	;# 
  4084   00019C                     C1FLTOBJ2       equ	412	;# 
  4085   00019C                     C1FLTOBJ2L      equ	412	;# 
  4086   00019D                     C1FLTOBJ2H      equ	413	;# 
  4087   00019E                     C1FLTOBJ2U      equ	414	;# 
  4088   00019F                     C1FLTOBJ2T      equ	415	;# 
  4089   0001A0                     C1MASK2         equ	416	;# 
  4090   0001A0                     C1MASK2L        equ	416	;# 
  4091   0001A1                     C1MASK2H        equ	417	;# 
  4092   0001A2                     C1MASK2U        equ	418	;# 
  4093   0001A3                     C1MASK2T        equ	419	;# 
  4094   0001A4                     C1FLTOBJ3       equ	420	;# 
  4095   0001A4                     C1FLTOBJ3L      equ	420	;# 
  4096   0001A5                     C1FLTOBJ3H      equ	421	;# 
  4097   0001A6                     C1FLTOBJ3U      equ	422	;# 
  4098   0001A7                     C1FLTOBJ3T      equ	423	;# 
  4099   0001A8                     C1MASK3         equ	424	;# 
  4100   0001A8                     C1MASK3L        equ	424	;# 
  4101   0001A9                     C1MASK3H        equ	425	;# 
  4102   0001AA                     C1MASK3U        equ	426	;# 
  4103   0001AB                     C1MASK3T        equ	427	;# 
  4104   0001AC                     C1FLTOBJ4       equ	428	;# 
  4105   0001AC                     C1FLTOBJ4L      equ	428	;# 
  4106   0001AD                     C1FLTOBJ4H      equ	429	;# 
  4107   0001AE                     C1FLTOBJ4U      equ	430	;# 
  4108   0001AF                     C1FLTOBJ4T      equ	431	;# 
  4109   0001B0                     C1MASK4         equ	432	;# 
  4110   0001B0                     C1MASK4L        equ	432	;# 
  4111   0001B1                     C1MASK4H        equ	433	;# 
  4112   0001B2                     C1MASK4U        equ	434	;# 
  4113   0001B3                     C1MASK4T        equ	435	;# 
  4114   0001B4                     C1FLTOBJ5       equ	436	;# 
  4115   0001B4                     C1FLTOBJ5L      equ	436	;# 
  4116   0001B5                     C1FLTOBJ5H      equ	437	;# 
  4117   0001B6                     C1FLTOBJ5U      equ	438	;# 
  4118   0001B7                     C1FLTOBJ5T      equ	439	;# 
  4119   0001B8                     C1MASK5         equ	440	;# 
  4120   0001B8                     C1MASK5L        equ	440	;# 
  4121   0001B9                     C1MASK5H        equ	441	;# 
  4122   0001BA                     C1MASK5U        equ	442	;# 
  4123   0001BB                     C1MASK5T        equ	443	;# 
  4124   0001BC                     C1FLTOBJ6       equ	444	;# 
  4125   0001BC                     C1FLTOBJ6L      equ	444	;# 
  4126   0001BD                     C1FLTOBJ6H      equ	445	;# 
  4127   0001BE                     C1FLTOBJ6U      equ	446	;# 
  4128   0001BF                     C1FLTOBJ6T      equ	447	;# 
  4129   0001C0                     C1MASK6         equ	448	;# 
  4130   0001C0                     C1MASK6L        equ	448	;# 
  4131   0001C1                     C1MASK6H        equ	449	;# 
  4132   0001C2                     C1MASK6U        equ	450	;# 
  4133   0001C3                     C1MASK6T        equ	451	;# 
  4134   0001C4                     C1FLTOBJ7       equ	452	;# 
  4135   0001C4                     C1FLTOBJ7L      equ	452	;# 
  4136   0001C5                     C1FLTOBJ7H      equ	453	;# 
  4137   0001C6                     C1FLTOBJ7U      equ	454	;# 
  4138   0001C7                     C1FLTOBJ7T      equ	455	;# 
  4139   0001C8                     C1MASK7         equ	456	;# 
  4140   0001C8                     C1MASK7L        equ	456	;# 
  4141   0001C9                     C1MASK7H        equ	457	;# 
  4142   0001CA                     C1MASK7U        equ	458	;# 
  4143   0001CB                     C1MASK7T        equ	459	;# 
  4144   0001CC                     C1FLTOBJ8       equ	460	;# 
  4145   0001CC                     C1FLTOBJ8L      equ	460	;# 
  4146   0001CD                     C1FLTOBJ8H      equ	461	;# 
  4147   0001CE                     C1FLTOBJ8U      equ	462	;# 
  4148   0001CF                     C1FLTOBJ8T      equ	463	;# 
  4149   0001D0                     C1MASK8         equ	464	;# 
  4150   0001D0                     C1MASK8L        equ	464	;# 
  4151   0001D1                     C1MASK8H        equ	465	;# 
  4152   0001D2                     C1MASK8U        equ	466	;# 
  4153   0001D3                     C1MASK8T        equ	467	;# 
  4154   0001D4                     C1FLTOBJ9       equ	468	;# 
  4155   0001D4                     C1FLTOBJ9L      equ	468	;# 
  4156   0001D5                     C1FLTOBJ9H      equ	469	;# 
  4157   0001D6                     C1FLTOBJ9U      equ	470	;# 
  4158   0001D7                     C1FLTOBJ9T      equ	471	;# 
  4159   0001D8                     C1MASK9         equ	472	;# 
  4160   0001D8                     C1MASK9L        equ	472	;# 
  4161   0001D9                     C1MASK9H        equ	473	;# 
  4162   0001DA                     C1MASK9U        equ	474	;# 
  4163   0001DB                     C1MASK9T        equ	475	;# 
  4164   0001DC                     C1FLTOBJ10      equ	476	;# 
  4165   0001DC                     C1FLTOBJ10L     equ	476	;# 
  4166   0001DD                     C1FLTOBJ10H     equ	477	;# 
  4167   0001DE                     C1FLTOBJ10U     equ	478	;# 
  4168   0001DF                     C1FLTOBJ10T     equ	479	;# 
  4169   0001E0                     C1MASK10        equ	480	;# 
  4170   0001E0                     C1MASK10L       equ	480	;# 
  4171   0001E1                     C1MASK10H       equ	481	;# 
  4172   0001E2                     C1MASK10U       equ	482	;# 
  4173   0001E3                     C1MASK10T       equ	483	;# 
  4174   0001E4                     C1FLTOBJ11      equ	484	;# 
  4175   0001E4                     C1FLTOBJ11L     equ	484	;# 
  4176   0001E5                     C1FLTOBJ11H     equ	485	;# 
  4177   0001E6                     C1FLTOBJ11U     equ	486	;# 
  4178   0001E7                     C1FLTOBJ11T     equ	487	;# 
  4179   0001E8                     C1MASK11        equ	488	;# 
  4180   0001E8                     C1MASK11L       equ	488	;# 
  4181   0001E9                     C1MASK11H       equ	489	;# 
  4182   0001EA                     C1MASK11U       equ	490	;# 
  4183   0001EB                     C1MASK11T       equ	491	;# 
  4184   000200                     PPSLOCK         equ	512	;# 
  4185   000201                     RA0PPS          equ	513	;# 
  4186   000202                     RA1PPS          equ	514	;# 
  4187   000203                     RA2PPS          equ	515	;# 
  4188   000204                     RA3PPS          equ	516	;# 
  4189   000205                     RA4PPS          equ	517	;# 
  4190   000206                     RA5PPS          equ	518	;# 
  4191   000207                     RA6PPS          equ	519	;# 
  4192   000208                     RA7PPS          equ	520	;# 
  4193   000209                     RB0PPS          equ	521	;# 
  4194   00020A                     RB1PPS          equ	522	;# 
  4195   00020B                     RB2PPS          equ	523	;# 
  4196   00020C                     RB3PPS          equ	524	;# 
  4197   00020D                     RB4PPS          equ	525	;# 
  4198   00020E                     RB5PPS          equ	526	;# 
  4199   00020F                     RB6PPS          equ	527	;# 
  4200   000210                     RB7PPS          equ	528	;# 
  4201   000211                     RC0PPS          equ	529	;# 
  4202   000212                     RC1PPS          equ	530	;# 
  4203   000213                     RC2PPS          equ	531	;# 
  4204   000214                     RC3PPS          equ	532	;# 
  4205   000215                     RC4PPS          equ	533	;# 
  4206   000216                     RC5PPS          equ	534	;# 
  4207   000217                     RC6PPS          equ	535	;# 
  4208   000218                     RC7PPS          equ	536	;# 
  4209   00023D                     CANRXPPS        equ	573	;# 
  4210   00023E                     INT0PPS         equ	574	;# 
  4211   00023F                     INT1PPS         equ	575	;# 
  4212   000240                     INT2PPS         equ	576	;# 
  4213   000241                     T0CKIPPS        equ	577	;# 
  4214   000242                     T1CKIPPS        equ	578	;# 
  4215   000243                     T1GPPS          equ	579	;# 
  4216   000244                     T3CKIPPS        equ	580	;# 
  4217   000245                     T3GPPS          equ	581	;# 
  4218   000246                     T5CKIPPS        equ	582	;# 
  4219   000247                     T5GPPS          equ	583	;# 
  4220   000248                     T2INPPS         equ	584	;# 
  4221   000249                     T4INPPS         equ	585	;# 
  4222   00024A                     T6INPPS         equ	586	;# 
  4223   00024B                     TUIN0PPS        equ	587	;# 
  4224   00024C                     TUIN1PPS        equ	588	;# 
  4225   00024F                     CCP1PPS         equ	591	;# 
  4226   000250                     CCP2PPS         equ	592	;# 
  4227   000251                     CCP3PPS         equ	593	;# 
  4228   000253                     PWM1ERSPPS      equ	595	;# 
  4229   000254                     PWM2ERSPPS      equ	596	;# 
  4230   000255                     PWM3ERSPPS      equ	597	;# 
  4231   000256                     PWM4ERSPPS      equ	598	;# 
  4232   000257                     PWMIN0PPS       equ	599	;# 
  4233   000258                     PWMIN1PPS       equ	600	;# 
  4234   000259                     SMT1WINPPS      equ	601	;# 
  4235   00025A                     SMT1SIGPPS      equ	602	;# 
  4236   00025B                     CWG1PPS         equ	603	;# 
  4237   00025B                     CWG1INPPS       equ	603	;# 
  4238   00025C                     CWG2PPS         equ	604	;# 
  4239   00025C                     CWG2INPPS       equ	604	;# 
  4240   00025D                     CWG3PPS         equ	605	;# 
  4241   00025D                     CWG3INPPS       equ	605	;# 
  4242   00025E                     MD1CARLPPS      equ	606	;# 
  4243   00025E                     MDCARLPPS       equ	606	;# 
  4244   00025F                     MD1CARHPPS      equ	607	;# 
  4245   00025F                     MDCARHPPS       equ	607	;# 
  4246   000260                     MD1SRCPPS       equ	608	;# 
  4247   000260                     MDSRCPPS        equ	608	;# 
  4248   000261                     CLCIN0PPS       equ	609	;# 
  4249   000262                     CLCIN1PPS       equ	610	;# 
  4250   000263                     CLCIN2PPS       equ	611	;# 
  4251   000264                     CLCIN3PPS       equ	612	;# 
  4252   000265                     CLCIN4PPS       equ	613	;# 
  4253   000266                     CLCIN5PPS       equ	614	;# 
  4254   000267                     CLCIN6PPS       equ	615	;# 
  4255   000268                     CLCIN7PPS       equ	616	;# 
  4256   000269                     ADACTPPS        equ	617	;# 
  4257   00026A                     SPI1SCKPPS      equ	618	;# 
  4258   00026B                     SPI1SDIPPS      equ	619	;# 
  4259   00026C                     SPI1SSPPS       equ	620	;# 
  4260   00026D                     SPI2SCKPPS      equ	621	;# 
  4261   00026E                     SPI2SDIPPS      equ	622	;# 
  4262   00026F                     SPI2SSPPS       equ	623	;# 
  4263   000270                     I2C1SDAPPS      equ	624	;# 
  4264   000271                     I2C1SCLPPS      equ	625	;# 
  4265   000272                     U1RXPPS         equ	626	;# 
  4266   000273                     U1CTSPPS        equ	627	;# 
  4267   000274                     U2RXPPS         equ	628	;# 
  4268   000275                     U2CTSPPS        equ	629	;# 
  4269   000276                     U3RXPPS         equ	630	;# 
  4270   000277                     U3CTSPPS        equ	631	;# 
  4271   000278                     U4RXPPS         equ	632	;# 
  4272   000279                     U4CTSPPS        equ	633	;# 
  4273   00027A                     U5RXPPS         equ	634	;# 
  4274   00027B                     U5CTSPPS        equ	635	;# 
  4275   000286                     RC4I2C          equ	646	;# 
  4276   000287                     RC3I2C          equ	647	;# 
  4277   000288                     RB2I2C          equ	648	;# 
  4278   000289                     RB1I2C          equ	649	;# 
  4279   00028A                     I2C1RXB         equ	650	;# 
  4280   00028B                     I2C1TXB         equ	651	;# 
  4281   00028C                     I2C1CNTL        equ	652	;# 
  4282   00028D                     I2C1CNTH        equ	653	;# 
  4283   00028E                     I2C1ADB0        equ	654	;# 
  4284   00028F                     I2C1ADB1        equ	655	;# 
  4285   000290                     I2C1ADR0        equ	656	;# 
  4286   000291                     I2C1ADR1        equ	657	;# 
  4287   000292                     I2C1ADR2        equ	658	;# 
  4288   000293                     I2C1ADR3        equ	659	;# 
  4289   000294                     I2C1CON0        equ	660	;# 
  4290   000295                     I2C1CON1        equ	661	;# 
  4291   000296                     I2C1CON2        equ	662	;# 
  4292   000297                     I2C1ERR         equ	663	;# 
  4293   000298                     I2C1STAT0       equ	664	;# 
  4294   000299                     I2C1STAT1       equ	665	;# 
  4295   00029A                     I2C1PIR         equ	666	;# 
  4296   00029B                     I2C1PIE         equ	667	;# 
  4297   00029C                     I2C1BTO         equ	668	;# 
  4298   00029D                     I2C1BAUD        equ	669	;# 
  4299   00029E                     I2C1CLK         equ	670	;# 
  4300   00029F                     I2C1BTOC        equ	671	;# 
  4301   0002A1                     U1RXB           equ	673	;# 
  4302   0002A1                     U1RXBL          equ	673	;# 
  4303   0002A2                     U1RXCHK         equ	674	;# 
  4304   0002A3                     U1TXB           equ	675	;# 
  4305   0002A3                     U1TXBL          equ	675	;# 
  4306   0002A4                     U1TXCHK         equ	676	;# 
  4307   0002A5                     U1P1            equ	677	;# 
  4308   0002A5                     U1P1L           equ	677	;# 
  4309   0002A6                     U1P1H           equ	678	;# 
  4310   0002A7                     U1P2            equ	679	;# 
  4311   0002A7                     U1P2L           equ	679	;# 
  4312   0002A8                     U1P2H           equ	680	;# 
  4313   0002A9                     U1P3            equ	681	;# 
  4314   0002A9                     U1P3L           equ	681	;# 
  4315   0002AA                     U1P3H           equ	682	;# 
  4316   0002AB                     U1CON0          equ	683	;# 
  4317   0002AC                     U1CON1          equ	684	;# 
  4318   0002AD                     U1CON2          equ	685	;# 
  4319   0002AE                     U1BRG           equ	686	;# 
  4320   0002AE                     U1BRGL          equ	686	;# 
  4321   0002AF                     U1BRGH          equ	687	;# 
  4322   0002B0                     U1FIFO          equ	688	;# 
  4323   0002B1                     U1UIR           equ	689	;# 
  4324   0002B2                     U1ERRIR         equ	690	;# 
  4325   0002B3                     U1ERRIE         equ	691	;# 
  4326   0002B4                     U2RXB           equ	692	;# 
  4327   0002B4                     U2RXBL          equ	692	;# 
  4328   0002B5                     U2RXCHK         equ	693	;# 
  4329   0002B6                     U2TXB           equ	694	;# 
  4330   0002B6                     U2TXBL          equ	694	;# 
  4331   0002B7                     U2TXCHK         equ	695	;# 
  4332   0002B8                     U2P1            equ	696	;# 
  4333   0002B8                     U2P1L           equ	696	;# 
  4334   0002B9                     U2P1H           equ	697	;# 
  4335   0002BA                     U2P2            equ	698	;# 
  4336   0002BA                     U2P2L           equ	698	;# 
  4337   0002BB                     U2P2H           equ	699	;# 
  4338   0002BC                     U2P3            equ	700	;# 
  4339   0002BC                     U2P3L           equ	700	;# 
  4340   0002BD                     U2P3H           equ	701	;# 
  4341   0002BE                     U2CON0          equ	702	;# 
  4342   0002BF                     U2CON1          equ	703	;# 
  4343   0002C0                     U2CON2          equ	704	;# 
  4344   0002C1                     U2BRG           equ	705	;# 
  4345   0002C1                     U2BRGL          equ	705	;# 
  4346   0002C2                     U2BRGH          equ	706	;# 
  4347   0002C3                     U2FIFO          equ	707	;# 
  4348   0002C4                     U2UIR           equ	708	;# 
  4349   0002C5                     U2ERRIR         equ	709	;# 
  4350   0002C6                     U2ERRIE         equ	710	;# 
  4351   0002C7                     U3RXB           equ	711	;# 
  4352   0002C7                     U3RXBL          equ	711	;# 
  4353   0002C9                     U3TXB           equ	713	;# 
  4354   0002C9                     U3TXBL          equ	713	;# 
  4355   0002CB                     U3P1            equ	715	;# 
  4356   0002CB                     U3P1L           equ	715	;# 
  4357   0002CD                     U3P2            equ	717	;# 
  4358   0002CD                     U3P2L           equ	717	;# 
  4359   0002CF                     U3P3            equ	719	;# 
  4360   0002CF                     U3P3L           equ	719	;# 
  4361   0002D1                     U3CON0          equ	721	;# 
  4362   0002D2                     U3CON1          equ	722	;# 
  4363   0002D3                     U3CON2          equ	723	;# 
  4364   0002D4                     U3BRG           equ	724	;# 
  4365   0002D4                     U3BRGL          equ	724	;# 
  4366   0002D5                     U3BRGH          equ	725	;# 
  4367   0002D6                     U3FIFO          equ	726	;# 
  4368   0002D7                     U3UIR           equ	727	;# 
  4369   0002D8                     U3ERRIR         equ	728	;# 
  4370   0002D9                     U3ERRIE         equ	729	;# 
  4371   0002DA                     U4RXB           equ	730	;# 
  4372   0002DA                     U4RXBL          equ	730	;# 
  4373   0002DC                     U4TXB           equ	732	;# 
  4374   0002DC                     U4TXBL          equ	732	;# 
  4375   0002DE                     U4P1            equ	734	;# 
  4376   0002DE                     U4P1L           equ	734	;# 
  4377   0002E0                     U4P2            equ	736	;# 
  4378   0002E0                     U4P2L           equ	736	;# 
  4379   0002E2                     U4P3            equ	738	;# 
  4380   0002E2                     U4P3L           equ	738	;# 
  4381   0002E4                     U4CON0          equ	740	;# 
  4382   0002E5                     U4CON1          equ	741	;# 
  4383   0002E6                     U4CON2          equ	742	;# 
  4384   0002E7                     U4BRG           equ	743	;# 
  4385   0002E7                     U4BRGL          equ	743	;# 
  4386   0002E8                     U4BRGH          equ	744	;# 
  4387   0002E9                     U4FIFO          equ	745	;# 
  4388   0002EA                     U4UIR           equ	746	;# 
  4389   0002EB                     U4ERRIR         equ	747	;# 
  4390   0002EC                     U4ERRIE         equ	748	;# 
  4391   0002ED                     U5RXB           equ	749	;# 
  4392   0002ED                     U5RXBL          equ	749	;# 
  4393   0002EF                     U5TXB           equ	751	;# 
  4394   0002EF                     U5TXBL          equ	751	;# 
  4395   0002F1                     U5P1            equ	753	;# 
  4396   0002F1                     U5P1L           equ	753	;# 
  4397   0002F3                     U5P2            equ	755	;# 
  4398   0002F3                     U5P2L           equ	755	;# 
  4399   0002F5                     U5P3            equ	757	;# 
  4400   0002F5                     U5P3L           equ	757	;# 
  4401   0002F7                     U5CON0          equ	759	;# 
  4402   0002F8                     U5CON1          equ	760	;# 
  4403   0002F9                     U5CON2          equ	761	;# 
  4404   0002FA                     U5BRG           equ	762	;# 
  4405   0002FA                     U5BRGL          equ	762	;# 
  4406   0002FB                     U5BRGH          equ	763	;# 
  4407   0002FC                     U5FIFO          equ	764	;# 
  4408   0002FD                     U5UIR           equ	765	;# 
  4409   0002FE                     U5ERRIR         equ	766	;# 
  4410   0002FF                     U5ERRIE         equ	767	;# 
  4411   000300                     SMT1TMR         equ	768	;# 
  4412   000300                     SMT1TMRL        equ	768	;# 
  4413   000301                     SMT1TMRH        equ	769	;# 
  4414   000302                     SMT1TMRU        equ	770	;# 
  4415   000303                     SMT1CPR         equ	771	;# 
  4416   000303                     SMT1CPRL        equ	771	;# 
  4417   000304                     SMT1CPRH        equ	772	;# 
  4418   000305                     SMT1CPRU        equ	773	;# 
  4419   000306                     SMT1CPW         equ	774	;# 
  4420   000306                     SMT1CPWL        equ	774	;# 
  4421   000307                     SMT1CPWH        equ	775	;# 
  4422   000308                     SMT1CPWU        equ	776	;# 
  4423   000309                     SMT1PR          equ	777	;# 
  4424   000309                     SMT1PRL         equ	777	;# 
  4425   00030A                     SMT1PRH         equ	778	;# 
  4426   00030B                     SMT1PRU         equ	779	;# 
  4427   00030C                     SMT1CON0        equ	780	;# 
  4428   00030D                     SMT1CON1        equ	781	;# 
  4429   00030E                     SMT1STAT        equ	782	;# 
  4430   00030F                     SMT1CLK         equ	783	;# 
  4431   000310                     SMT1SIG         equ	784	;# 
  4432   000311                     SMT1WIN         equ	785	;# 
  4433   000318                     TMR0L           equ	792	;# 
  4434   000318                     TMR0            equ	792	;# 
  4435   000319                     TMR0H           equ	793	;# 
  4436   000319                     PR0             equ	793	;# 
  4437   00031A                     T0CON0          equ	794	;# 
  4438   00031B                     T0CON1          equ	795	;# 
  4439   00031C                     TMR1            equ	796	;# 
  4440   00031C                     TMR1L           equ	796	;# 
  4441   00031D                     TMR1H           equ	797	;# 
  4442   00031E                     T1CON           equ	798	;# 
  4443   00031E                     TMR1CON         equ	798	;# 
  4444   00031F                     T1GCON          equ	799	;# 
  4445   00031F                     TMR1GCON        equ	799	;# 
  4446   000320                     T1GATE          equ	800	;# 
  4447   000320                     TMR1GATE        equ	800	;# 
  4448   000321                     T1CLK           equ	801	;# 
  4449   000321                     TMR1CLK         equ	801	;# 
  4450   000321                     PR1             equ	801	;# 
  4451   000322                     T2TMR           equ	802	;# 
  4452   000322                     TMR2            equ	802	;# 
  4453   000323                     T2PR            equ	803	;# 
  4454   000323                     PR2             equ	803	;# 
  4455   000324                     T2CON           equ	804	;# 
  4456   000325                     T2HLT           equ	805	;# 
  4457   000326                     T2CLKCON        equ	806	;# 
  4458   000326                     T2CLK           equ	806	;# 
  4459   000327                     T2RST           equ	807	;# 
  4460   000328                     TMR3            equ	808	;# 
  4461   000328                     TMR3L           equ	808	;# 
  4462   000329                     TMR3H           equ	809	;# 
  4463   00032A                     T3CON           equ	810	;# 
  4464   00032A                     TMR3CON         equ	810	;# 
  4465   00032B                     T3GCON          equ	811	;# 
  4466   00032B                     TMR3GCON        equ	811	;# 
  4467   00032C                     T3GATE          equ	812	;# 
  4468   00032C                     TMR3GATE        equ	812	;# 
  4469   00032D                     T3CLK           equ	813	;# 
  4470   00032D                     TMR3CLK         equ	813	;# 
  4471   00032D                     PR3             equ	813	;# 
  4472   00032E                     T4TMR           equ	814	;# 
  4473   00032E                     TMR4            equ	814	;# 
  4474   00032F                     T4PR            equ	815	;# 
  4475   00032F                     PR4             equ	815	;# 
  4476   000330                     T4CON           equ	816	;# 
  4477   000331                     T4HLT           equ	817	;# 
  4478   000332                     T4CLKCON        equ	818	;# 
  4479   000332                     T4CLK           equ	818	;# 
  4480   000333                     T4RST           equ	819	;# 
  4481   000334                     TMR5            equ	820	;# 
  4482   000334                     TMR5L           equ	820	;# 
  4483   000335                     TMR5H           equ	821	;# 
  4484   000336                     T5CON           equ	822	;# 
  4485   000336                     TMR5CON         equ	822	;# 
  4486   000337                     T5GCON          equ	823	;# 
  4487   000337                     TMR5GCON        equ	823	;# 
  4488   000338                     T5GATE          equ	824	;# 
  4489   000338                     TMR5GATE        equ	824	;# 
  4490   000339                     T5CLK           equ	825	;# 
  4491   000339                     TMR5CLK         equ	825	;# 
  4492   000339                     PR5             equ	825	;# 
  4493   00033A                     T6TMR           equ	826	;# 
  4494   00033A                     TMR6            equ	826	;# 
  4495   00033B                     T6PR            equ	827	;# 
  4496   00033B                     PR6             equ	827	;# 
  4497   00033C                     T6CON           equ	828	;# 
  4498   00033D                     T6HLT           equ	829	;# 
  4499   00033E                     T6CLKCON        equ	830	;# 
  4500   00033E                     T6CLK           equ	830	;# 
  4501   00033F                     T6RST           equ	831	;# 
  4502   000340                     CCPR1           equ	832	;# 
  4503   000340                     CCPR1L          equ	832	;# 
  4504   000341                     CCPR1H          equ	833	;# 
  4505   000342                     CCP1CON         equ	834	;# 
  4506   000343                     CCP1CAP         equ	835	;# 
  4507   000344                     CCPR2           equ	836	;# 
  4508   000344                     CCPR2L          equ	836	;# 
  4509   000345                     CCPR2H          equ	837	;# 
  4510   000346                     CCP2CON         equ	838	;# 
  4511   000347                     CCP2CAP         equ	839	;# 
  4512   000348                     CCPR3           equ	840	;# 
  4513   000348                     CCPR3L          equ	840	;# 
  4514   000349                     CCPR3H          equ	841	;# 
  4515   00034A                     CCP3CON         equ	842	;# 
  4516   00034B                     CCP3CAP         equ	843	;# 
  4517   00034C                     CCPTMRS0        equ	844	;# 
  4518   00034F                     CRCDATA         equ	847	;# 
  4519   00034F                     CRCDATAL        equ	847	;# 
  4520   000350                     CRCDATAH        equ	848	;# 
  4521   000351                     CRCDATAU        equ	849	;# 
  4522   000352                     CRCDATAT        equ	850	;# 
  4523   000353                     CRCOUT          equ	851	;# 
  4524   000353                     CRCSHFT         equ	851	;# 
  4525   000353                     CRCXOR          equ	851	;# 
  4526   000353                     CRCOUTL         equ	851	;# 
  4527   000353                     CRCSHFTL        equ	851	;# 
  4528   000353                     CRCSHIFTL       equ	851	;# 
  4529   000353                     CRCXORL         equ	851	;# 
  4530   000354                     CRCOUTH         equ	852	;# 
  4531   000354                     CRCSHFTH        equ	852	;# 
  4532   000354                     CRCSHIFTH       equ	852	;# 
  4533   000354                     CRCXORH         equ	852	;# 
  4534   000355                     CRCOUTU         equ	853	;# 
  4535   000355                     CRCSHFTU        equ	853	;# 
  4536   000355                     CRCSHIFTU       equ	853	;# 
  4537   000355                     CRCXORU         equ	853	;# 
  4538   000356                     CRCOUTT         equ	854	;# 
  4539   000356                     CRCSHFTT        equ	854	;# 
  4540   000356                     CRCSHIFTT       equ	854	;# 
  4541   000356                     CRCXORT         equ	854	;# 
  4542   000357                     CRCCON0         equ	855	;# 
  4543   000358                     CRCCON1         equ	856	;# 
  4544   000359                     CRCCON2         equ	857	;# 
  4545   00035A                     SCANLADR        equ	858	;# 
  4546   00035A                     SCANLADRL       equ	858	;# 
  4547   00035B                     SCANLADRH       equ	859	;# 
  4548   00035C                     SCANLADRU       equ	860	;# 
  4549   00035D                     SCANHADR        equ	861	;# 
  4550   00035D                     SCANHADRL       equ	861	;# 
  4551   00035E                     SCANHADRH       equ	862	;# 
  4552   00035F                     SCANHADRU       equ	863	;# 
  4553   000360                     SCANCON0        equ	864	;# 
  4554   000361                     SCANTRIG        equ	865	;# 
  4555   000362                     IPR0            equ	866	;# 
  4556   000363                     IPR1            equ	867	;# 
  4557   000364                     IPR2            equ	868	;# 
  4558   000365                     IPR3            equ	869	;# 
  4559   000366                     IPR4            equ	870	;# 
  4560   000367                     IPR5            equ	871	;# 
  4561   000368                     IPR6            equ	872	;# 
  4562   000369                     IPR7            equ	873	;# 
  4563   00036A                     IPR8            equ	874	;# 
  4564   00036B                     IPR9            equ	875	;# 
  4565   00036C                     IPR10           equ	876	;# 
  4566   00036D                     IPR11           equ	877	;# 
  4567   00036E                     IPR12           equ	878	;# 
  4568   00036F                     IPR13           equ	879	;# 
  4569   000370                     IPR14           equ	880	;# 
  4570   000371                     IPR15           equ	881	;# 
  4571   000373                     STATUS_CSHAD    equ	883	;# 
  4572   000374                     WREG_CSHAD      equ	884	;# 
  4573   000375                     BSR_CSHAD       equ	885	;# 
  4574   000376                     SHADCON         equ	886	;# 
  4575   000377                     STATUS_SHAD     equ	887	;# 
  4576   000378                     WREG_SHAD       equ	888	;# 
  4577   000379                     BSR_SHAD        equ	889	;# 
  4578   00037A                     PCLATH_SHAD     equ	890	;# 
  4579   00037B                     PCLATU_SHAD     equ	891	;# 
  4580   00037C                     FSR0SH          equ	892	;# 
  4581   00037C                     FSR0L_SHAD      equ	892	;# 
  4582   00037D                     FSR0H_SHAD      equ	893	;# 
  4583   00037E                     FSR1SH          equ	894	;# 
  4584   00037E                     FSR1L_SHAD      equ	894	;# 
  4585   00037F                     FSR1H_SHAD      equ	895	;# 
  4586   000380                     FSR2SH          equ	896	;# 
  4587   000380                     FSR2L_SHAD      equ	896	;# 
  4588   000381                     FSR2H_SHAD      equ	897	;# 
  4589   000382                     PRODSH          equ	898	;# 
  4590   000382                     PRODL_SHAD      equ	898	;# 
  4591   000383                     PRODH_SHAD      equ	899	;# 
  4592   000387                     TU16ACON0       equ	903	;# 
  4593   000388                     TU16ACON1       equ	904	;# 
  4594   000389                     TU16AHLT        equ	905	;# 
  4595   00038A                     TU16APS         equ	906	;# 
  4596   00038B                     TU16ATMR        equ	907	;# 
  4597   00038B                     TU16ACR         equ	907	;# 
  4598   00038B                     TU16ATMRL       equ	907	;# 
  4599   00038B                     TU16ACRL        equ	907	;# 
  4600   00038C                     TU16ATMRH       equ	908	;# 
  4601   00038C                     TU16ACRH        equ	908	;# 
  4602   00038D                     TU16APR         equ	909	;# 
  4603   00038D                     TU16APRL        equ	909	;# 
  4604   00038E                     TU16APRH        equ	910	;# 
  4605   00038F                     TU16ACLK        equ	911	;# 
  4606   000390                     TU16AERS        equ	912	;# 
  4607   000393                     TU16BCON0       equ	915	;# 
  4608   000394                     TU16BCON1       equ	916	;# 
  4609   000395                     TU16BHLT        equ	917	;# 
  4610   000396                     TU16BPS         equ	918	;# 
  4611   000397                     TU16BTMR        equ	919	;# 
  4612   000397                     TU16BCR         equ	919	;# 
  4613   000397                     TU16BTMRL       equ	919	;# 
  4614   000397                     TU16BCRL        equ	919	;# 
  4615   000398                     TU16BTMRH       equ	920	;# 
  4616   000398                     TU16BCRH        equ	920	;# 
  4617   000399                     TU16BPR         equ	921	;# 
  4618   000399                     TU16BPRL        equ	921	;# 
  4619   00039A                     TU16BPRH        equ	922	;# 
  4620   00039B                     TU16BCLK        equ	923	;# 
  4621   00039C                     TU16BERS        equ	924	;# 
  4622   0003BB                     TUCHAIN         equ	955	;# 
  4623   0003BC                     CWG1CLK         equ	956	;# 
  4624   0003BC                     CWG1CLKCON      equ	956	;# 
  4625   0003BD                     CWG1ISM         equ	957	;# 
  4626   0003BE                     CWG1DBR         equ	958	;# 
  4627   0003BF                     CWG1DBF         equ	959	;# 
  4628   0003C0                     CWG1CON0        equ	960	;# 
  4629   0003C1                     CWG1CON1        equ	961	;# 
  4630   0003C2                     CWG1AS0         equ	962	;# 
  4631   0003C3                     CWG1AS1         equ	963	;# 
  4632   0003C4                     CWG1STR         equ	964	;# 
  4633   0003C5                     CWG2CLK         equ	965	;# 
  4634   0003C5                     CWG2CLKCON      equ	965	;# 
  4635   0003C6                     CWG2ISM         equ	966	;# 
  4636   0003C7                     CWG2DBR         equ	967	;# 
  4637   0003C8                     CWG2DBF         equ	968	;# 
  4638   0003C9                     CWG2CON0        equ	969	;# 
  4639   0003CA                     CWG2CON1        equ	970	;# 
  4640   0003CB                     CWG2AS0         equ	971	;# 
  4641   0003CC                     CWG2AS1         equ	972	;# 
  4642   0003CD                     CWG2STR         equ	973	;# 
  4643   0003CE                     CWG3CLK         equ	974	;# 
  4644   0003CE                     CWG3CLKCON      equ	974	;# 
  4645   0003CF                     CWG3ISM         equ	975	;# 
  4646   0003D0                     CWG3DBR         equ	976	;# 
  4647   0003D1                     CWG3DBF         equ	977	;# 
  4648   0003D2                     CWG3CON0        equ	978	;# 
  4649   0003D3                     CWG3CON1        equ	979	;# 
  4650   0003D4                     CWG3AS0         equ	980	;# 
  4651   0003D5                     CWG3AS1         equ	981	;# 
  4652   0003D6                     CWG3STR         equ	982	;# 
  4653   0003D7                     FVRCON          equ	983	;# 
  4654   0003D8                     ADCPCON         equ	984	;# 
  4655   0003D8                     ADCP            equ	984	;# 
  4656   0003D9                     ADLTH           equ	985	;# 
  4657   0003D9                     ADLTHL          equ	985	;# 
  4658   0003DA                     ADLTHH          equ	986	;# 
  4659   0003DB                     ADUTH           equ	987	;# 
  4660   0003DB                     ADUTHL          equ	987	;# 
  4661   0003DC                     ADUTHH          equ	988	;# 
  4662   0003DD                     ADERR           equ	989	;# 
  4663   0003DD                     ADERRL          equ	989	;# 
  4664   0003DE                     ADERRH          equ	990	;# 
  4665   0003DF                     ADSTPT          equ	991	;# 
  4666   0003DF                     ADSTPTL         equ	991	;# 
  4667   0003E0                     ADSTPTH         equ	992	;# 
  4668   0003E1                     ADFLTR          equ	993	;# 
  4669   0003E1                     ADFLTRL         equ	993	;# 
  4670   0003E2                     ADFLTRH         equ	994	;# 
  4671   0003E3                     ADACC           equ	995	;# 
  4672   0003E3                     ADACCL          equ	995	;# 
  4673   0003E4                     ADACCH          equ	996	;# 
  4674   0003E5                     ADACCU          equ	997	;# 
  4675   0003E6                     ADCNT           equ	998	;# 
  4676   0003E7                     ADRPT           equ	999	;# 
  4677   0003E8                     ADPREV          equ	1000	;# 
  4678   0003E8                     ADPREVL         equ	1000	;# 
  4679   0003E9                     ADPREVH         equ	1001	;# 
  4680   0003EA                     ADRES           equ	1002	;# 
  4681   0003EA                     ADRESL          equ	1002	;# 
  4682   0003EB                     ADRESH          equ	1003	;# 
  4683   0003EC                     ADPCH           equ	1004	;# 
  4684   0003EE                     ADACQ           equ	1006	;# 
  4685   0003EE                     ADACQL          equ	1006	;# 
  4686   0003EF                     ADACQH          equ	1007	;# 
  4687   0003F0                     ADCAP           equ	1008	;# 
  4688   0003F1                     ADPRE           equ	1009	;# 
  4689   0003F1                     ADPREL          equ	1009	;# 
  4690   0003F2                     ADPREH          equ	1010	;# 
  4691   0003F3                     ADCON0          equ	1011	;# 
  4692   0003F4                     ADCON1          equ	1012	;# 
  4693   0003F5                     ADCON2          equ	1013	;# 
  4694   0003F6                     ADCON3          equ	1014	;# 
  4695   0003F7                     ADSTAT          equ	1015	;# 
  4696   0003F8                     ADREF           equ	1016	;# 
  4697   0003F9                     ADACT           equ	1017	;# 
  4698   0003FA                     ADCLK           equ	1018	;# 
  4699   0003FB                     ADCTX           equ	1019	;# 
  4700   0003FC                     ADCSEL1         equ	1020	;# 
  4701   0003FD                     ADCSEL2         equ	1021	;# 
  4702   0003FE                     ADCSEL3         equ	1022	;# 
  4703   0003FF                     ADCSEL4         equ	1023	;# 
  4704   000400                     ANSELA          equ	1024	;# 
  4705   000401                     WPUA            equ	1025	;# 
  4706   000402                     ODCONA          equ	1026	;# 
  4707   000403                     SLRCONA         equ	1027	;# 
  4708   000404                     INLVLA          equ	1028	;# 
  4709   000405                     IOCAP           equ	1029	;# 
  4710   000406                     IOCAN           equ	1030	;# 
  4711   000407                     IOCAF           equ	1031	;# 
  4712   000408                     ANSELB          equ	1032	;# 
  4713   000409                     WPUB            equ	1033	;# 
  4714   00040A                     ODCONB          equ	1034	;# 
  4715   00040B                     SLRCONB         equ	1035	;# 
  4716   00040C                     INLVLB          equ	1036	;# 
  4717   00040D                     IOCBP           equ	1037	;# 
  4718   00040E                     IOCBN           equ	1038	;# 
  4719   00040F                     IOCBF           equ	1039	;# 
  4720   000410                     ANSELC          equ	1040	;# 
  4721   000411                     WPUC            equ	1041	;# 
  4722   000412                     ODCONC          equ	1042	;# 
  4723   000413                     SLRCONC         equ	1043	;# 
  4724   000414                     INLVLC          equ	1044	;# 
  4725   000415                     IOCCP           equ	1045	;# 
  4726   000416                     IOCCN           equ	1046	;# 
  4727   000417                     IOCCF           equ	1047	;# 
  4728   000421                     WPUE            equ	1057	;# 
  4729   000424                     INLVLE          equ	1060	;# 
  4730   000425                     IOCEP           equ	1061	;# 
  4731   000426                     IOCEN           equ	1062	;# 
  4732   000427                     IOCEF           equ	1063	;# 
  4733   000440                     NCO1ACC         equ	1088	;# 
  4734   000440                     NCO1ACCL        equ	1088	;# 
  4735   000441                     NCO1ACCH        equ	1089	;# 
  4736   000442                     NCO1ACCU        equ	1090	;# 
  4737   000443                     NCO1INC         equ	1091	;# 
  4738   000443                     NCO1INCL        equ	1091	;# 
  4739   000444                     NCO1INCH        equ	1092	;# 
  4740   000445                     NCO1INCU        equ	1093	;# 
  4741   000446                     NCO1CON         equ	1094	;# 
  4742   000447                     NCO1CLK         equ	1095	;# 
  4743   000448                     NCO2ACC         equ	1096	;# 
  4744   000448                     NCO2ACCL        equ	1096	;# 
  4745   000449                     NCO2ACCH        equ	1097	;# 
  4746   00044A                     NCO2ACCU        equ	1098	;# 
  4747   00044B                     NCO2INC         equ	1099	;# 
  4748   00044B                     NCO2INCL        equ	1099	;# 
  4749   00044C                     NCO2INCH        equ	1100	;# 
  4750   00044D                     NCO2INCU        equ	1101	;# 
  4751   00044E                     NCO2CON         equ	1102	;# 
  4752   00044F                     NCO2CLK         equ	1103	;# 
  4753   000450                     NCO3ACC         equ	1104	;# 
  4754   000450                     NCO3ACCL        equ	1104	;# 
  4755   000451                     NCO3ACCH        equ	1105	;# 
  4756   000452                     NCO3ACCU        equ	1106	;# 
  4757   000453                     NCO3INC         equ	1107	;# 
  4758   000453                     NCO3INCL        equ	1107	;# 
  4759   000454                     NCO3INCH        equ	1108	;# 
  4760   000455                     NCO3INCU        equ	1109	;# 
  4761   000456                     NCO3CON         equ	1110	;# 
  4762   000457                     NCO3CLK         equ	1111	;# 
  4763   000458                     FSCMCON         equ	1112	;# 
  4764   000459                     IVTLOCK         equ	1113	;# 
  4765   00045A                     IVTAD           equ	1114	;# 
  4766   00045A                     IVTADL          equ	1114	;# 
  4767   00045B                     IVTADH          equ	1115	;# 
  4768   00045C                     IVTADU          equ	1116	;# 
  4769   00045D                     IVTBASE         equ	1117	;# 
  4770   00045D                     IVTBASEL        equ	1117	;# 
  4771   00045E                     IVTBASEH        equ	1118	;# 
  4772   00045F                     IVTBASEU        equ	1119	;# 
  4773   000460                     PWM1ERS         equ	1120	;# 
  4774   000461                     PWM1CLK         equ	1121	;# 
  4775   000462                     PWM1LDS         equ	1122	;# 
  4776   000463                     PWM1PR          equ	1123	;# 
  4777   000463                     PWM1PRL         equ	1123	;# 
  4778   000464                     PWM1PRH         equ	1124	;# 
  4779   000465                     PWM1CPRE        equ	1125	;# 
  4780   000466                     PWM1PIPOS       equ	1126	;# 
  4781   000467                     PWM1GIR         equ	1127	;# 
  4782   000468                     PWM1GIE         equ	1128	;# 
  4783   000469                     PWM1CON         equ	1129	;# 
  4784   00046A                     PWM1S1CFG       equ	1130	;# 
  4785   00046B                     PWM1S1P1        equ	1131	;# 
  4786   00046B                     PWM1S1P1L       equ	1131	;# 
  4787   00046C                     PWM1S1P1H       equ	1132	;# 
  4788   00046D                     PWM1S1P2        equ	1133	;# 
  4789   00046D                     PWM1S1P2L       equ	1133	;# 
  4790   00046E                     PWM1S1P2H       equ	1134	;# 
  4791   00046F                     PWM2ERS         equ	1135	;# 
  4792   000470                     PWM2CLK         equ	1136	;# 
  4793   000471                     PWM2LDS         equ	1137	;# 
  4794   000472                     PWM2PR          equ	1138	;# 
  4795   000472                     PWM2PRL         equ	1138	;# 
  4796   000473                     PWM2PRH         equ	1139	;# 
  4797   000474                     PWM2CPRE        equ	1140	;# 
  4798   000475                     PWM2PIPOS       equ	1141	;# 
  4799   000476                     PWM2GIR         equ	1142	;# 
  4800   000477                     PWM2GIE         equ	1143	;# 
  4801   000478                     PWM2CON         equ	1144	;# 
  4802   000479                     PWM2S1CFG       equ	1145	;# 
  4803   00047A                     PWM2S1P1        equ	1146	;# 
  4804   00047A                     PWM2S1P1L       equ	1146	;# 
  4805   00047B                     PWM2S1P1H       equ	1147	;# 
  4806   00047C                     PWM2S1P2        equ	1148	;# 
  4807   00047C                     PWM2S1P2L       equ	1148	;# 
  4808   00047D                     PWM2S1P2H       equ	1149	;# 
  4809   00047E                     PWM3ERS         equ	1150	;# 
  4810   00047F                     PWM3CLK         equ	1151	;# 
  4811   000480                     PWM3LDS         equ	1152	;# 
  4812   000481                     PWM3PR          equ	1153	;# 
  4813   000481                     PWM3PRL         equ	1153	;# 
  4814   000482                     PWM3PRH         equ	1154	;# 
  4815   000483                     PWM3CPRE        equ	1155	;# 
  4816   000484                     PWM3PIPOS       equ	1156	;# 
  4817   000485                     PWM3GIR         equ	1157	;# 
  4818   000486                     PWM3GIE         equ	1158	;# 
  4819   000487                     PWM3CON         equ	1159	;# 
  4820   000488                     PWM3S1CFG       equ	1160	;# 
  4821   000489                     PWM3S1P1        equ	1161	;# 
  4822   000489                     PWM3S1P1L       equ	1161	;# 
  4823   00048A                     PWM3S1P1H       equ	1162	;# 
  4824   00048B                     PWM3S1P2        equ	1163	;# 
  4825   00048B                     PWM3S1P2L       equ	1163	;# 
  4826   00048C                     PWM3S1P2H       equ	1164	;# 
  4827   00048D                     PWM4ERS         equ	1165	;# 
  4828   00048E                     PWM4CLK         equ	1166	;# 
  4829   00048F                     PWM4LDS         equ	1167	;# 
  4830   000490                     PWM4PR          equ	1168	;# 
  4831   000490                     PWM4PRL         equ	1168	;# 
  4832   000491                     PWM4PRH         equ	1169	;# 
  4833   000492                     PWM4CPRE        equ	1170	;# 
  4834   000493                     PWM4PIPOS       equ	1171	;# 
  4835   000494                     PWM4GIR         equ	1172	;# 
  4836   000495                     PWM4GIE         equ	1173	;# 
  4837   000496                     PWM4CON         equ	1174	;# 
  4838   000497                     PWM4S1CFG       equ	1175	;# 
  4839   000498                     PWM4S1P1        equ	1176	;# 
  4840   000498                     PWM4S1P1L       equ	1176	;# 
  4841   000499                     PWM4S1P1H       equ	1177	;# 
  4842   00049A                     PWM4S1P2        equ	1178	;# 
  4843   00049A                     PWM4S1P2L       equ	1178	;# 
  4844   00049B                     PWM4S1P2H       equ	1179	;# 
  4845   00049C                     PWMLOAD         equ	1180	;# 
  4846   00049D                     PWMEN           equ	1181	;# 
  4847   00049E                     PIE0            equ	1182	;# 
  4848   00049F                     PIE1            equ	1183	;# 
  4849   0004A0                     PIE2            equ	1184	;# 
  4850   0004A1                     PIE3            equ	1185	;# 
  4851   0004A2                     PIE4            equ	1186	;# 
  4852   0004A3                     PIE5            equ	1187	;# 
  4853   0004A4                     PIE6            equ	1188	;# 
  4854   0004A5                     PIE7            equ	1189	;# 
  4855   0004A6                     PIE8            equ	1190	;# 
  4856   0004A7                     PIE9            equ	1191	;# 
  4857   0004A8                     PIE10           equ	1192	;# 
  4858   0004A9                     PIE11           equ	1193	;# 
  4859   0004AA                     PIE12           equ	1194	;# 
  4860   0004AB                     PIE13           equ	1195	;# 
  4861   0004AC                     PIE14           equ	1196	;# 
  4862   0004AD                     PIE15           equ	1197	;# 
  4863   0004AE                     PIR0            equ	1198	;# 
  4864   0004AF                     PIR1            equ	1199	;# 
  4865   0004B0                     PIR2            equ	1200	;# 
  4866   0004B1                     PIR3            equ	1201	;# 
  4867   0004B2                     PIR4            equ	1202	;# 
  4868   0004B3                     PIR5            equ	1203	;# 
  4869   0004B4                     PIR6            equ	1204	;# 
  4870   0004B5                     PIR7            equ	1205	;# 
  4871   0004B6                     PIR8            equ	1206	;# 
  4872   0004B7                     PIR9            equ	1207	;# 
  4873   0004B8                     PIR10           equ	1208	;# 
  4874   0004B9                     PIR11           equ	1209	;# 
  4875   0004BA                     PIR12           equ	1210	;# 
  4876   0004BB                     PIR13           equ	1211	;# 
  4877   0004BC                     PIR14           equ	1212	;# 
  4878   0004BD                     PIR15           equ	1213	;# 
  4879   0004BE                     LATA            equ	1214	;# 
  4880   0004BF                     LATB            equ	1215	;# 
  4881   0004C0                     LATC            equ	1216	;# 
  4882   0004C6                     TRISA           equ	1222	;# 
  4883   0004C7                     TRISB           equ	1223	;# 
  4884   0004C8                     TRISC           equ	1224	;# 
  4885   0004CA                     TRISE           equ	1226	;# 
  4886   0004CE                     PORTA           equ	1230	;# 
  4887   0004CF                     PORTB           equ	1231	;# 
  4888   0004D0                     PORTC           equ	1232	;# 
  4889   0004D2                     PORTE           equ	1234	;# 
  4890   0004D6                     INTCON0         equ	1238	;# 
  4891   0004D7                     INTCON1         equ	1239	;# 
  4892   0004D8                     STATUS          equ	1240	;# 
  4893   0004D9                     FSR2            equ	1241	;# 
  4894   0004D9                     FSR2L           equ	1241	;# 
  4895   0004DA                     FSR2H           equ	1242	;# 
  4896   0004DB                     PLUSW2          equ	1243	;# 
  4897   0004DC                     PREINC2         equ	1244	;# 
  4898   0004DD                     POSTDEC2        equ	1245	;# 
  4899   0004DE                     POSTINC2        equ	1246	;# 
  4900   0004DF                     INDF2           equ	1247	;# 
  4901   0004E0                     BSR             equ	1248	;# 
  4902   0004E1                     FSR1            equ	1249	;# 
  4903   0004E1                     FSR1L           equ	1249	;# 
  4904   0004E2                     FSR1H           equ	1250	;# 
  4905   0004E3                     PLUSW1          equ	1251	;# 
  4906   0004E4                     PREINC1         equ	1252	;# 
  4907   0004E5                     POSTDEC1        equ	1253	;# 
  4908   0004E6                     POSTINC1        equ	1254	;# 
  4909   0004E7                     INDF1           equ	1255	;# 
  4910   0004E8                     WREG            equ	1256	;# 
  4911   0004E9                     FSR0            equ	1257	;# 
  4912   0004E9                     FSR0L           equ	1257	;# 
  4913   0004EA                     FSR0H           equ	1258	;# 
  4914   0004EB                     PLUSW0          equ	1259	;# 
  4915   0004EC                     PREINC0         equ	1260	;# 
  4916   0004ED                     POSTDEC0        equ	1261	;# 
  4917   0004EE                     POSTINC0        equ	1262	;# 
  4918   0004EF                     INDF0           equ	1263	;# 
  4919   0004F0                     PCON0           equ	1264	;# 
  4920   0004F1                     PCON1           equ	1265	;# 
  4921   0004F2                     CPUDOZE         equ	1266	;# 
  4922   0004F3                     PROD            equ	1267	;# 
  4923   0004F3                     PRODL           equ	1267	;# 
  4924   0004F4                     PRODH           equ	1268	;# 
  4925   0004F5                     TABLAT          equ	1269	;# 
  4926   0004F6                     TBLPTR          equ	1270	;# 
  4927   0004F6                     TBLPTRL         equ	1270	;# 
  4928   0004F7                     TBLPTRH         equ	1271	;# 
  4929   0004F8                     TBLPTRU         equ	1272	;# 
  4930   0004F9                     PCLAT           equ	1273	;# 
  4931   0004F9                     PCL             equ	1273	;# 
  4932   0004FA                     PCLATH          equ	1274	;# 
  4933   0004FB                     PCLATU          equ	1275	;# 
  4934   0004FC                     STKPTR          equ	1276	;# 
  4935   0004FD                     TOS             equ	1277	;# 
  4936   0004FD                     TOSL            equ	1277	;# 
  4937   0004FE                     TOSH            equ	1278	;# 
  4938   0004FF                     TOSU            equ	1279	;# 
  4939   000038                     BOOTREG         equ	56	;# 
  4940   000039                     CLKRCON         equ	57	;# 
  4941   00003A                     CLKRCLK         equ	58	;# 
  4942   000040                     NVMCON0         equ	64	;# 
  4943   000041                     NVMCON1         equ	65	;# 
  4944   000042                     NVMLOCK         equ	66	;# 
  4945   000043                     NVMADR          equ	67	;# 
  4946   000043                     NVMADRL         equ	67	;# 
  4947   000044                     NVMADRH         equ	68	;# 
  4948   000045                     NVMADRU         equ	69	;# 
  4949   000046                     NVMDAT          equ	70	;# 
  4950   000046                     NVMDATL         equ	70	;# 
  4951   000047                     NVMDATH         equ	71	;# 
  4952   000048                     VREGCON         equ	72	;# 
  4953   000049                     BORCON          equ	73	;# 
  4954   00004A                     HLVDCON0        equ	74	;# 
  4955   00004B                     HLVDCON1        equ	75	;# 
  4956   00004C                     ZCDCON          equ	76	;# 
  4957   000060                     PMD0            equ	96	;# 
  4958   000061                     PMD1            equ	97	;# 
  4959   000062                     PMD2            equ	98	;# 
  4960   000063                     PMD3            equ	99	;# 
  4961   000064                     PMD4            equ	100	;# 
  4962   000065                     PMD5            equ	101	;# 
  4963   000066                     PMD6            equ	102	;# 
  4964   000067                     PMD7            equ	103	;# 
  4965   000068                     PMD8            equ	104	;# 
  4966   00006A                     MD1CON0         equ	106	;# 
  4967   00006B                     MD1CON1         equ	107	;# 
  4968   00006C                     MD1SRC          equ	108	;# 
  4969   00006D                     MD1CARL         equ	109	;# 
  4970   00006E                     MD1CARH         equ	110	;# 
  4971   00006F                     CMOUT           equ	111	;# 
  4972   000070                     CM1CON0         equ	112	;# 
  4973   000071                     CM1CON1         equ	113	;# 
  4974   000072                     CM1NCH          equ	114	;# 
  4975   000073                     CM1PCH          equ	115	;# 
  4976   000074                     CM2CON0         equ	116	;# 
  4977   000075                     CM2CON1         equ	117	;# 
  4978   000076                     CM2NCH          equ	118	;# 
  4979   000077                     CM2PCH          equ	119	;# 
  4980   000078                     WDTCON0         equ	120	;# 
  4981   000079                     WDTCON1         equ	121	;# 
  4982   00007A                     WDTPSL          equ	122	;# 
  4983   00007B                     WDTPSH          equ	123	;# 
  4984   00007C                     WDTTMR          equ	124	;# 
  4985   00007D                     DAC1DAT         equ	125	;# 
  4986   00007D                     DAC1DATL        equ	125	;# 
  4987   00007F                     DAC1CON         equ	127	;# 
  4988   000080                     SPI1RXB         equ	128	;# 
  4989   000081                     SPI1TXB         equ	129	;# 
  4990   000082                     SPI1TCNT        equ	130	;# 
  4991   000082                     SPI1TCNTL       equ	130	;# 
  4992   000083                     SPI1TCNTH       equ	131	;# 
  4993   000084                     SPI1CON0        equ	132	;# 
  4994   000085                     SPI1CON1        equ	133	;# 
  4995   000086                     SPI1CON2        equ	134	;# 
  4996   000087                     SPI1STATUS      equ	135	;# 
  4997   000088                     SPI1TWIDTH      equ	136	;# 
  4998   000089                     SPI1BAUD        equ	137	;# 
  4999   00008A                     SPI1INTF        equ	138	;# 
  5000   00008B                     SPI1INTE        equ	139	;# 
  5001   00008C                     SPI1CLK         equ	140	;# 
  5002   00008D                     SPI2RXB         equ	141	;# 
  5003   00008E                     SPI2TXB         equ	142	;# 
  5004   00008F                     SPI2TCNT        equ	143	;# 
  5005   00008F                     SPI2TCNTL       equ	143	;# 
  5006   000090                     SPI2TCNTH       equ	144	;# 
  5007   000091                     SPI2CON0        equ	145	;# 
  5008   000092                     SPI2CON1        equ	146	;# 
  5009   000093                     SPI2CON2        equ	147	;# 
  5010   000094                     SPI2STATUS      equ	148	;# 
  5011   000095                     SPI2TWIDTH      equ	149	;# 
  5012   000096                     SPI2BAUD        equ	150	;# 
  5013   000097                     SPI2INTF        equ	151	;# 
  5014   000098                     SPI2INTE        equ	152	;# 
  5015   000099                     SPI2CLK         equ	153	;# 
  5016   0000AC                     ACTCON          equ	172	;# 
  5017   0000AD                     OSCCON1         equ	173	;# 
  5018   0000AE                     OSCCON2         equ	174	;# 
  5019   0000AF                     OSCCON3         equ	175	;# 
  5020   0000B0                     OSCTUNE         equ	176	;# 
  5021   0000B1                     OSCFRQ          equ	177	;# 
  5022   0000B1                     OSCFREQ         equ	177	;# 
  5023   0000B2                     OSCSTAT         equ	178	;# 
  5024   0000B2                     OSCSTAT1        equ	178	;# 
  5025   0000B3                     OSCEN           equ	179	;# 
  5026   0000B4                     PRLOCK          equ	180	;# 
  5027   0000B5                     SCANPR          equ	181	;# 
  5028   0000B6                     DMA1PR          equ	182	;# 
  5029   0000B7                     DMA2PR          equ	183	;# 
  5030   0000B8                     DMA3PR          equ	184	;# 
  5031   0000B9                     DMA4PR          equ	185	;# 
  5032   0000BA                     DMA5PR          equ	186	;# 
  5033   0000BB                     DMA6PR          equ	187	;# 
  5034   0000BC                     DMA7PR          equ	188	;# 
  5035   0000BD                     DMA8PR          equ	189	;# 
  5036   0000BE                     MAINPR          equ	190	;# 
  5037   0000BF                     ISRPR           equ	191	;# 
  5038   0000D4                     CLCDATA         equ	212	;# 
  5039   0000D5                     CLCSELECT       equ	213	;# 
  5040   0000D6                     CLCnCON         equ	214	;# 
  5041   0000D7                     CLCnPOL         equ	215	;# 
  5042   0000D8                     CLCnSEL0        equ	216	;# 
  5043   0000D9                     CLCnSEL1        equ	217	;# 
  5044   0000DA                     CLCnSEL2        equ	218	;# 
  5045   0000DB                     CLCnSEL3        equ	219	;# 
  5046   0000DC                     CLCnGLS0        equ	220	;# 
  5047   0000DD                     CLCnGLS1        equ	221	;# 
  5048   0000DE                     CLCnGLS2        equ	222	;# 
  5049   0000DF                     CLCnGLS3        equ	223	;# 
  5050   0000E8                     DMASELECT       equ	232	;# 
  5051   0000E9                     DMAnBUF         equ	233	;# 
  5052   0000EA                     DMAnDCNT        equ	234	;# 
  5053   0000EA                     DMAnDCNTL       equ	234	;# 
  5054   0000EB                     DMAnDCNTH       equ	235	;# 
  5055   0000EC                     DMAnDPTR        equ	236	;# 
  5056   0000EC                     DMAnDPTRL       equ	236	;# 
  5057   0000ED                     DMAnDPTRH       equ	237	;# 
  5058   0000EE                     DMAnDSZ         equ	238	;# 
  5059   0000EE                     DMAnDSZL        equ	238	;# 
  5060   0000EF                     DMAnDSZH        equ	239	;# 
  5061   0000F0                     DMAnDSA         equ	240	;# 
  5062   0000F0                     DMAnDSAL        equ	240	;# 
  5063   0000F1                     DMAnDSAH        equ	241	;# 
  5064   0000F2                     DMAnSCNT        equ	242	;# 
  5065   0000F2                     DMAnSCNTL       equ	242	;# 
  5066   0000F3                     DMAnSCNTH       equ	243	;# 
  5067   0000F4                     DMAnSPTR        equ	244	;# 
  5068   0000F4                     DMAnSPTRL       equ	244	;# 
  5069   0000F5                     DMAnSPTRH       equ	245	;# 
  5070   0000F6                     DMAnSPTRU       equ	246	;# 
  5071   0000F7                     DMAnSSZ         equ	247	;# 
  5072   0000F7                     DMAnSSZL        equ	247	;# 
  5073   0000F8                     DMAnSSZH        equ	248	;# 
  5074   0000F9                     DMAnSSA         equ	249	;# 
  5075   0000F9                     DMAnSSAL        equ	249	;# 
  5076   0000FA                     DMAnSSAH        equ	250	;# 
  5077   0000FB                     DMAnSSAU        equ	251	;# 
  5078   0000FC                     DMAnCON0        equ	252	;# 
  5079   0000FD                     DMAnCON1        equ	253	;# 
  5080   0000FE                     DMAnAIRQ        equ	254	;# 
  5081   0000FF                     DMAnSIRQ        equ	255	;# 
  5082   000100                     C1CONL          equ	256	;# 
  5083   000101                     C1CONH          equ	257	;# 
  5084   000102                     C1CONU          equ	258	;# 
  5085   000103                     C1CONT          equ	259	;# 
  5086   000104                     C1NBTCFGL       equ	260	;# 
  5087   000105                     C1NBTCFGH       equ	261	;# 
  5088   000106                     C1NBTCFGU       equ	262	;# 
  5089   000107                     C1NBTCFGT       equ	263	;# 
  5090   000108                     C1DBTCFGL       equ	264	;# 
  5091   000109                     C1DBTCFGH       equ	265	;# 
  5092   00010A                     C1DBTCFGU       equ	266	;# 
  5093   00010B                     C1DBTCFGT       equ	267	;# 
  5094   00010C                     C1TDCL          equ	268	;# 
  5095   00010D                     C1TDCH          equ	269	;# 
  5096   00010E                     C1TDCU          equ	270	;# 
  5097   000110                     C1TBC           equ	272	;# 
  5098   000110                     C1TBCL          equ	272	;# 
  5099   000111                     C1TBCH          equ	273	;# 
  5100   000112                     C1TBCU          equ	274	;# 
  5101   000113                     C1TBCT          equ	275	;# 
  5102   000114                     C1TSCONL        equ	276	;# 
  5103   000115                     C1TSCONH        equ	277	;# 
  5104   000116                     C1TSCONU        equ	278	;# 
  5105   000117                     C1TSCONT        equ	279	;# 
  5106   000118                     C1VECL          equ	280	;# 
  5107   000119                     C1VECH          equ	281	;# 
  5108   00011A                     C1VECU          equ	282	;# 
  5109   00011B                     C1VECT          equ	283	;# 
  5110   00011C                     C1INTL          equ	284	;# 
  5111   00011D                     C1INTH          equ	285	;# 
  5112   00011E                     C1INTU          equ	286	;# 
  5113   00011F                     C1INTT          equ	287	;# 
  5114   000120                     C1RXIF          equ	288	;# 
  5115   000120                     C1RXIFL         equ	288	;# 
  5116   000121                     C1RXIFH         equ	289	;# 
  5117   000122                     C1RXIFU         equ	290	;# 
  5118   000123                     C1RXIFT         equ	291	;# 
  5119   000124                     C1TXIF          equ	292	;# 
  5120   000124                     C1TXIFL         equ	292	;# 
  5121   000125                     C1TXIFH         equ	293	;# 
  5122   000126                     C1TXIFU         equ	294	;# 
  5123   000127                     C1TXIFT         equ	295	;# 
  5124   000128                     C1RXOVIF        equ	296	;# 
  5125   000128                     C1RXOVIFL       equ	296	;# 
  5126   000129                     C1RXOVIFH       equ	297	;# 
  5127   00012A                     C1RXOVIFU       equ	298	;# 
  5128   00012B                     C1RXOVIFT       equ	299	;# 
  5129   00012C                     C1TXATIF        equ	300	;# 
  5130   00012C                     C1TXATIFL       equ	300	;# 
  5131   00012D                     C1TXATIFH       equ	301	;# 
  5132   00012E                     C1TXATIFU       equ	302	;# 
  5133   00012F                     C1TXATIFT       equ	303	;# 
  5134   000130                     C1TXREQ         equ	304	;# 
  5135   000130                     C1TXREQL        equ	304	;# 
  5136   000131                     C1TXREQH        equ	305	;# 
  5137   000132                     C1TXREQU        equ	306	;# 
  5138   000133                     C1TXREQT        equ	307	;# 
  5139   000134                     C1TRECL         equ	308	;# 
  5140   000135                     C1TRECH         equ	309	;# 
  5141   000136                     C1TRECU         equ	310	;# 
  5142   000137                     C1TRECT         equ	311	;# 
  5143   000138                     C1BDIAG0L       equ	312	;# 
  5144   000139                     C1BDIAG0H       equ	313	;# 
  5145   00013C                     C1BDIAG1L       equ	316	;# 
  5146   00013D                     C1BDIAG1H       equ	317	;# 
  5147   00013E                     C1BDIAG1U       equ	318	;# 
  5148   00013F                     C1BDIAG1T       equ	319	;# 
  5149   000140                     C1TEFCONL       equ	320	;# 
  5150   000141                     C1TEFCONH       equ	321	;# 
  5151   000142                     C1TEFCONU       equ	322	;# 
  5152   000143                     C1TEFCONT       equ	323	;# 
  5153   000144                     C1TEFSTAL       equ	324	;# 
  5154   000145                     C1TEFSTAH       equ	325	;# 
  5155   000146                     C1TEFSTAU       equ	326	;# 
  5156   000147                     C1TEFSTAT       equ	327	;# 
  5157   000148                     C1TEFUA         equ	328	;# 
  5158   000148                     C1TEFUAL        equ	328	;# 
  5159   000149                     C1TEFUAH        equ	329	;# 
  5160   00014A                     C1TEFUAU        equ	330	;# 
  5161   00014B                     C1TEFUAT        equ	331	;# 
  5162   00014C                     C1FIFOBA        equ	332	;# 
  5163   00014C                     C1FIFOBAL       equ	332	;# 
  5164   00014D                     C1FIFOBAH       equ	333	;# 
  5165   00014E                     C1FIFOBAU       equ	334	;# 
  5166   00014F                     C1FIFOBAT       equ	335	;# 
  5167   000150                     C1TXQCONL       equ	336	;# 
  5168   000151                     C1TXQCONH       equ	337	;# 
  5169   000152                     C1TXQCONU       equ	338	;# 
  5170   000153                     C1TXQCONT       equ	339	;# 
  5171   000154                     C1TXQSTAL       equ	340	;# 
  5172   000155                     C1TXQSTAH       equ	341	;# 
  5173   000156                     C1TXQSTAU       equ	342	;# 
  5174   000157                     C1TXQSTAT       equ	343	;# 
  5175   000158                     C1TXQUA         equ	344	;# 
  5176   000158                     C1TXQUAL        equ	344	;# 
  5177   000159                     C1TXQUAH        equ	345	;# 
  5178   00015A                     C1TXQUAU        equ	346	;# 
  5179   00015B                     C1TXQUAT        equ	347	;# 
  5180   00015C                     C1FIFOCON1      equ	348	;# 
  5181   00015C                     C1FIFOCON1L     equ	348	;# 
  5182   00015D                     C1FIFOCON1H     equ	349	;# 
  5183   00015E                     C1FIFOCON1U     equ	350	;# 
  5184   00015F                     C1FIFOCON1T     equ	351	;# 
  5185   000160                     C1FIFOSTA1      equ	352	;# 
  5186   000160                     C1FIFOSTA1L     equ	352	;# 
  5187   000161                     C1FIFOSTA1H     equ	353	;# 
  5188   000162                     C1FIFOSTA1U     equ	354	;# 
  5189   000163                     C1FIFOSTA1T     equ	355	;# 
  5190   000164                     C1FIFOUA1       equ	356	;# 
  5191   000164                     C1FIFOUA1L      equ	356	;# 
  5192   000165                     C1FIFOUA1H      equ	357	;# 
  5193   000166                     C1FIFOUA1U      equ	358	;# 
  5194   000167                     C1FIFOUA1T      equ	359	;# 
  5195   000168                     C1FIFOCON2      equ	360	;# 
  5196   000168                     C1FIFOCON2L     equ	360	;# 
  5197   000169                     C1FIFOCON2H     equ	361	;# 
  5198   00016A                     C1FIFOCON2U     equ	362	;# 
  5199   00016B                     C1FIFOCON2T     equ	363	;# 
  5200   00016C                     C1FIFOSTA2      equ	364	;# 
  5201   00016C                     C1FIFOSTA2L     equ	364	;# 
  5202   00016D                     C1FIFOSTA2H     equ	365	;# 
  5203   00016E                     C1FIFOSTA2U     equ	366	;# 
  5204   00016F                     C1FIFOSTA2T     equ	367	;# 
  5205   000170                     C1FIFOUA2       equ	368	;# 
  5206   000170                     C1FIFOUA2L      equ	368	;# 
  5207   000171                     C1FIFOUA2H      equ	369	;# 
  5208   000172                     C1FIFOUA2U      equ	370	;# 
  5209   000173                     C1FIFOUA2T      equ	371	;# 
  5210   000174                     C1FIFOCON3      equ	372	;# 
  5211   000174                     C1FIFOCON3L     equ	372	;# 
  5212   000175                     C1FIFOCON3H     equ	373	;# 
  5213   000176                     C1FIFOCON3U     equ	374	;# 
  5214   000177                     C1FIFOCON3T     equ	375	;# 
  5215   000178                     C1FIFOSTA3      equ	376	;# 
  5216   000178                     C1FIFOSTA3L     equ	376	;# 
  5217   000179                     C1FIFOSTA3H     equ	377	;# 
  5218   00017A                     C1FIFOSTA3U     equ	378	;# 
  5219   00017B                     C1FIFOSTA3T     equ	379	;# 
  5220   00017C                     C1FIFOUA3       equ	380	;# 
  5221   00017C                     C1FIFOUA3L      equ	380	;# 
  5222   00017D                     C1FIFOUA3H      equ	381	;# 
  5223   00017E                     C1FIFOUA3U      equ	382	;# 
  5224   00017F                     C1FIFOUA3T      equ	383	;# 
  5225   000180                     C1FLTCON0L      equ	384	;# 
  5226   000181                     C1FLTCON0H      equ	385	;# 
  5227   000182                     C1FLTCON0U      equ	386	;# 
  5228   000183                     C1FLTCON0T      equ	387	;# 
  5229   000184                     C1FLTCON1L      equ	388	;# 
  5230   000185                     C1FLTCON1H      equ	389	;# 
  5231   000186                     C1FLTCON1U      equ	390	;# 
  5232   000187                     C1FLTCON1T      equ	391	;# 
  5233   000188                     C1FLTCON2L      equ	392	;# 
  5234   000189                     C1FLTCON2H      equ	393	;# 
  5235   00018A                     C1FLTCON2U      equ	394	;# 
  5236   00018B                     C1FLTCON2T      equ	395	;# 
  5237   00018C                     C1FLTOBJ0       equ	396	;# 
  5238   00018C                     C1FLTOBJ0L      equ	396	;# 
  5239   00018D                     C1FLTOBJ0H      equ	397	;# 
  5240   00018E                     C1FLTOBJ0U      equ	398	;# 
  5241   00018F                     C1FLTOBJ0T      equ	399	;# 
  5242   000190                     C1MASK0         equ	400	;# 
  5243   000190                     C1MASK0L        equ	400	;# 
  5244   000191                     C1MASK0H        equ	401	;# 
  5245   000192                     C1MASK0U        equ	402	;# 
  5246   000193                     C1MASK0T        equ	403	;# 
  5247   000194                     C1FLTOBJ1       equ	404	;# 
  5248   000194                     C1FLTOBJ1L      equ	404	;# 
  5249   000195                     C1FLTOBJ1H      equ	405	;# 
  5250   000196                     C1FLTOBJ1U      equ	406	;# 
  5251   000197                     C1FLTOBJ1T      equ	407	;# 
  5252   000198                     C1MASK1         equ	408	;# 
  5253   000198                     C1MASK1L        equ	408	;# 
  5254   000199                     C1MASK1H        equ	409	;# 
  5255   00019A                     C1MASK1U        equ	410	;# 
  5256   00019B                     C1MASK1T        equ	411	;# 
  5257   00019C                     C1FLTOBJ2       equ	412	;# 
  5258   00019C                     C1FLTOBJ2L      equ	412	;# 
  5259   00019D                     C1FLTOBJ2H      equ	413	;# 
  5260   00019E                     C1FLTOBJ2U      equ	414	;# 
  5261   00019F                     C1FLTOBJ2T      equ	415	;# 
  5262   0001A0                     C1MASK2         equ	416	;# 
  5263   0001A0                     C1MASK2L        equ	416	;# 
  5264   0001A1                     C1MASK2H        equ	417	;# 
  5265   0001A2                     C1MASK2U        equ	418	;# 
  5266   0001A3                     C1MASK2T        equ	419	;# 
  5267   0001A4                     C1FLTOBJ3       equ	420	;# 
  5268   0001A4                     C1FLTOBJ3L      equ	420	;# 
  5269   0001A5                     C1FLTOBJ3H      equ	421	;# 
  5270   0001A6                     C1FLTOBJ3U      equ	422	;# 
  5271   0001A7                     C1FLTOBJ3T      equ	423	;# 
  5272   0001A8                     C1MASK3         equ	424	;# 
  5273   0001A8                     C1MASK3L        equ	424	;# 
  5274   0001A9                     C1MASK3H        equ	425	;# 
  5275   0001AA                     C1MASK3U        equ	426	;# 
  5276   0001AB                     C1MASK3T        equ	427	;# 
  5277   0001AC                     C1FLTOBJ4       equ	428	;# 
  5278   0001AC                     C1FLTOBJ4L      equ	428	;# 
  5279   0001AD                     C1FLTOBJ4H      equ	429	;# 
  5280   0001AE                     C1FLTOBJ4U      equ	430	;# 
  5281   0001AF                     C1FLTOBJ4T      equ	431	;# 
  5282   0001B0                     C1MASK4         equ	432	;# 
  5283   0001B0                     C1MASK4L        equ	432	;# 
  5284   0001B1                     C1MASK4H        equ	433	;# 
  5285   0001B2                     C1MASK4U        equ	434	;# 
  5286   0001B3                     C1MASK4T        equ	435	;# 
  5287   0001B4                     C1FLTOBJ5       equ	436	;# 
  5288   0001B4                     C1FLTOBJ5L      equ	436	;# 
  5289   0001B5                     C1FLTOBJ5H      equ	437	;# 
  5290   0001B6                     C1FLTOBJ5U      equ	438	;# 
  5291   0001B7                     C1FLTOBJ5T      equ	439	;# 
  5292   0001B8                     C1MASK5         equ	440	;# 
  5293   0001B8                     C1MASK5L        equ	440	;# 
  5294   0001B9                     C1MASK5H        equ	441	;# 
  5295   0001BA                     C1MASK5U        equ	442	;# 
  5296   0001BB                     C1MASK5T        equ	443	;# 
  5297   0001BC                     C1FLTOBJ6       equ	444	;# 
  5298   0001BC                     C1FLTOBJ6L      equ	444	;# 
  5299   0001BD                     C1FLTOBJ6H      equ	445	;# 
  5300   0001BE                     C1FLTOBJ6U      equ	446	;# 
  5301   0001BF                     C1FLTOBJ6T      equ	447	;# 
  5302   0001C0                     C1MASK6         equ	448	;# 
  5303   0001C0                     C1MASK6L        equ	448	;# 
  5304   0001C1                     C1MASK6H        equ	449	;# 
  5305   0001C2                     C1MASK6U        equ	450	;# 
  5306   0001C3                     C1MASK6T        equ	451	;# 
  5307   0001C4                     C1FLTOBJ7       equ	452	;# 
  5308   0001C4                     C1FLTOBJ7L      equ	452	;# 
  5309   0001C5                     C1FLTOBJ7H      equ	453	;# 
  5310   0001C6                     C1FLTOBJ7U      equ	454	;# 
  5311   0001C7                     C1FLTOBJ7T      equ	455	;# 
  5312   0001C8                     C1MASK7         equ	456	;# 
  5313   0001C8                     C1MASK7L        equ	456	;# 
  5314   0001C9                     C1MASK7H        equ	457	;# 
  5315   0001CA                     C1MASK7U        equ	458	;# 
  5316   0001CB                     C1MASK7T        equ	459	;# 
  5317   0001CC                     C1FLTOBJ8       equ	460	;# 
  5318   0001CC                     C1FLTOBJ8L      equ	460	;# 
  5319   0001CD                     C1FLTOBJ8H      equ	461	;# 
  5320   0001CE                     C1FLTOBJ8U      equ	462	;# 
  5321   0001CF                     C1FLTOBJ8T      equ	463	;# 
  5322   0001D0                     C1MASK8         equ	464	;# 
  5323   0001D0                     C1MASK8L        equ	464	;# 
  5324   0001D1                     C1MASK8H        equ	465	;# 
  5325   0001D2                     C1MASK8U        equ	466	;# 
  5326   0001D3                     C1MASK8T        equ	467	;# 
  5327   0001D4                     C1FLTOBJ9       equ	468	;# 
  5328   0001D4                     C1FLTOBJ9L      equ	468	;# 
  5329   0001D5                     C1FLTOBJ9H      equ	469	;# 
  5330   0001D6                     C1FLTOBJ9U      equ	470	;# 
  5331   0001D7                     C1FLTOBJ9T      equ	471	;# 
  5332   0001D8                     C1MASK9         equ	472	;# 
  5333   0001D8                     C1MASK9L        equ	472	;# 
  5334   0001D9                     C1MASK9H        equ	473	;# 
  5335   0001DA                     C1MASK9U        equ	474	;# 
  5336   0001DB                     C1MASK9T        equ	475	;# 
  5337   0001DC                     C1FLTOBJ10      equ	476	;# 
  5338   0001DC                     C1FLTOBJ10L     equ	476	;# 
  5339   0001DD                     C1FLTOBJ10H     equ	477	;# 
  5340   0001DE                     C1FLTOBJ10U     equ	478	;# 
  5341   0001DF                     C1FLTOBJ10T     equ	479	;# 
  5342   0001E0                     C1MASK10        equ	480	;# 
  5343   0001E0                     C1MASK10L       equ	480	;# 
  5344   0001E1                     C1MASK10H       equ	481	;# 
  5345   0001E2                     C1MASK10U       equ	482	;# 
  5346   0001E3                     C1MASK10T       equ	483	;# 
  5347   0001E4                     C1FLTOBJ11      equ	484	;# 
  5348   0001E4                     C1FLTOBJ11L     equ	484	;# 
  5349   0001E5                     C1FLTOBJ11H     equ	485	;# 
  5350   0001E6                     C1FLTOBJ11U     equ	486	;# 
  5351   0001E7                     C1FLTOBJ11T     equ	487	;# 
  5352   0001E8                     C1MASK11        equ	488	;# 
  5353   0001E8                     C1MASK11L       equ	488	;# 
  5354   0001E9                     C1MASK11H       equ	489	;# 
  5355   0001EA                     C1MASK11U       equ	490	;# 
  5356   0001EB                     C1MASK11T       equ	491	;# 
  5357   000200                     PPSLOCK         equ	512	;# 
  5358   000201                     RA0PPS          equ	513	;# 
  5359   000202                     RA1PPS          equ	514	;# 
  5360   000203                     RA2PPS          equ	515	;# 
  5361   000204                     RA3PPS          equ	516	;# 
  5362   000205                     RA4PPS          equ	517	;# 
  5363   000206                     RA5PPS          equ	518	;# 
  5364   000207                     RA6PPS          equ	519	;# 
  5365   000208                     RA7PPS          equ	520	;# 
  5366   000209                     RB0PPS          equ	521	;# 
  5367   00020A                     RB1PPS          equ	522	;# 
  5368   00020B                     RB2PPS          equ	523	;# 
  5369   00020C                     RB3PPS          equ	524	;# 
  5370   00020D                     RB4PPS          equ	525	;# 
  5371   00020E                     RB5PPS          equ	526	;# 
  5372   00020F                     RB6PPS          equ	527	;# 
  5373   000210                     RB7PPS          equ	528	;# 
  5374   000211                     RC0PPS          equ	529	;# 
  5375   000212                     RC1PPS          equ	530	;# 
  5376   000213                     RC2PPS          equ	531	;# 
  5377   000214                     RC3PPS          equ	532	;# 
  5378   000215                     RC4PPS          equ	533	;# 
  5379   000216                     RC5PPS          equ	534	;# 
  5380   000217                     RC6PPS          equ	535	;# 
  5381   000218                     RC7PPS          equ	536	;# 
  5382   00023D                     CANRXPPS        equ	573	;# 
  5383   00023E                     INT0PPS         equ	574	;# 
  5384   00023F                     INT1PPS         equ	575	;# 
  5385   000240                     INT2PPS         equ	576	;# 
  5386   000241                     T0CKIPPS        equ	577	;# 
  5387   000242                     T1CKIPPS        equ	578	;# 
  5388   000243                     T1GPPS          equ	579	;# 
  5389   000244                     T3CKIPPS        equ	580	;# 
  5390   000245                     T3GPPS          equ	581	;# 
  5391   000246                     T5CKIPPS        equ	582	;# 
  5392   000247                     T5GPPS          equ	583	;# 
  5393   000248                     T2INPPS         equ	584	;# 
  5394   000249                     T4INPPS         equ	585	;# 
  5395   00024A                     T6INPPS         equ	586	;# 
  5396   00024B                     TUIN0PPS        equ	587	;# 
  5397   00024C                     TUIN1PPS        equ	588	;# 
  5398   00024F                     CCP1PPS         equ	591	;# 
  5399   000250                     CCP2PPS         equ	592	;# 
  5400   000251                     CCP3PPS         equ	593	;# 
  5401   000253                     PWM1ERSPPS      equ	595	;# 
  5402   000254                     PWM2ERSPPS      equ	596	;# 
  5403   000255                     PWM3ERSPPS      equ	597	;# 
  5404   000256                     PWM4ERSPPS      equ	598	;# 
  5405   000257                     PWMIN0PPS       equ	599	;# 
  5406   000258                     PWMIN1PPS       equ	600	;# 
  5407   000259                     SMT1WINPPS      equ	601	;# 
  5408   00025A                     SMT1SIGPPS      equ	602	;# 
  5409   00025B                     CWG1PPS         equ	603	;# 
  5410   00025B                     CWG1INPPS       equ	603	;# 
  5411   00025C                     CWG2PPS         equ	604	;# 
  5412   00025C                     CWG2INPPS       equ	604	;# 
  5413   00025D                     CWG3PPS         equ	605	;# 
  5414   00025D                     CWG3INPPS       equ	605	;# 
  5415   00025E                     MD1CARLPPS      equ	606	;# 
  5416   00025E                     MDCARLPPS       equ	606	;# 
  5417   00025F                     MD1CARHPPS      equ	607	;# 
  5418   00025F                     MDCARHPPS       equ	607	;# 
  5419   000260                     MD1SRCPPS       equ	608	;# 
  5420   000260                     MDSRCPPS        equ	608	;# 
  5421   000261                     CLCIN0PPS       equ	609	;# 
  5422   000262                     CLCIN1PPS       equ	610	;# 
  5423   000263                     CLCIN2PPS       equ	611	;# 
  5424   000264                     CLCIN3PPS       equ	612	;# 
  5425   000265                     CLCIN4PPS       equ	613	;# 
  5426   000266                     CLCIN5PPS       equ	614	;# 
  5427   000267                     CLCIN6PPS       equ	615	;# 
  5428   000268                     CLCIN7PPS       equ	616	;# 
  5429   000269                     ADACTPPS        equ	617	;# 
  5430   00026A                     SPI1SCKPPS      equ	618	;# 
  5431   00026B                     SPI1SDIPPS      equ	619	;# 
  5432   00026C                     SPI1SSPPS       equ	620	;# 
  5433   00026D                     SPI2SCKPPS      equ	621	;# 
  5434   00026E                     SPI2SDIPPS      equ	622	;# 
  5435   00026F                     SPI2SSPPS       equ	623	;# 
  5436   000270                     I2C1SDAPPS      equ	624	;# 
  5437   000271                     I2C1SCLPPS      equ	625	;# 
  5438   000272                     U1RXPPS         equ	626	;# 
  5439   000273                     U1CTSPPS        equ	627	;# 
  5440   000274                     U2RXPPS         equ	628	;# 
  5441   000275                     U2CTSPPS        equ	629	;# 
  5442   000276                     U3RXPPS         equ	630	;# 
  5443   000277                     U3CTSPPS        equ	631	;# 
  5444   000278                     U4RXPPS         equ	632	;# 
  5445   000279                     U4CTSPPS        equ	633	;# 
  5446   00027A                     U5RXPPS         equ	634	;# 
  5447   00027B                     U5CTSPPS        equ	635	;# 
  5448   000286                     RC4I2C          equ	646	;# 
  5449   000287                     RC3I2C          equ	647	;# 
  5450   000288                     RB2I2C          equ	648	;# 
  5451   000289                     RB1I2C          equ	649	;# 
  5452   00028A                     I2C1RXB         equ	650	;# 
  5453   00028B                     I2C1TXB         equ	651	;# 
  5454   00028C                     I2C1CNTL        equ	652	;# 
  5455   00028D                     I2C1CNTH        equ	653	;# 
  5456   00028E                     I2C1ADB0        equ	654	;# 
  5457   00028F                     I2C1ADB1        equ	655	;# 
  5458   000290                     I2C1ADR0        equ	656	;# 
  5459   000291                     I2C1ADR1        equ	657	;# 
  5460   000292                     I2C1ADR2        equ	658	;# 
  5461   000293                     I2C1ADR3        equ	659	;# 
  5462   000294                     I2C1CON0        equ	660	;# 
  5463   000295                     I2C1CON1        equ	661	;# 
  5464   000296                     I2C1CON2        equ	662	;# 
  5465   000297                     I2C1ERR         equ	663	;# 
  5466   000298                     I2C1STAT0       equ	664	;# 
  5467   000299                     I2C1STAT1       equ	665	;# 
  5468   00029A                     I2C1PIR         equ	666	;# 
  5469   00029B                     I2C1PIE         equ	667	;# 
  5470   00029C                     I2C1BTO         equ	668	;# 
  5471   00029D                     I2C1BAUD        equ	669	;# 
  5472   00029E                     I2C1CLK         equ	670	;# 
  5473   00029F                     I2C1BTOC        equ	671	;# 
  5474   0002A1                     U1RXB           equ	673	;# 
  5475   0002A1                     U1RXBL          equ	673	;# 
  5476   0002A2                     U1RXCHK         equ	674	;# 
  5477   0002A3                     U1TXB           equ	675	;# 
  5478   0002A3                     U1TXBL          equ	675	;# 
  5479   0002A4                     U1TXCHK         equ	676	;# 
  5480   0002A5                     U1P1            equ	677	;# 
  5481   0002A5                     U1P1L           equ	677	;# 
  5482   0002A6                     U1P1H           equ	678	;# 
  5483   0002A7                     U1P2            equ	679	;# 
  5484   0002A7                     U1P2L           equ	679	;# 
  5485   0002A8                     U1P2H           equ	680	;# 
  5486   0002A9                     U1P3            equ	681	;# 
  5487   0002A9                     U1P3L           equ	681	;# 
  5488   0002AA                     U1P3H           equ	682	;# 
  5489   0002AB                     U1CON0          equ	683	;# 
  5490   0002AC                     U1CON1          equ	684	;# 
  5491   0002AD                     U1CON2          equ	685	;# 
  5492   0002AE                     U1BRG           equ	686	;# 
  5493   0002AE                     U1BRGL          equ	686	;# 
  5494   0002AF                     U1BRGH          equ	687	;# 
  5495   0002B0                     U1FIFO          equ	688	;# 
  5496   0002B1                     U1UIR           equ	689	;# 
  5497   0002B2                     U1ERRIR         equ	690	;# 
  5498   0002B3                     U1ERRIE         equ	691	;# 
  5499   0002B4                     U2RXB           equ	692	;# 
  5500   0002B4                     U2RXBL          equ	692	;# 
  5501   0002B5                     U2RXCHK         equ	693	;# 
  5502   0002B6                     U2TXB           equ	694	;# 
  5503   0002B6                     U2TXBL          equ	694	;# 
  5504   0002B7                     U2TXCHK         equ	695	;# 
  5505   0002B8                     U2P1            equ	696	;# 
  5506   0002B8                     U2P1L           equ	696	;# 
  5507   0002B9                     U2P1H           equ	697	;# 
  5508   0002BA                     U2P2            equ	698	;# 
  5509   0002BA                     U2P2L           equ	698	;# 
  5510   0002BB                     U2P2H           equ	699	;# 
  5511   0002BC                     U2P3            equ	700	;# 
  5512   0002BC                     U2P3L           equ	700	;# 
  5513   0002BD                     U2P3H           equ	701	;# 
  5514   0002BE                     U2CON0          equ	702	;# 
  5515   0002BF                     U2CON1          equ	703	;# 
  5516   0002C0                     U2CON2          equ	704	;# 
  5517   0002C1                     U2BRG           equ	705	;# 
  5518   0002C1                     U2BRGL          equ	705	;# 
  5519   0002C2                     U2BRGH          equ	706	;# 
  5520   0002C3                     U2FIFO          equ	707	;# 
  5521   0002C4                     U2UIR           equ	708	;# 
  5522   0002C5                     U2ERRIR         equ	709	;# 
  5523   0002C6                     U2ERRIE         equ	710	;# 
  5524   0002C7                     U3RXB           equ	711	;# 
  5525   0002C7                     U3RXBL          equ	711	;# 
  5526   0002C9                     U3TXB           equ	713	;# 
  5527   0002C9                     U3TXBL          equ	713	;# 
  5528   0002CB                     U3P1            equ	715	;# 
  5529   0002CB                     U3P1L           equ	715	;# 
  5530   0002CD                     U3P2            equ	717	;# 
  5531   0002CD                     U3P2L           equ	717	;# 
  5532   0002CF                     U3P3            equ	719	;# 
  5533   0002CF                     U3P3L           equ	719	;# 
  5534   0002D1                     U3CON0          equ	721	;# 
  5535   0002D2                     U3CON1          equ	722	;# 
  5536   0002D3                     U3CON2          equ	723	;# 
  5537   0002D4                     U3BRG           equ	724	;# 
  5538   0002D4                     U3BRGL          equ	724	;# 
  5539   0002D5                     U3BRGH          equ	725	;# 
  5540   0002D6                     U3FIFO          equ	726	;# 
  5541   0002D7                     U3UIR           equ	727	;# 
  5542   0002D8                     U3ERRIR         equ	728	;# 
  5543   0002D9                     U3ERRIE         equ	729	;# 
  5544   0002DA                     U4RXB           equ	730	;# 
  5545   0002DA                     U4RXBL          equ	730	;# 
  5546   0002DC                     U4TXB           equ	732	;# 
  5547   0002DC                     U4TXBL          equ	732	;# 
  5548   0002DE                     U4P1            equ	734	;# 
  5549   0002DE                     U4P1L           equ	734	;# 
  5550   0002E0                     U4P2            equ	736	;# 
  5551   0002E0                     U4P2L           equ	736	;# 
  5552   0002E2                     U4P3            equ	738	;# 
  5553   0002E2                     U4P3L           equ	738	;# 
  5554   0002E4                     U4CON0          equ	740	;# 
  5555   0002E5                     U4CON1          equ	741	;# 
  5556   0002E6                     U4CON2          equ	742	;# 
  5557   0002E7                     U4BRG           equ	743	;# 
  5558   0002E7                     U4BRGL          equ	743	;# 
  5559   0002E8                     U4BRGH          equ	744	;# 
  5560   0002E9                     U4FIFO          equ	745	;# 
  5561   0002EA                     U4UIR           equ	746	;# 
  5562   0002EB                     U4ERRIR         equ	747	;# 
  5563   0002EC                     U4ERRIE         equ	748	;# 
  5564   0002ED                     U5RXB           equ	749	;# 
  5565   0002ED                     U5RXBL          equ	749	;# 
  5566   0002EF                     U5TXB           equ	751	;# 
  5567   0002EF                     U5TXBL          equ	751	;# 
  5568   0002F1                     U5P1            equ	753	;# 
  5569   0002F1                     U5P1L           equ	753	;# 
  5570   0002F3                     U5P2            equ	755	;# 
  5571   0002F3                     U5P2L           equ	755	;# 
  5572   0002F5                     U5P3            equ	757	;# 
  5573   0002F5                     U5P3L           equ	757	;# 
  5574   0002F7                     U5CON0          equ	759	;# 
  5575   0002F8                     U5CON1          equ	760	;# 
  5576   0002F9                     U5CON2          equ	761	;# 
  5577   0002FA                     U5BRG           equ	762	;# 
  5578   0002FA                     U5BRGL          equ	762	;# 
  5579   0002FB                     U5BRGH          equ	763	;# 
  5580   0002FC                     U5FIFO          equ	764	;# 
  5581   0002FD                     U5UIR           equ	765	;# 
  5582   0002FE                     U5ERRIR         equ	766	;# 
  5583   0002FF                     U5ERRIE         equ	767	;# 
  5584   000300                     SMT1TMR         equ	768	;# 
  5585   000300                     SMT1TMRL        equ	768	;# 
  5586   000301                     SMT1TMRH        equ	769	;# 
  5587   000302                     SMT1TMRU        equ	770	;# 
  5588   000303                     SMT1CPR         equ	771	;# 
  5589   000303                     SMT1CPRL        equ	771	;# 
  5590   000304                     SMT1CPRH        equ	772	;# 
  5591   000305                     SMT1CPRU        equ	773	;# 
  5592   000306                     SMT1CPW         equ	774	;# 
  5593   000306                     SMT1CPWL        equ	774	;# 
  5594   000307                     SMT1CPWH        equ	775	;# 
  5595   000308                     SMT1CPWU        equ	776	;# 
  5596   000309                     SMT1PR          equ	777	;# 
  5597   000309                     SMT1PRL         equ	777	;# 
  5598   00030A                     SMT1PRH         equ	778	;# 
  5599   00030B                     SMT1PRU         equ	779	;# 
  5600   00030C                     SMT1CON0        equ	780	;# 
  5601   00030D                     SMT1CON1        equ	781	;# 
  5602   00030E                     SMT1STAT        equ	782	;# 
  5603   00030F                     SMT1CLK         equ	783	;# 
  5604   000310                     SMT1SIG         equ	784	;# 
  5605   000311                     SMT1WIN         equ	785	;# 
  5606   000318                     TMR0L           equ	792	;# 
  5607   000318                     TMR0            equ	792	;# 
  5608   000319                     TMR0H           equ	793	;# 
  5609   000319                     PR0             equ	793	;# 
  5610   00031A                     T0CON0          equ	794	;# 
  5611   00031B                     T0CON1          equ	795	;# 
  5612   00031C                     TMR1            equ	796	;# 
  5613   00031C                     TMR1L           equ	796	;# 
  5614   00031D                     TMR1H           equ	797	;# 
  5615   00031E                     T1CON           equ	798	;# 
  5616   00031E                     TMR1CON         equ	798	;# 
  5617   00031F                     T1GCON          equ	799	;# 
  5618   00031F                     TMR1GCON        equ	799	;# 
  5619   000320                     T1GATE          equ	800	;# 
  5620   000320                     TMR1GATE        equ	800	;# 
  5621   000321                     T1CLK           equ	801	;# 
  5622   000321                     TMR1CLK         equ	801	;# 
  5623   000321                     PR1             equ	801	;# 
  5624   000322                     T2TMR           equ	802	;# 
  5625   000322                     TMR2            equ	802	;# 
  5626   000323                     T2PR            equ	803	;# 
  5627   000323                     PR2             equ	803	;# 
  5628   000324                     T2CON           equ	804	;# 
  5629   000325                     T2HLT           equ	805	;# 
  5630   000326                     T2CLKCON        equ	806	;# 
  5631   000326                     T2CLK           equ	806	;# 
  5632   000327                     T2RST           equ	807	;# 
  5633   000328                     TMR3            equ	808	;# 
  5634   000328                     TMR3L           equ	808	;# 
  5635   000329                     TMR3H           equ	809	;# 
  5636   00032A                     T3CON           equ	810	;# 
  5637   00032A                     TMR3CON         equ	810	;# 
  5638   00032B                     T3GCON          equ	811	;# 
  5639   00032B                     TMR3GCON        equ	811	;# 
  5640   00032C                     T3GATE          equ	812	;# 
  5641   00032C                     TMR3GATE        equ	812	;# 
  5642   00032D                     T3CLK           equ	813	;# 
  5643   00032D                     TMR3CLK         equ	813	;# 
  5644   00032D                     PR3             equ	813	;# 
  5645   00032E                     T4TMR           equ	814	;# 
  5646   00032E                     TMR4            equ	814	;# 
  5647   00032F                     T4PR            equ	815	;# 
  5648   00032F                     PR4             equ	815	;# 
  5649   000330                     T4CON           equ	816	;# 
  5650   000331                     T4HLT           equ	817	;# 
  5651   000332                     T4CLKCON        equ	818	;# 
  5652   000332                     T4CLK           equ	818	;# 
  5653   000333                     T4RST           equ	819	;# 
  5654   000334                     TMR5            equ	820	;# 
  5655   000334                     TMR5L           equ	820	;# 
  5656   000335                     TMR5H           equ	821	;# 
  5657   000336                     T5CON           equ	822	;# 
  5658   000336                     TMR5CON         equ	822	;# 
  5659   000337                     T5GCON          equ	823	;# 
  5660   000337                     TMR5GCON        equ	823	;# 
  5661   000338                     T5GATE          equ	824	;# 
  5662   000338                     TMR5GATE        equ	824	;# 
  5663   000339                     T5CLK           equ	825	;# 
  5664   000339                     TMR5CLK         equ	825	;# 
  5665   000339                     PR5             equ	825	;# 
  5666   00033A                     T6TMR           equ	826	;# 
  5667   00033A                     TMR6            equ	826	;# 
  5668   00033B                     T6PR            equ	827	;# 
  5669   00033B                     PR6             equ	827	;# 
  5670   00033C                     T6CON           equ	828	;# 
  5671   00033D                     T6HLT           equ	829	;# 
  5672   00033E                     T6CLKCON        equ	830	;# 
  5673   00033E                     T6CLK           equ	830	;# 
  5674   00033F                     T6RST           equ	831	;# 
  5675   000340                     CCPR1           equ	832	;# 
  5676   000340                     CCPR1L          equ	832	;# 
  5677   000341                     CCPR1H          equ	833	;# 
  5678   000342                     CCP1CON         equ	834	;# 
  5679   000343                     CCP1CAP         equ	835	;# 
  5680   000344                     CCPR2           equ	836	;# 
  5681   000344                     CCPR2L          equ	836	;# 
  5682   000345                     CCPR2H          equ	837	;# 
  5683   000346                     CCP2CON         equ	838	;# 
  5684   000347                     CCP2CAP         equ	839	;# 
  5685   000348                     CCPR3           equ	840	;# 
  5686   000348                     CCPR3L          equ	840	;# 
  5687   000349                     CCPR3H          equ	841	;# 
  5688   00034A                     CCP3CON         equ	842	;# 
  5689   00034B                     CCP3CAP         equ	843	;# 
  5690   00034C                     CCPTMRS0        equ	844	;# 
  5691   00034F                     CRCDATA         equ	847	;# 
  5692   00034F                     CRCDATAL        equ	847	;# 
  5693   000350                     CRCDATAH        equ	848	;# 
  5694   000351                     CRCDATAU        equ	849	;# 
  5695   000352                     CRCDATAT        equ	850	;# 
  5696   000353                     CRCOUT          equ	851	;# 
  5697   000353                     CRCSHFT         equ	851	;# 
  5698   000353                     CRCXOR          equ	851	;# 
  5699   000353                     CRCOUTL         equ	851	;# 
  5700   000353                     CRCSHFTL        equ	851	;# 
  5701   000353                     CRCSHIFTL       equ	851	;# 
  5702   000353                     CRCXORL         equ	851	;# 
  5703   000354                     CRCOUTH         equ	852	;# 
  5704   000354                     CRCSHFTH        equ	852	;# 
  5705   000354                     CRCSHIFTH       equ	852	;# 
  5706   000354                     CRCXORH         equ	852	;# 
  5707   000355                     CRCOUTU         equ	853	;# 
  5708   000355                     CRCSHFTU        equ	853	;# 
  5709   000355                     CRCSHIFTU       equ	853	;# 
  5710   000355                     CRCXORU         equ	853	;# 
  5711   000356                     CRCOUTT         equ	854	;# 
  5712   000356                     CRCSHFTT        equ	854	;# 
  5713   000356                     CRCSHIFTT       equ	854	;# 
  5714   000356                     CRCXORT         equ	854	;# 
  5715   000357                     CRCCON0         equ	855	;# 
  5716   000358                     CRCCON1         equ	856	;# 
  5717   000359                     CRCCON2         equ	857	;# 
  5718   00035A                     SCANLADR        equ	858	;# 
  5719   00035A                     SCANLADRL       equ	858	;# 
  5720   00035B                     SCANLADRH       equ	859	;# 
  5721   00035C                     SCANLADRU       equ	860	;# 
  5722   00035D                     SCANHADR        equ	861	;# 
  5723   00035D                     SCANHADRL       equ	861	;# 
  5724   00035E                     SCANHADRH       equ	862	;# 
  5725   00035F                     SCANHADRU       equ	863	;# 
  5726   000360                     SCANCON0        equ	864	;# 
  5727   000361                     SCANTRIG        equ	865	;# 
  5728   000362                     IPR0            equ	866	;# 
  5729   000363                     IPR1            equ	867	;# 
  5730   000364                     IPR2            equ	868	;# 
  5731   000365                     IPR3            equ	869	;# 
  5732   000366                     IPR4            equ	870	;# 
  5733   000367                     IPR5            equ	871	;# 
  5734   000368                     IPR6            equ	872	;# 
  5735   000369                     IPR7            equ	873	;# 
  5736   00036A                     IPR8            equ	874	;# 
  5737   00036B                     IPR9            equ	875	;# 
  5738   00036C                     IPR10           equ	876	;# 
  5739   00036D                     IPR11           equ	877	;# 
  5740   00036E                     IPR12           equ	878	;# 
  5741   00036F                     IPR13           equ	879	;# 
  5742   000370                     IPR14           equ	880	;# 
  5743   000371                     IPR15           equ	881	;# 
  5744   000373                     STATUS_CSHAD    equ	883	;# 
  5745   000374                     WREG_CSHAD      equ	884	;# 
  5746   000375                     BSR_CSHAD       equ	885	;# 
  5747   000376                     SHADCON         equ	886	;# 
  5748   000377                     STATUS_SHAD     equ	887	;# 
  5749   000378                     WREG_SHAD       equ	888	;# 
  5750   000379                     BSR_SHAD        equ	889	;# 
  5751   00037A                     PCLATH_SHAD     equ	890	;# 
  5752   00037B                     PCLATU_SHAD     equ	891	;# 
  5753   00037C                     FSR0SH          equ	892	;# 
  5754   00037C                     FSR0L_SHAD      equ	892	;# 
  5755   00037D                     FSR0H_SHAD      equ	893	;# 
  5756   00037E                     FSR1SH          equ	894	;# 
  5757   00037E                     FSR1L_SHAD      equ	894	;# 
  5758   00037F                     FSR1H_SHAD      equ	895	;# 
  5759   000380                     FSR2SH          equ	896	;# 
  5760   000380                     FSR2L_SHAD      equ	896	;# 
  5761   000381                     FSR2H_SHAD      equ	897	;# 
  5762   000382                     PRODSH          equ	898	;# 
  5763   000382                     PRODL_SHAD      equ	898	;# 
  5764   000383                     PRODH_SHAD      equ	899	;# 
  5765   000387                     TU16ACON0       equ	903	;# 
  5766   000388                     TU16ACON1       equ	904	;# 
  5767   000389                     TU16AHLT        equ	905	;# 
  5768   00038A                     TU16APS         equ	906	;# 
  5769   00038B                     TU16ATMR        equ	907	;# 
  5770   00038B                     TU16ACR         equ	907	;# 
  5771   00038B                     TU16ATMRL       equ	907	;# 
  5772   00038B                     TU16ACRL        equ	907	;# 
  5773   00038C                     TU16ATMRH       equ	908	;# 
  5774   00038C                     TU16ACRH        equ	908	;# 
  5775   00038D                     TU16APR         equ	909	;# 
  5776   00038D                     TU16APRL        equ	909	;# 
  5777   00038E                     TU16APRH        equ	910	;# 
  5778   00038F                     TU16ACLK        equ	911	;# 
  5779   000390                     TU16AERS        equ	912	;# 
  5780   000393                     TU16BCON0       equ	915	;# 
  5781   000394                     TU16BCON1       equ	916	;# 
  5782   000395                     TU16BHLT        equ	917	;# 
  5783   000396                     TU16BPS         equ	918	;# 
  5784   000397                     TU16BTMR        equ	919	;# 
  5785   000397                     TU16BCR         equ	919	;# 
  5786   000397                     TU16BTMRL       equ	919	;# 
  5787   000397                     TU16BCRL        equ	919	;# 
  5788   000398                     TU16BTMRH       equ	920	;# 
  5789   000398                     TU16BCRH        equ	920	;# 
  5790   000399                     TU16BPR         equ	921	;# 
  5791   000399                     TU16BPRL        equ	921	;# 
  5792   00039A                     TU16BPRH        equ	922	;# 
  5793   00039B                     TU16BCLK        equ	923	;# 
  5794   00039C                     TU16BERS        equ	924	;# 
  5795   0003BB                     TUCHAIN         equ	955	;# 
  5796   0003BC                     CWG1CLK         equ	956	;# 
  5797   0003BC                     CWG1CLKCON      equ	956	;# 
  5798   0003BD                     CWG1ISM         equ	957	;# 
  5799   0003BE                     CWG1DBR         equ	958	;# 
  5800   0003BF                     CWG1DBF         equ	959	;# 
  5801   0003C0                     CWG1CON0        equ	960	;# 
  5802   0003C1                     CWG1CON1        equ	961	;# 
  5803   0003C2                     CWG1AS0         equ	962	;# 
  5804   0003C3                     CWG1AS1         equ	963	;# 
  5805   0003C4                     CWG1STR         equ	964	;# 
  5806   0003C5                     CWG2CLK         equ	965	;# 
  5807   0003C5                     CWG2CLKCON      equ	965	;# 
  5808   0003C6                     CWG2ISM         equ	966	;# 
  5809   0003C7                     CWG2DBR         equ	967	;# 
  5810   0003C8                     CWG2DBF         equ	968	;# 
  5811   0003C9                     CWG2CON0        equ	969	;# 
  5812   0003CA                     CWG2CON1        equ	970	;# 
  5813   0003CB                     CWG2AS0         equ	971	;# 
  5814   0003CC                     CWG2AS1         equ	972	;# 
  5815   0003CD                     CWG2STR         equ	973	;# 
  5816   0003CE                     CWG3CLK         equ	974	;# 
  5817   0003CE                     CWG3CLKCON      equ	974	;# 
  5818   0003CF                     CWG3ISM         equ	975	;# 
  5819   0003D0                     CWG3DBR         equ	976	;# 
  5820   0003D1                     CWG3DBF         equ	977	;# 
  5821   0003D2                     CWG3CON0        equ	978	;# 
  5822   0003D3                     CWG3CON1        equ	979	;# 
  5823   0003D4                     CWG3AS0         equ	980	;# 
  5824   0003D5                     CWG3AS1         equ	981	;# 
  5825   0003D6                     CWG3STR         equ	982	;# 
  5826   0003D7                     FVRCON          equ	983	;# 
  5827   0003D8                     ADCPCON         equ	984	;# 
  5828   0003D8                     ADCP            equ	984	;# 
  5829   0003D9                     ADLTH           equ	985	;# 
  5830   0003D9                     ADLTHL          equ	985	;# 
  5831   0003DA                     ADLTHH          equ	986	;# 
  5832   0003DB                     ADUTH           equ	987	;# 
  5833   0003DB                     ADUTHL          equ	987	;# 
  5834   0003DC                     ADUTHH          equ	988	;# 
  5835   0003DD                     ADERR           equ	989	;# 
  5836   0003DD                     ADERRL          equ	989	;# 
  5837   0003DE                     ADERRH          equ	990	;# 
  5838   0003DF                     ADSTPT          equ	991	;# 
  5839   0003DF                     ADSTPTL         equ	991	;# 
  5840   0003E0                     ADSTPTH         equ	992	;# 
  5841   0003E1                     ADFLTR          equ	993	;# 
  5842   0003E1                     ADFLTRL         equ	993	;# 
  5843   0003E2                     ADFLTRH         equ	994	;# 
  5844   0003E3                     ADACC           equ	995	;# 
  5845   0003E3                     ADACCL          equ	995	;# 
  5846   0003E4                     ADACCH          equ	996	;# 
  5847   0003E5                     ADACCU          equ	997	;# 
  5848   0003E6                     ADCNT           equ	998	;# 
  5849   0003E7                     ADRPT           equ	999	;# 
  5850   0003E8                     ADPREV          equ	1000	;# 
  5851   0003E8                     ADPREVL         equ	1000	;# 
  5852   0003E9                     ADPREVH         equ	1001	;# 
  5853   0003EA                     ADRES           equ	1002	;# 
  5854   0003EA                     ADRESL          equ	1002	;# 
  5855   0003EB                     ADRESH          equ	1003	;# 
  5856   0003EC                     ADPCH           equ	1004	;# 
  5857   0003EE                     ADACQ           equ	1006	;# 
  5858   0003EE                     ADACQL          equ	1006	;# 
  5859   0003EF                     ADACQH          equ	1007	;# 
  5860   0003F0                     ADCAP           equ	1008	;# 
  5861   0003F1                     ADPRE           equ	1009	;# 
  5862   0003F1                     ADPREL          equ	1009	;# 
  5863   0003F2                     ADPREH          equ	1010	;# 
  5864   0003F3                     ADCON0          equ	1011	;# 
  5865   0003F4                     ADCON1          equ	1012	;# 
  5866   0003F5                     ADCON2          equ	1013	;# 
  5867   0003F6                     ADCON3          equ	1014	;# 
  5868   0003F7                     ADSTAT          equ	1015	;# 
  5869   0003F8                     ADREF           equ	1016	;# 
  5870   0003F9                     ADACT           equ	1017	;# 
  5871   0003FA                     ADCLK           equ	1018	;# 
  5872   0003FB                     ADCTX           equ	1019	;# 
  5873   0003FC                     ADCSEL1         equ	1020	;# 
  5874   0003FD                     ADCSEL2         equ	1021	;# 
  5875   0003FE                     ADCSEL3         equ	1022	;# 
  5876   0003FF                     ADCSEL4         equ	1023	;# 
  5877   000400                     ANSELA          equ	1024	;# 
  5878   000401                     WPUA            equ	1025	;# 
  5879   000402                     ODCONA          equ	1026	;# 
  5880   000403                     SLRCONA         equ	1027	;# 
  5881   000404                     INLVLA          equ	1028	;# 
  5882   000405                     IOCAP           equ	1029	;# 
  5883   000406                     IOCAN           equ	1030	;# 
  5884   000407                     IOCAF           equ	1031	;# 
  5885   000408                     ANSELB          equ	1032	;# 
  5886   000409                     WPUB            equ	1033	;# 
  5887   00040A                     ODCONB          equ	1034	;# 
  5888   00040B                     SLRCONB         equ	1035	;# 
  5889   00040C                     INLVLB          equ	1036	;# 
  5890   00040D                     IOCBP           equ	1037	;# 
  5891   00040E                     IOCBN           equ	1038	;# 
  5892   00040F                     IOCBF           equ	1039	;# 
  5893   000410                     ANSELC          equ	1040	;# 
  5894   000411                     WPUC            equ	1041	;# 
  5895   000412                     ODCONC          equ	1042	;# 
  5896   000413                     SLRCONC         equ	1043	;# 
  5897   000414                     INLVLC          equ	1044	;# 
  5898   000415                     IOCCP           equ	1045	;# 
  5899   000416                     IOCCN           equ	1046	;# 
  5900   000417                     IOCCF           equ	1047	;# 
  5901   000421                     WPUE            equ	1057	;# 
  5902   000424                     INLVLE          equ	1060	;# 
  5903   000425                     IOCEP           equ	1061	;# 
  5904   000426                     IOCEN           equ	1062	;# 
  5905   000427                     IOCEF           equ	1063	;# 
  5906   000440                     NCO1ACC         equ	1088	;# 
  5907   000440                     NCO1ACCL        equ	1088	;# 
  5908   000441                     NCO1ACCH        equ	1089	;# 
  5909   000442                     NCO1ACCU        equ	1090	;# 
  5910   000443                     NCO1INC         equ	1091	;# 
  5911   000443                     NCO1INCL        equ	1091	;# 
  5912   000444                     NCO1INCH        equ	1092	;# 
  5913   000445                     NCO1INCU        equ	1093	;# 
  5914   000446                     NCO1CON         equ	1094	;# 
  5915   000447                     NCO1CLK         equ	1095	;# 
  5916   000448                     NCO2ACC         equ	1096	;# 
  5917   000448                     NCO2ACCL        equ	1096	;# 
  5918   000449                     NCO2ACCH        equ	1097	;# 
  5919   00044A                     NCO2ACCU        equ	1098	;# 
  5920   00044B                     NCO2INC         equ	1099	;# 
  5921   00044B                     NCO2INCL        equ	1099	;# 
  5922   00044C                     NCO2INCH        equ	1100	;# 
  5923   00044D                     NCO2INCU        equ	1101	;# 
  5924   00044E                     NCO2CON         equ	1102	;# 
  5925   00044F                     NCO2CLK         equ	1103	;# 
  5926   000450                     NCO3ACC         equ	1104	;# 
  5927   000450                     NCO3ACCL        equ	1104	;# 
  5928   000451                     NCO3ACCH        equ	1105	;# 
  5929   000452                     NCO3ACCU        equ	1106	;# 
  5930   000453                     NCO3INC         equ	1107	;# 
  5931   000453                     NCO3INCL        equ	1107	;# 
  5932   000454                     NCO3INCH        equ	1108	;# 
  5933   000455                     NCO3INCU        equ	1109	;# 
  5934   000456                     NCO3CON         equ	1110	;# 
  5935   000457                     NCO3CLK         equ	1111	;# 
  5936   000458                     FSCMCON         equ	1112	;# 
  5937   000459                     IVTLOCK         equ	1113	;# 
  5938   00045A                     IVTAD           equ	1114	;# 
  5939   00045A                     IVTADL          equ	1114	;# 
  5940   00045B                     IVTADH          equ	1115	;# 
  5941   00045C                     IVTADU          equ	1116	;# 
  5942   00045D                     IVTBASE         equ	1117	;# 
  5943   00045D                     IVTBASEL        equ	1117	;# 
  5944   00045E                     IVTBASEH        equ	1118	;# 
  5945   00045F                     IVTBASEU        equ	1119	;# 
  5946   000460                     PWM1ERS         equ	1120	;# 
  5947   000461                     PWM1CLK         equ	1121	;# 
  5948   000462                     PWM1LDS         equ	1122	;# 
  5949   000463                     PWM1PR          equ	1123	;# 
  5950   000463                     PWM1PRL         equ	1123	;# 
  5951   000464                     PWM1PRH         equ	1124	;# 
  5952   000465                     PWM1CPRE        equ	1125	;# 
  5953   000466                     PWM1PIPOS       equ	1126	;# 
  5954   000467                     PWM1GIR         equ	1127	;# 
  5955   000468                     PWM1GIE         equ	1128	;# 
  5956   000469                     PWM1CON         equ	1129	;# 
  5957   00046A                     PWM1S1CFG       equ	1130	;# 
  5958   00046B                     PWM1S1P1        equ	1131	;# 
  5959   00046B                     PWM1S1P1L       equ	1131	;# 
  5960   00046C                     PWM1S1P1H       equ	1132	;# 
  5961   00046D                     PWM1S1P2        equ	1133	;# 
  5962   00046D                     PWM1S1P2L       equ	1133	;# 
  5963   00046E                     PWM1S1P2H       equ	1134	;# 
  5964   00046F                     PWM2ERS         equ	1135	;# 
  5965   000470                     PWM2CLK         equ	1136	;# 
  5966   000471                     PWM2LDS         equ	1137	;# 
  5967   000472                     PWM2PR          equ	1138	;# 
  5968   000472                     PWM2PRL         equ	1138	;# 
  5969   000473                     PWM2PRH         equ	1139	;# 
  5970   000474                     PWM2CPRE        equ	1140	;# 
  5971   000475                     PWM2PIPOS       equ	1141	;# 
  5972   000476                     PWM2GIR         equ	1142	;# 
  5973   000477                     PWM2GIE         equ	1143	;# 
  5974   000478                     PWM2CON         equ	1144	;# 
  5975   000479                     PWM2S1CFG       equ	1145	;# 
  5976   00047A                     PWM2S1P1        equ	1146	;# 
  5977   00047A                     PWM2S1P1L       equ	1146	;# 
  5978   00047B                     PWM2S1P1H       equ	1147	;# 
  5979   00047C                     PWM2S1P2        equ	1148	;# 
  5980   00047C                     PWM2S1P2L       equ	1148	;# 
  5981   00047D                     PWM2S1P2H       equ	1149	;# 
  5982   00047E                     PWM3ERS         equ	1150	;# 
  5983   00047F                     PWM3CLK         equ	1151	;# 
  5984   000480                     PWM3LDS         equ	1152	;# 
  5985   000481                     PWM3PR          equ	1153	;# 
  5986   000481                     PWM3PRL         equ	1153	;# 
  5987   000482                     PWM3PRH         equ	1154	;# 
  5988   000483                     PWM3CPRE        equ	1155	;# 
  5989   000484                     PWM3PIPOS       equ	1156	;# 
  5990   000485                     PWM3GIR         equ	1157	;# 
  5991   000486                     PWM3GIE         equ	1158	;# 
  5992   000487                     PWM3CON         equ	1159	;# 
  5993   000488                     PWM3S1CFG       equ	1160	;# 
  5994   000489                     PWM3S1P1        equ	1161	;# 
  5995   000489                     PWM3S1P1L       equ	1161	;# 
  5996   00048A                     PWM3S1P1H       equ	1162	;# 
  5997   00048B                     PWM3S1P2        equ	1163	;# 
  5998   00048B                     PWM3S1P2L       equ	1163	;# 
  5999   00048C                     PWM3S1P2H       equ	1164	;# 
  6000   00048D                     PWM4ERS         equ	1165	;# 
  6001   00048E                     PWM4CLK         equ	1166	;# 
  6002   00048F                     PWM4LDS         equ	1167	;# 
  6003   000490                     PWM4PR          equ	1168	;# 
  6004   000490                     PWM4PRL         equ	1168	;# 
  6005   000491                     PWM4PRH         equ	1169	;# 
  6006   000492                     PWM4CPRE        equ	1170	;# 
  6007   000493                     PWM4PIPOS       equ	1171	;# 
  6008   000494                     PWM4GIR         equ	1172	;# 
  6009   000495                     PWM4GIE         equ	1173	;# 
  6010   000496                     PWM4CON         equ	1174	;# 
  6011   000497                     PWM4S1CFG       equ	1175	;# 
  6012   000498                     PWM4S1P1        equ	1176	;# 
  6013   000498                     PWM4S1P1L       equ	1176	;# 
  6014   000499                     PWM4S1P1H       equ	1177	;# 
  6015   00049A                     PWM4S1P2        equ	1178	;# 
  6016   00049A                     PWM4S1P2L       equ	1178	;# 
  6017   00049B                     PWM4S1P2H       equ	1179	;# 
  6018   00049C                     PWMLOAD         equ	1180	;# 
  6019   00049D                     PWMEN           equ	1181	;# 
  6020   00049E                     PIE0            equ	1182	;# 
  6021   00049F                     PIE1            equ	1183	;# 
  6022   0004A0                     PIE2            equ	1184	;# 
  6023   0004A1                     PIE3            equ	1185	;# 
  6024   0004A2                     PIE4            equ	1186	;# 
  6025   0004A3                     PIE5            equ	1187	;# 
  6026   0004A4                     PIE6            equ	1188	;# 
  6027   0004A5                     PIE7            equ	1189	;# 
  6028   0004A6                     PIE8            equ	1190	;# 
  6029   0004A7                     PIE9            equ	1191	;# 
  6030   0004A8                     PIE10           equ	1192	;# 
  6031   0004A9                     PIE11           equ	1193	;# 
  6032   0004AA                     PIE12           equ	1194	;# 
  6033   0004AB                     PIE13           equ	1195	;# 
  6034   0004AC                     PIE14           equ	1196	;# 
  6035   0004AD                     PIE15           equ	1197	;# 
  6036   0004AE                     PIR0            equ	1198	;# 
  6037   0004AF                     PIR1            equ	1199	;# 
  6038   0004B0                     PIR2            equ	1200	;# 
  6039   0004B1                     PIR3            equ	1201	;# 
  6040   0004B2                     PIR4            equ	1202	;# 
  6041   0004B3                     PIR5            equ	1203	;# 
  6042   0004B4                     PIR6            equ	1204	;# 
  6043   0004B5                     PIR7            equ	1205	;# 
  6044   0004B6                     PIR8            equ	1206	;# 
  6045   0004B7                     PIR9            equ	1207	;# 
  6046   0004B8                     PIR10           equ	1208	;# 
  6047   0004B9                     PIR11           equ	1209	;# 
  6048   0004BA                     PIR12           equ	1210	;# 
  6049   0004BB                     PIR13           equ	1211	;# 
  6050   0004BC                     PIR14           equ	1212	;# 
  6051   0004BD                     PIR15           equ	1213	;# 
  6052   0004BE                     LATA            equ	1214	;# 
  6053   0004BF                     LATB            equ	1215	;# 
  6054   0004C0                     LATC            equ	1216	;# 
  6055   0004C6                     TRISA           equ	1222	;# 
  6056   0004C7                     TRISB           equ	1223	;# 
  6057   0004C8                     TRISC           equ	1224	;# 
  6058   0004CA                     TRISE           equ	1226	;# 
  6059   0004CE                     PORTA           equ	1230	;# 
  6060   0004CF                     PORTB           equ	1231	;# 
  6061   0004D0                     PORTC           equ	1232	;# 
  6062   0004D2                     PORTE           equ	1234	;# 
  6063   0004D6                     INTCON0         equ	1238	;# 
  6064   0004D7                     INTCON1         equ	1239	;# 
  6065   0004D8                     STATUS          equ	1240	;# 
  6066   0004D9                     FSR2            equ	1241	;# 
  6067   0004D9                     FSR2L           equ	1241	;# 
  6068   0004DA                     FSR2H           equ	1242	;# 
  6069   0004DB                     PLUSW2          equ	1243	;# 
  6070   0004DC                     PREINC2         equ	1244	;# 
  6071   0004DD                     POSTDEC2        equ	1245	;# 
  6072   0004DE                     POSTINC2        equ	1246	;# 
  6073   0004DF                     INDF2           equ	1247	;# 
  6074   0004E0                     BSR             equ	1248	;# 
  6075   0004E1                     FSR1            equ	1249	;# 
  6076   0004E1                     FSR1L           equ	1249	;# 
  6077   0004E2                     FSR1H           equ	1250	;# 
  6078   0004E3                     PLUSW1          equ	1251	;# 
  6079   0004E4                     PREINC1         equ	1252	;# 
  6080   0004E5                     POSTDEC1        equ	1253	;# 
  6081   0004E6                     POSTINC1        equ	1254	;# 
  6082   0004E7                     INDF1           equ	1255	;# 
  6083   0004E8                     WREG            equ	1256	;# 
  6084   0004E9                     FSR0            equ	1257	;# 
  6085   0004E9                     FSR0L           equ	1257	;# 
  6086   0004EA                     FSR0H           equ	1258	;# 
  6087   0004EB                     PLUSW0          equ	1259	;# 
  6088   0004EC                     PREINC0         equ	1260	;# 
  6089   0004ED                     POSTDEC0        equ	1261	;# 
  6090   0004EE                     POSTINC0        equ	1262	;# 
  6091   0004EF                     INDF0           equ	1263	;# 
  6092   0004F0                     PCON0           equ	1264	;# 
  6093   0004F1                     PCON1           equ	1265	;# 
  6094   0004F2                     CPUDOZE         equ	1266	;# 
  6095   0004F3                     PROD            equ	1267	;# 
  6096   0004F3                     PRODL           equ	1267	;# 
  6097   0004F4                     PRODH           equ	1268	;# 
  6098   0004F5                     TABLAT          equ	1269	;# 
  6099   0004F6                     TBLPTR          equ	1270	;# 
  6100   0004F6                     TBLPTRL         equ	1270	;# 
  6101   0004F7                     TBLPTRH         equ	1271	;# 
  6102   0004F8                     TBLPTRU         equ	1272	;# 
  6103   0004F9                     PCLAT           equ	1273	;# 
  6104   0004F9                     PCL             equ	1273	;# 
  6105   0004FA                     PCLATH          equ	1274	;# 
  6106   0004FB                     PCLATU          equ	1275	;# 
  6107   0004FC                     STKPTR          equ	1276	;# 
  6108   0004FD                     TOS             equ	1277	;# 
  6109   0004FD                     TOSL            equ	1277	;# 
  6110   0004FE                     TOSH            equ	1278	;# 
  6111   0004FF                     TOSU            equ	1279	;# 
  6112                           
  6113                           	psect	eeprom_data
  6114   3803FF                     	org	1023	;# 
  6115   3803FF  00                 	db	0	;# 
  6116   000038                     BOOTREG         equ	56	;# 
  6117   000039                     CLKRCON         equ	57	;# 
  6118   00003A                     CLKRCLK         equ	58	;# 
  6119   000040                     NVMCON0         equ	64	;# 
  6120   000041                     NVMCON1         equ	65	;# 
  6121   000042                     NVMLOCK         equ	66	;# 
  6122   000043                     NVMADR          equ	67	;# 
  6123   000043                     NVMADRL         equ	67	;# 
  6124   000044                     NVMADRH         equ	68	;# 
  6125   000045                     NVMADRU         equ	69	;# 
  6126   000046                     NVMDAT          equ	70	;# 
  6127   000046                     NVMDATL         equ	70	;# 
  6128   000047                     NVMDATH         equ	71	;# 
  6129   000048                     VREGCON         equ	72	;# 
  6130   000049                     BORCON          equ	73	;# 
  6131   00004A                     HLVDCON0        equ	74	;# 
  6132   00004B                     HLVDCON1        equ	75	;# 
  6133   00004C                     ZCDCON          equ	76	;# 
  6134   000060                     PMD0            equ	96	;# 
  6135   000061                     PMD1            equ	97	;# 
  6136   000062                     PMD2            equ	98	;# 
  6137   000063                     PMD3            equ	99	;# 
  6138   000064                     PMD4            equ	100	;# 
  6139   000065                     PMD5            equ	101	;# 
  6140   000066                     PMD6            equ	102	;# 
  6141   000067                     PMD7            equ	103	;# 
  6142   000068                     PMD8            equ	104	;# 
  6143   00006A                     MD1CON0         equ	106	;# 
  6144   00006B                     MD1CON1         equ	107	;# 
  6145   00006C                     MD1SRC          equ	108	;# 
  6146   00006D                     MD1CARL         equ	109	;# 
  6147   00006E                     MD1CARH         equ	110	;# 
  6148   00006F                     CMOUT           equ	111	;# 
  6149   000070                     CM1CON0         equ	112	;# 
  6150   000071                     CM1CON1         equ	113	;# 
  6151   000072                     CM1NCH          equ	114	;# 
  6152   000073                     CM1PCH          equ	115	;# 
  6153   000074                     CM2CON0         equ	116	;# 
  6154   000075                     CM2CON1         equ	117	;# 
  6155   000076                     CM2NCH          equ	118	;# 
  6156   000077                     CM2PCH          equ	119	;# 
  6157   000078                     WDTCON0         equ	120	;# 
  6158   000079                     WDTCON1         equ	121	;# 
  6159   00007A                     WDTPSL          equ	122	;# 
  6160   00007B                     WDTPSH          equ	123	;# 
  6161   00007C                     WDTTMR          equ	124	;# 
  6162   00007D                     DAC1DAT         equ	125	;# 
  6163   00007D                     DAC1DATL        equ	125	;# 
  6164   00007F                     DAC1CON         equ	127	;# 
  6165   000080                     SPI1RXB         equ	128	;# 
  6166   000081                     SPI1TXB         equ	129	;# 
  6167   000082                     SPI1TCNT        equ	130	;# 
  6168   000082                     SPI1TCNTL       equ	130	;# 
  6169   000083                     SPI1TCNTH       equ	131	;# 
  6170   000084                     SPI1CON0        equ	132	;# 
  6171   000085                     SPI1CON1        equ	133	;# 
  6172   000086                     SPI1CON2        equ	134	;# 
  6173   000087                     SPI1STATUS      equ	135	;# 
  6174   000088                     SPI1TWIDTH      equ	136	;# 
  6175   000089                     SPI1BAUD        equ	137	;# 
  6176   00008A                     SPI1INTF        equ	138	;# 
  6177   00008B                     SPI1INTE        equ	139	;# 
  6178   00008C                     SPI1CLK         equ	140	;# 
  6179   00008D                     SPI2RXB         equ	141	;# 
  6180   00008E                     SPI2TXB         equ	142	;# 
  6181   00008F                     SPI2TCNT        equ	143	;# 
  6182   00008F                     SPI2TCNTL       equ	143	;# 
  6183   000090                     SPI2TCNTH       equ	144	;# 
  6184   000091                     SPI2CON0        equ	145	;# 
  6185   000092                     SPI2CON1        equ	146	;# 
  6186   000093                     SPI2CON2        equ	147	;# 
  6187   000094                     SPI2STATUS      equ	148	;# 
  6188   000095                     SPI2TWIDTH      equ	149	;# 
  6189   000096                     SPI2BAUD        equ	150	;# 
  6190   000097                     SPI2INTF        equ	151	;# 
  6191   000098                     SPI2INTE        equ	152	;# 
  6192   000099                     SPI2CLK         equ	153	;# 
  6193   0000AC                     ACTCON          equ	172	;# 
  6194   0000AD                     OSCCON1         equ	173	;# 
  6195   0000AE                     OSCCON2         equ	174	;# 
  6196   0000AF                     OSCCON3         equ	175	;# 
  6197   0000B0                     OSCTUNE         equ	176	;# 
  6198   0000B1                     OSCFRQ          equ	177	;# 
  6199   0000B1                     OSCFREQ         equ	177	;# 
  6200   0000B2                     OSCSTAT         equ	178	;# 
  6201   0000B2                     OSCSTAT1        equ	178	;# 
  6202   0000B3                     OSCEN           equ	179	;# 
  6203   0000B4                     PRLOCK          equ	180	;# 
  6204   0000B5                     SCANPR          equ	181	;# 
  6205   0000B6                     DMA1PR          equ	182	;# 
  6206   0000B7                     DMA2PR          equ	183	;# 
  6207   0000B8                     DMA3PR          equ	184	;# 
  6208   0000B9                     DMA4PR          equ	185	;# 
  6209   0000BA                     DMA5PR          equ	186	;# 
  6210   0000BB                     DMA6PR          equ	187	;# 
  6211   0000BC                     DMA7PR          equ	188	;# 
  6212   0000BD                     DMA8PR          equ	189	;# 
  6213   0000BE                     MAINPR          equ	190	;# 
  6214   0000BF                     ISRPR           equ	191	;# 
  6215   0000D4                     CLCDATA         equ	212	;# 
  6216   0000D5                     CLCSELECT       equ	213	;# 
  6217   0000D6                     CLCnCON         equ	214	;# 
  6218   0000D7                     CLCnPOL         equ	215	;# 
  6219   0000D8                     CLCnSEL0        equ	216	;# 
  6220   0000D9                     CLCnSEL1        equ	217	;# 
  6221   0000DA                     CLCnSEL2        equ	218	;# 
  6222   0000DB                     CLCnSEL3        equ	219	;# 
  6223   0000DC                     CLCnGLS0        equ	220	;# 
  6224   0000DD                     CLCnGLS1        equ	221	;# 
  6225   0000DE                     CLCnGLS2        equ	222	;# 
  6226   0000DF                     CLCnGLS3        equ	223	;# 
  6227   0000E8                     DMASELECT       equ	232	;# 
  6228   0000E9                     DMAnBUF         equ	233	;# 
  6229   0000EA                     DMAnDCNT        equ	234	;# 
  6230   0000EA                     DMAnDCNTL       equ	234	;# 
  6231   0000EB                     DMAnDCNTH       equ	235	;# 
  6232   0000EC                     DMAnDPTR        equ	236	;# 
  6233   0000EC                     DMAnDPTRL       equ	236	;# 
  6234   0000ED                     DMAnDPTRH       equ	237	;# 
  6235   0000EE                     DMAnDSZ         equ	238	;# 
  6236   0000EE                     DMAnDSZL        equ	238	;# 
  6237   0000EF                     DMAnDSZH        equ	239	;# 
  6238   0000F0                     DMAnDSA         equ	240	;# 
  6239   0000F0                     DMAnDSAL        equ	240	;# 
  6240   0000F1                     DMAnDSAH        equ	241	;# 
  6241   0000F2                     DMAnSCNT        equ	242	;# 
  6242   0000F2                     DMAnSCNTL       equ	242	;# 
  6243   0000F3                     DMAnSCNTH       equ	243	;# 
  6244   0000F4                     DMAnSPTR        equ	244	;# 
  6245   0000F4                     DMAnSPTRL       equ	244	;# 
  6246   0000F5                     DMAnSPTRH       equ	245	;# 
  6247   0000F6                     DMAnSPTRU       equ	246	;# 
  6248   0000F7                     DMAnSSZ         equ	247	;# 
  6249   0000F7                     DMAnSSZL        equ	247	;# 
  6250   0000F8                     DMAnSSZH        equ	248	;# 
  6251   0000F9                     DMAnSSA         equ	249	;# 
  6252   0000F9                     DMAnSSAL        equ	249	;# 
  6253   0000FA                     DMAnSSAH        equ	250	;# 
  6254   0000FB                     DMAnSSAU        equ	251	;# 
  6255   0000FC                     DMAnCON0        equ	252	;# 
  6256   0000FD                     DMAnCON1        equ	253	;# 
  6257   0000FE                     DMAnAIRQ        equ	254	;# 
  6258   0000FF                     DMAnSIRQ        equ	255	;# 
  6259   000100                     C1CONL          equ	256	;# 
  6260   000101                     C1CONH          equ	257	;# 
  6261   000102                     C1CONU          equ	258	;# 
  6262   000103                     C1CONT          equ	259	;# 
  6263   000104                     C1NBTCFGL       equ	260	;# 
  6264   000105                     C1NBTCFGH       equ	261	;# 
  6265   000106                     C1NBTCFGU       equ	262	;# 
  6266   000107                     C1NBTCFGT       equ	263	;# 
  6267   000108                     C1DBTCFGL       equ	264	;# 
  6268   000109                     C1DBTCFGH       equ	265	;# 
  6269   00010A                     C1DBTCFGU       equ	266	;# 
  6270   00010B                     C1DBTCFGT       equ	267	;# 
  6271   00010C                     C1TDCL          equ	268	;# 
  6272   00010D                     C1TDCH          equ	269	;# 
  6273   00010E                     C1TDCU          equ	270	;# 
  6274   000110                     C1TBC           equ	272	;# 
  6275   000110                     C1TBCL          equ	272	;# 
  6276   000111                     C1TBCH          equ	273	;# 
  6277   000112                     C1TBCU          equ	274	;# 
  6278   000113                     C1TBCT          equ	275	;# 
  6279   000114                     C1TSCONL        equ	276	;# 
  6280   000115                     C1TSCONH        equ	277	;# 
  6281   000116                     C1TSCONU        equ	278	;# 
  6282   000117                     C1TSCONT        equ	279	;# 
  6283   000118                     C1VECL          equ	280	;# 
  6284   000119                     C1VECH          equ	281	;# 
  6285   00011A                     C1VECU          equ	282	;# 
  6286   00011B                     C1VECT          equ	283	;# 
  6287   00011C                     C1INTL          equ	284	;# 
  6288   00011D                     C1INTH          equ	285	;# 
  6289   00011E                     C1INTU          equ	286	;# 
  6290   00011F                     C1INTT          equ	287	;# 
  6291   000120                     C1RXIF          equ	288	;# 
  6292   000120                     C1RXIFL         equ	288	;# 
  6293   000121                     C1RXIFH         equ	289	;# 
  6294   000122                     C1RXIFU         equ	290	;# 
  6295   000123                     C1RXIFT         equ	291	;# 
  6296   000124                     C1TXIF          equ	292	;# 
  6297   000124                     C1TXIFL         equ	292	;# 
  6298   000125                     C1TXIFH         equ	293	;# 
  6299   000126                     C1TXIFU         equ	294	;# 
  6300   000127                     C1TXIFT         equ	295	;# 
  6301   000128                     C1RXOVIF        equ	296	;# 
  6302   000128                     C1RXOVIFL       equ	296	;# 
  6303   000129                     C1RXOVIFH       equ	297	;# 
  6304   00012A                     C1RXOVIFU       equ	298	;# 
  6305   00012B                     C1RXOVIFT       equ	299	;# 
  6306   00012C                     C1TXATIF        equ	300	;# 
  6307   00012C                     C1TXATIFL       equ	300	;# 
  6308   00012D                     C1TXATIFH       equ	301	;# 
  6309   00012E                     C1TXATIFU       equ	302	;# 
  6310   00012F                     C1TXATIFT       equ	303	;# 
  6311   000130                     C1TXREQ         equ	304	;# 
  6312   000130                     C1TXREQL        equ	304	;# 
  6313   000131                     C1TXREQH        equ	305	;# 
  6314   000132                     C1TXREQU        equ	306	;# 
  6315   000133                     C1TXREQT        equ	307	;# 
  6316   000134                     C1TRECL         equ	308	;# 
  6317   000135                     C1TRECH         equ	309	;# 
  6318   000136                     C1TRECU         equ	310	;# 
  6319   000137                     C1TRECT         equ	311	;# 
  6320   000138                     C1BDIAG0L       equ	312	;# 
  6321   000139                     C1BDIAG0H       equ	313	;# 
  6322   00013C                     C1BDIAG1L       equ	316	;# 
  6323   00013D                     C1BDIAG1H       equ	317	;# 
  6324   00013E                     C1BDIAG1U       equ	318	;# 
  6325   00013F                     C1BDIAG1T       equ	319	;# 
  6326   000140                     C1TEFCONL       equ	320	;# 
  6327   000141                     C1TEFCONH       equ	321	;# 
  6328   000142                     C1TEFCONU       equ	322	;# 
  6329   000143                     C1TEFCONT       equ	323	;# 
  6330   000144                     C1TEFSTAL       equ	324	;# 
  6331   000145                     C1TEFSTAH       equ	325	;# 
  6332   000146                     C1TEFSTAU       equ	326	;# 
  6333   000147                     C1TEFSTAT       equ	327	;# 
  6334   000148                     C1TEFUA         equ	328	;# 
  6335   000148                     C1TEFUAL        equ	328	;# 
  6336   000149                     C1TEFUAH        equ	329	;# 
  6337   00014A                     C1TEFUAU        equ	330	;# 
  6338   00014B                     C1TEFUAT        equ	331	;# 
  6339   00014C                     C1FIFOBA        equ	332	;# 
  6340   00014C                     C1FIFOBAL       equ	332	;# 
  6341   00014D                     C1FIFOBAH       equ	333	;# 
  6342   00014E                     C1FIFOBAU       equ	334	;# 
  6343   00014F                     C1FIFOBAT       equ	335	;# 
  6344   000150                     C1TXQCONL       equ	336	;# 
  6345   000151                     C1TXQCONH       equ	337	;# 
  6346   000152                     C1TXQCONU       equ	338	;# 
  6347   000153                     C1TXQCONT       equ	339	;# 
  6348   000154                     C1TXQSTAL       equ	340	;# 
  6349   000155                     C1TXQSTAH       equ	341	;# 
  6350   000156                     C1TXQSTAU       equ	342	;# 
  6351   000157                     C1TXQSTAT       equ	343	;# 
  6352   000158                     C1TXQUA         equ	344	;# 
  6353   000158                     C1TXQUAL        equ	344	;# 
  6354   000159                     C1TXQUAH        equ	345	;# 
  6355   00015A                     C1TXQUAU        equ	346	;# 
  6356   00015B                     C1TXQUAT        equ	347	;# 
  6357   00015C                     C1FIFOCON1      equ	348	;# 
  6358   00015C                     C1FIFOCON1L     equ	348	;# 
  6359   00015D                     C1FIFOCON1H     equ	349	;# 
  6360   00015E                     C1FIFOCON1U     equ	350	;# 
  6361   00015F                     C1FIFOCON1T     equ	351	;# 
  6362   000160                     C1FIFOSTA1      equ	352	;# 
  6363   000160                     C1FIFOSTA1L     equ	352	;# 
  6364   000161                     C1FIFOSTA1H     equ	353	;# 
  6365   000162                     C1FIFOSTA1U     equ	354	;# 
  6366   000163                     C1FIFOSTA1T     equ	355	;# 
  6367   000164                     C1FIFOUA1       equ	356	;# 
  6368   000164                     C1FIFOUA1L      equ	356	;# 
  6369   000165                     C1FIFOUA1H      equ	357	;# 
  6370   000166                     C1FIFOUA1U      equ	358	;# 
  6371   000167                     C1FIFOUA1T      equ	359	;# 
  6372   000168                     C1FIFOCON2      equ	360	;# 
  6373   000168                     C1FIFOCON2L     equ	360	;# 
  6374   000169                     C1FIFOCON2H     equ	361	;# 
  6375   00016A                     C1FIFOCON2U     equ	362	;# 
  6376   00016B                     C1FIFOCON2T     equ	363	;# 
  6377   00016C                     C1FIFOSTA2      equ	364	;# 
  6378   00016C                     C1FIFOSTA2L     equ	364	;# 
  6379   00016D                     C1FIFOSTA2H     equ	365	;# 
  6380   00016E                     C1FIFOSTA2U     equ	366	;# 
  6381   00016F                     C1FIFOSTA2T     equ	367	;# 
  6382   000170                     C1FIFOUA2       equ	368	;# 
  6383   000170                     C1FIFOUA2L      equ	368	;# 
  6384   000171                     C1FIFOUA2H      equ	369	;# 
  6385   000172                     C1FIFOUA2U      equ	370	;# 
  6386   000173                     C1FIFOUA2T      equ	371	;# 
  6387   000174                     C1FIFOCON3      equ	372	;# 
  6388   000174                     C1FIFOCON3L     equ	372	;# 
  6389   000175                     C1FIFOCON3H     equ	373	;# 
  6390   000176                     C1FIFOCON3U     equ	374	;# 
  6391   000177                     C1FIFOCON3T     equ	375	;# 
  6392   000178                     C1FIFOSTA3      equ	376	;# 
  6393   000178                     C1FIFOSTA3L     equ	376	;# 
  6394   000179                     C1FIFOSTA3H     equ	377	;# 
  6395   00017A                     C1FIFOSTA3U     equ	378	;# 
  6396   00017B                     C1FIFOSTA3T     equ	379	;# 
  6397   00017C                     C1FIFOUA3       equ	380	;# 
  6398   00017C                     C1FIFOUA3L      equ	380	;# 
  6399   00017D                     C1FIFOUA3H      equ	381	;# 
  6400   00017E                     C1FIFOUA3U      equ	382	;# 
  6401   00017F                     C1FIFOUA3T      equ	383	;# 
  6402   000180                     C1FLTCON0L      equ	384	;# 
  6403   000181                     C1FLTCON0H      equ	385	;# 
  6404   000182                     C1FLTCON0U      equ	386	;# 
  6405   000183                     C1FLTCON0T      equ	387	;# 
  6406   000184                     C1FLTCON1L      equ	388	;# 
  6407   000185                     C1FLTCON1H      equ	389	;# 
  6408   000186                     C1FLTCON1U      equ	390	;# 
  6409   000187                     C1FLTCON1T      equ	391	;# 
  6410   000188                     C1FLTCON2L      equ	392	;# 
  6411   000189                     C1FLTCON2H      equ	393	;# 
  6412   00018A                     C1FLTCON2U      equ	394	;# 
  6413   00018B                     C1FLTCON2T      equ	395	;# 
  6414   00018C                     C1FLTOBJ0       equ	396	;# 
  6415   00018C                     C1FLTOBJ0L      equ	396	;# 
  6416   00018D                     C1FLTOBJ0H      equ	397	;# 
  6417   00018E                     C1FLTOBJ0U      equ	398	;# 
  6418   00018F                     C1FLTOBJ0T      equ	399	;# 
  6419   000190                     C1MASK0         equ	400	;# 
  6420   000190                     C1MASK0L        equ	400	;# 
  6421   000191                     C1MASK0H        equ	401	;# 
  6422   000192                     C1MASK0U        equ	402	;# 
  6423   000193                     C1MASK0T        equ	403	;# 
  6424   000194                     C1FLTOBJ1       equ	404	;# 
  6425   000194                     C1FLTOBJ1L      equ	404	;# 
  6426   000195                     C1FLTOBJ1H      equ	405	;# 
  6427   000196                     C1FLTOBJ1U      equ	406	;# 
  6428   000197                     C1FLTOBJ1T      equ	407	;# 
  6429   000198                     C1MASK1         equ	408	;# 
  6430   000198                     C1MASK1L        equ	408	;# 
  6431   000199                     C1MASK1H        equ	409	;# 
  6432   00019A                     C1MASK1U        equ	410	;# 
  6433   00019B                     C1MASK1T        equ	411	;# 
  6434   00019C                     C1FLTOBJ2       equ	412	;# 
  6435   00019C                     C1FLTOBJ2L      equ	412	;# 
  6436   00019D                     C1FLTOBJ2H      equ	413	;# 
  6437   00019E                     C1FLTOBJ2U      equ	414	;# 
  6438   00019F                     C1FLTOBJ2T      equ	415	;# 
  6439   0001A0                     C1MASK2         equ	416	;# 
  6440   0001A0                     C1MASK2L        equ	416	;# 
  6441   0001A1                     C1MASK2H        equ	417	;# 
  6442   0001A2                     C1MASK2U        equ	418	;# 
  6443   0001A3                     C1MASK2T        equ	419	;# 
  6444   0001A4                     C1FLTOBJ3       equ	420	;# 
  6445   0001A4                     C1FLTOBJ3L      equ	420	;# 
  6446   0001A5                     C1FLTOBJ3H      equ	421	;# 
  6447   0001A6                     C1FLTOBJ3U      equ	422	;# 
  6448   0001A7                     C1FLTOBJ3T      equ	423	;# 
  6449   0001A8                     C1MASK3         equ	424	;# 
  6450   0001A8                     C1MASK3L        equ	424	;# 
  6451   0001A9                     C1MASK3H        equ	425	;# 
  6452   0001AA                     C1MASK3U        equ	426	;# 
  6453   0001AB                     C1MASK3T        equ	427	;# 
  6454   0001AC                     C1FLTOBJ4       equ	428	;# 
  6455   0001AC                     C1FLTOBJ4L      equ	428	;# 
  6456   0001AD                     C1FLTOBJ4H      equ	429	;# 
  6457   0001AE                     C1FLTOBJ4U      equ	430	;# 
  6458   0001AF                     C1FLTOBJ4T      equ	431	;# 
  6459   0001B0                     C1MASK4         equ	432	;# 
  6460   0001B0                     C1MASK4L        equ	432	;# 
  6461   0001B1                     C1MASK4H        equ	433	;# 
  6462   0001B2                     C1MASK4U        equ	434	;# 
  6463   0001B3                     C1MASK4T        equ	435	;# 
  6464   0001B4                     C1FLTOBJ5       equ	436	;# 
  6465   0001B4                     C1FLTOBJ5L      equ	436	;# 
  6466   0001B5                     C1FLTOBJ5H      equ	437	;# 
  6467   0001B6                     C1FLTOBJ5U      equ	438	;# 
  6468   0001B7                     C1FLTOBJ5T      equ	439	;# 
  6469   0001B8                     C1MASK5         equ	440	;# 
  6470   0001B8                     C1MASK5L        equ	440	;# 
  6471   0001B9                     C1MASK5H        equ	441	;# 
  6472   0001BA                     C1MASK5U        equ	442	;# 
  6473   0001BB                     C1MASK5T        equ	443	;# 
  6474   0001BC                     C1FLTOBJ6       equ	444	;# 
  6475   0001BC                     C1FLTOBJ6L      equ	444	;# 
  6476   0001BD                     C1FLTOBJ6H      equ	445	;# 
  6477   0001BE                     C1FLTOBJ6U      equ	446	;# 
  6478   0001BF                     C1FLTOBJ6T      equ	447	;# 
  6479   0001C0                     C1MASK6         equ	448	;# 
  6480   0001C0                     C1MASK6L        equ	448	;# 
  6481   0001C1                     C1MASK6H        equ	449	;# 
  6482   0001C2                     C1MASK6U        equ	450	;# 
  6483   0001C3                     C1MASK6T        equ	451	;# 
  6484   0001C4                     C1FLTOBJ7       equ	452	;# 
  6485   0001C4                     C1FLTOBJ7L      equ	452	;# 
  6486   0001C5                     C1FLTOBJ7H      equ	453	;# 
  6487   0001C6                     C1FLTOBJ7U      equ	454	;# 
  6488   0001C7                     C1FLTOBJ7T      equ	455	;# 
  6489   0001C8                     C1MASK7         equ	456	;# 
  6490   0001C8                     C1MASK7L        equ	456	;# 
  6491   0001C9                     C1MASK7H        equ	457	;# 
  6492   0001CA                     C1MASK7U        equ	458	;# 
  6493   0001CB                     C1MASK7T        equ	459	;# 
  6494   0001CC                     C1FLTOBJ8       equ	460	;# 
  6495   0001CC                     C1FLTOBJ8L      equ	460	;# 
  6496   0001CD                     C1FLTOBJ8H      equ	461	;# 
  6497   0001CE                     C1FLTOBJ8U      equ	462	;# 
  6498   0001CF                     C1FLTOBJ8T      equ	463	;# 
  6499   0001D0                     C1MASK8         equ	464	;# 
  6500   0001D0                     C1MASK8L        equ	464	;# 
  6501   0001D1                     C1MASK8H        equ	465	;# 
  6502   0001D2                     C1MASK8U        equ	466	;# 
  6503   0001D3                     C1MASK8T        equ	467	;# 
  6504   0001D4                     C1FLTOBJ9       equ	468	;# 
  6505   0001D4                     C1FLTOBJ9L      equ	468	;# 
  6506   0001D5                     C1FLTOBJ9H      equ	469	;# 
  6507   0001D6                     C1FLTOBJ9U      equ	470	;# 
  6508   0001D7                     C1FLTOBJ9T      equ	471	;# 
  6509   0001D8                     C1MASK9         equ	472	;# 
  6510   0001D8                     C1MASK9L        equ	472	;# 
  6511   0001D9                     C1MASK9H        equ	473	;# 
  6512   0001DA                     C1MASK9U        equ	474	;# 
  6513   0001DB                     C1MASK9T        equ	475	;# 
  6514   0001DC                     C1FLTOBJ10      equ	476	;# 
  6515   0001DC                     C1FLTOBJ10L     equ	476	;# 
  6516   0001DD                     C1FLTOBJ10H     equ	477	;# 
  6517   0001DE                     C1FLTOBJ10U     equ	478	;# 
  6518   0001DF                     C1FLTOBJ10T     equ	479	;# 
  6519   0001E0                     C1MASK10        equ	480	;# 
  6520   0001E0                     C1MASK10L       equ	480	;# 
  6521   0001E1                     C1MASK10H       equ	481	;# 
  6522   0001E2                     C1MASK10U       equ	482	;# 
  6523   0001E3                     C1MASK10T       equ	483	;# 
  6524   0001E4                     C1FLTOBJ11      equ	484	;# 
  6525   0001E4                     C1FLTOBJ11L     equ	484	;# 
  6526   0001E5                     C1FLTOBJ11H     equ	485	;# 
  6527   0001E6                     C1FLTOBJ11U     equ	486	;# 
  6528   0001E7                     C1FLTOBJ11T     equ	487	;# 
  6529   0001E8                     C1MASK11        equ	488	;# 
  6530   0001E8                     C1MASK11L       equ	488	;# 
  6531   0001E9                     C1MASK11H       equ	489	;# 
  6532   0001EA                     C1MASK11U       equ	490	;# 
  6533   0001EB                     C1MASK11T       equ	491	;# 
  6534   000200                     PPSLOCK         equ	512	;# 
  6535   000201                     RA0PPS          equ	513	;# 
  6536   000202                     RA1PPS          equ	514	;# 
  6537   000203                     RA2PPS          equ	515	;# 
  6538   000204                     RA3PPS          equ	516	;# 
  6539   000205                     RA4PPS          equ	517	;# 
  6540   000206                     RA5PPS          equ	518	;# 
  6541   000207                     RA6PPS          equ	519	;# 
  6542   000208                     RA7PPS          equ	520	;# 
  6543   000209                     RB0PPS          equ	521	;# 
  6544   00020A                     RB1PPS          equ	522	;# 
  6545   00020B                     RB2PPS          equ	523	;# 
  6546   00020C                     RB3PPS          equ	524	;# 
  6547   00020D                     RB4PPS          equ	525	;# 
  6548   00020E                     RB5PPS          equ	526	;# 
  6549   00020F                     RB6PPS          equ	527	;# 
  6550   000210                     RB7PPS          equ	528	;# 
  6551   000211                     RC0PPS          equ	529	;# 
  6552   000212                     RC1PPS          equ	530	;# 
  6553   000213                     RC2PPS          equ	531	;# 
  6554   000214                     RC3PPS          equ	532	;# 
  6555   000215                     RC4PPS          equ	533	;# 
  6556   000216                     RC5PPS          equ	534	;# 
  6557   000217                     RC6PPS          equ	535	;# 
  6558   000218                     RC7PPS          equ	536	;# 
  6559   00023D                     CANRXPPS        equ	573	;# 
  6560   00023E                     INT0PPS         equ	574	;# 
  6561   00023F                     INT1PPS         equ	575	;# 
  6562   000240                     INT2PPS         equ	576	;# 
  6563   000241                     T0CKIPPS        equ	577	;# 
  6564   000242                     T1CKIPPS        equ	578	;# 
  6565   000243                     T1GPPS          equ	579	;# 
  6566   000244                     T3CKIPPS        equ	580	;# 
  6567   000245                     T3GPPS          equ	581	;# 
  6568   000246                     T5CKIPPS        equ	582	;# 
  6569   000247                     T5GPPS          equ	583	;# 
  6570   000248                     T2INPPS         equ	584	;# 
  6571   000249                     T4INPPS         equ	585	;# 
  6572   00024A                     T6INPPS         equ	586	;# 
  6573   00024B                     TUIN0PPS        equ	587	;# 
  6574   00024C                     TUIN1PPS        equ	588	;# 
  6575   00024F                     CCP1PPS         equ	591	;# 
  6576   000250                     CCP2PPS         equ	592	;# 
  6577   000251                     CCP3PPS         equ	593	;# 
  6578   000253                     PWM1ERSPPS      equ	595	;# 
  6579   000254                     PWM2ERSPPS      equ	596	;# 
  6580   000255                     PWM3ERSPPS      equ	597	;# 
  6581   000256                     PWM4ERSPPS      equ	598	;# 
  6582   000257                     PWMIN0PPS       equ	599	;# 
  6583   000258                     PWMIN1PPS       equ	600	;# 
  6584   000259                     SMT1WINPPS      equ	601	;# 
  6585   00025A                     SMT1SIGPPS      equ	602	;# 
  6586   00025B                     CWG1PPS         equ	603	;# 
  6587   00025B                     CWG1INPPS       equ	603	;# 
  6588   00025C                     CWG2PPS         equ	604	;# 
  6589   00025C                     CWG2INPPS       equ	604	;# 
  6590   00025D                     CWG3PPS         equ	605	;# 
  6591   00025D                     CWG3INPPS       equ	605	;# 
  6592   00025E                     MD1CARLPPS      equ	606	;# 
  6593   00025E                     MDCARLPPS       equ	606	;# 
  6594   00025F                     MD1CARHPPS      equ	607	;# 
  6595   00025F                     MDCARHPPS       equ	607	;# 
  6596   000260                     MD1SRCPPS       equ	608	;# 
  6597   000260                     MDSRCPPS        equ	608	;# 
  6598   000261                     CLCIN0PPS       equ	609	;# 
  6599   000262                     CLCIN1PPS       equ	610	;# 
  6600   000263                     CLCIN2PPS       equ	611	;# 
  6601   000264                     CLCIN3PPS       equ	612	;# 
  6602   000265                     CLCIN4PPS       equ	613	;# 
  6603   000266                     CLCIN5PPS       equ	614	;# 
  6604   000267                     CLCIN6PPS       equ	615	;# 
  6605   000268                     CLCIN7PPS       equ	616	;# 
  6606   000269                     ADACTPPS        equ	617	;# 
  6607   00026A                     SPI1SCKPPS      equ	618	;# 
  6608   00026B                     SPI1SDIPPS      equ	619	;# 
  6609   00026C                     SPI1SSPPS       equ	620	;# 
  6610   00026D                     SPI2SCKPPS      equ	621	;# 
  6611   00026E                     SPI2SDIPPS      equ	622	;# 
  6612   00026F                     SPI2SSPPS       equ	623	;# 
  6613   000270                     I2C1SDAPPS      equ	624	;# 
  6614   000271                     I2C1SCLPPS      equ	625	;# 
  6615   000272                     U1RXPPS         equ	626	;# 
  6616   000273                     U1CTSPPS        equ	627	;# 
  6617   000274                     U2RXPPS         equ	628	;# 
  6618   000275                     U2CTSPPS        equ	629	;# 
  6619   000276                     U3RXPPS         equ	630	;# 
  6620   000277                     U3CTSPPS        equ	631	;# 
  6621   000278                     U4RXPPS         equ	632	;# 
  6622   000279                     U4CTSPPS        equ	633	;# 
  6623   00027A                     U5RXPPS         equ	634	;# 
  6624   00027B                     U5CTSPPS        equ	635	;# 
  6625   000286                     RC4I2C          equ	646	;# 
  6626   000287                     RC3I2C          equ	647	;# 
  6627   000288                     RB2I2C          equ	648	;# 
  6628   000289                     RB1I2C          equ	649	;# 
  6629   00028A                     I2C1RXB         equ	650	;# 
  6630   00028B                     I2C1TXB         equ	651	;# 
  6631   00028C                     I2C1CNTL        equ	652	;# 
  6632   00028D                     I2C1CNTH        equ	653	;# 
  6633   00028E                     I2C1ADB0        equ	654	;# 
  6634   00028F                     I2C1ADB1        equ	655	;# 
  6635   000290                     I2C1ADR0        equ	656	;# 
  6636   000291                     I2C1ADR1        equ	657	;# 
  6637   000292                     I2C1ADR2        equ	658	;# 
  6638   000293                     I2C1ADR3        equ	659	;# 
  6639   000294                     I2C1CON0        equ	660	;# 
  6640   000295                     I2C1CON1        equ	661	;# 
  6641   000296                     I2C1CON2        equ	662	;# 
  6642   000297                     I2C1ERR         equ	663	;# 
  6643   000298                     I2C1STAT0       equ	664	;# 
  6644   000299                     I2C1STAT1       equ	665	;# 
  6645   00029A                     I2C1PIR         equ	666	;# 
  6646   00029B                     I2C1PIE         equ	667	;# 
  6647   00029C                     I2C1BTO         equ	668	;# 
  6648   00029D                     I2C1BAUD        equ	669	;# 
  6649   00029E                     I2C1CLK         equ	670	;# 
  6650   00029F                     I2C1BTOC        equ	671	;# 
  6651   0002A1                     U1RXB           equ	673	;# 
  6652   0002A1                     U1RXBL          equ	673	;# 
  6653   0002A2                     U1RXCHK         equ	674	;# 
  6654   0002A3                     U1TXB           equ	675	;# 
  6655   0002A3                     U1TXBL          equ	675	;# 
  6656   0002A4                     U1TXCHK         equ	676	;# 
  6657   0002A5                     U1P1            equ	677	;# 
  6658   0002A5                     U1P1L           equ	677	;# 
  6659   0002A6                     U1P1H           equ	678	;# 
  6660   0002A7                     U1P2            equ	679	;# 
  6661   0002A7                     U1P2L           equ	679	;# 
  6662   0002A8                     U1P2H           equ	680	;# 
  6663   0002A9                     U1P3            equ	681	;# 
  6664   0002A9                     U1P3L           equ	681	;# 
  6665   0002AA                     U1P3H           equ	682	;# 
  6666   0002AB                     U1CON0          equ	683	;# 
  6667   0002AC                     U1CON1          equ	684	;# 
  6668   0002AD                     U1CON2          equ	685	;# 
  6669   0002AE                     U1BRG           equ	686	;# 
  6670   0002AE                     U1BRGL          equ	686	;# 
  6671   0002AF                     U1BRGH          equ	687	;# 
  6672   0002B0                     U1FIFO          equ	688	;# 
  6673   0002B1                     U1UIR           equ	689	;# 
  6674   0002B2                     U1ERRIR         equ	690	;# 
  6675   0002B3                     U1ERRIE         equ	691	;# 
  6676   0002B4                     U2RXB           equ	692	;# 
  6677   0002B4                     U2RXBL          equ	692	;# 
  6678   0002B5                     U2RXCHK         equ	693	;# 
  6679   0002B6                     U2TXB           equ	694	;# 
  6680   0002B6                     U2TXBL          equ	694	;# 
  6681   0002B7                     U2TXCHK         equ	695	;# 
  6682   0002B8                     U2P1            equ	696	;# 
  6683   0002B8                     U2P1L           equ	696	;# 
  6684   0002B9                     U2P1H           equ	697	;# 
  6685   0002BA                     U2P2            equ	698	;# 
  6686   0002BA                     U2P2L           equ	698	;# 
  6687   0002BB                     U2P2H           equ	699	;# 
  6688   0002BC                     U2P3            equ	700	;# 
  6689   0002BC                     U2P3L           equ	700	;# 
  6690   0002BD                     U2P3H           equ	701	;# 
  6691   0002BE                     U2CON0          equ	702	;# 
  6692   0002BF                     U2CON1          equ	703	;# 
  6693   0002C0                     U2CON2          equ	704	;# 
  6694   0002C1                     U2BRG           equ	705	;# 
  6695   0002C1                     U2BRGL          equ	705	;# 
  6696   0002C2                     U2BRGH          equ	706	;# 
  6697   0002C3                     U2FIFO          equ	707	;# 
  6698   0002C4                     U2UIR           equ	708	;# 
  6699   0002C5                     U2ERRIR         equ	709	;# 
  6700   0002C6                     U2ERRIE         equ	710	;# 
  6701   0002C7                     U3RXB           equ	711	;# 
  6702   0002C7                     U3RXBL          equ	711	;# 
  6703   0002C9                     U3TXB           equ	713	;# 
  6704   0002C9                     U3TXBL          equ	713	;# 
  6705   0002CB                     U3P1            equ	715	;# 
  6706   0002CB                     U3P1L           equ	715	;# 
  6707   0002CD                     U3P2            equ	717	;# 
  6708   0002CD                     U3P2L           equ	717	;# 
  6709   0002CF                     U3P3            equ	719	;# 
  6710   0002CF                     U3P3L           equ	719	;# 
  6711   0002D1                     U3CON0          equ	721	;# 
  6712   0002D2                     U3CON1          equ	722	;# 
  6713   0002D3                     U3CON2          equ	723	;# 
  6714   0002D4                     U3BRG           equ	724	;# 
  6715   0002D4                     U3BRGL          equ	724	;# 
  6716   0002D5                     U3BRGH          equ	725	;# 
  6717   0002D6                     U3FIFO          equ	726	;# 
  6718   0002D7                     U3UIR           equ	727	;# 
  6719   0002D8                     U3ERRIR         equ	728	;# 
  6720   0002D9                     U3ERRIE         equ	729	;# 
  6721   0002DA                     U4RXB           equ	730	;# 
  6722   0002DA                     U4RXBL          equ	730	;# 
  6723   0002DC                     U4TXB           equ	732	;# 
  6724   0002DC                     U4TXBL          equ	732	;# 
  6725   0002DE                     U4P1            equ	734	;# 
  6726   0002DE                     U4P1L           equ	734	;# 
  6727   0002E0                     U4P2            equ	736	;# 
  6728   0002E0                     U4P2L           equ	736	;# 
  6729   0002E2                     U4P3            equ	738	;# 
  6730   0002E2                     U4P3L           equ	738	;# 
  6731   0002E4                     U4CON0          equ	740	;# 
  6732   0002E5                     U4CON1          equ	741	;# 
  6733   0002E6                     U4CON2          equ	742	;# 
  6734   0002E7                     U4BRG           equ	743	;# 
  6735   0002E7                     U4BRGL          equ	743	;# 
  6736   0002E8                     U4BRGH          equ	744	;# 
  6737   0002E9                     U4FIFO          equ	745	;# 
  6738   0002EA                     U4UIR           equ	746	;# 
  6739   0002EB                     U4ERRIR         equ	747	;# 
  6740   0002EC                     U4ERRIE         equ	748	;# 
  6741   0002ED                     U5RXB           equ	749	;# 
  6742   0002ED                     U5RXBL          equ	749	;# 
  6743   0002EF                     U5TXB           equ	751	;# 
  6744   0002EF                     U5TXBL          equ	751	;# 
  6745   0002F1                     U5P1            equ	753	;# 
  6746   0002F1                     U5P1L           equ	753	;# 
  6747   0002F3                     U5P2            equ	755	;# 
  6748   0002F3                     U5P2L           equ	755	;# 
  6749   0002F5                     U5P3            equ	757	;# 
  6750   0002F5                     U5P3L           equ	757	;# 
  6751   0002F7                     U5CON0          equ	759	;# 
  6752   0002F8                     U5CON1          equ	760	;# 
  6753   0002F9                     U5CON2          equ	761	;# 
  6754   0002FA                     U5BRG           equ	762	;# 
  6755   0002FA                     U5BRGL          equ	762	;# 
  6756   0002FB                     U5BRGH          equ	763	;# 
  6757   0002FC                     U5FIFO          equ	764	;# 
  6758   0002FD                     U5UIR           equ	765	;# 
  6759   0002FE                     U5ERRIR         equ	766	;# 
  6760   0002FF                     U5ERRIE         equ	767	;# 
  6761   000300                     SMT1TMR         equ	768	;# 
  6762   000300                     SMT1TMRL        equ	768	;# 
  6763   000301                     SMT1TMRH        equ	769	;# 
  6764   000302                     SMT1TMRU        equ	770	;# 
  6765   000303                     SMT1CPR         equ	771	;# 
  6766   000303                     SMT1CPRL        equ	771	;# 
  6767   000304                     SMT1CPRH        equ	772	;# 
  6768   000305                     SMT1CPRU        equ	773	;# 
  6769   000306                     SMT1CPW         equ	774	;# 
  6770   000306                     SMT1CPWL        equ	774	;# 
  6771   000307                     SMT1CPWH        equ	775	;# 
  6772   000308                     SMT1CPWU        equ	776	;# 
  6773   000309                     SMT1PR          equ	777	;# 
  6774   000309                     SMT1PRL         equ	777	;# 
  6775   00030A                     SMT1PRH         equ	778	;# 
  6776   00030B                     SMT1PRU         equ	779	;# 
  6777   00030C                     SMT1CON0        equ	780	;# 
  6778   00030D                     SMT1CON1        equ	781	;# 
  6779   00030E                     SMT1STAT        equ	782	;# 
  6780   00030F                     SMT1CLK         equ	783	;# 
  6781   000310                     SMT1SIG         equ	784	;# 
  6782   000311                     SMT1WIN         equ	785	;# 
  6783   000318                     TMR0L           equ	792	;# 
  6784   000318                     TMR0            equ	792	;# 
  6785   000319                     TMR0H           equ	793	;# 
  6786   000319                     PR0             equ	793	;# 
  6787   00031A                     T0CON0          equ	794	;# 
  6788   00031B                     T0CON1          equ	795	;# 
  6789   00031C                     TMR1            equ	796	;# 
  6790   00031C                     TMR1L           equ	796	;# 
  6791   00031D                     TMR1H           equ	797	;# 
  6792   00031E                     T1CON           equ	798	;# 
  6793   00031E                     TMR1CON         equ	798	;# 
  6794   00031F                     T1GCON          equ	799	;# 
  6795   00031F                     TMR1GCON        equ	799	;# 
  6796   000320                     T1GATE          equ	800	;# 
  6797   000320                     TMR1GATE        equ	800	;# 
  6798   000321                     T1CLK           equ	801	;# 
  6799   000321                     TMR1CLK         equ	801	;# 
  6800   000321                     PR1             equ	801	;# 
  6801   000322                     T2TMR           equ	802	;# 
  6802   000322                     TMR2            equ	802	;# 
  6803   000323                     T2PR            equ	803	;# 
  6804   000323                     PR2             equ	803	;# 
  6805   000324                     T2CON           equ	804	;# 
  6806   000325                     T2HLT           equ	805	;# 
  6807   000326                     T2CLKCON        equ	806	;# 
  6808   000326                     T2CLK           equ	806	;# 
  6809   000327                     T2RST           equ	807	;# 
  6810   000328                     TMR3            equ	808	;# 
  6811   000328                     TMR3L           equ	808	;# 
  6812   000329                     TMR3H           equ	809	;# 
  6813   00032A                     T3CON           equ	810	;# 
  6814   00032A                     TMR3CON         equ	810	;# 
  6815   00032B                     T3GCON          equ	811	;# 
  6816   00032B                     TMR3GCON        equ	811	;# 
  6817   00032C                     T3GATE          equ	812	;# 
  6818   00032C                     TMR3GATE        equ	812	;# 
  6819   00032D                     T3CLK           equ	813	;# 
  6820   00032D                     TMR3CLK         equ	813	;# 
  6821   00032D                     PR3             equ	813	;# 
  6822   00032E                     T4TMR           equ	814	;# 
  6823   00032E                     TMR4            equ	814	;# 
  6824   00032F                     T4PR            equ	815	;# 
  6825   00032F                     PR4             equ	815	;# 
  6826   000330                     T4CON           equ	816	;# 
  6827   000331                     T4HLT           equ	817	;# 
  6828   000332                     T4CLKCON        equ	818	;# 
  6829   000332                     T4CLK           equ	818	;# 
  6830   000333                     T4RST           equ	819	;# 
  6831   000334                     TMR5            equ	820	;# 
  6832   000334                     TMR5L           equ	820	;# 
  6833   000335                     TMR5H           equ	821	;# 
  6834   000336                     T5CON           equ	822	;# 
  6835   000336                     TMR5CON         equ	822	;# 
  6836   000337                     T5GCON          equ	823	;# 
  6837   000337                     TMR5GCON        equ	823	;# 
  6838   000338                     T5GATE          equ	824	;# 
  6839   000338                     TMR5GATE        equ	824	;# 
  6840   000339                     T5CLK           equ	825	;# 
  6841   000339                     TMR5CLK         equ	825	;# 
  6842   000339                     PR5             equ	825	;# 
  6843   00033A                     T6TMR           equ	826	;# 
  6844   00033A                     TMR6            equ	826	;# 
  6845   00033B                     T6PR            equ	827	;# 
  6846   00033B                     PR6             equ	827	;# 
  6847   00033C                     T6CON           equ	828	;# 
  6848   00033D                     T6HLT           equ	829	;# 
  6849   00033E                     T6CLKCON        equ	830	;# 
  6850   00033E                     T6CLK           equ	830	;# 
  6851   00033F                     T6RST           equ	831	;# 
  6852   000340                     CCPR1           equ	832	;# 
  6853   000340                     CCPR1L          equ	832	;# 
  6854   000341                     CCPR1H          equ	833	;# 
  6855   000342                     CCP1CON         equ	834	;# 
  6856   000343                     CCP1CAP         equ	835	;# 
  6857   000344                     CCPR2           equ	836	;# 
  6858   000344                     CCPR2L          equ	836	;# 
  6859   000345                     CCPR2H          equ	837	;# 
  6860   000346                     CCP2CON         equ	838	;# 
  6861   000347                     CCP2CAP         equ	839	;# 
  6862   000348                     CCPR3           equ	840	;# 
  6863   000348                     CCPR3L          equ	840	;# 
  6864   000349                     CCPR3H          equ	841	;# 
  6865   00034A                     CCP3CON         equ	842	;# 
  6866   00034B                     CCP3CAP         equ	843	;# 
  6867   00034C                     CCPTMRS0        equ	844	;# 
  6868   00034F                     CRCDATA         equ	847	;# 
  6869   00034F                     CRCDATAL        equ	847	;# 
  6870   000350                     CRCDATAH        equ	848	;# 
  6871   000351                     CRCDATAU        equ	849	;# 
  6872   000352                     CRCDATAT        equ	850	;# 
  6873   000353                     CRCOUT          equ	851	;# 
  6874   000353                     CRCSHFT         equ	851	;# 
  6875   000353                     CRCXOR          equ	851	;# 
  6876   000353                     CRCOUTL         equ	851	;# 
  6877   000353                     CRCSHFTL        equ	851	;# 
  6878   000353                     CRCSHIFTL       equ	851	;# 
  6879   000353                     CRCXORL         equ	851	;# 
  6880   000354                     CRCOUTH         equ	852	;# 
  6881   000354                     CRCSHFTH        equ	852	;# 
  6882   000354                     CRCSHIFTH       equ	852	;# 
  6883   000354                     CRCXORH         equ	852	;# 
  6884   000355                     CRCOUTU         equ	853	;# 
  6885   000355                     CRCSHFTU        equ	853	;# 
  6886   000355                     CRCSHIFTU       equ	853	;# 
  6887   000355                     CRCXORU         equ	853	;# 
  6888   000356                     CRCOUTT         equ	854	;# 
  6889   000356                     CRCSHFTT        equ	854	;# 
  6890   000356                     CRCSHIFTT       equ	854	;# 
  6891   000356                     CRCXORT         equ	854	;# 
  6892   000357                     CRCCON0         equ	855	;# 
  6893   000358                     CRCCON1         equ	856	;# 
  6894   000359                     CRCCON2         equ	857	;# 
  6895   00035A                     SCANLADR        equ	858	;# 
  6896   00035A                     SCANLADRL       equ	858	;# 
  6897   00035B                     SCANLADRH       equ	859	;# 
  6898   00035C                     SCANLADRU       equ	860	;# 
  6899   00035D                     SCANHADR        equ	861	;# 
  6900   00035D                     SCANHADRL       equ	861	;# 
  6901   00035E                     SCANHADRH       equ	862	;# 
  6902   00035F                     SCANHADRU       equ	863	;# 
  6903   000360                     SCANCON0        equ	864	;# 
  6904   000361                     SCANTRIG        equ	865	;# 
  6905   000362                     IPR0            equ	866	;# 
  6906   000363                     IPR1            equ	867	;# 
  6907   000364                     IPR2            equ	868	;# 
  6908   000365                     IPR3            equ	869	;# 
  6909   000366                     IPR4            equ	870	;# 
  6910   000367                     IPR5            equ	871	;# 
  6911   000368                     IPR6            equ	872	;# 
  6912   000369                     IPR7            equ	873	;# 
  6913   00036A                     IPR8            equ	874	;# 
  6914   00036B                     IPR9            equ	875	;# 
  6915   00036C                     IPR10           equ	876	;# 
  6916   00036D                     IPR11           equ	877	;# 
  6917   00036E                     IPR12           equ	878	;# 
  6918   00036F                     IPR13           equ	879	;# 
  6919   000370                     IPR14           equ	880	;# 
  6920   000371                     IPR15           equ	881	;# 
  6921   000373                     STATUS_CSHAD    equ	883	;# 
  6922   000374                     WREG_CSHAD      equ	884	;# 
  6923   000375                     BSR_CSHAD       equ	885	;# 
  6924   000376                     SHADCON         equ	886	;# 
  6925   000377                     STATUS_SHAD     equ	887	;# 
  6926   000378                     WREG_SHAD       equ	888	;# 
  6927   000379                     BSR_SHAD        equ	889	;# 
  6928   00037A                     PCLATH_SHAD     equ	890	;# 
  6929   00037B                     PCLATU_SHAD     equ	891	;# 
  6930   00037C                     FSR0SH          equ	892	;# 
  6931   00037C                     FSR0L_SHAD      equ	892	;# 
  6932   00037D                     FSR0H_SHAD      equ	893	;# 
  6933   00037E                     FSR1SH          equ	894	;# 
  6934   00037E                     FSR1L_SHAD      equ	894	;# 
  6935   00037F                     FSR1H_SHAD      equ	895	;# 
  6936   000380                     FSR2SH          equ	896	;# 
  6937   000380                     FSR2L_SHAD      equ	896	;# 
  6938   000381                     FSR2H_SHAD      equ	897	;# 
  6939   000382                     PRODSH          equ	898	;# 
  6940   000382                     PRODL_SHAD      equ	898	;# 
  6941   000383                     PRODH_SHAD      equ	899	;# 
  6942   000387                     TU16ACON0       equ	903	;# 
  6943   000388                     TU16ACON1       equ	904	;# 
  6944   000389                     TU16AHLT        equ	905	;# 
  6945   00038A                     TU16APS         equ	906	;# 
  6946   00038B                     TU16ATMR        equ	907	;# 
  6947   00038B                     TU16ACR         equ	907	;# 
  6948   00038B                     TU16ATMRL       equ	907	;# 
  6949   00038B                     TU16ACRL        equ	907	;# 
  6950   00038C                     TU16ATMRH       equ	908	;# 
  6951   00038C                     TU16ACRH        equ	908	;# 
  6952   00038D                     TU16APR         equ	909	;# 
  6953   00038D                     TU16APRL        equ	909	;# 
  6954   00038E                     TU16APRH        equ	910	;# 
  6955   00038F                     TU16ACLK        equ	911	;# 
  6956   000390                     TU16AERS        equ	912	;# 
  6957   000393                     TU16BCON0       equ	915	;# 
  6958   000394                     TU16BCON1       equ	916	;# 
  6959   000395                     TU16BHLT        equ	917	;# 
  6960   000396                     TU16BPS         equ	918	;# 
  6961   000397                     TU16BTMR        equ	919	;# 
  6962   000397                     TU16BCR         equ	919	;# 
  6963   000397                     TU16BTMRL       equ	919	;# 
  6964   000397                     TU16BCRL        equ	919	;# 
  6965   000398                     TU16BTMRH       equ	920	;# 
  6966   000398                     TU16BCRH        equ	920	;# 
  6967   000399                     TU16BPR         equ	921	;# 
  6968   000399                     TU16BPRL        equ	921	;# 
  6969   00039A                     TU16BPRH        equ	922	;# 
  6970   00039B                     TU16BCLK        equ	923	;# 
  6971   00039C                     TU16BERS        equ	924	;# 
  6972   0003BB                     TUCHAIN         equ	955	;# 
  6973   0003BC                     CWG1CLK         equ	956	;# 
  6974   0003BC                     CWG1CLKCON      equ	956	;# 
  6975   0003BD                     CWG1ISM         equ	957	;# 
  6976   0003BE                     CWG1DBR         equ	958	;# 
  6977   0003BF                     CWG1DBF         equ	959	;# 
  6978   0003C0                     CWG1CON0        equ	960	;# 
  6979   0003C1                     CWG1CON1        equ	961	;# 
  6980   0003C2                     CWG1AS0         equ	962	;# 
  6981   0003C3                     CWG1AS1         equ	963	;# 
  6982   0003C4                     CWG1STR         equ	964	;# 
  6983   0003C5                     CWG2CLK         equ	965	;# 
  6984   0003C5                     CWG2CLKCON      equ	965	;# 
  6985   0003C6                     CWG2ISM         equ	966	;# 
  6986   0003C7                     CWG2DBR         equ	967	;# 
  6987   0003C8                     CWG2DBF         equ	968	;# 
  6988   0003C9                     CWG2CON0        equ	969	;# 
  6989   0003CA                     CWG2CON1        equ	970	;# 
  6990   0003CB                     CWG2AS0         equ	971	;# 
  6991   0003CC                     CWG2AS1         equ	972	;# 
  6992   0003CD                     CWG2STR         equ	973	;# 
  6993   0003CE                     CWG3CLK         equ	974	;# 
  6994   0003CE                     CWG3CLKCON      equ	974	;# 
  6995   0003CF                     CWG3ISM         equ	975	;# 
  6996   0003D0                     CWG3DBR         equ	976	;# 
  6997   0003D1                     CWG3DBF         equ	977	;# 
  6998   0003D2                     CWG3CON0        equ	978	;# 
  6999   0003D3                     CWG3CON1        equ	979	;# 
  7000   0003D4                     CWG3AS0         equ	980	;# 
  7001   0003D5                     CWG3AS1         equ	981	;# 
  7002   0003D6                     CWG3STR         equ	982	;# 
  7003   0003D7                     FVRCON          equ	983	;# 
  7004   0003D8                     ADCPCON         equ	984	;# 
  7005   0003D8                     ADCP            equ	984	;# 
  7006   0003D9                     ADLTH           equ	985	;# 
  7007   0003D9                     ADLTHL          equ	985	;# 
  7008   0003DA                     ADLTHH          equ	986	;# 
  7009   0003DB                     ADUTH           equ	987	;# 
  7010   0003DB                     ADUTHL          equ	987	;# 
  7011   0003DC                     ADUTHH          equ	988	;# 
  7012   0003DD                     ADERR           equ	989	;# 
  7013   0003DD                     ADERRL          equ	989	;# 
  7014   0003DE                     ADERRH          equ	990	;# 
  7015   0003DF                     ADSTPT          equ	991	;# 
  7016   0003DF                     ADSTPTL         equ	991	;# 
  7017   0003E0                     ADSTPTH         equ	992	;# 
  7018   0003E1                     ADFLTR          equ	993	;# 
  7019   0003E1                     ADFLTRL         equ	993	;# 
  7020   0003E2                     ADFLTRH         equ	994	;# 
  7021   0003E3                     ADACC           equ	995	;# 
  7022   0003E3                     ADACCL          equ	995	;# 
  7023   0003E4                     ADACCH          equ	996	;# 
  7024   0003E5                     ADACCU          equ	997	;# 
  7025   0003E6                     ADCNT           equ	998	;# 
  7026   0003E7                     ADRPT           equ	999	;# 
  7027   0003E8                     ADPREV          equ	1000	;# 
  7028   0003E8                     ADPREVL         equ	1000	;# 
  7029   0003E9                     ADPREVH         equ	1001	;# 
  7030   0003EA                     ADRES           equ	1002	;# 
  7031   0003EA                     ADRESL          equ	1002	;# 
  7032   0003EB                     ADRESH          equ	1003	;# 
  7033   0003EC                     ADPCH           equ	1004	;# 
  7034   0003EE                     ADACQ           equ	1006	;# 
  7035   0003EE                     ADACQL          equ	1006	;# 
  7036   0003EF                     ADACQH          equ	1007	;# 
  7037   0003F0                     ADCAP           equ	1008	;# 
  7038   0003F1                     ADPRE           equ	1009	;# 
  7039   0003F1                     ADPREL          equ	1009	;# 
  7040   0003F2                     ADPREH          equ	1010	;# 
  7041   0003F3                     ADCON0          equ	1011	;# 
  7042   0003F4                     ADCON1          equ	1012	;# 
  7043   0003F5                     ADCON2          equ	1013	;# 
  7044   0003F6                     ADCON3          equ	1014	;# 
  7045   0003F7                     ADSTAT          equ	1015	;# 
  7046   0003F8                     ADREF           equ	1016	;# 
  7047   0003F9                     ADACT           equ	1017	;# 
  7048   0003FA                     ADCLK           equ	1018	;# 
  7049   0003FB                     ADCTX           equ	1019	;# 
  7050   0003FC                     ADCSEL1         equ	1020	;# 
  7051   0003FD                     ADCSEL2         equ	1021	;# 
  7052   0003FE                     ADCSEL3         equ	1022	;# 
  7053   0003FF                     ADCSEL4         equ	1023	;# 
  7054   000400                     ANSELA          equ	1024	;# 
  7055   000401                     WPUA            equ	1025	;# 
  7056   000402                     ODCONA          equ	1026	;# 
  7057   000403                     SLRCONA         equ	1027	;# 
  7058   000404                     INLVLA          equ	1028	;# 
  7059   000405                     IOCAP           equ	1029	;# 
  7060   000406                     IOCAN           equ	1030	;# 
  7061   000407                     IOCAF           equ	1031	;# 
  7062   000408                     ANSELB          equ	1032	;# 
  7063   000409                     WPUB            equ	1033	;# 
  7064   00040A                     ODCONB          equ	1034	;# 
  7065   00040B                     SLRCONB         equ	1035	;# 
  7066   00040C                     INLVLB          equ	1036	;# 
  7067   00040D                     IOCBP           equ	1037	;# 
  7068   00040E                     IOCBN           equ	1038	;# 
  7069   00040F                     IOCBF           equ	1039	;# 
  7070   000410                     ANSELC          equ	1040	;# 
  7071   000411                     WPUC            equ	1041	;# 
  7072   000412                     ODCONC          equ	1042	;# 
  7073   000413                     SLRCONC         equ	1043	;# 
  7074   000414                     INLVLC          equ	1044	;# 
  7075   000415                     IOCCP           equ	1045	;# 
  7076   000416                     IOCCN           equ	1046	;# 
  7077   000417                     IOCCF           equ	1047	;# 
  7078   000421                     WPUE            equ	1057	;# 
  7079   000424                     INLVLE          equ	1060	;# 
  7080   000425                     IOCEP           equ	1061	;# 
  7081   000426                     IOCEN           equ	1062	;# 
  7082   000427                     IOCEF           equ	1063	;# 
  7083   000440                     NCO1ACC         equ	1088	;# 
  7084   000440                     NCO1ACCL        equ	1088	;# 
  7085   000441                     NCO1ACCH        equ	1089	;# 
  7086   000442                     NCO1ACCU        equ	1090	;# 
  7087   000443                     NCO1INC         equ	1091	;# 
  7088   000443                     NCO1INCL        equ	1091	;# 
  7089   000444                     NCO1INCH        equ	1092	;# 
  7090   000445                     NCO1INCU        equ	1093	;# 
  7091   000446                     NCO1CON         equ	1094	;# 
  7092   000447                     NCO1CLK         equ	1095	;# 
  7093   000448                     NCO2ACC         equ	1096	;# 
  7094   000448                     NCO2ACCL        equ	1096	;# 
  7095   000449                     NCO2ACCH        equ	1097	;# 
  7096   00044A                     NCO2ACCU        equ	1098	;# 
  7097   00044B                     NCO2INC         equ	1099	;# 
  7098   00044B                     NCO2INCL        equ	1099	;# 
  7099   00044C                     NCO2INCH        equ	1100	;# 
  7100   00044D                     NCO2INCU        equ	1101	;# 
  7101   00044E                     NCO2CON         equ	1102	;# 
  7102   00044F                     NCO2CLK         equ	1103	;# 
  7103   000450                     NCO3ACC         equ	1104	;# 
  7104   000450                     NCO3ACCL        equ	1104	;# 
  7105   000451                     NCO3ACCH        equ	1105	;# 
  7106   000452                     NCO3ACCU        equ	1106	;# 
  7107   000453                     NCO3INC         equ	1107	;# 
  7108   000453                     NCO3INCL        equ	1107	;# 
  7109   000454                     NCO3INCH        equ	1108	;# 
  7110   000455                     NCO3INCU        equ	1109	;# 
  7111   000456                     NCO3CON         equ	1110	;# 
  7112   000457                     NCO3CLK         equ	1111	;# 
  7113   000458                     FSCMCON         equ	1112	;# 
  7114   000459                     IVTLOCK         equ	1113	;# 
  7115   00045A                     IVTAD           equ	1114	;# 
  7116   00045A                     IVTADL          equ	1114	;# 
  7117   00045B                     IVTADH          equ	1115	;# 
  7118   00045C                     IVTADU          equ	1116	;# 
  7119   00045D                     IVTBASE         equ	1117	;# 
  7120   00045D                     IVTBASEL        equ	1117	;# 
  7121   00045E                     IVTBASEH        equ	1118	;# 
  7122   00045F                     IVTBASEU        equ	1119	;# 
  7123   000460                     PWM1ERS         equ	1120	;# 
  7124   000461                     PWM1CLK         equ	1121	;# 
  7125   000462                     PWM1LDS         equ	1122	;# 
  7126   000463                     PWM1PR          equ	1123	;# 
  7127   000463                     PWM1PRL         equ	1123	;# 
  7128   000464                     PWM1PRH         equ	1124	;# 
  7129   000465                     PWM1CPRE        equ	1125	;# 
  7130   000466                     PWM1PIPOS       equ	1126	;# 
  7131   000467                     PWM1GIR         equ	1127	;# 
  7132   000468                     PWM1GIE         equ	1128	;# 
  7133   000469                     PWM1CON         equ	1129	;# 
  7134   00046A                     PWM1S1CFG       equ	1130	;# 
  7135   00046B                     PWM1S1P1        equ	1131	;# 
  7136   00046B                     PWM1S1P1L       equ	1131	;# 
  7137   00046C                     PWM1S1P1H       equ	1132	;# 
  7138   00046D                     PWM1S1P2        equ	1133	;# 
  7139   00046D                     PWM1S1P2L       equ	1133	;# 
  7140   00046E                     PWM1S1P2H       equ	1134	;# 
  7141   00046F                     PWM2ERS         equ	1135	;# 
  7142   000470                     PWM2CLK         equ	1136	;# 
  7143   000471                     PWM2LDS         equ	1137	;# 
  7144   000472                     PWM2PR          equ	1138	;# 
  7145   000472                     PWM2PRL         equ	1138	;# 
  7146   000473                     PWM2PRH         equ	1139	;# 
  7147   000474                     PWM2CPRE        equ	1140	;# 
  7148   000475                     PWM2PIPOS       equ	1141	;# 
  7149   000476                     PWM2GIR         equ	1142	;# 
  7150   000477                     PWM2GIE         equ	1143	;# 
  7151   000478                     PWM2CON         equ	1144	;# 
  7152   000479                     PWM2S1CFG       equ	1145	;# 
  7153   00047A                     PWM2S1P1        equ	1146	;# 
  7154   00047A                     PWM2S1P1L       equ	1146	;# 
  7155   00047B                     PWM2S1P1H       equ	1147	;# 
  7156   00047C                     PWM2S1P2        equ	1148	;# 
  7157   00047C                     PWM2S1P2L       equ	1148	;# 
  7158   00047D                     PWM2S1P2H       equ	1149	;# 
  7159   00047E                     PWM3ERS         equ	1150	;# 
  7160   00047F                     PWM3CLK         equ	1151	;# 
  7161   000480                     PWM3LDS         equ	1152	;# 
  7162   000481                     PWM3PR          equ	1153	;# 
  7163   000481                     PWM3PRL         equ	1153	;# 
  7164   000482                     PWM3PRH         equ	1154	;# 
  7165   000483                     PWM3CPRE        equ	1155	;# 
  7166   000484                     PWM3PIPOS       equ	1156	;# 
  7167   000485                     PWM3GIR         equ	1157	;# 
  7168   000486                     PWM3GIE         equ	1158	;# 
  7169   000487                     PWM3CON         equ	1159	;# 
  7170   000488                     PWM3S1CFG       equ	1160	;# 
  7171   000489                     PWM3S1P1        equ	1161	;# 
  7172   000489                     PWM3S1P1L       equ	1161	;# 
  7173   00048A                     PWM3S1P1H       equ	1162	;# 
  7174   00048B                     PWM3S1P2        equ	1163	;# 
  7175   00048B                     PWM3S1P2L       equ	1163	;# 
  7176   00048C                     PWM3S1P2H       equ	1164	;# 
  7177   00048D                     PWM4ERS         equ	1165	;# 
  7178   00048E                     PWM4CLK         equ	1166	;# 
  7179   00048F                     PWM4LDS         equ	1167	;# 
  7180   000490                     PWM4PR          equ	1168	;# 
  7181   000490                     PWM4PRL         equ	1168	;# 
  7182   000491                     PWM4PRH         equ	1169	;# 
  7183   000492                     PWM4CPRE        equ	1170	;# 
  7184   000493                     PWM4PIPOS       equ	1171	;# 
  7185   000494                     PWM4GIR         equ	1172	;# 
  7186   000495                     PWM4GIE         equ	1173	;# 
  7187   000496                     PWM4CON         equ	1174	;# 
  7188   000497                     PWM4S1CFG       equ	1175	;# 
  7189   000498                     PWM4S1P1        equ	1176	;# 
  7190   000498                     PWM4S1P1L       equ	1176	;# 
  7191   000499                     PWM4S1P1H       equ	1177	;# 
  7192   00049A                     PWM4S1P2        equ	1178	;# 
  7193   00049A                     PWM4S1P2L       equ	1178	;# 
  7194   00049B                     PWM4S1P2H       equ	1179	;# 
  7195   00049C                     PWMLOAD         equ	1180	;# 
  7196   00049D                     PWMEN           equ	1181	;# 
  7197   00049E                     PIE0            equ	1182	;# 
  7198   00049F                     PIE1            equ	1183	;# 
  7199   0004A0                     PIE2            equ	1184	;# 
  7200   0004A1                     PIE3            equ	1185	;# 
  7201   0004A2                     PIE4            equ	1186	;# 
  7202   0004A3                     PIE5            equ	1187	;# 
  7203   0004A4                     PIE6            equ	1188	;# 
  7204   0004A5                     PIE7            equ	1189	;# 
  7205   0004A6                     PIE8            equ	1190	;# 
  7206   0004A7                     PIE9            equ	1191	;# 
  7207   0004A8                     PIE10           equ	1192	;# 
  7208   0004A9                     PIE11           equ	1193	;# 
  7209   0004AA                     PIE12           equ	1194	;# 
  7210   0004AB                     PIE13           equ	1195	;# 
  7211   0004AC                     PIE14           equ	1196	;# 
  7212   0004AD                     PIE15           equ	1197	;# 
  7213   0004AE                     PIR0            equ	1198	;# 
  7214   0004AF                     PIR1            equ	1199	;# 
  7215   0004B0                     PIR2            equ	1200	;# 
  7216   0004B1                     PIR3            equ	1201	;# 
  7217   0004B2                     PIR4            equ	1202	;# 
  7218   0004B3                     PIR5            equ	1203	;# 
  7219   0004B4                     PIR6            equ	1204	;# 
  7220   0004B5                     PIR7            equ	1205	;# 
  7221   0004B6                     PIR8            equ	1206	;# 
  7222   0004B7                     PIR9            equ	1207	;# 
  7223   0004B8                     PIR10           equ	1208	;# 
  7224   0004B9                     PIR11           equ	1209	;# 
  7225   0004BA                     PIR12           equ	1210	;# 
  7226   0004BB                     PIR13           equ	1211	;# 
  7227   0004BC                     PIR14           equ	1212	;# 
  7228   0004BD                     PIR15           equ	1213	;# 
  7229   0004BE                     LATA            equ	1214	;# 
  7230   0004BF                     LATB            equ	1215	;# 
  7231   0004C0                     LATC            equ	1216	;# 
  7232   0004C6                     TRISA           equ	1222	;# 
  7233   0004C7                     TRISB           equ	1223	;# 
  7234   0004C8                     TRISC           equ	1224	;# 
  7235   0004CA                     TRISE           equ	1226	;# 
  7236   0004CE                     PORTA           equ	1230	;# 
  7237   0004CF                     PORTB           equ	1231	;# 
  7238   0004D0                     PORTC           equ	1232	;# 
  7239   0004D2                     PORTE           equ	1234	;# 
  7240   0004D6                     INTCON0         equ	1238	;# 
  7241   0004D7                     INTCON1         equ	1239	;# 
  7242   0004D8                     STATUS          equ	1240	;# 
  7243   0004D9                     FSR2            equ	1241	;# 
  7244   0004D9                     FSR2L           equ	1241	;# 
  7245   0004DA                     FSR2H           equ	1242	;# 
  7246   0004DB                     PLUSW2          equ	1243	;# 
  7247   0004DC                     PREINC2         equ	1244	;# 
  7248   0004DD                     POSTDEC2        equ	1245	;# 
  7249   0004DE                     POSTINC2        equ	1246	;# 
  7250   0004DF                     INDF2           equ	1247	;# 
  7251   0004E0                     BSR             equ	1248	;# 
  7252   0004E1                     FSR1            equ	1249	;# 
  7253   0004E1                     FSR1L           equ	1249	;# 
  7254   0004E2                     FSR1H           equ	1250	;# 
  7255   0004E3                     PLUSW1          equ	1251	;# 
  7256   0004E4                     PREINC1         equ	1252	;# 
  7257   0004E5                     POSTDEC1        equ	1253	;# 
  7258   0004E6                     POSTINC1        equ	1254	;# 
  7259   0004E7                     INDF1           equ	1255	;# 
  7260   0004E8                     WREG            equ	1256	;# 
  7261   0004E9                     FSR0            equ	1257	;# 
  7262   0004E9                     FSR0L           equ	1257	;# 
  7263   0004EA                     FSR0H           equ	1258	;# 
  7264   0004EB                     PLUSW0          equ	1259	;# 
  7265   0004EC                     PREINC0         equ	1260	;# 
  7266   0004ED                     POSTDEC0        equ	1261	;# 
  7267   0004EE                     POSTINC0        equ	1262	;# 
  7268   0004EF                     INDF0           equ	1263	;# 
  7269   0004F0                     PCON0           equ	1264	;# 
  7270   0004F1                     PCON1           equ	1265	;# 
  7271   0004F2                     CPUDOZE         equ	1266	;# 
  7272   0004F3                     PROD            equ	1267	;# 
  7273   0004F3                     PRODL           equ	1267	;# 
  7274   0004F4                     PRODH           equ	1268	;# 
  7275   0004F5                     TABLAT          equ	1269	;# 
  7276   0004F6                     TBLPTR          equ	1270	;# 
  7277   0004F6                     TBLPTRL         equ	1270	;# 
  7278   0004F7                     TBLPTRH         equ	1271	;# 
  7279   0004F8                     TBLPTRU         equ	1272	;# 
  7280   0004F9                     PCLAT           equ	1273	;# 
  7281   0004F9                     PCL             equ	1273	;# 
  7282   0004FA                     PCLATH          equ	1274	;# 
  7283   0004FB                     PCLATU          equ	1275	;# 
  7284   0004FC                     STKPTR          equ	1276	;# 
  7285   0004FD                     TOS             equ	1277	;# 
  7286   0004FD                     TOSL            equ	1277	;# 
  7287   0004FE                     TOSH            equ	1278	;# 
  7288   0004FF                     TOSU            equ	1279	;# 
  7289   000038                     BOOTREG         equ	56	;# 
  7290   000039                     CLKRCON         equ	57	;# 
  7291   00003A                     CLKRCLK         equ	58	;# 
  7292   000040                     NVMCON0         equ	64	;# 
  7293   000041                     NVMCON1         equ	65	;# 
  7294   000042                     NVMLOCK         equ	66	;# 
  7295   000043                     NVMADR          equ	67	;# 
  7296   000043                     NVMADRL         equ	67	;# 
  7297   000044                     NVMADRH         equ	68	;# 
  7298   000045                     NVMADRU         equ	69	;# 
  7299   000046                     NVMDAT          equ	70	;# 
  7300   000046                     NVMDATL         equ	70	;# 
  7301   000047                     NVMDATH         equ	71	;# 
  7302   000048                     VREGCON         equ	72	;# 
  7303   000049                     BORCON          equ	73	;# 
  7304   00004A                     HLVDCON0        equ	74	;# 
  7305   00004B                     HLVDCON1        equ	75	;# 
  7306   00004C                     ZCDCON          equ	76	;# 
  7307   000060                     PMD0            equ	96	;# 
  7308   000061                     PMD1            equ	97	;# 
  7309   000062                     PMD2            equ	98	;# 
  7310   000063                     PMD3            equ	99	;# 
  7311   000064                     PMD4            equ	100	;# 
  7312   000065                     PMD5            equ	101	;# 
  7313   000066                     PMD6            equ	102	;# 
  7314   000067                     PMD7            equ	103	;# 
  7315   000068                     PMD8            equ	104	;# 
  7316   00006A                     MD1CON0         equ	106	;# 
  7317   00006B                     MD1CON1         equ	107	;# 
  7318   00006C                     MD1SRC          equ	108	;# 
  7319   00006D                     MD1CARL         equ	109	;# 
  7320   00006E                     MD1CARH         equ	110	;# 
  7321   00006F                     CMOUT           equ	111	;# 
  7322   000070                     CM1CON0         equ	112	;# 
  7323   000071                     CM1CON1         equ	113	;# 
  7324   000072                     CM1NCH          equ	114	;# 
  7325   000073                     CM1PCH          equ	115	;# 
  7326   000074                     CM2CON0         equ	116	;# 
  7327   000075                     CM2CON1         equ	117	;# 
  7328   000076                     CM2NCH          equ	118	;# 
  7329   000077                     CM2PCH          equ	119	;# 
  7330   000078                     WDTCON0         equ	120	;# 
  7331   000079                     WDTCON1         equ	121	;# 
  7332   00007A                     WDTPSL          equ	122	;# 
  7333   00007B                     WDTPSH          equ	123	;# 
  7334   00007C                     WDTTMR          equ	124	;# 
  7335   00007D                     DAC1DAT         equ	125	;# 
  7336   00007D                     DAC1DATL        equ	125	;# 
  7337   00007F                     DAC1CON         equ	127	;# 
  7338   000080                     SPI1RXB         equ	128	;# 
  7339   000081                     SPI1TXB         equ	129	;# 
  7340   000082                     SPI1TCNT        equ	130	;# 
  7341   000082                     SPI1TCNTL       equ	130	;# 
  7342   000083                     SPI1TCNTH       equ	131	;# 
  7343   000084                     SPI1CON0        equ	132	;# 
  7344   000085                     SPI1CON1        equ	133	;# 
  7345   000086                     SPI1CON2        equ	134	;# 
  7346   000087                     SPI1STATUS      equ	135	;# 
  7347   000088                     SPI1TWIDTH      equ	136	;# 
  7348   000089                     SPI1BAUD        equ	137	;# 
  7349   00008A                     SPI1INTF        equ	138	;# 
  7350   00008B                     SPI1INTE        equ	139	;# 
  7351   00008C                     SPI1CLK         equ	140	;# 
  7352   00008D                     SPI2RXB         equ	141	;# 
  7353   00008E                     SPI2TXB         equ	142	;# 
  7354   00008F                     SPI2TCNT        equ	143	;# 
  7355   00008F                     SPI2TCNTL       equ	143	;# 
  7356   000090                     SPI2TCNTH       equ	144	;# 
  7357   000091                     SPI2CON0        equ	145	;# 
  7358   000092                     SPI2CON1        equ	146	;# 
  7359   000093                     SPI2CON2        equ	147	;# 
  7360   000094                     SPI2STATUS      equ	148	;# 
  7361   000095                     SPI2TWIDTH      equ	149	;# 
  7362   000096                     SPI2BAUD        equ	150	;# 
  7363   000097                     SPI2INTF        equ	151	;# 
  7364   000098                     SPI2INTE        equ	152	;# 
  7365   000099                     SPI2CLK         equ	153	;# 
  7366   0000AC                     ACTCON          equ	172	;# 
  7367   0000AD                     OSCCON1         equ	173	;# 
  7368   0000AE                     OSCCON2         equ	174	;# 
  7369   0000AF                     OSCCON3         equ	175	;# 
  7370   0000B0                     OSCTUNE         equ	176	;# 
  7371   0000B1                     OSCFRQ          equ	177	;# 
  7372   0000B1                     OSCFREQ         equ	177	;# 
  7373   0000B2                     OSCSTAT         equ	178	;# 
  7374   0000B2                     OSCSTAT1        equ	178	;# 
  7375   0000B3                     OSCEN           equ	179	;# 
  7376   0000B4                     PRLOCK          equ	180	;# 
  7377   0000B5                     SCANPR          equ	181	;# 
  7378   0000B6                     DMA1PR          equ	182	;# 
  7379   0000B7                     DMA2PR          equ	183	;# 
  7380   0000B8                     DMA3PR          equ	184	;# 
  7381   0000B9                     DMA4PR          equ	185	;# 
  7382   0000BA                     DMA5PR          equ	186	;# 
  7383   0000BB                     DMA6PR          equ	187	;# 
  7384   0000BC                     DMA7PR          equ	188	;# 
  7385   0000BD                     DMA8PR          equ	189	;# 
  7386   0000BE                     MAINPR          equ	190	;# 
  7387   0000BF                     ISRPR           equ	191	;# 
  7388   0000D4                     CLCDATA         equ	212	;# 
  7389   0000D5                     CLCSELECT       equ	213	;# 
  7390   0000D6                     CLCnCON         equ	214	;# 
  7391   0000D7                     CLCnPOL         equ	215	;# 
  7392   0000D8                     CLCnSEL0        equ	216	;# 
  7393   0000D9                     CLCnSEL1        equ	217	;# 
  7394   0000DA                     CLCnSEL2        equ	218	;# 
  7395   0000DB                     CLCnSEL3        equ	219	;# 
  7396   0000DC                     CLCnGLS0        equ	220	;# 
  7397   0000DD                     CLCnGLS1        equ	221	;# 
  7398   0000DE                     CLCnGLS2        equ	222	;# 
  7399   0000DF                     CLCnGLS3        equ	223	;# 
  7400   0000E8                     DMASELECT       equ	232	;# 
  7401   0000E9                     DMAnBUF         equ	233	;# 
  7402   0000EA                     DMAnDCNT        equ	234	;# 
  7403   0000EA                     DMAnDCNTL       equ	234	;# 
  7404   0000EB                     DMAnDCNTH       equ	235	;# 
  7405   0000EC                     DMAnDPTR        equ	236	;# 
  7406   0000EC                     DMAnDPTRL       equ	236	;# 
  7407   0000ED                     DMAnDPTRH       equ	237	;# 
  7408   0000EE                     DMAnDSZ         equ	238	;# 
  7409   0000EE                     DMAnDSZL        equ	238	;# 
  7410   0000EF                     DMAnDSZH        equ	239	;# 
  7411   0000F0                     DMAnDSA         equ	240	;# 
  7412   0000F0                     DMAnDSAL        equ	240	;# 
  7413   0000F1                     DMAnDSAH        equ	241	;# 
  7414   0000F2                     DMAnSCNT        equ	242	;# 
  7415   0000F2                     DMAnSCNTL       equ	242	;# 
  7416   0000F3                     DMAnSCNTH       equ	243	;# 
  7417   0000F4                     DMAnSPTR        equ	244	;# 
  7418   0000F4                     DMAnSPTRL       equ	244	;# 
  7419   0000F5                     DMAnSPTRH       equ	245	;# 
  7420   0000F6                     DMAnSPTRU       equ	246	;# 
  7421   0000F7                     DMAnSSZ         equ	247	;# 
  7422   0000F7                     DMAnSSZL        equ	247	;# 
  7423   0000F8                     DMAnSSZH        equ	248	;# 
  7424   0000F9                     DMAnSSA         equ	249	;# 
  7425   0000F9                     DMAnSSAL        equ	249	;# 
  7426   0000FA                     DMAnSSAH        equ	250	;# 
  7427   0000FB                     DMAnSSAU        equ	251	;# 
  7428   0000FC                     DMAnCON0        equ	252	;# 
  7429   0000FD                     DMAnCON1        equ	253	;# 
  7430   0000FE                     DMAnAIRQ        equ	254	;# 
  7431   0000FF                     DMAnSIRQ        equ	255	;# 
  7432   000100                     C1CONL          equ	256	;# 
  7433   000101                     C1CONH          equ	257	;# 
  7434   000102                     C1CONU          equ	258	;# 
  7435   000103                     C1CONT          equ	259	;# 
  7436   000104                     C1NBTCFGL       equ	260	;# 
  7437   000105                     C1NBTCFGH       equ	261	;# 
  7438   000106                     C1NBTCFGU       equ	262	;# 
  7439   000107                     C1NBTCFGT       equ	263	;# 
  7440   000108                     C1DBTCFGL       equ	264	;# 
  7441   000109                     C1DBTCFGH       equ	265	;# 
  7442   00010A                     C1DBTCFGU       equ	266	;# 
  7443   00010B                     C1DBTCFGT       equ	267	;# 
  7444   00010C                     C1TDCL          equ	268	;# 
  7445   00010D                     C1TDCH          equ	269	;# 
  7446   00010E                     C1TDCU          equ	270	;# 
  7447   000110                     C1TBC           equ	272	;# 
  7448   000110                     C1TBCL          equ	272	;# 
  7449   000111                     C1TBCH          equ	273	;# 
  7450   000112                     C1TBCU          equ	274	;# 
  7451   000113                     C1TBCT          equ	275	;# 
  7452   000114                     C1TSCONL        equ	276	;# 
  7453   000115                     C1TSCONH        equ	277	;# 
  7454   000116                     C1TSCONU        equ	278	;# 
  7455   000117                     C1TSCONT        equ	279	;# 
  7456   000118                     C1VECL          equ	280	;# 
  7457   000119                     C1VECH          equ	281	;# 
  7458   00011A                     C1VECU          equ	282	;# 
  7459   00011B                     C1VECT          equ	283	;# 
  7460   00011C                     C1INTL          equ	284	;# 
  7461   00011D                     C1INTH          equ	285	;# 
  7462   00011E                     C1INTU          equ	286	;# 
  7463   00011F                     C1INTT          equ	287	;# 
  7464   000120                     C1RXIF          equ	288	;# 
  7465   000120                     C1RXIFL         equ	288	;# 
  7466   000121                     C1RXIFH         equ	289	;# 
  7467   000122                     C1RXIFU         equ	290	;# 
  7468   000123                     C1RXIFT         equ	291	;# 
  7469   000124                     C1TXIF          equ	292	;# 
  7470   000124                     C1TXIFL         equ	292	;# 
  7471   000125                     C1TXIFH         equ	293	;# 
  7472   000126                     C1TXIFU         equ	294	;# 
  7473   000127                     C1TXIFT         equ	295	;# 
  7474   000128                     C1RXOVIF        equ	296	;# 
  7475   000128                     C1RXOVIFL       equ	296	;# 
  7476   000129                     C1RXOVIFH       equ	297	;# 
  7477   00012A                     C1RXOVIFU       equ	298	;# 
  7478   00012B                     C1RXOVIFT       equ	299	;# 
  7479   00012C                     C1TXATIF        equ	300	;# 
  7480   00012C                     C1TXATIFL       equ	300	;# 
  7481   00012D                     C1TXATIFH       equ	301	;# 
  7482   00012E                     C1TXATIFU       equ	302	;# 
  7483   00012F                     C1TXATIFT       equ	303	;# 
  7484   000130                     C1TXREQ         equ	304	;# 
  7485   000130                     C1TXREQL        equ	304	;# 
  7486   000131                     C1TXREQH        equ	305	;# 
  7487   000132                     C1TXREQU        equ	306	;# 
  7488   000133                     C1TXREQT        equ	307	;# 
  7489   000134                     C1TRECL         equ	308	;# 
  7490   000135                     C1TRECH         equ	309	;# 
  7491   000136                     C1TRECU         equ	310	;# 
  7492   000137                     C1TRECT         equ	311	;# 
  7493   000138                     C1BDIAG0L       equ	312	;# 
  7494   000139                     C1BDIAG0H       equ	313	;# 
  7495   00013C                     C1BDIAG1L       equ	316	;# 
  7496   00013D                     C1BDIAG1H       equ	317	;# 
  7497   00013E                     C1BDIAG1U       equ	318	;# 
  7498   00013F                     C1BDIAG1T       equ	319	;# 
  7499   000140                     C1TEFCONL       equ	320	;# 
  7500   000141                     C1TEFCONH       equ	321	;# 
  7501   000142                     C1TEFCONU       equ	322	;# 
  7502   000143                     C1TEFCONT       equ	323	;# 
  7503   000144                     C1TEFSTAL       equ	324	;# 
  7504   000145                     C1TEFSTAH       equ	325	;# 
  7505   000146                     C1TEFSTAU       equ	326	;# 
  7506   000147                     C1TEFSTAT       equ	327	;# 
  7507   000148                     C1TEFUA         equ	328	;# 
  7508   000148                     C1TEFUAL        equ	328	;# 
  7509   000149                     C1TEFUAH        equ	329	;# 
  7510   00014A                     C1TEFUAU        equ	330	;# 
  7511   00014B                     C1TEFUAT        equ	331	;# 
  7512   00014C                     C1FIFOBA        equ	332	;# 
  7513   00014C                     C1FIFOBAL       equ	332	;# 
  7514   00014D                     C1FIFOBAH       equ	333	;# 
  7515   00014E                     C1FIFOBAU       equ	334	;# 
  7516   00014F                     C1FIFOBAT       equ	335	;# 
  7517   000150                     C1TXQCONL       equ	336	;# 
  7518   000151                     C1TXQCONH       equ	337	;# 
  7519   000152                     C1TXQCONU       equ	338	;# 
  7520   000153                     C1TXQCONT       equ	339	;# 
  7521   000154                     C1TXQSTAL       equ	340	;# 
  7522   000155                     C1TXQSTAH       equ	341	;# 
  7523   000156                     C1TXQSTAU       equ	342	;# 
  7524   000157                     C1TXQSTAT       equ	343	;# 
  7525   000158                     C1TXQUA         equ	344	;# 
  7526   000158                     C1TXQUAL        equ	344	;# 
  7527   000159                     C1TXQUAH        equ	345	;# 
  7528   00015A                     C1TXQUAU        equ	346	;# 
  7529   00015B                     C1TXQUAT        equ	347	;# 
  7530   00015C                     C1FIFOCON1      equ	348	;# 
  7531   00015C                     C1FIFOCON1L     equ	348	;# 
  7532   00015D                     C1FIFOCON1H     equ	349	;# 
  7533   00015E                     C1FIFOCON1U     equ	350	;# 
  7534   00015F                     C1FIFOCON1T     equ	351	;# 
  7535   000160                     C1FIFOSTA1      equ	352	;# 
  7536   000160                     C1FIFOSTA1L     equ	352	;# 
  7537   000161                     C1FIFOSTA1H     equ	353	;# 
  7538   000162                     C1FIFOSTA1U     equ	354	;# 
  7539   000163                     C1FIFOSTA1T     equ	355	;# 
  7540   000164                     C1FIFOUA1       equ	356	;# 
  7541   000164                     C1FIFOUA1L      equ	356	;# 
  7542   000165                     C1FIFOUA1H      equ	357	;# 
  7543   000166                     C1FIFOUA1U      equ	358	;# 
  7544   000167                     C1FIFOUA1T      equ	359	;# 
  7545   000168                     C1FIFOCON2      equ	360	;# 
  7546   000168                     C1FIFOCON2L     equ	360	;# 
  7547   000169                     C1FIFOCON2H     equ	361	;# 
  7548   00016A                     C1FIFOCON2U     equ	362	;# 
  7549   00016B                     C1FIFOCON2T     equ	363	;# 
  7550   00016C                     C1FIFOSTA2      equ	364	;# 
  7551   00016C                     C1FIFOSTA2L     equ	364	;# 
  7552   00016D                     C1FIFOSTA2H     equ	365	;# 
  7553   00016E                     C1FIFOSTA2U     equ	366	;# 
  7554   00016F                     C1FIFOSTA2T     equ	367	;# 
  7555   000170                     C1FIFOUA2       equ	368	;# 
  7556   000170                     C1FIFOUA2L      equ	368	;# 
  7557   000171                     C1FIFOUA2H      equ	369	;# 
  7558   000172                     C1FIFOUA2U      equ	370	;# 
  7559   000173                     C1FIFOUA2T      equ	371	;# 
  7560   000174                     C1FIFOCON3      equ	372	;# 
  7561   000174                     C1FIFOCON3L     equ	372	;# 
  7562   000175                     C1FIFOCON3H     equ	373	;# 
  7563   000176                     C1FIFOCON3U     equ	374	;# 
  7564   000177                     C1FIFOCON3T     equ	375	;# 
  7565   000178                     C1FIFOSTA3      equ	376	;# 
  7566   000178                     C1FIFOSTA3L     equ	376	;# 
  7567   000179                     C1FIFOSTA3H     equ	377	;# 
  7568   00017A                     C1FIFOSTA3U     equ	378	;# 
  7569   00017B                     C1FIFOSTA3T     equ	379	;# 
  7570   00017C                     C1FIFOUA3       equ	380	;# 
  7571   00017C                     C1FIFOUA3L      equ	380	;# 
  7572   00017D                     C1FIFOUA3H      equ	381	;# 
  7573   00017E                     C1FIFOUA3U      equ	382	;# 
  7574   00017F                     C1FIFOUA3T      equ	383	;# 
  7575   000180                     C1FLTCON0L      equ	384	;# 
  7576   000181                     C1FLTCON0H      equ	385	;# 
  7577   000182                     C1FLTCON0U      equ	386	;# 
  7578   000183                     C1FLTCON0T      equ	387	;# 
  7579   000184                     C1FLTCON1L      equ	388	;# 
  7580   000185                     C1FLTCON1H      equ	389	;# 
  7581   000186                     C1FLTCON1U      equ	390	;# 
  7582   000187                     C1FLTCON1T      equ	391	;# 
  7583   000188                     C1FLTCON2L      equ	392	;# 
  7584   000189                     C1FLTCON2H      equ	393	;# 
  7585   00018A                     C1FLTCON2U      equ	394	;# 
  7586   00018B                     C1FLTCON2T      equ	395	;# 
  7587   00018C                     C1FLTOBJ0       equ	396	;# 
  7588   00018C                     C1FLTOBJ0L      equ	396	;# 
  7589   00018D                     C1FLTOBJ0H      equ	397	;# 
  7590   00018E                     C1FLTOBJ0U      equ	398	;# 
  7591   00018F                     C1FLTOBJ0T      equ	399	;# 
  7592   000190                     C1MASK0         equ	400	;# 
  7593   000190                     C1MASK0L        equ	400	;# 
  7594   000191                     C1MASK0H        equ	401	;# 
  7595   000192                     C1MASK0U        equ	402	;# 
  7596   000193                     C1MASK0T        equ	403	;# 
  7597   000194                     C1FLTOBJ1       equ	404	;# 
  7598   000194                     C1FLTOBJ1L      equ	404	;# 
  7599   000195                     C1FLTOBJ1H      equ	405	;# 
  7600   000196                     C1FLTOBJ1U      equ	406	;# 
  7601   000197                     C1FLTOBJ1T      equ	407	;# 
  7602   000198                     C1MASK1         equ	408	;# 
  7603   000198                     C1MASK1L        equ	408	;# 
  7604   000199                     C1MASK1H        equ	409	;# 
  7605   00019A                     C1MASK1U        equ	410	;# 
  7606   00019B                     C1MASK1T        equ	411	;# 
  7607   00019C                     C1FLTOBJ2       equ	412	;# 
  7608   00019C                     C1FLTOBJ2L      equ	412	;# 
  7609   00019D                     C1FLTOBJ2H      equ	413	;# 
  7610   00019E                     C1FLTOBJ2U      equ	414	;# 
  7611   00019F                     C1FLTOBJ2T      equ	415	;# 
  7612   0001A0                     C1MASK2         equ	416	;# 
  7613   0001A0                     C1MASK2L        equ	416	;# 
  7614   0001A1                     C1MASK2H        equ	417	;# 
  7615   0001A2                     C1MASK2U        equ	418	;# 
  7616   0001A3                     C1MASK2T        equ	419	;# 
  7617   0001A4                     C1FLTOBJ3       equ	420	;# 
  7618   0001A4                     C1FLTOBJ3L      equ	420	;# 
  7619   0001A5                     C1FLTOBJ3H      equ	421	;# 
  7620   0001A6                     C1FLTOBJ3U      equ	422	;# 
  7621   0001A7                     C1FLTOBJ3T      equ	423	;# 
  7622   0001A8                     C1MASK3         equ	424	;# 
  7623   0001A8                     C1MASK3L        equ	424	;# 
  7624   0001A9                     C1MASK3H        equ	425	;# 
  7625   0001AA                     C1MASK3U        equ	426	;# 
  7626   0001AB                     C1MASK3T        equ	427	;# 
  7627   0001AC                     C1FLTOBJ4       equ	428	;# 
  7628   0001AC                     C1FLTOBJ4L      equ	428	;# 
  7629   0001AD                     C1FLTOBJ4H      equ	429	;# 
  7630   0001AE                     C1FLTOBJ4U      equ	430	;# 
  7631   0001AF                     C1FLTOBJ4T      equ	431	;# 
  7632   0001B0                     C1MASK4         equ	432	;# 
  7633   0001B0                     C1MASK4L        equ	432	;# 
  7634   0001B1                     C1MASK4H        equ	433	;# 
  7635   0001B2                     C1MASK4U        equ	434	;# 
  7636   0001B3                     C1MASK4T        equ	435	;# 
  7637   0001B4                     C1FLTOBJ5       equ	436	;# 
  7638   0001B4                     C1FLTOBJ5L      equ	436	;# 
  7639   0001B5                     C1FLTOBJ5H      equ	437	;# 
  7640   0001B6                     C1FLTOBJ5U      equ	438	;# 
  7641   0001B7                     C1FLTOBJ5T      equ	439	;# 
  7642   0001B8                     C1MASK5         equ	440	;# 
  7643   0001B8                     C1MASK5L        equ	440	;# 
  7644   0001B9                     C1MASK5H        equ	441	;# 
  7645   0001BA                     C1MASK5U        equ	442	;# 
  7646   0001BB                     C1MASK5T        equ	443	;# 
  7647   0001BC                     C1FLTOBJ6       equ	444	;# 
  7648   0001BC                     C1FLTOBJ6L      equ	444	;# 
  7649   0001BD                     C1FLTOBJ6H      equ	445	;# 
  7650   0001BE                     C1FLTOBJ6U      equ	446	;# 
  7651   0001BF                     C1FLTOBJ6T      equ	447	;# 
  7652   0001C0                     C1MASK6         equ	448	;# 
  7653   0001C0                     C1MASK6L        equ	448	;# 
  7654   0001C1                     C1MASK6H        equ	449	;# 
  7655   0001C2                     C1MASK6U        equ	450	;# 
  7656   0001C3                     C1MASK6T        equ	451	;# 
  7657   0001C4                     C1FLTOBJ7       equ	452	;# 
  7658   0001C4                     C1FLTOBJ7L      equ	452	;# 
  7659   0001C5                     C1FLTOBJ7H      equ	453	;# 
  7660   0001C6                     C1FLTOBJ7U      equ	454	;# 
  7661   0001C7                     C1FLTOBJ7T      equ	455	;# 
  7662   0001C8                     C1MASK7         equ	456	;# 
  7663   0001C8                     C1MASK7L        equ	456	;# 
  7664   0001C9                     C1MASK7H        equ	457	;# 
  7665   0001CA                     C1MASK7U        equ	458	;# 
  7666   0001CB                     C1MASK7T        equ	459	;# 
  7667   0001CC                     C1FLTOBJ8       equ	460	;# 
  7668   0001CC                     C1FLTOBJ8L      equ	460	;# 
  7669   0001CD                     C1FLTOBJ8H      equ	461	;# 
  7670   0001CE                     C1FLTOBJ8U      equ	462	;# 
  7671   0001CF                     C1FLTOBJ8T      equ	463	;# 
  7672   0001D0                     C1MASK8         equ	464	;# 
  7673   0001D0                     C1MASK8L        equ	464	;# 
  7674   0001D1                     C1MASK8H        equ	465	;# 
  7675   0001D2                     C1MASK8U        equ	466	;# 
  7676   0001D3                     C1MASK8T        equ	467	;# 
  7677   0001D4                     C1FLTOBJ9       equ	468	;# 
  7678   0001D4                     C1FLTOBJ9L      equ	468	;# 
  7679   0001D5                     C1FLTOBJ9H      equ	469	;# 
  7680   0001D6                     C1FLTOBJ9U      equ	470	;# 
  7681   0001D7                     C1FLTOBJ9T      equ	471	;# 
  7682   0001D8                     C1MASK9         equ	472	;# 
  7683   0001D8                     C1MASK9L        equ	472	;# 
  7684   0001D9                     C1MASK9H        equ	473	;# 
  7685   0001DA                     C1MASK9U        equ	474	;# 
  7686   0001DB                     C1MASK9T        equ	475	;# 
  7687   0001DC                     C1FLTOBJ10      equ	476	;# 
  7688   0001DC                     C1FLTOBJ10L     equ	476	;# 
  7689   0001DD                     C1FLTOBJ10H     equ	477	;# 
  7690   0001DE                     C1FLTOBJ10U     equ	478	;# 
  7691   0001DF                     C1FLTOBJ10T     equ	479	;# 
  7692   0001E0                     C1MASK10        equ	480	;# 
  7693   0001E0                     C1MASK10L       equ	480	;# 
  7694   0001E1                     C1MASK10H       equ	481	;# 
  7695   0001E2                     C1MASK10U       equ	482	;# 
  7696   0001E3                     C1MASK10T       equ	483	;# 
  7697   0001E4                     C1FLTOBJ11      equ	484	;# 
  7698   0001E4                     C1FLTOBJ11L     equ	484	;# 
  7699   0001E5                     C1FLTOBJ11H     equ	485	;# 
  7700   0001E6                     C1FLTOBJ11U     equ	486	;# 
  7701   0001E7                     C1FLTOBJ11T     equ	487	;# 
  7702   0001E8                     C1MASK11        equ	488	;# 
  7703   0001E8                     C1MASK11L       equ	488	;# 
  7704   0001E9                     C1MASK11H       equ	489	;# 
  7705   0001EA                     C1MASK11U       equ	490	;# 
  7706   0001EB                     C1MASK11T       equ	491	;# 
  7707   000200                     PPSLOCK         equ	512	;# 
  7708   000201                     RA0PPS          equ	513	;# 
  7709   000202                     RA1PPS          equ	514	;# 
  7710   000203                     RA2PPS          equ	515	;# 
  7711   000204                     RA3PPS          equ	516	;# 
  7712   000205                     RA4PPS          equ	517	;# 
  7713   000206                     RA5PPS          equ	518	;# 
  7714   000207                     RA6PPS          equ	519	;# 
  7715   000208                     RA7PPS          equ	520	;# 
  7716   000209                     RB0PPS          equ	521	;# 
  7717   00020A                     RB1PPS          equ	522	;# 
  7718   00020B                     RB2PPS          equ	523	;# 
  7719   00020C                     RB3PPS          equ	524	;# 
  7720   00020D                     RB4PPS          equ	525	;# 
  7721   00020E                     RB5PPS          equ	526	;# 
  7722   00020F                     RB6PPS          equ	527	;# 
  7723   000210                     RB7PPS          equ	528	;# 
  7724   000211                     RC0PPS          equ	529	;# 
  7725   000212                     RC1PPS          equ	530	;# 
  7726   000213                     RC2PPS          equ	531	;# 
  7727   000214                     RC3PPS          equ	532	;# 
  7728   000215                     RC4PPS          equ	533	;# 
  7729   000216                     RC5PPS          equ	534	;# 
  7730   000217                     RC6PPS          equ	535	;# 
  7731   000218                     RC7PPS          equ	536	;# 
  7732   00023D                     CANRXPPS        equ	573	;# 
  7733   00023E                     INT0PPS         equ	574	;# 
  7734   00023F                     INT1PPS         equ	575	;# 
  7735   000240                     INT2PPS         equ	576	;# 
  7736   000241                     T0CKIPPS        equ	577	;# 
  7737   000242                     T1CKIPPS        equ	578	;# 
  7738   000243                     T1GPPS          equ	579	;# 
  7739   000244                     T3CKIPPS        equ	580	;# 
  7740   000245                     T3GPPS          equ	581	;# 
  7741   000246                     T5CKIPPS        equ	582	;# 
  7742   000247                     T5GPPS          equ	583	;# 
  7743   000248                     T2INPPS         equ	584	;# 
  7744   000249                     T4INPPS         equ	585	;# 
  7745   00024A                     T6INPPS         equ	586	;# 
  7746   00024B                     TUIN0PPS        equ	587	;# 
  7747   00024C                     TUIN1PPS        equ	588	;# 
  7748   00024F                     CCP1PPS         equ	591	;# 
  7749   000250                     CCP2PPS         equ	592	;# 
  7750   000251                     CCP3PPS         equ	593	;# 
  7751   000253                     PWM1ERSPPS      equ	595	;# 
  7752   000254                     PWM2ERSPPS      equ	596	;# 
  7753   000255                     PWM3ERSPPS      equ	597	;# 
  7754   000256                     PWM4ERSPPS      equ	598	;# 
  7755   000257                     PWMIN0PPS       equ	599	;# 
  7756   000258                     PWMIN1PPS       equ	600	;# 
  7757   000259                     SMT1WINPPS      equ	601	;# 
  7758   00025A                     SMT1SIGPPS      equ	602	;# 
  7759   00025B                     CWG1PPS         equ	603	;# 
  7760   00025B                     CWG1INPPS       equ	603	;# 
  7761   00025C                     CWG2PPS         equ	604	;# 
  7762   00025C                     CWG2INPPS       equ	604	;# 
  7763   00025D                     CWG3PPS         equ	605	;# 
  7764   00025D                     CWG3INPPS       equ	605	;# 
  7765   00025E                     MD1CARLPPS      equ	606	;# 
  7766   00025E                     MDCARLPPS       equ	606	;# 
  7767   00025F                     MD1CARHPPS      equ	607	;# 
  7768   00025F                     MDCARHPPS       equ	607	;# 
  7769   000260                     MD1SRCPPS       equ	608	;# 
  7770   000260                     MDSRCPPS        equ	608	;# 
  7771   000261                     CLCIN0PPS       equ	609	;# 
  7772   000262                     CLCIN1PPS       equ	610	;# 
  7773   000263                     CLCIN2PPS       equ	611	;# 
  7774   000264                     CLCIN3PPS       equ	612	;# 
  7775   000265                     CLCIN4PPS       equ	613	;# 
  7776   000266                     CLCIN5PPS       equ	614	;# 
  7777   000267                     CLCIN6PPS       equ	615	;# 
  7778   000268                     CLCIN7PPS       equ	616	;# 
  7779   000269                     ADACTPPS        equ	617	;# 
  7780   00026A                     SPI1SCKPPS      equ	618	;# 
  7781   00026B                     SPI1SDIPPS      equ	619	;# 
  7782   00026C                     SPI1SSPPS       equ	620	;# 
  7783   00026D                     SPI2SCKPPS      equ	621	;# 
  7784   00026E                     SPI2SDIPPS      equ	622	;# 
  7785   00026F                     SPI2SSPPS       equ	623	;# 
  7786   000270                     I2C1SDAPPS      equ	624	;# 
  7787   000271                     I2C1SCLPPS      equ	625	;# 
  7788   000272                     U1RXPPS         equ	626	;# 
  7789   000273                     U1CTSPPS        equ	627	;# 
  7790   000274                     U2RXPPS         equ	628	;# 
  7791   000275                     U2CTSPPS        equ	629	;# 
  7792   000276                     U3RXPPS         equ	630	;# 
  7793   000277                     U3CTSPPS        equ	631	;# 
  7794   000278                     U4RXPPS         equ	632	;# 
  7795   000279                     U4CTSPPS        equ	633	;# 
  7796   00027A                     U5RXPPS         equ	634	;# 
  7797   00027B                     U5CTSPPS        equ	635	;# 
  7798   000286                     RC4I2C          equ	646	;# 
  7799   000287                     RC3I2C          equ	647	;# 
  7800   000288                     RB2I2C          equ	648	;# 
  7801   000289                     RB1I2C          equ	649	;# 
  7802   00028A                     I2C1RXB         equ	650	;# 
  7803   00028B                     I2C1TXB         equ	651	;# 
  7804   00028C                     I2C1CNTL        equ	652	;# 
  7805   00028D                     I2C1CNTH        equ	653	;# 
  7806   00028E                     I2C1ADB0        equ	654	;# 
  7807   00028F                     I2C1ADB1        equ	655	;# 
  7808   000290                     I2C1ADR0        equ	656	;# 
  7809   000291                     I2C1ADR1        equ	657	;# 
  7810   000292                     I2C1ADR2        equ	658	;# 
  7811   000293                     I2C1ADR3        equ	659	;# 
  7812   000294                     I2C1CON0        equ	660	;# 
  7813   000295                     I2C1CON1        equ	661	;# 
  7814   000296                     I2C1CON2        equ	662	;# 
  7815   000297                     I2C1ERR         equ	663	;# 
  7816   000298                     I2C1STAT0       equ	664	;# 
  7817   000299                     I2C1STAT1       equ	665	;# 
  7818   00029A                     I2C1PIR         equ	666	;# 
  7819   00029B                     I2C1PIE         equ	667	;# 
  7820   00029C                     I2C1BTO         equ	668	;# 
  7821   00029D                     I2C1BAUD        equ	669	;# 
  7822   00029E                     I2C1CLK         equ	670	;# 
  7823   00029F                     I2C1BTOC        equ	671	;# 
  7824   0002A1                     U1RXB           equ	673	;# 
  7825   0002A1                     U1RXBL          equ	673	;# 
  7826   0002A2                     U1RXCHK         equ	674	;# 
  7827   0002A3                     U1TXB           equ	675	;# 
  7828   0002A3                     U1TXBL          equ	675	;# 
  7829   0002A4                     U1TXCHK         equ	676	;# 
  7830   0002A5                     U1P1            equ	677	;# 
  7831   0002A5                     U1P1L           equ	677	;# 
  7832   0002A6                     U1P1H           equ	678	;# 
  7833   0002A7                     U1P2            equ	679	;# 
  7834   0002A7                     U1P2L           equ	679	;# 
  7835   0002A8                     U1P2H           equ	680	;# 
  7836   0002A9                     U1P3            equ	681	;# 
  7837   0002A9                     U1P3L           equ	681	;# 
  7838   0002AA                     U1P3H           equ	682	;# 
  7839   0002AB                     U1CON0          equ	683	;# 
  7840   0002AC                     U1CON1          equ	684	;# 
  7841   0002AD                     U1CON2          equ	685	;# 
  7842   0002AE                     U1BRG           equ	686	;# 
  7843   0002AE                     U1BRGL          equ	686	;# 
  7844   0002AF                     U1BRGH          equ	687	;# 
  7845   0002B0                     U1FIFO          equ	688	;# 
  7846   0002B1                     U1UIR           equ	689	;# 
  7847   0002B2                     U1ERRIR         equ	690	;# 
  7848   0002B3                     U1ERRIE         equ	691	;# 
  7849   0002B4                     U2RXB           equ	692	;# 
  7850   0002B4                     U2RXBL          equ	692	;# 
  7851   0002B5                     U2RXCHK         equ	693	;# 
  7852   0002B6                     U2TXB           equ	694	;# 
  7853   0002B6                     U2TXBL          equ	694	;# 
  7854   0002B7                     U2TXCHK         equ	695	;# 
  7855   0002B8                     U2P1            equ	696	;# 
  7856   0002B8                     U2P1L           equ	696	;# 
  7857   0002B9                     U2P1H           equ	697	;# 
  7858   0002BA                     U2P2            equ	698	;# 
  7859   0002BA                     U2P2L           equ	698	;# 
  7860   0002BB                     U2P2H           equ	699	;# 
  7861   0002BC                     U2P3            equ	700	;# 
  7862   0002BC                     U2P3L           equ	700	;# 
  7863   0002BD                     U2P3H           equ	701	;# 
  7864   0002BE                     U2CON0          equ	702	;# 
  7865   0002BF                     U2CON1          equ	703	;# 
  7866   0002C0                     U2CON2          equ	704	;# 
  7867   0002C1                     U2BRG           equ	705	;# 
  7868   0002C1                     U2BRGL          equ	705	;# 
  7869   0002C2                     U2BRGH          equ	706	;# 
  7870   0002C3                     U2FIFO          equ	707	;# 
  7871   0002C4                     U2UIR           equ	708	;# 
  7872   0002C5                     U2ERRIR         equ	709	;# 
  7873   0002C6                     U2ERRIE         equ	710	;# 
  7874   0002C7                     U3RXB           equ	711	;# 
  7875   0002C7                     U3RXBL          equ	711	;# 
  7876   0002C9                     U3TXB           equ	713	;# 
  7877   0002C9                     U3TXBL          equ	713	;# 
  7878   0002CB                     U3P1            equ	715	;# 
  7879   0002CB                     U3P1L           equ	715	;# 
  7880   0002CD                     U3P2            equ	717	;# 
  7881   0002CD                     U3P2L           equ	717	;# 
  7882   0002CF                     U3P3            equ	719	;# 
  7883   0002CF                     U3P3L           equ	719	;# 
  7884   0002D1                     U3CON0          equ	721	;# 
  7885   0002D2                     U3CON1          equ	722	;# 
  7886   0002D3                     U3CON2          equ	723	;# 
  7887   0002D4                     U3BRG           equ	724	;# 
  7888   0002D4                     U3BRGL          equ	724	;# 
  7889   0002D5                     U3BRGH          equ	725	;# 
  7890   0002D6                     U3FIFO          equ	726	;# 
  7891   0002D7                     U3UIR           equ	727	;# 
  7892   0002D8                     U3ERRIR         equ	728	;# 
  7893   0002D9                     U3ERRIE         equ	729	;# 
  7894   0002DA                     U4RXB           equ	730	;# 
  7895   0002DA                     U4RXBL          equ	730	;# 
  7896   0002DC                     U4TXB           equ	732	;# 
  7897   0002DC                     U4TXBL          equ	732	;# 
  7898   0002DE                     U4P1            equ	734	;# 
  7899   0002DE                     U4P1L           equ	734	;# 
  7900   0002E0                     U4P2            equ	736	;# 
  7901   0002E0                     U4P2L           equ	736	;# 
  7902   0002E2                     U4P3            equ	738	;# 
  7903   0002E2                     U4P3L           equ	738	;# 
  7904   0002E4                     U4CON0          equ	740	;# 
  7905   0002E5                     U4CON1          equ	741	;# 
  7906   0002E6                     U4CON2          equ	742	;# 
  7907   0002E7                     U4BRG           equ	743	;# 
  7908   0002E7                     U4BRGL          equ	743	;# 
  7909   0002E8                     U4BRGH          equ	744	;# 
  7910   0002E9                     U4FIFO          equ	745	;# 
  7911   0002EA                     U4UIR           equ	746	;# 
  7912   0002EB                     U4ERRIR         equ	747	;# 
  7913   0002EC                     U4ERRIE         equ	748	;# 
  7914   0002ED                     U5RXB           equ	749	;# 
  7915   0002ED                     U5RXBL          equ	749	;# 
  7916   0002EF                     U5TXB           equ	751	;# 
  7917   0002EF                     U5TXBL          equ	751	;# 
  7918   0002F1                     U5P1            equ	753	;# 
  7919   0002F1                     U5P1L           equ	753	;# 
  7920   0002F3                     U5P2            equ	755	;# 
  7921   0002F3                     U5P2L           equ	755	;# 
  7922   0002F5                     U5P3            equ	757	;# 
  7923   0002F5                     U5P3L           equ	757	;# 
  7924   0002F7                     U5CON0          equ	759	;# 
  7925   0002F8                     U5CON1          equ	760	;# 
  7926   0002F9                     U5CON2          equ	761	;# 
  7927   0002FA                     U5BRG           equ	762	;# 
  7928   0002FA                     U5BRGL          equ	762	;# 
  7929   0002FB                     U5BRGH          equ	763	;# 
  7930   0002FC                     U5FIFO          equ	764	;# 
  7931   0002FD                     U5UIR           equ	765	;# 
  7932   0002FE                     U5ERRIR         equ	766	;# 
  7933   0002FF                     U5ERRIE         equ	767	;# 
  7934   000300                     SMT1TMR         equ	768	;# 
  7935   000300                     SMT1TMRL        equ	768	;# 
  7936   000301                     SMT1TMRH        equ	769	;# 
  7937   000302                     SMT1TMRU        equ	770	;# 
  7938   000303                     SMT1CPR         equ	771	;# 
  7939   000303                     SMT1CPRL        equ	771	;# 
  7940   000304                     SMT1CPRH        equ	772	;# 
  7941   000305                     SMT1CPRU        equ	773	;# 
  7942   000306                     SMT1CPW         equ	774	;# 
  7943   000306                     SMT1CPWL        equ	774	;# 
  7944   000307                     SMT1CPWH        equ	775	;# 
  7945   000308                     SMT1CPWU        equ	776	;# 
  7946   000309                     SMT1PR          equ	777	;# 
  7947   000309                     SMT1PRL         equ	777	;# 
  7948   00030A                     SMT1PRH         equ	778	;# 
  7949   00030B                     SMT1PRU         equ	779	;# 
  7950   00030C                     SMT1CON0        equ	780	;# 
  7951   00030D                     SMT1CON1        equ	781	;# 
  7952   00030E                     SMT1STAT        equ	782	;# 
  7953   00030F                     SMT1CLK         equ	783	;# 
  7954   000310                     SMT1SIG         equ	784	;# 
  7955   000311                     SMT1WIN         equ	785	;# 
  7956   000318                     TMR0L           equ	792	;# 
  7957   000318                     TMR0            equ	792	;# 
  7958   000319                     TMR0H           equ	793	;# 
  7959   000319                     PR0             equ	793	;# 
  7960   00031A                     T0CON0          equ	794	;# 
  7961   00031B                     T0CON1          equ	795	;# 
  7962   00031C                     TMR1            equ	796	;# 
  7963   00031C                     TMR1L           equ	796	;# 
  7964   00031D                     TMR1H           equ	797	;# 
  7965   00031E                     T1CON           equ	798	;# 
  7966   00031E                     TMR1CON         equ	798	;# 
  7967   00031F                     T1GCON          equ	799	;# 
  7968   00031F                     TMR1GCON        equ	799	;# 
  7969   000320                     T1GATE          equ	800	;# 
  7970   000320                     TMR1GATE        equ	800	;# 
  7971   000321                     T1CLK           equ	801	;# 
  7972   000321                     TMR1CLK         equ	801	;# 
  7973   000321                     PR1             equ	801	;# 
  7974   000322                     T2TMR           equ	802	;# 
  7975   000322                     TMR2            equ	802	;# 
  7976   000323                     T2PR            equ	803	;# 
  7977   000323                     PR2             equ	803	;# 
  7978   000324                     T2CON           equ	804	;# 
  7979   000325                     T2HLT           equ	805	;# 
  7980   000326                     T2CLKCON        equ	806	;# 
  7981   000326                     T2CLK           equ	806	;# 
  7982   000327                     T2RST           equ	807	;# 
  7983   000328                     TMR3            equ	808	;# 
  7984   000328                     TMR3L           equ	808	;# 
  7985   000329                     TMR3H           equ	809	;# 
  7986   00032A                     T3CON           equ	810	;# 
  7987   00032A                     TMR3CON         equ	810	;# 
  7988   00032B                     T3GCON          equ	811	;# 
  7989   00032B                     TMR3GCON        equ	811	;# 
  7990   00032C                     T3GATE          equ	812	;# 
  7991   00032C                     TMR3GATE        equ	812	;# 
  7992   00032D                     T3CLK           equ	813	;# 
  7993   00032D                     TMR3CLK         equ	813	;# 
  7994   00032D                     PR3             equ	813	;# 
  7995   00032E                     T4TMR           equ	814	;# 
  7996   00032E                     TMR4            equ	814	;# 
  7997   00032F                     T4PR            equ	815	;# 
  7998   00032F                     PR4             equ	815	;# 
  7999   000330                     T4CON           equ	816	;# 
  8000   000331                     T4HLT           equ	817	;# 
  8001   000332                     T4CLKCON        equ	818	;# 
  8002   000332                     T4CLK           equ	818	;# 
  8003   000333                     T4RST           equ	819	;# 
  8004   000334                     TMR5            equ	820	;# 
  8005   000334                     TMR5L           equ	820	;# 
  8006   000335                     TMR5H           equ	821	;# 
  8007   000336                     T5CON           equ	822	;# 
  8008   000336                     TMR5CON         equ	822	;# 
  8009   000337                     T5GCON          equ	823	;# 
  8010   000337                     TMR5GCON        equ	823	;# 
  8011   000338                     T5GATE          equ	824	;# 
  8012   000338                     TMR5GATE        equ	824	;# 
  8013   000339                     T5CLK           equ	825	;# 
  8014   000339                     TMR5CLK         equ	825	;# 
  8015   000339                     PR5             equ	825	;# 
  8016   00033A                     T6TMR           equ	826	;# 
  8017   00033A                     TMR6            equ	826	;# 
  8018   00033B                     T6PR            equ	827	;# 
  8019   00033B                     PR6             equ	827	;# 
  8020   00033C                     T6CON           equ	828	;# 
  8021   00033D                     T6HLT           equ	829	;# 
  8022   00033E                     T6CLKCON        equ	830	;# 
  8023   00033E                     T6CLK           equ	830	;# 
  8024   00033F                     T6RST           equ	831	;# 
  8025   000340                     CCPR1           equ	832	;# 
  8026   000340                     CCPR1L          equ	832	;# 
  8027   000341                     CCPR1H          equ	833	;# 
  8028   000342                     CCP1CON         equ	834	;# 
  8029   000343                     CCP1CAP         equ	835	;# 
  8030   000344                     CCPR2           equ	836	;# 
  8031   000344                     CCPR2L          equ	836	;# 
  8032   000345                     CCPR2H          equ	837	;# 
  8033   000346                     CCP2CON         equ	838	;# 
  8034   000347                     CCP2CAP         equ	839	;# 
  8035   000348                     CCPR3           equ	840	;# 
  8036   000348                     CCPR3L          equ	840	;# 
  8037   000349                     CCPR3H          equ	841	;# 
  8038   00034A                     CCP3CON         equ	842	;# 
  8039   00034B                     CCP3CAP         equ	843	;# 
  8040   00034C                     CCPTMRS0        equ	844	;# 
  8041   00034F                     CRCDATA         equ	847	;# 
  8042   00034F                     CRCDATAL        equ	847	;# 
  8043   000350                     CRCDATAH        equ	848	;# 
  8044   000351                     CRCDATAU        equ	849	;# 
  8045   000352                     CRCDATAT        equ	850	;# 
  8046   000353                     CRCOUT          equ	851	;# 
  8047   000353                     CRCSHFT         equ	851	;# 
  8048   000353                     CRCXOR          equ	851	;# 
  8049   000353                     CRCOUTL         equ	851	;# 
  8050   000353                     CRCSHFTL        equ	851	;# 
  8051   000353                     CRCSHIFTL       equ	851	;# 
  8052   000353                     CRCXORL         equ	851	;# 
  8053   000354                     CRCOUTH         equ	852	;# 
  8054   000354                     CRCSHFTH        equ	852	;# 
  8055   000354                     CRCSHIFTH       equ	852	;# 
  8056   000354                     CRCXORH         equ	852	;# 
  8057   000355                     CRCOUTU         equ	853	;# 
  8058   000355                     CRCSHFTU        equ	853	;# 
  8059   000355                     CRCSHIFTU       equ	853	;# 
  8060   000355                     CRCXORU         equ	853	;# 
  8061   000356                     CRCOUTT         equ	854	;# 
  8062   000356                     CRCSHFTT        equ	854	;# 
  8063   000356                     CRCSHIFTT       equ	854	;# 
  8064   000356                     CRCXORT         equ	854	;# 
  8065   000357                     CRCCON0         equ	855	;# 
  8066   000358                     CRCCON1         equ	856	;# 
  8067   000359                     CRCCON2         equ	857	;# 
  8068   00035A                     SCANLADR        equ	858	;# 
  8069   00035A                     SCANLADRL       equ	858	;# 
  8070   00035B                     SCANLADRH       equ	859	;# 
  8071   00035C                     SCANLADRU       equ	860	;# 
  8072   00035D                     SCANHADR        equ	861	;# 
  8073   00035D                     SCANHADRL       equ	861	;# 
  8074   00035E                     SCANHADRH       equ	862	;# 
  8075   00035F                     SCANHADRU       equ	863	;# 
  8076   000360                     SCANCON0        equ	864	;# 
  8077   000361                     SCANTRIG        equ	865	;# 
  8078   000362                     IPR0            equ	866	;# 
  8079   000363                     IPR1            equ	867	;# 
  8080   000364                     IPR2            equ	868	;# 
  8081   000365                     IPR3            equ	869	;# 
  8082   000366                     IPR4            equ	870	;# 
  8083   000367                     IPR5            equ	871	;# 
  8084   000368                     IPR6            equ	872	;# 
  8085   000369                     IPR7            equ	873	;# 
  8086   00036A                     IPR8            equ	874	;# 
  8087   00036B                     IPR9            equ	875	;# 
  8088   00036C                     IPR10           equ	876	;# 
  8089   00036D                     IPR11           equ	877	;# 
  8090   00036E                     IPR12           equ	878	;# 
  8091   00036F                     IPR13           equ	879	;# 
  8092   000370                     IPR14           equ	880	;# 
  8093   000371                     IPR15           equ	881	;# 
  8094   000373                     STATUS_CSHAD    equ	883	;# 
  8095   000374                     WREG_CSHAD      equ	884	;# 
  8096   000375                     BSR_CSHAD       equ	885	;# 
  8097   000376                     SHADCON         equ	886	;# 
  8098   000377                     STATUS_SHAD     equ	887	;# 
  8099   000378                     WREG_SHAD       equ	888	;# 
  8100   000379                     BSR_SHAD        equ	889	;# 
  8101   00037A                     PCLATH_SHAD     equ	890	;# 
  8102   00037B                     PCLATU_SHAD     equ	891	;# 
  8103   00037C                     FSR0SH          equ	892	;# 
  8104   00037C                     FSR0L_SHAD      equ	892	;# 
  8105   00037D                     FSR0H_SHAD      equ	893	;# 
  8106   00037E                     FSR1SH          equ	894	;# 
  8107   00037E                     FSR1L_SHAD      equ	894	;# 
  8108   00037F                     FSR1H_SHAD      equ	895	;# 
  8109   000380                     FSR2SH          equ	896	;# 
  8110   000380                     FSR2L_SHAD      equ	896	;# 
  8111   000381                     FSR2H_SHAD      equ	897	;# 
  8112   000382                     PRODSH          equ	898	;# 
  8113   000382                     PRODL_SHAD      equ	898	;# 
  8114   000383                     PRODH_SHAD      equ	899	;# 
  8115   000387                     TU16ACON0       equ	903	;# 
  8116   000388                     TU16ACON1       equ	904	;# 
  8117   000389                     TU16AHLT        equ	905	;# 
  8118   00038A                     TU16APS         equ	906	;# 
  8119   00038B                     TU16ATMR        equ	907	;# 
  8120   00038B                     TU16ACR         equ	907	;# 
  8121   00038B                     TU16ATMRL       equ	907	;# 
  8122   00038B                     TU16ACRL        equ	907	;# 
  8123   00038C                     TU16ATMRH       equ	908	;# 
  8124   00038C                     TU16ACRH        equ	908	;# 
  8125   00038D                     TU16APR         equ	909	;# 
  8126   00038D                     TU16APRL        equ	909	;# 
  8127   00038E                     TU16APRH        equ	910	;# 
  8128   00038F                     TU16ACLK        equ	911	;# 
  8129   000390                     TU16AERS        equ	912	;# 
  8130   000393                     TU16BCON0       equ	915	;# 
  8131   000394                     TU16BCON1       equ	916	;# 
  8132   000395                     TU16BHLT        equ	917	;# 
  8133   000396                     TU16BPS         equ	918	;# 
  8134   000397                     TU16BTMR        equ	919	;# 
  8135   000397                     TU16BCR         equ	919	;# 
  8136   000397                     TU16BTMRL       equ	919	;# 
  8137   000397                     TU16BCRL        equ	919	;# 
  8138   000398                     TU16BTMRH       equ	920	;# 
  8139   000398                     TU16BCRH        equ	920	;# 
  8140   000399                     TU16BPR         equ	921	;# 
  8141   000399                     TU16BPRL        equ	921	;# 
  8142   00039A                     TU16BPRH        equ	922	;# 
  8143   00039B                     TU16BCLK        equ	923	;# 
  8144   00039C                     TU16BERS        equ	924	;# 
  8145   0003BB                     TUCHAIN         equ	955	;# 
  8146   0003BC                     CWG1CLK         equ	956	;# 
  8147   0003BC                     CWG1CLKCON      equ	956	;# 
  8148   0003BD                     CWG1ISM         equ	957	;# 
  8149   0003BE                     CWG1DBR         equ	958	;# 
  8150   0003BF                     CWG1DBF         equ	959	;# 
  8151   0003C0                     CWG1CON0        equ	960	;# 
  8152   0003C1                     CWG1CON1        equ	961	;# 
  8153   0003C2                     CWG1AS0         equ	962	;# 
  8154   0003C3                     CWG1AS1         equ	963	;# 
  8155   0003C4                     CWG1STR         equ	964	;# 
  8156   0003C5                     CWG2CLK         equ	965	;# 
  8157   0003C5                     CWG2CLKCON      equ	965	;# 
  8158   0003C6                     CWG2ISM         equ	966	;# 
  8159   0003C7                     CWG2DBR         equ	967	;# 
  8160   0003C8                     CWG2DBF         equ	968	;# 
  8161   0003C9                     CWG2CON0        equ	969	;# 
  8162   0003CA                     CWG2CON1        equ	970	;# 
  8163   0003CB                     CWG2AS0         equ	971	;# 
  8164   0003CC                     CWG2AS1         equ	972	;# 
  8165   0003CD                     CWG2STR         equ	973	;# 
  8166   0003CE                     CWG3CLK         equ	974	;# 
  8167   0003CE                     CWG3CLKCON      equ	974	;# 
  8168   0003CF                     CWG3ISM         equ	975	;# 
  8169   0003D0                     CWG3DBR         equ	976	;# 
  8170   0003D1                     CWG3DBF         equ	977	;# 
  8171   0003D2                     CWG3CON0        equ	978	;# 
  8172   0003D3                     CWG3CON1        equ	979	;# 
  8173   0003D4                     CWG3AS0         equ	980	;# 
  8174   0003D5                     CWG3AS1         equ	981	;# 
  8175   0003D6                     CWG3STR         equ	982	;# 
  8176   0003D7                     FVRCON          equ	983	;# 
  8177   0003D8                     ADCPCON         equ	984	;# 
  8178   0003D8                     ADCP            equ	984	;# 
  8179   0003D9                     ADLTH           equ	985	;# 
  8180   0003D9                     ADLTHL          equ	985	;# 
  8181   0003DA                     ADLTHH          equ	986	;# 
  8182   0003DB                     ADUTH           equ	987	;# 
  8183   0003DB                     ADUTHL          equ	987	;# 
  8184   0003DC                     ADUTHH          equ	988	;# 
  8185   0003DD                     ADERR           equ	989	;# 
  8186   0003DD                     ADERRL          equ	989	;# 
  8187   0003DE                     ADERRH          equ	990	;# 
  8188   0003DF                     ADSTPT          equ	991	;# 
  8189   0003DF                     ADSTPTL         equ	991	;# 
  8190   0003E0                     ADSTPTH         equ	992	;# 
  8191   0003E1                     ADFLTR          equ	993	;# 
  8192   0003E1                     ADFLTRL         equ	993	;# 
  8193   0003E2                     ADFLTRH         equ	994	;# 
  8194   0003E3                     ADACC           equ	995	;# 
  8195   0003E3                     ADACCL          equ	995	;# 
  8196   0003E4                     ADACCH          equ	996	;# 
  8197   0003E5                     ADACCU          equ	997	;# 
  8198   0003E6                     ADCNT           equ	998	;# 
  8199   0003E7                     ADRPT           equ	999	;# 
  8200   0003E8                     ADPREV          equ	1000	;# 
  8201   0003E8                     ADPREVL         equ	1000	;# 
  8202   0003E9                     ADPREVH         equ	1001	;# 
  8203   0003EA                     ADRES           equ	1002	;# 
  8204   0003EA                     ADRESL          equ	1002	;# 
  8205   0003EB                     ADRESH          equ	1003	;# 
  8206   0003EC                     ADPCH           equ	1004	;# 
  8207   0003EE                     ADACQ           equ	1006	;# 
  8208   0003EE                     ADACQL          equ	1006	;# 
  8209   0003EF                     ADACQH          equ	1007	;# 
  8210   0003F0                     ADCAP           equ	1008	;# 
  8211   0003F1                     ADPRE           equ	1009	;# 
  8212   0003F1                     ADPREL          equ	1009	;# 
  8213   0003F2                     ADPREH          equ	1010	;# 
  8214   0003F3                     ADCON0          equ	1011	;# 
  8215   0003F4                     ADCON1          equ	1012	;# 
  8216   0003F5                     ADCON2          equ	1013	;# 
  8217   0003F6                     ADCON3          equ	1014	;# 
  8218   0003F7                     ADSTAT          equ	1015	;# 
  8219   0003F8                     ADREF           equ	1016	;# 
  8220   0003F9                     ADACT           equ	1017	;# 
  8221   0003FA                     ADCLK           equ	1018	;# 
  8222   0003FB                     ADCTX           equ	1019	;# 
  8223   0003FC                     ADCSEL1         equ	1020	;# 
  8224   0003FD                     ADCSEL2         equ	1021	;# 
  8225   0003FE                     ADCSEL3         equ	1022	;# 
  8226   0003FF                     ADCSEL4         equ	1023	;# 
  8227   000400                     ANSELA          equ	1024	;# 
  8228   000401                     WPUA            equ	1025	;# 
  8229   000402                     ODCONA          equ	1026	;# 
  8230   000403                     SLRCONA         equ	1027	;# 
  8231   000404                     INLVLA          equ	1028	;# 
  8232   000405                     IOCAP           equ	1029	;# 
  8233   000406                     IOCAN           equ	1030	;# 
  8234   000407                     IOCAF           equ	1031	;# 
  8235   000408                     ANSELB          equ	1032	;# 
  8236   000409                     WPUB            equ	1033	;# 
  8237   00040A                     ODCONB          equ	1034	;# 
  8238   00040B                     SLRCONB         equ	1035	;# 
  8239   00040C                     INLVLB          equ	1036	;# 
  8240   00040D                     IOCBP           equ	1037	;# 
  8241   00040E                     IOCBN           equ	1038	;# 
  8242   00040F                     IOCBF           equ	1039	;# 
  8243   000410                     ANSELC          equ	1040	;# 
  8244   000411                     WPUC            equ	1041	;# 
  8245   000412                     ODCONC          equ	1042	;# 
  8246   000413                     SLRCONC         equ	1043	;# 
  8247   000414                     INLVLC          equ	1044	;# 
  8248   000415                     IOCCP           equ	1045	;# 
  8249   000416                     IOCCN           equ	1046	;# 
  8250   000417                     IOCCF           equ	1047	;# 
  8251   000421                     WPUE            equ	1057	;# 
  8252   000424                     INLVLE          equ	1060	;# 
  8253   000425                     IOCEP           equ	1061	;# 
  8254   000426                     IOCEN           equ	1062	;# 
  8255   000427                     IOCEF           equ	1063	;# 
  8256   000440                     NCO1ACC         equ	1088	;# 
  8257   000440                     NCO1ACCL        equ	1088	;# 
  8258   000441                     NCO1ACCH        equ	1089	;# 
  8259   000442                     NCO1ACCU        equ	1090	;# 
  8260   000443                     NCO1INC         equ	1091	;# 
  8261   000443                     NCO1INCL        equ	1091	;# 
  8262   000444                     NCO1INCH        equ	1092	;# 
  8263   000445                     NCO1INCU        equ	1093	;# 
  8264   000446                     NCO1CON         equ	1094	;# 
  8265   000447                     NCO1CLK         equ	1095	;# 
  8266   000448                     NCO2ACC         equ	1096	;# 
  8267   000448                     NCO2ACCL        equ	1096	;# 
  8268   000449                     NCO2ACCH        equ	1097	;# 
  8269   00044A                     NCO2ACCU        equ	1098	;# 
  8270   00044B                     NCO2INC         equ	1099	;# 
  8271   00044B                     NCO2INCL        equ	1099	;# 
  8272   00044C                     NCO2INCH        equ	1100	;# 
  8273   00044D                     NCO2INCU        equ	1101	;# 
  8274   00044E                     NCO2CON         equ	1102	;# 
  8275   00044F                     NCO2CLK         equ	1103	;# 
  8276   000450                     NCO3ACC         equ	1104	;# 
  8277   000450                     NCO3ACCL        equ	1104	;# 
  8278   000451                     NCO3ACCH        equ	1105	;# 
  8279   000452                     NCO3ACCU        equ	1106	;# 
  8280   000453                     NCO3INC         equ	1107	;# 
  8281   000453                     NCO3INCL        equ	1107	;# 
  8282   000454                     NCO3INCH        equ	1108	;# 
  8283   000455                     NCO3INCU        equ	1109	;# 
  8284   000456                     NCO3CON         equ	1110	;# 
  8285   000457                     NCO3CLK         equ	1111	;# 
  8286   000458                     FSCMCON         equ	1112	;# 
  8287   000459                     IVTLOCK         equ	1113	;# 
  8288   00045A                     IVTAD           equ	1114	;# 
  8289   00045A                     IVTADL          equ	1114	;# 
  8290   00045B                     IVTADH          equ	1115	;# 
  8291   00045C                     IVTADU          equ	1116	;# 
  8292   00045D                     IVTBASE         equ	1117	;# 
  8293   00045D                     IVTBASEL        equ	1117	;# 
  8294   00045E                     IVTBASEH        equ	1118	;# 
  8295   00045F                     IVTBASEU        equ	1119	;# 
  8296   000460                     PWM1ERS         equ	1120	;# 
  8297   000461                     PWM1CLK         equ	1121	;# 
  8298   000462                     PWM1LDS         equ	1122	;# 
  8299   000463                     PWM1PR          equ	1123	;# 
  8300   000463                     PWM1PRL         equ	1123	;# 
  8301   000464                     PWM1PRH         equ	1124	;# 
  8302   000465                     PWM1CPRE        equ	1125	;# 
  8303   000466                     PWM1PIPOS       equ	1126	;# 
  8304   000467                     PWM1GIR         equ	1127	;# 
  8305   000468                     PWM1GIE         equ	1128	;# 
  8306   000469                     PWM1CON         equ	1129	;# 
  8307   00046A                     PWM1S1CFG       equ	1130	;# 
  8308   00046B                     PWM1S1P1        equ	1131	;# 
  8309   00046B                     PWM1S1P1L       equ	1131	;# 
  8310   00046C                     PWM1S1P1H       equ	1132	;# 
  8311   00046D                     PWM1S1P2        equ	1133	;# 
  8312   00046D                     PWM1S1P2L       equ	1133	;# 
  8313   00046E                     PWM1S1P2H       equ	1134	;# 
  8314   00046F                     PWM2ERS         equ	1135	;# 
  8315   000470                     PWM2CLK         equ	1136	;# 
  8316   000471                     PWM2LDS         equ	1137	;# 
  8317   000472                     PWM2PR          equ	1138	;# 
  8318   000472                     PWM2PRL         equ	1138	;# 
  8319   000473                     PWM2PRH         equ	1139	;# 
  8320   000474                     PWM2CPRE        equ	1140	;# 
  8321   000475                     PWM2PIPOS       equ	1141	;# 
  8322   000476                     PWM2GIR         equ	1142	;# 
  8323   000477                     PWM2GIE         equ	1143	;# 
  8324   000478                     PWM2CON         equ	1144	;# 
  8325   000479                     PWM2S1CFG       equ	1145	;# 
  8326   00047A                     PWM2S1P1        equ	1146	;# 
  8327   00047A                     PWM2S1P1L       equ	1146	;# 
  8328   00047B                     PWM2S1P1H       equ	1147	;# 
  8329   00047C                     PWM2S1P2        equ	1148	;# 
  8330   00047C                     PWM2S1P2L       equ	1148	;# 
  8331   00047D                     PWM2S1P2H       equ	1149	;# 
  8332   00047E                     PWM3ERS         equ	1150	;# 
  8333   00047F                     PWM3CLK         equ	1151	;# 
  8334   000480                     PWM3LDS         equ	1152	;# 
  8335   000481                     PWM3PR          equ	1153	;# 
  8336   000481                     PWM3PRL         equ	1153	;# 
  8337   000482                     PWM3PRH         equ	1154	;# 
  8338   000483                     PWM3CPRE        equ	1155	;# 
  8339   000484                     PWM3PIPOS       equ	1156	;# 
  8340   000485                     PWM3GIR         equ	1157	;# 
  8341   000486                     PWM3GIE         equ	1158	;# 
  8342   000487                     PWM3CON         equ	1159	;# 
  8343   000488                     PWM3S1CFG       equ	1160	;# 
  8344   000489                     PWM3S1P1        equ	1161	;# 
  8345   000489                     PWM3S1P1L       equ	1161	;# 
  8346   00048A                     PWM3S1P1H       equ	1162	;# 
  8347   00048B                     PWM3S1P2        equ	1163	;# 
  8348   00048B                     PWM3S1P2L       equ	1163	;# 
  8349   00048C                     PWM3S1P2H       equ	1164	;# 
  8350   00048D                     PWM4ERS         equ	1165	;# 
  8351   00048E                     PWM4CLK         equ	1166	;# 
  8352   00048F                     PWM4LDS         equ	1167	;# 
  8353   000490                     PWM4PR          equ	1168	;# 
  8354   000490                     PWM4PRL         equ	1168	;# 
  8355   000491                     PWM4PRH         equ	1169	;# 
  8356   000492                     PWM4CPRE        equ	1170	;# 
  8357   000493                     PWM4PIPOS       equ	1171	;# 
  8358   000494                     PWM4GIR         equ	1172	;# 
  8359   000495                     PWM4GIE         equ	1173	;# 
  8360   000496                     PWM4CON         equ	1174	;# 
  8361   000497                     PWM4S1CFG       equ	1175	;# 
  8362   000498                     PWM4S1P1        equ	1176	;# 
  8363   000498                     PWM4S1P1L       equ	1176	;# 
  8364   000499                     PWM4S1P1H       equ	1177	;# 
  8365   00049A                     PWM4S1P2        equ	1178	;# 
  8366   00049A                     PWM4S1P2L       equ	1178	;# 
  8367   00049B                     PWM4S1P2H       equ	1179	;# 
  8368   00049C                     PWMLOAD         equ	1180	;# 
  8369   00049D                     PWMEN           equ	1181	;# 
  8370   00049E                     PIE0            equ	1182	;# 
  8371   00049F                     PIE1            equ	1183	;# 
  8372   0004A0                     PIE2            equ	1184	;# 
  8373   0004A1                     PIE3            equ	1185	;# 
  8374   0004A2                     PIE4            equ	1186	;# 
  8375   0004A3                     PIE5            equ	1187	;# 
  8376   0004A4                     PIE6            equ	1188	;# 
  8377   0004A5                     PIE7            equ	1189	;# 
  8378   0004A6                     PIE8            equ	1190	;# 
  8379   0004A7                     PIE9            equ	1191	;# 
  8380   0004A8                     PIE10           equ	1192	;# 
  8381   0004A9                     PIE11           equ	1193	;# 
  8382   0004AA                     PIE12           equ	1194	;# 
  8383   0004AB                     PIE13           equ	1195	;# 
  8384   0004AC                     PIE14           equ	1196	;# 
  8385   0004AD                     PIE15           equ	1197	;# 
  8386   0004AE                     PIR0            equ	1198	;# 
  8387   0004AF                     PIR1            equ	1199	;# 
  8388   0004B0                     PIR2            equ	1200	;# 
  8389   0004B1                     PIR3            equ	1201	;# 
  8390   0004B2                     PIR4            equ	1202	;# 
  8391   0004B3                     PIR5            equ	1203	;# 
  8392   0004B4                     PIR6            equ	1204	;# 
  8393   0004B5                     PIR7            equ	1205	;# 
  8394   0004B6                     PIR8            equ	1206	;# 
  8395   0004B7                     PIR9            equ	1207	;# 
  8396   0004B8                     PIR10           equ	1208	;# 
  8397   0004B9                     PIR11           equ	1209	;# 
  8398   0004BA                     PIR12           equ	1210	;# 
  8399   0004BB                     PIR13           equ	1211	;# 
  8400   0004BC                     PIR14           equ	1212	;# 
  8401   0004BD                     PIR15           equ	1213	;# 
  8402   0004BE                     LATA            equ	1214	;# 
  8403   0004BF                     LATB            equ	1215	;# 
  8404   0004C0                     LATC            equ	1216	;# 
  8405   0004C6                     TRISA           equ	1222	;# 
  8406   0004C7                     TRISB           equ	1223	;# 
  8407   0004C8                     TRISC           equ	1224	;# 
  8408   0004CA                     TRISE           equ	1226	;# 
  8409   0004CE                     PORTA           equ	1230	;# 
  8410   0004CF                     PORTB           equ	1231	;# 
  8411   0004D0                     PORTC           equ	1232	;# 
  8412   0004D2                     PORTE           equ	1234	;# 
  8413   0004D6                     INTCON0         equ	1238	;# 
  8414   0004D7                     INTCON1         equ	1239	;# 
  8415   0004D8                     STATUS          equ	1240	;# 
  8416   0004D9                     FSR2            equ	1241	;# 
  8417   0004D9                     FSR2L           equ	1241	;# 
  8418   0004DA                     FSR2H           equ	1242	;# 
  8419   0004DB                     PLUSW2          equ	1243	;# 
  8420   0004DC                     PREINC2         equ	1244	;# 
  8421   0004DD                     POSTDEC2        equ	1245	;# 
  8422   0004DE                     POSTINC2        equ	1246	;# 
  8423   0004DF                     INDF2           equ	1247	;# 
  8424   0004E0                     BSR             equ	1248	;# 
  8425   0004E1                     FSR1            equ	1249	;# 
  8426   0004E1                     FSR1L           equ	1249	;# 
  8427   0004E2                     FSR1H           equ	1250	;# 
  8428   0004E3                     PLUSW1          equ	1251	;# 
  8429   0004E4                     PREINC1         equ	1252	;# 
  8430   0004E5                     POSTDEC1        equ	1253	;# 
  8431   0004E6                     POSTINC1        equ	1254	;# 
  8432   0004E7                     INDF1           equ	1255	;# 
  8433   0004E8                     WREG            equ	1256	;# 
  8434   0004E9                     FSR0            equ	1257	;# 
  8435   0004E9                     FSR0L           equ	1257	;# 
  8436   0004EA                     FSR0H           equ	1258	;# 
  8437   0004EB                     PLUSW0          equ	1259	;# 
  8438   0004EC                     PREINC0         equ	1260	;# 
  8439   0004ED                     POSTDEC0        equ	1261	;# 
  8440   0004EE                     POSTINC0        equ	1262	;# 
  8441   0004EF                     INDF0           equ	1263	;# 
  8442   0004F0                     PCON0           equ	1264	;# 
  8443   0004F1                     PCON1           equ	1265	;# 
  8444   0004F2                     CPUDOZE         equ	1266	;# 
  8445   0004F3                     PROD            equ	1267	;# 
  8446   0004F3                     PRODL           equ	1267	;# 
  8447   0004F4                     PRODH           equ	1268	;# 
  8448   0004F5                     TABLAT          equ	1269	;# 
  8449   0004F6                     TBLPTR          equ	1270	;# 
  8450   0004F6                     TBLPTRL         equ	1270	;# 
  8451   0004F7                     TBLPTRH         equ	1271	;# 
  8452   0004F8                     TBLPTRU         equ	1272	;# 
  8453   0004F9                     PCLAT           equ	1273	;# 
  8454   0004F9                     PCL             equ	1273	;# 
  8455   0004FA                     PCLATH          equ	1274	;# 
  8456   0004FB                     PCLATU          equ	1275	;# 
  8457   0004FC                     STKPTR          equ	1276	;# 
  8458   0004FD                     TOS             equ	1277	;# 
  8459   0004FD                     TOSL            equ	1277	;# 
  8460   0004FE                     TOSH            equ	1278	;# 
  8461   0004FF                     TOSU            equ	1279	;# 
  8462   000038                     BOOTREG         equ	56	;# 
  8463   000039                     CLKRCON         equ	57	;# 
  8464   00003A                     CLKRCLK         equ	58	;# 
  8465   000040                     NVMCON0         equ	64	;# 
  8466   000041                     NVMCON1         equ	65	;# 
  8467   000042                     NVMLOCK         equ	66	;# 
  8468   000043                     NVMADR          equ	67	;# 
  8469   000043                     NVMADRL         equ	67	;# 
  8470   000044                     NVMADRH         equ	68	;# 
  8471   000045                     NVMADRU         equ	69	;# 
  8472   000046                     NVMDAT          equ	70	;# 
  8473   000046                     NVMDATL         equ	70	;# 
  8474   000047                     NVMDATH         equ	71	;# 
  8475   000048                     VREGCON         equ	72	;# 
  8476   000049                     BORCON          equ	73	;# 
  8477   00004A                     HLVDCON0        equ	74	;# 
  8478   00004B                     HLVDCON1        equ	75	;# 
  8479   00004C                     ZCDCON          equ	76	;# 
  8480   000060                     PMD0            equ	96	;# 
  8481   000061                     PMD1            equ	97	;# 
  8482   000062                     PMD2            equ	98	;# 
  8483   000063                     PMD3            equ	99	;# 
  8484   000064                     PMD4            equ	100	;# 
  8485   000065                     PMD5            equ	101	;# 
  8486   000066                     PMD6            equ	102	;# 
  8487   000067                     PMD7            equ	103	;# 
  8488   000068                     PMD8            equ	104	;# 
  8489   00006A                     MD1CON0         equ	106	;# 
  8490   00006B                     MD1CON1         equ	107	;# 
  8491   00006C                     MD1SRC          equ	108	;# 
  8492   00006D                     MD1CARL         equ	109	;# 
  8493   00006E                     MD1CARH         equ	110	;# 
  8494   00006F                     CMOUT           equ	111	;# 
  8495   000070                     CM1CON0         equ	112	;# 
  8496   000071                     CM1CON1         equ	113	;# 
  8497   000072                     CM1NCH          equ	114	;# 
  8498   000073                     CM1PCH          equ	115	;# 
  8499   000074                     CM2CON0         equ	116	;# 
  8500   000075                     CM2CON1         equ	117	;# 
  8501   000076                     CM2NCH          equ	118	;# 
  8502   000077                     CM2PCH          equ	119	;# 
  8503   000078                     WDTCON0         equ	120	;# 
  8504   000079                     WDTCON1         equ	121	;# 
  8505   00007A                     WDTPSL          equ	122	;# 
  8506   00007B                     WDTPSH          equ	123	;# 
  8507   00007C                     WDTTMR          equ	124	;# 
  8508   00007D                     DAC1DAT         equ	125	;# 
  8509   00007D                     DAC1DATL        equ	125	;# 
  8510   00007F                     DAC1CON         equ	127	;# 
  8511   000080                     SPI1RXB         equ	128	;# 
  8512   000081                     SPI1TXB         equ	129	;# 
  8513   000082                     SPI1TCNT        equ	130	;# 
  8514   000082                     SPI1TCNTL       equ	130	;# 
  8515   000083                     SPI1TCNTH       equ	131	;# 
  8516   000084                     SPI1CON0        equ	132	;# 
  8517   000085                     SPI1CON1        equ	133	;# 
  8518   000086                     SPI1CON2        equ	134	;# 
  8519   000087                     SPI1STATUS      equ	135	;# 
  8520   000088                     SPI1TWIDTH      equ	136	;# 
  8521   000089                     SPI1BAUD        equ	137	;# 
  8522   00008A                     SPI1INTF        equ	138	;# 
  8523   00008B                     SPI1INTE        equ	139	;# 
  8524   00008C                     SPI1CLK         equ	140	;# 
  8525   00008D                     SPI2RXB         equ	141	;# 
  8526   00008E                     SPI2TXB         equ	142	;# 
  8527   00008F                     SPI2TCNT        equ	143	;# 
  8528   00008F                     SPI2TCNTL       equ	143	;# 
  8529   000090                     SPI2TCNTH       equ	144	;# 
  8530   000091                     SPI2CON0        equ	145	;# 
  8531   000092                     SPI2CON1        equ	146	;# 
  8532   000093                     SPI2CON2        equ	147	;# 
  8533   000094                     SPI2STATUS      equ	148	;# 
  8534   000095                     SPI2TWIDTH      equ	149	;# 
  8535   000096                     SPI2BAUD        equ	150	;# 
  8536   000097                     SPI2INTF        equ	151	;# 
  8537   000098                     SPI2INTE        equ	152	;# 
  8538   000099                     SPI2CLK         equ	153	;# 
  8539   0000AC                     ACTCON          equ	172	;# 
  8540   0000AD                     OSCCON1         equ	173	;# 
  8541   0000AE                     OSCCON2         equ	174	;# 
  8542   0000AF                     OSCCON3         equ	175	;# 
  8543   0000B0                     OSCTUNE         equ	176	;# 
  8544   0000B1                     OSCFRQ          equ	177	;# 
  8545   0000B1                     OSCFREQ         equ	177	;# 
  8546   0000B2                     OSCSTAT         equ	178	;# 
  8547   0000B2                     OSCSTAT1        equ	178	;# 
  8548   0000B3                     OSCEN           equ	179	;# 
  8549   0000B4                     PRLOCK          equ	180	;# 
  8550   0000B5                     SCANPR          equ	181	;# 
  8551   0000B6                     DMA1PR          equ	182	;# 
  8552   0000B7                     DMA2PR          equ	183	;# 
  8553   0000B8                     DMA3PR          equ	184	;# 
  8554   0000B9                     DMA4PR          equ	185	;# 
  8555   0000BA                     DMA5PR          equ	186	;# 
  8556   0000BB                     DMA6PR          equ	187	;# 
  8557   0000BC                     DMA7PR          equ	188	;# 
  8558   0000BD                     DMA8PR          equ	189	;# 
  8559   0000BE                     MAINPR          equ	190	;# 
  8560   0000BF                     ISRPR           equ	191	;# 
  8561   0000D4                     CLCDATA         equ	212	;# 
  8562   0000D5                     CLCSELECT       equ	213	;# 
  8563   0000D6                     CLCnCON         equ	214	;# 
  8564   0000D7                     CLCnPOL         equ	215	;# 
  8565   0000D8                     CLCnSEL0        equ	216	;# 
  8566   0000D9                     CLCnSEL1        equ	217	;# 
  8567   0000DA                     CLCnSEL2        equ	218	;# 
  8568   0000DB                     CLCnSEL3        equ	219	;# 
  8569   0000DC                     CLCnGLS0        equ	220	;# 
  8570   0000DD                     CLCnGLS1        equ	221	;# 
  8571   0000DE                     CLCnGLS2        equ	222	;# 
  8572   0000DF                     CLCnGLS3        equ	223	;# 
  8573   0000E8                     DMASELECT       equ	232	;# 
  8574   0000E9                     DMAnBUF         equ	233	;# 
  8575   0000EA                     DMAnDCNT        equ	234	;# 
  8576   0000EA                     DMAnDCNTL       equ	234	;# 
  8577   0000EB                     DMAnDCNTH       equ	235	;# 
  8578   0000EC                     DMAnDPTR        equ	236	;# 
  8579   0000EC                     DMAnDPTRL       equ	236	;# 
  8580   0000ED                     DMAnDPTRH       equ	237	;# 
  8581   0000EE                     DMAnDSZ         equ	238	;# 
  8582   0000EE                     DMAnDSZL        equ	238	;# 
  8583   0000EF                     DMAnDSZH        equ	239	;# 
  8584   0000F0                     DMAnDSA         equ	240	;# 
  8585   0000F0                     DMAnDSAL        equ	240	;# 
  8586   0000F1                     DMAnDSAH        equ	241	;# 
  8587   0000F2                     DMAnSCNT        equ	242	;# 
  8588   0000F2                     DMAnSCNTL       equ	242	;# 
  8589   0000F3                     DMAnSCNTH       equ	243	;# 
  8590   0000F4                     DMAnSPTR        equ	244	;# 
  8591   0000F4                     DMAnSPTRL       equ	244	;# 
  8592   0000F5                     DMAnSPTRH       equ	245	;# 
  8593   0000F6                     DMAnSPTRU       equ	246	;# 
  8594   0000F7                     DMAnSSZ         equ	247	;# 
  8595   0000F7                     DMAnSSZL        equ	247	;# 
  8596   0000F8                     DMAnSSZH        equ	248	;# 
  8597   0000F9                     DMAnSSA         equ	249	;# 
  8598   0000F9                     DMAnSSAL        equ	249	;# 
  8599   0000FA                     DMAnSSAH        equ	250	;# 
  8600   0000FB                     DMAnSSAU        equ	251	;# 
  8601   0000FC                     DMAnCON0        equ	252	;# 
  8602   0000FD                     DMAnCON1        equ	253	;# 
  8603   0000FE                     DMAnAIRQ        equ	254	;# 
  8604   0000FF                     DMAnSIRQ        equ	255	;# 
  8605   000100                     C1CONL          equ	256	;# 
  8606   000101                     C1CONH          equ	257	;# 
  8607   000102                     C1CONU          equ	258	;# 
  8608   000103                     C1CONT          equ	259	;# 
  8609   000104                     C1NBTCFGL       equ	260	;# 
  8610   000105                     C1NBTCFGH       equ	261	;# 
  8611   000106                     C1NBTCFGU       equ	262	;# 
  8612   000107                     C1NBTCFGT       equ	263	;# 
  8613   000108                     C1DBTCFGL       equ	264	;# 
  8614   000109                     C1DBTCFGH       equ	265	;# 
  8615   00010A                     C1DBTCFGU       equ	266	;# 
  8616   00010B                     C1DBTCFGT       equ	267	;# 
  8617   00010C                     C1TDCL          equ	268	;# 
  8618   00010D                     C1TDCH          equ	269	;# 
  8619   00010E                     C1TDCU          equ	270	;# 
  8620   000110                     C1TBC           equ	272	;# 
  8621   000110                     C1TBCL          equ	272	;# 
  8622   000111                     C1TBCH          equ	273	;# 
  8623   000112                     C1TBCU          equ	274	;# 
  8624   000113                     C1TBCT          equ	275	;# 
  8625   000114                     C1TSCONL        equ	276	;# 
  8626   000115                     C1TSCONH        equ	277	;# 
  8627   000116                     C1TSCONU        equ	278	;# 
  8628   000117                     C1TSCONT        equ	279	;# 
  8629   000118                     C1VECL          equ	280	;# 
  8630   000119                     C1VECH          equ	281	;# 
  8631   00011A                     C1VECU          equ	282	;# 
  8632   00011B                     C1VECT          equ	283	;# 
  8633   00011C                     C1INTL          equ	284	;# 
  8634   00011D                     C1INTH          equ	285	;# 
  8635   00011E                     C1INTU          equ	286	;# 
  8636   00011F                     C1INTT          equ	287	;# 
  8637   000120                     C1RXIF          equ	288	;# 
  8638   000120                     C1RXIFL         equ	288	;# 
  8639   000121                     C1RXIFH         equ	289	;# 
  8640   000122                     C1RXIFU         equ	290	;# 
  8641   000123                     C1RXIFT         equ	291	;# 
  8642   000124                     C1TXIF          equ	292	;# 
  8643   000124                     C1TXIFL         equ	292	;# 
  8644   000125                     C1TXIFH         equ	293	;# 
  8645   000126                     C1TXIFU         equ	294	;# 
  8646   000127                     C1TXIFT         equ	295	;# 
  8647   000128                     C1RXOVIF        equ	296	;# 
  8648   000128                     C1RXOVIFL       equ	296	;# 
  8649   000129                     C1RXOVIFH       equ	297	;# 
  8650   00012A                     C1RXOVIFU       equ	298	;# 
  8651   00012B                     C1RXOVIFT       equ	299	;# 
  8652   00012C                     C1TXATIF        equ	300	;# 
  8653   00012C                     C1TXATIFL       equ	300	;# 
  8654   00012D                     C1TXATIFH       equ	301	;# 
  8655   00012E                     C1TXATIFU       equ	302	;# 
  8656   00012F                     C1TXATIFT       equ	303	;# 
  8657   000130                     C1TXREQ         equ	304	;# 
  8658   000130                     C1TXREQL        equ	304	;# 
  8659   000131                     C1TXREQH        equ	305	;# 
  8660   000132                     C1TXREQU        equ	306	;# 
  8661   000133                     C1TXREQT        equ	307	;# 
  8662   000134                     C1TRECL         equ	308	;# 
  8663   000135                     C1TRECH         equ	309	;# 
  8664   000136                     C1TRECU         equ	310	;# 
  8665   000137                     C1TRECT         equ	311	;# 
  8666   000138                     C1BDIAG0L       equ	312	;# 
  8667   000139                     C1BDIAG0H       equ	313	;# 
  8668   00013C                     C1BDIAG1L       equ	316	;# 
  8669   00013D                     C1BDIAG1H       equ	317	;# 
  8670   00013E                     C1BDIAG1U       equ	318	;# 
  8671   00013F                     C1BDIAG1T       equ	319	;# 
  8672   000140                     C1TEFCONL       equ	320	;# 
  8673   000141                     C1TEFCONH       equ	321	;# 
  8674   000142                     C1TEFCONU       equ	322	;# 
  8675   000143                     C1TEFCONT       equ	323	;# 
  8676   000144                     C1TEFSTAL       equ	324	;# 
  8677   000145                     C1TEFSTAH       equ	325	;# 
  8678   000146                     C1TEFSTAU       equ	326	;# 
  8679   000147                     C1TEFSTAT       equ	327	;# 
  8680   000148                     C1TEFUA         equ	328	;# 
  8681   000148                     C1TEFUAL        equ	328	;# 
  8682   000149                     C1TEFUAH        equ	329	;# 
  8683   00014A                     C1TEFUAU        equ	330	;# 
  8684   00014B                     C1TEFUAT        equ	331	;# 
  8685   00014C                     C1FIFOBA        equ	332	;# 
  8686   00014C                     C1FIFOBAL       equ	332	;# 
  8687   00014D                     C1FIFOBAH       equ	333	;# 
  8688   00014E                     C1FIFOBAU       equ	334	;# 
  8689   00014F                     C1FIFOBAT       equ	335	;# 
  8690   000150                     C1TXQCONL       equ	336	;# 
  8691   000151                     C1TXQCONH       equ	337	;# 
  8692   000152                     C1TXQCONU       equ	338	;# 
  8693   000153                     C1TXQCONT       equ	339	;# 
  8694   000154                     C1TXQSTAL       equ	340	;# 
  8695   000155                     C1TXQSTAH       equ	341	;# 
  8696   000156                     C1TXQSTAU       equ	342	;# 
  8697   000157                     C1TXQSTAT       equ	343	;# 
  8698   000158                     C1TXQUA         equ	344	;# 
  8699   000158                     C1TXQUAL        equ	344	;# 
  8700   000159                     C1TXQUAH        equ	345	;# 
  8701   00015A                     C1TXQUAU        equ	346	;# 
  8702   00015B                     C1TXQUAT        equ	347	;# 
  8703   00015C                     C1FIFOCON1      equ	348	;# 
  8704   00015C                     C1FIFOCON1L     equ	348	;# 
  8705   00015D                     C1FIFOCON1H     equ	349	;# 
  8706   00015E                     C1FIFOCON1U     equ	350	;# 
  8707   00015F                     C1FIFOCON1T     equ	351	;# 
  8708   000160                     C1FIFOSTA1      equ	352	;# 
  8709   000160                     C1FIFOSTA1L     equ	352	;# 
  8710   000161                     C1FIFOSTA1H     equ	353	;# 
  8711   000162                     C1FIFOSTA1U     equ	354	;# 
  8712   000163                     C1FIFOSTA1T     equ	355	;# 
  8713   000164                     C1FIFOUA1       equ	356	;# 
  8714   000164                     C1FIFOUA1L      equ	356	;# 
  8715   000165                     C1FIFOUA1H      equ	357	;# 
  8716   000166                     C1FIFOUA1U      equ	358	;# 
  8717   000167                     C1FIFOUA1T      equ	359	;# 
  8718   000168                     C1FIFOCON2      equ	360	;# 
  8719   000168                     C1FIFOCON2L     equ	360	;# 
  8720   000169                     C1FIFOCON2H     equ	361	;# 
  8721   00016A                     C1FIFOCON2U     equ	362	;# 
  8722   00016B                     C1FIFOCON2T     equ	363	;# 
  8723   00016C                     C1FIFOSTA2      equ	364	;# 
  8724   00016C                     C1FIFOSTA2L     equ	364	;# 
  8725   00016D                     C1FIFOSTA2H     equ	365	;# 
  8726   00016E                     C1FIFOSTA2U     equ	366	;# 
  8727   00016F                     C1FIFOSTA2T     equ	367	;# 
  8728   000170                     C1FIFOUA2       equ	368	;# 
  8729   000170                     C1FIFOUA2L      equ	368	;# 
  8730   000171                     C1FIFOUA2H      equ	369	;# 
  8731   000172                     C1FIFOUA2U      equ	370	;# 
  8732   000173                     C1FIFOUA2T      equ	371	;# 
  8733   000174                     C1FIFOCON3      equ	372	;# 
  8734   000174                     C1FIFOCON3L     equ	372	;# 
  8735   000175                     C1FIFOCON3H     equ	373	;# 
  8736   000176                     C1FIFOCON3U     equ	374	;# 
  8737   000177                     C1FIFOCON3T     equ	375	;# 
  8738   000178                     C1FIFOSTA3      equ	376	;# 
  8739   000178                     C1FIFOSTA3L     equ	376	;# 
  8740   000179                     C1FIFOSTA3H     equ	377	;# 
  8741   00017A                     C1FIFOSTA3U     equ	378	;# 
  8742   00017B                     C1FIFOSTA3T     equ	379	;# 
  8743   00017C                     C1FIFOUA3       equ	380	;# 
  8744   00017C                     C1FIFOUA3L      equ	380	;# 
  8745   00017D                     C1FIFOUA3H      equ	381	;# 
  8746   00017E                     C1FIFOUA3U      equ	382	;# 
  8747   00017F                     C1FIFOUA3T      equ	383	;# 
  8748   000180                     C1FLTCON0L      equ	384	;# 
  8749   000181                     C1FLTCON0H      equ	385	;# 
  8750   000182                     C1FLTCON0U      equ	386	;# 
  8751   000183                     C1FLTCON0T      equ	387	;# 
  8752   000184                     C1FLTCON1L      equ	388	;# 
  8753   000185                     C1FLTCON1H      equ	389	;# 
  8754   000186                     C1FLTCON1U      equ	390	;# 
  8755   000187                     C1FLTCON1T      equ	391	;# 
  8756   000188                     C1FLTCON2L      equ	392	;# 
  8757   000189                     C1FLTCON2H      equ	393	;# 
  8758   00018A                     C1FLTCON2U      equ	394	;# 
  8759   00018B                     C1FLTCON2T      equ	395	;# 
  8760   00018C                     C1FLTOBJ0       equ	396	;# 
  8761   00018C                     C1FLTOBJ0L      equ	396	;# 
  8762   00018D                     C1FLTOBJ0H      equ	397	;# 
  8763   00018E                     C1FLTOBJ0U      equ	398	;# 
  8764   00018F                     C1FLTOBJ0T      equ	399	;# 
  8765   000190                     C1MASK0         equ	400	;# 
  8766   000190                     C1MASK0L        equ	400	;# 
  8767   000191                     C1MASK0H        equ	401	;# 
  8768   000192                     C1MASK0U        equ	402	;# 
  8769   000193                     C1MASK0T        equ	403	;# 
  8770   000194                     C1FLTOBJ1       equ	404	;# 
  8771   000194                     C1FLTOBJ1L      equ	404	;# 
  8772   000195                     C1FLTOBJ1H      equ	405	;# 
  8773   000196                     C1FLTOBJ1U      equ	406	;# 
  8774   000197                     C1FLTOBJ1T      equ	407	;# 
  8775   000198                     C1MASK1         equ	408	;# 
  8776   000198                     C1MASK1L        equ	408	;# 
  8777   000199                     C1MASK1H        equ	409	;# 
  8778   00019A                     C1MASK1U        equ	410	;# 
  8779   00019B                     C1MASK1T        equ	411	;# 
  8780   00019C                     C1FLTOBJ2       equ	412	;# 
  8781   00019C                     C1FLTOBJ2L      equ	412	;# 
  8782   00019D                     C1FLTOBJ2H      equ	413	;# 
  8783   00019E                     C1FLTOBJ2U      equ	414	;# 
  8784   00019F                     C1FLTOBJ2T      equ	415	;# 
  8785   0001A0                     C1MASK2         equ	416	;# 
  8786   0001A0                     C1MASK2L        equ	416	;# 
  8787   0001A1                     C1MASK2H        equ	417	;# 
  8788   0001A2                     C1MASK2U        equ	418	;# 
  8789   0001A3                     C1MASK2T        equ	419	;# 
  8790   0001A4                     C1FLTOBJ3       equ	420	;# 
  8791   0001A4                     C1FLTOBJ3L      equ	420	;# 
  8792   0001A5                     C1FLTOBJ3H      equ	421	;# 
  8793   0001A6                     C1FLTOBJ3U      equ	422	;# 
  8794   0001A7                     C1FLTOBJ3T      equ	423	;# 
  8795   0001A8                     C1MASK3         equ	424	;# 
  8796   0001A8                     C1MASK3L        equ	424	;# 
  8797   0001A9                     C1MASK3H        equ	425	;# 
  8798   0001AA                     C1MASK3U        equ	426	;# 
  8799   0001AB                     C1MASK3T        equ	427	;# 
  8800   0001AC                     C1FLTOBJ4       equ	428	;# 
  8801   0001AC                     C1FLTOBJ4L      equ	428	;# 
  8802   0001AD                     C1FLTOBJ4H      equ	429	;# 
  8803   0001AE                     C1FLTOBJ4U      equ	430	;# 
  8804   0001AF                     C1FLTOBJ4T      equ	431	;# 
  8805   0001B0                     C1MASK4         equ	432	;# 
  8806   0001B0                     C1MASK4L        equ	432	;# 
  8807   0001B1                     C1MASK4H        equ	433	;# 
  8808   0001B2                     C1MASK4U        equ	434	;# 
  8809   0001B3                     C1MASK4T        equ	435	;# 
  8810   0001B4                     C1FLTOBJ5       equ	436	;# 
  8811   0001B4                     C1FLTOBJ5L      equ	436	;# 
  8812   0001B5                     C1FLTOBJ5H      equ	437	;# 
  8813   0001B6                     C1FLTOBJ5U      equ	438	;# 
  8814   0001B7                     C1FLTOBJ5T      equ	439	;# 
  8815   0001B8                     C1MASK5         equ	440	;# 
  8816   0001B8                     C1MASK5L        equ	440	;# 
  8817   0001B9                     C1MASK5H        equ	441	;# 
  8818   0001BA                     C1MASK5U        equ	442	;# 
  8819   0001BB                     C1MASK5T        equ	443	;# 
  8820   0001BC                     C1FLTOBJ6       equ	444	;# 
  8821   0001BC                     C1FLTOBJ6L      equ	444	;# 
  8822   0001BD                     C1FLTOBJ6H      equ	445	;# 
  8823   0001BE                     C1FLTOBJ6U      equ	446	;# 
  8824   0001BF                     C1FLTOBJ6T      equ	447	;# 
  8825   0001C0                     C1MASK6         equ	448	;# 
  8826   0001C0                     C1MASK6L        equ	448	;# 
  8827   0001C1                     C1MASK6H        equ	449	;# 
  8828   0001C2                     C1MASK6U        equ	450	;# 
  8829   0001C3                     C1MASK6T        equ	451	;# 
  8830   0001C4                     C1FLTOBJ7       equ	452	;# 
  8831   0001C4                     C1FLTOBJ7L      equ	452	;# 
  8832   0001C5                     C1FLTOBJ7H      equ	453	;# 
  8833   0001C6                     C1FLTOBJ7U      equ	454	;# 
  8834   0001C7                     C1FLTOBJ7T      equ	455	;# 
  8835   0001C8                     C1MASK7         equ	456	;# 
  8836   0001C8                     C1MASK7L        equ	456	;# 
  8837   0001C9                     C1MASK7H        equ	457	;# 
  8838   0001CA                     C1MASK7U        equ	458	;# 
  8839   0001CB                     C1MASK7T        equ	459	;# 
  8840   0001CC                     C1FLTOBJ8       equ	460	;# 
  8841   0001CC                     C1FLTOBJ8L      equ	460	;# 
  8842   0001CD                     C1FLTOBJ8H      equ	461	;# 
  8843   0001CE                     C1FLTOBJ8U      equ	462	;# 
  8844   0001CF                     C1FLTOBJ8T      equ	463	;# 
  8845   0001D0                     C1MASK8         equ	464	;# 
  8846   0001D0                     C1MASK8L        equ	464	;# 
  8847   0001D1                     C1MASK8H        equ	465	;# 
  8848   0001D2                     C1MASK8U        equ	466	;# 
  8849   0001D3                     C1MASK8T        equ	467	;# 
  8850   0001D4                     C1FLTOBJ9       equ	468	;# 
  8851   0001D4                     C1FLTOBJ9L      equ	468	;# 
  8852   0001D5                     C1FLTOBJ9H      equ	469	;# 
  8853   0001D6                     C1FLTOBJ9U      equ	470	;# 
  8854   0001D7                     C1FLTOBJ9T      equ	471	;# 
  8855   0001D8                     C1MASK9         equ	472	;# 
  8856   0001D8                     C1MASK9L        equ	472	;# 
  8857   0001D9                     C1MASK9H        equ	473	;# 
  8858   0001DA                     C1MASK9U        equ	474	;# 
  8859   0001DB                     C1MASK9T        equ	475	;# 
  8860   0001DC                     C1FLTOBJ10      equ	476	;# 
  8861   0001DC                     C1FLTOBJ10L     equ	476	;# 
  8862   0001DD                     C1FLTOBJ10H     equ	477	;# 
  8863   0001DE                     C1FLTOBJ10U     equ	478	;# 
  8864   0001DF                     C1FLTOBJ10T     equ	479	;# 
  8865   0001E0                     C1MASK10        equ	480	;# 
  8866   0001E0                     C1MASK10L       equ	480	;# 
  8867   0001E1                     C1MASK10H       equ	481	;# 
  8868   0001E2                     C1MASK10U       equ	482	;# 
  8869   0001E3                     C1MASK10T       equ	483	;# 
  8870   0001E4                     C1FLTOBJ11      equ	484	;# 
  8871   0001E4                     C1FLTOBJ11L     equ	484	;# 
  8872   0001E5                     C1FLTOBJ11H     equ	485	;# 
  8873   0001E6                     C1FLTOBJ11U     equ	486	;# 
  8874   0001E7                     C1FLTOBJ11T     equ	487	;# 
  8875   0001E8                     C1MASK11        equ	488	;# 
  8876   0001E8                     C1MASK11L       equ	488	;# 
  8877   0001E9                     C1MASK11H       equ	489	;# 
  8878   0001EA                     C1MASK11U       equ	490	;# 
  8879   0001EB                     C1MASK11T       equ	491	;# 
  8880   000200                     PPSLOCK         equ	512	;# 
  8881   000201                     RA0PPS          equ	513	;# 
  8882   000202                     RA1PPS          equ	514	;# 
  8883   000203                     RA2PPS          equ	515	;# 
  8884   000204                     RA3PPS          equ	516	;# 
  8885   000205                     RA4PPS          equ	517	;# 
  8886   000206                     RA5PPS          equ	518	;# 
  8887   000207                     RA6PPS          equ	519	;# 
  8888   000208                     RA7PPS          equ	520	;# 
  8889   000209                     RB0PPS          equ	521	;# 
  8890   00020A                     RB1PPS          equ	522	;# 
  8891   00020B                     RB2PPS          equ	523	;# 
  8892   00020C                     RB3PPS          equ	524	;# 
  8893   00020D                     RB4PPS          equ	525	;# 
  8894   00020E                     RB5PPS          equ	526	;# 
  8895   00020F                     RB6PPS          equ	527	;# 
  8896   000210                     RB7PPS          equ	528	;# 
  8897   000211                     RC0PPS          equ	529	;# 
  8898   000212                     RC1PPS          equ	530	;# 
  8899   000213                     RC2PPS          equ	531	;# 
  8900   000214                     RC3PPS          equ	532	;# 
  8901   000215                     RC4PPS          equ	533	;# 
  8902   000216                     RC5PPS          equ	534	;# 
  8903   000217                     RC6PPS          equ	535	;# 
  8904   000218                     RC7PPS          equ	536	;# 
  8905   00023D                     CANRXPPS        equ	573	;# 
  8906   00023E                     INT0PPS         equ	574	;# 
  8907   00023F                     INT1PPS         equ	575	;# 
  8908   000240                     INT2PPS         equ	576	;# 
  8909   000241                     T0CKIPPS        equ	577	;# 
  8910   000242                     T1CKIPPS        equ	578	;# 
  8911   000243                     T1GPPS          equ	579	;# 
  8912   000244                     T3CKIPPS        equ	580	;# 
  8913   000245                     T3GPPS          equ	581	;# 
  8914   000246                     T5CKIPPS        equ	582	;# 
  8915   000247                     T5GPPS          equ	583	;# 
  8916   000248                     T2INPPS         equ	584	;# 
  8917   000249                     T4INPPS         equ	585	;# 
  8918   00024A                     T6INPPS         equ	586	;# 
  8919   00024B                     TUIN0PPS        equ	587	;# 
  8920   00024C                     TUIN1PPS        equ	588	;# 
  8921   00024F                     CCP1PPS         equ	591	;# 
  8922   000250                     CCP2PPS         equ	592	;# 
  8923   000251                     CCP3PPS         equ	593	;# 
  8924   000253                     PWM1ERSPPS      equ	595	;# 
  8925   000254                     PWM2ERSPPS      equ	596	;# 
  8926   000255                     PWM3ERSPPS      equ	597	;# 
  8927   000256                     PWM4ERSPPS      equ	598	;# 
  8928   000257                     PWMIN0PPS       equ	599	;# 
  8929   000258                     PWMIN1PPS       equ	600	;# 
  8930   000259                     SMT1WINPPS      equ	601	;# 
  8931   00025A                     SMT1SIGPPS      equ	602	;# 
  8932   00025B                     CWG1PPS         equ	603	;# 
  8933   00025B                     CWG1INPPS       equ	603	;# 
  8934   00025C                     CWG2PPS         equ	604	;# 
  8935   00025C                     CWG2INPPS       equ	604	;# 
  8936   00025D                     CWG3PPS         equ	605	;# 
  8937   00025D                     CWG3INPPS       equ	605	;# 
  8938   00025E                     MD1CARLPPS      equ	606	;# 
  8939   00025E                     MDCARLPPS       equ	606	;# 
  8940   00025F                     MD1CARHPPS      equ	607	;# 
  8941   00025F                     MDCARHPPS       equ	607	;# 
  8942   000260                     MD1SRCPPS       equ	608	;# 
  8943   000260                     MDSRCPPS        equ	608	;# 
  8944   000261                     CLCIN0PPS       equ	609	;# 
  8945   000262                     CLCIN1PPS       equ	610	;# 
  8946   000263                     CLCIN2PPS       equ	611	;# 
  8947   000264                     CLCIN3PPS       equ	612	;# 
  8948   000265                     CLCIN4PPS       equ	613	;# 
  8949   000266                     CLCIN5PPS       equ	614	;# 
  8950   000267                     CLCIN6PPS       equ	615	;# 
  8951   000268                     CLCIN7PPS       equ	616	;# 
  8952   000269                     ADACTPPS        equ	617	;# 
  8953   00026A                     SPI1SCKPPS      equ	618	;# 
  8954   00026B                     SPI1SDIPPS      equ	619	;# 
  8955   00026C                     SPI1SSPPS       equ	620	;# 
  8956   00026D                     SPI2SCKPPS      equ	621	;# 
  8957   00026E                     SPI2SDIPPS      equ	622	;# 
  8958   00026F                     SPI2SSPPS       equ	623	;# 
  8959   000270                     I2C1SDAPPS      equ	624	;# 
  8960   000271                     I2C1SCLPPS      equ	625	;# 
  8961   000272                     U1RXPPS         equ	626	;# 
  8962   000273                     U1CTSPPS        equ	627	;# 
  8963   000274                     U2RXPPS         equ	628	;# 
  8964   000275                     U2CTSPPS        equ	629	;# 
  8965   000276                     U3RXPPS         equ	630	;# 
  8966   000277                     U3CTSPPS        equ	631	;# 
  8967   000278                     U4RXPPS         equ	632	;# 
  8968   000279                     U4CTSPPS        equ	633	;# 
  8969   00027A                     U5RXPPS         equ	634	;# 
  8970   00027B                     U5CTSPPS        equ	635	;# 
  8971   000286                     RC4I2C          equ	646	;# 
  8972   000287                     RC3I2C          equ	647	;# 
  8973   000288                     RB2I2C          equ	648	;# 
  8974   000289                     RB1I2C          equ	649	;# 
  8975   00028A                     I2C1RXB         equ	650	;# 
  8976   00028B                     I2C1TXB         equ	651	;# 
  8977   00028C                     I2C1CNTL        equ	652	;# 
  8978   00028D                     I2C1CNTH        equ	653	;# 
  8979   00028E                     I2C1ADB0        equ	654	;# 
  8980   00028F                     I2C1ADB1        equ	655	;# 
  8981   000290                     I2C1ADR0        equ	656	;# 
  8982   000291                     I2C1ADR1        equ	657	;# 
  8983   000292                     I2C1ADR2        equ	658	;# 
  8984   000293                     I2C1ADR3        equ	659	;# 
  8985   000294                     I2C1CON0        equ	660	;# 
  8986   000295                     I2C1CON1        equ	661	;# 
  8987   000296                     I2C1CON2        equ	662	;# 
  8988   000297                     I2C1ERR         equ	663	;# 
  8989   000298                     I2C1STAT0       equ	664	;# 
  8990   000299                     I2C1STAT1       equ	665	;# 
  8991   00029A                     I2C1PIR         equ	666	;# 
  8992   00029B                     I2C1PIE         equ	667	;# 
  8993   00029C                     I2C1BTO         equ	668	;# 
  8994   00029D                     I2C1BAUD        equ	669	;# 
  8995   00029E                     I2C1CLK         equ	670	;# 
  8996   00029F                     I2C1BTOC        equ	671	;# 
  8997   0002A1                     U1RXB           equ	673	;# 
  8998   0002A1                     U1RXBL          equ	673	;# 
  8999   0002A2                     U1RXCHK         equ	674	;# 
  9000   0002A3                     U1TXB           equ	675	;# 
  9001   0002A3                     U1TXBL          equ	675	;# 
  9002   0002A4                     U1TXCHK         equ	676	;# 
  9003   0002A5                     U1P1            equ	677	;# 
  9004   0002A5                     U1P1L           equ	677	;# 
  9005   0002A6                     U1P1H           equ	678	;# 
  9006   0002A7                     U1P2            equ	679	;# 
  9007   0002A7                     U1P2L           equ	679	;# 
  9008   0002A8                     U1P2H           equ	680	;# 
  9009   0002A9                     U1P3            equ	681	;# 
  9010   0002A9                     U1P3L           equ	681	;# 
  9011   0002AA                     U1P3H           equ	682	;# 
  9012   0002AB                     U1CON0          equ	683	;# 
  9013   0002AC                     U1CON1          equ	684	;# 
  9014   0002AD                     U1CON2          equ	685	;# 
  9015   0002AE                     U1BRG           equ	686	;# 
  9016   0002AE                     U1BRGL          equ	686	;# 
  9017   0002AF                     U1BRGH          equ	687	;# 
  9018   0002B0                     U1FIFO          equ	688	;# 
  9019   0002B1                     U1UIR           equ	689	;# 
  9020   0002B2                     U1ERRIR         equ	690	;# 
  9021   0002B3                     U1ERRIE         equ	691	;# 
  9022   0002B4                     U2RXB           equ	692	;# 
  9023   0002B4                     U2RXBL          equ	692	;# 
  9024   0002B5                     U2RXCHK         equ	693	;# 
  9025   0002B6                     U2TXB           equ	694	;# 
  9026   0002B6                     U2TXBL          equ	694	;# 
  9027   0002B7                     U2TXCHK         equ	695	;# 
  9028   0002B8                     U2P1            equ	696	;# 
  9029   0002B8                     U2P1L           equ	696	;# 
  9030   0002B9                     U2P1H           equ	697	;# 
  9031   0002BA                     U2P2            equ	698	;# 
  9032   0002BA                     U2P2L           equ	698	;# 
  9033   0002BB                     U2P2H           equ	699	;# 
  9034   0002BC                     U2P3            equ	700	;# 
  9035   0002BC                     U2P3L           equ	700	;# 
  9036   0002BD                     U2P3H           equ	701	;# 
  9037   0002BE                     U2CON0          equ	702	;# 
  9038   0002BF                     U2CON1          equ	703	;# 
  9039   0002C0                     U2CON2          equ	704	;# 
  9040   0002C1                     U2BRG           equ	705	;# 
  9041   0002C1                     U2BRGL          equ	705	;# 
  9042   0002C2                     U2BRGH          equ	706	;# 
  9043   0002C3                     U2FIFO          equ	707	;# 
  9044   0002C4                     U2UIR           equ	708	;# 
  9045   0002C5                     U2ERRIR         equ	709	;# 
  9046   0002C6                     U2ERRIE         equ	710	;# 
  9047   0002C7                     U3RXB           equ	711	;# 
  9048   0002C7                     U3RXBL          equ	711	;# 
  9049   0002C9                     U3TXB           equ	713	;# 
  9050   0002C9                     U3TXBL          equ	713	;# 
  9051   0002CB                     U3P1            equ	715	;# 
  9052   0002CB                     U3P1L           equ	715	;# 
  9053   0002CD                     U3P2            equ	717	;# 
  9054   0002CD                     U3P2L           equ	717	;# 
  9055   0002CF                     U3P3            equ	719	;# 
  9056   0002CF                     U3P3L           equ	719	;# 
  9057   0002D1                     U3CON0          equ	721	;# 
  9058   0002D2                     U3CON1          equ	722	;# 
  9059   0002D3                     U3CON2          equ	723	;# 
  9060   0002D4                     U3BRG           equ	724	;# 
  9061   0002D4                     U3BRGL          equ	724	;# 
  9062   0002D5                     U3BRGH          equ	725	;# 
  9063   0002D6                     U3FIFO          equ	726	;# 
  9064   0002D7                     U3UIR           equ	727	;# 
  9065   0002D8                     U3ERRIR         equ	728	;# 
  9066   0002D9                     U3ERRIE         equ	729	;# 
  9067   0002DA                     U4RXB           equ	730	;# 
  9068   0002DA                     U4RXBL          equ	730	;# 
  9069   0002DC                     U4TXB           equ	732	;# 
  9070   0002DC                     U4TXBL          equ	732	;# 
  9071   0002DE                     U4P1            equ	734	;# 
  9072   0002DE                     U4P1L           equ	734	;# 
  9073   0002E0                     U4P2            equ	736	;# 
  9074   0002E0                     U4P2L           equ	736	;# 
  9075   0002E2                     U4P3            equ	738	;# 
  9076   0002E2                     U4P3L           equ	738	;# 
  9077   0002E4                     U4CON0          equ	740	;# 
  9078   0002E5                     U4CON1          equ	741	;# 
  9079   0002E6                     U4CON2          equ	742	;# 
  9080   0002E7                     U4BRG           equ	743	;# 
  9081   0002E7                     U4BRGL          equ	743	;# 
  9082   0002E8                     U4BRGH          equ	744	;# 
  9083   0002E9                     U4FIFO          equ	745	;# 
  9084   0002EA                     U4UIR           equ	746	;# 
  9085   0002EB                     U4ERRIR         equ	747	;# 
  9086   0002EC                     U4ERRIE         equ	748	;# 
  9087   0002ED                     U5RXB           equ	749	;# 
  9088   0002ED                     U5RXBL          equ	749	;# 
  9089   0002EF                     U5TXB           equ	751	;# 
  9090   0002EF                     U5TXBL          equ	751	;# 
  9091   0002F1                     U5P1            equ	753	;# 
  9092   0002F1                     U5P1L           equ	753	;# 
  9093   0002F3                     U5P2            equ	755	;# 
  9094   0002F3                     U5P2L           equ	755	;# 
  9095   0002F5                     U5P3            equ	757	;# 
  9096   0002F5                     U5P3L           equ	757	;# 
  9097   0002F7                     U5CON0          equ	759	;# 
  9098   0002F8                     U5CON1          equ	760	;# 
  9099   0002F9                     U5CON2          equ	761	;# 
  9100   0002FA                     U5BRG           equ	762	;# 
  9101   0002FA                     U5BRGL          equ	762	;# 
  9102   0002FB                     U5BRGH          equ	763	;# 
  9103   0002FC                     U5FIFO          equ	764	;# 
  9104   0002FD                     U5UIR           equ	765	;# 
  9105   0002FE                     U5ERRIR         equ	766	;# 
  9106   0002FF                     U5ERRIE         equ	767	;# 
  9107   000300                     SMT1TMR         equ	768	;# 
  9108   000300                     SMT1TMRL        equ	768	;# 
  9109   000301                     SMT1TMRH        equ	769	;# 
  9110   000302                     SMT1TMRU        equ	770	;# 
  9111   000303                     SMT1CPR         equ	771	;# 
  9112   000303                     SMT1CPRL        equ	771	;# 
  9113   000304                     SMT1CPRH        equ	772	;# 
  9114   000305                     SMT1CPRU        equ	773	;# 
  9115   000306                     SMT1CPW         equ	774	;# 
  9116   000306                     SMT1CPWL        equ	774	;# 
  9117   000307                     SMT1CPWH        equ	775	;# 
  9118   000308                     SMT1CPWU        equ	776	;# 
  9119   000309                     SMT1PR          equ	777	;# 
  9120   000309                     SMT1PRL         equ	777	;# 
  9121   00030A                     SMT1PRH         equ	778	;# 
  9122   00030B                     SMT1PRU         equ	779	;# 
  9123   00030C                     SMT1CON0        equ	780	;# 
  9124   00030D                     SMT1CON1        equ	781	;# 
  9125   00030E                     SMT1STAT        equ	782	;# 
  9126   00030F                     SMT1CLK         equ	783	;# 
  9127   000310                     SMT1SIG         equ	784	;# 
  9128   000311                     SMT1WIN         equ	785	;# 
  9129   000318                     TMR0L           equ	792	;# 
  9130   000318                     TMR0            equ	792	;# 
  9131   000319                     TMR0H           equ	793	;# 
  9132   000319                     PR0             equ	793	;# 
  9133   00031A                     T0CON0          equ	794	;# 
  9134   00031B                     T0CON1          equ	795	;# 
  9135   00031C                     TMR1            equ	796	;# 
  9136   00031C                     TMR1L           equ	796	;# 
  9137   00031D                     TMR1H           equ	797	;# 
  9138   00031E                     T1CON           equ	798	;# 
  9139   00031E                     TMR1CON         equ	798	;# 
  9140   00031F                     T1GCON          equ	799	;# 
  9141   00031F                     TMR1GCON        equ	799	;# 
  9142   000320                     T1GATE          equ	800	;# 
  9143   000320                     TMR1GATE        equ	800	;# 
  9144   000321                     T1CLK           equ	801	;# 
  9145   000321                     TMR1CLK         equ	801	;# 
  9146   000321                     PR1             equ	801	;# 
  9147   000322                     T2TMR           equ	802	;# 
  9148   000322                     TMR2            equ	802	;# 
  9149   000323                     T2PR            equ	803	;# 
  9150   000323                     PR2             equ	803	;# 
  9151   000324                     T2CON           equ	804	;# 
  9152   000325                     T2HLT           equ	805	;# 
  9153   000326                     T2CLKCON        equ	806	;# 
  9154   000326                     T2CLK           equ	806	;# 
  9155   000327                     T2RST           equ	807	;# 
  9156   000328                     TMR3            equ	808	;# 
  9157   000328                     TMR3L           equ	808	;# 
  9158   000329                     TMR3H           equ	809	;# 
  9159   00032A                     T3CON           equ	810	;# 
  9160   00032A                     TMR3CON         equ	810	;# 
  9161   00032B                     T3GCON          equ	811	;# 
  9162   00032B                     TMR3GCON        equ	811	;# 
  9163   00032C                     T3GATE          equ	812	;# 
  9164   00032C                     TMR3GATE        equ	812	;# 
  9165   00032D                     T3CLK           equ	813	;# 
  9166   00032D                     TMR3CLK         equ	813	;# 
  9167   00032D                     PR3             equ	813	;# 
  9168   00032E                     T4TMR           equ	814	;# 
  9169   00032E                     TMR4            equ	814	;# 
  9170   00032F                     T4PR            equ	815	;# 
  9171   00032F                     PR4             equ	815	;# 
  9172   000330                     T4CON           equ	816	;# 
  9173   000331                     T4HLT           equ	817	;# 
  9174   000332                     T4CLKCON        equ	818	;# 
  9175   000332                     T4CLK           equ	818	;# 
  9176   000333                     T4RST           equ	819	;# 
  9177   000334                     TMR5            equ	820	;# 
  9178   000334                     TMR5L           equ	820	;# 
  9179   000335                     TMR5H           equ	821	;# 
  9180   000336                     T5CON           equ	822	;# 
  9181   000336                     TMR5CON         equ	822	;# 
  9182   000337                     T5GCON          equ	823	;# 
  9183   000337                     TMR5GCON        equ	823	;# 
  9184   000338                     T5GATE          equ	824	;# 
  9185   000338                     TMR5GATE        equ	824	;# 
  9186   000339                     T5CLK           equ	825	;# 
  9187   000339                     TMR5CLK         equ	825	;# 
  9188   000339                     PR5             equ	825	;# 
  9189   00033A                     T6TMR           equ	826	;# 
  9190   00033A                     TMR6            equ	826	;# 
  9191   00033B                     T6PR            equ	827	;# 
  9192   00033B                     PR6             equ	827	;# 
  9193   00033C                     T6CON           equ	828	;# 
  9194   00033D                     T6HLT           equ	829	;# 
  9195   00033E                     T6CLKCON        equ	830	;# 
  9196   00033E                     T6CLK           equ	830	;# 
  9197   00033F                     T6RST           equ	831	;# 
  9198   000340                     CCPR1           equ	832	;# 
  9199   000340                     CCPR1L          equ	832	;# 
  9200   000341                     CCPR1H          equ	833	;# 
  9201   000342                     CCP1CON         equ	834	;# 
  9202   000343                     CCP1CAP         equ	835	;# 
  9203   000344                     CCPR2           equ	836	;# 
  9204   000344                     CCPR2L          equ	836	;# 
  9205   000345                     CCPR2H          equ	837	;# 
  9206   000346                     CCP2CON         equ	838	;# 
  9207   000347                     CCP2CAP         equ	839	;# 
  9208   000348                     CCPR3           equ	840	;# 
  9209   000348                     CCPR3L          equ	840	;# 
  9210   000349                     CCPR3H          equ	841	;# 
  9211   00034A                     CCP3CON         equ	842	;# 
  9212   00034B                     CCP3CAP         equ	843	;# 
  9213   00034C                     CCPTMRS0        equ	844	;# 
  9214   00034F                     CRCDATA         equ	847	;# 
  9215   00034F                     CRCDATAL        equ	847	;# 
  9216   000350                     CRCDATAH        equ	848	;# 
  9217   000351                     CRCDATAU        equ	849	;# 
  9218   000352                     CRCDATAT        equ	850	;# 
  9219   000353                     CRCOUT          equ	851	;# 
  9220   000353                     CRCSHFT         equ	851	;# 
  9221   000353                     CRCXOR          equ	851	;# 
  9222   000353                     CRCOUTL         equ	851	;# 
  9223   000353                     CRCSHFTL        equ	851	;# 
  9224   000353                     CRCSHIFTL       equ	851	;# 
  9225   000353                     CRCXORL         equ	851	;# 
  9226   000354                     CRCOUTH         equ	852	;# 
  9227   000354                     CRCSHFTH        equ	852	;# 
  9228   000354                     CRCSHIFTH       equ	852	;# 
  9229   000354                     CRCXORH         equ	852	;# 
  9230   000355                     CRCOUTU         equ	853	;# 
  9231   000355                     CRCSHFTU        equ	853	;# 
  9232   000355                     CRCSHIFTU       equ	853	;# 
  9233   000355                     CRCXORU         equ	853	;# 
  9234   000356                     CRCOUTT         equ	854	;# 
  9235   000356                     CRCSHFTT        equ	854	;# 
  9236   000356                     CRCSHIFTT       equ	854	;# 
  9237   000356                     CRCXORT         equ	854	;# 
  9238   000357                     CRCCON0         equ	855	;# 
  9239   000358                     CRCCON1         equ	856	;# 
  9240   000359                     CRCCON2         equ	857	;# 
  9241   00035A                     SCANLADR        equ	858	;# 
  9242   00035A                     SCANLADRL       equ	858	;# 
  9243   00035B                     SCANLADRH       equ	859	;# 
  9244   00035C                     SCANLADRU       equ	860	;# 
  9245   00035D                     SCANHADR        equ	861	;# 
  9246   00035D                     SCANHADRL       equ	861	;# 
  9247   00035E                     SCANHADRH       equ	862	;# 
  9248   00035F                     SCANHADRU       equ	863	;# 
  9249   000360                     SCANCON0        equ	864	;# 
  9250   000361                     SCANTRIG        equ	865	;# 
  9251   000362                     IPR0            equ	866	;# 
  9252   000363                     IPR1            equ	867	;# 
  9253   000364                     IPR2            equ	868	;# 
  9254   000365                     IPR3            equ	869	;# 
  9255   000366                     IPR4            equ	870	;# 
  9256   000367                     IPR5            equ	871	;# 
  9257   000368                     IPR6            equ	872	;# 
  9258   000369                     IPR7            equ	873	;# 
  9259   00036A                     IPR8            equ	874	;# 
  9260   00036B                     IPR9            equ	875	;# 
  9261   00036C                     IPR10           equ	876	;# 
  9262   00036D                     IPR11           equ	877	;# 
  9263   00036E                     IPR12           equ	878	;# 
  9264   00036F                     IPR13           equ	879	;# 
  9265   000370                     IPR14           equ	880	;# 
  9266   000371                     IPR15           equ	881	;# 
  9267   000373                     STATUS_CSHAD    equ	883	;# 
  9268   000374                     WREG_CSHAD      equ	884	;# 
  9269   000375                     BSR_CSHAD       equ	885	;# 
  9270   000376                     SHADCON         equ	886	;# 
  9271   000377                     STATUS_SHAD     equ	887	;# 
  9272   000378                     WREG_SHAD       equ	888	;# 
  9273   000379                     BSR_SHAD        equ	889	;# 
  9274   00037A                     PCLATH_SHAD     equ	890	;# 
  9275   00037B                     PCLATU_SHAD     equ	891	;# 
  9276   00037C                     FSR0SH          equ	892	;# 
  9277   00037C                     FSR0L_SHAD      equ	892	;# 
  9278   00037D                     FSR0H_SHAD      equ	893	;# 
  9279   00037E                     FSR1SH          equ	894	;# 
  9280   00037E                     FSR1L_SHAD      equ	894	;# 
  9281   00037F                     FSR1H_SHAD      equ	895	;# 
  9282   000380                     FSR2SH          equ	896	;# 
  9283   000380                     FSR2L_SHAD      equ	896	;# 
  9284   000381                     FSR2H_SHAD      equ	897	;# 
  9285   000382                     PRODSH          equ	898	;# 
  9286   000382                     PRODL_SHAD      equ	898	;# 
  9287   000383                     PRODH_SHAD      equ	899	;# 
  9288   000387                     TU16ACON0       equ	903	;# 
  9289   000388                     TU16ACON1       equ	904	;# 
  9290   000389                     TU16AHLT        equ	905	;# 
  9291   00038A                     TU16APS         equ	906	;# 
  9292   00038B                     TU16ATMR        equ	907	;# 
  9293   00038B                     TU16ACR         equ	907	;# 
  9294   00038B                     TU16ATMRL       equ	907	;# 
  9295   00038B                     TU16ACRL        equ	907	;# 
  9296   00038C                     TU16ATMRH       equ	908	;# 
  9297   00038C                     TU16ACRH        equ	908	;# 
  9298   00038D                     TU16APR         equ	909	;# 
  9299   00038D                     TU16APRL        equ	909	;# 
  9300   00038E                     TU16APRH        equ	910	;# 
  9301   00038F                     TU16ACLK        equ	911	;# 
  9302   000390                     TU16AERS        equ	912	;# 
  9303   000393                     TU16BCON0       equ	915	;# 
  9304   000394                     TU16BCON1       equ	916	;# 
  9305   000395                     TU16BHLT        equ	917	;# 
  9306   000396                     TU16BPS         equ	918	;# 
  9307   000397                     TU16BTMR        equ	919	;# 
  9308   000397                     TU16BCR         equ	919	;# 
  9309   000397                     TU16BTMRL       equ	919	;# 
  9310   000397                     TU16BCRL        equ	919	;# 
  9311   000398                     TU16BTMRH       equ	920	;# 
  9312   000398                     TU16BCRH        equ	920	;# 
  9313   000399                     TU16BPR         equ	921	;# 
  9314   000399                     TU16BPRL        equ	921	;# 
  9315   00039A                     TU16BPRH        equ	922	;# 
  9316   00039B                     TU16BCLK        equ	923	;# 
  9317   00039C                     TU16BERS        equ	924	;# 
  9318   0003BB                     TUCHAIN         equ	955	;# 
  9319   0003BC                     CWG1CLK         equ	956	;# 
  9320   0003BC                     CWG1CLKCON      equ	956	;# 
  9321   0003BD                     CWG1ISM         equ	957	;# 
  9322   0003BE                     CWG1DBR         equ	958	;# 
  9323   0003BF                     CWG1DBF         equ	959	;# 
  9324   0003C0                     CWG1CON0        equ	960	;# 
  9325   0003C1                     CWG1CON1        equ	961	;# 
  9326   0003C2                     CWG1AS0         equ	962	;# 
  9327   0003C3                     CWG1AS1         equ	963	;# 
  9328   0003C4                     CWG1STR         equ	964	;# 
  9329   0003C5                     CWG2CLK         equ	965	;# 
  9330   0003C5                     CWG2CLKCON      equ	965	;# 
  9331   0003C6                     CWG2ISM         equ	966	;# 
  9332   0003C7                     CWG2DBR         equ	967	;# 
  9333   0003C8                     CWG2DBF         equ	968	;# 
  9334   0003C9                     CWG2CON0        equ	969	;# 
  9335   0003CA                     CWG2CON1        equ	970	;# 
  9336   0003CB                     CWG2AS0         equ	971	;# 
  9337   0003CC                     CWG2AS1         equ	972	;# 
  9338   0003CD                     CWG2STR         equ	973	;# 
  9339   0003CE                     CWG3CLK         equ	974	;# 
  9340   0003CE                     CWG3CLKCON      equ	974	;# 
  9341   0003CF                     CWG3ISM         equ	975	;# 
  9342   0003D0                     CWG3DBR         equ	976	;# 
  9343   0003D1                     CWG3DBF         equ	977	;# 
  9344   0003D2                     CWG3CON0        equ	978	;# 
  9345   0003D3                     CWG3CON1        equ	979	;# 
  9346   0003D4                     CWG3AS0         equ	980	;# 
  9347   0003D5                     CWG3AS1         equ	981	;# 
  9348   0003D6                     CWG3STR         equ	982	;# 
  9349   0003D7                     FVRCON          equ	983	;# 
  9350   0003D8                     ADCPCON         equ	984	;# 
  9351   0003D8                     ADCP            equ	984	;# 
  9352   0003D9                     ADLTH           equ	985	;# 
  9353   0003D9                     ADLTHL          equ	985	;# 
  9354   0003DA                     ADLTHH          equ	986	;# 
  9355   0003DB                     ADUTH           equ	987	;# 
  9356   0003DB                     ADUTHL          equ	987	;# 
  9357   0003DC                     ADUTHH          equ	988	;# 
  9358   0003DD                     ADERR           equ	989	;# 
  9359   0003DD                     ADERRL          equ	989	;# 
  9360   0003DE                     ADERRH          equ	990	;# 
  9361   0003DF                     ADSTPT          equ	991	;# 
  9362   0003DF                     ADSTPTL         equ	991	;# 
  9363   0003E0                     ADSTPTH         equ	992	;# 
  9364   0003E1                     ADFLTR          equ	993	;# 
  9365   0003E1                     ADFLTRL         equ	993	;# 
  9366   0003E2                     ADFLTRH         equ	994	;# 
  9367   0003E3                     ADACC           equ	995	;# 
  9368   0003E3                     ADACCL          equ	995	;# 
  9369   0003E4                     ADACCH          equ	996	;# 
  9370   0003E5                     ADACCU          equ	997	;# 
  9371   0003E6                     ADCNT           equ	998	;# 
  9372   0003E7                     ADRPT           equ	999	;# 
  9373   0003E8                     ADPREV          equ	1000	;# 
  9374   0003E8                     ADPREVL         equ	1000	;# 
  9375   0003E9                     ADPREVH         equ	1001	;# 
  9376   0003EA                     ADRES           equ	1002	;# 
  9377   0003EA                     ADRESL          equ	1002	;# 
  9378   0003EB                     ADRESH          equ	1003	;# 
  9379   0003EC                     ADPCH           equ	1004	;# 
  9380   0003EE                     ADACQ           equ	1006	;# 
  9381   0003EE                     ADACQL          equ	1006	;# 
  9382   0003EF                     ADACQH          equ	1007	;# 
  9383   0003F0                     ADCAP           equ	1008	;# 
  9384   0003F1                     ADPRE           equ	1009	;# 
  9385   0003F1                     ADPREL          equ	1009	;# 
  9386   0003F2                     ADPREH          equ	1010	;# 
  9387   0003F3                     ADCON0          equ	1011	;# 
  9388   0003F4                     ADCON1          equ	1012	;# 
  9389   0003F5                     ADCON2          equ	1013	;# 
  9390   0003F6                     ADCON3          equ	1014	;# 
  9391   0003F7                     ADSTAT          equ	1015	;# 
  9392   0003F8                     ADREF           equ	1016	;# 
  9393   0003F9                     ADACT           equ	1017	;# 
  9394   0003FA                     ADCLK           equ	1018	;# 
  9395   0003FB                     ADCTX           equ	1019	;# 
  9396   0003FC                     ADCSEL1         equ	1020	;# 
  9397   0003FD                     ADCSEL2         equ	1021	;# 
  9398   0003FE                     ADCSEL3         equ	1022	;# 
  9399   0003FF                     ADCSEL4         equ	1023	;# 
  9400   000400                     ANSELA          equ	1024	;# 
  9401   000401                     WPUA            equ	1025	;# 
  9402   000402                     ODCONA          equ	1026	;# 
  9403   000403                     SLRCONA         equ	1027	;# 
  9404   000404                     INLVLA          equ	1028	;# 
  9405   000405                     IOCAP           equ	1029	;# 
  9406   000406                     IOCAN           equ	1030	;# 
  9407   000407                     IOCAF           equ	1031	;# 
  9408   000408                     ANSELB          equ	1032	;# 
  9409   000409                     WPUB            equ	1033	;# 
  9410   00040A                     ODCONB          equ	1034	;# 
  9411   00040B                     SLRCONB         equ	1035	;# 
  9412   00040C                     INLVLB          equ	1036	;# 
  9413   00040D                     IOCBP           equ	1037	;# 
  9414   00040E                     IOCBN           equ	1038	;# 
  9415   00040F                     IOCBF           equ	1039	;# 
  9416   000410                     ANSELC          equ	1040	;# 
  9417   000411                     WPUC            equ	1041	;# 
  9418   000412                     ODCONC          equ	1042	;# 
  9419   000413                     SLRCONC         equ	1043	;# 
  9420   000414                     INLVLC          equ	1044	;# 
  9421   000415                     IOCCP           equ	1045	;# 
  9422   000416                     IOCCN           equ	1046	;# 
  9423   000417                     IOCCF           equ	1047	;# 
  9424   000421                     WPUE            equ	1057	;# 
  9425   000424                     INLVLE          equ	1060	;# 
  9426   000425                     IOCEP           equ	1061	;# 
  9427   000426                     IOCEN           equ	1062	;# 
  9428   000427                     IOCEF           equ	1063	;# 
  9429   000440                     NCO1ACC         equ	1088	;# 
  9430   000440                     NCO1ACCL        equ	1088	;# 
  9431   000441                     NCO1ACCH        equ	1089	;# 
  9432   000442                     NCO1ACCU        equ	1090	;# 
  9433   000443                     NCO1INC         equ	1091	;# 
  9434   000443                     NCO1INCL        equ	1091	;# 
  9435   000444                     NCO1INCH        equ	1092	;# 
  9436   000445                     NCO1INCU        equ	1093	;# 
  9437   000446                     NCO1CON         equ	1094	;# 
  9438   000447                     NCO1CLK         equ	1095	;# 
  9439   000448                     NCO2ACC         equ	1096	;# 
  9440   000448                     NCO2ACCL        equ	1096	;# 
  9441   000449                     NCO2ACCH        equ	1097	;# 
  9442   00044A                     NCO2ACCU        equ	1098	;# 
  9443   00044B                     NCO2INC         equ	1099	;# 
  9444   00044B                     NCO2INCL        equ	1099	;# 
  9445   00044C                     NCO2INCH        equ	1100	;# 
  9446   00044D                     NCO2INCU        equ	1101	;# 
  9447   00044E                     NCO2CON         equ	1102	;# 
  9448   00044F                     NCO2CLK         equ	1103	;# 
  9449   000450                     NCO3ACC         equ	1104	;# 
  9450   000450                     NCO3ACCL        equ	1104	;# 
  9451   000451                     NCO3ACCH        equ	1105	;# 
  9452   000452                     NCO3ACCU        equ	1106	;# 
  9453   000453                     NCO3INC         equ	1107	;# 
  9454   000453                     NCO3INCL        equ	1107	;# 
  9455   000454                     NCO3INCH        equ	1108	;# 
  9456   000455                     NCO3INCU        equ	1109	;# 
  9457   000456                     NCO3CON         equ	1110	;# 
  9458   000457                     NCO3CLK         equ	1111	;# 
  9459   000458                     FSCMCON         equ	1112	;# 
  9460   000459                     IVTLOCK         equ	1113	;# 
  9461   00045A                     IVTAD           equ	1114	;# 
  9462   00045A                     IVTADL          equ	1114	;# 
  9463   00045B                     IVTADH          equ	1115	;# 
  9464   00045C                     IVTADU          equ	1116	;# 
  9465   00045D                     IVTBASE         equ	1117	;# 
  9466   00045D                     IVTBASEL        equ	1117	;# 
  9467   00045E                     IVTBASEH        equ	1118	;# 
  9468   00045F                     IVTBASEU        equ	1119	;# 
  9469   000460                     PWM1ERS         equ	1120	;# 
  9470   000461                     PWM1CLK         equ	1121	;# 
  9471   000462                     PWM1LDS         equ	1122	;# 
  9472   000463                     PWM1PR          equ	1123	;# 
  9473   000463                     PWM1PRL         equ	1123	;# 
  9474   000464                     PWM1PRH         equ	1124	;# 
  9475   000465                     PWM1CPRE        equ	1125	;# 
  9476   000466                     PWM1PIPOS       equ	1126	;# 
  9477   000467                     PWM1GIR         equ	1127	;# 
  9478   000468                     PWM1GIE         equ	1128	;# 
  9479   000469                     PWM1CON         equ	1129	;# 
  9480   00046A                     PWM1S1CFG       equ	1130	;# 
  9481   00046B                     PWM1S1P1        equ	1131	;# 
  9482   00046B                     PWM1S1P1L       equ	1131	;# 
  9483   00046C                     PWM1S1P1H       equ	1132	;# 
  9484   00046D                     PWM1S1P2        equ	1133	;# 
  9485   00046D                     PWM1S1P2L       equ	1133	;# 
  9486   00046E                     PWM1S1P2H       equ	1134	;# 
  9487   00046F                     PWM2ERS         equ	1135	;# 
  9488   000470                     PWM2CLK         equ	1136	;# 
  9489   000471                     PWM2LDS         equ	1137	;# 
  9490   000472                     PWM2PR          equ	1138	;# 
  9491   000472                     PWM2PRL         equ	1138	;# 
  9492   000473                     PWM2PRH         equ	1139	;# 
  9493   000474                     PWM2CPRE        equ	1140	;# 
  9494   000475                     PWM2PIPOS       equ	1141	;# 
  9495   000476                     PWM2GIR         equ	1142	;# 
  9496   000477                     PWM2GIE         equ	1143	;# 
  9497   000478                     PWM2CON         equ	1144	;# 
  9498   000479                     PWM2S1CFG       equ	1145	;# 
  9499   00047A                     PWM2S1P1        equ	1146	;# 
  9500   00047A                     PWM2S1P1L       equ	1146	;# 
  9501   00047B                     PWM2S1P1H       equ	1147	;# 
  9502   00047C                     PWM2S1P2        equ	1148	;# 
  9503   00047C                     PWM2S1P2L       equ	1148	;# 
  9504   00047D                     PWM2S1P2H       equ	1149	;# 
  9505   00047E                     PWM3ERS         equ	1150	;# 
  9506   00047F                     PWM3CLK         equ	1151	;# 
  9507   000480                     PWM3LDS         equ	1152	;# 
  9508   000481                     PWM3PR          equ	1153	;# 
  9509   000481                     PWM3PRL         equ	1153	;# 
  9510   000482                     PWM3PRH         equ	1154	;# 
  9511   000483                     PWM3CPRE        equ	1155	;# 
  9512   000484                     PWM3PIPOS       equ	1156	;# 
  9513   000485                     PWM3GIR         equ	1157	;# 
  9514   000486                     PWM3GIE         equ	1158	;# 
  9515   000487                     PWM3CON         equ	1159	;# 
  9516   000488                     PWM3S1CFG       equ	1160	;# 
  9517   000489                     PWM3S1P1        equ	1161	;# 
  9518   000489                     PWM3S1P1L       equ	1161	;# 
  9519   00048A                     PWM3S1P1H       equ	1162	;# 
  9520   00048B                     PWM3S1P2        equ	1163	;# 
  9521   00048B                     PWM3S1P2L       equ	1163	;# 
  9522   00048C                     PWM3S1P2H       equ	1164	;# 
  9523   00048D                     PWM4ERS         equ	1165	;# 
  9524   00048E                     PWM4CLK         equ	1166	;# 
  9525   00048F                     PWM4LDS         equ	1167	;# 
  9526   000490                     PWM4PR          equ	1168	;# 
  9527   000490                     PWM4PRL         equ	1168	;# 
  9528   000491                     PWM4PRH         equ	1169	;# 
  9529   000492                     PWM4CPRE        equ	1170	;# 
  9530   000493                     PWM4PIPOS       equ	1171	;# 
  9531   000494                     PWM4GIR         equ	1172	;# 
  9532   000495                     PWM4GIE         equ	1173	;# 
  9533   000496                     PWM4CON         equ	1174	;# 
  9534   000497                     PWM4S1CFG       equ	1175	;# 
  9535   000498                     PWM4S1P1        equ	1176	;# 
  9536   000498                     PWM4S1P1L       equ	1176	;# 
  9537   000499                     PWM4S1P1H       equ	1177	;# 
  9538   00049A                     PWM4S1P2        equ	1178	;# 
  9539   00049A                     PWM4S1P2L       equ	1178	;# 
  9540   00049B                     PWM4S1P2H       equ	1179	;# 
  9541   00049C                     PWMLOAD         equ	1180	;# 
  9542   00049D                     PWMEN           equ	1181	;# 
  9543   00049E                     PIE0            equ	1182	;# 
  9544   00049F                     PIE1            equ	1183	;# 
  9545   0004A0                     PIE2            equ	1184	;# 
  9546   0004A1                     PIE3            equ	1185	;# 
  9547   0004A2                     PIE4            equ	1186	;# 
  9548   0004A3                     PIE5            equ	1187	;# 
  9549   0004A4                     PIE6            equ	1188	;# 
  9550   0004A5                     PIE7            equ	1189	;# 
  9551   0004A6                     PIE8            equ	1190	;# 
  9552   0004A7                     PIE9            equ	1191	;# 
  9553   0004A8                     PIE10           equ	1192	;# 
  9554   0004A9                     PIE11           equ	1193	;# 
  9555   0004AA                     PIE12           equ	1194	;# 
  9556   0004AB                     PIE13           equ	1195	;# 
  9557   0004AC                     PIE14           equ	1196	;# 
  9558   0004AD                     PIE15           equ	1197	;# 
  9559   0004AE                     PIR0            equ	1198	;# 
  9560   0004AF                     PIR1            equ	1199	;# 
  9561   0004B0                     PIR2            equ	1200	;# 
  9562   0004B1                     PIR3            equ	1201	;# 
  9563   0004B2                     PIR4            equ	1202	;# 
  9564   0004B3                     PIR5            equ	1203	;# 
  9565   0004B4                     PIR6            equ	1204	;# 
  9566   0004B5                     PIR7            equ	1205	;# 
  9567   0004B6                     PIR8            equ	1206	;# 
  9568   0004B7                     PIR9            equ	1207	;# 
  9569   0004B8                     PIR10           equ	1208	;# 
  9570   0004B9                     PIR11           equ	1209	;# 
  9571   0004BA                     PIR12           equ	1210	;# 
  9572   0004BB                     PIR13           equ	1211	;# 
  9573   0004BC                     PIR14           equ	1212	;# 
  9574   0004BD                     PIR15           equ	1213	;# 
  9575   0004BE                     LATA            equ	1214	;# 
  9576   0004BF                     LATB            equ	1215	;# 
  9577   0004C0                     LATC            equ	1216	;# 
  9578   0004C6                     TRISA           equ	1222	;# 
  9579   0004C7                     TRISB           equ	1223	;# 
  9580   0004C8                     TRISC           equ	1224	;# 
  9581   0004CA                     TRISE           equ	1226	;# 
  9582   0004CE                     PORTA           equ	1230	;# 
  9583   0004CF                     PORTB           equ	1231	;# 
  9584   0004D0                     PORTC           equ	1232	;# 
  9585   0004D2                     PORTE           equ	1234	;# 
  9586   0004D6                     INTCON0         equ	1238	;# 
  9587   0004D7                     INTCON1         equ	1239	;# 
  9588   0004D8                     STATUS          equ	1240	;# 
  9589   0004D9                     FSR2            equ	1241	;# 
  9590   0004D9                     FSR2L           equ	1241	;# 
  9591   0004DA                     FSR2H           equ	1242	;# 
  9592   0004DB                     PLUSW2          equ	1243	;# 
  9593   0004DC                     PREINC2         equ	1244	;# 
  9594   0004DD                     POSTDEC2        equ	1245	;# 
  9595   0004DE                     POSTINC2        equ	1246	;# 
  9596   0004DF                     INDF2           equ	1247	;# 
  9597   0004E0                     BSR             equ	1248	;# 
  9598   0004E1                     FSR1            equ	1249	;# 
  9599   0004E1                     FSR1L           equ	1249	;# 
  9600   0004E2                     FSR1H           equ	1250	;# 
  9601   0004E3                     PLUSW1          equ	1251	;# 
  9602   0004E4                     PREINC1         equ	1252	;# 
  9603   0004E5                     POSTDEC1        equ	1253	;# 
  9604   0004E6                     POSTINC1        equ	1254	;# 
  9605   0004E7                     INDF1           equ	1255	;# 
  9606   0004E8                     WREG            equ	1256	;# 
  9607   0004E9                     FSR0            equ	1257	;# 
  9608   0004E9                     FSR0L           equ	1257	;# 
  9609   0004EA                     FSR0H           equ	1258	;# 
  9610   0004EB                     PLUSW0          equ	1259	;# 
  9611   0004EC                     PREINC0         equ	1260	;# 
  9612   0004ED                     POSTDEC0        equ	1261	;# 
  9613   0004EE                     POSTINC0        equ	1262	;# 
  9614   0004EF                     INDF0           equ	1263	;# 
  9615   0004F0                     PCON0           equ	1264	;# 
  9616   0004F1                     PCON1           equ	1265	;# 
  9617   0004F2                     CPUDOZE         equ	1266	;# 
  9618   0004F3                     PROD            equ	1267	;# 
  9619   0004F3                     PRODL           equ	1267	;# 
  9620   0004F4                     PRODH           equ	1268	;# 
  9621   0004F5                     TABLAT          equ	1269	;# 
  9622   0004F6                     TBLPTR          equ	1270	;# 
  9623   0004F6                     TBLPTRL         equ	1270	;# 
  9624   0004F7                     TBLPTRH         equ	1271	;# 
  9625   0004F8                     TBLPTRU         equ	1272	;# 
  9626   0004F9                     PCLAT           equ	1273	;# 
  9627   0004F9                     PCL             equ	1273	;# 
  9628   0004FA                     PCLATH          equ	1274	;# 
  9629   0004FB                     PCLATU          equ	1275	;# 
  9630   0004FC                     STKPTR          equ	1276	;# 
  9631   0004FD                     TOS             equ	1277	;# 
  9632   0004FD                     TOSL            equ	1277	;# 
  9633   0004FE                     TOSH            equ	1278	;# 
  9634   0004FF                     TOSU            equ	1279	;# 
  9635   000038                     BOOTREG         equ	56	;# 
  9636   000039                     CLKRCON         equ	57	;# 
  9637   00003A                     CLKRCLK         equ	58	;# 
  9638   000040                     NVMCON0         equ	64	;# 
  9639   000041                     NVMCON1         equ	65	;# 
  9640   000042                     NVMLOCK         equ	66	;# 
  9641   000043                     NVMADR          equ	67	;# 
  9642   000043                     NVMADRL         equ	67	;# 
  9643   000044                     NVMADRH         equ	68	;# 
  9644   000045                     NVMADRU         equ	69	;# 
  9645   000046                     NVMDAT          equ	70	;# 
  9646   000046                     NVMDATL         equ	70	;# 
  9647   000047                     NVMDATH         equ	71	;# 
  9648   000048                     VREGCON         equ	72	;# 
  9649   000049                     BORCON          equ	73	;# 
  9650   00004A                     HLVDCON0        equ	74	;# 
  9651   00004B                     HLVDCON1        equ	75	;# 
  9652   00004C                     ZCDCON          equ	76	;# 
  9653   000060                     PMD0            equ	96	;# 
  9654   000061                     PMD1            equ	97	;# 
  9655   000062                     PMD2            equ	98	;# 
  9656   000063                     PMD3            equ	99	;# 
  9657   000064                     PMD4            equ	100	;# 
  9658   000065                     PMD5            equ	101	;# 
  9659   000066                     PMD6            equ	102	;# 
  9660   000067                     PMD7            equ	103	;# 
  9661   000068                     PMD8            equ	104	;# 
  9662   00006A                     MD1CON0         equ	106	;# 
  9663   00006B                     MD1CON1         equ	107	;# 
  9664   00006C                     MD1SRC          equ	108	;# 
  9665   00006D                     MD1CARL         equ	109	;# 
  9666   00006E                     MD1CARH         equ	110	;# 
  9667   00006F                     CMOUT           equ	111	;# 
  9668   000070                     CM1CON0         equ	112	;# 
  9669   000071                     CM1CON1         equ	113	;# 
  9670   000072                     CM1NCH          equ	114	;# 
  9671   000073                     CM1PCH          equ	115	;# 
  9672   000074                     CM2CON0         equ	116	;# 
  9673   000075                     CM2CON1         equ	117	;# 
  9674   000076                     CM2NCH          equ	118	;# 
  9675   000077                     CM2PCH          equ	119	;# 
  9676   000078                     WDTCON0         equ	120	;# 
  9677   000079                     WDTCON1         equ	121	;# 
  9678   00007A                     WDTPSL          equ	122	;# 
  9679   00007B                     WDTPSH          equ	123	;# 
  9680   00007C                     WDTTMR          equ	124	;# 
  9681   00007D                     DAC1DAT         equ	125	;# 
  9682   00007D                     DAC1DATL        equ	125	;# 
  9683   00007F                     DAC1CON         equ	127	;# 
  9684   000080                     SPI1RXB         equ	128	;# 
  9685   000081                     SPI1TXB         equ	129	;# 
  9686   000082                     SPI1TCNT        equ	130	;# 
  9687   000082                     SPI1TCNTL       equ	130	;# 
  9688   000083                     SPI1TCNTH       equ	131	;# 
  9689   000084                     SPI1CON0        equ	132	;# 
  9690   000085                     SPI1CON1        equ	133	;# 
  9691   000086                     SPI1CON2        equ	134	;# 
  9692   000087                     SPI1STATUS      equ	135	;# 
  9693   000088                     SPI1TWIDTH      equ	136	;# 
  9694   000089                     SPI1BAUD        equ	137	;# 
  9695   00008A                     SPI1INTF        equ	138	;# 
  9696   00008B                     SPI1INTE        equ	139	;# 
  9697   00008C                     SPI1CLK         equ	140	;# 
  9698   00008D                     SPI2RXB         equ	141	;# 
  9699   00008E                     SPI2TXB         equ	142	;# 
  9700   00008F                     SPI2TCNT        equ	143	;# 
  9701   00008F                     SPI2TCNTL       equ	143	;# 
  9702   000090                     SPI2TCNTH       equ	144	;# 
  9703   000091                     SPI2CON0        equ	145	;# 
  9704   000092                     SPI2CON1        equ	146	;# 
  9705   000093                     SPI2CON2        equ	147	;# 
  9706   000094                     SPI2STATUS      equ	148	;# 
  9707   000095                     SPI2TWIDTH      equ	149	;# 
  9708   000096                     SPI2BAUD        equ	150	;# 
  9709   000097                     SPI2INTF        equ	151	;# 
  9710   000098                     SPI2INTE        equ	152	;# 
  9711   000099                     SPI2CLK         equ	153	;# 
  9712   0000AC                     ACTCON          equ	172	;# 
  9713   0000AD                     OSCCON1         equ	173	;# 
  9714   0000AE                     OSCCON2         equ	174	;# 
  9715   0000AF                     OSCCON3         equ	175	;# 
  9716   0000B0                     OSCTUNE         equ	176	;# 
  9717   0000B1                     OSCFRQ          equ	177	;# 
  9718   0000B1                     OSCFREQ         equ	177	;# 
  9719   0000B2                     OSCSTAT         equ	178	;# 
  9720   0000B2                     OSCSTAT1        equ	178	;# 
  9721   0000B3                     OSCEN           equ	179	;# 
  9722   0000B4                     PRLOCK          equ	180	;# 
  9723   0000B5                     SCANPR          equ	181	;# 
  9724   0000B6                     DMA1PR          equ	182	;# 
  9725   0000B7                     DMA2PR          equ	183	;# 
  9726   0000B8                     DMA3PR          equ	184	;# 
  9727   0000B9                     DMA4PR          equ	185	;# 
  9728   0000BA                     DMA5PR          equ	186	;# 
  9729   0000BB                     DMA6PR          equ	187	;# 
  9730   0000BC                     DMA7PR          equ	188	;# 
  9731   0000BD                     DMA8PR          equ	189	;# 
  9732   0000BE                     MAINPR          equ	190	;# 
  9733   0000BF                     ISRPR           equ	191	;# 
  9734   0000D4                     CLCDATA         equ	212	;# 
  9735   0000D5                     CLCSELECT       equ	213	;# 
  9736   0000D6                     CLCnCON         equ	214	;# 
  9737   0000D7                     CLCnPOL         equ	215	;# 
  9738   0000D8                     CLCnSEL0        equ	216	;# 
  9739   0000D9                     CLCnSEL1        equ	217	;# 
  9740   0000DA                     CLCnSEL2        equ	218	;# 
  9741   0000DB                     CLCnSEL3        equ	219	;# 
  9742   0000DC                     CLCnGLS0        equ	220	;# 
  9743   0000DD                     CLCnGLS1        equ	221	;# 
  9744   0000DE                     CLCnGLS2        equ	222	;# 
  9745   0000DF                     CLCnGLS3        equ	223	;# 
  9746   0000E8                     DMASELECT       equ	232	;# 
  9747   0000E9                     DMAnBUF         equ	233	;# 
  9748   0000EA                     DMAnDCNT        equ	234	;# 
  9749   0000EA                     DMAnDCNTL       equ	234	;# 
  9750   0000EB                     DMAnDCNTH       equ	235	;# 
  9751   0000EC                     DMAnDPTR        equ	236	;# 
  9752   0000EC                     DMAnDPTRL       equ	236	;# 
  9753   0000ED                     DMAnDPTRH       equ	237	;# 
  9754   0000EE                     DMAnDSZ         equ	238	;# 
  9755   0000EE                     DMAnDSZL        equ	238	;# 
  9756   0000EF                     DMAnDSZH        equ	239	;# 
  9757   0000F0                     DMAnDSA         equ	240	;# 
  9758   0000F0                     DMAnDSAL        equ	240	;# 
  9759   0000F1                     DMAnDSAH        equ	241	;# 
  9760   0000F2                     DMAnSCNT        equ	242	;# 
  9761   0000F2                     DMAnSCNTL       equ	242	;# 
  9762   0000F3                     DMAnSCNTH       equ	243	;# 
  9763   0000F4                     DMAnSPTR        equ	244	;# 
  9764   0000F4                     DMAnSPTRL       equ	244	;# 
  9765   0000F5                     DMAnSPTRH       equ	245	;# 
  9766   0000F6                     DMAnSPTRU       equ	246	;# 
  9767   0000F7                     DMAnSSZ         equ	247	;# 
  9768   0000F7                     DMAnSSZL        equ	247	;# 
  9769   0000F8                     DMAnSSZH        equ	248	;# 
  9770   0000F9                     DMAnSSA         equ	249	;# 
  9771   0000F9                     DMAnSSAL        equ	249	;# 
  9772   0000FA                     DMAnSSAH        equ	250	;# 
  9773   0000FB                     DMAnSSAU        equ	251	;# 
  9774   0000FC                     DMAnCON0        equ	252	;# 
  9775   0000FD                     DMAnCON1        equ	253	;# 
  9776   0000FE                     DMAnAIRQ        equ	254	;# 
  9777   0000FF                     DMAnSIRQ        equ	255	;# 
  9778   000100                     C1CONL          equ	256	;# 
  9779   000101                     C1CONH          equ	257	;# 
  9780   000102                     C1CONU          equ	258	;# 
  9781   000103                     C1CONT          equ	259	;# 
  9782   000104                     C1NBTCFGL       equ	260	;# 
  9783   000105                     C1NBTCFGH       equ	261	;# 
  9784   000106                     C1NBTCFGU       equ	262	;# 
  9785   000107                     C1NBTCFGT       equ	263	;# 
  9786   000108                     C1DBTCFGL       equ	264	;# 
  9787   000109                     C1DBTCFGH       equ	265	;# 
  9788   00010A                     C1DBTCFGU       equ	266	;# 
  9789   00010B                     C1DBTCFGT       equ	267	;# 
  9790   00010C                     C1TDCL          equ	268	;# 
  9791   00010D                     C1TDCH          equ	269	;# 
  9792   00010E                     C1TDCU          equ	270	;# 
  9793   000110                     C1TBC           equ	272	;# 
  9794   000110                     C1TBCL          equ	272	;# 
  9795   000111                     C1TBCH          equ	273	;# 
  9796   000112                     C1TBCU          equ	274	;# 
  9797   000113                     C1TBCT          equ	275	;# 
  9798   000114                     C1TSCONL        equ	276	;# 
  9799   000115                     C1TSCONH        equ	277	;# 
  9800   000116                     C1TSCONU        equ	278	;# 
  9801   000117                     C1TSCONT        equ	279	;# 
  9802   000118                     C1VECL          equ	280	;# 
  9803   000119                     C1VECH          equ	281	;# 
  9804   00011A                     C1VECU          equ	282	;# 
  9805   00011B                     C1VECT          equ	283	;# 
  9806   00011C                     C1INTL          equ	284	;# 
  9807   00011D                     C1INTH          equ	285	;# 
  9808   00011E                     C1INTU          equ	286	;# 
  9809   00011F                     C1INTT          equ	287	;# 
  9810   000120                     C1RXIF          equ	288	;# 
  9811   000120                     C1RXIFL         equ	288	;# 
  9812   000121                     C1RXIFH         equ	289	;# 
  9813   000122                     C1RXIFU         equ	290	;# 
  9814   000123                     C1RXIFT         equ	291	;# 
  9815   000124                     C1TXIF          equ	292	;# 
  9816   000124                     C1TXIFL         equ	292	;# 
  9817   000125                     C1TXIFH         equ	293	;# 
  9818   000126                     C1TXIFU         equ	294	;# 
  9819   000127                     C1TXIFT         equ	295	;# 
  9820   000128                     C1RXOVIF        equ	296	;# 
  9821   000128                     C1RXOVIFL       equ	296	;# 
  9822   000129                     C1RXOVIFH       equ	297	;# 
  9823   00012A                     C1RXOVIFU       equ	298	;# 
  9824   00012B                     C1RXOVIFT       equ	299	;# 
  9825   00012C                     C1TXATIF        equ	300	;# 
  9826   00012C                     C1TXATIFL       equ	300	;# 
  9827   00012D                     C1TXATIFH       equ	301	;# 
  9828   00012E                     C1TXATIFU       equ	302	;# 
  9829   00012F                     C1TXATIFT       equ	303	;# 
  9830   000130                     C1TXREQ         equ	304	;# 
  9831   000130                     C1TXREQL        equ	304	;# 
  9832   000131                     C1TXREQH        equ	305	;# 
  9833   000132                     C1TXREQU        equ	306	;# 
  9834   000133                     C1TXREQT        equ	307	;# 
  9835   000134                     C1TRECL         equ	308	;# 
  9836   000135                     C1TRECH         equ	309	;# 
  9837   000136                     C1TRECU         equ	310	;# 
  9838   000137                     C1TRECT         equ	311	;# 
  9839   000138                     C1BDIAG0L       equ	312	;# 
  9840   000139                     C1BDIAG0H       equ	313	;# 
  9841   00013C                     C1BDIAG1L       equ	316	;# 
  9842   00013D                     C1BDIAG1H       equ	317	;# 
  9843   00013E                     C1BDIAG1U       equ	318	;# 
  9844   00013F                     C1BDIAG1T       equ	319	;# 
  9845   000140                     C1TEFCONL       equ	320	;# 
  9846   000141                     C1TEFCONH       equ	321	;# 
  9847   000142                     C1TEFCONU       equ	322	;# 
  9848   000143                     C1TEFCONT       equ	323	;# 
  9849   000144                     C1TEFSTAL       equ	324	;# 
  9850   000145                     C1TEFSTAH       equ	325	;# 
  9851   000146                     C1TEFSTAU       equ	326	;# 
  9852   000147                     C1TEFSTAT       equ	327	;# 
  9853   000148                     C1TEFUA         equ	328	;# 
  9854   000148                     C1TEFUAL        equ	328	;# 
  9855   000149                     C1TEFUAH        equ	329	;# 
  9856   00014A                     C1TEFUAU        equ	330	;# 
  9857   00014B                     C1TEFUAT        equ	331	;# 
  9858   00014C                     C1FIFOBA        equ	332	;# 
  9859   00014C                     C1FIFOBAL       equ	332	;# 
  9860   00014D                     C1FIFOBAH       equ	333	;# 
  9861   00014E                     C1FIFOBAU       equ	334	;# 
  9862   00014F                     C1FIFOBAT       equ	335	;# 
  9863   000150                     C1TXQCONL       equ	336	;# 
  9864   000151                     C1TXQCONH       equ	337	;# 
  9865   000152                     C1TXQCONU       equ	338	;# 
  9866   000153                     C1TXQCONT       equ	339	;# 
  9867   000154                     C1TXQSTAL       equ	340	;# 
  9868   000155                     C1TXQSTAH       equ	341	;# 
  9869   000156                     C1TXQSTAU       equ	342	;# 
  9870   000157                     C1TXQSTAT       equ	343	;# 
  9871   000158                     C1TXQUA         equ	344	;# 
  9872   000158                     C1TXQUAL        equ	344	;# 
  9873   000159                     C1TXQUAH        equ	345	;# 
  9874   00015A                     C1TXQUAU        equ	346	;# 
  9875   00015B                     C1TXQUAT        equ	347	;# 
  9876   00015C                     C1FIFOCON1      equ	348	;# 
  9877   00015C                     C1FIFOCON1L     equ	348	;# 
  9878   00015D                     C1FIFOCON1H     equ	349	;# 
  9879   00015E                     C1FIFOCON1U     equ	350	;# 
  9880   00015F                     C1FIFOCON1T     equ	351	;# 
  9881   000160                     C1FIFOSTA1      equ	352	;# 
  9882   000160                     C1FIFOSTA1L     equ	352	;# 
  9883   000161                     C1FIFOSTA1H     equ	353	;# 
  9884   000162                     C1FIFOSTA1U     equ	354	;# 
  9885   000163                     C1FIFOSTA1T     equ	355	;# 
  9886   000164                     C1FIFOUA1       equ	356	;# 
  9887   000164                     C1FIFOUA1L      equ	356	;# 
  9888   000165                     C1FIFOUA1H      equ	357	;# 
  9889   000166                     C1FIFOUA1U      equ	358	;# 
  9890   000167                     C1FIFOUA1T      equ	359	;# 
  9891   000168                     C1FIFOCON2      equ	360	;# 
  9892   000168                     C1FIFOCON2L     equ	360	;# 
  9893   000169                     C1FIFOCON2H     equ	361	;# 
  9894   00016A                     C1FIFOCON2U     equ	362	;# 
  9895   00016B                     C1FIFOCON2T     equ	363	;# 
  9896   00016C                     C1FIFOSTA2      equ	364	;# 
  9897   00016C                     C1FIFOSTA2L     equ	364	;# 
  9898   00016D                     C1FIFOSTA2H     equ	365	;# 
  9899   00016E                     C1FIFOSTA2U     equ	366	;# 
  9900   00016F                     C1FIFOSTA2T     equ	367	;# 
  9901   000170                     C1FIFOUA2       equ	368	;# 
  9902   000170                     C1FIFOUA2L      equ	368	;# 
  9903   000171                     C1FIFOUA2H      equ	369	;# 
  9904   000172                     C1FIFOUA2U      equ	370	;# 
  9905   000173                     C1FIFOUA2T      equ	371	;# 
  9906   000174                     C1FIFOCON3      equ	372	;# 
  9907   000174                     C1FIFOCON3L     equ	372	;# 
  9908   000175                     C1FIFOCON3H     equ	373	;# 
  9909   000176                     C1FIFOCON3U     equ	374	;# 
  9910   000177                     C1FIFOCON3T     equ	375	;# 
  9911   000178                     C1FIFOSTA3      equ	376	;# 
  9912   000178                     C1FIFOSTA3L     equ	376	;# 
  9913   000179                     C1FIFOSTA3H     equ	377	;# 
  9914   00017A                     C1FIFOSTA3U     equ	378	;# 
  9915   00017B                     C1FIFOSTA3T     equ	379	;# 
  9916   00017C                     C1FIFOUA3       equ	380	;# 
  9917   00017C                     C1FIFOUA3L      equ	380	;# 
  9918   00017D                     C1FIFOUA3H      equ	381	;# 
  9919   00017E                     C1FIFOUA3U      equ	382	;# 
  9920   00017F                     C1FIFOUA3T      equ	383	;# 
  9921   000180                     C1FLTCON0L      equ	384	;# 
  9922   000181                     C1FLTCON0H      equ	385	;# 
  9923   000182                     C1FLTCON0U      equ	386	;# 
  9924   000183                     C1FLTCON0T      equ	387	;# 
  9925   000184                     C1FLTCON1L      equ	388	;# 
  9926   000185                     C1FLTCON1H      equ	389	;# 
  9927   000186                     C1FLTCON1U      equ	390	;# 
  9928   000187                     C1FLTCON1T      equ	391	;# 
  9929   000188                     C1FLTCON2L      equ	392	;# 
  9930   000189                     C1FLTCON2H      equ	393	;# 
  9931   00018A                     C1FLTCON2U      equ	394	;# 
  9932   00018B                     C1FLTCON2T      equ	395	;# 
  9933   00018C                     C1FLTOBJ0       equ	396	;# 
  9934   00018C                     C1FLTOBJ0L      equ	396	;# 
  9935   00018D                     C1FLTOBJ0H      equ	397	;# 
  9936   00018E                     C1FLTOBJ0U      equ	398	;# 
  9937   00018F                     C1FLTOBJ0T      equ	399	;# 
  9938   000190                     C1MASK0         equ	400	;# 
  9939   000190                     C1MASK0L        equ	400	;# 
  9940   000191                     C1MASK0H        equ	401	;# 
  9941   000192                     C1MASK0U        equ	402	;# 
  9942   000193                     C1MASK0T        equ	403	;# 
  9943   000194                     C1FLTOBJ1       equ	404	;# 
  9944   000194                     C1FLTOBJ1L      equ	404	;# 
  9945   000195                     C1FLTOBJ1H      equ	405	;# 
  9946   000196                     C1FLTOBJ1U      equ	406	;# 
  9947   000197                     C1FLTOBJ1T      equ	407	;# 
  9948   000198                     C1MASK1         equ	408	;# 
  9949   000198                     C1MASK1L        equ	408	;# 
  9950   000199                     C1MASK1H        equ	409	;# 
  9951   00019A                     C1MASK1U        equ	410	;# 
  9952   00019B                     C1MASK1T        equ	411	;# 
  9953   00019C                     C1FLTOBJ2       equ	412	;# 
  9954   00019C                     C1FLTOBJ2L      equ	412	;# 
  9955   00019D                     C1FLTOBJ2H      equ	413	;# 
  9956   00019E                     C1FLTOBJ2U      equ	414	;# 
  9957   00019F                     C1FLTOBJ2T      equ	415	;# 
  9958   0001A0                     C1MASK2         equ	416	;# 
  9959   0001A0                     C1MASK2L        equ	416	;# 
  9960   0001A1                     C1MASK2H        equ	417	;# 
  9961   0001A2                     C1MASK2U        equ	418	;# 
  9962   0001A3                     C1MASK2T        equ	419	;# 
  9963   0001A4                     C1FLTOBJ3       equ	420	;# 
  9964   0001A4                     C1FLTOBJ3L      equ	420	;# 
  9965   0001A5                     C1FLTOBJ3H      equ	421	;# 
  9966   0001A6                     C1FLTOBJ3U      equ	422	;# 
  9967   0001A7                     C1FLTOBJ3T      equ	423	;# 
  9968   0001A8                     C1MASK3         equ	424	;# 
  9969   0001A8                     C1MASK3L        equ	424	;# 
  9970   0001A9                     C1MASK3H        equ	425	;# 
  9971   0001AA                     C1MASK3U        equ	426	;# 
  9972   0001AB                     C1MASK3T        equ	427	;# 
  9973   0001AC                     C1FLTOBJ4       equ	428	;# 
  9974   0001AC                     C1FLTOBJ4L      equ	428	;# 
  9975   0001AD                     C1FLTOBJ4H      equ	429	;# 
  9976   0001AE                     C1FLTOBJ4U      equ	430	;# 
  9977   0001AF                     C1FLTOBJ4T      equ	431	;# 
  9978   0001B0                     C1MASK4         equ	432	;# 
  9979   0001B0                     C1MASK4L        equ	432	;# 
  9980   0001B1                     C1MASK4H        equ	433	;# 
  9981   0001B2                     C1MASK4U        equ	434	;# 
  9982   0001B3                     C1MASK4T        equ	435	;# 
  9983   0001B4                     C1FLTOBJ5       equ	436	;# 
  9984   0001B4                     C1FLTOBJ5L      equ	436	;# 
  9985   0001B5                     C1FLTOBJ5H      equ	437	;# 
  9986   0001B6                     C1FLTOBJ5U      equ	438	;# 
  9987   0001B7                     C1FLTOBJ5T      equ	439	;# 
  9988   0001B8                     C1MASK5         equ	440	;# 
  9989   0001B8                     C1MASK5L        equ	440	;# 
  9990   0001B9                     C1MASK5H        equ	441	;# 
  9991   0001BA                     C1MASK5U        equ	442	;# 
  9992   0001BB                     C1MASK5T        equ	443	;# 
  9993   0001BC                     C1FLTOBJ6       equ	444	;# 
  9994   0001BC                     C1FLTOBJ6L      equ	444	;# 
  9995   0001BD                     C1FLTOBJ6H      equ	445	;# 
  9996   0001BE                     C1FLTOBJ6U      equ	446	;# 
  9997   0001BF                     C1FLTOBJ6T      equ	447	;# 
  9998   0001C0                     C1MASK6         equ	448	;# 
  9999   0001C0                     C1MASK6L        equ	448	;# 
 10000   0001C1                     C1MASK6H        equ	449	;# 
 10001   0001C2                     C1MASK6U        equ	450	;# 
 10002   0001C3                     C1MASK6T        equ	451	;# 
 10003   0001C4                     C1FLTOBJ7       equ	452	;# 
 10004   0001C4                     C1FLTOBJ7L      equ	452	;# 
 10005   0001C5                     C1FLTOBJ7H      equ	453	;# 
 10006   0001C6                     C1FLTOBJ7U      equ	454	;# 
 10007   0001C7                     C1FLTOBJ7T      equ	455	;# 
 10008   0001C8                     C1MASK7         equ	456	;# 
 10009   0001C8                     C1MASK7L        equ	456	;# 
 10010   0001C9                     C1MASK7H        equ	457	;# 
 10011   0001CA                     C1MASK7U        equ	458	;# 
 10012   0001CB                     C1MASK7T        equ	459	;# 
 10013   0001CC                     C1FLTOBJ8       equ	460	;# 
 10014   0001CC                     C1FLTOBJ8L      equ	460	;# 
 10015   0001CD                     C1FLTOBJ8H      equ	461	;# 
 10016   0001CE                     C1FLTOBJ8U      equ	462	;# 
 10017   0001CF                     C1FLTOBJ8T      equ	463	;# 
 10018   0001D0                     C1MASK8         equ	464	;# 
 10019   0001D0                     C1MASK8L        equ	464	;# 
 10020   0001D1                     C1MASK8H        equ	465	;# 
 10021   0001D2                     C1MASK8U        equ	466	;# 
 10022   0001D3                     C1MASK8T        equ	467	;# 
 10023   0001D4                     C1FLTOBJ9       equ	468	;# 
 10024   0001D4                     C1FLTOBJ9L      equ	468	;# 
 10025   0001D5                     C1FLTOBJ9H      equ	469	;# 
 10026   0001D6                     C1FLTOBJ9U      equ	470	;# 
 10027   0001D7                     C1FLTOBJ9T      equ	471	;# 
 10028   0001D8                     C1MASK9         equ	472	;# 
 10029   0001D8                     C1MASK9L        equ	472	;# 
 10030   0001D9                     C1MASK9H        equ	473	;# 
 10031   0001DA                     C1MASK9U        equ	474	;# 
 10032   0001DB                     C1MASK9T        equ	475	;# 
 10033   0001DC                     C1FLTOBJ10      equ	476	;# 
 10034   0001DC                     C1FLTOBJ10L     equ	476	;# 
 10035   0001DD                     C1FLTOBJ10H     equ	477	;# 
 10036   0001DE                     C1FLTOBJ10U     equ	478	;# 
 10037   0001DF                     C1FLTOBJ10T     equ	479	;# 
 10038   0001E0                     C1MASK10        equ	480	;# 
 10039   0001E0                     C1MASK10L       equ	480	;# 
 10040   0001E1                     C1MASK10H       equ	481	;# 
 10041   0001E2                     C1MASK10U       equ	482	;# 
 10042   0001E3                     C1MASK10T       equ	483	;# 
 10043   0001E4                     C1FLTOBJ11      equ	484	;# 
 10044   0001E4                     C1FLTOBJ11L     equ	484	;# 
 10045   0001E5                     C1FLTOBJ11H     equ	485	;# 
 10046   0001E6                     C1FLTOBJ11U     equ	486	;# 
 10047   0001E7                     C1FLTOBJ11T     equ	487	;# 
 10048   0001E8                     C1MASK11        equ	488	;# 
 10049   0001E8                     C1MASK11L       equ	488	;# 
 10050   0001E9                     C1MASK11H       equ	489	;# 
 10051   0001EA                     C1MASK11U       equ	490	;# 
 10052   0001EB                     C1MASK11T       equ	491	;# 
 10053   000200                     PPSLOCK         equ	512	;# 
 10054   000201                     RA0PPS          equ	513	;# 
 10055   000202                     RA1PPS          equ	514	;# 
 10056   000203                     RA2PPS          equ	515	;# 
 10057   000204                     RA3PPS          equ	516	;# 
 10058   000205                     RA4PPS          equ	517	;# 
 10059   000206                     RA5PPS          equ	518	;# 
 10060   000207                     RA6PPS          equ	519	;# 
 10061   000208                     RA7PPS          equ	520	;# 
 10062   000209                     RB0PPS          equ	521	;# 
 10063   00020A                     RB1PPS          equ	522	;# 
 10064   00020B                     RB2PPS          equ	523	;# 
 10065   00020C                     RB3PPS          equ	524	;# 
 10066   00020D                     RB4PPS          equ	525	;# 
 10067   00020E                     RB5PPS          equ	526	;# 
 10068   00020F                     RB6PPS          equ	527	;# 
 10069   000210                     RB7PPS          equ	528	;# 
 10070   000211                     RC0PPS          equ	529	;# 
 10071   000212                     RC1PPS          equ	530	;# 
 10072   000213                     RC2PPS          equ	531	;# 
 10073   000214                     RC3PPS          equ	532	;# 
 10074   000215                     RC4PPS          equ	533	;# 
 10075   000216                     RC5PPS          equ	534	;# 
 10076   000217                     RC6PPS          equ	535	;# 
 10077   000218                     RC7PPS          equ	536	;# 
 10078   00023D                     CANRXPPS        equ	573	;# 
 10079   00023E                     INT0PPS         equ	574	;# 
 10080   00023F                     INT1PPS         equ	575	;# 
 10081   000240                     INT2PPS         equ	576	;# 
 10082   000241                     T0CKIPPS        equ	577	;# 
 10083   000242                     T1CKIPPS        equ	578	;# 
 10084   000243                     T1GPPS          equ	579	;# 
 10085   000244                     T3CKIPPS        equ	580	;# 
 10086   000245                     T3GPPS          equ	581	;# 
 10087   000246                     T5CKIPPS        equ	582	;# 
 10088   000247                     T5GPPS          equ	583	;# 
 10089   000248                     T2INPPS         equ	584	;# 
 10090   000249                     T4INPPS         equ	585	;# 
 10091   00024A                     T6INPPS         equ	586	;# 
 10092   00024B                     TUIN0PPS        equ	587	;# 
 10093   00024C                     TUIN1PPS        equ	588	;# 
 10094   00024F                     CCP1PPS         equ	591	;# 
 10095   000250                     CCP2PPS         equ	592	;# 
 10096   000251                     CCP3PPS         equ	593	;# 
 10097   000253                     PWM1ERSPPS      equ	595	;# 
 10098   000254                     PWM2ERSPPS      equ	596	;# 
 10099   000255                     PWM3ERSPPS      equ	597	;# 
 10100   000256                     PWM4ERSPPS      equ	598	;# 
 10101   000257                     PWMIN0PPS       equ	599	;# 
 10102   000258                     PWMIN1PPS       equ	600	;# 
 10103   000259                     SMT1WINPPS      equ	601	;# 
 10104   00025A                     SMT1SIGPPS      equ	602	;# 
 10105   00025B                     CWG1PPS         equ	603	;# 
 10106   00025B                     CWG1INPPS       equ	603	;# 
 10107   00025C                     CWG2PPS         equ	604	;# 
 10108   00025C                     CWG2INPPS       equ	604	;# 
 10109   00025D                     CWG3PPS         equ	605	;# 
 10110   00025D                     CWG3INPPS       equ	605	;# 
 10111   00025E                     MD1CARLPPS      equ	606	;# 
 10112   00025E                     MDCARLPPS       equ	606	;# 
 10113   00025F                     MD1CARHPPS      equ	607	;# 
 10114   00025F                     MDCARHPPS       equ	607	;# 
 10115   000260                     MD1SRCPPS       equ	608	;# 
 10116   000260                     MDSRCPPS        equ	608	;# 
 10117   000261                     CLCIN0PPS       equ	609	;# 
 10118   000262                     CLCIN1PPS       equ	610	;# 
 10119   000263                     CLCIN2PPS       equ	611	;# 
 10120   000264                     CLCIN3PPS       equ	612	;# 
 10121   000265                     CLCIN4PPS       equ	613	;# 
 10122   000266                     CLCIN5PPS       equ	614	;# 
 10123   000267                     CLCIN6PPS       equ	615	;# 
 10124   000268                     CLCIN7PPS       equ	616	;# 
 10125   000269                     ADACTPPS        equ	617	;# 
 10126   00026A                     SPI1SCKPPS      equ	618	;# 
 10127   00026B                     SPI1SDIPPS      equ	619	;# 
 10128   00026C                     SPI1SSPPS       equ	620	;# 
 10129   00026D                     SPI2SCKPPS      equ	621	;# 
 10130   00026E                     SPI2SDIPPS      equ	622	;# 
 10131   00026F                     SPI2SSPPS       equ	623	;# 
 10132   000270                     I2C1SDAPPS      equ	624	;# 
 10133   000271                     I2C1SCLPPS      equ	625	;# 
 10134   000272                     U1RXPPS         equ	626	;# 
 10135   000273                     U1CTSPPS        equ	627	;# 
 10136   000274                     U2RXPPS         equ	628	;# 
 10137   000275                     U2CTSPPS        equ	629	;# 
 10138   000276                     U3RXPPS         equ	630	;# 
 10139   000277                     U3CTSPPS        equ	631	;# 
 10140   000278                     U4RXPPS         equ	632	;# 
 10141   000279                     U4CTSPPS        equ	633	;# 
 10142   00027A                     U5RXPPS         equ	634	;# 
 10143   00027B                     U5CTSPPS        equ	635	;# 
 10144   000286                     RC4I2C          equ	646	;# 
 10145   000287                     RC3I2C          equ	647	;# 
 10146   000288                     RB2I2C          equ	648	;# 
 10147   000289                     RB1I2C          equ	649	;# 
 10148   00028A                     I2C1RXB         equ	650	;# 
 10149   00028B                     I2C1TXB         equ	651	;# 
 10150   00028C                     I2C1CNTL        equ	652	;# 
 10151   00028D                     I2C1CNTH        equ	653	;# 
 10152   00028E                     I2C1ADB0        equ	654	;# 
 10153   00028F                     I2C1ADB1        equ	655	;# 
 10154   000290                     I2C1ADR0        equ	656	;# 
 10155   000291                     I2C1ADR1        equ	657	;# 
 10156   000292                     I2C1ADR2        equ	658	;# 
 10157   000293                     I2C1ADR3        equ	659	;# 
 10158   000294                     I2C1CON0        equ	660	;# 
 10159   000295                     I2C1CON1        equ	661	;# 
 10160   000296                     I2C1CON2        equ	662	;# 
 10161   000297                     I2C1ERR         equ	663	;# 
 10162   000298                     I2C1STAT0       equ	664	;# 
 10163   000299                     I2C1STAT1       equ	665	;# 
 10164   00029A                     I2C1PIR         equ	666	;# 
 10165   00029B                     I2C1PIE         equ	667	;# 
 10166   00029C                     I2C1BTO         equ	668	;# 
 10167   00029D                     I2C1BAUD        equ	669	;# 
 10168   00029E                     I2C1CLK         equ	670	;# 
 10169   00029F                     I2C1BTOC        equ	671	;# 
 10170   0002A1                     U1RXB           equ	673	;# 
 10171   0002A1                     U1RXBL          equ	673	;# 
 10172   0002A2                     U1RXCHK         equ	674	;# 
 10173   0002A3                     U1TXB           equ	675	;# 
 10174   0002A3                     U1TXBL          equ	675	;# 
 10175   0002A4                     U1TXCHK         equ	676	;# 
 10176   0002A5                     U1P1            equ	677	;# 
 10177   0002A5                     U1P1L           equ	677	;# 
 10178   0002A6                     U1P1H           equ	678	;# 
 10179   0002A7                     U1P2            equ	679	;# 
 10180   0002A7                     U1P2L           equ	679	;# 
 10181   0002A8                     U1P2H           equ	680	;# 
 10182   0002A9                     U1P3            equ	681	;# 
 10183   0002A9                     U1P3L           equ	681	;# 
 10184   0002AA                     U1P3H           equ	682	;# 
 10185   0002AB                     U1CON0          equ	683	;# 
 10186   0002AC                     U1CON1          equ	684	;# 
 10187   0002AD                     U1CON2          equ	685	;# 
 10188   0002AE                     U1BRG           equ	686	;# 
 10189   0002AE                     U1BRGL          equ	686	;# 
 10190   0002AF                     U1BRGH          equ	687	;# 
 10191   0002B0                     U1FIFO          equ	688	;# 
 10192   0002B1                     U1UIR           equ	689	;# 
 10193   0002B2                     U1ERRIR         equ	690	;# 
 10194   0002B3                     U1ERRIE         equ	691	;# 
 10195   0002B4                     U2RXB           equ	692	;# 
 10196   0002B4                     U2RXBL          equ	692	;# 
 10197   0002B5                     U2RXCHK         equ	693	;# 
 10198   0002B6                     U2TXB           equ	694	;# 
 10199   0002B6                     U2TXBL          equ	694	;# 
 10200   0002B7                     U2TXCHK         equ	695	;# 
 10201   0002B8                     U2P1            equ	696	;# 
 10202   0002B8                     U2P1L           equ	696	;# 
 10203   0002B9                     U2P1H           equ	697	;# 
 10204   0002BA                     U2P2            equ	698	;# 
 10205   0002BA                     U2P2L           equ	698	;# 
 10206   0002BB                     U2P2H           equ	699	;# 
 10207   0002BC                     U2P3            equ	700	;# 
 10208   0002BC                     U2P3L           equ	700	;# 
 10209   0002BD                     U2P3H           equ	701	;# 
 10210   0002BE                     U2CON0          equ	702	;# 
 10211   0002BF                     U2CON1          equ	703	;# 
 10212   0002C0                     U2CON2          equ	704	;# 
 10213   0002C1                     U2BRG           equ	705	;# 
 10214   0002C1                     U2BRGL          equ	705	;# 
 10215   0002C2                     U2BRGH          equ	706	;# 
 10216   0002C3                     U2FIFO          equ	707	;# 
 10217   0002C4                     U2UIR           equ	708	;# 
 10218   0002C5                     U2ERRIR         equ	709	;# 
 10219   0002C6                     U2ERRIE         equ	710	;# 
 10220   0002C7                     U3RXB           equ	711	;# 
 10221   0002C7                     U3RXBL          equ	711	;# 
 10222   0002C9                     U3TXB           equ	713	;# 
 10223   0002C9                     U3TXBL          equ	713	;# 
 10224   0002CB                     U3P1            equ	715	;# 
 10225   0002CB                     U3P1L           equ	715	;# 
 10226   0002CD                     U3P2            equ	717	;# 
 10227   0002CD                     U3P2L           equ	717	;# 
 10228   0002CF                     U3P3            equ	719	;# 
 10229   0002CF                     U3P3L           equ	719	;# 
 10230   0002D1                     U3CON0          equ	721	;# 
 10231   0002D2                     U3CON1          equ	722	;# 
 10232   0002D3                     U3CON2          equ	723	;# 
 10233   0002D4                     U3BRG           equ	724	;# 
 10234   0002D4                     U3BRGL          equ	724	;# 
 10235   0002D5                     U3BRGH          equ	725	;# 
 10236   0002D6                     U3FIFO          equ	726	;# 
 10237   0002D7                     U3UIR           equ	727	;# 
 10238   0002D8                     U3ERRIR         equ	728	;# 
 10239   0002D9                     U3ERRIE         equ	729	;# 
 10240   0002DA                     U4RXB           equ	730	;# 
 10241   0002DA                     U4RXBL          equ	730	;# 
 10242   0002DC                     U4TXB           equ	732	;# 
 10243   0002DC                     U4TXBL          equ	732	;# 
 10244   0002DE                     U4P1            equ	734	;# 
 10245   0002DE                     U4P1L           equ	734	;# 
 10246   0002E0                     U4P2            equ	736	;# 
 10247   0002E0                     U4P2L           equ	736	;# 
 10248   0002E2                     U4P3            equ	738	;# 
 10249   0002E2                     U4P3L           equ	738	;# 
 10250   0002E4                     U4CON0          equ	740	;# 
 10251   0002E5                     U4CON1          equ	741	;# 
 10252   0002E6                     U4CON2          equ	742	;# 
 10253   0002E7                     U4BRG           equ	743	;# 
 10254   0002E7                     U4BRGL          equ	743	;# 
 10255   0002E8                     U4BRGH          equ	744	;# 
 10256   0002E9                     U4FIFO          equ	745	;# 
 10257   0002EA                     U4UIR           equ	746	;# 
 10258   0002EB                     U4ERRIR         equ	747	;# 
 10259   0002EC                     U4ERRIE         equ	748	;# 
 10260   0002ED                     U5RXB           equ	749	;# 
 10261   0002ED                     U5RXBL          equ	749	;# 
 10262   0002EF                     U5TXB           equ	751	;# 
 10263   0002EF                     U5TXBL          equ	751	;# 
 10264   0002F1                     U5P1            equ	753	;# 
 10265   0002F1                     U5P1L           equ	753	;# 
 10266   0002F3                     U5P2            equ	755	;# 
 10267   0002F3                     U5P2L           equ	755	;# 
 10268   0002F5                     U5P3            equ	757	;# 
 10269   0002F5                     U5P3L           equ	757	;# 
 10270   0002F7                     U5CON0          equ	759	;# 
 10271   0002F8                     U5CON1          equ	760	;# 
 10272   0002F9                     U5CON2          equ	761	;# 
 10273   0002FA                     U5BRG           equ	762	;# 
 10274   0002FA                     U5BRGL          equ	762	;# 
 10275   0002FB                     U5BRGH          equ	763	;# 
 10276   0002FC                     U5FIFO          equ	764	;# 
 10277   0002FD                     U5UIR           equ	765	;# 
 10278   0002FE                     U5ERRIR         equ	766	;# 
 10279   0002FF                     U5ERRIE         equ	767	;# 
 10280   000300                     SMT1TMR         equ	768	;# 
 10281   000300                     SMT1TMRL        equ	768	;# 
 10282   000301                     SMT1TMRH        equ	769	;# 
 10283   000302                     SMT1TMRU        equ	770	;# 
 10284   000303                     SMT1CPR         equ	771	;# 
 10285   000303                     SMT1CPRL        equ	771	;# 
 10286   000304                     SMT1CPRH        equ	772	;# 
 10287   000305                     SMT1CPRU        equ	773	;# 
 10288   000306                     SMT1CPW         equ	774	;# 
 10289   000306                     SMT1CPWL        equ	774	;# 
 10290   000307                     SMT1CPWH        equ	775	;# 
 10291   000308                     SMT1CPWU        equ	776	;# 
 10292   000309                     SMT1PR          equ	777	;# 
 10293   000309                     SMT1PRL         equ	777	;# 
 10294   00030A                     SMT1PRH         equ	778	;# 
 10295   00030B                     SMT1PRU         equ	779	;# 
 10296   00030C                     SMT1CON0        equ	780	;# 
 10297   00030D                     SMT1CON1        equ	781	;# 
 10298   00030E                     SMT1STAT        equ	782	;# 
 10299   00030F                     SMT1CLK         equ	783	;# 
 10300   000310                     SMT1SIG         equ	784	;# 
 10301   000311                     SMT1WIN         equ	785	;# 
 10302   000318                     TMR0L           equ	792	;# 
 10303   000318                     TMR0            equ	792	;# 
 10304   000319                     TMR0H           equ	793	;# 
 10305   000319                     PR0             equ	793	;# 
 10306   00031A                     T0CON0          equ	794	;# 
 10307   00031B                     T0CON1          equ	795	;# 
 10308   00031C                     TMR1            equ	796	;# 
 10309   00031C                     TMR1L           equ	796	;# 
 10310   00031D                     TMR1H           equ	797	;# 
 10311   00031E                     T1CON           equ	798	;# 
 10312   00031E                     TMR1CON         equ	798	;# 
 10313   00031F                     T1GCON          equ	799	;# 
 10314   00031F                     TMR1GCON        equ	799	;# 
 10315   000320                     T1GATE          equ	800	;# 
 10316   000320                     TMR1GATE        equ	800	;# 
 10317   000321                     T1CLK           equ	801	;# 
 10318   000321                     TMR1CLK         equ	801	;# 
 10319   000321                     PR1             equ	801	;# 
 10320   000322                     T2TMR           equ	802	;# 
 10321   000322                     TMR2            equ	802	;# 
 10322   000323                     T2PR            equ	803	;# 
 10323   000323                     PR2             equ	803	;# 
 10324   000324                     T2CON           equ	804	;# 
 10325   000325                     T2HLT           equ	805	;# 
 10326   000326                     T2CLKCON        equ	806	;# 
 10327   000326                     T2CLK           equ	806	;# 
 10328   000327                     T2RST           equ	807	;# 
 10329   000328                     TMR3            equ	808	;# 
 10330   000328                     TMR3L           equ	808	;# 
 10331   000329                     TMR3H           equ	809	;# 
 10332   00032A                     T3CON           equ	810	;# 
 10333   00032A                     TMR3CON         equ	810	;# 
 10334   00032B                     T3GCON          equ	811	;# 
 10335   00032B                     TMR3GCON        equ	811	;# 
 10336   00032C                     T3GATE          equ	812	;# 
 10337   00032C                     TMR3GATE        equ	812	;# 
 10338   00032D                     T3CLK           equ	813	;# 
 10339   00032D                     TMR3CLK         equ	813	;# 
 10340   00032D                     PR3             equ	813	;# 
 10341   00032E                     T4TMR           equ	814	;# 
 10342   00032E                     TMR4            equ	814	;# 
 10343   00032F                     T4PR            equ	815	;# 
 10344   00032F                     PR4             equ	815	;# 
 10345   000330                     T4CON           equ	816	;# 
 10346   000331                     T4HLT           equ	817	;# 
 10347   000332                     T4CLKCON        equ	818	;# 
 10348   000332                     T4CLK           equ	818	;# 
 10349   000333                     T4RST           equ	819	;# 
 10350   000334                     TMR5            equ	820	;# 
 10351   000334                     TMR5L           equ	820	;# 
 10352   000335                     TMR5H           equ	821	;# 
 10353   000336                     T5CON           equ	822	;# 
 10354   000336                     TMR5CON         equ	822	;# 
 10355   000337                     T5GCON          equ	823	;# 
 10356   000337                     TMR5GCON        equ	823	;# 
 10357   000338                     T5GATE          equ	824	;# 
 10358   000338                     TMR5GATE        equ	824	;# 
 10359   000339                     T5CLK           equ	825	;# 
 10360   000339                     TMR5CLK         equ	825	;# 
 10361   000339                     PR5             equ	825	;# 
 10362   00033A                     T6TMR           equ	826	;# 
 10363   00033A                     TMR6            equ	826	;# 
 10364   00033B                     T6PR            equ	827	;# 
 10365   00033B                     PR6             equ	827	;# 
 10366   00033C                     T6CON           equ	828	;# 
 10367   00033D                     T6HLT           equ	829	;# 
 10368   00033E                     T6CLKCON        equ	830	;# 
 10369   00033E                     T6CLK           equ	830	;# 
 10370   00033F                     T6RST           equ	831	;# 
 10371   000340                     CCPR1           equ	832	;# 
 10372   000340                     CCPR1L          equ	832	;# 
 10373   000341                     CCPR1H          equ	833	;# 
 10374   000342                     CCP1CON         equ	834	;# 
 10375   000343                     CCP1CAP         equ	835	;# 
 10376   000344                     CCPR2           equ	836	;# 
 10377   000344                     CCPR2L          equ	836	;# 
 10378   000345                     CCPR2H          equ	837	;# 
 10379   000346                     CCP2CON         equ	838	;# 
 10380   000347                     CCP2CAP         equ	839	;# 
 10381   000348                     CCPR3           equ	840	;# 
 10382   000348                     CCPR3L          equ	840	;# 
 10383   000349                     CCPR3H          equ	841	;# 
 10384   00034A                     CCP3CON         equ	842	;# 
 10385   00034B                     CCP3CAP         equ	843	;# 
 10386   00034C                     CCPTMRS0        equ	844	;# 
 10387   00034F                     CRCDATA         equ	847	;# 
 10388   00034F                     CRCDATAL        equ	847	;# 
 10389   000350                     CRCDATAH        equ	848	;# 
 10390   000351                     CRCDATAU        equ	849	;# 
 10391   000352                     CRCDATAT        equ	850	;# 
 10392   000353                     CRCOUT          equ	851	;# 
 10393   000353                     CRCSHFT         equ	851	;# 
 10394   000353                     CRCXOR          equ	851	;# 
 10395   000353                     CRCOUTL         equ	851	;# 
 10396   000353                     CRCSHFTL        equ	851	;# 
 10397   000353                     CRCSHIFTL       equ	851	;# 
 10398   000353                     CRCXORL         equ	851	;# 
 10399   000354                     CRCOUTH         equ	852	;# 
 10400   000354                     CRCSHFTH        equ	852	;# 
 10401   000354                     CRCSHIFTH       equ	852	;# 
 10402   000354                     CRCXORH         equ	852	;# 
 10403   000355                     CRCOUTU         equ	853	;# 
 10404   000355                     CRCSHFTU        equ	853	;# 
 10405   000355                     CRCSHIFTU       equ	853	;# 
 10406   000355                     CRCXORU         equ	853	;# 
 10407   000356                     CRCOUTT         equ	854	;# 
 10408   000356                     CRCSHFTT        equ	854	;# 
 10409   000356                     CRCSHIFTT       equ	854	;# 
 10410   000356                     CRCXORT         equ	854	;# 
 10411   000357                     CRCCON0         equ	855	;# 
 10412   000358                     CRCCON1         equ	856	;# 
 10413   000359                     CRCCON2         equ	857	;# 
 10414   00035A                     SCANLADR        equ	858	;# 
 10415   00035A                     SCANLADRL       equ	858	;# 
 10416   00035B                     SCANLADRH       equ	859	;# 
 10417   00035C                     SCANLADRU       equ	860	;# 
 10418   00035D                     SCANHADR        equ	861	;# 
 10419   00035D                     SCANHADRL       equ	861	;# 
 10420   00035E                     SCANHADRH       equ	862	;# 
 10421   00035F                     SCANHADRU       equ	863	;# 
 10422   000360                     SCANCON0        equ	864	;# 
 10423   000361                     SCANTRIG        equ	865	;# 
 10424   000362                     IPR0            equ	866	;# 
 10425   000363                     IPR1            equ	867	;# 
 10426   000364                     IPR2            equ	868	;# 
 10427   000365                     IPR3            equ	869	;# 
 10428   000366                     IPR4            equ	870	;# 
 10429   000367                     IPR5            equ	871	;# 
 10430   000368                     IPR6            equ	872	;# 
 10431   000369                     IPR7            equ	873	;# 
 10432   00036A                     IPR8            equ	874	;# 
 10433   00036B                     IPR9            equ	875	;# 
 10434   00036C                     IPR10           equ	876	;# 
 10435   00036D                     IPR11           equ	877	;# 
 10436   00036E                     IPR12           equ	878	;# 
 10437   00036F                     IPR13           equ	879	;# 
 10438   000370                     IPR14           equ	880	;# 
 10439   000371                     IPR15           equ	881	;# 
 10440   000373                     STATUS_CSHAD    equ	883	;# 
 10441   000374                     WREG_CSHAD      equ	884	;# 
 10442   000375                     BSR_CSHAD       equ	885	;# 
 10443   000376                     SHADCON         equ	886	;# 
 10444   000377                     STATUS_SHAD     equ	887	;# 
 10445   000378                     WREG_SHAD       equ	888	;# 
 10446   000379                     BSR_SHAD        equ	889	;# 
 10447   00037A                     PCLATH_SHAD     equ	890	;# 
 10448   00037B                     PCLATU_SHAD     equ	891	;# 
 10449   00037C                     FSR0SH          equ	892	;# 
 10450   00037C                     FSR0L_SHAD      equ	892	;# 
 10451   00037D                     FSR0H_SHAD      equ	893	;# 
 10452   00037E                     FSR1SH          equ	894	;# 
 10453   00037E                     FSR1L_SHAD      equ	894	;# 
 10454   00037F                     FSR1H_SHAD      equ	895	;# 
 10455   000380                     FSR2SH          equ	896	;# 
 10456   000380                     FSR2L_SHAD      equ	896	;# 
 10457   000381                     FSR2H_SHAD      equ	897	;# 
 10458   000382                     PRODSH          equ	898	;# 
 10459   000382                     PRODL_SHAD      equ	898	;# 
 10460   000383                     PRODH_SHAD      equ	899	;# 
 10461   000387                     TU16ACON0       equ	903	;# 
 10462   000388                     TU16ACON1       equ	904	;# 
 10463   000389                     TU16AHLT        equ	905	;# 
 10464   00038A                     TU16APS         equ	906	;# 
 10465   00038B                     TU16ATMR        equ	907	;# 
 10466   00038B                     TU16ACR         equ	907	;# 
 10467   00038B                     TU16ATMRL       equ	907	;# 
 10468   00038B                     TU16ACRL        equ	907	;# 
 10469   00038C                     TU16ATMRH       equ	908	;# 
 10470   00038C                     TU16ACRH        equ	908	;# 
 10471   00038D                     TU16APR         equ	909	;# 
 10472   00038D                     TU16APRL        equ	909	;# 
 10473   00038E                     TU16APRH        equ	910	;# 
 10474   00038F                     TU16ACLK        equ	911	;# 
 10475   000390                     TU16AERS        equ	912	;# 
 10476   000393                     TU16BCON0       equ	915	;# 
 10477   000394                     TU16BCON1       equ	916	;# 
 10478   000395                     TU16BHLT        equ	917	;# 
 10479   000396                     TU16BPS         equ	918	;# 
 10480   000397                     TU16BTMR        equ	919	;# 
 10481   000397                     TU16BCR         equ	919	;# 
 10482   000397                     TU16BTMRL       equ	919	;# 
 10483   000397                     TU16BCRL        equ	919	;# 
 10484   000398                     TU16BTMRH       equ	920	;# 
 10485   000398                     TU16BCRH        equ	920	;# 
 10486   000399                     TU16BPR         equ	921	;# 
 10487   000399                     TU16BPRL        equ	921	;# 
 10488   00039A                     TU16BPRH        equ	922	;# 
 10489   00039B                     TU16BCLK        equ	923	;# 
 10490   00039C                     TU16BERS        equ	924	;# 
 10491   0003BB                     TUCHAIN         equ	955	;# 
 10492   0003BC                     CWG1CLK         equ	956	;# 
 10493   0003BC                     CWG1CLKCON      equ	956	;# 
 10494   0003BD                     CWG1ISM         equ	957	;# 
 10495   0003BE                     CWG1DBR         equ	958	;# 
 10496   0003BF                     CWG1DBF         equ	959	;# 
 10497   0003C0                     CWG1CON0        equ	960	;# 
 10498   0003C1                     CWG1CON1        equ	961	;# 
 10499   0003C2                     CWG1AS0         equ	962	;# 
 10500   0003C3                     CWG1AS1         equ	963	;# 
 10501   0003C4                     CWG1STR         equ	964	;# 
 10502   0003C5                     CWG2CLK         equ	965	;# 
 10503   0003C5                     CWG2CLKCON      equ	965	;# 
 10504   0003C6                     CWG2ISM         equ	966	;# 
 10505   0003C7                     CWG2DBR         equ	967	;# 
 10506   0003C8                     CWG2DBF         equ	968	;# 
 10507   0003C9                     CWG2CON0        equ	969	;# 
 10508   0003CA                     CWG2CON1        equ	970	;# 
 10509   0003CB                     CWG2AS0         equ	971	;# 
 10510   0003CC                     CWG2AS1         equ	972	;# 
 10511   0003CD                     CWG2STR         equ	973	;# 
 10512   0003CE                     CWG3CLK         equ	974	;# 
 10513   0003CE                     CWG3CLKCON      equ	974	;# 
 10514   0003CF                     CWG3ISM         equ	975	;# 
 10515   0003D0                     CWG3DBR         equ	976	;# 
 10516   0003D1                     CWG3DBF         equ	977	;# 
 10517   0003D2                     CWG3CON0        equ	978	;# 
 10518   0003D3                     CWG3CON1        equ	979	;# 
 10519   0003D4                     CWG3AS0         equ	980	;# 
 10520   0003D5                     CWG3AS1         equ	981	;# 
 10521   0003D6                     CWG3STR         equ	982	;# 
 10522   0003D7                     FVRCON          equ	983	;# 
 10523   0003D8                     ADCPCON         equ	984	;# 
 10524   0003D8                     ADCP            equ	984	;# 
 10525   0003D9                     ADLTH           equ	985	;# 
 10526   0003D9                     ADLTHL          equ	985	;# 
 10527   0003DA                     ADLTHH          equ	986	;# 
 10528   0003DB                     ADUTH           equ	987	;# 
 10529   0003DB                     ADUTHL          equ	987	;# 
 10530   0003DC                     ADUTHH          equ	988	;# 
 10531   0003DD                     ADERR           equ	989	;# 
 10532   0003DD                     ADERRL          equ	989	;# 
 10533   0003DE                     ADERRH          equ	990	;# 
 10534   0003DF                     ADSTPT          equ	991	;# 
 10535   0003DF                     ADSTPTL         equ	991	;# 
 10536   0003E0                     ADSTPTH         equ	992	;# 
 10537   0003E1                     ADFLTR          equ	993	;# 
 10538   0003E1                     ADFLTRL         equ	993	;# 
 10539   0003E2                     ADFLTRH         equ	994	;# 
 10540   0003E3                     ADACC           equ	995	;# 
 10541   0003E3                     ADACCL          equ	995	;# 
 10542   0003E4                     ADACCH          equ	996	;# 
 10543   0003E5                     ADACCU          equ	997	;# 
 10544   0003E6                     ADCNT           equ	998	;# 
 10545   0003E7                     ADRPT           equ	999	;# 
 10546   0003E8                     ADPREV          equ	1000	;# 
 10547   0003E8                     ADPREVL         equ	1000	;# 
 10548   0003E9                     ADPREVH         equ	1001	;# 
 10549   0003EA                     ADRES           equ	1002	;# 
 10550   0003EA                     ADRESL          equ	1002	;# 
 10551   0003EB                     ADRESH          equ	1003	;# 
 10552   0003EC                     ADPCH           equ	1004	;# 
 10553   0003EE                     ADACQ           equ	1006	;# 
 10554   0003EE                     ADACQL          equ	1006	;# 
 10555   0003EF                     ADACQH          equ	1007	;# 
 10556   0003F0                     ADCAP           equ	1008	;# 
 10557   0003F1                     ADPRE           equ	1009	;# 
 10558   0003F1                     ADPREL          equ	1009	;# 
 10559   0003F2                     ADPREH          equ	1010	;# 
 10560   0003F3                     ADCON0          equ	1011	;# 
 10561   0003F4                     ADCON1          equ	1012	;# 
 10562   0003F5                     ADCON2          equ	1013	;# 
 10563   0003F6                     ADCON3          equ	1014	;# 
 10564   0003F7                     ADSTAT          equ	1015	;# 
 10565   0003F8                     ADREF           equ	1016	;# 
 10566   0003F9                     ADACT           equ	1017	;# 
 10567   0003FA                     ADCLK           equ	1018	;# 
 10568   0003FB                     ADCTX           equ	1019	;# 
 10569   0003FC                     ADCSEL1         equ	1020	;# 
 10570   0003FD                     ADCSEL2         equ	1021	;# 
 10571   0003FE                     ADCSEL3         equ	1022	;# 
 10572   0003FF                     ADCSEL4         equ	1023	;# 
 10573   000400                     ANSELA          equ	1024	;# 
 10574   000401                     WPUA            equ	1025	;# 
 10575   000402                     ODCONA          equ	1026	;# 
 10576   000403                     SLRCONA         equ	1027	;# 
 10577   000404                     INLVLA          equ	1028	;# 
 10578   000405                     IOCAP           equ	1029	;# 
 10579   000406                     IOCAN           equ	1030	;# 
 10580   000407                     IOCAF           equ	1031	;# 
 10581   000408                     ANSELB          equ	1032	;# 
 10582   000409                     WPUB            equ	1033	;# 
 10583   00040A                     ODCONB          equ	1034	;# 
 10584   00040B                     SLRCONB         equ	1035	;# 
 10585   00040C                     INLVLB          equ	1036	;# 
 10586   00040D                     IOCBP           equ	1037	;# 
 10587   00040E                     IOCBN           equ	1038	;# 
 10588   00040F                     IOCBF           equ	1039	;# 
 10589   000410                     ANSELC          equ	1040	;# 
 10590   000411                     WPUC            equ	1041	;# 
 10591   000412                     ODCONC          equ	1042	;# 
 10592   000413                     SLRCONC         equ	1043	;# 
 10593   000414                     INLVLC          equ	1044	;# 
 10594   000415                     IOCCP           equ	1045	;# 
 10595   000416                     IOCCN           equ	1046	;# 
 10596   000417                     IOCCF           equ	1047	;# 
 10597   000421                     WPUE            equ	1057	;# 
 10598   000424                     INLVLE          equ	1060	;# 
 10599   000425                     IOCEP           equ	1061	;# 
 10600   000426                     IOCEN           equ	1062	;# 
 10601   000427                     IOCEF           equ	1063	;# 
 10602   000440                     NCO1ACC         equ	1088	;# 
 10603   000440                     NCO1ACCL        equ	1088	;# 
 10604   000441                     NCO1ACCH        equ	1089	;# 
 10605   000442                     NCO1ACCU        equ	1090	;# 
 10606   000443                     NCO1INC         equ	1091	;# 
 10607   000443                     NCO1INCL        equ	1091	;# 
 10608   000444                     NCO1INCH        equ	1092	;# 
 10609   000445                     NCO1INCU        equ	1093	;# 
 10610   000446                     NCO1CON         equ	1094	;# 
 10611   000447                     NCO1CLK         equ	1095	;# 
 10612   000448                     NCO2ACC         equ	1096	;# 
 10613   000448                     NCO2ACCL        equ	1096	;# 
 10614   000449                     NCO2ACCH        equ	1097	;# 
 10615   00044A                     NCO2ACCU        equ	1098	;# 
 10616   00044B                     NCO2INC         equ	1099	;# 
 10617   00044B                     NCO2INCL        equ	1099	;# 
 10618   00044C                     NCO2INCH        equ	1100	;# 
 10619   00044D                     NCO2INCU        equ	1101	;# 
 10620   00044E                     NCO2CON         equ	1102	;# 
 10621   00044F                     NCO2CLK         equ	1103	;# 
 10622   000450                     NCO3ACC         equ	1104	;# 
 10623   000450                     NCO3ACCL        equ	1104	;# 
 10624   000451                     NCO3ACCH        equ	1105	;# 
 10625   000452                     NCO3ACCU        equ	1106	;# 
 10626   000453                     NCO3INC         equ	1107	;# 
 10627   000453                     NCO3INCL        equ	1107	;# 
 10628   000454                     NCO3INCH        equ	1108	;# 
 10629   000455                     NCO3INCU        equ	1109	;# 
 10630   000456                     NCO3CON         equ	1110	;# 
 10631   000457                     NCO3CLK         equ	1111	;# 
 10632   000458                     FSCMCON         equ	1112	;# 
 10633   000459                     IVTLOCK         equ	1113	;# 
 10634   00045A                     IVTAD           equ	1114	;# 
 10635   00045A                     IVTADL          equ	1114	;# 
 10636   00045B                     IVTADH          equ	1115	;# 
 10637   00045C                     IVTADU          equ	1116	;# 
 10638   00045D                     IVTBASE         equ	1117	;# 
 10639   00045D                     IVTBASEL        equ	1117	;# 
 10640   00045E                     IVTBASEH        equ	1118	;# 
 10641   00045F                     IVTBASEU        equ	1119	;# 
 10642   000460                     PWM1ERS         equ	1120	;# 
 10643   000461                     PWM1CLK         equ	1121	;# 
 10644   000462                     PWM1LDS         equ	1122	;# 
 10645   000463                     PWM1PR          equ	1123	;# 
 10646   000463                     PWM1PRL         equ	1123	;# 
 10647   000464                     PWM1PRH         equ	1124	;# 
 10648   000465                     PWM1CPRE        equ	1125	;# 
 10649   000466                     PWM1PIPOS       equ	1126	;# 
 10650   000467                     PWM1GIR         equ	1127	;# 
 10651   000468                     PWM1GIE         equ	1128	;# 
 10652   000469                     PWM1CON         equ	1129	;# 
 10653   00046A                     PWM1S1CFG       equ	1130	;# 
 10654   00046B                     PWM1S1P1        equ	1131	;# 
 10655   00046B                     PWM1S1P1L       equ	1131	;# 
 10656   00046C                     PWM1S1P1H       equ	1132	;# 
 10657   00046D                     PWM1S1P2        equ	1133	;# 
 10658   00046D                     PWM1S1P2L       equ	1133	;# 
 10659   00046E                     PWM1S1P2H       equ	1134	;# 
 10660   00046F                     PWM2ERS         equ	1135	;# 
 10661   000470                     PWM2CLK         equ	1136	;# 
 10662   000471                     PWM2LDS         equ	1137	;# 
 10663   000472                     PWM2PR          equ	1138	;# 
 10664   000472                     PWM2PRL         equ	1138	;# 
 10665   000473                     PWM2PRH         equ	1139	;# 
 10666   000474                     PWM2CPRE        equ	1140	;# 
 10667   000475                     PWM2PIPOS       equ	1141	;# 
 10668   000476                     PWM2GIR         equ	1142	;# 
 10669   000477                     PWM2GIE         equ	1143	;# 
 10670   000478                     PWM2CON         equ	1144	;# 
 10671   000479                     PWM2S1CFG       equ	1145	;# 
 10672   00047A                     PWM2S1P1        equ	1146	;# 
 10673   00047A                     PWM2S1P1L       equ	1146	;# 
 10674   00047B                     PWM2S1P1H       equ	1147	;# 
 10675   00047C                     PWM2S1P2        equ	1148	;# 
 10676   00047C                     PWM2S1P2L       equ	1148	;# 
 10677   00047D                     PWM2S1P2H       equ	1149	;# 
 10678   00047E                     PWM3ERS         equ	1150	;# 
 10679   00047F                     PWM3CLK         equ	1151	;# 
 10680   000480                     PWM3LDS         equ	1152	;# 
 10681   000481                     PWM3PR          equ	1153	;# 
 10682   000481                     PWM3PRL         equ	1153	;# 
 10683   000482                     PWM3PRH         equ	1154	;# 
 10684   000483                     PWM3CPRE        equ	1155	;# 
 10685   000484                     PWM3PIPOS       equ	1156	;# 
 10686   000485                     PWM3GIR         equ	1157	;# 
 10687   000486                     PWM3GIE         equ	1158	;# 
 10688   000487                     PWM3CON         equ	1159	;# 
 10689   000488                     PWM3S1CFG       equ	1160	;# 
 10690   000489                     PWM3S1P1        equ	1161	;# 
 10691   000489                     PWM3S1P1L       equ	1161	;# 
 10692   00048A                     PWM3S1P1H       equ	1162	;# 
 10693   00048B                     PWM3S1P2        equ	1163	;# 
 10694   00048B                     PWM3S1P2L       equ	1163	;# 
 10695   00048C                     PWM3S1P2H       equ	1164	;# 
 10696   00048D                     PWM4ERS         equ	1165	;# 
 10697   00048E                     PWM4CLK         equ	1166	;# 
 10698   00048F                     PWM4LDS         equ	1167	;# 
 10699   000490                     PWM4PR          equ	1168	;# 
 10700   000490                     PWM4PRL         equ	1168	;# 
 10701   000491                     PWM4PRH         equ	1169	;# 
 10702   000492                     PWM4CPRE        equ	1170	;# 
 10703   000493                     PWM4PIPOS       equ	1171	;# 
 10704   000494                     PWM4GIR         equ	1172	;# 
 10705   000495                     PWM4GIE         equ	1173	;# 
 10706   000496                     PWM4CON         equ	1174	;# 
 10707   000497                     PWM4S1CFG       equ	1175	;# 
 10708   000498                     PWM4S1P1        equ	1176	;# 
 10709   000498                     PWM4S1P1L       equ	1176	;# 
 10710   000499                     PWM4S1P1H       equ	1177	;# 
 10711   00049A                     PWM4S1P2        equ	1178	;# 
 10712   00049A                     PWM4S1P2L       equ	1178	;# 
 10713   00049B                     PWM4S1P2H       equ	1179	;# 
 10714   00049C                     PWMLOAD         equ	1180	;# 
 10715   00049D                     PWMEN           equ	1181	;# 
 10716   00049E                     PIE0            equ	1182	;# 
 10717   00049F                     PIE1            equ	1183	;# 
 10718   0004A0                     PIE2            equ	1184	;# 
 10719   0004A1                     PIE3            equ	1185	;# 
 10720   0004A2                     PIE4            equ	1186	;# 
 10721   0004A3                     PIE5            equ	1187	;# 
 10722   0004A4                     PIE6            equ	1188	;# 
 10723   0004A5                     PIE7            equ	1189	;# 
 10724   0004A6                     PIE8            equ	1190	;# 
 10725   0004A7                     PIE9            equ	1191	;# 
 10726   0004A8                     PIE10           equ	1192	;# 
 10727   0004A9                     PIE11           equ	1193	;# 
 10728   0004AA                     PIE12           equ	1194	;# 
 10729   0004AB                     PIE13           equ	1195	;# 
 10730   0004AC                     PIE14           equ	1196	;# 
 10731   0004AD                     PIE15           equ	1197	;# 
 10732   0004AE                     PIR0            equ	1198	;# 
 10733   0004AF                     PIR1            equ	1199	;# 
 10734   0004B0                     PIR2            equ	1200	;# 
 10735   0004B1                     PIR3            equ	1201	;# 
 10736   0004B2                     PIR4            equ	1202	;# 
 10737   0004B3                     PIR5            equ	1203	;# 
 10738   0004B4                     PIR6            equ	1204	;# 
 10739   0004B5                     PIR7            equ	1205	;# 
 10740   0004B6                     PIR8            equ	1206	;# 
 10741   0004B7                     PIR9            equ	1207	;# 
 10742   0004B8                     PIR10           equ	1208	;# 
 10743   0004B9                     PIR11           equ	1209	;# 
 10744   0004BA                     PIR12           equ	1210	;# 
 10745   0004BB                     PIR13           equ	1211	;# 
 10746   0004BC                     PIR14           equ	1212	;# 
 10747   0004BD                     PIR15           equ	1213	;# 
 10748   0004BE                     LATA            equ	1214	;# 
 10749   0004BF                     LATB            equ	1215	;# 
 10750   0004C0                     LATC            equ	1216	;# 
 10751   0004C6                     TRISA           equ	1222	;# 
 10752   0004C7                     TRISB           equ	1223	;# 
 10753   0004C8                     TRISC           equ	1224	;# 
 10754   0004CA                     TRISE           equ	1226	;# 
 10755   0004CE                     PORTA           equ	1230	;# 
 10756   0004CF                     PORTB           equ	1231	;# 
 10757   0004D0                     PORTC           equ	1232	;# 
 10758   0004D2                     PORTE           equ	1234	;# 
 10759   0004D6                     INTCON0         equ	1238	;# 
 10760   0004D7                     INTCON1         equ	1239	;# 
 10761   0004D8                     STATUS          equ	1240	;# 
 10762   0004D9                     FSR2            equ	1241	;# 
 10763   0004D9                     FSR2L           equ	1241	;# 
 10764   0004DA                     FSR2H           equ	1242	;# 
 10765   0004DB                     PLUSW2          equ	1243	;# 
 10766   0004DC                     PREINC2         equ	1244	;# 
 10767   0004DD                     POSTDEC2        equ	1245	;# 
 10768   0004DE                     POSTINC2        equ	1246	;# 
 10769   0004DF                     INDF2           equ	1247	;# 
 10770   0004E0                     BSR             equ	1248	;# 
 10771   0004E1                     FSR1            equ	1249	;# 
 10772   0004E1                     FSR1L           equ	1249	;# 
 10773   0004E2                     FSR1H           equ	1250	;# 
 10774   0004E3                     PLUSW1          equ	1251	;# 
 10775   0004E4                     PREINC1         equ	1252	;# 
 10776   0004E5                     POSTDEC1        equ	1253	;# 
 10777   0004E6                     POSTINC1        equ	1254	;# 
 10778   0004E7                     INDF1           equ	1255	;# 
 10779   0004E8                     WREG            equ	1256	;# 
 10780   0004E9                     FSR0            equ	1257	;# 
 10781   0004E9                     FSR0L           equ	1257	;# 
 10782   0004EA                     FSR0H           equ	1258	;# 
 10783   0004EB                     PLUSW0          equ	1259	;# 
 10784   0004EC                     PREINC0         equ	1260	;# 
 10785   0004ED                     POSTDEC0        equ	1261	;# 
 10786   0004EE                     POSTINC0        equ	1262	;# 
 10787   0004EF                     INDF0           equ	1263	;# 
 10788   0004F0                     PCON0           equ	1264	;# 
 10789   0004F1                     PCON1           equ	1265	;# 
 10790   0004F2                     CPUDOZE         equ	1266	;# 
 10791   0004F3                     PROD            equ	1267	;# 
 10792   0004F3                     PRODL           equ	1267	;# 
 10793   0004F4                     PRODH           equ	1268	;# 
 10794   0004F5                     TABLAT          equ	1269	;# 
 10795   0004F6                     TBLPTR          equ	1270	;# 
 10796   0004F6                     TBLPTRL         equ	1270	;# 
 10797   0004F7                     TBLPTRH         equ	1271	;# 
 10798   0004F8                     TBLPTRU         equ	1272	;# 
 10799   0004F9                     PCLAT           equ	1273	;# 
 10800   0004F9                     PCL             equ	1273	;# 
 10801   0004FA                     PCLATH          equ	1274	;# 
 10802   0004FB                     PCLATU          equ	1275	;# 
 10803   0004FC                     STKPTR          equ	1276	;# 
 10804   0004FD                     TOS             equ	1277	;# 
 10805   0004FD                     TOSL            equ	1277	;# 
 10806   0004FE                     TOSH            equ	1278	;# 
 10807   0004FF                     TOSU            equ	1279	;# 
 10808   000038                     BOOTREG         equ	56	;# 
 10809   000039                     CLKRCON         equ	57	;# 
 10810   00003A                     CLKRCLK         equ	58	;# 
 10811   000040                     NVMCON0         equ	64	;# 
 10812   000041                     NVMCON1         equ	65	;# 
 10813   000042                     NVMLOCK         equ	66	;# 
 10814   000043                     NVMADR          equ	67	;# 
 10815   000043                     NVMADRL         equ	67	;# 
 10816   000044                     NVMADRH         equ	68	;# 
 10817   000045                     NVMADRU         equ	69	;# 
 10818   000046                     NVMDAT          equ	70	;# 
 10819   000046                     NVMDATL         equ	70	;# 
 10820   000047                     NVMDATH         equ	71	;# 
 10821   000048                     VREGCON         equ	72	;# 
 10822   000049                     BORCON          equ	73	;# 
 10823   00004A                     HLVDCON0        equ	74	;# 
 10824   00004B                     HLVDCON1        equ	75	;# 
 10825   00004C                     ZCDCON          equ	76	;# 
 10826   000060                     PMD0            equ	96	;# 
 10827   000061                     PMD1            equ	97	;# 
 10828   000062                     PMD2            equ	98	;# 
 10829   000063                     PMD3            equ	99	;# 
 10830   000064                     PMD4            equ	100	;# 
 10831   000065                     PMD5            equ	101	;# 
 10832   000066                     PMD6            equ	102	;# 
 10833   000067                     PMD7            equ	103	;# 
 10834   000068                     PMD8            equ	104	;# 
 10835   00006A                     MD1CON0         equ	106	;# 
 10836   00006B                     MD1CON1         equ	107	;# 
 10837   00006C                     MD1SRC          equ	108	;# 
 10838   00006D                     MD1CARL         equ	109	;# 
 10839   00006E                     MD1CARH         equ	110	;# 
 10840   00006F                     CMOUT           equ	111	;# 
 10841   000070                     CM1CON0         equ	112	;# 
 10842   000071                     CM1CON1         equ	113	;# 
 10843   000072                     CM1NCH          equ	114	;# 
 10844   000073                     CM1PCH          equ	115	;# 
 10845   000074                     CM2CON0         equ	116	;# 
 10846   000075                     CM2CON1         equ	117	;# 
 10847   000076                     CM2NCH          equ	118	;# 
 10848   000077                     CM2PCH          equ	119	;# 
 10849   000078                     WDTCON0         equ	120	;# 
 10850   000079                     WDTCON1         equ	121	;# 
 10851   00007A                     WDTPSL          equ	122	;# 
 10852   00007B                     WDTPSH          equ	123	;# 
 10853   00007C                     WDTTMR          equ	124	;# 
 10854   00007D                     DAC1DAT         equ	125	;# 
 10855   00007D                     DAC1DATL        equ	125	;# 
 10856   00007F                     DAC1CON         equ	127	;# 
 10857   000080                     SPI1RXB         equ	128	;# 
 10858   000081                     SPI1TXB         equ	129	;# 
 10859   000082                     SPI1TCNT        equ	130	;# 
 10860   000082                     SPI1TCNTL       equ	130	;# 
 10861   000083                     SPI1TCNTH       equ	131	;# 
 10862   000084                     SPI1CON0        equ	132	;# 
 10863   000085                     SPI1CON1        equ	133	;# 
 10864   000086                     SPI1CON2        equ	134	;# 
 10865   000087                     SPI1STATUS      equ	135	;# 
 10866   000088                     SPI1TWIDTH      equ	136	;# 
 10867   000089                     SPI1BAUD        equ	137	;# 
 10868   00008A                     SPI1INTF        equ	138	;# 
 10869   00008B                     SPI1INTE        equ	139	;# 
 10870   00008C                     SPI1CLK         equ	140	;# 
 10871   00008D                     SPI2RXB         equ	141	;# 
 10872   00008E                     SPI2TXB         equ	142	;# 
 10873   00008F                     SPI2TCNT        equ	143	;# 
 10874   00008F                     SPI2TCNTL       equ	143	;# 
 10875   000090                     SPI2TCNTH       equ	144	;# 
 10876   000091                     SPI2CON0        equ	145	;# 
 10877   000092                     SPI2CON1        equ	146	;# 
 10878   000093                     SPI2CON2        equ	147	;# 
 10879   000094                     SPI2STATUS      equ	148	;# 
 10880   000095                     SPI2TWIDTH      equ	149	;# 
 10881   000096                     SPI2BAUD        equ	150	;# 
 10882   000097                     SPI2INTF        equ	151	;# 
 10883   000098                     SPI2INTE        equ	152	;# 
 10884   000099                     SPI2CLK         equ	153	;# 
 10885   0000AC                     ACTCON          equ	172	;# 
 10886   0000AD                     OSCCON1         equ	173	;# 
 10887   0000AE                     OSCCON2         equ	174	;# 
 10888   0000AF                     OSCCON3         equ	175	;# 
 10889   0000B0                     OSCTUNE         equ	176	;# 
 10890   0000B1                     OSCFRQ          equ	177	;# 
 10891   0000B1                     OSCFREQ         equ	177	;# 
 10892   0000B2                     OSCSTAT         equ	178	;# 
 10893   0000B2                     OSCSTAT1        equ	178	;# 
 10894   0000B3                     OSCEN           equ	179	;# 
 10895   0000B4                     PRLOCK          equ	180	;# 
 10896   0000B5                     SCANPR          equ	181	;# 
 10897   0000B6                     DMA1PR          equ	182	;# 
 10898   0000B7                     DMA2PR          equ	183	;# 
 10899   0000B8                     DMA3PR          equ	184	;# 
 10900   0000B9                     DMA4PR          equ	185	;# 
 10901   0000BA                     DMA5PR          equ	186	;# 
 10902   0000BB                     DMA6PR          equ	187	;# 
 10903   0000BC                     DMA7PR          equ	188	;# 
 10904   0000BD                     DMA8PR          equ	189	;# 
 10905   0000BE                     MAINPR          equ	190	;# 
 10906   0000BF                     ISRPR           equ	191	;# 
 10907   0000D4                     CLCDATA         equ	212	;# 
 10908   0000D5                     CLCSELECT       equ	213	;# 
 10909   0000D6                     CLCnCON         equ	214	;# 
 10910   0000D7                     CLCnPOL         equ	215	;# 
 10911   0000D8                     CLCnSEL0        equ	216	;# 
 10912   0000D9                     CLCnSEL1        equ	217	;# 
 10913   0000DA                     CLCnSEL2        equ	218	;# 
 10914   0000DB                     CLCnSEL3        equ	219	;# 
 10915   0000DC                     CLCnGLS0        equ	220	;# 
 10916   0000DD                     CLCnGLS1        equ	221	;# 
 10917   0000DE                     CLCnGLS2        equ	222	;# 
 10918   0000DF                     CLCnGLS3        equ	223	;# 
 10919   0000E8                     DMASELECT       equ	232	;# 
 10920   0000E9                     DMAnBUF         equ	233	;# 
 10921   0000EA                     DMAnDCNT        equ	234	;# 
 10922   0000EA                     DMAnDCNTL       equ	234	;# 
 10923   0000EB                     DMAnDCNTH       equ	235	;# 
 10924   0000EC                     DMAnDPTR        equ	236	;# 
 10925   0000EC                     DMAnDPTRL       equ	236	;# 
 10926   0000ED                     DMAnDPTRH       equ	237	;# 
 10927   0000EE                     DMAnDSZ         equ	238	;# 
 10928   0000EE                     DMAnDSZL        equ	238	;# 
 10929   0000EF                     DMAnDSZH        equ	239	;# 
 10930   0000F0                     DMAnDSA         equ	240	;# 
 10931   0000F0                     DMAnDSAL        equ	240	;# 
 10932   0000F1                     DMAnDSAH        equ	241	;# 
 10933   0000F2                     DMAnSCNT        equ	242	;# 
 10934   0000F2                     DMAnSCNTL       equ	242	;# 
 10935   0000F3                     DMAnSCNTH       equ	243	;# 
 10936   0000F4                     DMAnSPTR        equ	244	;# 
 10937   0000F4                     DMAnSPTRL       equ	244	;# 
 10938   0000F5                     DMAnSPTRH       equ	245	;# 
 10939   0000F6                     DMAnSPTRU       equ	246	;# 
 10940   0000F7                     DMAnSSZ         equ	247	;# 
 10941   0000F7                     DMAnSSZL        equ	247	;# 
 10942   0000F8                     DMAnSSZH        equ	248	;# 
 10943   0000F9                     DMAnSSA         equ	249	;# 
 10944   0000F9                     DMAnSSAL        equ	249	;# 
 10945   0000FA                     DMAnSSAH        equ	250	;# 
 10946   0000FB                     DMAnSSAU        equ	251	;# 
 10947   0000FC                     DMAnCON0        equ	252	;# 
 10948   0000FD                     DMAnCON1        equ	253	;# 
 10949   0000FE                     DMAnAIRQ        equ	254	;# 
 10950   0000FF                     DMAnSIRQ        equ	255	;# 
 10951   000100                     C1CONL          equ	256	;# 
 10952   000101                     C1CONH          equ	257	;# 
 10953   000102                     C1CONU          equ	258	;# 
 10954   000103                     C1CONT          equ	259	;# 
 10955   000104                     C1NBTCFGL       equ	260	;# 
 10956   000105                     C1NBTCFGH       equ	261	;# 
 10957   000106                     C1NBTCFGU       equ	262	;# 
 10958   000107                     C1NBTCFGT       equ	263	;# 
 10959   000108                     C1DBTCFGL       equ	264	;# 
 10960   000109                     C1DBTCFGH       equ	265	;# 
 10961   00010A                     C1DBTCFGU       equ	266	;# 
 10962   00010B                     C1DBTCFGT       equ	267	;# 
 10963   00010C                     C1TDCL          equ	268	;# 
 10964   00010D                     C1TDCH          equ	269	;# 
 10965   00010E                     C1TDCU          equ	270	;# 
 10966   000110                     C1TBC           equ	272	;# 
 10967   000110                     C1TBCL          equ	272	;# 
 10968   000111                     C1TBCH          equ	273	;# 
 10969   000112                     C1TBCU          equ	274	;# 
 10970   000113                     C1TBCT          equ	275	;# 
 10971   000114                     C1TSCONL        equ	276	;# 
 10972   000115                     C1TSCONH        equ	277	;# 
 10973   000116                     C1TSCONU        equ	278	;# 
 10974   000117                     C1TSCONT        equ	279	;# 
 10975   000118                     C1VECL          equ	280	;# 
 10976   000119                     C1VECH          equ	281	;# 
 10977   00011A                     C1VECU          equ	282	;# 
 10978   00011B                     C1VECT          equ	283	;# 
 10979   00011C                     C1INTL          equ	284	;# 
 10980   00011D                     C1INTH          equ	285	;# 
 10981   00011E                     C1INTU          equ	286	;# 
 10982   00011F                     C1INTT          equ	287	;# 
 10983   000120                     C1RXIF          equ	288	;# 
 10984   000120                     C1RXIFL         equ	288	;# 
 10985   000121                     C1RXIFH         equ	289	;# 
 10986   000122                     C1RXIFU         equ	290	;# 
 10987   000123                     C1RXIFT         equ	291	;# 
 10988   000124                     C1TXIF          equ	292	;# 
 10989   000124                     C1TXIFL         equ	292	;# 
 10990   000125                     C1TXIFH         equ	293	;# 
 10991   000126                     C1TXIFU         equ	294	;# 
 10992   000127                     C1TXIFT         equ	295	;# 
 10993   000128                     C1RXOVIF        equ	296	;# 
 10994   000128                     C1RXOVIFL       equ	296	;# 
 10995   000129                     C1RXOVIFH       equ	297	;# 
 10996   00012A                     C1RXOVIFU       equ	298	;# 
 10997   00012B                     C1RXOVIFT       equ	299	;# 
 10998   00012C                     C1TXATIF        equ	300	;# 
 10999   00012C                     C1TXATIFL       equ	300	;# 
 11000   00012D                     C1TXATIFH       equ	301	;# 
 11001   00012E                     C1TXATIFU       equ	302	;# 
 11002   00012F                     C1TXATIFT       equ	303	;# 
 11003   000130                     C1TXREQ         equ	304	;# 
 11004   000130                     C1TXREQL        equ	304	;# 
 11005   000131                     C1TXREQH        equ	305	;# 
 11006   000132                     C1TXREQU        equ	306	;# 
 11007   000133                     C1TXREQT        equ	307	;# 
 11008   000134                     C1TRECL         equ	308	;# 
 11009   000135                     C1TRECH         equ	309	;# 
 11010   000136                     C1TRECU         equ	310	;# 
 11011   000137                     C1TRECT         equ	311	;# 
 11012   000138                     C1BDIAG0L       equ	312	;# 
 11013   000139                     C1BDIAG0H       equ	313	;# 
 11014   00013C                     C1BDIAG1L       equ	316	;# 
 11015   00013D                     C1BDIAG1H       equ	317	;# 
 11016   00013E                     C1BDIAG1U       equ	318	;# 
 11017   00013F                     C1BDIAG1T       equ	319	;# 
 11018   000140                     C1TEFCONL       equ	320	;# 
 11019   000141                     C1TEFCONH       equ	321	;# 
 11020   000142                     C1TEFCONU       equ	322	;# 
 11021   000143                     C1TEFCONT       equ	323	;# 
 11022   000144                     C1TEFSTAL       equ	324	;# 
 11023   000145                     C1TEFSTAH       equ	325	;# 
 11024   000146                     C1TEFSTAU       equ	326	;# 
 11025   000147                     C1TEFSTAT       equ	327	;# 
 11026   000148                     C1TEFUA         equ	328	;# 
 11027   000148                     C1TEFUAL        equ	328	;# 
 11028   000149                     C1TEFUAH        equ	329	;# 
 11029   00014A                     C1TEFUAU        equ	330	;# 
 11030   00014B                     C1TEFUAT        equ	331	;# 
 11031   00014C                     C1FIFOBA        equ	332	;# 
 11032   00014C                     C1FIFOBAL       equ	332	;# 
 11033   00014D                     C1FIFOBAH       equ	333	;# 
 11034   00014E                     C1FIFOBAU       equ	334	;# 
 11035   00014F                     C1FIFOBAT       equ	335	;# 
 11036   000150                     C1TXQCONL       equ	336	;# 
 11037   000151                     C1TXQCONH       equ	337	;# 
 11038   000152                     C1TXQCONU       equ	338	;# 
 11039   000153                     C1TXQCONT       equ	339	;# 
 11040   000154                     C1TXQSTAL       equ	340	;# 
 11041   000155                     C1TXQSTAH       equ	341	;# 
 11042   000156                     C1TXQSTAU       equ	342	;# 
 11043   000157                     C1TXQSTAT       equ	343	;# 
 11044   000158                     C1TXQUA         equ	344	;# 
 11045   000158                     C1TXQUAL        equ	344	;# 
 11046   000159                     C1TXQUAH        equ	345	;# 
 11047   00015A                     C1TXQUAU        equ	346	;# 
 11048   00015B                     C1TXQUAT        equ	347	;# 
 11049   00015C                     C1FIFOCON1      equ	348	;# 
 11050   00015C                     C1FIFOCON1L     equ	348	;# 
 11051   00015D                     C1FIFOCON1H     equ	349	;# 
 11052   00015E                     C1FIFOCON1U     equ	350	;# 
 11053   00015F                     C1FIFOCON1T     equ	351	;# 
 11054   000160                     C1FIFOSTA1      equ	352	;# 
 11055   000160                     C1FIFOSTA1L     equ	352	;# 
 11056   000161                     C1FIFOSTA1H     equ	353	;# 
 11057   000162                     C1FIFOSTA1U     equ	354	;# 
 11058   000163                     C1FIFOSTA1T     equ	355	;# 
 11059   000164                     C1FIFOUA1       equ	356	;# 
 11060   000164                     C1FIFOUA1L      equ	356	;# 
 11061   000165                     C1FIFOUA1H      equ	357	;# 
 11062   000166                     C1FIFOUA1U      equ	358	;# 
 11063   000167                     C1FIFOUA1T      equ	359	;# 
 11064   000168                     C1FIFOCON2      equ	360	;# 
 11065   000168                     C1FIFOCON2L     equ	360	;# 
 11066   000169                     C1FIFOCON2H     equ	361	;# 
 11067   00016A                     C1FIFOCON2U     equ	362	;# 
 11068   00016B                     C1FIFOCON2T     equ	363	;# 
 11069   00016C                     C1FIFOSTA2      equ	364	;# 
 11070   00016C                     C1FIFOSTA2L     equ	364	;# 
 11071   00016D                     C1FIFOSTA2H     equ	365	;# 
 11072   00016E                     C1FIFOSTA2U     equ	366	;# 
 11073   00016F                     C1FIFOSTA2T     equ	367	;# 
 11074   000170                     C1FIFOUA2       equ	368	;# 
 11075   000170                     C1FIFOUA2L      equ	368	;# 
 11076   000171                     C1FIFOUA2H      equ	369	;# 
 11077   000172                     C1FIFOUA2U      equ	370	;# 
 11078   000173                     C1FIFOUA2T      equ	371	;# 
 11079   000174                     C1FIFOCON3      equ	372	;# 
 11080   000174                     C1FIFOCON3L     equ	372	;# 
 11081   000175                     C1FIFOCON3H     equ	373	;# 
 11082   000176                     C1FIFOCON3U     equ	374	;# 
 11083   000177                     C1FIFOCON3T     equ	375	;# 
 11084   000178                     C1FIFOSTA3      equ	376	;# 
 11085   000178                     C1FIFOSTA3L     equ	376	;# 
 11086   000179                     C1FIFOSTA3H     equ	377	;# 
 11087   00017A                     C1FIFOSTA3U     equ	378	;# 
 11088   00017B                     C1FIFOSTA3T     equ	379	;# 
 11089   00017C                     C1FIFOUA3       equ	380	;# 
 11090   00017C                     C1FIFOUA3L      equ	380	;# 
 11091   00017D                     C1FIFOUA3H      equ	381	;# 
 11092   00017E                     C1FIFOUA3U      equ	382	;# 
 11093   00017F                     C1FIFOUA3T      equ	383	;# 
 11094   000180                     C1FLTCON0L      equ	384	;# 
 11095   000181                     C1FLTCON0H      equ	385	;# 
 11096   000182                     C1FLTCON0U      equ	386	;# 
 11097   000183                     C1FLTCON0T      equ	387	;# 
 11098   000184                     C1FLTCON1L      equ	388	;# 
 11099   000185                     C1FLTCON1H      equ	389	;# 
 11100   000186                     C1FLTCON1U      equ	390	;# 
 11101   000187                     C1FLTCON1T      equ	391	;# 
 11102   000188                     C1FLTCON2L      equ	392	;# 
 11103   000189                     C1FLTCON2H      equ	393	;# 
 11104   00018A                     C1FLTCON2U      equ	394	;# 
 11105   00018B                     C1FLTCON2T      equ	395	;# 
 11106   00018C                     C1FLTOBJ0       equ	396	;# 
 11107   00018C                     C1FLTOBJ0L      equ	396	;# 
 11108   00018D                     C1FLTOBJ0H      equ	397	;# 
 11109   00018E                     C1FLTOBJ0U      equ	398	;# 
 11110   00018F                     C1FLTOBJ0T      equ	399	;# 
 11111   000190                     C1MASK0         equ	400	;# 
 11112   000190                     C1MASK0L        equ	400	;# 
 11113   000191                     C1MASK0H        equ	401	;# 
 11114   000192                     C1MASK0U        equ	402	;# 
 11115   000193                     C1MASK0T        equ	403	;# 
 11116   000194                     C1FLTOBJ1       equ	404	;# 
 11117   000194                     C1FLTOBJ1L      equ	404	;# 
 11118   000195                     C1FLTOBJ1H      equ	405	;# 
 11119   000196                     C1FLTOBJ1U      equ	406	;# 
 11120   000197                     C1FLTOBJ1T      equ	407	;# 
 11121   000198                     C1MASK1         equ	408	;# 
 11122   000198                     C1MASK1L        equ	408	;# 
 11123   000199                     C1MASK1H        equ	409	;# 
 11124   00019A                     C1MASK1U        equ	410	;# 
 11125   00019B                     C1MASK1T        equ	411	;# 
 11126   00019C                     C1FLTOBJ2       equ	412	;# 
 11127   00019C                     C1FLTOBJ2L      equ	412	;# 
 11128   00019D                     C1FLTOBJ2H      equ	413	;# 
 11129   00019E                     C1FLTOBJ2U      equ	414	;# 
 11130   00019F                     C1FLTOBJ2T      equ	415	;# 
 11131   0001A0                     C1MASK2         equ	416	;# 
 11132   0001A0                     C1MASK2L        equ	416	;# 
 11133   0001A1                     C1MASK2H        equ	417	;# 
 11134   0001A2                     C1MASK2U        equ	418	;# 
 11135   0001A3                     C1MASK2T        equ	419	;# 
 11136   0001A4                     C1FLTOBJ3       equ	420	;# 
 11137   0001A4                     C1FLTOBJ3L      equ	420	;# 
 11138   0001A5                     C1FLTOBJ3H      equ	421	;# 
 11139   0001A6                     C1FLTOBJ3U      equ	422	;# 
 11140   0001A7                     C1FLTOBJ3T      equ	423	;# 
 11141   0001A8                     C1MASK3         equ	424	;# 
 11142   0001A8                     C1MASK3L        equ	424	;# 
 11143   0001A9                     C1MASK3H        equ	425	;# 
 11144   0001AA                     C1MASK3U        equ	426	;# 
 11145   0001AB                     C1MASK3T        equ	427	;# 
 11146   0001AC                     C1FLTOBJ4       equ	428	;# 
 11147   0001AC                     C1FLTOBJ4L      equ	428	;# 
 11148   0001AD                     C1FLTOBJ4H      equ	429	;# 
 11149   0001AE                     C1FLTOBJ4U      equ	430	;# 
 11150   0001AF                     C1FLTOBJ4T      equ	431	;# 
 11151   0001B0                     C1MASK4         equ	432	;# 
 11152   0001B0                     C1MASK4L        equ	432	;# 
 11153   0001B1                     C1MASK4H        equ	433	;# 
 11154   0001B2                     C1MASK4U        equ	434	;# 
 11155   0001B3                     C1MASK4T        equ	435	;# 
 11156   0001B4                     C1FLTOBJ5       equ	436	;# 
 11157   0001B4                     C1FLTOBJ5L      equ	436	;# 
 11158   0001B5                     C1FLTOBJ5H      equ	437	;# 
 11159   0001B6                     C1FLTOBJ5U      equ	438	;# 
 11160   0001B7                     C1FLTOBJ5T      equ	439	;# 
 11161   0001B8                     C1MASK5         equ	440	;# 
 11162   0001B8                     C1MASK5L        equ	440	;# 
 11163   0001B9                     C1MASK5H        equ	441	;# 
 11164   0001BA                     C1MASK5U        equ	442	;# 
 11165   0001BB                     C1MASK5T        equ	443	;# 
 11166   0001BC                     C1FLTOBJ6       equ	444	;# 
 11167   0001BC                     C1FLTOBJ6L      equ	444	;# 
 11168   0001BD                     C1FLTOBJ6H      equ	445	;# 
 11169   0001BE                     C1FLTOBJ6U      equ	446	;# 
 11170   0001BF                     C1FLTOBJ6T      equ	447	;# 
 11171   0001C0                     C1MASK6         equ	448	;# 
 11172   0001C0                     C1MASK6L        equ	448	;# 
 11173   0001C1                     C1MASK6H        equ	449	;# 
 11174   0001C2                     C1MASK6U        equ	450	;# 
 11175   0001C3                     C1MASK6T        equ	451	;# 
 11176   0001C4                     C1FLTOBJ7       equ	452	;# 
 11177   0001C4                     C1FLTOBJ7L      equ	452	;# 
 11178   0001C5                     C1FLTOBJ7H      equ	453	;# 
 11179   0001C6                     C1FLTOBJ7U      equ	454	;# 
 11180   0001C7                     C1FLTOBJ7T      equ	455	;# 
 11181   0001C8                     C1MASK7         equ	456	;# 
 11182   0001C8                     C1MASK7L        equ	456	;# 
 11183   0001C9                     C1MASK7H        equ	457	;# 
 11184   0001CA                     C1MASK7U        equ	458	;# 
 11185   0001CB                     C1MASK7T        equ	459	;# 
 11186   0001CC                     C1FLTOBJ8       equ	460	;# 
 11187   0001CC                     C1FLTOBJ8L      equ	460	;# 
 11188   0001CD                     C1FLTOBJ8H      equ	461	;# 
 11189   0001CE                     C1FLTOBJ8U      equ	462	;# 
 11190   0001CF                     C1FLTOBJ8T      equ	463	;# 
 11191   0001D0                     C1MASK8         equ	464	;# 
 11192   0001D0                     C1MASK8L        equ	464	;# 
 11193   0001D1                     C1MASK8H        equ	465	;# 
 11194   0001D2                     C1MASK8U        equ	466	;# 
 11195   0001D3                     C1MASK8T        equ	467	;# 
 11196   0001D4                     C1FLTOBJ9       equ	468	;# 
 11197   0001D4                     C1FLTOBJ9L      equ	468	;# 
 11198   0001D5                     C1FLTOBJ9H      equ	469	;# 
 11199   0001D6                     C1FLTOBJ9U      equ	470	;# 
 11200   0001D7                     C1FLTOBJ9T      equ	471	;# 
 11201   0001D8                     C1MASK9         equ	472	;# 
 11202   0001D8                     C1MASK9L        equ	472	;# 
 11203   0001D9                     C1MASK9H        equ	473	;# 
 11204   0001DA                     C1MASK9U        equ	474	;# 
 11205   0001DB                     C1MASK9T        equ	475	;# 
 11206   0001DC                     C1FLTOBJ10      equ	476	;# 
 11207   0001DC                     C1FLTOBJ10L     equ	476	;# 
 11208   0001DD                     C1FLTOBJ10H     equ	477	;# 
 11209   0001DE                     C1FLTOBJ10U     equ	478	;# 
 11210   0001DF                     C1FLTOBJ10T     equ	479	;# 
 11211   0001E0                     C1MASK10        equ	480	;# 
 11212   0001E0                     C1MASK10L       equ	480	;# 
 11213   0001E1                     C1MASK10H       equ	481	;# 
 11214   0001E2                     C1MASK10U       equ	482	;# 
 11215   0001E3                     C1MASK10T       equ	483	;# 
 11216   0001E4                     C1FLTOBJ11      equ	484	;# 
 11217   0001E4                     C1FLTOBJ11L     equ	484	;# 
 11218   0001E5                     C1FLTOBJ11H     equ	485	;# 
 11219   0001E6                     C1FLTOBJ11U     equ	486	;# 
 11220   0001E7                     C1FLTOBJ11T     equ	487	;# 
 11221   0001E8                     C1MASK11        equ	488	;# 
 11222   0001E8                     C1MASK11L       equ	488	;# 
 11223   0001E9                     C1MASK11H       equ	489	;# 
 11224   0001EA                     C1MASK11U       equ	490	;# 
 11225   0001EB                     C1MASK11T       equ	491	;# 
 11226   000200                     PPSLOCK         equ	512	;# 
 11227   000201                     RA0PPS          equ	513	;# 
 11228   000202                     RA1PPS          equ	514	;# 
 11229   000203                     RA2PPS          equ	515	;# 
 11230   000204                     RA3PPS          equ	516	;# 
 11231   000205                     RA4PPS          equ	517	;# 
 11232   000206                     RA5PPS          equ	518	;# 
 11233   000207                     RA6PPS          equ	519	;# 
 11234   000208                     RA7PPS          equ	520	;# 
 11235   000209                     RB0PPS          equ	521	;# 
 11236   00020A                     RB1PPS          equ	522	;# 
 11237   00020B                     RB2PPS          equ	523	;# 
 11238   00020C                     RB3PPS          equ	524	;# 
 11239   00020D                     RB4PPS          equ	525	;# 
 11240   00020E                     RB5PPS          equ	526	;# 
 11241   00020F                     RB6PPS          equ	527	;# 
 11242   000210                     RB7PPS          equ	528	;# 
 11243   000211                     RC0PPS          equ	529	;# 
 11244   000212                     RC1PPS          equ	530	;# 
 11245   000213                     RC2PPS          equ	531	;# 
 11246   000214                     RC3PPS          equ	532	;# 
 11247   000215                     RC4PPS          equ	533	;# 
 11248   000216                     RC5PPS          equ	534	;# 
 11249   000217                     RC6PPS          equ	535	;# 
 11250   000218                     RC7PPS          equ	536	;# 
 11251   00023D                     CANRXPPS        equ	573	;# 
 11252   00023E                     INT0PPS         equ	574	;# 
 11253   00023F                     INT1PPS         equ	575	;# 
 11254   000240                     INT2PPS         equ	576	;# 
 11255   000241                     T0CKIPPS        equ	577	;# 
 11256   000242                     T1CKIPPS        equ	578	;# 
 11257   000243                     T1GPPS          equ	579	;# 
 11258   000244                     T3CKIPPS        equ	580	;# 
 11259   000245                     T3GPPS          equ	581	;# 
 11260   000246                     T5CKIPPS        equ	582	;# 
 11261   000247                     T5GPPS          equ	583	;# 
 11262   000248                     T2INPPS         equ	584	;# 
 11263   000249                     T4INPPS         equ	585	;# 
 11264   00024A                     T6INPPS         equ	586	;# 
 11265   00024B                     TUIN0PPS        equ	587	;# 
 11266   00024C                     TUIN1PPS        equ	588	;# 
 11267   00024F                     CCP1PPS         equ	591	;# 
 11268   000250                     CCP2PPS         equ	592	;# 
 11269   000251                     CCP3PPS         equ	593	;# 
 11270   000253                     PWM1ERSPPS      equ	595	;# 
 11271   000254                     PWM2ERSPPS      equ	596	;# 
 11272   000255                     PWM3ERSPPS      equ	597	;# 
 11273   000256                     PWM4ERSPPS      equ	598	;# 
 11274   000257                     PWMIN0PPS       equ	599	;# 
 11275   000258                     PWMIN1PPS       equ	600	;# 
 11276   000259                     SMT1WINPPS      equ	601	;# 
 11277   00025A                     SMT1SIGPPS      equ	602	;# 
 11278   00025B                     CWG1PPS         equ	603	;# 
 11279   00025B                     CWG1INPPS       equ	603	;# 
 11280   00025C                     CWG2PPS         equ	604	;# 
 11281   00025C                     CWG2INPPS       equ	604	;# 
 11282   00025D                     CWG3PPS         equ	605	;# 
 11283   00025D                     CWG3INPPS       equ	605	;# 
 11284   00025E                     MD1CARLPPS      equ	606	;# 
 11285   00025E                     MDCARLPPS       equ	606	;# 
 11286   00025F                     MD1CARHPPS      equ	607	;# 
 11287   00025F                     MDCARHPPS       equ	607	;# 
 11288   000260                     MD1SRCPPS       equ	608	;# 
 11289   000260                     MDSRCPPS        equ	608	;# 
 11290   000261                     CLCIN0PPS       equ	609	;# 
 11291   000262                     CLCIN1PPS       equ	610	;# 
 11292   000263                     CLCIN2PPS       equ	611	;# 
 11293   000264                     CLCIN3PPS       equ	612	;# 
 11294   000265                     CLCIN4PPS       equ	613	;# 
 11295   000266                     CLCIN5PPS       equ	614	;# 
 11296   000267                     CLCIN6PPS       equ	615	;# 
 11297   000268                     CLCIN7PPS       equ	616	;# 
 11298   000269                     ADACTPPS        equ	617	;# 
 11299   00026A                     SPI1SCKPPS      equ	618	;# 
 11300   00026B                     SPI1SDIPPS      equ	619	;# 
 11301   00026C                     SPI1SSPPS       equ	620	;# 
 11302   00026D                     SPI2SCKPPS      equ	621	;# 
 11303   00026E                     SPI2SDIPPS      equ	622	;# 
 11304   00026F                     SPI2SSPPS       equ	623	;# 
 11305   000270                     I2C1SDAPPS      equ	624	;# 
 11306   000271                     I2C1SCLPPS      equ	625	;# 
 11307   000272                     U1RXPPS         equ	626	;# 
 11308   000273                     U1CTSPPS        equ	627	;# 
 11309   000274                     U2RXPPS         equ	628	;# 
 11310   000275                     U2CTSPPS        equ	629	;# 
 11311   000276                     U3RXPPS         equ	630	;# 
 11312   000277                     U3CTSPPS        equ	631	;# 
 11313   000278                     U4RXPPS         equ	632	;# 
 11314   000279                     U4CTSPPS        equ	633	;# 
 11315   00027A                     U5RXPPS         equ	634	;# 
 11316   00027B                     U5CTSPPS        equ	635	;# 
 11317   000286                     RC4I2C          equ	646	;# 
 11318   000287                     RC3I2C          equ	647	;# 
 11319   000288                     RB2I2C          equ	648	;# 
 11320   000289                     RB1I2C          equ	649	;# 
 11321   00028A                     I2C1RXB         equ	650	;# 
 11322   00028B                     I2C1TXB         equ	651	;# 
 11323   00028C                     I2C1CNTL        equ	652	;# 
 11324   00028D                     I2C1CNTH        equ	653	;# 
 11325   00028E                     I2C1ADB0        equ	654	;# 
 11326   00028F                     I2C1ADB1        equ	655	;# 
 11327   000290                     I2C1ADR0        equ	656	;# 
 11328   000291                     I2C1ADR1        equ	657	;# 
 11329   000292                     I2C1ADR2        equ	658	;# 
 11330   000293                     I2C1ADR3        equ	659	;# 
 11331   000294                     I2C1CON0        equ	660	;# 
 11332   000295                     I2C1CON1        equ	661	;# 
 11333   000296                     I2C1CON2        equ	662	;# 
 11334   000297                     I2C1ERR         equ	663	;# 
 11335   000298                     I2C1STAT0       equ	664	;# 
 11336   000299                     I2C1STAT1       equ	665	;# 
 11337   00029A                     I2C1PIR         equ	666	;# 
 11338   00029B                     I2C1PIE         equ	667	;# 
 11339   00029C                     I2C1BTO         equ	668	;# 
 11340   00029D                     I2C1BAUD        equ	669	;# 
 11341   00029E                     I2C1CLK         equ	670	;# 
 11342   00029F                     I2C1BTOC        equ	671	;# 
 11343   0002A1                     U1RXB           equ	673	;# 
 11344   0002A1                     U1RXBL          equ	673	;# 
 11345   0002A2                     U1RXCHK         equ	674	;# 
 11346   0002A3                     U1TXB           equ	675	;# 
 11347   0002A3                     U1TXBL          equ	675	;# 
 11348   0002A4                     U1TXCHK         equ	676	;# 
 11349   0002A5                     U1P1            equ	677	;# 
 11350   0002A5                     U1P1L           equ	677	;# 
 11351   0002A6                     U1P1H           equ	678	;# 
 11352   0002A7                     U1P2            equ	679	;# 
 11353   0002A7                     U1P2L           equ	679	;# 
 11354   0002A8                     U1P2H           equ	680	;# 
 11355   0002A9                     U1P3            equ	681	;# 
 11356   0002A9                     U1P3L           equ	681	;# 
 11357   0002AA                     U1P3H           equ	682	;# 
 11358   0002AB                     U1CON0          equ	683	;# 
 11359   0002AC                     U1CON1          equ	684	;# 
 11360   0002AD                     U1CON2          equ	685	;# 
 11361   0002AE                     U1BRG           equ	686	;# 
 11362   0002AE                     U1BRGL          equ	686	;# 
 11363   0002AF                     U1BRGH          equ	687	;# 
 11364   0002B0                     U1FIFO          equ	688	;# 
 11365   0002B1                     U1UIR           equ	689	;# 
 11366   0002B2                     U1ERRIR         equ	690	;# 
 11367   0002B3                     U1ERRIE         equ	691	;# 
 11368   0002B4                     U2RXB           equ	692	;# 
 11369   0002B4                     U2RXBL          equ	692	;# 
 11370   0002B5                     U2RXCHK         equ	693	;# 
 11371   0002B6                     U2TXB           equ	694	;# 
 11372   0002B6                     U2TXBL          equ	694	;# 
 11373   0002B7                     U2TXCHK         equ	695	;# 
 11374   0002B8                     U2P1            equ	696	;# 
 11375   0002B8                     U2P1L           equ	696	;# 
 11376   0002B9                     U2P1H           equ	697	;# 
 11377   0002BA                     U2P2            equ	698	;# 
 11378   0002BA                     U2P2L           equ	698	;# 
 11379   0002BB                     U2P2H           equ	699	;# 
 11380   0002BC                     U2P3            equ	700	;# 
 11381   0002BC                     U2P3L           equ	700	;# 
 11382   0002BD                     U2P3H           equ	701	;# 
 11383   0002BE                     U2CON0          equ	702	;# 
 11384   0002BF                     U2CON1          equ	703	;# 
 11385   0002C0                     U2CON2          equ	704	;# 
 11386   0002C1                     U2BRG           equ	705	;# 
 11387   0002C1                     U2BRGL          equ	705	;# 
 11388   0002C2                     U2BRGH          equ	706	;# 
 11389   0002C3                     U2FIFO          equ	707	;# 
 11390   0002C4                     U2UIR           equ	708	;# 
 11391   0002C5                     U2ERRIR         equ	709	;# 
 11392   0002C6                     U2ERRIE         equ	710	;# 
 11393   0002C7                     U3RXB           equ	711	;# 
 11394   0002C7                     U3RXBL          equ	711	;# 
 11395   0002C9                     U3TXB           equ	713	;# 
 11396   0002C9                     U3TXBL          equ	713	;# 
 11397   0002CB                     U3P1            equ	715	;# 
 11398   0002CB                     U3P1L           equ	715	;# 
 11399   0002CD                     U3P2            equ	717	;# 
 11400   0002CD                     U3P2L           equ	717	;# 
 11401   0002CF                     U3P3            equ	719	;# 
 11402   0002CF                     U3P3L           equ	719	;# 
 11403   0002D1                     U3CON0          equ	721	;# 
 11404   0002D2                     U3CON1          equ	722	;# 
 11405   0002D3                     U3CON2          equ	723	;# 
 11406   0002D4                     U3BRG           equ	724	;# 
 11407   0002D4                     U3BRGL          equ	724	;# 
 11408   0002D5                     U3BRGH          equ	725	;# 
 11409   0002D6                     U3FIFO          equ	726	;# 
 11410   0002D7                     U3UIR           equ	727	;# 
 11411   0002D8                     U3ERRIR         equ	728	;# 
 11412   0002D9                     U3ERRIE         equ	729	;# 
 11413   0002DA                     U4RXB           equ	730	;# 
 11414   0002DA                     U4RXBL          equ	730	;# 
 11415   0002DC                     U4TXB           equ	732	;# 
 11416   0002DC                     U4TXBL          equ	732	;# 
 11417   0002DE                     U4P1            equ	734	;# 
 11418   0002DE                     U4P1L           equ	734	;# 
 11419   0002E0                     U4P2            equ	736	;# 
 11420   0002E0                     U4P2L           equ	736	;# 
 11421   0002E2                     U4P3            equ	738	;# 
 11422   0002E2                     U4P3L           equ	738	;# 
 11423   0002E4                     U4CON0          equ	740	;# 
 11424   0002E5                     U4CON1          equ	741	;# 
 11425   0002E6                     U4CON2          equ	742	;# 
 11426   0002E7                     U4BRG           equ	743	;# 
 11427   0002E7                     U4BRGL          equ	743	;# 
 11428   0002E8                     U4BRGH          equ	744	;# 
 11429   0002E9                     U4FIFO          equ	745	;# 
 11430   0002EA                     U4UIR           equ	746	;# 
 11431   0002EB                     U4ERRIR         equ	747	;# 
 11432   0002EC                     U4ERRIE         equ	748	;# 
 11433   0002ED                     U5RXB           equ	749	;# 
 11434   0002ED                     U5RXBL          equ	749	;# 
 11435   0002EF                     U5TXB           equ	751	;# 
 11436   0002EF                     U5TXBL          equ	751	;# 
 11437   0002F1                     U5P1            equ	753	;# 
 11438   0002F1                     U5P1L           equ	753	;# 
 11439   0002F3                     U5P2            equ	755	;# 
 11440   0002F3                     U5P2L           equ	755	;# 
 11441   0002F5                     U5P3            equ	757	;# 
 11442   0002F5                     U5P3L           equ	757	;# 
 11443   0002F7                     U5CON0          equ	759	;# 
 11444   0002F8                     U5CON1          equ	760	;# 
 11445   0002F9                     U5CON2          equ	761	;# 
 11446   0002FA                     U5BRG           equ	762	;# 
 11447   0002FA                     U5BRGL          equ	762	;# 
 11448   0002FB                     U5BRGH          equ	763	;# 
 11449   0002FC                     U5FIFO          equ	764	;# 
 11450   0002FD                     U5UIR           equ	765	;# 
 11451   0002FE                     U5ERRIR         equ	766	;# 
 11452   0002FF                     U5ERRIE         equ	767	;# 
 11453   000300                     SMT1TMR         equ	768	;# 
 11454   000300                     SMT1TMRL        equ	768	;# 
 11455   000301                     SMT1TMRH        equ	769	;# 
 11456   000302                     SMT1TMRU        equ	770	;# 
 11457   000303                     SMT1CPR         equ	771	;# 
 11458   000303                     SMT1CPRL        equ	771	;# 
 11459   000304                     SMT1CPRH        equ	772	;# 
 11460   000305                     SMT1CPRU        equ	773	;# 
 11461   000306                     SMT1CPW         equ	774	;# 
 11462   000306                     SMT1CPWL        equ	774	;# 
 11463   000307                     SMT1CPWH        equ	775	;# 
 11464   000308                     SMT1CPWU        equ	776	;# 
 11465   000309                     SMT1PR          equ	777	;# 
 11466   000309                     SMT1PRL         equ	777	;# 
 11467   00030A                     SMT1PRH         equ	778	;# 
 11468   00030B                     SMT1PRU         equ	779	;# 
 11469   00030C                     SMT1CON0        equ	780	;# 
 11470   00030D                     SMT1CON1        equ	781	;# 
 11471   00030E                     SMT1STAT        equ	782	;# 
 11472   00030F                     SMT1CLK         equ	783	;# 
 11473   000310                     SMT1SIG         equ	784	;# 
 11474   000311                     SMT1WIN         equ	785	;# 
 11475   000318                     TMR0L           equ	792	;# 
 11476   000318                     TMR0            equ	792	;# 
 11477   000319                     TMR0H           equ	793	;# 
 11478   000319                     PR0             equ	793	;# 
 11479   00031A                     T0CON0          equ	794	;# 
 11480   00031B                     T0CON1          equ	795	;# 
 11481   00031C                     TMR1            equ	796	;# 
 11482   00031C                     TMR1L           equ	796	;# 
 11483   00031D                     TMR1H           equ	797	;# 
 11484   00031E                     T1CON           equ	798	;# 
 11485   00031E                     TMR1CON         equ	798	;# 
 11486   00031F                     T1GCON          equ	799	;# 
 11487   00031F                     TMR1GCON        equ	799	;# 
 11488   000320                     T1GATE          equ	800	;# 
 11489   000320                     TMR1GATE        equ	800	;# 
 11490   000321                     T1CLK           equ	801	;# 
 11491   000321                     TMR1CLK         equ	801	;# 
 11492   000321                     PR1             equ	801	;# 
 11493   000322                     T2TMR           equ	802	;# 
 11494   000322                     TMR2            equ	802	;# 
 11495   000323                     T2PR            equ	803	;# 
 11496   000323                     PR2             equ	803	;# 
 11497   000324                     T2CON           equ	804	;# 
 11498   000325                     T2HLT           equ	805	;# 
 11499   000326                     T2CLKCON        equ	806	;# 
 11500   000326                     T2CLK           equ	806	;# 
 11501   000327                     T2RST           equ	807	;# 
 11502   000328                     TMR3            equ	808	;# 
 11503   000328                     TMR3L           equ	808	;# 
 11504   000329                     TMR3H           equ	809	;# 
 11505   00032A                     T3CON           equ	810	;# 
 11506   00032A                     TMR3CON         equ	810	;# 
 11507   00032B                     T3GCON          equ	811	;# 
 11508   00032B                     TMR3GCON        equ	811	;# 
 11509   00032C                     T3GATE          equ	812	;# 
 11510   00032C                     TMR3GATE        equ	812	;# 
 11511   00032D                     T3CLK           equ	813	;# 
 11512   00032D                     TMR3CLK         equ	813	;# 
 11513   00032D                     PR3             equ	813	;# 
 11514   00032E                     T4TMR           equ	814	;# 
 11515   00032E                     TMR4            equ	814	;# 
 11516   00032F                     T4PR            equ	815	;# 
 11517   00032F                     PR4             equ	815	;# 
 11518   000330                     T4CON           equ	816	;# 
 11519   000331                     T4HLT           equ	817	;# 
 11520   000332                     T4CLKCON        equ	818	;# 
 11521   000332                     T4CLK           equ	818	;# 
 11522   000333                     T4RST           equ	819	;# 
 11523   000334                     TMR5            equ	820	;# 
 11524   000334                     TMR5L           equ	820	;# 
 11525   000335                     TMR5H           equ	821	;# 
 11526   000336                     T5CON           equ	822	;# 
 11527   000336                     TMR5CON         equ	822	;# 
 11528   000337                     T5GCON          equ	823	;# 
 11529   000337                     TMR5GCON        equ	823	;# 
 11530   000338                     T5GATE          equ	824	;# 
 11531   000338                     TMR5GATE        equ	824	;# 
 11532   000339                     T5CLK           equ	825	;# 
 11533   000339                     TMR5CLK         equ	825	;# 
 11534   000339                     PR5             equ	825	;# 
 11535   00033A                     T6TMR           equ	826	;# 
 11536   00033A                     TMR6            equ	826	;# 
 11537   00033B                     T6PR            equ	827	;# 
 11538   00033B                     PR6             equ	827	;# 
 11539   00033C                     T6CON           equ	828	;# 
 11540   00033D                     T6HLT           equ	829	;# 
 11541   00033E                     T6CLKCON        equ	830	;# 
 11542   00033E                     T6CLK           equ	830	;# 
 11543   00033F                     T6RST           equ	831	;# 
 11544   000340                     CCPR1           equ	832	;# 
 11545   000340                     CCPR1L          equ	832	;# 
 11546   000341                     CCPR1H          equ	833	;# 
 11547   000342                     CCP1CON         equ	834	;# 
 11548   000343                     CCP1CAP         equ	835	;# 
 11549   000344                     CCPR2           equ	836	;# 
 11550   000344                     CCPR2L          equ	836	;# 
 11551   000345                     CCPR2H          equ	837	;# 
 11552   000346                     CCP2CON         equ	838	;# 
 11553   000347                     CCP2CAP         equ	839	;# 
 11554   000348                     CCPR3           equ	840	;# 
 11555   000348                     CCPR3L          equ	840	;# 
 11556   000349                     CCPR3H          equ	841	;# 
 11557   00034A                     CCP3CON         equ	842	;# 
 11558   00034B                     CCP3CAP         equ	843	;# 
 11559   00034C                     CCPTMRS0        equ	844	;# 
 11560   00034F                     CRCDATA         equ	847	;# 
 11561   00034F                     CRCDATAL        equ	847	;# 
 11562   000350                     CRCDATAH        equ	848	;# 
 11563   000351                     CRCDATAU        equ	849	;# 
 11564   000352                     CRCDATAT        equ	850	;# 
 11565   000353                     CRCOUT          equ	851	;# 
 11566   000353                     CRCSHFT         equ	851	;# 
 11567   000353                     CRCXOR          equ	851	;# 
 11568   000353                     CRCOUTL         equ	851	;# 
 11569   000353                     CRCSHFTL        equ	851	;# 
 11570   000353                     CRCSHIFTL       equ	851	;# 
 11571   000353                     CRCXORL         equ	851	;# 
 11572   000354                     CRCOUTH         equ	852	;# 
 11573   000354                     CRCSHFTH        equ	852	;# 
 11574   000354                     CRCSHIFTH       equ	852	;# 
 11575   000354                     CRCXORH         equ	852	;# 
 11576   000355                     CRCOUTU         equ	853	;# 
 11577   000355                     CRCSHFTU        equ	853	;# 
 11578   000355                     CRCSHIFTU       equ	853	;# 
 11579   000355                     CRCXORU         equ	853	;# 
 11580   000356                     CRCOUTT         equ	854	;# 
 11581   000356                     CRCSHFTT        equ	854	;# 
 11582   000356                     CRCSHIFTT       equ	854	;# 
 11583   000356                     CRCXORT         equ	854	;# 
 11584   000357                     CRCCON0         equ	855	;# 
 11585   000358                     CRCCON1         equ	856	;# 
 11586   000359                     CRCCON2         equ	857	;# 
 11587   00035A                     SCANLADR        equ	858	;# 
 11588   00035A                     SCANLADRL       equ	858	;# 
 11589   00035B                     SCANLADRH       equ	859	;# 
 11590   00035C                     SCANLADRU       equ	860	;# 
 11591   00035D                     SCANHADR        equ	861	;# 
 11592   00035D                     SCANHADRL       equ	861	;# 
 11593   00035E                     SCANHADRH       equ	862	;# 
 11594   00035F                     SCANHADRU       equ	863	;# 
 11595   000360                     SCANCON0        equ	864	;# 
 11596   000361                     SCANTRIG        equ	865	;# 
 11597   000362                     IPR0            equ	866	;# 
 11598   000363                     IPR1            equ	867	;# 
 11599   000364                     IPR2            equ	868	;# 
 11600   000365                     IPR3            equ	869	;# 
 11601   000366                     IPR4            equ	870	;# 
 11602   000367                     IPR5            equ	871	;# 
 11603   000368                     IPR6            equ	872	;# 
 11604   000369                     IPR7            equ	873	;# 
 11605   00036A                     IPR8            equ	874	;# 
 11606   00036B                     IPR9            equ	875	;# 
 11607   00036C                     IPR10           equ	876	;# 
 11608   00036D                     IPR11           equ	877	;# 
 11609   00036E                     IPR12           equ	878	;# 
 11610   00036F                     IPR13           equ	879	;# 
 11611   000370                     IPR14           equ	880	;# 
 11612   000371                     IPR15           equ	881	;# 
 11613   000373                     STATUS_CSHAD    equ	883	;# 
 11614   000374                     WREG_CSHAD      equ	884	;# 
 11615   000375                     BSR_CSHAD       equ	885	;# 
 11616   000376                     SHADCON         equ	886	;# 
 11617   000377                     STATUS_SHAD     equ	887	;# 
 11618   000378                     WREG_SHAD       equ	888	;# 
 11619   000379                     BSR_SHAD        equ	889	;# 
 11620   00037A                     PCLATH_SHAD     equ	890	;# 
 11621   00037B                     PCLATU_SHAD     equ	891	;# 
 11622   00037C                     FSR0SH          equ	892	;# 
 11623   00037C                     FSR0L_SHAD      equ	892	;# 
 11624   00037D                     FSR0H_SHAD      equ	893	;# 
 11625   00037E                     FSR1SH          equ	894	;# 
 11626   00037E                     FSR1L_SHAD      equ	894	;# 
 11627   00037F                     FSR1H_SHAD      equ	895	;# 
 11628   000380                     FSR2SH          equ	896	;# 
 11629   000380                     FSR2L_SHAD      equ	896	;# 
 11630   000381                     FSR2H_SHAD      equ	897	;# 
 11631   000382                     PRODSH          equ	898	;# 
 11632   000382                     PRODL_SHAD      equ	898	;# 
 11633   000383                     PRODH_SHAD      equ	899	;# 
 11634   000387                     TU16ACON0       equ	903	;# 
 11635   000388                     TU16ACON1       equ	904	;# 
 11636   000389                     TU16AHLT        equ	905	;# 
 11637   00038A                     TU16APS         equ	906	;# 
 11638   00038B                     TU16ATMR        equ	907	;# 
 11639   00038B                     TU16ACR         equ	907	;# 
 11640   00038B                     TU16ATMRL       equ	907	;# 
 11641   00038B                     TU16ACRL        equ	907	;# 
 11642   00038C                     TU16ATMRH       equ	908	;# 
 11643   00038C                     TU16ACRH        equ	908	;# 
 11644   00038D                     TU16APR         equ	909	;# 
 11645   00038D                     TU16APRL        equ	909	;# 
 11646   00038E                     TU16APRH        equ	910	;# 
 11647   00038F                     TU16ACLK        equ	911	;# 
 11648   000390                     TU16AERS        equ	912	;# 
 11649   000393                     TU16BCON0       equ	915	;# 
 11650   000394                     TU16BCON1       equ	916	;# 
 11651   000395                     TU16BHLT        equ	917	;# 
 11652   000396                     TU16BPS         equ	918	;# 
 11653   000397                     TU16BTMR        equ	919	;# 
 11654   000397                     TU16BCR         equ	919	;# 
 11655   000397                     TU16BTMRL       equ	919	;# 
 11656   000397                     TU16BCRL        equ	919	;# 
 11657   000398                     TU16BTMRH       equ	920	;# 
 11658   000398                     TU16BCRH        equ	920	;# 
 11659   000399                     TU16BPR         equ	921	;# 
 11660   000399                     TU16BPRL        equ	921	;# 
 11661   00039A                     TU16BPRH        equ	922	;# 
 11662   00039B                     TU16BCLK        equ	923	;# 
 11663   00039C                     TU16BERS        equ	924	;# 
 11664   0003BB                     TUCHAIN         equ	955	;# 
 11665   0003BC                     CWG1CLK         equ	956	;# 
 11666   0003BC                     CWG1CLKCON      equ	956	;# 
 11667   0003BD                     CWG1ISM         equ	957	;# 
 11668   0003BE                     CWG1DBR         equ	958	;# 
 11669   0003BF                     CWG1DBF         equ	959	;# 
 11670   0003C0                     CWG1CON0        equ	960	;# 
 11671   0003C1                     CWG1CON1        equ	961	;# 
 11672   0003C2                     CWG1AS0         equ	962	;# 
 11673   0003C3                     CWG1AS1         equ	963	;# 
 11674   0003C4                     CWG1STR         equ	964	;# 
 11675   0003C5                     CWG2CLK         equ	965	;# 
 11676   0003C5                     CWG2CLKCON      equ	965	;# 
 11677   0003C6                     CWG2ISM         equ	966	;# 
 11678   0003C7                     CWG2DBR         equ	967	;# 
 11679   0003C8                     CWG2DBF         equ	968	;# 
 11680   0003C9                     CWG2CON0        equ	969	;# 
 11681   0003CA                     CWG2CON1        equ	970	;# 
 11682   0003CB                     CWG2AS0         equ	971	;# 
 11683   0003CC                     CWG2AS1         equ	972	;# 
 11684   0003CD                     CWG2STR         equ	973	;# 
 11685   0003CE                     CWG3CLK         equ	974	;# 
 11686   0003CE                     CWG3CLKCON      equ	974	;# 
 11687   0003CF                     CWG3ISM         equ	975	;# 
 11688   0003D0                     CWG3DBR         equ	976	;# 
 11689   0003D1                     CWG3DBF         equ	977	;# 
 11690   0003D2                     CWG3CON0        equ	978	;# 
 11691   0003D3                     CWG3CON1        equ	979	;# 
 11692   0003D4                     CWG3AS0         equ	980	;# 
 11693   0003D5                     CWG3AS1         equ	981	;# 
 11694   0003D6                     CWG3STR         equ	982	;# 
 11695   0003D7                     FVRCON          equ	983	;# 
 11696   0003D8                     ADCPCON         equ	984	;# 
 11697   0003D8                     ADCP            equ	984	;# 
 11698   0003D9                     ADLTH           equ	985	;# 
 11699   0003D9                     ADLTHL          equ	985	;# 
 11700   0003DA                     ADLTHH          equ	986	;# 
 11701   0003DB                     ADUTH           equ	987	;# 
 11702   0003DB                     ADUTHL          equ	987	;# 
 11703   0003DC                     ADUTHH          equ	988	;# 
 11704   0003DD                     ADERR           equ	989	;# 
 11705   0003DD                     ADERRL          equ	989	;# 
 11706   0003DE                     ADERRH          equ	990	;# 
 11707   0003DF                     ADSTPT          equ	991	;# 
 11708   0003DF                     ADSTPTL         equ	991	;# 
 11709   0003E0                     ADSTPTH         equ	992	;# 
 11710   0003E1                     ADFLTR          equ	993	;# 
 11711   0003E1                     ADFLTRL         equ	993	;# 
 11712   0003E2                     ADFLTRH         equ	994	;# 
 11713   0003E3                     ADACC           equ	995	;# 
 11714   0003E3                     ADACCL          equ	995	;# 
 11715   0003E4                     ADACCH          equ	996	;# 
 11716   0003E5                     ADACCU          equ	997	;# 
 11717   0003E6                     ADCNT           equ	998	;# 
 11718   0003E7                     ADRPT           equ	999	;# 
 11719   0003E8                     ADPREV          equ	1000	;# 
 11720   0003E8                     ADPREVL         equ	1000	;# 
 11721   0003E9                     ADPREVH         equ	1001	;# 
 11722   0003EA                     ADRES           equ	1002	;# 
 11723   0003EA                     ADRESL          equ	1002	;# 
 11724   0003EB                     ADRESH          equ	1003	;# 
 11725   0003EC                     ADPCH           equ	1004	;# 
 11726   0003EE                     ADACQ           equ	1006	;# 
 11727   0003EE                     ADACQL          equ	1006	;# 
 11728   0003EF                     ADACQH          equ	1007	;# 
 11729   0003F0                     ADCAP           equ	1008	;# 
 11730   0003F1                     ADPRE           equ	1009	;# 
 11731   0003F1                     ADPREL          equ	1009	;# 
 11732   0003F2                     ADPREH          equ	1010	;# 
 11733   0003F3                     ADCON0          equ	1011	;# 
 11734   0003F4                     ADCON1          equ	1012	;# 
 11735   0003F5                     ADCON2          equ	1013	;# 
 11736   0003F6                     ADCON3          equ	1014	;# 
 11737   0003F7                     ADSTAT          equ	1015	;# 
 11738   0003F8                     ADREF           equ	1016	;# 
 11739   0003F9                     ADACT           equ	1017	;# 
 11740   0003FA                     ADCLK           equ	1018	;# 
 11741   0003FB                     ADCTX           equ	1019	;# 
 11742   0003FC                     ADCSEL1         equ	1020	;# 
 11743   0003FD                     ADCSEL2         equ	1021	;# 
 11744   0003FE                     ADCSEL3         equ	1022	;# 
 11745   0003FF                     ADCSEL4         equ	1023	;# 
 11746   000400                     ANSELA          equ	1024	;# 
 11747   000401                     WPUA            equ	1025	;# 
 11748   000402                     ODCONA          equ	1026	;# 
 11749   000403                     SLRCONA         equ	1027	;# 
 11750   000404                     INLVLA          equ	1028	;# 
 11751   000405                     IOCAP           equ	1029	;# 
 11752   000406                     IOCAN           equ	1030	;# 
 11753   000407                     IOCAF           equ	1031	;# 
 11754   000408                     ANSELB          equ	1032	;# 
 11755   000409                     WPUB            equ	1033	;# 
 11756   00040A                     ODCONB          equ	1034	;# 
 11757   00040B                     SLRCONB         equ	1035	;# 
 11758   00040C                     INLVLB          equ	1036	;# 
 11759   00040D                     IOCBP           equ	1037	;# 
 11760   00040E                     IOCBN           equ	1038	;# 
 11761   00040F                     IOCBF           equ	1039	;# 
 11762   000410                     ANSELC          equ	1040	;# 
 11763   000411                     WPUC            equ	1041	;# 
 11764   000412                     ODCONC          equ	1042	;# 
 11765   000413                     SLRCONC         equ	1043	;# 
 11766   000414                     INLVLC          equ	1044	;# 
 11767   000415                     IOCCP           equ	1045	;# 
 11768   000416                     IOCCN           equ	1046	;# 
 11769   000417                     IOCCF           equ	1047	;# 
 11770   000421                     WPUE            equ	1057	;# 
 11771   000424                     INLVLE          equ	1060	;# 
 11772   000425                     IOCEP           equ	1061	;# 
 11773   000426                     IOCEN           equ	1062	;# 
 11774   000427                     IOCEF           equ	1063	;# 
 11775   000440                     NCO1ACC         equ	1088	;# 
 11776   000440                     NCO1ACCL        equ	1088	;# 
 11777   000441                     NCO1ACCH        equ	1089	;# 
 11778   000442                     NCO1ACCU        equ	1090	;# 
 11779   000443                     NCO1INC         equ	1091	;# 
 11780   000443                     NCO1INCL        equ	1091	;# 
 11781   000444                     NCO1INCH        equ	1092	;# 
 11782   000445                     NCO1INCU        equ	1093	;# 
 11783   000446                     NCO1CON         equ	1094	;# 
 11784   000447                     NCO1CLK         equ	1095	;# 
 11785   000448                     NCO2ACC         equ	1096	;# 
 11786   000448                     NCO2ACCL        equ	1096	;# 
 11787   000449                     NCO2ACCH        equ	1097	;# 
 11788   00044A                     NCO2ACCU        equ	1098	;# 
 11789   00044B                     NCO2INC         equ	1099	;# 
 11790   00044B                     NCO2INCL        equ	1099	;# 
 11791   00044C                     NCO2INCH        equ	1100	;# 
 11792   00044D                     NCO2INCU        equ	1101	;# 
 11793   00044E                     NCO2CON         equ	1102	;# 
 11794   00044F                     NCO2CLK         equ	1103	;# 
 11795   000450                     NCO3ACC         equ	1104	;# 
 11796   000450                     NCO3ACCL        equ	1104	;# 
 11797   000451                     NCO3ACCH        equ	1105	;# 
 11798   000452                     NCO3ACCU        equ	1106	;# 
 11799   000453                     NCO3INC         equ	1107	;# 
 11800   000453                     NCO3INCL        equ	1107	;# 
 11801   000454                     NCO3INCH        equ	1108	;# 
 11802   000455                     NCO3INCU        equ	1109	;# 
 11803   000456                     NCO3CON         equ	1110	;# 
 11804   000457                     NCO3CLK         equ	1111	;# 
 11805   000458                     FSCMCON         equ	1112	;# 
 11806   000459                     IVTLOCK         equ	1113	;# 
 11807   00045A                     IVTAD           equ	1114	;# 
 11808   00045A                     IVTADL          equ	1114	;# 
 11809   00045B                     IVTADH          equ	1115	;# 
 11810   00045C                     IVTADU          equ	1116	;# 
 11811   00045D                     IVTBASE         equ	1117	;# 
 11812   00045D                     IVTBASEL        equ	1117	;# 
 11813   00045E                     IVTBASEH        equ	1118	;# 
 11814   00045F                     IVTBASEU        equ	1119	;# 
 11815   000460                     PWM1ERS         equ	1120	;# 
 11816   000461                     PWM1CLK         equ	1121	;# 
 11817   000462                     PWM1LDS         equ	1122	;# 
 11818   000463                     PWM1PR          equ	1123	;# 
 11819   000463                     PWM1PRL         equ	1123	;# 
 11820   000464                     PWM1PRH         equ	1124	;# 
 11821   000465                     PWM1CPRE        equ	1125	;# 
 11822   000466                     PWM1PIPOS       equ	1126	;# 
 11823   000467                     PWM1GIR         equ	1127	;# 
 11824   000468                     PWM1GIE         equ	1128	;# 
 11825   000469                     PWM1CON         equ	1129	;# 
 11826   00046A                     PWM1S1CFG       equ	1130	;# 
 11827   00046B                     PWM1S1P1        equ	1131	;# 
 11828   00046B                     PWM1S1P1L       equ	1131	;# 
 11829   00046C                     PWM1S1P1H       equ	1132	;# 
 11830   00046D                     PWM1S1P2        equ	1133	;# 
 11831   00046D                     PWM1S1P2L       equ	1133	;# 
 11832   00046E                     PWM1S1P2H       equ	1134	;# 
 11833   00046F                     PWM2ERS         equ	1135	;# 
 11834   000470                     PWM2CLK         equ	1136	;# 
 11835   000471                     PWM2LDS         equ	1137	;# 
 11836   000472                     PWM2PR          equ	1138	;# 
 11837   000472                     PWM2PRL         equ	1138	;# 
 11838   000473                     PWM2PRH         equ	1139	;# 
 11839   000474                     PWM2CPRE        equ	1140	;# 
 11840   000475                     PWM2PIPOS       equ	1141	;# 
 11841   000476                     PWM2GIR         equ	1142	;# 
 11842   000477                     PWM2GIE         equ	1143	;# 
 11843   000478                     PWM2CON         equ	1144	;# 
 11844   000479                     PWM2S1CFG       equ	1145	;# 
 11845   00047A                     PWM2S1P1        equ	1146	;# 
 11846   00047A                     PWM2S1P1L       equ	1146	;# 
 11847   00047B                     PWM2S1P1H       equ	1147	;# 
 11848   00047C                     PWM2S1P2        equ	1148	;# 
 11849   00047C                     PWM2S1P2L       equ	1148	;# 
 11850   00047D                     PWM2S1P2H       equ	1149	;# 
 11851   00047E                     PWM3ERS         equ	1150	;# 
 11852   00047F                     PWM3CLK         equ	1151	;# 
 11853   000480                     PWM3LDS         equ	1152	;# 
 11854   000481                     PWM3PR          equ	1153	;# 
 11855   000481                     PWM3PRL         equ	1153	;# 
 11856   000482                     PWM3PRH         equ	1154	;# 
 11857   000483                     PWM3CPRE        equ	1155	;# 
 11858   000484                     PWM3PIPOS       equ	1156	;# 
 11859   000485                     PWM3GIR         equ	1157	;# 
 11860   000486                     PWM3GIE         equ	1158	;# 
 11861   000487                     PWM3CON         equ	1159	;# 
 11862   000488                     PWM3S1CFG       equ	1160	;# 
 11863   000489                     PWM3S1P1        equ	1161	;# 
 11864   000489                     PWM3S1P1L       equ	1161	;# 
 11865   00048A                     PWM3S1P1H       equ	1162	;# 
 11866   00048B                     PWM3S1P2        equ	1163	;# 
 11867   00048B                     PWM3S1P2L       equ	1163	;# 
 11868   00048C                     PWM3S1P2H       equ	1164	;# 
 11869   00048D                     PWM4ERS         equ	1165	;# 
 11870   00048E                     PWM4CLK         equ	1166	;# 
 11871   00048F                     PWM4LDS         equ	1167	;# 
 11872   000490                     PWM4PR          equ	1168	;# 
 11873   000490                     PWM4PRL         equ	1168	;# 
 11874   000491                     PWM4PRH         equ	1169	;# 
 11875   000492                     PWM4CPRE        equ	1170	;# 
 11876   000493                     PWM4PIPOS       equ	1171	;# 
 11877   000494                     PWM4GIR         equ	1172	;# 
 11878   000495                     PWM4GIE         equ	1173	;# 
 11879   000496                     PWM4CON         equ	1174	;# 
 11880   000497                     PWM4S1CFG       equ	1175	;# 
 11881   000498                     PWM4S1P1        equ	1176	;# 
 11882   000498                     PWM4S1P1L       equ	1176	;# 
 11883   000499                     PWM4S1P1H       equ	1177	;# 
 11884   00049A                     PWM4S1P2        equ	1178	;# 
 11885   00049A                     PWM4S1P2L       equ	1178	;# 
 11886   00049B                     PWM4S1P2H       equ	1179	;# 
 11887   00049C                     PWMLOAD         equ	1180	;# 
 11888   00049D                     PWMEN           equ	1181	;# 
 11889   00049E                     PIE0            equ	1182	;# 
 11890   00049F                     PIE1            equ	1183	;# 
 11891   0004A0                     PIE2            equ	1184	;# 
 11892   0004A1                     PIE3            equ	1185	;# 
 11893   0004A2                     PIE4            equ	1186	;# 
 11894   0004A3                     PIE5            equ	1187	;# 
 11895   0004A4                     PIE6            equ	1188	;# 
 11896   0004A5                     PIE7            equ	1189	;# 
 11897   0004A6                     PIE8            equ	1190	;# 
 11898   0004A7                     PIE9            equ	1191	;# 
 11899   0004A8                     PIE10           equ	1192	;# 
 11900   0004A9                     PIE11           equ	1193	;# 
 11901   0004AA                     PIE12           equ	1194	;# 
 11902   0004AB                     PIE13           equ	1195	;# 
 11903   0004AC                     PIE14           equ	1196	;# 
 11904   0004AD                     PIE15           equ	1197	;# 
 11905   0004AE                     PIR0            equ	1198	;# 
 11906   0004AF                     PIR1            equ	1199	;# 
 11907   0004B0                     PIR2            equ	1200	;# 
 11908   0004B1                     PIR3            equ	1201	;# 
 11909   0004B2                     PIR4            equ	1202	;# 
 11910   0004B3                     PIR5            equ	1203	;# 
 11911   0004B4                     PIR6            equ	1204	;# 
 11912   0004B5                     PIR7            equ	1205	;# 
 11913   0004B6                     PIR8            equ	1206	;# 
 11914   0004B7                     PIR9            equ	1207	;# 
 11915   0004B8                     PIR10           equ	1208	;# 
 11916   0004B9                     PIR11           equ	1209	;# 
 11917   0004BA                     PIR12           equ	1210	;# 
 11918   0004BB                     PIR13           equ	1211	;# 
 11919   0004BC                     PIR14           equ	1212	;# 
 11920   0004BD                     PIR15           equ	1213	;# 
 11921   0004BE                     LATA            equ	1214	;# 
 11922   0004BF                     LATB            equ	1215	;# 
 11923   0004C0                     LATC            equ	1216	;# 
 11924   0004C6                     TRISA           equ	1222	;# 
 11925   0004C7                     TRISB           equ	1223	;# 
 11926   0004C8                     TRISC           equ	1224	;# 
 11927   0004CA                     TRISE           equ	1226	;# 
 11928   0004CE                     PORTA           equ	1230	;# 
 11929   0004CF                     PORTB           equ	1231	;# 
 11930   0004D0                     PORTC           equ	1232	;# 
 11931   0004D2                     PORTE           equ	1234	;# 
 11932   0004D6                     INTCON0         equ	1238	;# 
 11933   0004D7                     INTCON1         equ	1239	;# 
 11934   0004D8                     STATUS          equ	1240	;# 
 11935   0004D9                     FSR2            equ	1241	;# 
 11936   0004D9                     FSR2L           equ	1241	;# 
 11937   0004DA                     FSR2H           equ	1242	;# 
 11938   0004DB                     PLUSW2          equ	1243	;# 
 11939   0004DC                     PREINC2         equ	1244	;# 
 11940   0004DD                     POSTDEC2        equ	1245	;# 
 11941   0004DE                     POSTINC2        equ	1246	;# 
 11942   0004DF                     INDF2           equ	1247	;# 
 11943   0004E0                     BSR             equ	1248	;# 
 11944   0004E1                     FSR1            equ	1249	;# 
 11945   0004E1                     FSR1L           equ	1249	;# 
 11946   0004E2                     FSR1H           equ	1250	;# 
 11947   0004E3                     PLUSW1          equ	1251	;# 
 11948   0004E4                     PREINC1         equ	1252	;# 
 11949   0004E5                     POSTDEC1        equ	1253	;# 
 11950   0004E6                     POSTINC1        equ	1254	;# 
 11951   0004E7                     INDF1           equ	1255	;# 
 11952   0004E8                     WREG            equ	1256	;# 
 11953   0004E9                     FSR0            equ	1257	;# 
 11954   0004E9                     FSR0L           equ	1257	;# 
 11955   0004EA                     FSR0H           equ	1258	;# 
 11956   0004EB                     PLUSW0          equ	1259	;# 
 11957   0004EC                     PREINC0         equ	1260	;# 
 11958   0004ED                     POSTDEC0        equ	1261	;# 
 11959   0004EE                     POSTINC0        equ	1262	;# 
 11960   0004EF                     INDF0           equ	1263	;# 
 11961   0004F0                     PCON0           equ	1264	;# 
 11962   0004F1                     PCON1           equ	1265	;# 
 11963   0004F2                     CPUDOZE         equ	1266	;# 
 11964   0004F3                     PROD            equ	1267	;# 
 11965   0004F3                     PRODL           equ	1267	;# 
 11966   0004F4                     PRODH           equ	1268	;# 
 11967   0004F5                     TABLAT          equ	1269	;# 
 11968   0004F6                     TBLPTR          equ	1270	;# 
 11969   0004F6                     TBLPTRL         equ	1270	;# 
 11970   0004F7                     TBLPTRH         equ	1271	;# 
 11971   0004F8                     TBLPTRU         equ	1272	;# 
 11972   0004F9                     PCLAT           equ	1273	;# 
 11973   0004F9                     PCL             equ	1273	;# 
 11974   0004FA                     PCLATH          equ	1274	;# 
 11975   0004FB                     PCLATU          equ	1275	;# 
 11976   0004FC                     STKPTR          equ	1276	;# 
 11977   0004FD                     TOS             equ	1277	;# 
 11978   0004FD                     TOSL            equ	1277	;# 
 11979   0004FE                     TOSH            equ	1278	;# 
 11980   0004FF                     TOSU            equ	1279	;# 
 11981   000038                     BOOTREG         equ	56	;# 
 11982   000039                     CLKRCON         equ	57	;# 
 11983   00003A                     CLKRCLK         equ	58	;# 
 11984   000040                     NVMCON0         equ	64	;# 
 11985   000041                     NVMCON1         equ	65	;# 
 11986   000042                     NVMLOCK         equ	66	;# 
 11987   000043                     NVMADR          equ	67	;# 
 11988   000043                     NVMADRL         equ	67	;# 
 11989   000044                     NVMADRH         equ	68	;# 
 11990   000045                     NVMADRU         equ	69	;# 
 11991   000046                     NVMDAT          equ	70	;# 
 11992   000046                     NVMDATL         equ	70	;# 
 11993   000047                     NVMDATH         equ	71	;# 
 11994   000048                     VREGCON         equ	72	;# 
 11995   000049                     BORCON          equ	73	;# 
 11996   00004A                     HLVDCON0        equ	74	;# 
 11997   00004B                     HLVDCON1        equ	75	;# 
 11998   00004C                     ZCDCON          equ	76	;# 
 11999   000060                     PMD0            equ	96	;# 
 12000   000061                     PMD1            equ	97	;# 
 12001   000062                     PMD2            equ	98	;# 
 12002   000063                     PMD3            equ	99	;# 
 12003   000064                     PMD4            equ	100	;# 
 12004   000065                     PMD5            equ	101	;# 
 12005   000066                     PMD6            equ	102	;# 
 12006   000067                     PMD7            equ	103	;# 
 12007   000068                     PMD8            equ	104	;# 
 12008   00006A                     MD1CON0         equ	106	;# 
 12009   00006B                     MD1CON1         equ	107	;# 
 12010   00006C                     MD1SRC          equ	108	;# 
 12011   00006D                     MD1CARL         equ	109	;# 
 12012   00006E                     MD1CARH         equ	110	;# 
 12013   00006F                     CMOUT           equ	111	;# 
 12014   000070                     CM1CON0         equ	112	;# 
 12015   000071                     CM1CON1         equ	113	;# 
 12016   000072                     CM1NCH          equ	114	;# 
 12017   000073                     CM1PCH          equ	115	;# 
 12018   000074                     CM2CON0         equ	116	;# 
 12019   000075                     CM2CON1         equ	117	;# 
 12020   000076                     CM2NCH          equ	118	;# 
 12021   000077                     CM2PCH          equ	119	;# 
 12022   000078                     WDTCON0         equ	120	;# 
 12023   000079                     WDTCON1         equ	121	;# 
 12024   00007A                     WDTPSL          equ	122	;# 
 12025   00007B                     WDTPSH          equ	123	;# 
 12026   00007C                     WDTTMR          equ	124	;# 
 12027   00007D                     DAC1DAT         equ	125	;# 
 12028   00007D                     DAC1DATL        equ	125	;# 
 12029   00007F                     DAC1CON         equ	127	;# 
 12030   000080                     SPI1RXB         equ	128	;# 
 12031   000081                     SPI1TXB         equ	129	;# 
 12032   000082                     SPI1TCNT        equ	130	;# 
 12033   000082                     SPI1TCNTL       equ	130	;# 
 12034   000083                     SPI1TCNTH       equ	131	;# 
 12035   000084                     SPI1CON0        equ	132	;# 
 12036   000085                     SPI1CON1        equ	133	;# 
 12037   000086                     SPI1CON2        equ	134	;# 
 12038   000087                     SPI1STATUS      equ	135	;# 
 12039   000088                     SPI1TWIDTH      equ	136	;# 
 12040   000089                     SPI1BAUD        equ	137	;# 
 12041   00008A                     SPI1INTF        equ	138	;# 
 12042   00008B                     SPI1INTE        equ	139	;# 
 12043   00008C                     SPI1CLK         equ	140	;# 
 12044   00008D                     SPI2RXB         equ	141	;# 
 12045   00008E                     SPI2TXB         equ	142	;# 
 12046   00008F                     SPI2TCNT        equ	143	;# 
 12047   00008F                     SPI2TCNTL       equ	143	;# 
 12048   000090                     SPI2TCNTH       equ	144	;# 
 12049   000091                     SPI2CON0        equ	145	;# 
 12050   000092                     SPI2CON1        equ	146	;# 
 12051   000093                     SPI2CON2        equ	147	;# 
 12052   000094                     SPI2STATUS      equ	148	;# 
 12053   000095                     SPI2TWIDTH      equ	149	;# 
 12054   000096                     SPI2BAUD        equ	150	;# 
 12055   000097                     SPI2INTF        equ	151	;# 
 12056   000098                     SPI2INTE        equ	152	;# 
 12057   000099                     SPI2CLK         equ	153	;# 
 12058   0000AC                     ACTCON          equ	172	;# 
 12059   0000AD                     OSCCON1         equ	173	;# 
 12060   0000AE                     OSCCON2         equ	174	;# 
 12061   0000AF                     OSCCON3         equ	175	;# 
 12062   0000B0                     OSCTUNE         equ	176	;# 
 12063   0000B1                     OSCFRQ          equ	177	;# 
 12064   0000B1                     OSCFREQ         equ	177	;# 
 12065   0000B2                     OSCSTAT         equ	178	;# 
 12066   0000B2                     OSCSTAT1        equ	178	;# 
 12067   0000B3                     OSCEN           equ	179	;# 
 12068   0000B4                     PRLOCK          equ	180	;# 
 12069   0000B5                     SCANPR          equ	181	;# 
 12070   0000B6                     DMA1PR          equ	182	;# 
 12071   0000B7                     DMA2PR          equ	183	;# 
 12072   0000B8                     DMA3PR          equ	184	;# 
 12073   0000B9                     DMA4PR          equ	185	;# 
 12074   0000BA                     DMA5PR          equ	186	;# 
 12075   0000BB                     DMA6PR          equ	187	;# 
 12076   0000BC                     DMA7PR          equ	188	;# 
 12077   0000BD                     DMA8PR          equ	189	;# 
 12078   0000BE                     MAINPR          equ	190	;# 
 12079   0000BF                     ISRPR           equ	191	;# 
 12080   0000D4                     CLCDATA         equ	212	;# 
 12081   0000D5                     CLCSELECT       equ	213	;# 
 12082   0000D6                     CLCnCON         equ	214	;# 
 12083   0000D7                     CLCnPOL         equ	215	;# 
 12084   0000D8                     CLCnSEL0        equ	216	;# 
 12085   0000D9                     CLCnSEL1        equ	217	;# 
 12086   0000DA                     CLCnSEL2        equ	218	;# 
 12087   0000DB                     CLCnSEL3        equ	219	;# 
 12088   0000DC                     CLCnGLS0        equ	220	;# 
 12089   0000DD                     CLCnGLS1        equ	221	;# 
 12090   0000DE                     CLCnGLS2        equ	222	;# 
 12091   0000DF                     CLCnGLS3        equ	223	;# 
 12092   0000E8                     DMASELECT       equ	232	;# 
 12093   0000E9                     DMAnBUF         equ	233	;# 
 12094   0000EA                     DMAnDCNT        equ	234	;# 
 12095   0000EA                     DMAnDCNTL       equ	234	;# 
 12096   0000EB                     DMAnDCNTH       equ	235	;# 
 12097   0000EC                     DMAnDPTR        equ	236	;# 
 12098   0000EC                     DMAnDPTRL       equ	236	;# 
 12099   0000ED                     DMAnDPTRH       equ	237	;# 
 12100   0000EE                     DMAnDSZ         equ	238	;# 
 12101   0000EE                     DMAnDSZL        equ	238	;# 
 12102   0000EF                     DMAnDSZH        equ	239	;# 
 12103   0000F0                     DMAnDSA         equ	240	;# 
 12104   0000F0                     DMAnDSAL        equ	240	;# 
 12105   0000F1                     DMAnDSAH        equ	241	;# 
 12106   0000F2                     DMAnSCNT        equ	242	;# 
 12107   0000F2                     DMAnSCNTL       equ	242	;# 
 12108   0000F3                     DMAnSCNTH       equ	243	;# 
 12109   0000F4                     DMAnSPTR        equ	244	;# 
 12110   0000F4                     DMAnSPTRL       equ	244	;# 
 12111   0000F5                     DMAnSPTRH       equ	245	;# 
 12112   0000F6                     DMAnSPTRU       equ	246	;# 
 12113   0000F7                     DMAnSSZ         equ	247	;# 
 12114   0000F7                     DMAnSSZL        equ	247	;# 
 12115   0000F8                     DMAnSSZH        equ	248	;# 
 12116   0000F9                     DMAnSSA         equ	249	;# 
 12117   0000F9                     DMAnSSAL        equ	249	;# 
 12118   0000FA                     DMAnSSAH        equ	250	;# 
 12119   0000FB                     DMAnSSAU        equ	251	;# 
 12120   0000FC                     DMAnCON0        equ	252	;# 
 12121   0000FD                     DMAnCON1        equ	253	;# 
 12122   0000FE                     DMAnAIRQ        equ	254	;# 
 12123   0000FF                     DMAnSIRQ        equ	255	;# 
 12124   000100                     C1CONL          equ	256	;# 
 12125   000101                     C1CONH          equ	257	;# 
 12126   000102                     C1CONU          equ	258	;# 
 12127   000103                     C1CONT          equ	259	;# 
 12128   000104                     C1NBTCFGL       equ	260	;# 
 12129   000105                     C1NBTCFGH       equ	261	;# 
 12130   000106                     C1NBTCFGU       equ	262	;# 
 12131   000107                     C1NBTCFGT       equ	263	;# 
 12132   000108                     C1DBTCFGL       equ	264	;# 
 12133   000109                     C1DBTCFGH       equ	265	;# 
 12134   00010A                     C1DBTCFGU       equ	266	;# 
 12135   00010B                     C1DBTCFGT       equ	267	;# 
 12136   00010C                     C1TDCL          equ	268	;# 
 12137   00010D                     C1TDCH          equ	269	;# 
 12138   00010E                     C1TDCU          equ	270	;# 
 12139   000110                     C1TBC           equ	272	;# 
 12140   000110                     C1TBCL          equ	272	;# 
 12141   000111                     C1TBCH          equ	273	;# 
 12142   000112                     C1TBCU          equ	274	;# 
 12143   000113                     C1TBCT          equ	275	;# 
 12144   000114                     C1TSCONL        equ	276	;# 
 12145   000115                     C1TSCONH        equ	277	;# 
 12146   000116                     C1TSCONU        equ	278	;# 
 12147   000117                     C1TSCONT        equ	279	;# 
 12148   000118                     C1VECL          equ	280	;# 
 12149   000119                     C1VECH          equ	281	;# 
 12150   00011A                     C1VECU          equ	282	;# 
 12151   00011B                     C1VECT          equ	283	;# 
 12152   00011C                     C1INTL          equ	284	;# 
 12153   00011D                     C1INTH          equ	285	;# 
 12154   00011E                     C1INTU          equ	286	;# 
 12155   00011F                     C1INTT          equ	287	;# 
 12156   000120                     C1RXIF          equ	288	;# 
 12157   000120                     C1RXIFL         equ	288	;# 
 12158   000121                     C1RXIFH         equ	289	;# 
 12159   000122                     C1RXIFU         equ	290	;# 
 12160   000123                     C1RXIFT         equ	291	;# 
 12161   000124                     C1TXIF          equ	292	;# 
 12162   000124                     C1TXIFL         equ	292	;# 
 12163   000125                     C1TXIFH         equ	293	;# 
 12164   000126                     C1TXIFU         equ	294	;# 
 12165   000127                     C1TXIFT         equ	295	;# 
 12166   000128                     C1RXOVIF        equ	296	;# 
 12167   000128                     C1RXOVIFL       equ	296	;# 
 12168   000129                     C1RXOVIFH       equ	297	;# 
 12169   00012A                     C1RXOVIFU       equ	298	;# 
 12170   00012B                     C1RXOVIFT       equ	299	;# 
 12171   00012C                     C1TXATIF        equ	300	;# 
 12172   00012C                     C1TXATIFL       equ	300	;# 
 12173   00012D                     C1TXATIFH       equ	301	;# 
 12174   00012E                     C1TXATIFU       equ	302	;# 
 12175   00012F                     C1TXATIFT       equ	303	;# 
 12176   000130                     C1TXREQ         equ	304	;# 
 12177   000130                     C1TXREQL        equ	304	;# 
 12178   000131                     C1TXREQH        equ	305	;# 
 12179   000132                     C1TXREQU        equ	306	;# 
 12180   000133                     C1TXREQT        equ	307	;# 
 12181   000134                     C1TRECL         equ	308	;# 
 12182   000135                     C1TRECH         equ	309	;# 
 12183   000136                     C1TRECU         equ	310	;# 
 12184   000137                     C1TRECT         equ	311	;# 
 12185   000138                     C1BDIAG0L       equ	312	;# 
 12186   000139                     C1BDIAG0H       equ	313	;# 
 12187   00013C                     C1BDIAG1L       equ	316	;# 
 12188   00013D                     C1BDIAG1H       equ	317	;# 
 12189   00013E                     C1BDIAG1U       equ	318	;# 
 12190   00013F                     C1BDIAG1T       equ	319	;# 
 12191   000140                     C1TEFCONL       equ	320	;# 
 12192   000141                     C1TEFCONH       equ	321	;# 
 12193   000142                     C1TEFCONU       equ	322	;# 
 12194   000143                     C1TEFCONT       equ	323	;# 
 12195   000144                     C1TEFSTAL       equ	324	;# 
 12196   000145                     C1TEFSTAH       equ	325	;# 
 12197   000146                     C1TEFSTAU       equ	326	;# 
 12198   000147                     C1TEFSTAT       equ	327	;# 
 12199   000148                     C1TEFUA         equ	328	;# 
 12200   000148                     C1TEFUAL        equ	328	;# 
 12201   000149                     C1TEFUAH        equ	329	;# 
 12202   00014A                     C1TEFUAU        equ	330	;# 
 12203   00014B                     C1TEFUAT        equ	331	;# 
 12204   00014C                     C1FIFOBA        equ	332	;# 
 12205   00014C                     C1FIFOBAL       equ	332	;# 
 12206   00014D                     C1FIFOBAH       equ	333	;# 
 12207   00014E                     C1FIFOBAU       equ	334	;# 
 12208   00014F                     C1FIFOBAT       equ	335	;# 
 12209   000150                     C1TXQCONL       equ	336	;# 
 12210   000151                     C1TXQCONH       equ	337	;# 
 12211   000152                     C1TXQCONU       equ	338	;# 
 12212   000153                     C1TXQCONT       equ	339	;# 
 12213   000154                     C1TXQSTAL       equ	340	;# 
 12214   000155                     C1TXQSTAH       equ	341	;# 
 12215   000156                     C1TXQSTAU       equ	342	;# 
 12216   000157                     C1TXQSTAT       equ	343	;# 
 12217   000158                     C1TXQUA         equ	344	;# 
 12218   000158                     C1TXQUAL        equ	344	;# 
 12219   000159                     C1TXQUAH        equ	345	;# 
 12220   00015A                     C1TXQUAU        equ	346	;# 
 12221   00015B                     C1TXQUAT        equ	347	;# 
 12222   00015C                     C1FIFOCON1      equ	348	;# 
 12223   00015C                     C1FIFOCON1L     equ	348	;# 
 12224   00015D                     C1FIFOCON1H     equ	349	;# 
 12225   00015E                     C1FIFOCON1U     equ	350	;# 
 12226   00015F                     C1FIFOCON1T     equ	351	;# 
 12227   000160                     C1FIFOSTA1      equ	352	;# 
 12228   000160                     C1FIFOSTA1L     equ	352	;# 
 12229   000161                     C1FIFOSTA1H     equ	353	;# 
 12230   000162                     C1FIFOSTA1U     equ	354	;# 
 12231   000163                     C1FIFOSTA1T     equ	355	;# 
 12232   000164                     C1FIFOUA1       equ	356	;# 
 12233   000164                     C1FIFOUA1L      equ	356	;# 
 12234   000165                     C1FIFOUA1H      equ	357	;# 
 12235   000166                     C1FIFOUA1U      equ	358	;# 
 12236   000167                     C1FIFOUA1T      equ	359	;# 
 12237   000168                     C1FIFOCON2      equ	360	;# 
 12238   000168                     C1FIFOCON2L     equ	360	;# 
 12239   000169                     C1FIFOCON2H     equ	361	;# 
 12240   00016A                     C1FIFOCON2U     equ	362	;# 
 12241   00016B                     C1FIFOCON2T     equ	363	;# 
 12242   00016C                     C1FIFOSTA2      equ	364	;# 
 12243   00016C                     C1FIFOSTA2L     equ	364	;# 
 12244   00016D                     C1FIFOSTA2H     equ	365	;# 
 12245   00016E                     C1FIFOSTA2U     equ	366	;# 
 12246   00016F                     C1FIFOSTA2T     equ	367	;# 
 12247   000170                     C1FIFOUA2       equ	368	;# 
 12248   000170                     C1FIFOUA2L      equ	368	;# 
 12249   000171                     C1FIFOUA2H      equ	369	;# 
 12250   000172                     C1FIFOUA2U      equ	370	;# 
 12251   000173                     C1FIFOUA2T      equ	371	;# 
 12252   000174                     C1FIFOCON3      equ	372	;# 
 12253   000174                     C1FIFOCON3L     equ	372	;# 
 12254   000175                     C1FIFOCON3H     equ	373	;# 
 12255   000176                     C1FIFOCON3U     equ	374	;# 
 12256   000177                     C1FIFOCON3T     equ	375	;# 
 12257   000178                     C1FIFOSTA3      equ	376	;# 
 12258   000178                     C1FIFOSTA3L     equ	376	;# 
 12259   000179                     C1FIFOSTA3H     equ	377	;# 
 12260   00017A                     C1FIFOSTA3U     equ	378	;# 
 12261   00017B                     C1FIFOSTA3T     equ	379	;# 
 12262   00017C                     C1FIFOUA3       equ	380	;# 
 12263   00017C                     C1FIFOUA3L      equ	380	;# 
 12264   00017D                     C1FIFOUA3H      equ	381	;# 
 12265   00017E                     C1FIFOUA3U      equ	382	;# 
 12266   00017F                     C1FIFOUA3T      equ	383	;# 
 12267   000180                     C1FLTCON0L      equ	384	;# 
 12268   000181                     C1FLTCON0H      equ	385	;# 
 12269   000182                     C1FLTCON0U      equ	386	;# 
 12270   000183                     C1FLTCON0T      equ	387	;# 
 12271   000184                     C1FLTCON1L      equ	388	;# 
 12272   000185                     C1FLTCON1H      equ	389	;# 
 12273   000186                     C1FLTCON1U      equ	390	;# 
 12274   000187                     C1FLTCON1T      equ	391	;# 
 12275   000188                     C1FLTCON2L      equ	392	;# 
 12276   000189                     C1FLTCON2H      equ	393	;# 
 12277   00018A                     C1FLTCON2U      equ	394	;# 
 12278   00018B                     C1FLTCON2T      equ	395	;# 
 12279   00018C                     C1FLTOBJ0       equ	396	;# 
 12280   00018C                     C1FLTOBJ0L      equ	396	;# 
 12281   00018D                     C1FLTOBJ0H      equ	397	;# 
 12282   00018E                     C1FLTOBJ0U      equ	398	;# 
 12283   00018F                     C1FLTOBJ0T      equ	399	;# 
 12284   000190                     C1MASK0         equ	400	;# 
 12285   000190                     C1MASK0L        equ	400	;# 
 12286   000191                     C1MASK0H        equ	401	;# 
 12287   000192                     C1MASK0U        equ	402	;# 
 12288   000193                     C1MASK0T        equ	403	;# 
 12289   000194                     C1FLTOBJ1       equ	404	;# 
 12290   000194                     C1FLTOBJ1L      equ	404	;# 
 12291   000195                     C1FLTOBJ1H      equ	405	;# 
 12292   000196                     C1FLTOBJ1U      equ	406	;# 
 12293   000197                     C1FLTOBJ1T      equ	407	;# 
 12294   000198                     C1MASK1         equ	408	;# 
 12295   000198                     C1MASK1L        equ	408	;# 
 12296   000199                     C1MASK1H        equ	409	;# 
 12297   00019A                     C1MASK1U        equ	410	;# 
 12298   00019B                     C1MASK1T        equ	411	;# 
 12299   00019C                     C1FLTOBJ2       equ	412	;# 
 12300   00019C                     C1FLTOBJ2L      equ	412	;# 
 12301   00019D                     C1FLTOBJ2H      equ	413	;# 
 12302   00019E                     C1FLTOBJ2U      equ	414	;# 
 12303   00019F                     C1FLTOBJ2T      equ	415	;# 
 12304   0001A0                     C1MASK2         equ	416	;# 
 12305   0001A0                     C1MASK2L        equ	416	;# 
 12306   0001A1                     C1MASK2H        equ	417	;# 
 12307   0001A2                     C1MASK2U        equ	418	;# 
 12308   0001A3                     C1MASK2T        equ	419	;# 
 12309   0001A4                     C1FLTOBJ3       equ	420	;# 
 12310   0001A4                     C1FLTOBJ3L      equ	420	;# 
 12311   0001A5                     C1FLTOBJ3H      equ	421	;# 
 12312   0001A6                     C1FLTOBJ3U      equ	422	;# 
 12313   0001A7                     C1FLTOBJ3T      equ	423	;# 
 12314   0001A8                     C1MASK3         equ	424	;# 
 12315   0001A8                     C1MASK3L        equ	424	;# 
 12316   0001A9                     C1MASK3H        equ	425	;# 
 12317   0001AA                     C1MASK3U        equ	426	;# 
 12318   0001AB                     C1MASK3T        equ	427	;# 
 12319   0001AC                     C1FLTOBJ4       equ	428	;# 
 12320   0001AC                     C1FLTOBJ4L      equ	428	;# 
 12321   0001AD                     C1FLTOBJ4H      equ	429	;# 
 12322   0001AE                     C1FLTOBJ4U      equ	430	;# 
 12323   0001AF                     C1FLTOBJ4T      equ	431	;# 
 12324   0001B0                     C1MASK4         equ	432	;# 
 12325   0001B0                     C1MASK4L        equ	432	;# 
 12326   0001B1                     C1MASK4H        equ	433	;# 
 12327   0001B2                     C1MASK4U        equ	434	;# 
 12328   0001B3                     C1MASK4T        equ	435	;# 
 12329   0001B4                     C1FLTOBJ5       equ	436	;# 
 12330   0001B4                     C1FLTOBJ5L      equ	436	;# 
 12331   0001B5                     C1FLTOBJ5H      equ	437	;# 
 12332   0001B6                     C1FLTOBJ5U      equ	438	;# 
 12333   0001B7                     C1FLTOBJ5T      equ	439	;# 
 12334   0001B8                     C1MASK5         equ	440	;# 
 12335   0001B8                     C1MASK5L        equ	440	;# 
 12336   0001B9                     C1MASK5H        equ	441	;# 
 12337   0001BA                     C1MASK5U        equ	442	;# 
 12338   0001BB                     C1MASK5T        equ	443	;# 
 12339   0001BC                     C1FLTOBJ6       equ	444	;# 
 12340   0001BC                     C1FLTOBJ6L      equ	444	;# 
 12341   0001BD                     C1FLTOBJ6H      equ	445	;# 
 12342   0001BE                     C1FLTOBJ6U      equ	446	;# 
 12343   0001BF                     C1FLTOBJ6T      equ	447	;# 
 12344   0001C0                     C1MASK6         equ	448	;# 
 12345   0001C0                     C1MASK6L        equ	448	;# 
 12346   0001C1                     C1MASK6H        equ	449	;# 
 12347   0001C2                     C1MASK6U        equ	450	;# 
 12348   0001C3                     C1MASK6T        equ	451	;# 
 12349   0001C4                     C1FLTOBJ7       equ	452	;# 
 12350   0001C4                     C1FLTOBJ7L      equ	452	;# 
 12351   0001C5                     C1FLTOBJ7H      equ	453	;# 
 12352   0001C6                     C1FLTOBJ7U      equ	454	;# 
 12353   0001C7                     C1FLTOBJ7T      equ	455	;# 
 12354   0001C8                     C1MASK7         equ	456	;# 
 12355   0001C8                     C1MASK7L        equ	456	;# 
 12356   0001C9                     C1MASK7H        equ	457	;# 
 12357   0001CA                     C1MASK7U        equ	458	;# 
 12358   0001CB                     C1MASK7T        equ	459	;# 
 12359   0001CC                     C1FLTOBJ8       equ	460	;# 
 12360   0001CC                     C1FLTOBJ8L      equ	460	;# 
 12361   0001CD                     C1FLTOBJ8H      equ	461	;# 
 12362   0001CE                     C1FLTOBJ8U      equ	462	;# 
 12363   0001CF                     C1FLTOBJ8T      equ	463	;# 
 12364   0001D0                     C1MASK8         equ	464	;# 
 12365   0001D0                     C1MASK8L        equ	464	;# 
 12366   0001D1                     C1MASK8H        equ	465	;# 
 12367   0001D2                     C1MASK8U        equ	466	;# 
 12368   0001D3                     C1MASK8T        equ	467	;# 
 12369   0001D4                     C1FLTOBJ9       equ	468	;# 
 12370   0001D4                     C1FLTOBJ9L      equ	468	;# 
 12371   0001D5                     C1FLTOBJ9H      equ	469	;# 
 12372   0001D6                     C1FLTOBJ9U      equ	470	;# 
 12373   0001D7                     C1FLTOBJ9T      equ	471	;# 
 12374   0001D8                     C1MASK9         equ	472	;# 
 12375   0001D8                     C1MASK9L        equ	472	;# 
 12376   0001D9                     C1MASK9H        equ	473	;# 
 12377   0001DA                     C1MASK9U        equ	474	;# 
 12378   0001DB                     C1MASK9T        equ	475	;# 
 12379   0001DC                     C1FLTOBJ10      equ	476	;# 
 12380   0001DC                     C1FLTOBJ10L     equ	476	;# 
 12381   0001DD                     C1FLTOBJ10H     equ	477	;# 
 12382   0001DE                     C1FLTOBJ10U     equ	478	;# 
 12383   0001DF                     C1FLTOBJ10T     equ	479	;# 
 12384   0001E0                     C1MASK10        equ	480	;# 
 12385   0001E0                     C1MASK10L       equ	480	;# 
 12386   0001E1                     C1MASK10H       equ	481	;# 
 12387   0001E2                     C1MASK10U       equ	482	;# 
 12388   0001E3                     C1MASK10T       equ	483	;# 
 12389   0001E4                     C1FLTOBJ11      equ	484	;# 
 12390   0001E4                     C1FLTOBJ11L     equ	484	;# 
 12391   0001E5                     C1FLTOBJ11H     equ	485	;# 
 12392   0001E6                     C1FLTOBJ11U     equ	486	;# 
 12393   0001E7                     C1FLTOBJ11T     equ	487	;# 
 12394   0001E8                     C1MASK11        equ	488	;# 
 12395   0001E8                     C1MASK11L       equ	488	;# 
 12396   0001E9                     C1MASK11H       equ	489	;# 
 12397   0001EA                     C1MASK11U       equ	490	;# 
 12398   0001EB                     C1MASK11T       equ	491	;# 
 12399   000200                     PPSLOCK         equ	512	;# 
 12400   000201                     RA0PPS          equ	513	;# 
 12401   000202                     RA1PPS          equ	514	;# 
 12402   000203                     RA2PPS          equ	515	;# 
 12403   000204                     RA3PPS          equ	516	;# 
 12404   000205                     RA4PPS          equ	517	;# 
 12405   000206                     RA5PPS          equ	518	;# 
 12406   000207                     RA6PPS          equ	519	;# 
 12407   000208                     RA7PPS          equ	520	;# 
 12408   000209                     RB0PPS          equ	521	;# 
 12409   00020A                     RB1PPS          equ	522	;# 
 12410   00020B                     RB2PPS          equ	523	;# 
 12411   00020C                     RB3PPS          equ	524	;# 
 12412   00020D                     RB4PPS          equ	525	;# 
 12413   00020E                     RB5PPS          equ	526	;# 
 12414   00020F                     RB6PPS          equ	527	;# 
 12415   000210                     RB7PPS          equ	528	;# 
 12416   000211                     RC0PPS          equ	529	;# 
 12417   000212                     RC1PPS          equ	530	;# 
 12418   000213                     RC2PPS          equ	531	;# 
 12419   000214                     RC3PPS          equ	532	;# 
 12420   000215                     RC4PPS          equ	533	;# 
 12421   000216                     RC5PPS          equ	534	;# 
 12422   000217                     RC6PPS          equ	535	;# 
 12423   000218                     RC7PPS          equ	536	;# 
 12424   00023D                     CANRXPPS        equ	573	;# 
 12425   00023E                     INT0PPS         equ	574	;# 
 12426   00023F                     INT1PPS         equ	575	;# 
 12427   000240                     INT2PPS         equ	576	;# 
 12428   000241                     T0CKIPPS        equ	577	;# 
 12429   000242                     T1CKIPPS        equ	578	;# 
 12430   000243                     T1GPPS          equ	579	;# 
 12431   000244                     T3CKIPPS        equ	580	;# 
 12432   000245                     T3GPPS          equ	581	;# 
 12433   000246                     T5CKIPPS        equ	582	;# 
 12434   000247                     T5GPPS          equ	583	;# 
 12435   000248                     T2INPPS         equ	584	;# 
 12436   000249                     T4INPPS         equ	585	;# 
 12437   00024A                     T6INPPS         equ	586	;# 
 12438   00024B                     TUIN0PPS        equ	587	;# 
 12439   00024C                     TUIN1PPS        equ	588	;# 
 12440   00024F                     CCP1PPS         equ	591	;# 
 12441   000250                     CCP2PPS         equ	592	;# 
 12442   000251                     CCP3PPS         equ	593	;# 
 12443   000253                     PWM1ERSPPS      equ	595	;# 
 12444   000254                     PWM2ERSPPS      equ	596	;# 
 12445   000255                     PWM3ERSPPS      equ	597	;# 
 12446   000256                     PWM4ERSPPS      equ	598	;# 
 12447   000257                     PWMIN0PPS       equ	599	;# 
 12448   000258                     PWMIN1PPS       equ	600	;# 
 12449   000259                     SMT1WINPPS      equ	601	;# 
 12450   00025A                     SMT1SIGPPS      equ	602	;# 
 12451   00025B                     CWG1PPS         equ	603	;# 
 12452   00025B                     CWG1INPPS       equ	603	;# 
 12453   00025C                     CWG2PPS         equ	604	;# 
 12454   00025C                     CWG2INPPS       equ	604	;# 
 12455   00025D                     CWG3PPS         equ	605	;# 
 12456   00025D                     CWG3INPPS       equ	605	;# 
 12457   00025E                     MD1CARLPPS      equ	606	;# 
 12458   00025E                     MDCARLPPS       equ	606	;# 
 12459   00025F                     MD1CARHPPS      equ	607	;# 
 12460   00025F                     MDCARHPPS       equ	607	;# 
 12461   000260                     MD1SRCPPS       equ	608	;# 
 12462   000260                     MDSRCPPS        equ	608	;# 
 12463   000261                     CLCIN0PPS       equ	609	;# 
 12464   000262                     CLCIN1PPS       equ	610	;# 
 12465   000263                     CLCIN2PPS       equ	611	;# 
 12466   000264                     CLCIN3PPS       equ	612	;# 
 12467   000265                     CLCIN4PPS       equ	613	;# 
 12468   000266                     CLCIN5PPS       equ	614	;# 
 12469   000267                     CLCIN6PPS       equ	615	;# 
 12470   000268                     CLCIN7PPS       equ	616	;# 
 12471   000269                     ADACTPPS        equ	617	;# 
 12472   00026A                     SPI1SCKPPS      equ	618	;# 
 12473   00026B                     SPI1SDIPPS      equ	619	;# 
 12474   00026C                     SPI1SSPPS       equ	620	;# 
 12475   00026D                     SPI2SCKPPS      equ	621	;# 
 12476   00026E                     SPI2SDIPPS      equ	622	;# 
 12477   00026F                     SPI2SSPPS       equ	623	;# 
 12478   000270                     I2C1SDAPPS      equ	624	;# 
 12479   000271                     I2C1SCLPPS      equ	625	;# 
 12480   000272                     U1RXPPS         equ	626	;# 
 12481   000273                     U1CTSPPS        equ	627	;# 
 12482   000274                     U2RXPPS         equ	628	;# 
 12483   000275                     U2CTSPPS        equ	629	;# 
 12484   000276                     U3RXPPS         equ	630	;# 
 12485   000277                     U3CTSPPS        equ	631	;# 
 12486   000278                     U4RXPPS         equ	632	;# 
 12487   000279                     U4CTSPPS        equ	633	;# 
 12488   00027A                     U5RXPPS         equ	634	;# 
 12489   00027B                     U5CTSPPS        equ	635	;# 
 12490   000286                     RC4I2C          equ	646	;# 
 12491   000287                     RC3I2C          equ	647	;# 
 12492   000288                     RB2I2C          equ	648	;# 
 12493   000289                     RB1I2C          equ	649	;# 
 12494   00028A                     I2C1RXB         equ	650	;# 
 12495   00028B                     I2C1TXB         equ	651	;# 
 12496   00028C                     I2C1CNTL        equ	652	;# 
 12497   00028D                     I2C1CNTH        equ	653	;# 
 12498   00028E                     I2C1ADB0        equ	654	;# 
 12499   00028F                     I2C1ADB1        equ	655	;# 
 12500   000290                     I2C1ADR0        equ	656	;# 
 12501   000291                     I2C1ADR1        equ	657	;# 
 12502   000292                     I2C1ADR2        equ	658	;# 
 12503   000293                     I2C1ADR3        equ	659	;# 
 12504   000294                     I2C1CON0        equ	660	;# 
 12505   000295                     I2C1CON1        equ	661	;# 
 12506   000296                     I2C1CON2        equ	662	;# 
 12507   000297                     I2C1ERR         equ	663	;# 
 12508   000298                     I2C1STAT0       equ	664	;# 
 12509   000299                     I2C1STAT1       equ	665	;# 
 12510   00029A                     I2C1PIR         equ	666	;# 
 12511   00029B                     I2C1PIE         equ	667	;# 
 12512   00029C                     I2C1BTO         equ	668	;# 
 12513   00029D                     I2C1BAUD        equ	669	;# 
 12514   00029E                     I2C1CLK         equ	670	;# 
 12515   00029F                     I2C1BTOC        equ	671	;# 
 12516   0002A1                     U1RXB           equ	673	;# 
 12517   0002A1                     U1RXBL          equ	673	;# 
 12518   0002A2                     U1RXCHK         equ	674	;# 
 12519   0002A3                     U1TXB           equ	675	;# 
 12520   0002A3                     U1TXBL          equ	675	;# 
 12521   0002A4                     U1TXCHK         equ	676	;# 
 12522   0002A5                     U1P1            equ	677	;# 
 12523   0002A5                     U1P1L           equ	677	;# 
 12524   0002A6                     U1P1H           equ	678	;# 
 12525   0002A7                     U1P2            equ	679	;# 
 12526   0002A7                     U1P2L           equ	679	;# 
 12527   0002A8                     U1P2H           equ	680	;# 
 12528   0002A9                     U1P3            equ	681	;# 
 12529   0002A9                     U1P3L           equ	681	;# 
 12530   0002AA                     U1P3H           equ	682	;# 
 12531   0002AB                     U1CON0          equ	683	;# 
 12532   0002AC                     U1CON1          equ	684	;# 
 12533   0002AD                     U1CON2          equ	685	;# 
 12534   0002AE                     U1BRG           equ	686	;# 
 12535   0002AE                     U1BRGL          equ	686	;# 
 12536   0002AF                     U1BRGH          equ	687	;# 
 12537   0002B0                     U1FIFO          equ	688	;# 
 12538   0002B1                     U1UIR           equ	689	;# 
 12539   0002B2                     U1ERRIR         equ	690	;# 
 12540   0002B3                     U1ERRIE         equ	691	;# 
 12541   0002B4                     U2RXB           equ	692	;# 
 12542   0002B4                     U2RXBL          equ	692	;# 
 12543   0002B5                     U2RXCHK         equ	693	;# 
 12544   0002B6                     U2TXB           equ	694	;# 
 12545   0002B6                     U2TXBL          equ	694	;# 
 12546   0002B7                     U2TXCHK         equ	695	;# 
 12547   0002B8                     U2P1            equ	696	;# 
 12548   0002B8                     U2P1L           equ	696	;# 
 12549   0002B9                     U2P1H           equ	697	;# 
 12550   0002BA                     U2P2            equ	698	;# 
 12551   0002BA                     U2P2L           equ	698	;# 
 12552   0002BB                     U2P2H           equ	699	;# 
 12553   0002BC                     U2P3            equ	700	;# 
 12554   0002BC                     U2P3L           equ	700	;# 
 12555   0002BD                     U2P3H           equ	701	;# 
 12556   0002BE                     U2CON0          equ	702	;# 
 12557   0002BF                     U2CON1          equ	703	;# 
 12558   0002C0                     U2CON2          equ	704	;# 
 12559   0002C1                     U2BRG           equ	705	;# 
 12560   0002C1                     U2BRGL          equ	705	;# 
 12561   0002C2                     U2BRGH          equ	706	;# 
 12562   0002C3                     U2FIFO          equ	707	;# 
 12563   0002C4                     U2UIR           equ	708	;# 
 12564   0002C5                     U2ERRIR         equ	709	;# 
 12565   0002C6                     U2ERRIE         equ	710	;# 
 12566   0002C7                     U3RXB           equ	711	;# 
 12567   0002C7                     U3RXBL          equ	711	;# 
 12568   0002C9                     U3TXB           equ	713	;# 
 12569   0002C9                     U3TXBL          equ	713	;# 
 12570   0002CB                     U3P1            equ	715	;# 
 12571   0002CB                     U3P1L           equ	715	;# 
 12572   0002CD                     U3P2            equ	717	;# 
 12573   0002CD                     U3P2L           equ	717	;# 
 12574   0002CF                     U3P3            equ	719	;# 
 12575   0002CF                     U3P3L           equ	719	;# 
 12576   0002D1                     U3CON0          equ	721	;# 
 12577   0002D2                     U3CON1          equ	722	;# 
 12578   0002D3                     U3CON2          equ	723	;# 
 12579   0002D4                     U3BRG           equ	724	;# 
 12580   0002D4                     U3BRGL          equ	724	;# 
 12581   0002D5                     U3BRGH          equ	725	;# 
 12582   0002D6                     U3FIFO          equ	726	;# 
 12583   0002D7                     U3UIR           equ	727	;# 
 12584   0002D8                     U3ERRIR         equ	728	;# 
 12585   0002D9                     U3ERRIE         equ	729	;# 
 12586   0002DA                     U4RXB           equ	730	;# 
 12587   0002DA                     U4RXBL          equ	730	;# 
 12588   0002DC                     U4TXB           equ	732	;# 
 12589   0002DC                     U4TXBL          equ	732	;# 
 12590   0002DE                     U4P1            equ	734	;# 
 12591   0002DE                     U4P1L           equ	734	;# 
 12592   0002E0                     U4P2            equ	736	;# 
 12593   0002E0                     U4P2L           equ	736	;# 
 12594   0002E2                     U4P3            equ	738	;# 
 12595   0002E2                     U4P3L           equ	738	;# 
 12596   0002E4                     U4CON0          equ	740	;# 
 12597   0002E5                     U4CON1          equ	741	;# 
 12598   0002E6                     U4CON2          equ	742	;# 
 12599   0002E7                     U4BRG           equ	743	;# 
 12600   0002E7                     U4BRGL          equ	743	;# 
 12601   0002E8                     U4BRGH          equ	744	;# 
 12602   0002E9                     U4FIFO          equ	745	;# 
 12603   0002EA                     U4UIR           equ	746	;# 
 12604   0002EB                     U4ERRIR         equ	747	;# 
 12605   0002EC                     U4ERRIE         equ	748	;# 
 12606   0002ED                     U5RXB           equ	749	;# 
 12607   0002ED                     U5RXBL          equ	749	;# 
 12608   0002EF                     U5TXB           equ	751	;# 
 12609   0002EF                     U5TXBL          equ	751	;# 
 12610   0002F1                     U5P1            equ	753	;# 
 12611   0002F1                     U5P1L           equ	753	;# 
 12612   0002F3                     U5P2            equ	755	;# 
 12613   0002F3                     U5P2L           equ	755	;# 
 12614   0002F5                     U5P3            equ	757	;# 
 12615   0002F5                     U5P3L           equ	757	;# 
 12616   0002F7                     U5CON0          equ	759	;# 
 12617   0002F8                     U5CON1          equ	760	;# 
 12618   0002F9                     U5CON2          equ	761	;# 
 12619   0002FA                     U5BRG           equ	762	;# 
 12620   0002FA                     U5BRGL          equ	762	;# 
 12621   0002FB                     U5BRGH          equ	763	;# 
 12622   0002FC                     U5FIFO          equ	764	;# 
 12623   0002FD                     U5UIR           equ	765	;# 
 12624   0002FE                     U5ERRIR         equ	766	;# 
 12625   0002FF                     U5ERRIE         equ	767	;# 
 12626   000300                     SMT1TMR         equ	768	;# 
 12627   000300                     SMT1TMRL        equ	768	;# 
 12628   000301                     SMT1TMRH        equ	769	;# 
 12629   000302                     SMT1TMRU        equ	770	;# 
 12630   000303                     SMT1CPR         equ	771	;# 
 12631   000303                     SMT1CPRL        equ	771	;# 
 12632   000304                     SMT1CPRH        equ	772	;# 
 12633   000305                     SMT1CPRU        equ	773	;# 
 12634   000306                     SMT1CPW         equ	774	;# 
 12635   000306                     SMT1CPWL        equ	774	;# 
 12636   000307                     SMT1CPWH        equ	775	;# 
 12637   000308                     SMT1CPWU        equ	776	;# 
 12638   000309                     SMT1PR          equ	777	;# 
 12639   000309                     SMT1PRL         equ	777	;# 
 12640   00030A                     SMT1PRH         equ	778	;# 
 12641   00030B                     SMT1PRU         equ	779	;# 
 12642   00030C                     SMT1CON0        equ	780	;# 
 12643   00030D                     SMT1CON1        equ	781	;# 
 12644   00030E                     SMT1STAT        equ	782	;# 
 12645   00030F                     SMT1CLK         equ	783	;# 
 12646   000310                     SMT1SIG         equ	784	;# 
 12647   000311                     SMT1WIN         equ	785	;# 
 12648   000318                     TMR0L           equ	792	;# 
 12649   000318                     TMR0            equ	792	;# 
 12650   000319                     TMR0H           equ	793	;# 
 12651   000319                     PR0             equ	793	;# 
 12652   00031A                     T0CON0          equ	794	;# 
 12653   00031B                     T0CON1          equ	795	;# 
 12654   00031C                     TMR1            equ	796	;# 
 12655   00031C                     TMR1L           equ	796	;# 
 12656   00031D                     TMR1H           equ	797	;# 
 12657   00031E                     T1CON           equ	798	;# 
 12658   00031E                     TMR1CON         equ	798	;# 
 12659   00031F                     T1GCON          equ	799	;# 
 12660   00031F                     TMR1GCON        equ	799	;# 
 12661   000320                     T1GATE          equ	800	;# 
 12662   000320                     TMR1GATE        equ	800	;# 
 12663   000321                     T1CLK           equ	801	;# 
 12664   000321                     TMR1CLK         equ	801	;# 
 12665   000321                     PR1             equ	801	;# 
 12666   000322                     T2TMR           equ	802	;# 
 12667   000322                     TMR2            equ	802	;# 
 12668   000323                     T2PR            equ	803	;# 
 12669   000323                     PR2             equ	803	;# 
 12670   000324                     T2CON           equ	804	;# 
 12671   000325                     T2HLT           equ	805	;# 
 12672   000326                     T2CLKCON        equ	806	;# 
 12673   000326                     T2CLK           equ	806	;# 
 12674   000327                     T2RST           equ	807	;# 
 12675   000328                     TMR3            equ	808	;# 
 12676   000328                     TMR3L           equ	808	;# 
 12677   000329                     TMR3H           equ	809	;# 
 12678   00032A                     T3CON           equ	810	;# 
 12679   00032A                     TMR3CON         equ	810	;# 
 12680   00032B                     T3GCON          equ	811	;# 
 12681   00032B                     TMR3GCON        equ	811	;# 
 12682   00032C                     T3GATE          equ	812	;# 
 12683   00032C                     TMR3GATE        equ	812	;# 
 12684   00032D                     T3CLK           equ	813	;# 
 12685   00032D                     TMR3CLK         equ	813	;# 
 12686   00032D                     PR3             equ	813	;# 
 12687   00032E                     T4TMR           equ	814	;# 
 12688   00032E                     TMR4            equ	814	;# 
 12689   00032F                     T4PR            equ	815	;# 
 12690   00032F                     PR4             equ	815	;# 
 12691   000330                     T4CON           equ	816	;# 
 12692   000331                     T4HLT           equ	817	;# 
 12693   000332                     T4CLKCON        equ	818	;# 
 12694   000332                     T4CLK           equ	818	;# 
 12695   000333                     T4RST           equ	819	;# 
 12696   000334                     TMR5            equ	820	;# 
 12697   000334                     TMR5L           equ	820	;# 
 12698   000335                     TMR5H           equ	821	;# 
 12699   000336                     T5CON           equ	822	;# 
 12700   000336                     TMR5CON         equ	822	;# 
 12701   000337                     T5GCON          equ	823	;# 
 12702   000337                     TMR5GCON        equ	823	;# 
 12703   000338                     T5GATE          equ	824	;# 
 12704   000338                     TMR5GATE        equ	824	;# 
 12705   000339                     T5CLK           equ	825	;# 
 12706   000339                     TMR5CLK         equ	825	;# 
 12707   000339                     PR5             equ	825	;# 
 12708   00033A                     T6TMR           equ	826	;# 
 12709   00033A                     TMR6            equ	826	;# 
 12710   00033B                     T6PR            equ	827	;# 
 12711   00033B                     PR6             equ	827	;# 
 12712   00033C                     T6CON           equ	828	;# 
 12713   00033D                     T6HLT           equ	829	;# 
 12714   00033E                     T6CLKCON        equ	830	;# 
 12715   00033E                     T6CLK           equ	830	;# 
 12716   00033F                     T6RST           equ	831	;# 
 12717   000340                     CCPR1           equ	832	;# 
 12718   000340                     CCPR1L          equ	832	;# 
 12719   000341                     CCPR1H          equ	833	;# 
 12720   000342                     CCP1CON         equ	834	;# 
 12721   000343                     CCP1CAP         equ	835	;# 
 12722   000344                     CCPR2           equ	836	;# 
 12723   000344                     CCPR2L          equ	836	;# 
 12724   000345                     CCPR2H          equ	837	;# 
 12725   000346                     CCP2CON         equ	838	;# 
 12726   000347                     CCP2CAP         equ	839	;# 
 12727   000348                     CCPR3           equ	840	;# 
 12728   000348                     CCPR3L          equ	840	;# 
 12729   000349                     CCPR3H          equ	841	;# 
 12730   00034A                     CCP3CON         equ	842	;# 
 12731   00034B                     CCP3CAP         equ	843	;# 
 12732   00034C                     CCPTMRS0        equ	844	;# 
 12733   00034F                     CRCDATA         equ	847	;# 
 12734   00034F                     CRCDATAL        equ	847	;# 
 12735   000350                     CRCDATAH        equ	848	;# 
 12736   000351                     CRCDATAU        equ	849	;# 
 12737   000352                     CRCDATAT        equ	850	;# 
 12738   000353                     CRCOUT          equ	851	;# 
 12739   000353                     CRCSHFT         equ	851	;# 
 12740   000353                     CRCXOR          equ	851	;# 
 12741   000353                     CRCOUTL         equ	851	;# 
 12742   000353                     CRCSHFTL        equ	851	;# 
 12743   000353                     CRCSHIFTL       equ	851	;# 
 12744   000353                     CRCXORL         equ	851	;# 
 12745   000354                     CRCOUTH         equ	852	;# 
 12746   000354                     CRCSHFTH        equ	852	;# 
 12747   000354                     CRCSHIFTH       equ	852	;# 
 12748   000354                     CRCXORH         equ	852	;# 
 12749   000355                     CRCOUTU         equ	853	;# 
 12750   000355                     CRCSHFTU        equ	853	;# 
 12751   000355                     CRCSHIFTU       equ	853	;# 
 12752   000355                     CRCXORU         equ	853	;# 
 12753   000356                     CRCOUTT         equ	854	;# 
 12754   000356                     CRCSHFTT        equ	854	;# 
 12755   000356                     CRCSHIFTT       equ	854	;# 
 12756   000356                     CRCXORT         equ	854	;# 
 12757   000357                     CRCCON0         equ	855	;# 
 12758   000358                     CRCCON1         equ	856	;# 
 12759   000359                     CRCCON2         equ	857	;# 
 12760   00035A                     SCANLADR        equ	858	;# 
 12761   00035A                     SCANLADRL       equ	858	;# 
 12762   00035B                     SCANLADRH       equ	859	;# 
 12763   00035C                     SCANLADRU       equ	860	;# 
 12764   00035D                     SCANHADR        equ	861	;# 
 12765   00035D                     SCANHADRL       equ	861	;# 
 12766   00035E                     SCANHADRH       equ	862	;# 
 12767   00035F                     SCANHADRU       equ	863	;# 
 12768   000360                     SCANCON0        equ	864	;# 
 12769   000361                     SCANTRIG        equ	865	;# 
 12770   000362                     IPR0            equ	866	;# 
 12771   000363                     IPR1            equ	867	;# 
 12772   000364                     IPR2            equ	868	;# 
 12773   000365                     IPR3            equ	869	;# 
 12774   000366                     IPR4            equ	870	;# 
 12775   000367                     IPR5            equ	871	;# 
 12776   000368                     IPR6            equ	872	;# 
 12777   000369                     IPR7            equ	873	;# 
 12778   00036A                     IPR8            equ	874	;# 
 12779   00036B                     IPR9            equ	875	;# 
 12780   00036C                     IPR10           equ	876	;# 
 12781   00036D                     IPR11           equ	877	;# 
 12782   00036E                     IPR12           equ	878	;# 
 12783   00036F                     IPR13           equ	879	;# 
 12784   000370                     IPR14           equ	880	;# 
 12785   000371                     IPR15           equ	881	;# 
 12786   000373                     STATUS_CSHAD    equ	883	;# 
 12787   000374                     WREG_CSHAD      equ	884	;# 
 12788   000375                     BSR_CSHAD       equ	885	;# 
 12789   000376                     SHADCON         equ	886	;# 
 12790   000377                     STATUS_SHAD     equ	887	;# 
 12791   000378                     WREG_SHAD       equ	888	;# 
 12792   000379                     BSR_SHAD        equ	889	;# 
 12793   00037A                     PCLATH_SHAD     equ	890	;# 
 12794   00037B                     PCLATU_SHAD     equ	891	;# 
 12795   00037C                     FSR0SH          equ	892	;# 
 12796   00037C                     FSR0L_SHAD      equ	892	;# 
 12797   00037D                     FSR0H_SHAD      equ	893	;# 
 12798   00037E                     FSR1SH          equ	894	;# 
 12799   00037E                     FSR1L_SHAD      equ	894	;# 
 12800   00037F                     FSR1H_SHAD      equ	895	;# 
 12801   000380                     FSR2SH          equ	896	;# 
 12802   000380                     FSR2L_SHAD      equ	896	;# 
 12803   000381                     FSR2H_SHAD      equ	897	;# 
 12804   000382                     PRODSH          equ	898	;# 
 12805   000382                     PRODL_SHAD      equ	898	;# 
 12806   000383                     PRODH_SHAD      equ	899	;# 
 12807   000387                     TU16ACON0       equ	903	;# 
 12808   000388                     TU16ACON1       equ	904	;# 
 12809   000389                     TU16AHLT        equ	905	;# 
 12810   00038A                     TU16APS         equ	906	;# 
 12811   00038B                     TU16ATMR        equ	907	;# 
 12812   00038B                     TU16ACR         equ	907	;# 
 12813   00038B                     TU16ATMRL       equ	907	;# 
 12814   00038B                     TU16ACRL        equ	907	;# 
 12815   00038C                     TU16ATMRH       equ	908	;# 
 12816   00038C                     TU16ACRH        equ	908	;# 
 12817   00038D                     TU16APR         equ	909	;# 
 12818   00038D                     TU16APRL        equ	909	;# 
 12819   00038E                     TU16APRH        equ	910	;# 
 12820   00038F                     TU16ACLK        equ	911	;# 
 12821   000390                     TU16AERS        equ	912	;# 
 12822   000393                     TU16BCON0       equ	915	;# 
 12823   000394                     TU16BCON1       equ	916	;# 
 12824   000395                     TU16BHLT        equ	917	;# 
 12825   000396                     TU16BPS         equ	918	;# 
 12826   000397                     TU16BTMR        equ	919	;# 
 12827   000397                     TU16BCR         equ	919	;# 
 12828   000397                     TU16BTMRL       equ	919	;# 
 12829   000397                     TU16BCRL        equ	919	;# 
 12830   000398                     TU16BTMRH       equ	920	;# 
 12831   000398                     TU16BCRH        equ	920	;# 
 12832   000399                     TU16BPR         equ	921	;# 
 12833   000399                     TU16BPRL        equ	921	;# 
 12834   00039A                     TU16BPRH        equ	922	;# 
 12835   00039B                     TU16BCLK        equ	923	;# 
 12836   00039C                     TU16BERS        equ	924	;# 
 12837   0003BB                     TUCHAIN         equ	955	;# 
 12838   0003BC                     CWG1CLK         equ	956	;# 
 12839   0003BC                     CWG1CLKCON      equ	956	;# 
 12840   0003BD                     CWG1ISM         equ	957	;# 
 12841   0003BE                     CWG1DBR         equ	958	;# 
 12842   0003BF                     CWG1DBF         equ	959	;# 
 12843   0003C0                     CWG1CON0        equ	960	;# 
 12844   0003C1                     CWG1CON1        equ	961	;# 
 12845   0003C2                     CWG1AS0         equ	962	;# 
 12846   0003C3                     CWG1AS1         equ	963	;# 
 12847   0003C4                     CWG1STR         equ	964	;# 
 12848   0003C5                     CWG2CLK         equ	965	;# 
 12849   0003C5                     CWG2CLKCON      equ	965	;# 
 12850   0003C6                     CWG2ISM         equ	966	;# 
 12851   0003C7                     CWG2DBR         equ	967	;# 
 12852   0003C8                     CWG2DBF         equ	968	;# 
 12853   0003C9                     CWG2CON0        equ	969	;# 
 12854   0003CA                     CWG2CON1        equ	970	;# 
 12855   0003CB                     CWG2AS0         equ	971	;# 
 12856   0003CC                     CWG2AS1         equ	972	;# 
 12857   0003CD                     CWG2STR         equ	973	;# 
 12858   0003CE                     CWG3CLK         equ	974	;# 
 12859   0003CE                     CWG3CLKCON      equ	974	;# 
 12860   0003CF                     CWG3ISM         equ	975	;# 
 12861   0003D0                     CWG3DBR         equ	976	;# 
 12862   0003D1                     CWG3DBF         equ	977	;# 
 12863   0003D2                     CWG3CON0        equ	978	;# 
 12864   0003D3                     CWG3CON1        equ	979	;# 
 12865   0003D4                     CWG3AS0         equ	980	;# 
 12866   0003D5                     CWG3AS1         equ	981	;# 
 12867   0003D6                     CWG3STR         equ	982	;# 
 12868   0003D7                     FVRCON          equ	983	;# 
 12869   0003D8                     ADCPCON         equ	984	;# 
 12870   0003D8                     ADCP            equ	984	;# 
 12871   0003D9                     ADLTH           equ	985	;# 
 12872   0003D9                     ADLTHL          equ	985	;# 
 12873   0003DA                     ADLTHH          equ	986	;# 
 12874   0003DB                     ADUTH           equ	987	;# 
 12875   0003DB                     ADUTHL          equ	987	;# 
 12876   0003DC                     ADUTHH          equ	988	;# 
 12877   0003DD                     ADERR           equ	989	;# 
 12878   0003DD                     ADERRL          equ	989	;# 
 12879   0003DE                     ADERRH          equ	990	;# 
 12880   0003DF                     ADSTPT          equ	991	;# 
 12881   0003DF                     ADSTPTL         equ	991	;# 
 12882   0003E0                     ADSTPTH         equ	992	;# 
 12883   0003E1                     ADFLTR          equ	993	;# 
 12884   0003E1                     ADFLTRL         equ	993	;# 
 12885   0003E2                     ADFLTRH         equ	994	;# 
 12886   0003E3                     ADACC           equ	995	;# 
 12887   0003E3                     ADACCL          equ	995	;# 
 12888   0003E4                     ADACCH          equ	996	;# 
 12889   0003E5                     ADACCU          equ	997	;# 
 12890   0003E6                     ADCNT           equ	998	;# 
 12891   0003E7                     ADRPT           equ	999	;# 
 12892   0003E8                     ADPREV          equ	1000	;# 
 12893   0003E8                     ADPREVL         equ	1000	;# 
 12894   0003E9                     ADPREVH         equ	1001	;# 
 12895   0003EA                     ADRES           equ	1002	;# 
 12896   0003EA                     ADRESL          equ	1002	;# 
 12897   0003EB                     ADRESH          equ	1003	;# 
 12898   0003EC                     ADPCH           equ	1004	;# 
 12899   0003EE                     ADACQ           equ	1006	;# 
 12900   0003EE                     ADACQL          equ	1006	;# 
 12901   0003EF                     ADACQH          equ	1007	;# 
 12902   0003F0                     ADCAP           equ	1008	;# 
 12903   0003F1                     ADPRE           equ	1009	;# 
 12904   0003F1                     ADPREL          equ	1009	;# 
 12905   0003F2                     ADPREH          equ	1010	;# 
 12906   0003F3                     ADCON0          equ	1011	;# 
 12907   0003F4                     ADCON1          equ	1012	;# 
 12908   0003F5                     ADCON2          equ	1013	;# 
 12909   0003F6                     ADCON3          equ	1014	;# 
 12910   0003F7                     ADSTAT          equ	1015	;# 
 12911   0003F8                     ADREF           equ	1016	;# 
 12912   0003F9                     ADACT           equ	1017	;# 
 12913   0003FA                     ADCLK           equ	1018	;# 
 12914   0003FB                     ADCTX           equ	1019	;# 
 12915   0003FC                     ADCSEL1         equ	1020	;# 
 12916   0003FD                     ADCSEL2         equ	1021	;# 
 12917   0003FE                     ADCSEL3         equ	1022	;# 
 12918   0003FF                     ADCSEL4         equ	1023	;# 
 12919   000400                     ANSELA          equ	1024	;# 
 12920   000401                     WPUA            equ	1025	;# 
 12921   000402                     ODCONA          equ	1026	;# 
 12922   000403                     SLRCONA         equ	1027	;# 
 12923   000404                     INLVLA          equ	1028	;# 
 12924   000405                     IOCAP           equ	1029	;# 
 12925   000406                     IOCAN           equ	1030	;# 
 12926   000407                     IOCAF           equ	1031	;# 
 12927   000408                     ANSELB          equ	1032	;# 
 12928   000409                     WPUB            equ	1033	;# 
 12929   00040A                     ODCONB          equ	1034	;# 
 12930   00040B                     SLRCONB         equ	1035	;# 
 12931   00040C                     INLVLB          equ	1036	;# 
 12932   00040D                     IOCBP           equ	1037	;# 
 12933   00040E                     IOCBN           equ	1038	;# 
 12934   00040F                     IOCBF           equ	1039	;# 
 12935   000410                     ANSELC          equ	1040	;# 
 12936   000411                     WPUC            equ	1041	;# 
 12937   000412                     ODCONC          equ	1042	;# 
 12938   000413                     SLRCONC         equ	1043	;# 
 12939   000414                     INLVLC          equ	1044	;# 
 12940   000415                     IOCCP           equ	1045	;# 
 12941   000416                     IOCCN           equ	1046	;# 
 12942   000417                     IOCCF           equ	1047	;# 
 12943   000421                     WPUE            equ	1057	;# 
 12944   000424                     INLVLE          equ	1060	;# 
 12945   000425                     IOCEP           equ	1061	;# 
 12946   000426                     IOCEN           equ	1062	;# 
 12947   000427                     IOCEF           equ	1063	;# 
 12948   000440                     NCO1ACC         equ	1088	;# 
 12949   000440                     NCO1ACCL        equ	1088	;# 
 12950   000441                     NCO1ACCH        equ	1089	;# 
 12951   000442                     NCO1ACCU        equ	1090	;# 
 12952   000443                     NCO1INC         equ	1091	;# 
 12953   000443                     NCO1INCL        equ	1091	;# 
 12954   000444                     NCO1INCH        equ	1092	;# 
 12955   000445                     NCO1INCU        equ	1093	;# 
 12956   000446                     NCO1CON         equ	1094	;# 
 12957   000447                     NCO1CLK         equ	1095	;# 
 12958   000448                     NCO2ACC         equ	1096	;# 
 12959   000448                     NCO2ACCL        equ	1096	;# 
 12960   000449                     NCO2ACCH        equ	1097	;# 
 12961   00044A                     NCO2ACCU        equ	1098	;# 
 12962   00044B                     NCO2INC         equ	1099	;# 
 12963   00044B                     NCO2INCL        equ	1099	;# 
 12964   00044C                     NCO2INCH        equ	1100	;# 
 12965   00044D                     NCO2INCU        equ	1101	;# 
 12966   00044E                     NCO2CON         equ	1102	;# 
 12967   00044F                     NCO2CLK         equ	1103	;# 
 12968   000450                     NCO3ACC         equ	1104	;# 
 12969   000450                     NCO3ACCL        equ	1104	;# 
 12970   000451                     NCO3ACCH        equ	1105	;# 
 12971   000452                     NCO3ACCU        equ	1106	;# 
 12972   000453                     NCO3INC         equ	1107	;# 
 12973   000453                     NCO3INCL        equ	1107	;# 
 12974   000454                     NCO3INCH        equ	1108	;# 
 12975   000455                     NCO3INCU        equ	1109	;# 
 12976   000456                     NCO3CON         equ	1110	;# 
 12977   000457                     NCO3CLK         equ	1111	;# 
 12978   000458                     FSCMCON         equ	1112	;# 
 12979   000459                     IVTLOCK         equ	1113	;# 
 12980   00045A                     IVTAD           equ	1114	;# 
 12981   00045A                     IVTADL          equ	1114	;# 
 12982   00045B                     IVTADH          equ	1115	;# 
 12983   00045C                     IVTADU          equ	1116	;# 
 12984   00045D                     IVTBASE         equ	1117	;# 
 12985   00045D                     IVTBASEL        equ	1117	;# 
 12986   00045E                     IVTBASEH        equ	1118	;# 
 12987   00045F                     IVTBASEU        equ	1119	;# 
 12988   000460                     PWM1ERS         equ	1120	;# 
 12989   000461                     PWM1CLK         equ	1121	;# 
 12990   000462                     PWM1LDS         equ	1122	;# 
 12991   000463                     PWM1PR          equ	1123	;# 
 12992   000463                     PWM1PRL         equ	1123	;# 
 12993   000464                     PWM1PRH         equ	1124	;# 
 12994   000465                     PWM1CPRE        equ	1125	;# 
 12995   000466                     PWM1PIPOS       equ	1126	;# 
 12996   000467                     PWM1GIR         equ	1127	;# 
 12997   000468                     PWM1GIE         equ	1128	;# 
 12998   000469                     PWM1CON         equ	1129	;# 
 12999   00046A                     PWM1S1CFG       equ	1130	;# 
 13000   00046B                     PWM1S1P1        equ	1131	;# 
 13001   00046B                     PWM1S1P1L       equ	1131	;# 
 13002   00046C                     PWM1S1P1H       equ	1132	;# 
 13003   00046D                     PWM1S1P2        equ	1133	;# 
 13004   00046D                     PWM1S1P2L       equ	1133	;# 
 13005   00046E                     PWM1S1P2H       equ	1134	;# 
 13006   00046F                     PWM2ERS         equ	1135	;# 
 13007   000470                     PWM2CLK         equ	1136	;# 
 13008   000471                     PWM2LDS         equ	1137	;# 
 13009   000472                     PWM2PR          equ	1138	;# 
 13010   000472                     PWM2PRL         equ	1138	;# 
 13011   000473                     PWM2PRH         equ	1139	;# 
 13012   000474                     PWM2CPRE        equ	1140	;# 
 13013   000475                     PWM2PIPOS       equ	1141	;# 
 13014   000476                     PWM2GIR         equ	1142	;# 
 13015   000477                     PWM2GIE         equ	1143	;# 
 13016   000478                     PWM2CON         equ	1144	;# 
 13017   000479                     PWM2S1CFG       equ	1145	;# 
 13018   00047A                     PWM2S1P1        equ	1146	;# 
 13019   00047A                     PWM2S1P1L       equ	1146	;# 
 13020   00047B                     PWM2S1P1H       equ	1147	;# 
 13021   00047C                     PWM2S1P2        equ	1148	;# 
 13022   00047C                     PWM2S1P2L       equ	1148	;# 
 13023   00047D                     PWM2S1P2H       equ	1149	;# 
 13024   00047E                     PWM3ERS         equ	1150	;# 
 13025   00047F                     PWM3CLK         equ	1151	;# 
 13026   000480                     PWM3LDS         equ	1152	;# 
 13027   000481                     PWM3PR          equ	1153	;# 
 13028   000481                     PWM3PRL         equ	1153	;# 
 13029   000482                     PWM3PRH         equ	1154	;# 
 13030   000483                     PWM3CPRE        equ	1155	;# 
 13031   000484                     PWM3PIPOS       equ	1156	;# 
 13032   000485                     PWM3GIR         equ	1157	;# 
 13033   000486                     PWM3GIE         equ	1158	;# 
 13034   000487                     PWM3CON         equ	1159	;# 
 13035   000488                     PWM3S1CFG       equ	1160	;# 
 13036   000489                     PWM3S1P1        equ	1161	;# 
 13037   000489                     PWM3S1P1L       equ	1161	;# 
 13038   00048A                     PWM3S1P1H       equ	1162	;# 
 13039   00048B                     PWM3S1P2        equ	1163	;# 
 13040   00048B                     PWM3S1P2L       equ	1163	;# 
 13041   00048C                     PWM3S1P2H       equ	1164	;# 
 13042   00048D                     PWM4ERS         equ	1165	;# 
 13043   00048E                     PWM4CLK         equ	1166	;# 
 13044   00048F                     PWM4LDS         equ	1167	;# 
 13045   000490                     PWM4PR          equ	1168	;# 
 13046   000490                     PWM4PRL         equ	1168	;# 
 13047   000491                     PWM4PRH         equ	1169	;# 
 13048   000492                     PWM4CPRE        equ	1170	;# 
 13049   000493                     PWM4PIPOS       equ	1171	;# 
 13050   000494                     PWM4GIR         equ	1172	;# 
 13051   000495                     PWM4GIE         equ	1173	;# 
 13052   000496                     PWM4CON         equ	1174	;# 
 13053   000497                     PWM4S1CFG       equ	1175	;# 
 13054   000498                     PWM4S1P1        equ	1176	;# 
 13055   000498                     PWM4S1P1L       equ	1176	;# 
 13056   000499                     PWM4S1P1H       equ	1177	;# 
 13057   00049A                     PWM4S1P2        equ	1178	;# 
 13058   00049A                     PWM4S1P2L       equ	1178	;# 
 13059   00049B                     PWM4S1P2H       equ	1179	;# 
 13060   00049C                     PWMLOAD         equ	1180	;# 
 13061   00049D                     PWMEN           equ	1181	;# 
 13062   00049E                     PIE0            equ	1182	;# 
 13063   00049F                     PIE1            equ	1183	;# 
 13064   0004A0                     PIE2            equ	1184	;# 
 13065   0004A1                     PIE3            equ	1185	;# 
 13066   0004A2                     PIE4            equ	1186	;# 
 13067   0004A3                     PIE5            equ	1187	;# 
 13068   0004A4                     PIE6            equ	1188	;# 
 13069   0004A5                     PIE7            equ	1189	;# 
 13070   0004A6                     PIE8            equ	1190	;# 
 13071   0004A7                     PIE9            equ	1191	;# 
 13072   0004A8                     PIE10           equ	1192	;# 
 13073   0004A9                     PIE11           equ	1193	;# 
 13074   0004AA                     PIE12           equ	1194	;# 
 13075   0004AB                     PIE13           equ	1195	;# 
 13076   0004AC                     PIE14           equ	1196	;# 
 13077   0004AD                     PIE15           equ	1197	;# 
 13078   0004AE                     PIR0            equ	1198	;# 
 13079   0004AF                     PIR1            equ	1199	;# 
 13080   0004B0                     PIR2            equ	1200	;# 
 13081   0004B1                     PIR3            equ	1201	;# 
 13082   0004B2                     PIR4            equ	1202	;# 
 13083   0004B3                     PIR5            equ	1203	;# 
 13084   0004B4                     PIR6            equ	1204	;# 
 13085   0004B5                     PIR7            equ	1205	;# 
 13086   0004B6                     PIR8            equ	1206	;# 
 13087   0004B7                     PIR9            equ	1207	;# 
 13088   0004B8                     PIR10           equ	1208	;# 
 13089   0004B9                     PIR11           equ	1209	;# 
 13090   0004BA                     PIR12           equ	1210	;# 
 13091   0004BB                     PIR13           equ	1211	;# 
 13092   0004BC                     PIR14           equ	1212	;# 
 13093   0004BD                     PIR15           equ	1213	;# 
 13094   0004BE                     LATA            equ	1214	;# 
 13095   0004BF                     LATB            equ	1215	;# 
 13096   0004C0                     LATC            equ	1216	;# 
 13097   0004C6                     TRISA           equ	1222	;# 
 13098   0004C7                     TRISB           equ	1223	;# 
 13099   0004C8                     TRISC           equ	1224	;# 
 13100   0004CA                     TRISE           equ	1226	;# 
 13101   0004CE                     PORTA           equ	1230	;# 
 13102   0004CF                     PORTB           equ	1231	;# 
 13103   0004D0                     PORTC           equ	1232	;# 
 13104   0004D2                     PORTE           equ	1234	;# 
 13105   0004D6                     INTCON0         equ	1238	;# 
 13106   0004D7                     INTCON1         equ	1239	;# 
 13107   0004D8                     STATUS          equ	1240	;# 
 13108   0004D9                     FSR2            equ	1241	;# 
 13109   0004D9                     FSR2L           equ	1241	;# 
 13110   0004DA                     FSR2H           equ	1242	;# 
 13111   0004DB                     PLUSW2          equ	1243	;# 
 13112   0004DC                     PREINC2         equ	1244	;# 
 13113   0004DD                     POSTDEC2        equ	1245	;# 
 13114   0004DE                     POSTINC2        equ	1246	;# 
 13115   0004DF                     INDF2           equ	1247	;# 
 13116   0004E0                     BSR             equ	1248	;# 
 13117   0004E1                     FSR1            equ	1249	;# 
 13118   0004E1                     FSR1L           equ	1249	;# 
 13119   0004E2                     FSR1H           equ	1250	;# 
 13120   0004E3                     PLUSW1          equ	1251	;# 
 13121   0004E4                     PREINC1         equ	1252	;# 
 13122   0004E5                     POSTDEC1        equ	1253	;# 
 13123   0004E6                     POSTINC1        equ	1254	;# 
 13124   0004E7                     INDF1           equ	1255	;# 
 13125   0004E8                     WREG            equ	1256	;# 
 13126   0004E9                     FSR0            equ	1257	;# 
 13127   0004E9                     FSR0L           equ	1257	;# 
 13128   0004EA                     FSR0H           equ	1258	;# 
 13129   0004EB                     PLUSW0          equ	1259	;# 
 13130   0004EC                     PREINC0         equ	1260	;# 
 13131   0004ED                     POSTDEC0        equ	1261	;# 
 13132   0004EE                     POSTINC0        equ	1262	;# 
 13133   0004EF                     INDF0           equ	1263	;# 
 13134   0004F0                     PCON0           equ	1264	;# 
 13135   0004F1                     PCON1           equ	1265	;# 
 13136   0004F2                     CPUDOZE         equ	1266	;# 
 13137   0004F3                     PROD            equ	1267	;# 
 13138   0004F3                     PRODL           equ	1267	;# 
 13139   0004F4                     PRODH           equ	1268	;# 
 13140   0004F5                     TABLAT          equ	1269	;# 
 13141   0004F6                     TBLPTR          equ	1270	;# 
 13142   0004F6                     TBLPTRL         equ	1270	;# 
 13143   0004F7                     TBLPTRH         equ	1271	;# 
 13144   0004F8                     TBLPTRU         equ	1272	;# 
 13145   0004F9                     PCLAT           equ	1273	;# 
 13146   0004F9                     PCL             equ	1273	;# 
 13147   0004FA                     PCLATH          equ	1274	;# 
 13148   0004FB                     PCLATU          equ	1275	;# 
 13149   0004FC                     STKPTR          equ	1276	;# 
 13150   0004FD                     TOS             equ	1277	;# 
 13151   0004FD                     TOSL            equ	1277	;# 
 13152   0004FE                     TOSH            equ	1278	;# 
 13153   0004FF                     TOSU            equ	1279	;# 
 13154   000038                     BOOTREG         equ	56	;# 
 13155   000039                     CLKRCON         equ	57	;# 
 13156   00003A                     CLKRCLK         equ	58	;# 
 13157   000040                     NVMCON0         equ	64	;# 
 13158   000041                     NVMCON1         equ	65	;# 
 13159   000042                     NVMLOCK         equ	66	;# 
 13160   000043                     NVMADR          equ	67	;# 
 13161   000043                     NVMADRL         equ	67	;# 
 13162   000044                     NVMADRH         equ	68	;# 
 13163   000045                     NVMADRU         equ	69	;# 
 13164   000046                     NVMDAT          equ	70	;# 
 13165   000046                     NVMDATL         equ	70	;# 
 13166   000047                     NVMDATH         equ	71	;# 
 13167   000048                     VREGCON         equ	72	;# 
 13168   000049                     BORCON          equ	73	;# 
 13169   00004A                     HLVDCON0        equ	74	;# 
 13170   00004B                     HLVDCON1        equ	75	;# 
 13171   00004C                     ZCDCON          equ	76	;# 
 13172   000060                     PMD0            equ	96	;# 
 13173   000061                     PMD1            equ	97	;# 
 13174   000062                     PMD2            equ	98	;# 
 13175   000063                     PMD3            equ	99	;# 
 13176   000064                     PMD4            equ	100	;# 
 13177   000065                     PMD5            equ	101	;# 
 13178   000066                     PMD6            equ	102	;# 
 13179   000067                     PMD7            equ	103	;# 
 13180   000068                     PMD8            equ	104	;# 
 13181   00006A                     MD1CON0         equ	106	;# 
 13182   00006B                     MD1CON1         equ	107	;# 
 13183   00006C                     MD1SRC          equ	108	;# 
 13184   00006D                     MD1CARL         equ	109	;# 
 13185   00006E                     MD1CARH         equ	110	;# 
 13186   00006F                     CMOUT           equ	111	;# 
 13187   000070                     CM1CON0         equ	112	;# 
 13188   000071                     CM1CON1         equ	113	;# 
 13189   000072                     CM1NCH          equ	114	;# 
 13190   000073                     CM1PCH          equ	115	;# 
 13191   000074                     CM2CON0         equ	116	;# 
 13192   000075                     CM2CON1         equ	117	;# 
 13193   000076                     CM2NCH          equ	118	;# 
 13194   000077                     CM2PCH          equ	119	;# 
 13195   000078                     WDTCON0         equ	120	;# 
 13196   000079                     WDTCON1         equ	121	;# 
 13197   00007A                     WDTPSL          equ	122	;# 
 13198   00007B                     WDTPSH          equ	123	;# 
 13199   00007C                     WDTTMR          equ	124	;# 
 13200   00007D                     DAC1DAT         equ	125	;# 
 13201   00007D                     DAC1DATL        equ	125	;# 
 13202   00007F                     DAC1CON         equ	127	;# 
 13203   000080                     SPI1RXB         equ	128	;# 
 13204   000081                     SPI1TXB         equ	129	;# 
 13205   000082                     SPI1TCNT        equ	130	;# 
 13206   000082                     SPI1TCNTL       equ	130	;# 
 13207   000083                     SPI1TCNTH       equ	131	;# 
 13208   000084                     SPI1CON0        equ	132	;# 
 13209   000085                     SPI1CON1        equ	133	;# 
 13210   000086                     SPI1CON2        equ	134	;# 
 13211   000087                     SPI1STATUS      equ	135	;# 
 13212   000088                     SPI1TWIDTH      equ	136	;# 
 13213   000089                     SPI1BAUD        equ	137	;# 
 13214   00008A                     SPI1INTF        equ	138	;# 
 13215   00008B                     SPI1INTE        equ	139	;# 
 13216   00008C                     SPI1CLK         equ	140	;# 
 13217   00008D                     SPI2RXB         equ	141	;# 
 13218   00008E                     SPI2TXB         equ	142	;# 
 13219   00008F                     SPI2TCNT        equ	143	;# 
 13220   00008F                     SPI2TCNTL       equ	143	;# 
 13221   000090                     SPI2TCNTH       equ	144	;# 
 13222   000091                     SPI2CON0        equ	145	;# 
 13223   000092                     SPI2CON1        equ	146	;# 
 13224   000093                     SPI2CON2        equ	147	;# 
 13225   000094                     SPI2STATUS      equ	148	;# 
 13226   000095                     SPI2TWIDTH      equ	149	;# 
 13227   000096                     SPI2BAUD        equ	150	;# 
 13228   000097                     SPI2INTF        equ	151	;# 
 13229   000098                     SPI2INTE        equ	152	;# 
 13230   000099                     SPI2CLK         equ	153	;# 
 13231   0000AC                     ACTCON          equ	172	;# 
 13232   0000AD                     OSCCON1         equ	173	;# 
 13233   0000AE                     OSCCON2         equ	174	;# 
 13234   0000AF                     OSCCON3         equ	175	;# 
 13235   0000B0                     OSCTUNE         equ	176	;# 
 13236   0000B1                     OSCFRQ          equ	177	;# 
 13237   0000B1                     OSCFREQ         equ	177	;# 
 13238   0000B2                     OSCSTAT         equ	178	;# 
 13239   0000B2                     OSCSTAT1        equ	178	;# 
 13240   0000B3                     OSCEN           equ	179	;# 
 13241   0000B4                     PRLOCK          equ	180	;# 
 13242   0000B5                     SCANPR          equ	181	;# 
 13243   0000B6                     DMA1PR          equ	182	;# 
 13244   0000B7                     DMA2PR          equ	183	;# 
 13245   0000B8                     DMA3PR          equ	184	;# 
 13246   0000B9                     DMA4PR          equ	185	;# 
 13247   0000BA                     DMA5PR          equ	186	;# 
 13248   0000BB                     DMA6PR          equ	187	;# 
 13249   0000BC                     DMA7PR          equ	188	;# 
 13250   0000BD                     DMA8PR          equ	189	;# 
 13251   0000BE                     MAINPR          equ	190	;# 
 13252   0000BF                     ISRPR           equ	191	;# 
 13253   0000D4                     CLCDATA         equ	212	;# 
 13254   0000D5                     CLCSELECT       equ	213	;# 
 13255   0000D6                     CLCnCON         equ	214	;# 
 13256   0000D7                     CLCnPOL         equ	215	;# 
 13257   0000D8                     CLCnSEL0        equ	216	;# 
 13258   0000D9                     CLCnSEL1        equ	217	;# 
 13259   0000DA                     CLCnSEL2        equ	218	;# 
 13260   0000DB                     CLCnSEL3        equ	219	;# 
 13261   0000DC                     CLCnGLS0        equ	220	;# 
 13262   0000DD                     CLCnGLS1        equ	221	;# 
 13263   0000DE                     CLCnGLS2        equ	222	;# 
 13264   0000DF                     CLCnGLS3        equ	223	;# 
 13265   0000E8                     DMASELECT       equ	232	;# 
 13266   0000E9                     DMAnBUF         equ	233	;# 
 13267   0000EA                     DMAnDCNT        equ	234	;# 
 13268   0000EA                     DMAnDCNTL       equ	234	;# 
 13269   0000EB                     DMAnDCNTH       equ	235	;# 
 13270   0000EC                     DMAnDPTR        equ	236	;# 
 13271   0000EC                     DMAnDPTRL       equ	236	;# 
 13272   0000ED                     DMAnDPTRH       equ	237	;# 
 13273   0000EE                     DMAnDSZ         equ	238	;# 
 13274   0000EE                     DMAnDSZL        equ	238	;# 
 13275   0000EF                     DMAnDSZH        equ	239	;# 
 13276   0000F0                     DMAnDSA         equ	240	;# 
 13277   0000F0                     DMAnDSAL        equ	240	;# 
 13278   0000F1                     DMAnDSAH        equ	241	;# 
 13279   0000F2                     DMAnSCNT        equ	242	;# 
 13280   0000F2                     DMAnSCNTL       equ	242	;# 
 13281   0000F3                     DMAnSCNTH       equ	243	;# 
 13282   0000F4                     DMAnSPTR        equ	244	;# 
 13283   0000F4                     DMAnSPTRL       equ	244	;# 
 13284   0000F5                     DMAnSPTRH       equ	245	;# 
 13285   0000F6                     DMAnSPTRU       equ	246	;# 
 13286   0000F7                     DMAnSSZ         equ	247	;# 
 13287   0000F7                     DMAnSSZL        equ	247	;# 
 13288   0000F8                     DMAnSSZH        equ	248	;# 
 13289   0000F9                     DMAnSSA         equ	249	;# 
 13290   0000F9                     DMAnSSAL        equ	249	;# 
 13291   0000FA                     DMAnSSAH        equ	250	;# 
 13292   0000FB                     DMAnSSAU        equ	251	;# 
 13293   0000FC                     DMAnCON0        equ	252	;# 
 13294   0000FD                     DMAnCON1        equ	253	;# 
 13295   0000FE                     DMAnAIRQ        equ	254	;# 
 13296   0000FF                     DMAnSIRQ        equ	255	;# 
 13297   000100                     C1CONL          equ	256	;# 
 13298   000101                     C1CONH          equ	257	;# 
 13299   000102                     C1CONU          equ	258	;# 
 13300   000103                     C1CONT          equ	259	;# 
 13301   000104                     C1NBTCFGL       equ	260	;# 
 13302   000105                     C1NBTCFGH       equ	261	;# 
 13303   000106                     C1NBTCFGU       equ	262	;# 
 13304   000107                     C1NBTCFGT       equ	263	;# 
 13305   000108                     C1DBTCFGL       equ	264	;# 
 13306   000109                     C1DBTCFGH       equ	265	;# 
 13307   00010A                     C1DBTCFGU       equ	266	;# 
 13308   00010B                     C1DBTCFGT       equ	267	;# 
 13309   00010C                     C1TDCL          equ	268	;# 
 13310   00010D                     C1TDCH          equ	269	;# 
 13311   00010E                     C1TDCU          equ	270	;# 
 13312   000110                     C1TBC           equ	272	;# 
 13313   000110                     C1TBCL          equ	272	;# 
 13314   000111                     C1TBCH          equ	273	;# 
 13315   000112                     C1TBCU          equ	274	;# 
 13316   000113                     C1TBCT          equ	275	;# 
 13317   000114                     C1TSCONL        equ	276	;# 
 13318   000115                     C1TSCONH        equ	277	;# 
 13319   000116                     C1TSCONU        equ	278	;# 
 13320   000117                     C1TSCONT        equ	279	;# 
 13321   000118                     C1VECL          equ	280	;# 
 13322   000119                     C1VECH          equ	281	;# 
 13323   00011A                     C1VECU          equ	282	;# 
 13324   00011B                     C1VECT          equ	283	;# 
 13325   00011C                     C1INTL          equ	284	;# 
 13326   00011D                     C1INTH          equ	285	;# 
 13327   00011E                     C1INTU          equ	286	;# 
 13328   00011F                     C1INTT          equ	287	;# 
 13329   000120                     C1RXIF          equ	288	;# 
 13330   000120                     C1RXIFL         equ	288	;# 
 13331   000121                     C1RXIFH         equ	289	;# 
 13332   000122                     C1RXIFU         equ	290	;# 
 13333   000123                     C1RXIFT         equ	291	;# 
 13334   000124                     C1TXIF          equ	292	;# 
 13335   000124                     C1TXIFL         equ	292	;# 
 13336   000125                     C1TXIFH         equ	293	;# 
 13337   000126                     C1TXIFU         equ	294	;# 
 13338   000127                     C1TXIFT         equ	295	;# 
 13339   000128                     C1RXOVIF        equ	296	;# 
 13340   000128                     C1RXOVIFL       equ	296	;# 
 13341   000129                     C1RXOVIFH       equ	297	;# 
 13342   00012A                     C1RXOVIFU       equ	298	;# 
 13343   00012B                     C1RXOVIFT       equ	299	;# 
 13344   00012C                     C1TXATIF        equ	300	;# 
 13345   00012C                     C1TXATIFL       equ	300	;# 
 13346   00012D                     C1TXATIFH       equ	301	;# 
 13347   00012E                     C1TXATIFU       equ	302	;# 
 13348   00012F                     C1TXATIFT       equ	303	;# 
 13349   000130                     C1TXREQ         equ	304	;# 
 13350   000130                     C1TXREQL        equ	304	;# 
 13351   000131                     C1TXREQH        equ	305	;# 
 13352   000132                     C1TXREQU        equ	306	;# 
 13353   000133                     C1TXREQT        equ	307	;# 
 13354   000134                     C1TRECL         equ	308	;# 
 13355   000135                     C1TRECH         equ	309	;# 
 13356   000136                     C1TRECU         equ	310	;# 
 13357   000137                     C1TRECT         equ	311	;# 
 13358   000138                     C1BDIAG0L       equ	312	;# 
 13359   000139                     C1BDIAG0H       equ	313	;# 
 13360   00013C                     C1BDIAG1L       equ	316	;# 
 13361   00013D                     C1BDIAG1H       equ	317	;# 
 13362   00013E                     C1BDIAG1U       equ	318	;# 
 13363   00013F                     C1BDIAG1T       equ	319	;# 
 13364   000140                     C1TEFCONL       equ	320	;# 
 13365   000141                     C1TEFCONH       equ	321	;# 
 13366   000142                     C1TEFCONU       equ	322	;# 
 13367   000143                     C1TEFCONT       equ	323	;# 
 13368   000144                     C1TEFSTAL       equ	324	;# 
 13369   000145                     C1TEFSTAH       equ	325	;# 
 13370   000146                     C1TEFSTAU       equ	326	;# 
 13371   000147                     C1TEFSTAT       equ	327	;# 
 13372   000148                     C1TEFUA         equ	328	;# 
 13373   000148                     C1TEFUAL        equ	328	;# 
 13374   000149                     C1TEFUAH        equ	329	;# 
 13375   00014A                     C1TEFUAU        equ	330	;# 
 13376   00014B                     C1TEFUAT        equ	331	;# 
 13377   00014C                     C1FIFOBA        equ	332	;# 
 13378   00014C                     C1FIFOBAL       equ	332	;# 
 13379   00014D                     C1FIFOBAH       equ	333	;# 
 13380   00014E                     C1FIFOBAU       equ	334	;# 
 13381   00014F                     C1FIFOBAT       equ	335	;# 
 13382   000150                     C1TXQCONL       equ	336	;# 
 13383   000151                     C1TXQCONH       equ	337	;# 
 13384   000152                     C1TXQCONU       equ	338	;# 
 13385   000153                     C1TXQCONT       equ	339	;# 
 13386   000154                     C1TXQSTAL       equ	340	;# 
 13387   000155                     C1TXQSTAH       equ	341	;# 
 13388   000156                     C1TXQSTAU       equ	342	;# 
 13389   000157                     C1TXQSTAT       equ	343	;# 
 13390   000158                     C1TXQUA         equ	344	;# 
 13391   000158                     C1TXQUAL        equ	344	;# 
 13392   000159                     C1TXQUAH        equ	345	;# 
 13393   00015A                     C1TXQUAU        equ	346	;# 
 13394   00015B                     C1TXQUAT        equ	347	;# 
 13395   00015C                     C1FIFOCON1      equ	348	;# 
 13396   00015C                     C1FIFOCON1L     equ	348	;# 
 13397   00015D                     C1FIFOCON1H     equ	349	;# 
 13398   00015E                     C1FIFOCON1U     equ	350	;# 
 13399   00015F                     C1FIFOCON1T     equ	351	;# 
 13400   000160                     C1FIFOSTA1      equ	352	;# 
 13401   000160                     C1FIFOSTA1L     equ	352	;# 
 13402   000161                     C1FIFOSTA1H     equ	353	;# 
 13403   000162                     C1FIFOSTA1U     equ	354	;# 
 13404   000163                     C1FIFOSTA1T     equ	355	;# 
 13405   000164                     C1FIFOUA1       equ	356	;# 
 13406   000164                     C1FIFOUA1L      equ	356	;# 
 13407   000165                     C1FIFOUA1H      equ	357	;# 
 13408   000166                     C1FIFOUA1U      equ	358	;# 
 13409   000167                     C1FIFOUA1T      equ	359	;# 
 13410   000168                     C1FIFOCON2      equ	360	;# 
 13411   000168                     C1FIFOCON2L     equ	360	;# 
 13412   000169                     C1FIFOCON2H     equ	361	;# 
 13413   00016A                     C1FIFOCON2U     equ	362	;# 
 13414   00016B                     C1FIFOCON2T     equ	363	;# 
 13415   00016C                     C1FIFOSTA2      equ	364	;# 
 13416   00016C                     C1FIFOSTA2L     equ	364	;# 
 13417   00016D                     C1FIFOSTA2H     equ	365	;# 
 13418   00016E                     C1FIFOSTA2U     equ	366	;# 
 13419   00016F                     C1FIFOSTA2T     equ	367	;# 
 13420   000170                     C1FIFOUA2       equ	368	;# 
 13421   000170                     C1FIFOUA2L      equ	368	;# 
 13422   000171                     C1FIFOUA2H      equ	369	;# 
 13423   000172                     C1FIFOUA2U      equ	370	;# 
 13424   000173                     C1FIFOUA2T      equ	371	;# 
 13425   000174                     C1FIFOCON3      equ	372	;# 
 13426   000174                     C1FIFOCON3L     equ	372	;# 
 13427   000175                     C1FIFOCON3H     equ	373	;# 
 13428   000176                     C1FIFOCON3U     equ	374	;# 
 13429   000177                     C1FIFOCON3T     equ	375	;# 
 13430   000178                     C1FIFOSTA3      equ	376	;# 
 13431   000178                     C1FIFOSTA3L     equ	376	;# 
 13432   000179                     C1FIFOSTA3H     equ	377	;# 
 13433   00017A                     C1FIFOSTA3U     equ	378	;# 
 13434   00017B                     C1FIFOSTA3T     equ	379	;# 
 13435   00017C                     C1FIFOUA3       equ	380	;# 
 13436   00017C                     C1FIFOUA3L      equ	380	;# 
 13437   00017D                     C1FIFOUA3H      equ	381	;# 
 13438   00017E                     C1FIFOUA3U      equ	382	;# 
 13439   00017F                     C1FIFOUA3T      equ	383	;# 
 13440   000180                     C1FLTCON0L      equ	384	;# 
 13441   000181                     C1FLTCON0H      equ	385	;# 
 13442   000182                     C1FLTCON0U      equ	386	;# 
 13443   000183                     C1FLTCON0T      equ	387	;# 
 13444   000184                     C1FLTCON1L      equ	388	;# 
 13445   000185                     C1FLTCON1H      equ	389	;# 
 13446   000186                     C1FLTCON1U      equ	390	;# 
 13447   000187                     C1FLTCON1T      equ	391	;# 
 13448   000188                     C1FLTCON2L      equ	392	;# 
 13449   000189                     C1FLTCON2H      equ	393	;# 
 13450   00018A                     C1FLTCON2U      equ	394	;# 
 13451   00018B                     C1FLTCON2T      equ	395	;# 
 13452   00018C                     C1FLTOBJ0       equ	396	;# 
 13453   00018C                     C1FLTOBJ0L      equ	396	;# 
 13454   00018D                     C1FLTOBJ0H      equ	397	;# 
 13455   00018E                     C1FLTOBJ0U      equ	398	;# 
 13456   00018F                     C1FLTOBJ0T      equ	399	;# 
 13457   000190                     C1MASK0         equ	400	;# 
 13458   000190                     C1MASK0L        equ	400	;# 
 13459   000191                     C1MASK0H        equ	401	;# 
 13460   000192                     C1MASK0U        equ	402	;# 
 13461   000193                     C1MASK0T        equ	403	;# 
 13462   000194                     C1FLTOBJ1       equ	404	;# 
 13463   000194                     C1FLTOBJ1L      equ	404	;# 
 13464   000195                     C1FLTOBJ1H      equ	405	;# 
 13465   000196                     C1FLTOBJ1U      equ	406	;# 
 13466   000197                     C1FLTOBJ1T      equ	407	;# 
 13467   000198                     C1MASK1         equ	408	;# 
 13468   000198                     C1MASK1L        equ	408	;# 
 13469   000199                     C1MASK1H        equ	409	;# 
 13470   00019A                     C1MASK1U        equ	410	;# 
 13471   00019B                     C1MASK1T        equ	411	;# 
 13472   00019C                     C1FLTOBJ2       equ	412	;# 
 13473   00019C                     C1FLTOBJ2L      equ	412	;# 
 13474   00019D                     C1FLTOBJ2H      equ	413	;# 
 13475   00019E                     C1FLTOBJ2U      equ	414	;# 
 13476   00019F                     C1FLTOBJ2T      equ	415	;# 
 13477   0001A0                     C1MASK2         equ	416	;# 
 13478   0001A0                     C1MASK2L        equ	416	;# 
 13479   0001A1                     C1MASK2H        equ	417	;# 
 13480   0001A2                     C1MASK2U        equ	418	;# 
 13481   0001A3                     C1MASK2T        equ	419	;# 
 13482   0001A4                     C1FLTOBJ3       equ	420	;# 
 13483   0001A4                     C1FLTOBJ3L      equ	420	;# 
 13484   0001A5                     C1FLTOBJ3H      equ	421	;# 
 13485   0001A6                     C1FLTOBJ3U      equ	422	;# 
 13486   0001A7                     C1FLTOBJ3T      equ	423	;# 
 13487   0001A8                     C1MASK3         equ	424	;# 
 13488   0001A8                     C1MASK3L        equ	424	;# 
 13489   0001A9                     C1MASK3H        equ	425	;# 
 13490   0001AA                     C1MASK3U        equ	426	;# 
 13491   0001AB                     C1MASK3T        equ	427	;# 
 13492   0001AC                     C1FLTOBJ4       equ	428	;# 
 13493   0001AC                     C1FLTOBJ4L      equ	428	;# 
 13494   0001AD                     C1FLTOBJ4H      equ	429	;# 
 13495   0001AE                     C1FLTOBJ4U      equ	430	;# 
 13496   0001AF                     C1FLTOBJ4T      equ	431	;# 
 13497   0001B0                     C1MASK4         equ	432	;# 
 13498   0001B0                     C1MASK4L        equ	432	;# 
 13499   0001B1                     C1MASK4H        equ	433	;# 
 13500   0001B2                     C1MASK4U        equ	434	;# 
 13501   0001B3                     C1MASK4T        equ	435	;# 
 13502   0001B4                     C1FLTOBJ5       equ	436	;# 
 13503   0001B4                     C1FLTOBJ5L      equ	436	;# 
 13504   0001B5                     C1FLTOBJ5H      equ	437	;# 
 13505   0001B6                     C1FLTOBJ5U      equ	438	;# 
 13506   0001B7                     C1FLTOBJ5T      equ	439	;# 
 13507   0001B8                     C1MASK5         equ	440	;# 
 13508   0001B8                     C1MASK5L        equ	440	;# 
 13509   0001B9                     C1MASK5H        equ	441	;# 
 13510   0001BA                     C1MASK5U        equ	442	;# 
 13511   0001BB                     C1MASK5T        equ	443	;# 
 13512   0001BC                     C1FLTOBJ6       equ	444	;# 
 13513   0001BC                     C1FLTOBJ6L      equ	444	;# 
 13514   0001BD                     C1FLTOBJ6H      equ	445	;# 
 13515   0001BE                     C1FLTOBJ6U      equ	446	;# 
 13516   0001BF                     C1FLTOBJ6T      equ	447	;# 
 13517   0001C0                     C1MASK6         equ	448	;# 
 13518   0001C0                     C1MASK6L        equ	448	;# 
 13519   0001C1                     C1MASK6H        equ	449	;# 
 13520   0001C2                     C1MASK6U        equ	450	;# 
 13521   0001C3                     C1MASK6T        equ	451	;# 
 13522   0001C4                     C1FLTOBJ7       equ	452	;# 
 13523   0001C4                     C1FLTOBJ7L      equ	452	;# 
 13524   0001C5                     C1FLTOBJ7H      equ	453	;# 
 13525   0001C6                     C1FLTOBJ7U      equ	454	;# 
 13526   0001C7                     C1FLTOBJ7T      equ	455	;# 
 13527   0001C8                     C1MASK7         equ	456	;# 
 13528   0001C8                     C1MASK7L        equ	456	;# 
 13529   0001C9                     C1MASK7H        equ	457	;# 
 13530   0001CA                     C1MASK7U        equ	458	;# 
 13531   0001CB                     C1MASK7T        equ	459	;# 
 13532   0001CC                     C1FLTOBJ8       equ	460	;# 
 13533   0001CC                     C1FLTOBJ8L      equ	460	;# 
 13534   0001CD                     C1FLTOBJ8H      equ	461	;# 
 13535   0001CE                     C1FLTOBJ8U      equ	462	;# 
 13536   0001CF                     C1FLTOBJ8T      equ	463	;# 
 13537   0001D0                     C1MASK8         equ	464	;# 
 13538   0001D0                     C1MASK8L        equ	464	;# 
 13539   0001D1                     C1MASK8H        equ	465	;# 
 13540   0001D2                     C1MASK8U        equ	466	;# 
 13541   0001D3                     C1MASK8T        equ	467	;# 
 13542   0001D4                     C1FLTOBJ9       equ	468	;# 
 13543   0001D4                     C1FLTOBJ9L      equ	468	;# 
 13544   0001D5                     C1FLTOBJ9H      equ	469	;# 
 13545   0001D6                     C1FLTOBJ9U      equ	470	;# 
 13546   0001D7                     C1FLTOBJ9T      equ	471	;# 
 13547   0001D8                     C1MASK9         equ	472	;# 
 13548   0001D8                     C1MASK9L        equ	472	;# 
 13549   0001D9                     C1MASK9H        equ	473	;# 
 13550   0001DA                     C1MASK9U        equ	474	;# 
 13551   0001DB                     C1MASK9T        equ	475	;# 
 13552   0001DC                     C1FLTOBJ10      equ	476	;# 
 13553   0001DC                     C1FLTOBJ10L     equ	476	;# 
 13554   0001DD                     C1FLTOBJ10H     equ	477	;# 
 13555   0001DE                     C1FLTOBJ10U     equ	478	;# 
 13556   0001DF                     C1FLTOBJ10T     equ	479	;# 
 13557   0001E0                     C1MASK10        equ	480	;# 
 13558   0001E0                     C1MASK10L       equ	480	;# 
 13559   0001E1                     C1MASK10H       equ	481	;# 
 13560   0001E2                     C1MASK10U       equ	482	;# 
 13561   0001E3                     C1MASK10T       equ	483	;# 
 13562   0001E4                     C1FLTOBJ11      equ	484	;# 
 13563   0001E4                     C1FLTOBJ11L     equ	484	;# 
 13564   0001E5                     C1FLTOBJ11H     equ	485	;# 
 13565   0001E6                     C1FLTOBJ11U     equ	486	;# 
 13566   0001E7                     C1FLTOBJ11T     equ	487	;# 
 13567   0001E8                     C1MASK11        equ	488	;# 
 13568   0001E8                     C1MASK11L       equ	488	;# 
 13569   0001E9                     C1MASK11H       equ	489	;# 
 13570   0001EA                     C1MASK11U       equ	490	;# 
 13571   0001EB                     C1MASK11T       equ	491	;# 
 13572   000200                     PPSLOCK         equ	512	;# 
 13573   000201                     RA0PPS          equ	513	;# 
 13574   000202                     RA1PPS          equ	514	;# 
 13575   000203                     RA2PPS          equ	515	;# 
 13576   000204                     RA3PPS          equ	516	;# 
 13577   000205                     RA4PPS          equ	517	;# 
 13578   000206                     RA5PPS          equ	518	;# 
 13579   000207                     RA6PPS          equ	519	;# 
 13580   000208                     RA7PPS          equ	520	;# 
 13581   000209                     RB0PPS          equ	521	;# 
 13582   00020A                     RB1PPS          equ	522	;# 
 13583   00020B                     RB2PPS          equ	523	;# 
 13584   00020C                     RB3PPS          equ	524	;# 
 13585   00020D                     RB4PPS          equ	525	;# 
 13586   00020E                     RB5PPS          equ	526	;# 
 13587   00020F                     RB6PPS          equ	527	;# 
 13588   000210                     RB7PPS          equ	528	;# 
 13589   000211                     RC0PPS          equ	529	;# 
 13590   000212                     RC1PPS          equ	530	;# 
 13591   000213                     RC2PPS          equ	531	;# 
 13592   000214                     RC3PPS          equ	532	;# 
 13593   000215                     RC4PPS          equ	533	;# 
 13594   000216                     RC5PPS          equ	534	;# 
 13595   000217                     RC6PPS          equ	535	;# 
 13596   000218                     RC7PPS          equ	536	;# 
 13597   00023D                     CANRXPPS        equ	573	;# 
 13598   00023E                     INT0PPS         equ	574	;# 
 13599   00023F                     INT1PPS         equ	575	;# 
 13600   000240                     INT2PPS         equ	576	;# 
 13601   000241                     T0CKIPPS        equ	577	;# 
 13602   000242                     T1CKIPPS        equ	578	;# 
 13603   000243                     T1GPPS          equ	579	;# 
 13604   000244                     T3CKIPPS        equ	580	;# 
 13605   000245                     T3GPPS          equ	581	;# 
 13606   000246                     T5CKIPPS        equ	582	;# 
 13607   000247                     T5GPPS          equ	583	;# 
 13608   000248                     T2INPPS         equ	584	;# 
 13609   000249                     T4INPPS         equ	585	;# 
 13610   00024A                     T6INPPS         equ	586	;# 
 13611   00024B                     TUIN0PPS        equ	587	;# 
 13612   00024C                     TUIN1PPS        equ	588	;# 
 13613   00024F                     CCP1PPS         equ	591	;# 
 13614   000250                     CCP2PPS         equ	592	;# 
 13615   000251                     CCP3PPS         equ	593	;# 
 13616   000253                     PWM1ERSPPS      equ	595	;# 
 13617   000254                     PWM2ERSPPS      equ	596	;# 
 13618   000255                     PWM3ERSPPS      equ	597	;# 
 13619   000256                     PWM4ERSPPS      equ	598	;# 
 13620   000257                     PWMIN0PPS       equ	599	;# 
 13621   000258                     PWMIN1PPS       equ	600	;# 
 13622   000259                     SMT1WINPPS      equ	601	;# 
 13623   00025A                     SMT1SIGPPS      equ	602	;# 
 13624   00025B                     CWG1PPS         equ	603	;# 
 13625   00025B                     CWG1INPPS       equ	603	;# 
 13626   00025C                     CWG2PPS         equ	604	;# 
 13627   00025C                     CWG2INPPS       equ	604	;# 
 13628   00025D                     CWG3PPS         equ	605	;# 
 13629   00025D                     CWG3INPPS       equ	605	;# 
 13630   00025E                     MD1CARLPPS      equ	606	;# 
 13631   00025E                     MDCARLPPS       equ	606	;# 
 13632   00025F                     MD1CARHPPS      equ	607	;# 
 13633   00025F                     MDCARHPPS       equ	607	;# 
 13634   000260                     MD1SRCPPS       equ	608	;# 
 13635   000260                     MDSRCPPS        equ	608	;# 
 13636   000261                     CLCIN0PPS       equ	609	;# 
 13637   000262                     CLCIN1PPS       equ	610	;# 
 13638   000263                     CLCIN2PPS       equ	611	;# 
 13639   000264                     CLCIN3PPS       equ	612	;# 
 13640   000265                     CLCIN4PPS       equ	613	;# 
 13641   000266                     CLCIN5PPS       equ	614	;# 
 13642   000267                     CLCIN6PPS       equ	615	;# 
 13643   000268                     CLCIN7PPS       equ	616	;# 
 13644   000269                     ADACTPPS        equ	617	;# 
 13645   00026A                     SPI1SCKPPS      equ	618	;# 
 13646   00026B                     SPI1SDIPPS      equ	619	;# 
 13647   00026C                     SPI1SSPPS       equ	620	;# 
 13648   00026D                     SPI2SCKPPS      equ	621	;# 
 13649   00026E                     SPI2SDIPPS      equ	622	;# 
 13650   00026F                     SPI2SSPPS       equ	623	;# 
 13651   000270                     I2C1SDAPPS      equ	624	;# 
 13652   000271                     I2C1SCLPPS      equ	625	;# 
 13653   000272                     U1RXPPS         equ	626	;# 
 13654   000273                     U1CTSPPS        equ	627	;# 
 13655   000274                     U2RXPPS         equ	628	;# 
 13656   000275                     U2CTSPPS        equ	629	;# 
 13657   000276                     U3RXPPS         equ	630	;# 
 13658   000277                     U3CTSPPS        equ	631	;# 
 13659   000278                     U4RXPPS         equ	632	;# 
 13660   000279                     U4CTSPPS        equ	633	;# 
 13661   00027A                     U5RXPPS         equ	634	;# 
 13662   00027B                     U5CTSPPS        equ	635	;# 
 13663   000286                     RC4I2C          equ	646	;# 
 13664   000287                     RC3I2C          equ	647	;# 
 13665   000288                     RB2I2C          equ	648	;# 
 13666   000289                     RB1I2C          equ	649	;# 
 13667   00028A                     I2C1RXB         equ	650	;# 
 13668   00028B                     I2C1TXB         equ	651	;# 
 13669   00028C                     I2C1CNTL        equ	652	;# 
 13670   00028D                     I2C1CNTH        equ	653	;# 
 13671   00028E                     I2C1ADB0        equ	654	;# 
 13672   00028F                     I2C1ADB1        equ	655	;# 
 13673   000290                     I2C1ADR0        equ	656	;# 
 13674   000291                     I2C1ADR1        equ	657	;# 
 13675   000292                     I2C1ADR2        equ	658	;# 
 13676   000293                     I2C1ADR3        equ	659	;# 
 13677   000294                     I2C1CON0        equ	660	;# 
 13678   000295                     I2C1CON1        equ	661	;# 
 13679   000296                     I2C1CON2        equ	662	;# 
 13680   000297                     I2C1ERR         equ	663	;# 
 13681   000298                     I2C1STAT0       equ	664	;# 
 13682   000299                     I2C1STAT1       equ	665	;# 
 13683   00029A                     I2C1PIR         equ	666	;# 
 13684   00029B                     I2C1PIE         equ	667	;# 
 13685   00029C                     I2C1BTO         equ	668	;# 
 13686   00029D                     I2C1BAUD        equ	669	;# 
 13687   00029E                     I2C1CLK         equ	670	;# 
 13688   00029F                     I2C1BTOC        equ	671	;# 
 13689   0002A1                     U1RXB           equ	673	;# 
 13690   0002A1                     U1RXBL          equ	673	;# 
 13691   0002A2                     U1RXCHK         equ	674	;# 
 13692   0002A3                     U1TXB           equ	675	;# 
 13693   0002A3                     U1TXBL          equ	675	;# 
 13694   0002A4                     U1TXCHK         equ	676	;# 
 13695   0002A5                     U1P1            equ	677	;# 
 13696   0002A5                     U1P1L           equ	677	;# 
 13697   0002A6                     U1P1H           equ	678	;# 
 13698   0002A7                     U1P2            equ	679	;# 
 13699   0002A7                     U1P2L           equ	679	;# 
 13700   0002A8                     U1P2H           equ	680	;# 
 13701   0002A9                     U1P3            equ	681	;# 
 13702   0002A9                     U1P3L           equ	681	;# 
 13703   0002AA                     U1P3H           equ	682	;# 
 13704   0002AB                     U1CON0          equ	683	;# 
 13705   0002AC                     U1CON1          equ	684	;# 
 13706   0002AD                     U1CON2          equ	685	;# 
 13707   0002AE                     U1BRG           equ	686	;# 
 13708   0002AE                     U1BRGL          equ	686	;# 
 13709   0002AF                     U1BRGH          equ	687	;# 
 13710   0002B0                     U1FIFO          equ	688	;# 
 13711   0002B1                     U1UIR           equ	689	;# 
 13712   0002B2                     U1ERRIR         equ	690	;# 
 13713   0002B3                     U1ERRIE         equ	691	;# 
 13714   0002B4                     U2RXB           equ	692	;# 
 13715   0002B4                     U2RXBL          equ	692	;# 
 13716   0002B5                     U2RXCHK         equ	693	;# 
 13717   0002B6                     U2TXB           equ	694	;# 
 13718   0002B6                     U2TXBL          equ	694	;# 
 13719   0002B7                     U2TXCHK         equ	695	;# 
 13720   0002B8                     U2P1            equ	696	;# 
 13721   0002B8                     U2P1L           equ	696	;# 
 13722   0002B9                     U2P1H           equ	697	;# 
 13723   0002BA                     U2P2            equ	698	;# 
 13724   0002BA                     U2P2L           equ	698	;# 
 13725   0002BB                     U2P2H           equ	699	;# 
 13726   0002BC                     U2P3            equ	700	;# 
 13727   0002BC                     U2P3L           equ	700	;# 
 13728   0002BD                     U2P3H           equ	701	;# 
 13729   0002BE                     U2CON0          equ	702	;# 
 13730   0002BF                     U2CON1          equ	703	;# 
 13731   0002C0                     U2CON2          equ	704	;# 
 13732   0002C1                     U2BRG           equ	705	;# 
 13733   0002C1                     U2BRGL          equ	705	;# 
 13734   0002C2                     U2BRGH          equ	706	;# 
 13735   0002C3                     U2FIFO          equ	707	;# 
 13736   0002C4                     U2UIR           equ	708	;# 
 13737   0002C5                     U2ERRIR         equ	709	;# 
 13738   0002C6                     U2ERRIE         equ	710	;# 
 13739   0002C7                     U3RXB           equ	711	;# 
 13740   0002C7                     U3RXBL          equ	711	;# 
 13741   0002C9                     U3TXB           equ	713	;# 
 13742   0002C9                     U3TXBL          equ	713	;# 
 13743   0002CB                     U3P1            equ	715	;# 
 13744   0002CB                     U3P1L           equ	715	;# 
 13745   0002CD                     U3P2            equ	717	;# 
 13746   0002CD                     U3P2L           equ	717	;# 
 13747   0002CF                     U3P3            equ	719	;# 
 13748   0002CF                     U3P3L           equ	719	;# 
 13749   0002D1                     U3CON0          equ	721	;# 
 13750   0002D2                     U3CON1          equ	722	;# 
 13751   0002D3                     U3CON2          equ	723	;# 
 13752   0002D4                     U3BRG           equ	724	;# 
 13753   0002D4                     U3BRGL          equ	724	;# 
 13754   0002D5                     U3BRGH          equ	725	;# 
 13755   0002D6                     U3FIFO          equ	726	;# 
 13756   0002D7                     U3UIR           equ	727	;# 
 13757   0002D8                     U3ERRIR         equ	728	;# 
 13758   0002D9                     U3ERRIE         equ	729	;# 
 13759   0002DA                     U4RXB           equ	730	;# 
 13760   0002DA                     U4RXBL          equ	730	;# 
 13761   0002DC                     U4TXB           equ	732	;# 
 13762   0002DC                     U4TXBL          equ	732	;# 
 13763   0002DE                     U4P1            equ	734	;# 
 13764   0002DE                     U4P1L           equ	734	;# 
 13765   0002E0                     U4P2            equ	736	;# 
 13766   0002E0                     U4P2L           equ	736	;# 
 13767   0002E2                     U4P3            equ	738	;# 
 13768   0002E2                     U4P3L           equ	738	;# 
 13769   0002E4                     U4CON0          equ	740	;# 
 13770   0002E5                     U4CON1          equ	741	;# 
 13771   0002E6                     U4CON2          equ	742	;# 
 13772   0002E7                     U4BRG           equ	743	;# 
 13773   0002E7                     U4BRGL          equ	743	;# 
 13774   0002E8                     U4BRGH          equ	744	;# 
 13775   0002E9                     U4FIFO          equ	745	;# 
 13776   0002EA                     U4UIR           equ	746	;# 
 13777   0002EB                     U4ERRIR         equ	747	;# 
 13778   0002EC                     U4ERRIE         equ	748	;# 
 13779   0002ED                     U5RXB           equ	749	;# 
 13780   0002ED                     U5RXBL          equ	749	;# 
 13781   0002EF                     U5TXB           equ	751	;# 
 13782   0002EF                     U5TXBL          equ	751	;# 
 13783   0002F1                     U5P1            equ	753	;# 
 13784   0002F1                     U5P1L           equ	753	;# 
 13785   0002F3                     U5P2            equ	755	;# 
 13786   0002F3                     U5P2L           equ	755	;# 
 13787   0002F5                     U5P3            equ	757	;# 
 13788   0002F5                     U5P3L           equ	757	;# 
 13789   0002F7                     U5CON0          equ	759	;# 
 13790   0002F8                     U5CON1          equ	760	;# 
 13791   0002F9                     U5CON2          equ	761	;# 
 13792   0002FA                     U5BRG           equ	762	;# 
 13793   0002FA                     U5BRGL          equ	762	;# 
 13794   0002FB                     U5BRGH          equ	763	;# 
 13795   0002FC                     U5FIFO          equ	764	;# 
 13796   0002FD                     U5UIR           equ	765	;# 
 13797   0002FE                     U5ERRIR         equ	766	;# 
 13798   0002FF                     U5ERRIE         equ	767	;# 
 13799   000300                     SMT1TMR         equ	768	;# 
 13800   000300                     SMT1TMRL        equ	768	;# 
 13801   000301                     SMT1TMRH        equ	769	;# 
 13802   000302                     SMT1TMRU        equ	770	;# 
 13803   000303                     SMT1CPR         equ	771	;# 
 13804   000303                     SMT1CPRL        equ	771	;# 
 13805   000304                     SMT1CPRH        equ	772	;# 
 13806   000305                     SMT1CPRU        equ	773	;# 
 13807   000306                     SMT1CPW         equ	774	;# 
 13808   000306                     SMT1CPWL        equ	774	;# 
 13809   000307                     SMT1CPWH        equ	775	;# 
 13810   000308                     SMT1CPWU        equ	776	;# 
 13811   000309                     SMT1PR          equ	777	;# 
 13812   000309                     SMT1PRL         equ	777	;# 
 13813   00030A                     SMT1PRH         equ	778	;# 
 13814   00030B                     SMT1PRU         equ	779	;# 
 13815   00030C                     SMT1CON0        equ	780	;# 
 13816   00030D                     SMT1CON1        equ	781	;# 
 13817   00030E                     SMT1STAT        equ	782	;# 
 13818   00030F                     SMT1CLK         equ	783	;# 
 13819   000310                     SMT1SIG         equ	784	;# 
 13820   000311                     SMT1WIN         equ	785	;# 
 13821   000318                     TMR0L           equ	792	;# 
 13822   000318                     TMR0            equ	792	;# 
 13823   000319                     TMR0H           equ	793	;# 
 13824   000319                     PR0             equ	793	;# 
 13825   00031A                     T0CON0          equ	794	;# 
 13826   00031B                     T0CON1          equ	795	;# 
 13827   00031C                     TMR1            equ	796	;# 
 13828   00031C                     TMR1L           equ	796	;# 
 13829   00031D                     TMR1H           equ	797	;# 
 13830   00031E                     T1CON           equ	798	;# 
 13831   00031E                     TMR1CON         equ	798	;# 
 13832   00031F                     T1GCON          equ	799	;# 
 13833   00031F                     TMR1GCON        equ	799	;# 
 13834   000320                     T1GATE          equ	800	;# 
 13835   000320                     TMR1GATE        equ	800	;# 
 13836   000321                     T1CLK           equ	801	;# 
 13837   000321                     TMR1CLK         equ	801	;# 
 13838   000321                     PR1             equ	801	;# 
 13839   000322                     T2TMR           equ	802	;# 
 13840   000322                     TMR2            equ	802	;# 
 13841   000323                     T2PR            equ	803	;# 
 13842   000323                     PR2             equ	803	;# 
 13843   000324                     T2CON           equ	804	;# 
 13844   000325                     T2HLT           equ	805	;# 
 13845   000326                     T2CLKCON        equ	806	;# 
 13846   000326                     T2CLK           equ	806	;# 
 13847   000327                     T2RST           equ	807	;# 
 13848   000328                     TMR3            equ	808	;# 
 13849   000328                     TMR3L           equ	808	;# 
 13850   000329                     TMR3H           equ	809	;# 
 13851   00032A                     T3CON           equ	810	;# 
 13852   00032A                     TMR3CON         equ	810	;# 
 13853   00032B                     T3GCON          equ	811	;# 
 13854   00032B                     TMR3GCON        equ	811	;# 
 13855   00032C                     T3GATE          equ	812	;# 
 13856   00032C                     TMR3GATE        equ	812	;# 
 13857   00032D                     T3CLK           equ	813	;# 
 13858   00032D                     TMR3CLK         equ	813	;# 
 13859   00032D                     PR3             equ	813	;# 
 13860   00032E                     T4TMR           equ	814	;# 
 13861   00032E                     TMR4            equ	814	;# 
 13862   00032F                     T4PR            equ	815	;# 
 13863   00032F                     PR4             equ	815	;# 
 13864   000330                     T4CON           equ	816	;# 
 13865   000331                     T4HLT           equ	817	;# 
 13866   000332                     T4CLKCON        equ	818	;# 
 13867   000332                     T4CLK           equ	818	;# 
 13868   000333                     T4RST           equ	819	;# 
 13869   000334                     TMR5            equ	820	;# 
 13870   000334                     TMR5L           equ	820	;# 
 13871   000335                     TMR5H           equ	821	;# 
 13872   000336                     T5CON           equ	822	;# 
 13873   000336                     TMR5CON         equ	822	;# 
 13874   000337                     T5GCON          equ	823	;# 
 13875   000337                     TMR5GCON        equ	823	;# 
 13876   000338                     T5GATE          equ	824	;# 
 13877   000338                     TMR5GATE        equ	824	;# 
 13878   000339                     T5CLK           equ	825	;# 
 13879   000339                     TMR5CLK         equ	825	;# 
 13880   000339                     PR5             equ	825	;# 
 13881   00033A                     T6TMR           equ	826	;# 
 13882   00033A                     TMR6            equ	826	;# 
 13883   00033B                     T6PR            equ	827	;# 
 13884   00033B                     PR6             equ	827	;# 
 13885   00033C                     T6CON           equ	828	;# 
 13886   00033D                     T6HLT           equ	829	;# 
 13887   00033E                     T6CLKCON        equ	830	;# 
 13888   00033E                     T6CLK           equ	830	;# 
 13889   00033F                     T6RST           equ	831	;# 
 13890   000340                     CCPR1           equ	832	;# 
 13891   000340                     CCPR1L          equ	832	;# 
 13892   000341                     CCPR1H          equ	833	;# 
 13893   000342                     CCP1CON         equ	834	;# 
 13894   000343                     CCP1CAP         equ	835	;# 
 13895   000344                     CCPR2           equ	836	;# 
 13896   000344                     CCPR2L          equ	836	;# 
 13897   000345                     CCPR2H          equ	837	;# 
 13898   000346                     CCP2CON         equ	838	;# 
 13899   000347                     CCP2CAP         equ	839	;# 
 13900   000348                     CCPR3           equ	840	;# 
 13901   000348                     CCPR3L          equ	840	;# 
 13902   000349                     CCPR3H          equ	841	;# 
 13903   00034A                     CCP3CON         equ	842	;# 
 13904   00034B                     CCP3CAP         equ	843	;# 
 13905   00034C                     CCPTMRS0        equ	844	;# 
 13906   00034F                     CRCDATA         equ	847	;# 
 13907   00034F                     CRCDATAL        equ	847	;# 
 13908   000350                     CRCDATAH        equ	848	;# 
 13909   000351                     CRCDATAU        equ	849	;# 
 13910   000352                     CRCDATAT        equ	850	;# 
 13911   000353                     CRCOUT          equ	851	;# 
 13912   000353                     CRCSHFT         equ	851	;# 
 13913   000353                     CRCXOR          equ	851	;# 
 13914   000353                     CRCOUTL         equ	851	;# 
 13915   000353                     CRCSHFTL        equ	851	;# 
 13916   000353                     CRCSHIFTL       equ	851	;# 
 13917   000353                     CRCXORL         equ	851	;# 
 13918   000354                     CRCOUTH         equ	852	;# 
 13919   000354                     CRCSHFTH        equ	852	;# 
 13920   000354                     CRCSHIFTH       equ	852	;# 
 13921   000354                     CRCXORH         equ	852	;# 
 13922   000355                     CRCOUTU         equ	853	;# 
 13923   000355                     CRCSHFTU        equ	853	;# 
 13924   000355                     CRCSHIFTU       equ	853	;# 
 13925   000355                     CRCXORU         equ	853	;# 
 13926   000356                     CRCOUTT         equ	854	;# 
 13927   000356                     CRCSHFTT        equ	854	;# 
 13928   000356                     CRCSHIFTT       equ	854	;# 
 13929   000356                     CRCXORT         equ	854	;# 
 13930   000357                     CRCCON0         equ	855	;# 
 13931   000358                     CRCCON1         equ	856	;# 
 13932   000359                     CRCCON2         equ	857	;# 
 13933   00035A                     SCANLADR        equ	858	;# 
 13934   00035A                     SCANLADRL       equ	858	;# 
 13935   00035B                     SCANLADRH       equ	859	;# 
 13936   00035C                     SCANLADRU       equ	860	;# 
 13937   00035D                     SCANHADR        equ	861	;# 
 13938   00035D                     SCANHADRL       equ	861	;# 
 13939   00035E                     SCANHADRH       equ	862	;# 
 13940   00035F                     SCANHADRU       equ	863	;# 
 13941   000360                     SCANCON0        equ	864	;# 
 13942   000361                     SCANTRIG        equ	865	;# 
 13943   000362                     IPR0            equ	866	;# 
 13944   000363                     IPR1            equ	867	;# 
 13945   000364                     IPR2            equ	868	;# 
 13946   000365                     IPR3            equ	869	;# 
 13947   000366                     IPR4            equ	870	;# 
 13948   000367                     IPR5            equ	871	;# 
 13949   000368                     IPR6            equ	872	;# 
 13950   000369                     IPR7            equ	873	;# 
 13951   00036A                     IPR8            equ	874	;# 
 13952   00036B                     IPR9            equ	875	;# 
 13953   00036C                     IPR10           equ	876	;# 
 13954   00036D                     IPR11           equ	877	;# 
 13955   00036E                     IPR12           equ	878	;# 
 13956   00036F                     IPR13           equ	879	;# 
 13957   000370                     IPR14           equ	880	;# 
 13958   000371                     IPR15           equ	881	;# 
 13959   000373                     STATUS_CSHAD    equ	883	;# 
 13960   000374                     WREG_CSHAD      equ	884	;# 
 13961   000375                     BSR_CSHAD       equ	885	;# 
 13962   000376                     SHADCON         equ	886	;# 
 13963   000377                     STATUS_SHAD     equ	887	;# 
 13964   000378                     WREG_SHAD       equ	888	;# 
 13965   000379                     BSR_SHAD        equ	889	;# 
 13966   00037A                     PCLATH_SHAD     equ	890	;# 
 13967   00037B                     PCLATU_SHAD     equ	891	;# 
 13968   00037C                     FSR0SH          equ	892	;# 
 13969   00037C                     FSR0L_SHAD      equ	892	;# 
 13970   00037D                     FSR0H_SHAD      equ	893	;# 
 13971   00037E                     FSR1SH          equ	894	;# 
 13972   00037E                     FSR1L_SHAD      equ	894	;# 
 13973   00037F                     FSR1H_SHAD      equ	895	;# 
 13974   000380                     FSR2SH          equ	896	;# 
 13975   000380                     FSR2L_SHAD      equ	896	;# 
 13976   000381                     FSR2H_SHAD      equ	897	;# 
 13977   000382                     PRODSH          equ	898	;# 
 13978   000382                     PRODL_SHAD      equ	898	;# 
 13979   000383                     PRODH_SHAD      equ	899	;# 
 13980   000387                     TU16ACON0       equ	903	;# 
 13981   000388                     TU16ACON1       equ	904	;# 
 13982   000389                     TU16AHLT        equ	905	;# 
 13983   00038A                     TU16APS         equ	906	;# 
 13984   00038B                     TU16ATMR        equ	907	;# 
 13985   00038B                     TU16ACR         equ	907	;# 
 13986   00038B                     TU16ATMRL       equ	907	;# 
 13987   00038B                     TU16ACRL        equ	907	;# 
 13988   00038C                     TU16ATMRH       equ	908	;# 
 13989   00038C                     TU16ACRH        equ	908	;# 
 13990   00038D                     TU16APR         equ	909	;# 
 13991   00038D                     TU16APRL        equ	909	;# 
 13992   00038E                     TU16APRH        equ	910	;# 
 13993   00038F                     TU16ACLK        equ	911	;# 
 13994   000390                     TU16AERS        equ	912	;# 
 13995   000393                     TU16BCON0       equ	915	;# 
 13996   000394                     TU16BCON1       equ	916	;# 
 13997   000395                     TU16BHLT        equ	917	;# 
 13998   000396                     TU16BPS         equ	918	;# 
 13999   000397                     TU16BTMR        equ	919	;# 
 14000   000397                     TU16BCR         equ	919	;# 
 14001   000397                     TU16BTMRL       equ	919	;# 
 14002   000397                     TU16BCRL        equ	919	;# 
 14003   000398                     TU16BTMRH       equ	920	;# 
 14004   000398                     TU16BCRH        equ	920	;# 
 14005   000399                     TU16BPR         equ	921	;# 
 14006   000399                     TU16BPRL        equ	921	;# 
 14007   00039A                     TU16BPRH        equ	922	;# 
 14008   00039B                     TU16BCLK        equ	923	;# 
 14009   00039C                     TU16BERS        equ	924	;# 
 14010   0003BB                     TUCHAIN         equ	955	;# 
 14011   0003BC                     CWG1CLK         equ	956	;# 
 14012   0003BC                     CWG1CLKCON      equ	956	;# 
 14013   0003BD                     CWG1ISM         equ	957	;# 
 14014   0003BE                     CWG1DBR         equ	958	;# 
 14015   0003BF                     CWG1DBF         equ	959	;# 
 14016   0003C0                     CWG1CON0        equ	960	;# 
 14017   0003C1                     CWG1CON1        equ	961	;# 
 14018   0003C2                     CWG1AS0         equ	962	;# 
 14019   0003C3                     CWG1AS1         equ	963	;# 
 14020   0003C4                     CWG1STR         equ	964	;# 
 14021   0003C5                     CWG2CLK         equ	965	;# 
 14022   0003C5                     CWG2CLKCON      equ	965	;# 
 14023   0003C6                     CWG2ISM         equ	966	;# 
 14024   0003C7                     CWG2DBR         equ	967	;# 
 14025   0003C8                     CWG2DBF         equ	968	;# 
 14026   0003C9                     CWG2CON0        equ	969	;# 
 14027   0003CA                     CWG2CON1        equ	970	;# 
 14028   0003CB                     CWG2AS0         equ	971	;# 
 14029   0003CC                     CWG2AS1         equ	972	;# 
 14030   0003CD                     CWG2STR         equ	973	;# 
 14031   0003CE                     CWG3CLK         equ	974	;# 
 14032   0003CE                     CWG3CLKCON      equ	974	;# 
 14033   0003CF                     CWG3ISM         equ	975	;# 
 14034   0003D0                     CWG3DBR         equ	976	;# 
 14035   0003D1                     CWG3DBF         equ	977	;# 
 14036   0003D2                     CWG3CON0        equ	978	;# 
 14037   0003D3                     CWG3CON1        equ	979	;# 
 14038   0003D4                     CWG3AS0         equ	980	;# 
 14039   0003D5                     CWG3AS1         equ	981	;# 
 14040   0003D6                     CWG3STR         equ	982	;# 
 14041   0003D7                     FVRCON          equ	983	;# 
 14042   0003D8                     ADCPCON         equ	984	;# 
 14043   0003D8                     ADCP            equ	984	;# 
 14044   0003D9                     ADLTH           equ	985	;# 
 14045   0003D9                     ADLTHL          equ	985	;# 
 14046   0003DA                     ADLTHH          equ	986	;# 
 14047   0003DB                     ADUTH           equ	987	;# 
 14048   0003DB                     ADUTHL          equ	987	;# 
 14049   0003DC                     ADUTHH          equ	988	;# 
 14050   0003DD                     ADERR           equ	989	;# 
 14051   0003DD                     ADERRL          equ	989	;# 
 14052   0003DE                     ADERRH          equ	990	;# 
 14053   0003DF                     ADSTPT          equ	991	;# 
 14054   0003DF                     ADSTPTL         equ	991	;# 
 14055   0003E0                     ADSTPTH         equ	992	;# 
 14056   0003E1                     ADFLTR          equ	993	;# 
 14057   0003E1                     ADFLTRL         equ	993	;# 
 14058   0003E2                     ADFLTRH         equ	994	;# 
 14059   0003E3                     ADACC           equ	995	;# 
 14060   0003E3                     ADACCL          equ	995	;# 
 14061   0003E4                     ADACCH          equ	996	;# 
 14062   0003E5                     ADACCU          equ	997	;# 
 14063   0003E6                     ADCNT           equ	998	;# 
 14064   0003E7                     ADRPT           equ	999	;# 
 14065   0003E8                     ADPREV          equ	1000	;# 
 14066   0003E8                     ADPREVL         equ	1000	;# 
 14067   0003E9                     ADPREVH         equ	1001	;# 
 14068   0003EA                     ADRES           equ	1002	;# 
 14069   0003EA                     ADRESL          equ	1002	;# 
 14070   0003EB                     ADRESH          equ	1003	;# 
 14071   0003EC                     ADPCH           equ	1004	;# 
 14072   0003EE                     ADACQ           equ	1006	;# 
 14073   0003EE                     ADACQL          equ	1006	;# 
 14074   0003EF                     ADACQH          equ	1007	;# 
 14075   0003F0                     ADCAP           equ	1008	;# 
 14076   0003F1                     ADPRE           equ	1009	;# 
 14077   0003F1                     ADPREL          equ	1009	;# 
 14078   0003F2                     ADPREH          equ	1010	;# 
 14079   0003F3                     ADCON0          equ	1011	;# 
 14080   0003F4                     ADCON1          equ	1012	;# 
 14081   0003F5                     ADCON2          equ	1013	;# 
 14082   0003F6                     ADCON3          equ	1014	;# 
 14083   0003F7                     ADSTAT          equ	1015	;# 
 14084   0003F8                     ADREF           equ	1016	;# 
 14085   0003F9                     ADACT           equ	1017	;# 
 14086   0003FA                     ADCLK           equ	1018	;# 
 14087   0003FB                     ADCTX           equ	1019	;# 
 14088   0003FC                     ADCSEL1         equ	1020	;# 
 14089   0003FD                     ADCSEL2         equ	1021	;# 
 14090   0003FE                     ADCSEL3         equ	1022	;# 
 14091   0003FF                     ADCSEL4         equ	1023	;# 
 14092   000400                     ANSELA          equ	1024	;# 
 14093   000401                     WPUA            equ	1025	;# 
 14094   000402                     ODCONA          equ	1026	;# 
 14095   000403                     SLRCONA         equ	1027	;# 
 14096   000404                     INLVLA          equ	1028	;# 
 14097   000405                     IOCAP           equ	1029	;# 
 14098   000406                     IOCAN           equ	1030	;# 
 14099   000407                     IOCAF           equ	1031	;# 
 14100   000408                     ANSELB          equ	1032	;# 
 14101   000409                     WPUB            equ	1033	;# 
 14102   00040A                     ODCONB          equ	1034	;# 
 14103   00040B                     SLRCONB         equ	1035	;# 
 14104   00040C                     INLVLB          equ	1036	;# 
 14105   00040D                     IOCBP           equ	1037	;# 
 14106   00040E                     IOCBN           equ	1038	;# 
 14107   00040F                     IOCBF           equ	1039	;# 
 14108   000410                     ANSELC          equ	1040	;# 
 14109   000411                     WPUC            equ	1041	;# 
 14110   000412                     ODCONC          equ	1042	;# 
 14111   000413                     SLRCONC         equ	1043	;# 
 14112   000414                     INLVLC          equ	1044	;# 
 14113   000415                     IOCCP           equ	1045	;# 
 14114   000416                     IOCCN           equ	1046	;# 
 14115   000417                     IOCCF           equ	1047	;# 
 14116   000421                     WPUE            equ	1057	;# 
 14117   000424                     INLVLE          equ	1060	;# 
 14118   000425                     IOCEP           equ	1061	;# 
 14119   000426                     IOCEN           equ	1062	;# 
 14120   000427                     IOCEF           equ	1063	;# 
 14121   000440                     NCO1ACC         equ	1088	;# 
 14122   000440                     NCO1ACCL        equ	1088	;# 
 14123   000441                     NCO1ACCH        equ	1089	;# 
 14124   000442                     NCO1ACCU        equ	1090	;# 
 14125   000443                     NCO1INC         equ	1091	;# 
 14126   000443                     NCO1INCL        equ	1091	;# 
 14127   000444                     NCO1INCH        equ	1092	;# 
 14128   000445                     NCO1INCU        equ	1093	;# 
 14129   000446                     NCO1CON         equ	1094	;# 
 14130   000447                     NCO1CLK         equ	1095	;# 
 14131   000448                     NCO2ACC         equ	1096	;# 
 14132   000448                     NCO2ACCL        equ	1096	;# 
 14133   000449                     NCO2ACCH        equ	1097	;# 
 14134   00044A                     NCO2ACCU        equ	1098	;# 
 14135   00044B                     NCO2INC         equ	1099	;# 
 14136   00044B                     NCO2INCL        equ	1099	;# 
 14137   00044C                     NCO2INCH        equ	1100	;# 
 14138   00044D                     NCO2INCU        equ	1101	;# 
 14139   00044E                     NCO2CON         equ	1102	;# 
 14140   00044F                     NCO2CLK         equ	1103	;# 
 14141   000450                     NCO3ACC         equ	1104	;# 
 14142   000450                     NCO3ACCL        equ	1104	;# 
 14143   000451                     NCO3ACCH        equ	1105	;# 
 14144   000452                     NCO3ACCU        equ	1106	;# 
 14145   000453                     NCO3INC         equ	1107	;# 
 14146   000453                     NCO3INCL        equ	1107	;# 
 14147   000454                     NCO3INCH        equ	1108	;# 
 14148   000455                     NCO3INCU        equ	1109	;# 
 14149   000456                     NCO3CON         equ	1110	;# 
 14150   000457                     NCO3CLK         equ	1111	;# 
 14151   000458                     FSCMCON         equ	1112	;# 
 14152   000459                     IVTLOCK         equ	1113	;# 
 14153   00045A                     IVTAD           equ	1114	;# 
 14154   00045A                     IVTADL          equ	1114	;# 
 14155   00045B                     IVTADH          equ	1115	;# 
 14156   00045C                     IVTADU          equ	1116	;# 
 14157   00045D                     IVTBASE         equ	1117	;# 
 14158   00045D                     IVTBASEL        equ	1117	;# 
 14159   00045E                     IVTBASEH        equ	1118	;# 
 14160   00045F                     IVTBASEU        equ	1119	;# 
 14161   000460                     PWM1ERS         equ	1120	;# 
 14162   000461                     PWM1CLK         equ	1121	;# 
 14163   000462                     PWM1LDS         equ	1122	;# 
 14164   000463                     PWM1PR          equ	1123	;# 
 14165   000463                     PWM1PRL         equ	1123	;# 
 14166   000464                     PWM1PRH         equ	1124	;# 
 14167   000465                     PWM1CPRE        equ	1125	;# 
 14168   000466                     PWM1PIPOS       equ	1126	;# 
 14169   000467                     PWM1GIR         equ	1127	;# 
 14170   000468                     PWM1GIE         equ	1128	;# 
 14171   000469                     PWM1CON         equ	1129	;# 
 14172   00046A                     PWM1S1CFG       equ	1130	;# 
 14173   00046B                     PWM1S1P1        equ	1131	;# 
 14174   00046B                     PWM1S1P1L       equ	1131	;# 
 14175   00046C                     PWM1S1P1H       equ	1132	;# 
 14176   00046D                     PWM1S1P2        equ	1133	;# 
 14177   00046D                     PWM1S1P2L       equ	1133	;# 
 14178   00046E                     PWM1S1P2H       equ	1134	;# 
 14179   00046F                     PWM2ERS         equ	1135	;# 
 14180   000470                     PWM2CLK         equ	1136	;# 
 14181   000471                     PWM2LDS         equ	1137	;# 
 14182   000472                     PWM2PR          equ	1138	;# 
 14183   000472                     PWM2PRL         equ	1138	;# 
 14184   000473                     PWM2PRH         equ	1139	;# 
 14185   000474                     PWM2CPRE        equ	1140	;# 
 14186   000475                     PWM2PIPOS       equ	1141	;# 
 14187   000476                     PWM2GIR         equ	1142	;# 
 14188   000477                     PWM2GIE         equ	1143	;# 
 14189   000478                     PWM2CON         equ	1144	;# 
 14190   000479                     PWM2S1CFG       equ	1145	;# 
 14191   00047A                     PWM2S1P1        equ	1146	;# 
 14192   00047A                     PWM2S1P1L       equ	1146	;# 
 14193   00047B                     PWM2S1P1H       equ	1147	;# 
 14194   00047C                     PWM2S1P2        equ	1148	;# 
 14195   00047C                     PWM2S1P2L       equ	1148	;# 
 14196   00047D                     PWM2S1P2H       equ	1149	;# 
 14197   00047E                     PWM3ERS         equ	1150	;# 
 14198   00047F                     PWM3CLK         equ	1151	;# 
 14199   000480                     PWM3LDS         equ	1152	;# 
 14200   000481                     PWM3PR          equ	1153	;# 
 14201   000481                     PWM3PRL         equ	1153	;# 
 14202   000482                     PWM3PRH         equ	1154	;# 
 14203   000483                     PWM3CPRE        equ	1155	;# 
 14204   000484                     PWM3PIPOS       equ	1156	;# 
 14205   000485                     PWM3GIR         equ	1157	;# 
 14206   000486                     PWM3GIE         equ	1158	;# 
 14207   000487                     PWM3CON         equ	1159	;# 
 14208   000488                     PWM3S1CFG       equ	1160	;# 
 14209   000489                     PWM3S1P1        equ	1161	;# 
 14210   000489                     PWM3S1P1L       equ	1161	;# 
 14211   00048A                     PWM3S1P1H       equ	1162	;# 
 14212   00048B                     PWM3S1P2        equ	1163	;# 
 14213   00048B                     PWM3S1P2L       equ	1163	;# 
 14214   00048C                     PWM3S1P2H       equ	1164	;# 
 14215   00048D                     PWM4ERS         equ	1165	;# 
 14216   00048E                     PWM4CLK         equ	1166	;# 
 14217   00048F                     PWM4LDS         equ	1167	;# 
 14218   000490                     PWM4PR          equ	1168	;# 
 14219   000490                     PWM4PRL         equ	1168	;# 
 14220   000491                     PWM4PRH         equ	1169	;# 
 14221   000492                     PWM4CPRE        equ	1170	;# 
 14222   000493                     PWM4PIPOS       equ	1171	;# 
 14223   000494                     PWM4GIR         equ	1172	;# 
 14224   000495                     PWM4GIE         equ	1173	;# 
 14225   000496                     PWM4CON         equ	1174	;# 
 14226   000497                     PWM4S1CFG       equ	1175	;# 
 14227   000498                     PWM4S1P1        equ	1176	;# 
 14228   000498                     PWM4S1P1L       equ	1176	;# 
 14229   000499                     PWM4S1P1H       equ	1177	;# 
 14230   00049A                     PWM4S1P2        equ	1178	;# 
 14231   00049A                     PWM4S1P2L       equ	1178	;# 
 14232   00049B                     PWM4S1P2H       equ	1179	;# 
 14233   00049C                     PWMLOAD         equ	1180	;# 
 14234   00049D                     PWMEN           equ	1181	;# 
 14235   00049E                     PIE0            equ	1182	;# 
 14236   00049F                     PIE1            equ	1183	;# 
 14237   0004A0                     PIE2            equ	1184	;# 
 14238   0004A1                     PIE3            equ	1185	;# 
 14239   0004A2                     PIE4            equ	1186	;# 
 14240   0004A3                     PIE5            equ	1187	;# 
 14241   0004A4                     PIE6            equ	1188	;# 
 14242   0004A5                     PIE7            equ	1189	;# 
 14243   0004A6                     PIE8            equ	1190	;# 
 14244   0004A7                     PIE9            equ	1191	;# 
 14245   0004A8                     PIE10           equ	1192	;# 
 14246   0004A9                     PIE11           equ	1193	;# 
 14247   0004AA                     PIE12           equ	1194	;# 
 14248   0004AB                     PIE13           equ	1195	;# 
 14249   0004AC                     PIE14           equ	1196	;# 
 14250   0004AD                     PIE15           equ	1197	;# 
 14251   0004AE                     PIR0            equ	1198	;# 
 14252   0004AF                     PIR1            equ	1199	;# 
 14253   0004B0                     PIR2            equ	1200	;# 
 14254   0004B1                     PIR3            equ	1201	;# 
 14255   0004B2                     PIR4            equ	1202	;# 
 14256   0004B3                     PIR5            equ	1203	;# 
 14257   0004B4                     PIR6            equ	1204	;# 
 14258   0004B5                     PIR7            equ	1205	;# 
 14259   0004B6                     PIR8            equ	1206	;# 
 14260   0004B7                     PIR9            equ	1207	;# 
 14261   0004B8                     PIR10           equ	1208	;# 
 14262   0004B9                     PIR11           equ	1209	;# 
 14263   0004BA                     PIR12           equ	1210	;# 
 14264   0004BB                     PIR13           equ	1211	;# 
 14265   0004BC                     PIR14           equ	1212	;# 
 14266   0004BD                     PIR15           equ	1213	;# 
 14267   0004BE                     LATA            equ	1214	;# 
 14268   0004BF                     LATB            equ	1215	;# 
 14269   0004C0                     LATC            equ	1216	;# 
 14270   0004C6                     TRISA           equ	1222	;# 
 14271   0004C7                     TRISB           equ	1223	;# 
 14272   0004C8                     TRISC           equ	1224	;# 
 14273   0004CA                     TRISE           equ	1226	;# 
 14274   0004CE                     PORTA           equ	1230	;# 
 14275   0004CF                     PORTB           equ	1231	;# 
 14276   0004D0                     PORTC           equ	1232	;# 
 14277   0004D2                     PORTE           equ	1234	;# 
 14278   0004D6                     INTCON0         equ	1238	;# 
 14279   0004D7                     INTCON1         equ	1239	;# 
 14280   0004D8                     STATUS          equ	1240	;# 
 14281   0004D9                     FSR2            equ	1241	;# 
 14282   0004D9                     FSR2L           equ	1241	;# 
 14283   0004DA                     FSR2H           equ	1242	;# 
 14284   0004DB                     PLUSW2          equ	1243	;# 
 14285   0004DC                     PREINC2         equ	1244	;# 
 14286   0004DD                     POSTDEC2        equ	1245	;# 
 14287   0004DE                     POSTINC2        equ	1246	;# 
 14288   0004DF                     INDF2           equ	1247	;# 
 14289   0004E0                     BSR             equ	1248	;# 
 14290   0004E1                     FSR1            equ	1249	;# 
 14291   0004E1                     FSR1L           equ	1249	;# 
 14292   0004E2                     FSR1H           equ	1250	;# 
 14293   0004E3                     PLUSW1          equ	1251	;# 
 14294   0004E4                     PREINC1         equ	1252	;# 
 14295   0004E5                     POSTDEC1        equ	1253	;# 
 14296   0004E6                     POSTINC1        equ	1254	;# 
 14297   0004E7                     INDF1           equ	1255	;# 
 14298   0004E8                     WREG            equ	1256	;# 
 14299   0004E9                     FSR0            equ	1257	;# 
 14300   0004E9                     FSR0L           equ	1257	;# 
 14301   0004EA                     FSR0H           equ	1258	;# 
 14302   0004EB                     PLUSW0          equ	1259	;# 
 14303   0004EC                     PREINC0         equ	1260	;# 
 14304   0004ED                     POSTDEC0        equ	1261	;# 
 14305   0004EE                     POSTINC0        equ	1262	;# 
 14306   0004EF                     INDF0           equ	1263	;# 
 14307   0004F0                     PCON0           equ	1264	;# 
 14308   0004F1                     PCON1           equ	1265	;# 
 14309   0004F2                     CPUDOZE         equ	1266	;# 
 14310   0004F3                     PROD            equ	1267	;# 
 14311   0004F3                     PRODL           equ	1267	;# 
 14312   0004F4                     PRODH           equ	1268	;# 
 14313   0004F5                     TABLAT          equ	1269	;# 
 14314   0004F6                     TBLPTR          equ	1270	;# 
 14315   0004F6                     TBLPTRL         equ	1270	;# 
 14316   0004F7                     TBLPTRH         equ	1271	;# 
 14317   0004F8                     TBLPTRU         equ	1272	;# 
 14318   0004F9                     PCLAT           equ	1273	;# 
 14319   0004F9                     PCL             equ	1273	;# 
 14320   0004FA                     PCLATH          equ	1274	;# 
 14321   0004FB                     PCLATU          equ	1275	;# 
 14322   0004FC                     STKPTR          equ	1276	;# 
 14323   0004FD                     TOS             equ	1277	;# 
 14324   0004FD                     TOSL            equ	1277	;# 
 14325   0004FE                     TOSH            equ	1278	;# 
 14326   0004FF                     TOSU            equ	1279	;# 
 14327   000038                     BOOTREG         equ	56	;# 
 14328   000039                     CLKRCON         equ	57	;# 
 14329   00003A                     CLKRCLK         equ	58	;# 
 14330   000040                     NVMCON0         equ	64	;# 
 14331   000041                     NVMCON1         equ	65	;# 
 14332   000042                     NVMLOCK         equ	66	;# 
 14333   000043                     NVMADR          equ	67	;# 
 14334   000043                     NVMADRL         equ	67	;# 
 14335   000044                     NVMADRH         equ	68	;# 
 14336   000045                     NVMADRU         equ	69	;# 
 14337   000046                     NVMDAT          equ	70	;# 
 14338   000046                     NVMDATL         equ	70	;# 
 14339   000047                     NVMDATH         equ	71	;# 
 14340   000048                     VREGCON         equ	72	;# 
 14341   000049                     BORCON          equ	73	;# 
 14342   00004A                     HLVDCON0        equ	74	;# 
 14343   00004B                     HLVDCON1        equ	75	;# 
 14344   00004C                     ZCDCON          equ	76	;# 
 14345   000060                     PMD0            equ	96	;# 
 14346   000061                     PMD1            equ	97	;# 
 14347   000062                     PMD2            equ	98	;# 
 14348   000063                     PMD3            equ	99	;# 
 14349   000064                     PMD4            equ	100	;# 
 14350   000065                     PMD5            equ	101	;# 
 14351   000066                     PMD6            equ	102	;# 
 14352   000067                     PMD7            equ	103	;# 
 14353   000068                     PMD8            equ	104	;# 
 14354   00006A                     MD1CON0         equ	106	;# 
 14355   00006B                     MD1CON1         equ	107	;# 
 14356   00006C                     MD1SRC          equ	108	;# 
 14357   00006D                     MD1CARL         equ	109	;# 
 14358   00006E                     MD1CARH         equ	110	;# 
 14359   00006F                     CMOUT           equ	111	;# 
 14360   000070                     CM1CON0         equ	112	;# 
 14361   000071                     CM1CON1         equ	113	;# 
 14362   000072                     CM1NCH          equ	114	;# 
 14363   000073                     CM1PCH          equ	115	;# 
 14364   000074                     CM2CON0         equ	116	;# 
 14365   000075                     CM2CON1         equ	117	;# 
 14366   000076                     CM2NCH          equ	118	;# 
 14367   000077                     CM2PCH          equ	119	;# 
 14368   000078                     WDTCON0         equ	120	;# 
 14369   000079                     WDTCON1         equ	121	;# 
 14370   00007A                     WDTPSL          equ	122	;# 
 14371   00007B                     WDTPSH          equ	123	;# 
 14372   00007C                     WDTTMR          equ	124	;# 
 14373   00007D                     DAC1DAT         equ	125	;# 
 14374   00007D                     DAC1DATL        equ	125	;# 
 14375   00007F                     DAC1CON         equ	127	;# 
 14376   000080                     SPI1RXB         equ	128	;# 
 14377   000081                     SPI1TXB         equ	129	;# 
 14378   000082                     SPI1TCNT        equ	130	;# 
 14379   000082                     SPI1TCNTL       equ	130	;# 
 14380   000083                     SPI1TCNTH       equ	131	;# 
 14381   000084                     SPI1CON0        equ	132	;# 
 14382   000085                     SPI1CON1        equ	133	;# 
 14383   000086                     SPI1CON2        equ	134	;# 
 14384   000087                     SPI1STATUS      equ	135	;# 
 14385   000088                     SPI1TWIDTH      equ	136	;# 
 14386   000089                     SPI1BAUD        equ	137	;# 
 14387   00008A                     SPI1INTF        equ	138	;# 
 14388   00008B                     SPI1INTE        equ	139	;# 
 14389   00008C                     SPI1CLK         equ	140	;# 
 14390   00008D                     SPI2RXB         equ	141	;# 
 14391   00008E                     SPI2TXB         equ	142	;# 
 14392   00008F                     SPI2TCNT        equ	143	;# 
 14393   00008F                     SPI2TCNTL       equ	143	;# 
 14394   000090                     SPI2TCNTH       equ	144	;# 
 14395   000091                     SPI2CON0        equ	145	;# 
 14396   000092                     SPI2CON1        equ	146	;# 
 14397   000093                     SPI2CON2        equ	147	;# 
 14398   000094                     SPI2STATUS      equ	148	;# 
 14399   000095                     SPI2TWIDTH      equ	149	;# 
 14400   000096                     SPI2BAUD        equ	150	;# 
 14401   000097                     SPI2INTF        equ	151	;# 
 14402   000098                     SPI2INTE        equ	152	;# 
 14403   000099                     SPI2CLK         equ	153	;# 
 14404   0000AC                     ACTCON          equ	172	;# 
 14405   0000AD                     OSCCON1         equ	173	;# 
 14406   0000AE                     OSCCON2         equ	174	;# 
 14407   0000AF                     OSCCON3         equ	175	;# 
 14408   0000B0                     OSCTUNE         equ	176	;# 
 14409   0000B1                     OSCFRQ          equ	177	;# 
 14410   0000B1                     OSCFREQ         equ	177	;# 
 14411   0000B2                     OSCSTAT         equ	178	;# 
 14412   0000B2                     OSCSTAT1        equ	178	;# 
 14413   0000B3                     OSCEN           equ	179	;# 
 14414   0000B4                     PRLOCK          equ	180	;# 
 14415   0000B5                     SCANPR          equ	181	;# 
 14416   0000B6                     DMA1PR          equ	182	;# 
 14417   0000B7                     DMA2PR          equ	183	;# 
 14418   0000B8                     DMA3PR          equ	184	;# 
 14419   0000B9                     DMA4PR          equ	185	;# 
 14420   0000BA                     DMA5PR          equ	186	;# 
 14421   0000BB                     DMA6PR          equ	187	;# 
 14422   0000BC                     DMA7PR          equ	188	;# 
 14423   0000BD                     DMA8PR          equ	189	;# 
 14424   0000BE                     MAINPR          equ	190	;# 
 14425   0000BF                     ISRPR           equ	191	;# 
 14426   0000D4                     CLCDATA         equ	212	;# 
 14427   0000D5                     CLCSELECT       equ	213	;# 
 14428   0000D6                     CLCnCON         equ	214	;# 
 14429   0000D7                     CLCnPOL         equ	215	;# 
 14430   0000D8                     CLCnSEL0        equ	216	;# 
 14431   0000D9                     CLCnSEL1        equ	217	;# 
 14432   0000DA                     CLCnSEL2        equ	218	;# 
 14433   0000DB                     CLCnSEL3        equ	219	;# 
 14434   0000DC                     CLCnGLS0        equ	220	;# 
 14435   0000DD                     CLCnGLS1        equ	221	;# 
 14436   0000DE                     CLCnGLS2        equ	222	;# 
 14437   0000DF                     CLCnGLS3        equ	223	;# 
 14438   0000E8                     DMASELECT       equ	232	;# 
 14439   0000E9                     DMAnBUF         equ	233	;# 
 14440   0000EA                     DMAnDCNT        equ	234	;# 
 14441   0000EA                     DMAnDCNTL       equ	234	;# 
 14442   0000EB                     DMAnDCNTH       equ	235	;# 
 14443   0000EC                     DMAnDPTR        equ	236	;# 
 14444   0000EC                     DMAnDPTRL       equ	236	;# 
 14445   0000ED                     DMAnDPTRH       equ	237	;# 
 14446   0000EE                     DMAnDSZ         equ	238	;# 
 14447   0000EE                     DMAnDSZL        equ	238	;# 
 14448   0000EF                     DMAnDSZH        equ	239	;# 
 14449   0000F0                     DMAnDSA         equ	240	;# 
 14450   0000F0                     DMAnDSAL        equ	240	;# 
 14451   0000F1                     DMAnDSAH        equ	241	;# 
 14452   0000F2                     DMAnSCNT        equ	242	;# 
 14453   0000F2                     DMAnSCNTL       equ	242	;# 
 14454   0000F3                     DMAnSCNTH       equ	243	;# 
 14455   0000F4                     DMAnSPTR        equ	244	;# 
 14456   0000F4                     DMAnSPTRL       equ	244	;# 
 14457   0000F5                     DMAnSPTRH       equ	245	;# 
 14458   0000F6                     DMAnSPTRU       equ	246	;# 
 14459   0000F7                     DMAnSSZ         equ	247	;# 
 14460   0000F7                     DMAnSSZL        equ	247	;# 
 14461   0000F8                     DMAnSSZH        equ	248	;# 
 14462   0000F9                     DMAnSSA         equ	249	;# 
 14463   0000F9                     DMAnSSAL        equ	249	;# 
 14464   0000FA                     DMAnSSAH        equ	250	;# 
 14465   0000FB                     DMAnSSAU        equ	251	;# 
 14466   0000FC                     DMAnCON0        equ	252	;# 
 14467   0000FD                     DMAnCON1        equ	253	;# 
 14468   0000FE                     DMAnAIRQ        equ	254	;# 
 14469   0000FF                     DMAnSIRQ        equ	255	;# 
 14470   000100                     C1CONL          equ	256	;# 
 14471   000101                     C1CONH          equ	257	;# 
 14472   000102                     C1CONU          equ	258	;# 
 14473   000103                     C1CONT          equ	259	;# 
 14474   000104                     C1NBTCFGL       equ	260	;# 
 14475   000105                     C1NBTCFGH       equ	261	;# 
 14476   000106                     C1NBTCFGU       equ	262	;# 
 14477   000107                     C1NBTCFGT       equ	263	;# 
 14478   000108                     C1DBTCFGL       equ	264	;# 
 14479   000109                     C1DBTCFGH       equ	265	;# 
 14480   00010A                     C1DBTCFGU       equ	266	;# 
 14481   00010B                     C1DBTCFGT       equ	267	;# 
 14482   00010C                     C1TDCL          equ	268	;# 
 14483   00010D                     C1TDCH          equ	269	;# 
 14484   00010E                     C1TDCU          equ	270	;# 
 14485   000110                     C1TBC           equ	272	;# 
 14486   000110                     C1TBCL          equ	272	;# 
 14487   000111                     C1TBCH          equ	273	;# 
 14488   000112                     C1TBCU          equ	274	;# 
 14489   000113                     C1TBCT          equ	275	;# 
 14490   000114                     C1TSCONL        equ	276	;# 
 14491   000115                     C1TSCONH        equ	277	;# 
 14492   000116                     C1TSCONU        equ	278	;# 
 14493   000117                     C1TSCONT        equ	279	;# 
 14494   000118                     C1VECL          equ	280	;# 
 14495   000119                     C1VECH          equ	281	;# 
 14496   00011A                     C1VECU          equ	282	;# 
 14497   00011B                     C1VECT          equ	283	;# 
 14498   00011C                     C1INTL          equ	284	;# 
 14499   00011D                     C1INTH          equ	285	;# 
 14500   00011E                     C1INTU          equ	286	;# 
 14501   00011F                     C1INTT          equ	287	;# 
 14502   000120                     C1RXIF          equ	288	;# 
 14503   000120                     C1RXIFL         equ	288	;# 
 14504   000121                     C1RXIFH         equ	289	;# 
 14505   000122                     C1RXIFU         equ	290	;# 
 14506   000123                     C1RXIFT         equ	291	;# 
 14507   000124                     C1TXIF          equ	292	;# 
 14508   000124                     C1TXIFL         equ	292	;# 
 14509   000125                     C1TXIFH         equ	293	;# 
 14510   000126                     C1TXIFU         equ	294	;# 
 14511   000127                     C1TXIFT         equ	295	;# 
 14512   000128                     C1RXOVIF        equ	296	;# 
 14513   000128                     C1RXOVIFL       equ	296	;# 
 14514   000129                     C1RXOVIFH       equ	297	;# 
 14515   00012A                     C1RXOVIFU       equ	298	;# 
 14516   00012B                     C1RXOVIFT       equ	299	;# 
 14517   00012C                     C1TXATIF        equ	300	;# 
 14518   00012C                     C1TXATIFL       equ	300	;# 
 14519   00012D                     C1TXATIFH       equ	301	;# 
 14520   00012E                     C1TXATIFU       equ	302	;# 
 14521   00012F                     C1TXATIFT       equ	303	;# 
 14522   000130                     C1TXREQ         equ	304	;# 
 14523   000130                     C1TXREQL        equ	304	;# 
 14524   000131                     C1TXREQH        equ	305	;# 
 14525   000132                     C1TXREQU        equ	306	;# 
 14526   000133                     C1TXREQT        equ	307	;# 
 14527   000134                     C1TRECL         equ	308	;# 
 14528   000135                     C1TRECH         equ	309	;# 
 14529   000136                     C1TRECU         equ	310	;# 
 14530   000137                     C1TRECT         equ	311	;# 
 14531   000138                     C1BDIAG0L       equ	312	;# 
 14532   000139                     C1BDIAG0H       equ	313	;# 
 14533   00013C                     C1BDIAG1L       equ	316	;# 
 14534   00013D                     C1BDIAG1H       equ	317	;# 
 14535   00013E                     C1BDIAG1U       equ	318	;# 
 14536   00013F                     C1BDIAG1T       equ	319	;# 
 14537   000140                     C1TEFCONL       equ	320	;# 
 14538   000141                     C1TEFCONH       equ	321	;# 
 14539   000142                     C1TEFCONU       equ	322	;# 
 14540   000143                     C1TEFCONT       equ	323	;# 
 14541   000144                     C1TEFSTAL       equ	324	;# 
 14542   000145                     C1TEFSTAH       equ	325	;# 
 14543   000146                     C1TEFSTAU       equ	326	;# 
 14544   000147                     C1TEFSTAT       equ	327	;# 
 14545   000148                     C1TEFUA         equ	328	;# 
 14546   000148                     C1TEFUAL        equ	328	;# 
 14547   000149                     C1TEFUAH        equ	329	;# 
 14548   00014A                     C1TEFUAU        equ	330	;# 
 14549   00014B                     C1TEFUAT        equ	331	;# 
 14550   00014C                     C1FIFOBA        equ	332	;# 
 14551   00014C                     C1FIFOBAL       equ	332	;# 
 14552   00014D                     C1FIFOBAH       equ	333	;# 
 14553   00014E                     C1FIFOBAU       equ	334	;# 
 14554   00014F                     C1FIFOBAT       equ	335	;# 
 14555   000150                     C1TXQCONL       equ	336	;# 
 14556   000151                     C1TXQCONH       equ	337	;# 
 14557   000152                     C1TXQCONU       equ	338	;# 
 14558   000153                     C1TXQCONT       equ	339	;# 
 14559   000154                     C1TXQSTAL       equ	340	;# 
 14560   000155                     C1TXQSTAH       equ	341	;# 
 14561   000156                     C1TXQSTAU       equ	342	;# 
 14562   000157                     C1TXQSTAT       equ	343	;# 
 14563   000158                     C1TXQUA         equ	344	;# 
 14564   000158                     C1TXQUAL        equ	344	;# 
 14565   000159                     C1TXQUAH        equ	345	;# 
 14566   00015A                     C1TXQUAU        equ	346	;# 
 14567   00015B                     C1TXQUAT        equ	347	;# 
 14568   00015C                     C1FIFOCON1      equ	348	;# 
 14569   00015C                     C1FIFOCON1L     equ	348	;# 
 14570   00015D                     C1FIFOCON1H     equ	349	;# 
 14571   00015E                     C1FIFOCON1U     equ	350	;# 
 14572   00015F                     C1FIFOCON1T     equ	351	;# 
 14573   000160                     C1FIFOSTA1      equ	352	;# 
 14574   000160                     C1FIFOSTA1L     equ	352	;# 
 14575   000161                     C1FIFOSTA1H     equ	353	;# 
 14576   000162                     C1FIFOSTA1U     equ	354	;# 
 14577   000163                     C1FIFOSTA1T     equ	355	;# 
 14578   000164                     C1FIFOUA1       equ	356	;# 
 14579   000164                     C1FIFOUA1L      equ	356	;# 
 14580   000165                     C1FIFOUA1H      equ	357	;# 
 14581   000166                     C1FIFOUA1U      equ	358	;# 
 14582   000167                     C1FIFOUA1T      equ	359	;# 
 14583   000168                     C1FIFOCON2      equ	360	;# 
 14584   000168                     C1FIFOCON2L     equ	360	;# 
 14585   000169                     C1FIFOCON2H     equ	361	;# 
 14586   00016A                     C1FIFOCON2U     equ	362	;# 
 14587   00016B                     C1FIFOCON2T     equ	363	;# 
 14588   00016C                     C1FIFOSTA2      equ	364	;# 
 14589   00016C                     C1FIFOSTA2L     equ	364	;# 
 14590   00016D                     C1FIFOSTA2H     equ	365	;# 
 14591   00016E                     C1FIFOSTA2U     equ	366	;# 
 14592   00016F                     C1FIFOSTA2T     equ	367	;# 
 14593   000170                     C1FIFOUA2       equ	368	;# 
 14594   000170                     C1FIFOUA2L      equ	368	;# 
 14595   000171                     C1FIFOUA2H      equ	369	;# 
 14596   000172                     C1FIFOUA2U      equ	370	;# 
 14597   000173                     C1FIFOUA2T      equ	371	;# 
 14598   000174                     C1FIFOCON3      equ	372	;# 
 14599   000174                     C1FIFOCON3L     equ	372	;# 
 14600   000175                     C1FIFOCON3H     equ	373	;# 
 14601   000176                     C1FIFOCON3U     equ	374	;# 
 14602   000177                     C1FIFOCON3T     equ	375	;# 
 14603   000178                     C1FIFOSTA3      equ	376	;# 
 14604   000178                     C1FIFOSTA3L     equ	376	;# 
 14605   000179                     C1FIFOSTA3H     equ	377	;# 
 14606   00017A                     C1FIFOSTA3U     equ	378	;# 
 14607   00017B                     C1FIFOSTA3T     equ	379	;# 
 14608   00017C                     C1FIFOUA3       equ	380	;# 
 14609   00017C                     C1FIFOUA3L      equ	380	;# 
 14610   00017D                     C1FIFOUA3H      equ	381	;# 
 14611   00017E                     C1FIFOUA3U      equ	382	;# 
 14612   00017F                     C1FIFOUA3T      equ	383	;# 
 14613   000180                     C1FLTCON0L      equ	384	;# 
 14614   000181                     C1FLTCON0H      equ	385	;# 
 14615   000182                     C1FLTCON0U      equ	386	;# 
 14616   000183                     C1FLTCON0T      equ	387	;# 
 14617   000184                     C1FLTCON1L      equ	388	;# 
 14618   000185                     C1FLTCON1H      equ	389	;# 
 14619   000186                     C1FLTCON1U      equ	390	;# 
 14620   000187                     C1FLTCON1T      equ	391	;# 
 14621   000188                     C1FLTCON2L      equ	392	;# 
 14622   000189                     C1FLTCON2H      equ	393	;# 
 14623   00018A                     C1FLTCON2U      equ	394	;# 
 14624   00018B                     C1FLTCON2T      equ	395	;# 
 14625   00018C                     C1FLTOBJ0       equ	396	;# 
 14626   00018C                     C1FLTOBJ0L      equ	396	;# 
 14627   00018D                     C1FLTOBJ0H      equ	397	;# 
 14628   00018E                     C1FLTOBJ0U      equ	398	;# 
 14629   00018F                     C1FLTOBJ0T      equ	399	;# 
 14630   000190                     C1MASK0         equ	400	;# 
 14631   000190                     C1MASK0L        equ	400	;# 
 14632   000191                     C1MASK0H        equ	401	;# 
 14633   000192                     C1MASK0U        equ	402	;# 
 14634   000193                     C1MASK0T        equ	403	;# 
 14635   000194                     C1FLTOBJ1       equ	404	;# 
 14636   000194                     C1FLTOBJ1L      equ	404	;# 
 14637   000195                     C1FLTOBJ1H      equ	405	;# 
 14638   000196                     C1FLTOBJ1U      equ	406	;# 
 14639   000197                     C1FLTOBJ1T      equ	407	;# 
 14640   000198                     C1MASK1         equ	408	;# 
 14641   000198                     C1MASK1L        equ	408	;# 
 14642   000199                     C1MASK1H        equ	409	;# 
 14643   00019A                     C1MASK1U        equ	410	;# 
 14644   00019B                     C1MASK1T        equ	411	;# 
 14645   00019C                     C1FLTOBJ2       equ	412	;# 
 14646   00019C                     C1FLTOBJ2L      equ	412	;# 
 14647   00019D                     C1FLTOBJ2H      equ	413	;# 
 14648   00019E                     C1FLTOBJ2U      equ	414	;# 
 14649   00019F                     C1FLTOBJ2T      equ	415	;# 
 14650   0001A0                     C1MASK2         equ	416	;# 
 14651   0001A0                     C1MASK2L        equ	416	;# 
 14652   0001A1                     C1MASK2H        equ	417	;# 
 14653   0001A2                     C1MASK2U        equ	418	;# 
 14654   0001A3                     C1MASK2T        equ	419	;# 
 14655   0001A4                     C1FLTOBJ3       equ	420	;# 
 14656   0001A4                     C1FLTOBJ3L      equ	420	;# 
 14657   0001A5                     C1FLTOBJ3H      equ	421	;# 
 14658   0001A6                     C1FLTOBJ3U      equ	422	;# 
 14659   0001A7                     C1FLTOBJ3T      equ	423	;# 
 14660   0001A8                     C1MASK3         equ	424	;# 
 14661   0001A8                     C1MASK3L        equ	424	;# 
 14662   0001A9                     C1MASK3H        equ	425	;# 
 14663   0001AA                     C1MASK3U        equ	426	;# 
 14664   0001AB                     C1MASK3T        equ	427	;# 
 14665   0001AC                     C1FLTOBJ4       equ	428	;# 
 14666   0001AC                     C1FLTOBJ4L      equ	428	;# 
 14667   0001AD                     C1FLTOBJ4H      equ	429	;# 
 14668   0001AE                     C1FLTOBJ4U      equ	430	;# 
 14669   0001AF                     C1FLTOBJ4T      equ	431	;# 
 14670   0001B0                     C1MASK4         equ	432	;# 
 14671   0001B0                     C1MASK4L        equ	432	;# 
 14672   0001B1                     C1MASK4H        equ	433	;# 
 14673   0001B2                     C1MASK4U        equ	434	;# 
 14674   0001B3                     C1MASK4T        equ	435	;# 
 14675   0001B4                     C1FLTOBJ5       equ	436	;# 
 14676   0001B4                     C1FLTOBJ5L      equ	436	;# 
 14677   0001B5                     C1FLTOBJ5H      equ	437	;# 
 14678   0001B6                     C1FLTOBJ5U      equ	438	;# 
 14679   0001B7                     C1FLTOBJ5T      equ	439	;# 
 14680   0001B8                     C1MASK5         equ	440	;# 
 14681   0001B8                     C1MASK5L        equ	440	;# 
 14682   0001B9                     C1MASK5H        equ	441	;# 
 14683   0001BA                     C1MASK5U        equ	442	;# 
 14684   0001BB                     C1MASK5T        equ	443	;# 
 14685   0001BC                     C1FLTOBJ6       equ	444	;# 
 14686   0001BC                     C1FLTOBJ6L      equ	444	;# 
 14687   0001BD                     C1FLTOBJ6H      equ	445	;# 
 14688   0001BE                     C1FLTOBJ6U      equ	446	;# 
 14689   0001BF                     C1FLTOBJ6T      equ	447	;# 
 14690   0001C0                     C1MASK6         equ	448	;# 
 14691   0001C0                     C1MASK6L        equ	448	;# 
 14692   0001C1                     C1MASK6H        equ	449	;# 
 14693   0001C2                     C1MASK6U        equ	450	;# 
 14694   0001C3                     C1MASK6T        equ	451	;# 
 14695   0001C4                     C1FLTOBJ7       equ	452	;# 
 14696   0001C4                     C1FLTOBJ7L      equ	452	;# 
 14697   0001C5                     C1FLTOBJ7H      equ	453	;# 
 14698   0001C6                     C1FLTOBJ7U      equ	454	;# 
 14699   0001C7                     C1FLTOBJ7T      equ	455	;# 
 14700   0001C8                     C1MASK7         equ	456	;# 
 14701   0001C8                     C1MASK7L        equ	456	;# 
 14702   0001C9                     C1MASK7H        equ	457	;# 
 14703   0001CA                     C1MASK7U        equ	458	;# 
 14704   0001CB                     C1MASK7T        equ	459	;# 
 14705   0001CC                     C1FLTOBJ8       equ	460	;# 
 14706   0001CC                     C1FLTOBJ8L      equ	460	;# 
 14707   0001CD                     C1FLTOBJ8H      equ	461	;# 
 14708   0001CE                     C1FLTOBJ8U      equ	462	;# 
 14709   0001CF                     C1FLTOBJ8T      equ	463	;# 
 14710   0001D0                     C1MASK8         equ	464	;# 
 14711   0001D0                     C1MASK8L        equ	464	;# 
 14712   0001D1                     C1MASK8H        equ	465	;# 
 14713   0001D2                     C1MASK8U        equ	466	;# 
 14714   0001D3                     C1MASK8T        equ	467	;# 
 14715   0001D4                     C1FLTOBJ9       equ	468	;# 
 14716   0001D4                     C1FLTOBJ9L      equ	468	;# 
 14717   0001D5                     C1FLTOBJ9H      equ	469	;# 
 14718   0001D6                     C1FLTOBJ9U      equ	470	;# 
 14719   0001D7                     C1FLTOBJ9T      equ	471	;# 
 14720   0001D8                     C1MASK9         equ	472	;# 
 14721   0001D8                     C1MASK9L        equ	472	;# 
 14722   0001D9                     C1MASK9H        equ	473	;# 
 14723   0001DA                     C1MASK9U        equ	474	;# 
 14724   0001DB                     C1MASK9T        equ	475	;# 
 14725   0001DC                     C1FLTOBJ10      equ	476	;# 
 14726   0001DC                     C1FLTOBJ10L     equ	476	;# 
 14727   0001DD                     C1FLTOBJ10H     equ	477	;# 
 14728   0001DE                     C1FLTOBJ10U     equ	478	;# 
 14729   0001DF                     C1FLTOBJ10T     equ	479	;# 
 14730   0001E0                     C1MASK10        equ	480	;# 
 14731   0001E0                     C1MASK10L       equ	480	;# 
 14732   0001E1                     C1MASK10H       equ	481	;# 
 14733   0001E2                     C1MASK10U       equ	482	;# 
 14734   0001E3                     C1MASK10T       equ	483	;# 
 14735   0001E4                     C1FLTOBJ11      equ	484	;# 
 14736   0001E4                     C1FLTOBJ11L     equ	484	;# 
 14737   0001E5                     C1FLTOBJ11H     equ	485	;# 
 14738   0001E6                     C1FLTOBJ11U     equ	486	;# 
 14739   0001E7                     C1FLTOBJ11T     equ	487	;# 
 14740   0001E8                     C1MASK11        equ	488	;# 
 14741   0001E8                     C1MASK11L       equ	488	;# 
 14742   0001E9                     C1MASK11H       equ	489	;# 
 14743   0001EA                     C1MASK11U       equ	490	;# 
 14744   0001EB                     C1MASK11T       equ	491	;# 
 14745   000200                     PPSLOCK         equ	512	;# 
 14746   000201                     RA0PPS          equ	513	;# 
 14747   000202                     RA1PPS          equ	514	;# 
 14748   000203                     RA2PPS          equ	515	;# 
 14749   000204                     RA3PPS          equ	516	;# 
 14750   000205                     RA4PPS          equ	517	;# 
 14751   000206                     RA5PPS          equ	518	;# 
 14752   000207                     RA6PPS          equ	519	;# 
 14753   000208                     RA7PPS          equ	520	;# 
 14754   000209                     RB0PPS          equ	521	;# 
 14755   00020A                     RB1PPS          equ	522	;# 
 14756   00020B                     RB2PPS          equ	523	;# 
 14757   00020C                     RB3PPS          equ	524	;# 
 14758   00020D                     RB4PPS          equ	525	;# 
 14759   00020E                     RB5PPS          equ	526	;# 
 14760   00020F                     RB6PPS          equ	527	;# 
 14761   000210                     RB7PPS          equ	528	;# 
 14762   000211                     RC0PPS          equ	529	;# 
 14763   000212                     RC1PPS          equ	530	;# 
 14764   000213                     RC2PPS          equ	531	;# 
 14765   000214                     RC3PPS          equ	532	;# 
 14766   000215                     RC4PPS          equ	533	;# 
 14767   000216                     RC5PPS          equ	534	;# 
 14768   000217                     RC6PPS          equ	535	;# 
 14769   000218                     RC7PPS          equ	536	;# 
 14770   00023D                     CANRXPPS        equ	573	;# 
 14771   00023E                     INT0PPS         equ	574	;# 
 14772   00023F                     INT1PPS         equ	575	;# 
 14773   000240                     INT2PPS         equ	576	;# 
 14774   000241                     T0CKIPPS        equ	577	;# 
 14775   000242                     T1CKIPPS        equ	578	;# 
 14776   000243                     T1GPPS          equ	579	;# 
 14777   000244                     T3CKIPPS        equ	580	;# 
 14778   000245                     T3GPPS          equ	581	;# 
 14779   000246                     T5CKIPPS        equ	582	;# 
 14780   000247                     T5GPPS          equ	583	;# 
 14781   000248                     T2INPPS         equ	584	;# 
 14782   000249                     T4INPPS         equ	585	;# 
 14783   00024A                     T6INPPS         equ	586	;# 
 14784   00024B                     TUIN0PPS        equ	587	;# 
 14785   00024C                     TUIN1PPS        equ	588	;# 
 14786   00024F                     CCP1PPS         equ	591	;# 
 14787   000250                     CCP2PPS         equ	592	;# 
 14788   000251                     CCP3PPS         equ	593	;# 
 14789   000253                     PWM1ERSPPS      equ	595	;# 
 14790   000254                     PWM2ERSPPS      equ	596	;# 
 14791   000255                     PWM3ERSPPS      equ	597	;# 
 14792   000256                     PWM4ERSPPS      equ	598	;# 
 14793   000257                     PWMIN0PPS       equ	599	;# 
 14794   000258                     PWMIN1PPS       equ	600	;# 
 14795   000259                     SMT1WINPPS      equ	601	;# 
 14796   00025A                     SMT1SIGPPS      equ	602	;# 
 14797   00025B                     CWG1PPS         equ	603	;# 
 14798   00025B                     CWG1INPPS       equ	603	;# 
 14799   00025C                     CWG2PPS         equ	604	;# 
 14800   00025C                     CWG2INPPS       equ	604	;# 
 14801   00025D                     CWG3PPS         equ	605	;# 
 14802   00025D                     CWG3INPPS       equ	605	;# 
 14803   00025E                     MD1CARLPPS      equ	606	;# 
 14804   00025E                     MDCARLPPS       equ	606	;# 
 14805   00025F                     MD1CARHPPS      equ	607	;# 
 14806   00025F                     MDCARHPPS       equ	607	;# 
 14807   000260                     MD1SRCPPS       equ	608	;# 
 14808   000260                     MDSRCPPS        equ	608	;# 
 14809   000261                     CLCIN0PPS       equ	609	;# 
 14810   000262                     CLCIN1PPS       equ	610	;# 
 14811   000263                     CLCIN2PPS       equ	611	;# 
 14812   000264                     CLCIN3PPS       equ	612	;# 
 14813   000265                     CLCIN4PPS       equ	613	;# 
 14814   000266                     CLCIN5PPS       equ	614	;# 
 14815   000267                     CLCIN6PPS       equ	615	;# 
 14816   000268                     CLCIN7PPS       equ	616	;# 
 14817   000269                     ADACTPPS        equ	617	;# 
 14818   00026A                     SPI1SCKPPS      equ	618	;# 
 14819   00026B                     SPI1SDIPPS      equ	619	;# 
 14820   00026C                     SPI1SSPPS       equ	620	;# 
 14821   00026D                     SPI2SCKPPS      equ	621	;# 
 14822   00026E                     SPI2SDIPPS      equ	622	;# 
 14823   00026F                     SPI2SSPPS       equ	623	;# 
 14824   000270                     I2C1SDAPPS      equ	624	;# 
 14825   000271                     I2C1SCLPPS      equ	625	;# 
 14826   000272                     U1RXPPS         equ	626	;# 
 14827   000273                     U1CTSPPS        equ	627	;# 
 14828   000274                     U2RXPPS         equ	628	;# 
 14829   000275                     U2CTSPPS        equ	629	;# 
 14830   000276                     U3RXPPS         equ	630	;# 
 14831   000277                     U3CTSPPS        equ	631	;# 
 14832   000278                     U4RXPPS         equ	632	;# 
 14833   000279                     U4CTSPPS        equ	633	;# 
 14834   00027A                     U5RXPPS         equ	634	;# 
 14835   00027B                     U5CTSPPS        equ	635	;# 
 14836   000286                     RC4I2C          equ	646	;# 
 14837   000287                     RC3I2C          equ	647	;# 
 14838   000288                     RB2I2C          equ	648	;# 
 14839   000289                     RB1I2C          equ	649	;# 
 14840   00028A                     I2C1RXB         equ	650	;# 
 14841   00028B                     I2C1TXB         equ	651	;# 
 14842   00028C                     I2C1CNTL        equ	652	;# 
 14843   00028D                     I2C1CNTH        equ	653	;# 
 14844   00028E                     I2C1ADB0        equ	654	;# 
 14845   00028F                     I2C1ADB1        equ	655	;# 
 14846   000290                     I2C1ADR0        equ	656	;# 
 14847   000291                     I2C1ADR1        equ	657	;# 
 14848   000292                     I2C1ADR2        equ	658	;# 
 14849   000293                     I2C1ADR3        equ	659	;# 
 14850   000294                     I2C1CON0        equ	660	;# 
 14851   000295                     I2C1CON1        equ	661	;# 
 14852   000296                     I2C1CON2        equ	662	;# 
 14853   000297                     I2C1ERR         equ	663	;# 
 14854   000298                     I2C1STAT0       equ	664	;# 
 14855   000299                     I2C1STAT1       equ	665	;# 
 14856   00029A                     I2C1PIR         equ	666	;# 
 14857   00029B                     I2C1PIE         equ	667	;# 
 14858   00029C                     I2C1BTO         equ	668	;# 
 14859   00029D                     I2C1BAUD        equ	669	;# 
 14860   00029E                     I2C1CLK         equ	670	;# 
 14861   00029F                     I2C1BTOC        equ	671	;# 
 14862   0002A1                     U1RXB           equ	673	;# 
 14863   0002A1                     U1RXBL          equ	673	;# 
 14864   0002A2                     U1RXCHK         equ	674	;# 
 14865   0002A3                     U1TXB           equ	675	;# 
 14866   0002A3                     U1TXBL          equ	675	;# 
 14867   0002A4                     U1TXCHK         equ	676	;# 
 14868   0002A5                     U1P1            equ	677	;# 
 14869   0002A5                     U1P1L           equ	677	;# 
 14870   0002A6                     U1P1H           equ	678	;# 
 14871   0002A7                     U1P2            equ	679	;# 
 14872   0002A7                     U1P2L           equ	679	;# 
 14873   0002A8                     U1P2H           equ	680	;# 
 14874   0002A9                     U1P3            equ	681	;# 
 14875   0002A9                     U1P3L           equ	681	;# 
 14876   0002AA                     U1P3H           equ	682	;# 
 14877   0002AB                     U1CON0          equ	683	;# 
 14878   0002AC                     U1CON1          equ	684	;# 
 14879   0002AD                     U1CON2          equ	685	;# 
 14880   0002AE                     U1BRG           equ	686	;# 
 14881   0002AE                     U1BRGL          equ	686	;# 
 14882   0002AF                     U1BRGH          equ	687	;# 
 14883   0002B0                     U1FIFO          equ	688	;# 
 14884   0002B1                     U1UIR           equ	689	;# 
 14885   0002B2                     U1ERRIR         equ	690	;# 
 14886   0002B3                     U1ERRIE         equ	691	;# 
 14887   0002B4                     U2RXB           equ	692	;# 
 14888   0002B4                     U2RXBL          equ	692	;# 
 14889   0002B5                     U2RXCHK         equ	693	;# 
 14890   0002B6                     U2TXB           equ	694	;# 
 14891   0002B6                     U2TXBL          equ	694	;# 
 14892   0002B7                     U2TXCHK         equ	695	;# 
 14893   0002B8                     U2P1            equ	696	;# 
 14894   0002B8                     U2P1L           equ	696	;# 
 14895   0002B9                     U2P1H           equ	697	;# 
 14896   0002BA                     U2P2            equ	698	;# 
 14897   0002BA                     U2P2L           equ	698	;# 
 14898   0002BB                     U2P2H           equ	699	;# 
 14899   0002BC                     U2P3            equ	700	;# 
 14900   0002BC                     U2P3L           equ	700	;# 
 14901   0002BD                     U2P3H           equ	701	;# 
 14902   0002BE                     U2CON0          equ	702	;# 
 14903   0002BF                     U2CON1          equ	703	;# 
 14904   0002C0                     U2CON2          equ	704	;# 
 14905   0002C1                     U2BRG           equ	705	;# 
 14906   0002C1                     U2BRGL          equ	705	;# 
 14907   0002C2                     U2BRGH          equ	706	;# 
 14908   0002C3                     U2FIFO          equ	707	;# 
 14909   0002C4                     U2UIR           equ	708	;# 
 14910   0002C5                     U2ERRIR         equ	709	;# 
 14911   0002C6                     U2ERRIE         equ	710	;# 
 14912   0002C7                     U3RXB           equ	711	;# 
 14913   0002C7                     U3RXBL          equ	711	;# 
 14914   0002C9                     U3TXB           equ	713	;# 
 14915   0002C9                     U3TXBL          equ	713	;# 
 14916   0002CB                     U3P1            equ	715	;# 
 14917   0002CB                     U3P1L           equ	715	;# 
 14918   0002CD                     U3P2            equ	717	;# 
 14919   0002CD                     U3P2L           equ	717	;# 
 14920   0002CF                     U3P3            equ	719	;# 
 14921   0002CF                     U3P3L           equ	719	;# 
 14922   0002D1                     U3CON0          equ	721	;# 
 14923   0002D2                     U3CON1          equ	722	;# 
 14924   0002D3                     U3CON2          equ	723	;# 
 14925   0002D4                     U3BRG           equ	724	;# 
 14926   0002D4                     U3BRGL          equ	724	;# 
 14927   0002D5                     U3BRGH          equ	725	;# 
 14928   0002D6                     U3FIFO          equ	726	;# 
 14929   0002D7                     U3UIR           equ	727	;# 
 14930   0002D8                     U3ERRIR         equ	728	;# 
 14931   0002D9                     U3ERRIE         equ	729	;# 
 14932   0002DA                     U4RXB           equ	730	;# 
 14933   0002DA                     U4RXBL          equ	730	;# 
 14934   0002DC                     U4TXB           equ	732	;# 
 14935   0002DC                     U4TXBL          equ	732	;# 
 14936   0002DE                     U4P1            equ	734	;# 
 14937   0002DE                     U4P1L           equ	734	;# 
 14938   0002E0                     U4P2            equ	736	;# 
 14939   0002E0                     U4P2L           equ	736	;# 
 14940   0002E2                     U4P3            equ	738	;# 
 14941   0002E2                     U4P3L           equ	738	;# 
 14942   0002E4                     U4CON0          equ	740	;# 
 14943   0002E5                     U4CON1          equ	741	;# 
 14944   0002E6                     U4CON2          equ	742	;# 
 14945   0002E7                     U4BRG           equ	743	;# 
 14946   0002E7                     U4BRGL          equ	743	;# 
 14947   0002E8                     U4BRGH          equ	744	;# 
 14948   0002E9                     U4FIFO          equ	745	;# 
 14949   0002EA                     U4UIR           equ	746	;# 
 14950   0002EB                     U4ERRIR         equ	747	;# 
 14951   0002EC                     U4ERRIE         equ	748	;# 
 14952   0002ED                     U5RXB           equ	749	;# 
 14953   0002ED                     U5RXBL          equ	749	;# 
 14954   0002EF                     U5TXB           equ	751	;# 
 14955   0002EF                     U5TXBL          equ	751	;# 
 14956   0002F1                     U5P1            equ	753	;# 
 14957   0002F1                     U5P1L           equ	753	;# 
 14958   0002F3                     U5P2            equ	755	;# 
 14959   0002F3                     U5P2L           equ	755	;# 
 14960   0002F5                     U5P3            equ	757	;# 
 14961   0002F5                     U5P3L           equ	757	;# 
 14962   0002F7                     U5CON0          equ	759	;# 
 14963   0002F8                     U5CON1          equ	760	;# 
 14964   0002F9                     U5CON2          equ	761	;# 
 14965   0002FA                     U5BRG           equ	762	;# 
 14966   0002FA                     U5BRGL          equ	762	;# 
 14967   0002FB                     U5BRGH          equ	763	;# 
 14968   0002FC                     U5FIFO          equ	764	;# 
 14969   0002FD                     U5UIR           equ	765	;# 
 14970   0002FE                     U5ERRIR         equ	766	;# 
 14971   0002FF                     U5ERRIE         equ	767	;# 
 14972   000300                     SMT1TMR         equ	768	;# 
 14973   000300                     SMT1TMRL        equ	768	;# 
 14974   000301                     SMT1TMRH        equ	769	;# 
 14975   000302                     SMT1TMRU        equ	770	;# 
 14976   000303                     SMT1CPR         equ	771	;# 
 14977   000303                     SMT1CPRL        equ	771	;# 
 14978   000304                     SMT1CPRH        equ	772	;# 
 14979   000305                     SMT1CPRU        equ	773	;# 
 14980   000306                     SMT1CPW         equ	774	;# 
 14981   000306                     SMT1CPWL        equ	774	;# 
 14982   000307                     SMT1CPWH        equ	775	;# 
 14983   000308                     SMT1CPWU        equ	776	;# 
 14984   000309                     SMT1PR          equ	777	;# 
 14985   000309                     SMT1PRL         equ	777	;# 
 14986   00030A                     SMT1PRH         equ	778	;# 
 14987   00030B                     SMT1PRU         equ	779	;# 
 14988   00030C                     SMT1CON0        equ	780	;# 
 14989   00030D                     SMT1CON1        equ	781	;# 
 14990   00030E                     SMT1STAT        equ	782	;# 
 14991   00030F                     SMT1CLK         equ	783	;# 
 14992   000310                     SMT1SIG         equ	784	;# 
 14993   000311                     SMT1WIN         equ	785	;# 
 14994   000318                     TMR0L           equ	792	;# 
 14995   000318                     TMR0            equ	792	;# 
 14996   000319                     TMR0H           equ	793	;# 
 14997   000319                     PR0             equ	793	;# 
 14998   00031A                     T0CON0          equ	794	;# 
 14999   00031B                     T0CON1          equ	795	;# 
 15000   00031C                     TMR1            equ	796	;# 
 15001   00031C                     TMR1L           equ	796	;# 
 15002   00031D                     TMR1H           equ	797	;# 
 15003   00031E                     T1CON           equ	798	;# 
 15004   00031E                     TMR1CON         equ	798	;# 
 15005   00031F                     T1GCON          equ	799	;# 
 15006   00031F                     TMR1GCON        equ	799	;# 
 15007   000320                     T1GATE          equ	800	;# 
 15008   000320                     TMR1GATE        equ	800	;# 
 15009   000321                     T1CLK           equ	801	;# 
 15010   000321                     TMR1CLK         equ	801	;# 
 15011   000321                     PR1             equ	801	;# 
 15012   000322                     T2TMR           equ	802	;# 
 15013   000322                     TMR2            equ	802	;# 
 15014   000323                     T2PR            equ	803	;# 
 15015   000323                     PR2             equ	803	;# 
 15016   000324                     T2CON           equ	804	;# 
 15017   000325                     T2HLT           equ	805	;# 
 15018   000326                     T2CLKCON        equ	806	;# 
 15019   000326                     T2CLK           equ	806	;# 
 15020   000327                     T2RST           equ	807	;# 
 15021   000328                     TMR3            equ	808	;# 
 15022   000328                     TMR3L           equ	808	;# 
 15023   000329                     TMR3H           equ	809	;# 
 15024   00032A                     T3CON           equ	810	;# 
 15025   00032A                     TMR3CON         equ	810	;# 
 15026   00032B                     T3GCON          equ	811	;# 
 15027   00032B                     TMR3GCON        equ	811	;# 
 15028   00032C                     T3GATE          equ	812	;# 
 15029   00032C                     TMR3GATE        equ	812	;# 
 15030   00032D                     T3CLK           equ	813	;# 
 15031   00032D                     TMR3CLK         equ	813	;# 
 15032   00032D                     PR3             equ	813	;# 
 15033   00032E                     T4TMR           equ	814	;# 
 15034   00032E                     TMR4            equ	814	;# 
 15035   00032F                     T4PR            equ	815	;# 
 15036   00032F                     PR4             equ	815	;# 
 15037   000330                     T4CON           equ	816	;# 
 15038   000331                     T4HLT           equ	817	;# 
 15039   000332                     T4CLKCON        equ	818	;# 
 15040   000332                     T4CLK           equ	818	;# 
 15041   000333                     T4RST           equ	819	;# 
 15042   000334                     TMR5            equ	820	;# 
 15043   000334                     TMR5L           equ	820	;# 
 15044   000335                     TMR5H           equ	821	;# 
 15045   000336                     T5CON           equ	822	;# 
 15046   000336                     TMR5CON         equ	822	;# 
 15047   000337                     T5GCON          equ	823	;# 
 15048   000337                     TMR5GCON        equ	823	;# 
 15049   000338                     T5GATE          equ	824	;# 
 15050   000338                     TMR5GATE        equ	824	;# 
 15051   000339                     T5CLK           equ	825	;# 
 15052   000339                     TMR5CLK         equ	825	;# 
 15053   000339                     PR5             equ	825	;# 
 15054   00033A                     T6TMR           equ	826	;# 
 15055   00033A                     TMR6            equ	826	;# 
 15056   00033B                     T6PR            equ	827	;# 
 15057   00033B                     PR6             equ	827	;# 
 15058   00033C                     T6CON           equ	828	;# 
 15059   00033D                     T6HLT           equ	829	;# 
 15060   00033E                     T6CLKCON        equ	830	;# 
 15061   00033E                     T6CLK           equ	830	;# 
 15062   00033F                     T6RST           equ	831	;# 
 15063   000340                     CCPR1           equ	832	;# 
 15064   000340                     CCPR1L          equ	832	;# 
 15065   000341                     CCPR1H          equ	833	;# 
 15066   000342                     CCP1CON         equ	834	;# 
 15067   000343                     CCP1CAP         equ	835	;# 
 15068   000344                     CCPR2           equ	836	;# 
 15069   000344                     CCPR2L          equ	836	;# 
 15070   000345                     CCPR2H          equ	837	;# 
 15071   000346                     CCP2CON         equ	838	;# 
 15072   000347                     CCP2CAP         equ	839	;# 
 15073   000348                     CCPR3           equ	840	;# 
 15074   000348                     CCPR3L          equ	840	;# 
 15075   000349                     CCPR3H          equ	841	;# 
 15076   00034A                     CCP3CON         equ	842	;# 
 15077   00034B                     CCP3CAP         equ	843	;# 
 15078   00034C                     CCPTMRS0        equ	844	;# 
 15079   00034F                     CRCDATA         equ	847	;# 
 15080   00034F                     CRCDATAL        equ	847	;# 
 15081   000350                     CRCDATAH        equ	848	;# 
 15082   000351                     CRCDATAU        equ	849	;# 
 15083   000352                     CRCDATAT        equ	850	;# 
 15084   000353                     CRCOUT          equ	851	;# 
 15085   000353                     CRCSHFT         equ	851	;# 
 15086   000353                     CRCXOR          equ	851	;# 
 15087   000353                     CRCOUTL         equ	851	;# 
 15088   000353                     CRCSHFTL        equ	851	;# 
 15089   000353                     CRCSHIFTL       equ	851	;# 
 15090   000353                     CRCXORL         equ	851	;# 
 15091   000354                     CRCOUTH         equ	852	;# 
 15092   000354                     CRCSHFTH        equ	852	;# 
 15093   000354                     CRCSHIFTH       equ	852	;# 
 15094   000354                     CRCXORH         equ	852	;# 
 15095   000355                     CRCOUTU         equ	853	;# 
 15096   000355                     CRCSHFTU        equ	853	;# 
 15097   000355                     CRCSHIFTU       equ	853	;# 
 15098   000355                     CRCXORU         equ	853	;# 
 15099   000356                     CRCOUTT         equ	854	;# 
 15100   000356                     CRCSHFTT        equ	854	;# 
 15101   000356                     CRCSHIFTT       equ	854	;# 
 15102   000356                     CRCXORT         equ	854	;# 
 15103   000357                     CRCCON0         equ	855	;# 
 15104   000358                     CRCCON1         equ	856	;# 
 15105   000359                     CRCCON2         equ	857	;# 
 15106   00035A                     SCANLADR        equ	858	;# 
 15107   00035A                     SCANLADRL       equ	858	;# 
 15108   00035B                     SCANLADRH       equ	859	;# 
 15109   00035C                     SCANLADRU       equ	860	;# 
 15110   00035D                     SCANHADR        equ	861	;# 
 15111   00035D                     SCANHADRL       equ	861	;# 
 15112   00035E                     SCANHADRH       equ	862	;# 
 15113   00035F                     SCANHADRU       equ	863	;# 
 15114   000360                     SCANCON0        equ	864	;# 
 15115   000361                     SCANTRIG        equ	865	;# 
 15116   000362                     IPR0            equ	866	;# 
 15117   000363                     IPR1            equ	867	;# 
 15118   000364                     IPR2            equ	868	;# 
 15119   000365                     IPR3            equ	869	;# 
 15120   000366                     IPR4            equ	870	;# 
 15121   000367                     IPR5            equ	871	;# 
 15122   000368                     IPR6            equ	872	;# 
 15123   000369                     IPR7            equ	873	;# 
 15124   00036A                     IPR8            equ	874	;# 
 15125   00036B                     IPR9            equ	875	;# 
 15126   00036C                     IPR10           equ	876	;# 
 15127   00036D                     IPR11           equ	877	;# 
 15128   00036E                     IPR12           equ	878	;# 
 15129   00036F                     IPR13           equ	879	;# 
 15130   000370                     IPR14           equ	880	;# 
 15131   000371                     IPR15           equ	881	;# 
 15132   000373                     STATUS_CSHAD    equ	883	;# 
 15133   000374                     WREG_CSHAD      equ	884	;# 
 15134   000375                     BSR_CSHAD       equ	885	;# 
 15135   000376                     SHADCON         equ	886	;# 
 15136   000377                     STATUS_SHAD     equ	887	;# 
 15137   000378                     WREG_SHAD       equ	888	;# 
 15138   000379                     BSR_SHAD        equ	889	;# 
 15139   00037A                     PCLATH_SHAD     equ	890	;# 
 15140   00037B                     PCLATU_SHAD     equ	891	;# 
 15141   00037C                     FSR0SH          equ	892	;# 
 15142   00037C                     FSR0L_SHAD      equ	892	;# 
 15143   00037D                     FSR0H_SHAD      equ	893	;# 
 15144   00037E                     FSR1SH          equ	894	;# 
 15145   00037E                     FSR1L_SHAD      equ	894	;# 
 15146   00037F                     FSR1H_SHAD      equ	895	;# 
 15147   000380                     FSR2SH          equ	896	;# 
 15148   000380                     FSR2L_SHAD      equ	896	;# 
 15149   000381                     FSR2H_SHAD      equ	897	;# 
 15150   000382                     PRODSH          equ	898	;# 
 15151   000382                     PRODL_SHAD      equ	898	;# 
 15152   000383                     PRODH_SHAD      equ	899	;# 
 15153   000387                     TU16ACON0       equ	903	;# 
 15154   000388                     TU16ACON1       equ	904	;# 
 15155   000389                     TU16AHLT        equ	905	;# 
 15156   00038A                     TU16APS         equ	906	;# 
 15157   00038B                     TU16ATMR        equ	907	;# 
 15158   00038B                     TU16ACR         equ	907	;# 
 15159   00038B                     TU16ATMRL       equ	907	;# 
 15160   00038B                     TU16ACRL        equ	907	;# 
 15161   00038C                     TU16ATMRH       equ	908	;# 
 15162   00038C                     TU16ACRH        equ	908	;# 
 15163   00038D                     TU16APR         equ	909	;# 
 15164   00038D                     TU16APRL        equ	909	;# 
 15165   00038E                     TU16APRH        equ	910	;# 
 15166   00038F                     TU16ACLK        equ	911	;# 
 15167   000390                     TU16AERS        equ	912	;# 
 15168   000393                     TU16BCON0       equ	915	;# 
 15169   000394                     TU16BCON1       equ	916	;# 
 15170   000395                     TU16BHLT        equ	917	;# 
 15171   000396                     TU16BPS         equ	918	;# 
 15172   000397                     TU16BTMR        equ	919	;# 
 15173   000397                     TU16BCR         equ	919	;# 
 15174   000397                     TU16BTMRL       equ	919	;# 
 15175   000397                     TU16BCRL        equ	919	;# 
 15176   000398                     TU16BTMRH       equ	920	;# 
 15177   000398                     TU16BCRH        equ	920	;# 
 15178   000399                     TU16BPR         equ	921	;# 
 15179   000399                     TU16BPRL        equ	921	;# 
 15180   00039A                     TU16BPRH        equ	922	;# 
 15181   00039B                     TU16BCLK        equ	923	;# 
 15182   00039C                     TU16BERS        equ	924	;# 
 15183   0003BB                     TUCHAIN         equ	955	;# 
 15184   0003BC                     CWG1CLK         equ	956	;# 
 15185   0003BC                     CWG1CLKCON      equ	956	;# 
 15186   0003BD                     CWG1ISM         equ	957	;# 
 15187   0003BE                     CWG1DBR         equ	958	;# 
 15188   0003BF                     CWG1DBF         equ	959	;# 
 15189   0003C0                     CWG1CON0        equ	960	;# 
 15190   0003C1                     CWG1CON1        equ	961	;# 
 15191   0003C2                     CWG1AS0         equ	962	;# 
 15192   0003C3                     CWG1AS1         equ	963	;# 
 15193   0003C4                     CWG1STR         equ	964	;# 
 15194   0003C5                     CWG2CLK         equ	965	;# 
 15195   0003C5                     CWG2CLKCON      equ	965	;# 
 15196   0003C6                     CWG2ISM         equ	966	;# 
 15197   0003C7                     CWG2DBR         equ	967	;# 
 15198   0003C8                     CWG2DBF         equ	968	;# 
 15199   0003C9                     CWG2CON0        equ	969	;# 
 15200   0003CA                     CWG2CON1        equ	970	;# 
 15201   0003CB                     CWG2AS0         equ	971	;# 
 15202   0003CC                     CWG2AS1         equ	972	;# 
 15203   0003CD                     CWG2STR         equ	973	;# 
 15204   0003CE                     CWG3CLK         equ	974	;# 
 15205   0003CE                     CWG3CLKCON      equ	974	;# 
 15206   0003CF                     CWG3ISM         equ	975	;# 
 15207   0003D0                     CWG3DBR         equ	976	;# 
 15208   0003D1                     CWG3DBF         equ	977	;# 
 15209   0003D2                     CWG3CON0        equ	978	;# 
 15210   0003D3                     CWG3CON1        equ	979	;# 
 15211   0003D4                     CWG3AS0         equ	980	;# 
 15212   0003D5                     CWG3AS1         equ	981	;# 
 15213   0003D6                     CWG3STR         equ	982	;# 
 15214   0003D7                     FVRCON          equ	983	;# 
 15215   0003D8                     ADCPCON         equ	984	;# 
 15216   0003D8                     ADCP            equ	984	;# 
 15217   0003D9                     ADLTH           equ	985	;# 
 15218   0003D9                     ADLTHL          equ	985	;# 
 15219   0003DA                     ADLTHH          equ	986	;# 
 15220   0003DB                     ADUTH           equ	987	;# 
 15221   0003DB                     ADUTHL          equ	987	;# 
 15222   0003DC                     ADUTHH          equ	988	;# 
 15223   0003DD                     ADERR           equ	989	;# 
 15224   0003DD                     ADERRL          equ	989	;# 
 15225   0003DE                     ADERRH          equ	990	;# 
 15226   0003DF                     ADSTPT          equ	991	;# 
 15227   0003DF                     ADSTPTL         equ	991	;# 
 15228   0003E0                     ADSTPTH         equ	992	;# 
 15229   0003E1                     ADFLTR          equ	993	;# 
 15230   0003E1                     ADFLTRL         equ	993	;# 
 15231   0003E2                     ADFLTRH         equ	994	;# 
 15232   0003E3                     ADACC           equ	995	;# 
 15233   0003E3                     ADACCL          equ	995	;# 
 15234   0003E4                     ADACCH          equ	996	;# 
 15235   0003E5                     ADACCU          equ	997	;# 
 15236   0003E6                     ADCNT           equ	998	;# 
 15237   0003E7                     ADRPT           equ	999	;# 
 15238   0003E8                     ADPREV          equ	1000	;# 
 15239   0003E8                     ADPREVL         equ	1000	;# 
 15240   0003E9                     ADPREVH         equ	1001	;# 
 15241   0003EA                     ADRES           equ	1002	;# 
 15242   0003EA                     ADRESL          equ	1002	;# 
 15243   0003EB                     ADRESH          equ	1003	;# 
 15244   0003EC                     ADPCH           equ	1004	;# 
 15245   0003EE                     ADACQ           equ	1006	;# 
 15246   0003EE                     ADACQL          equ	1006	;# 
 15247   0003EF                     ADACQH          equ	1007	;# 
 15248   0003F0                     ADCAP           equ	1008	;# 
 15249   0003F1                     ADPRE           equ	1009	;# 
 15250   0003F1                     ADPREL          equ	1009	;# 
 15251   0003F2                     ADPREH          equ	1010	;# 
 15252   0003F3                     ADCON0          equ	1011	;# 
 15253   0003F4                     ADCON1          equ	1012	;# 
 15254   0003F5                     ADCON2          equ	1013	;# 
 15255   0003F6                     ADCON3          equ	1014	;# 
 15256   0003F7                     ADSTAT          equ	1015	;# 
 15257   0003F8                     ADREF           equ	1016	;# 
 15258   0003F9                     ADACT           equ	1017	;# 
 15259   0003FA                     ADCLK           equ	1018	;# 
 15260   0003FB                     ADCTX           equ	1019	;# 
 15261   0003FC                     ADCSEL1         equ	1020	;# 
 15262   0003FD                     ADCSEL2         equ	1021	;# 
 15263   0003FE                     ADCSEL3         equ	1022	;# 
 15264   0003FF                     ADCSEL4         equ	1023	;# 
 15265   000400                     ANSELA          equ	1024	;# 
 15266   000401                     WPUA            equ	1025	;# 
 15267   000402                     ODCONA          equ	1026	;# 
 15268   000403                     SLRCONA         equ	1027	;# 
 15269   000404                     INLVLA          equ	1028	;# 
 15270   000405                     IOCAP           equ	1029	;# 
 15271   000406                     IOCAN           equ	1030	;# 
 15272   000407                     IOCAF           equ	1031	;# 
 15273   000408                     ANSELB          equ	1032	;# 
 15274   000409                     WPUB            equ	1033	;# 
 15275   00040A                     ODCONB          equ	1034	;# 
 15276   00040B                     SLRCONB         equ	1035	;# 
 15277   00040C                     INLVLB          equ	1036	;# 
 15278   00040D                     IOCBP           equ	1037	;# 
 15279   00040E                     IOCBN           equ	1038	;# 
 15280   00040F                     IOCBF           equ	1039	;# 
 15281   000410                     ANSELC          equ	1040	;# 
 15282   000411                     WPUC            equ	1041	;# 
 15283   000412                     ODCONC          equ	1042	;# 
 15284   000413                     SLRCONC         equ	1043	;# 
 15285   000414                     INLVLC          equ	1044	;# 
 15286   000415                     IOCCP           equ	1045	;# 
 15287   000416                     IOCCN           equ	1046	;# 
 15288   000417                     IOCCF           equ	1047	;# 
 15289   000421                     WPUE            equ	1057	;# 
 15290   000424                     INLVLE          equ	1060	;# 
 15291   000425                     IOCEP           equ	1061	;# 
 15292   000426                     IOCEN           equ	1062	;# 
 15293   000427                     IOCEF           equ	1063	;# 
 15294   000440                     NCO1ACC         equ	1088	;# 
 15295   000440                     NCO1ACCL        equ	1088	;# 
 15296   000441                     NCO1ACCH        equ	1089	;# 
 15297   000442                     NCO1ACCU        equ	1090	;# 
 15298   000443                     NCO1INC         equ	1091	;# 
 15299   000443                     NCO1INCL        equ	1091	;# 
 15300   000444                     NCO1INCH        equ	1092	;# 
 15301   000445                     NCO1INCU        equ	1093	;# 
 15302   000446                     NCO1CON         equ	1094	;# 
 15303   000447                     NCO1CLK         equ	1095	;# 
 15304   000448                     NCO2ACC         equ	1096	;# 
 15305   000448                     NCO2ACCL        equ	1096	;# 
 15306   000449                     NCO2ACCH        equ	1097	;# 
 15307   00044A                     NCO2ACCU        equ	1098	;# 
 15308   00044B                     NCO2INC         equ	1099	;# 
 15309   00044B                     NCO2INCL        equ	1099	;# 
 15310   00044C                     NCO2INCH        equ	1100	;# 
 15311   00044D                     NCO2INCU        equ	1101	;# 
 15312   00044E                     NCO2CON         equ	1102	;# 
 15313   00044F                     NCO2CLK         equ	1103	;# 
 15314   000450                     NCO3ACC         equ	1104	;# 
 15315   000450                     NCO3ACCL        equ	1104	;# 
 15316   000451                     NCO3ACCH        equ	1105	;# 
 15317   000452                     NCO3ACCU        equ	1106	;# 
 15318   000453                     NCO3INC         equ	1107	;# 
 15319   000453                     NCO3INCL        equ	1107	;# 
 15320   000454                     NCO3INCH        equ	1108	;# 
 15321   000455                     NCO3INCU        equ	1109	;# 
 15322   000456                     NCO3CON         equ	1110	;# 
 15323   000457                     NCO3CLK         equ	1111	;# 
 15324   000458                     FSCMCON         equ	1112	;# 
 15325   000459                     IVTLOCK         equ	1113	;# 
 15326   00045A                     IVTAD           equ	1114	;# 
 15327   00045A                     IVTADL          equ	1114	;# 
 15328   00045B                     IVTADH          equ	1115	;# 
 15329   00045C                     IVTADU          equ	1116	;# 
 15330   00045D                     IVTBASE         equ	1117	;# 
 15331   00045D                     IVTBASEL        equ	1117	;# 
 15332   00045E                     IVTBASEH        equ	1118	;# 
 15333   00045F                     IVTBASEU        equ	1119	;# 
 15334   000460                     PWM1ERS         equ	1120	;# 
 15335   000461                     PWM1CLK         equ	1121	;# 
 15336   000462                     PWM1LDS         equ	1122	;# 
 15337   000463                     PWM1PR          equ	1123	;# 
 15338   000463                     PWM1PRL         equ	1123	;# 
 15339   000464                     PWM1PRH         equ	1124	;# 
 15340   000465                     PWM1CPRE        equ	1125	;# 
 15341   000466                     PWM1PIPOS       equ	1126	;# 
 15342   000467                     PWM1GIR         equ	1127	;# 
 15343   000468                     PWM1GIE         equ	1128	;# 
 15344   000469                     PWM1CON         equ	1129	;# 
 15345   00046A                     PWM1S1CFG       equ	1130	;# 
 15346   00046B                     PWM1S1P1        equ	1131	;# 
 15347   00046B                     PWM1S1P1L       equ	1131	;# 
 15348   00046C                     PWM1S1P1H       equ	1132	;# 
 15349   00046D                     PWM1S1P2        equ	1133	;# 
 15350   00046D                     PWM1S1P2L       equ	1133	;# 
 15351   00046E                     PWM1S1P2H       equ	1134	;# 
 15352   00046F                     PWM2ERS         equ	1135	;# 
 15353   000470                     PWM2CLK         equ	1136	;# 
 15354   000471                     PWM2LDS         equ	1137	;# 
 15355   000472                     PWM2PR          equ	1138	;# 
 15356   000472                     PWM2PRL         equ	1138	;# 
 15357   000473                     PWM2PRH         equ	1139	;# 
 15358   000474                     PWM2CPRE        equ	1140	;# 
 15359   000475                     PWM2PIPOS       equ	1141	;# 
 15360   000476                     PWM2GIR         equ	1142	;# 
 15361   000477                     PWM2GIE         equ	1143	;# 
 15362   000478                     PWM2CON         equ	1144	;# 
 15363   000479                     PWM2S1CFG       equ	1145	;# 
 15364   00047A                     PWM2S1P1        equ	1146	;# 
 15365   00047A                     PWM2S1P1L       equ	1146	;# 
 15366   00047B                     PWM2S1P1H       equ	1147	;# 
 15367   00047C                     PWM2S1P2        equ	1148	;# 
 15368   00047C                     PWM2S1P2L       equ	1148	;# 
 15369   00047D                     PWM2S1P2H       equ	1149	;# 
 15370   00047E                     PWM3ERS         equ	1150	;# 
 15371   00047F                     PWM3CLK         equ	1151	;# 
 15372   000480                     PWM3LDS         equ	1152	;# 
 15373   000481                     PWM3PR          equ	1153	;# 
 15374   000481                     PWM3PRL         equ	1153	;# 
 15375   000482                     PWM3PRH         equ	1154	;# 
 15376   000483                     PWM3CPRE        equ	1155	;# 
 15377   000484                     PWM3PIPOS       equ	1156	;# 
 15378   000485                     PWM3GIR         equ	1157	;# 
 15379   000486                     PWM3GIE         equ	1158	;# 
 15380   000487                     PWM3CON         equ	1159	;# 
 15381   000488                     PWM3S1CFG       equ	1160	;# 
 15382   000489                     PWM3S1P1        equ	1161	;# 
 15383   000489                     PWM3S1P1L       equ	1161	;# 
 15384   00048A                     PWM3S1P1H       equ	1162	;# 
 15385   00048B                     PWM3S1P2        equ	1163	;# 
 15386   00048B                     PWM3S1P2L       equ	1163	;# 
 15387   00048C                     PWM3S1P2H       equ	1164	;# 
 15388   00048D                     PWM4ERS         equ	1165	;# 
 15389   00048E                     PWM4CLK         equ	1166	;# 
 15390   00048F                     PWM4LDS         equ	1167	;# 
 15391   000490                     PWM4PR          equ	1168	;# 
 15392   000490                     PWM4PRL         equ	1168	;# 
 15393   000491                     PWM4PRH         equ	1169	;# 
 15394   000492                     PWM4CPRE        equ	1170	;# 
 15395   000493                     PWM4PIPOS       equ	1171	;# 
 15396   000494                     PWM4GIR         equ	1172	;# 
 15397   000495                     PWM4GIE         equ	1173	;# 
 15398   000496                     PWM4CON         equ	1174	;# 
 15399   000497                     PWM4S1CFG       equ	1175	;# 
 15400   000498                     PWM4S1P1        equ	1176	;# 
 15401   000498                     PWM4S1P1L       equ	1176	;# 
 15402   000499                     PWM4S1P1H       equ	1177	;# 
 15403   00049A                     PWM4S1P2        equ	1178	;# 
 15404   00049A                     PWM4S1P2L       equ	1178	;# 
 15405   00049B                     PWM4S1P2H       equ	1179	;# 
 15406   00049C                     PWMLOAD         equ	1180	;# 
 15407   00049D                     PWMEN           equ	1181	;# 
 15408   00049E                     PIE0            equ	1182	;# 
 15409   00049F                     PIE1            equ	1183	;# 
 15410   0004A0                     PIE2            equ	1184	;# 
 15411   0004A1                     PIE3            equ	1185	;# 
 15412   0004A2                     PIE4            equ	1186	;# 
 15413   0004A3                     PIE5            equ	1187	;# 
 15414   0004A4                     PIE6            equ	1188	;# 
 15415   0004A5                     PIE7            equ	1189	;# 
 15416   0004A6                     PIE8            equ	1190	;# 
 15417   0004A7                     PIE9            equ	1191	;# 
 15418   0004A8                     PIE10           equ	1192	;# 
 15419   0004A9                     PIE11           equ	1193	;# 
 15420   0004AA                     PIE12           equ	1194	;# 
 15421   0004AB                     PIE13           equ	1195	;# 
 15422   0004AC                     PIE14           equ	1196	;# 
 15423   0004AD                     PIE15           equ	1197	;# 
 15424   0004AE                     PIR0            equ	1198	;# 
 15425   0004AF                     PIR1            equ	1199	;# 
 15426   0004B0                     PIR2            equ	1200	;# 
 15427   0004B1                     PIR3            equ	1201	;# 
 15428   0004B2                     PIR4            equ	1202	;# 
 15429   0004B3                     PIR5            equ	1203	;# 
 15430   0004B4                     PIR6            equ	1204	;# 
 15431   0004B5                     PIR7            equ	1205	;# 
 15432   0004B6                     PIR8            equ	1206	;# 
 15433   0004B7                     PIR9            equ	1207	;# 
 15434   0004B8                     PIR10           equ	1208	;# 
 15435   0004B9                     PIR11           equ	1209	;# 
 15436   0004BA                     PIR12           equ	1210	;# 
 15437   0004BB                     PIR13           equ	1211	;# 
 15438   0004BC                     PIR14           equ	1212	;# 
 15439   0004BD                     PIR15           equ	1213	;# 
 15440   0004BE                     LATA            equ	1214	;# 
 15441   0004BF                     LATB            equ	1215	;# 
 15442   0004C0                     LATC            equ	1216	;# 
 15443   0004C6                     TRISA           equ	1222	;# 
 15444   0004C7                     TRISB           equ	1223	;# 
 15445   0004C8                     TRISC           equ	1224	;# 
 15446   0004CA                     TRISE           equ	1226	;# 
 15447   0004CE                     PORTA           equ	1230	;# 
 15448   0004CF                     PORTB           equ	1231	;# 
 15449   0004D0                     PORTC           equ	1232	;# 
 15450   0004D2                     PORTE           equ	1234	;# 
 15451   0004D6                     INTCON0         equ	1238	;# 
 15452   0004D7                     INTCON1         equ	1239	;# 
 15453   0004D8                     STATUS          equ	1240	;# 
 15454   0004D9                     FSR2            equ	1241	;# 
 15455   0004D9                     FSR2L           equ	1241	;# 
 15456   0004DA                     FSR2H           equ	1242	;# 
 15457   0004DB                     PLUSW2          equ	1243	;# 
 15458   0004DC                     PREINC2         equ	1244	;# 
 15459   0004DD                     POSTDEC2        equ	1245	;# 
 15460   0004DE                     POSTINC2        equ	1246	;# 
 15461   0004DF                     INDF2           equ	1247	;# 
 15462   0004E0                     BSR             equ	1248	;# 
 15463   0004E1                     FSR1            equ	1249	;# 
 15464   0004E1                     FSR1L           equ	1249	;# 
 15465   0004E2                     FSR1H           equ	1250	;# 
 15466   0004E3                     PLUSW1          equ	1251	;# 
 15467   0004E4                     PREINC1         equ	1252	;# 
 15468   0004E5                     POSTDEC1        equ	1253	;# 
 15469   0004E6                     POSTINC1        equ	1254	;# 
 15470   0004E7                     INDF1           equ	1255	;# 
 15471   0004E8                     WREG            equ	1256	;# 
 15472   0004E9                     FSR0            equ	1257	;# 
 15473   0004E9                     FSR0L           equ	1257	;# 
 15474   0004EA                     FSR0H           equ	1258	;# 
 15475   0004EB                     PLUSW0          equ	1259	;# 
 15476   0004EC                     PREINC0         equ	1260	;# 
 15477   0004ED                     POSTDEC0        equ	1261	;# 
 15478   0004EE                     POSTINC0        equ	1262	;# 
 15479   0004EF                     INDF0           equ	1263	;# 
 15480   0004F0                     PCON0           equ	1264	;# 
 15481   0004F1                     PCON1           equ	1265	;# 
 15482   0004F2                     CPUDOZE         equ	1266	;# 
 15483   0004F3                     PROD            equ	1267	;# 
 15484   0004F3                     PRODL           equ	1267	;# 
 15485   0004F4                     PRODH           equ	1268	;# 
 15486   0004F5                     TABLAT          equ	1269	;# 
 15487   0004F6                     TBLPTR          equ	1270	;# 
 15488   0004F6                     TBLPTRL         equ	1270	;# 
 15489   0004F7                     TBLPTRH         equ	1271	;# 
 15490   0004F8                     TBLPTRU         equ	1272	;# 
 15491   0004F9                     PCLAT           equ	1273	;# 
 15492   0004F9                     PCL             equ	1273	;# 
 15493   0004FA                     PCLATH          equ	1274	;# 
 15494   0004FB                     PCLATU          equ	1275	;# 
 15495   0004FC                     STKPTR          equ	1276	;# 
 15496   0004FD                     TOS             equ	1277	;# 
 15497   0004FD                     TOSL            equ	1277	;# 
 15498   0004FE                     TOSH            equ	1278	;# 
 15499   0004FF                     TOSU            equ	1279	;# 
 15500   000038                     BOOTREG         equ	56	;# 
 15501   000039                     CLKRCON         equ	57	;# 
 15502   00003A                     CLKRCLK         equ	58	;# 
 15503   000040                     NVMCON0         equ	64	;# 
 15504   000041                     NVMCON1         equ	65	;# 
 15505   000042                     NVMLOCK         equ	66	;# 
 15506   000043                     NVMADR          equ	67	;# 
 15507   000043                     NVMADRL         equ	67	;# 
 15508   000044                     NVMADRH         equ	68	;# 
 15509   000045                     NVMADRU         equ	69	;# 
 15510   000046                     NVMDAT          equ	70	;# 
 15511   000046                     NVMDATL         equ	70	;# 
 15512   000047                     NVMDATH         equ	71	;# 
 15513   000048                     VREGCON         equ	72	;# 
 15514   000049                     BORCON          equ	73	;# 
 15515   00004A                     HLVDCON0        equ	74	;# 
 15516   00004B                     HLVDCON1        equ	75	;# 
 15517   00004C                     ZCDCON          equ	76	;# 
 15518   000060                     PMD0            equ	96	;# 
 15519   000061                     PMD1            equ	97	;# 
 15520   000062                     PMD2            equ	98	;# 
 15521   000063                     PMD3            equ	99	;# 
 15522   000064                     PMD4            equ	100	;# 
 15523   000065                     PMD5            equ	101	;# 
 15524   000066                     PMD6            equ	102	;# 
 15525   000067                     PMD7            equ	103	;# 
 15526   000068                     PMD8            equ	104	;# 
 15527   00006A                     MD1CON0         equ	106	;# 
 15528   00006B                     MD1CON1         equ	107	;# 
 15529   00006C                     MD1SRC          equ	108	;# 
 15530   00006D                     MD1CARL         equ	109	;# 
 15531   00006E                     MD1CARH         equ	110	;# 
 15532   00006F                     CMOUT           equ	111	;# 
 15533   000070                     CM1CON0         equ	112	;# 
 15534   000071                     CM1CON1         equ	113	;# 
 15535   000072                     CM1NCH          equ	114	;# 
 15536   000073                     CM1PCH          equ	115	;# 
 15537   000074                     CM2CON0         equ	116	;# 
 15538   000075                     CM2CON1         equ	117	;# 
 15539   000076                     CM2NCH          equ	118	;# 
 15540   000077                     CM2PCH          equ	119	;# 
 15541   000078                     WDTCON0         equ	120	;# 
 15542   000079                     WDTCON1         equ	121	;# 
 15543   00007A                     WDTPSL          equ	122	;# 
 15544   00007B                     WDTPSH          equ	123	;# 
 15545   00007C                     WDTTMR          equ	124	;# 
 15546   00007D                     DAC1DAT         equ	125	;# 
 15547   00007D                     DAC1DATL        equ	125	;# 
 15548   00007F                     DAC1CON         equ	127	;# 
 15549   000080                     SPI1RXB         equ	128	;# 
 15550   000081                     SPI1TXB         equ	129	;# 
 15551   000082                     SPI1TCNT        equ	130	;# 
 15552   000082                     SPI1TCNTL       equ	130	;# 
 15553   000083                     SPI1TCNTH       equ	131	;# 
 15554   000084                     SPI1CON0        equ	132	;# 
 15555   000085                     SPI1CON1        equ	133	;# 
 15556   000086                     SPI1CON2        equ	134	;# 
 15557   000087                     SPI1STATUS      equ	135	;# 
 15558   000088                     SPI1TWIDTH      equ	136	;# 
 15559   000089                     SPI1BAUD        equ	137	;# 
 15560   00008A                     SPI1INTF        equ	138	;# 
 15561   00008B                     SPI1INTE        equ	139	;# 
 15562   00008C                     SPI1CLK         equ	140	;# 
 15563   00008D                     SPI2RXB         equ	141	;# 
 15564   00008E                     SPI2TXB         equ	142	;# 
 15565   00008F                     SPI2TCNT        equ	143	;# 
 15566   00008F                     SPI2TCNTL       equ	143	;# 
 15567   000090                     SPI2TCNTH       equ	144	;# 
 15568   000091                     SPI2CON0        equ	145	;# 
 15569   000092                     SPI2CON1        equ	146	;# 
 15570   000093                     SPI2CON2        equ	147	;# 
 15571   000094                     SPI2STATUS      equ	148	;# 
 15572   000095                     SPI2TWIDTH      equ	149	;# 
 15573   000096                     SPI2BAUD        equ	150	;# 
 15574   000097                     SPI2INTF        equ	151	;# 
 15575   000098                     SPI2INTE        equ	152	;# 
 15576   000099                     SPI2CLK         equ	153	;# 
 15577   0000AC                     ACTCON          equ	172	;# 
 15578   0000AD                     OSCCON1         equ	173	;# 
 15579   0000AE                     OSCCON2         equ	174	;# 
 15580   0000AF                     OSCCON3         equ	175	;# 
 15581   0000B0                     OSCTUNE         equ	176	;# 
 15582   0000B1                     OSCFRQ          equ	177	;# 
 15583   0000B1                     OSCFREQ         equ	177	;# 
 15584   0000B2                     OSCSTAT         equ	178	;# 
 15585   0000B2                     OSCSTAT1        equ	178	;# 
 15586   0000B3                     OSCEN           equ	179	;# 
 15587   0000B4                     PRLOCK          equ	180	;# 
 15588   0000B5                     SCANPR          equ	181	;# 
 15589   0000B6                     DMA1PR          equ	182	;# 
 15590   0000B7                     DMA2PR          equ	183	;# 
 15591   0000B8                     DMA3PR          equ	184	;# 
 15592   0000B9                     DMA4PR          equ	185	;# 
 15593   0000BA                     DMA5PR          equ	186	;# 
 15594   0000BB                     DMA6PR          equ	187	;# 
 15595   0000BC                     DMA7PR          equ	188	;# 
 15596   0000BD                     DMA8PR          equ	189	;# 
 15597   0000BE                     MAINPR          equ	190	;# 
 15598   0000BF                     ISRPR           equ	191	;# 
 15599   0000D4                     CLCDATA         equ	212	;# 
 15600   0000D5                     CLCSELECT       equ	213	;# 
 15601   0000D6                     CLCnCON         equ	214	;# 
 15602   0000D7                     CLCnPOL         equ	215	;# 
 15603   0000D8                     CLCnSEL0        equ	216	;# 
 15604   0000D9                     CLCnSEL1        equ	217	;# 
 15605   0000DA                     CLCnSEL2        equ	218	;# 
 15606   0000DB                     CLCnSEL3        equ	219	;# 
 15607   0000DC                     CLCnGLS0        equ	220	;# 
 15608   0000DD                     CLCnGLS1        equ	221	;# 
 15609   0000DE                     CLCnGLS2        equ	222	;# 
 15610   0000DF                     CLCnGLS3        equ	223	;# 
 15611   0000E8                     DMASELECT       equ	232	;# 
 15612   0000E9                     DMAnBUF         equ	233	;# 
 15613   0000EA                     DMAnDCNT        equ	234	;# 
 15614   0000EA                     DMAnDCNTL       equ	234	;# 
 15615   0000EB                     DMAnDCNTH       equ	235	;# 
 15616   0000EC                     DMAnDPTR        equ	236	;# 
 15617   0000EC                     DMAnDPTRL       equ	236	;# 
 15618   0000ED                     DMAnDPTRH       equ	237	;# 
 15619   0000EE                     DMAnDSZ         equ	238	;# 
 15620   0000EE                     DMAnDSZL        equ	238	;# 
 15621   0000EF                     DMAnDSZH        equ	239	;# 
 15622   0000F0                     DMAnDSA         equ	240	;# 
 15623   0000F0                     DMAnDSAL        equ	240	;# 
 15624   0000F1                     DMAnDSAH        equ	241	;# 
 15625   0000F2                     DMAnSCNT        equ	242	;# 
 15626   0000F2                     DMAnSCNTL       equ	242	;# 
 15627   0000F3                     DMAnSCNTH       equ	243	;# 
 15628   0000F4                     DMAnSPTR        equ	244	;# 
 15629   0000F4                     DMAnSPTRL       equ	244	;# 
 15630   0000F5                     DMAnSPTRH       equ	245	;# 
 15631   0000F6                     DMAnSPTRU       equ	246	;# 
 15632   0000F7                     DMAnSSZ         equ	247	;# 
 15633   0000F7                     DMAnSSZL        equ	247	;# 
 15634   0000F8                     DMAnSSZH        equ	248	;# 
 15635   0000F9                     DMAnSSA         equ	249	;# 
 15636   0000F9                     DMAnSSAL        equ	249	;# 
 15637   0000FA                     DMAnSSAH        equ	250	;# 
 15638   0000FB                     DMAnSSAU        equ	251	;# 
 15639   0000FC                     DMAnCON0        equ	252	;# 
 15640   0000FD                     DMAnCON1        equ	253	;# 
 15641   0000FE                     DMAnAIRQ        equ	254	;# 
 15642   0000FF                     DMAnSIRQ        equ	255	;# 
 15643   000100                     C1CONL          equ	256	;# 
 15644   000101                     C1CONH          equ	257	;# 
 15645   000102                     C1CONU          equ	258	;# 
 15646   000103                     C1CONT          equ	259	;# 
 15647   000104                     C1NBTCFGL       equ	260	;# 
 15648   000105                     C1NBTCFGH       equ	261	;# 
 15649   000106                     C1NBTCFGU       equ	262	;# 
 15650   000107                     C1NBTCFGT       equ	263	;# 
 15651   000108                     C1DBTCFGL       equ	264	;# 
 15652   000109                     C1DBTCFGH       equ	265	;# 
 15653   00010A                     C1DBTCFGU       equ	266	;# 
 15654   00010B                     C1DBTCFGT       equ	267	;# 
 15655   00010C                     C1TDCL          equ	268	;# 
 15656   00010D                     C1TDCH          equ	269	;# 
 15657   00010E                     C1TDCU          equ	270	;# 
 15658   000110                     C1TBC           equ	272	;# 
 15659   000110                     C1TBCL          equ	272	;# 
 15660   000111                     C1TBCH          equ	273	;# 
 15661   000112                     C1TBCU          equ	274	;# 
 15662   000113                     C1TBCT          equ	275	;# 
 15663   000114                     C1TSCONL        equ	276	;# 
 15664   000115                     C1TSCONH        equ	277	;# 
 15665   000116                     C1TSCONU        equ	278	;# 
 15666   000117                     C1TSCONT        equ	279	;# 
 15667   000118                     C1VECL          equ	280	;# 
 15668   000119                     C1VECH          equ	281	;# 
 15669   00011A                     C1VECU          equ	282	;# 
 15670   00011B                     C1VECT          equ	283	;# 
 15671   00011C                     C1INTL          equ	284	;# 
 15672   00011D                     C1INTH          equ	285	;# 
 15673   00011E                     C1INTU          equ	286	;# 
 15674   00011F                     C1INTT          equ	287	;# 
 15675   000120                     C1RXIF          equ	288	;# 
 15676   000120                     C1RXIFL         equ	288	;# 
 15677   000121                     C1RXIFH         equ	289	;# 
 15678   000122                     C1RXIFU         equ	290	;# 
 15679   000123                     C1RXIFT         equ	291	;# 
 15680   000124                     C1TXIF          equ	292	;# 
 15681   000124                     C1TXIFL         equ	292	;# 
 15682   000125                     C1TXIFH         equ	293	;# 
 15683   000126                     C1TXIFU         equ	294	;# 
 15684   000127                     C1TXIFT         equ	295	;# 
 15685   000128                     C1RXOVIF        equ	296	;# 
 15686   000128                     C1RXOVIFL       equ	296	;# 
 15687   000129                     C1RXOVIFH       equ	297	;# 
 15688   00012A                     C1RXOVIFU       equ	298	;# 
 15689   00012B                     C1RXOVIFT       equ	299	;# 
 15690   00012C                     C1TXATIF        equ	300	;# 
 15691   00012C                     C1TXATIFL       equ	300	;# 
 15692   00012D                     C1TXATIFH       equ	301	;# 
 15693   00012E                     C1TXATIFU       equ	302	;# 
 15694   00012F                     C1TXATIFT       equ	303	;# 
 15695   000130                     C1TXREQ         equ	304	;# 
 15696   000130                     C1TXREQL        equ	304	;# 
 15697   000131                     C1TXREQH        equ	305	;# 
 15698   000132                     C1TXREQU        equ	306	;# 
 15699   000133                     C1TXREQT        equ	307	;# 
 15700   000134                     C1TRECL         equ	308	;# 
 15701   000135                     C1TRECH         equ	309	;# 
 15702   000136                     C1TRECU         equ	310	;# 
 15703   000137                     C1TRECT         equ	311	;# 
 15704   000138                     C1BDIAG0L       equ	312	;# 
 15705   000139                     C1BDIAG0H       equ	313	;# 
 15706   00013C                     C1BDIAG1L       equ	316	;# 
 15707   00013D                     C1BDIAG1H       equ	317	;# 
 15708   00013E                     C1BDIAG1U       equ	318	;# 
 15709   00013F                     C1BDIAG1T       equ	319	;# 
 15710   000140                     C1TEFCONL       equ	320	;# 
 15711   000141                     C1TEFCONH       equ	321	;# 
 15712   000142                     C1TEFCONU       equ	322	;# 
 15713   000143                     C1TEFCONT       equ	323	;# 
 15714   000144                     C1TEFSTAL       equ	324	;# 
 15715   000145                     C1TEFSTAH       equ	325	;# 
 15716   000146                     C1TEFSTAU       equ	326	;# 
 15717   000147                     C1TEFSTAT       equ	327	;# 
 15718   000148                     C1TEFUA         equ	328	;# 
 15719   000148                     C1TEFUAL        equ	328	;# 
 15720   000149                     C1TEFUAH        equ	329	;# 
 15721   00014A                     C1TEFUAU        equ	330	;# 
 15722   00014B                     C1TEFUAT        equ	331	;# 
 15723   00014C                     C1FIFOBA        equ	332	;# 
 15724   00014C                     C1FIFOBAL       equ	332	;# 
 15725   00014D                     C1FIFOBAH       equ	333	;# 
 15726   00014E                     C1FIFOBAU       equ	334	;# 
 15727   00014F                     C1FIFOBAT       equ	335	;# 
 15728   000150                     C1TXQCONL       equ	336	;# 
 15729   000151                     C1TXQCONH       equ	337	;# 
 15730   000152                     C1TXQCONU       equ	338	;# 
 15731   000153                     C1TXQCONT       equ	339	;# 
 15732   000154                     C1TXQSTAL       equ	340	;# 
 15733   000155                     C1TXQSTAH       equ	341	;# 
 15734   000156                     C1TXQSTAU       equ	342	;# 
 15735   000157                     C1TXQSTAT       equ	343	;# 
 15736   000158                     C1TXQUA         equ	344	;# 
 15737   000158                     C1TXQUAL        equ	344	;# 
 15738   000159                     C1TXQUAH        equ	345	;# 
 15739   00015A                     C1TXQUAU        equ	346	;# 
 15740   00015B                     C1TXQUAT        equ	347	;# 
 15741   00015C                     C1FIFOCON1      equ	348	;# 
 15742   00015C                     C1FIFOCON1L     equ	348	;# 
 15743   00015D                     C1FIFOCON1H     equ	349	;# 
 15744   00015E                     C1FIFOCON1U     equ	350	;# 
 15745   00015F                     C1FIFOCON1T     equ	351	;# 
 15746   000160                     C1FIFOSTA1      equ	352	;# 
 15747   000160                     C1FIFOSTA1L     equ	352	;# 
 15748   000161                     C1FIFOSTA1H     equ	353	;# 
 15749   000162                     C1FIFOSTA1U     equ	354	;# 
 15750   000163                     C1FIFOSTA1T     equ	355	;# 
 15751   000164                     C1FIFOUA1       equ	356	;# 
 15752   000164                     C1FIFOUA1L      equ	356	;# 
 15753   000165                     C1FIFOUA1H      equ	357	;# 
 15754   000166                     C1FIFOUA1U      equ	358	;# 
 15755   000167                     C1FIFOUA1T      equ	359	;# 
 15756   000168                     C1FIFOCON2      equ	360	;# 
 15757   000168                     C1FIFOCON2L     equ	360	;# 
 15758   000169                     C1FIFOCON2H     equ	361	;# 
 15759   00016A                     C1FIFOCON2U     equ	362	;# 
 15760   00016B                     C1FIFOCON2T     equ	363	;# 
 15761   00016C                     C1FIFOSTA2      equ	364	;# 
 15762   00016C                     C1FIFOSTA2L     equ	364	;# 
 15763   00016D                     C1FIFOSTA2H     equ	365	;# 
 15764   00016E                     C1FIFOSTA2U     equ	366	;# 
 15765   00016F                     C1FIFOSTA2T     equ	367	;# 
 15766   000170                     C1FIFOUA2       equ	368	;# 
 15767   000170                     C1FIFOUA2L      equ	368	;# 
 15768   000171                     C1FIFOUA2H      equ	369	;# 
 15769   000172                     C1FIFOUA2U      equ	370	;# 
 15770   000173                     C1FIFOUA2T      equ	371	;# 
 15771   000174                     C1FIFOCON3      equ	372	;# 
 15772   000174                     C1FIFOCON3L     equ	372	;# 
 15773   000175                     C1FIFOCON3H     equ	373	;# 
 15774   000176                     C1FIFOCON3U     equ	374	;# 
 15775   000177                     C1FIFOCON3T     equ	375	;# 
 15776   000178                     C1FIFOSTA3      equ	376	;# 
 15777   000178                     C1FIFOSTA3L     equ	376	;# 
 15778   000179                     C1FIFOSTA3H     equ	377	;# 
 15779   00017A                     C1FIFOSTA3U     equ	378	;# 
 15780   00017B                     C1FIFOSTA3T     equ	379	;# 
 15781   00017C                     C1FIFOUA3       equ	380	;# 
 15782   00017C                     C1FIFOUA3L      equ	380	;# 
 15783   00017D                     C1FIFOUA3H      equ	381	;# 
 15784   00017E                     C1FIFOUA3U      equ	382	;# 
 15785   00017F                     C1FIFOUA3T      equ	383	;# 
 15786   000180                     C1FLTCON0L      equ	384	;# 
 15787   000181                     C1FLTCON0H      equ	385	;# 
 15788   000182                     C1FLTCON0U      equ	386	;# 
 15789   000183                     C1FLTCON0T      equ	387	;# 
 15790   000184                     C1FLTCON1L      equ	388	;# 
 15791   000185                     C1FLTCON1H      equ	389	;# 
 15792   000186                     C1FLTCON1U      equ	390	;# 
 15793   000187                     C1FLTCON1T      equ	391	;# 
 15794   000188                     C1FLTCON2L      equ	392	;# 
 15795   000189                     C1FLTCON2H      equ	393	;# 
 15796   00018A                     C1FLTCON2U      equ	394	;# 
 15797   00018B                     C1FLTCON2T      equ	395	;# 
 15798   00018C                     C1FLTOBJ0       equ	396	;# 
 15799   00018C                     C1FLTOBJ0L      equ	396	;# 
 15800   00018D                     C1FLTOBJ0H      equ	397	;# 
 15801   00018E                     C1FLTOBJ0U      equ	398	;# 
 15802   00018F                     C1FLTOBJ0T      equ	399	;# 
 15803   000190                     C1MASK0         equ	400	;# 
 15804   000190                     C1MASK0L        equ	400	;# 
 15805   000191                     C1MASK0H        equ	401	;# 
 15806   000192                     C1MASK0U        equ	402	;# 
 15807   000193                     C1MASK0T        equ	403	;# 
 15808   000194                     C1FLTOBJ1       equ	404	;# 
 15809   000194                     C1FLTOBJ1L      equ	404	;# 
 15810   000195                     C1FLTOBJ1H      equ	405	;# 
 15811   000196                     C1FLTOBJ1U      equ	406	;# 
 15812   000197                     C1FLTOBJ1T      equ	407	;# 
 15813   000198                     C1MASK1         equ	408	;# 
 15814   000198                     C1MASK1L        equ	408	;# 
 15815   000199                     C1MASK1H        equ	409	;# 
 15816   00019A                     C1MASK1U        equ	410	;# 
 15817   00019B                     C1MASK1T        equ	411	;# 
 15818   00019C                     C1FLTOBJ2       equ	412	;# 
 15819   00019C                     C1FLTOBJ2L      equ	412	;# 
 15820   00019D                     C1FLTOBJ2H      equ	413	;# 
 15821   00019E                     C1FLTOBJ2U      equ	414	;# 
 15822   00019F                     C1FLTOBJ2T      equ	415	;# 
 15823   0001A0                     C1MASK2         equ	416	;# 
 15824   0001A0                     C1MASK2L        equ	416	;# 
 15825   0001A1                     C1MASK2H        equ	417	;# 
 15826   0001A2                     C1MASK2U        equ	418	;# 
 15827   0001A3                     C1MASK2T        equ	419	;# 
 15828   0001A4                     C1FLTOBJ3       equ	420	;# 
 15829   0001A4                     C1FLTOBJ3L      equ	420	;# 
 15830   0001A5                     C1FLTOBJ3H      equ	421	;# 
 15831   0001A6                     C1FLTOBJ3U      equ	422	;# 
 15832   0001A7                     C1FLTOBJ3T      equ	423	;# 
 15833   0001A8                     C1MASK3         equ	424	;# 
 15834   0001A8                     C1MASK3L        equ	424	;# 
 15835   0001A9                     C1MASK3H        equ	425	;# 
 15836   0001AA                     C1MASK3U        equ	426	;# 
 15837   0001AB                     C1MASK3T        equ	427	;# 
 15838   0001AC                     C1FLTOBJ4       equ	428	;# 
 15839   0001AC                     C1FLTOBJ4L      equ	428	;# 
 15840   0001AD                     C1FLTOBJ4H      equ	429	;# 
 15841   0001AE                     C1FLTOBJ4U      equ	430	;# 
 15842   0001AF                     C1FLTOBJ4T      equ	431	;# 
 15843   0001B0                     C1MASK4         equ	432	;# 
 15844   0001B0                     C1MASK4L        equ	432	;# 
 15845   0001B1                     C1MASK4H        equ	433	;# 
 15846   0001B2                     C1MASK4U        equ	434	;# 
 15847   0001B3                     C1MASK4T        equ	435	;# 
 15848   0001B4                     C1FLTOBJ5       equ	436	;# 
 15849   0001B4                     C1FLTOBJ5L      equ	436	;# 
 15850   0001B5                     C1FLTOBJ5H      equ	437	;# 
 15851   0001B6                     C1FLTOBJ5U      equ	438	;# 
 15852   0001B7                     C1FLTOBJ5T      equ	439	;# 
 15853   0001B8                     C1MASK5         equ	440	;# 
 15854   0001B8                     C1MASK5L        equ	440	;# 
 15855   0001B9                     C1MASK5H        equ	441	;# 
 15856   0001BA                     C1MASK5U        equ	442	;# 
 15857   0001BB                     C1MASK5T        equ	443	;# 
 15858   0001BC                     C1FLTOBJ6       equ	444	;# 
 15859   0001BC                     C1FLTOBJ6L      equ	444	;# 
 15860   0001BD                     C1FLTOBJ6H      equ	445	;# 
 15861   0001BE                     C1FLTOBJ6U      equ	446	;# 
 15862   0001BF                     C1FLTOBJ6T      equ	447	;# 
 15863   0001C0                     C1MASK6         equ	448	;# 
 15864   0001C0                     C1MASK6L        equ	448	;# 
 15865   0001C1                     C1MASK6H        equ	449	;# 
 15866   0001C2                     C1MASK6U        equ	450	;# 
 15867   0001C3                     C1MASK6T        equ	451	;# 
 15868   0001C4                     C1FLTOBJ7       equ	452	;# 
 15869   0001C4                     C1FLTOBJ7L      equ	452	;# 
 15870   0001C5                     C1FLTOBJ7H      equ	453	;# 
 15871   0001C6                     C1FLTOBJ7U      equ	454	;# 
 15872   0001C7                     C1FLTOBJ7T      equ	455	;# 
 15873   0001C8                     C1MASK7         equ	456	;# 
 15874   0001C8                     C1MASK7L        equ	456	;# 
 15875   0001C9                     C1MASK7H        equ	457	;# 
 15876   0001CA                     C1MASK7U        equ	458	;# 
 15877   0001CB                     C1MASK7T        equ	459	;# 
 15878   0001CC                     C1FLTOBJ8       equ	460	;# 
 15879   0001CC                     C1FLTOBJ8L      equ	460	;# 
 15880   0001CD                     C1FLTOBJ8H      equ	461	;# 
 15881   0001CE                     C1FLTOBJ8U      equ	462	;# 
 15882   0001CF                     C1FLTOBJ8T      equ	463	;# 
 15883   0001D0                     C1MASK8         equ	464	;# 
 15884   0001D0                     C1MASK8L        equ	464	;# 
 15885   0001D1                     C1MASK8H        equ	465	;# 
 15886   0001D2                     C1MASK8U        equ	466	;# 
 15887   0001D3                     C1MASK8T        equ	467	;# 
 15888   0001D4                     C1FLTOBJ9       equ	468	;# 
 15889   0001D4                     C1FLTOBJ9L      equ	468	;# 
 15890   0001D5                     C1FLTOBJ9H      equ	469	;# 
 15891   0001D6                     C1FLTOBJ9U      equ	470	;# 
 15892   0001D7                     C1FLTOBJ9T      equ	471	;# 
 15893   0001D8                     C1MASK9         equ	472	;# 
 15894   0001D8                     C1MASK9L        equ	472	;# 
 15895   0001D9                     C1MASK9H        equ	473	;# 
 15896   0001DA                     C1MASK9U        equ	474	;# 
 15897   0001DB                     C1MASK9T        equ	475	;# 
 15898   0001DC                     C1FLTOBJ10      equ	476	;# 
 15899   0001DC                     C1FLTOBJ10L     equ	476	;# 
 15900   0001DD                     C1FLTOBJ10H     equ	477	;# 
 15901   0001DE                     C1FLTOBJ10U     equ	478	;# 
 15902   0001DF                     C1FLTOBJ10T     equ	479	;# 
 15903   0001E0                     C1MASK10        equ	480	;# 
 15904   0001E0                     C1MASK10L       equ	480	;# 
 15905   0001E1                     C1MASK10H       equ	481	;# 
 15906   0001E2                     C1MASK10U       equ	482	;# 
 15907   0001E3                     C1MASK10T       equ	483	;# 
 15908   0001E4                     C1FLTOBJ11      equ	484	;# 
 15909   0001E4                     C1FLTOBJ11L     equ	484	;# 
 15910   0001E5                     C1FLTOBJ11H     equ	485	;# 
 15911   0001E6                     C1FLTOBJ11U     equ	486	;# 
 15912   0001E7                     C1FLTOBJ11T     equ	487	;# 
 15913   0001E8                     C1MASK11        equ	488	;# 
 15914   0001E8                     C1MASK11L       equ	488	;# 
 15915   0001E9                     C1MASK11H       equ	489	;# 
 15916   0001EA                     C1MASK11U       equ	490	;# 
 15917   0001EB                     C1MASK11T       equ	491	;# 
 15918   000200                     PPSLOCK         equ	512	;# 
 15919   000201                     RA0PPS          equ	513	;# 
 15920   000202                     RA1PPS          equ	514	;# 
 15921   000203                     RA2PPS          equ	515	;# 
 15922   000204                     RA3PPS          equ	516	;# 
 15923   000205                     RA4PPS          equ	517	;# 
 15924   000206                     RA5PPS          equ	518	;# 
 15925   000207                     RA6PPS          equ	519	;# 
 15926   000208                     RA7PPS          equ	520	;# 
 15927   000209                     RB0PPS          equ	521	;# 
 15928   00020A                     RB1PPS          equ	522	;# 
 15929   00020B                     RB2PPS          equ	523	;# 
 15930   00020C                     RB3PPS          equ	524	;# 
 15931   00020D                     RB4PPS          equ	525	;# 
 15932   00020E                     RB5PPS          equ	526	;# 
 15933   00020F                     RB6PPS          equ	527	;# 
 15934   000210                     RB7PPS          equ	528	;# 
 15935   000211                     RC0PPS          equ	529	;# 
 15936   000212                     RC1PPS          equ	530	;# 
 15937   000213                     RC2PPS          equ	531	;# 
 15938   000214                     RC3PPS          equ	532	;# 
 15939   000215                     RC4PPS          equ	533	;# 
 15940   000216                     RC5PPS          equ	534	;# 
 15941   000217                     RC6PPS          equ	535	;# 
 15942   000218                     RC7PPS          equ	536	;# 
 15943   00023D                     CANRXPPS        equ	573	;# 
 15944   00023E                     INT0PPS         equ	574	;# 
 15945   00023F                     INT1PPS         equ	575	;# 
 15946   000240                     INT2PPS         equ	576	;# 
 15947   000241                     T0CKIPPS        equ	577	;# 
 15948   000242                     T1CKIPPS        equ	578	;# 
 15949   000243                     T1GPPS          equ	579	;# 
 15950   000244                     T3CKIPPS        equ	580	;# 
 15951   000245                     T3GPPS          equ	581	;# 
 15952   000246                     T5CKIPPS        equ	582	;# 
 15953   000247                     T5GPPS          equ	583	;# 
 15954   000248                     T2INPPS         equ	584	;# 
 15955   000249                     T4INPPS         equ	585	;# 
 15956   00024A                     T6INPPS         equ	586	;# 
 15957   00024B                     TUIN0PPS        equ	587	;# 
 15958   00024C                     TUIN1PPS        equ	588	;# 
 15959   00024F                     CCP1PPS         equ	591	;# 
 15960   000250                     CCP2PPS         equ	592	;# 
 15961   000251                     CCP3PPS         equ	593	;# 
 15962   000253                     PWM1ERSPPS      equ	595	;# 
 15963   000254                     PWM2ERSPPS      equ	596	;# 
 15964   000255                     PWM3ERSPPS      equ	597	;# 
 15965   000256                     PWM4ERSPPS      equ	598	;# 
 15966   000257                     PWMIN0PPS       equ	599	;# 
 15967   000258                     PWMIN1PPS       equ	600	;# 
 15968   000259                     SMT1WINPPS      equ	601	;# 
 15969   00025A                     SMT1SIGPPS      equ	602	;# 
 15970   00025B                     CWG1PPS         equ	603	;# 
 15971   00025B                     CWG1INPPS       equ	603	;# 
 15972   00025C                     CWG2PPS         equ	604	;# 
 15973   00025C                     CWG2INPPS       equ	604	;# 
 15974   00025D                     CWG3PPS         equ	605	;# 
 15975   00025D                     CWG3INPPS       equ	605	;# 
 15976   00025E                     MD1CARLPPS      equ	606	;# 
 15977   00025E                     MDCARLPPS       equ	606	;# 
 15978   00025F                     MD1CARHPPS      equ	607	;# 
 15979   00025F                     MDCARHPPS       equ	607	;# 
 15980   000260                     MD1SRCPPS       equ	608	;# 
 15981   000260                     MDSRCPPS        equ	608	;# 
 15982   000261                     CLCIN0PPS       equ	609	;# 
 15983   000262                     CLCIN1PPS       equ	610	;# 
 15984   000263                     CLCIN2PPS       equ	611	;# 
 15985   000264                     CLCIN3PPS       equ	612	;# 
 15986   000265                     CLCIN4PPS       equ	613	;# 
 15987   000266                     CLCIN5PPS       equ	614	;# 
 15988   000267                     CLCIN6PPS       equ	615	;# 
 15989   000268                     CLCIN7PPS       equ	616	;# 
 15990   000269                     ADACTPPS        equ	617	;# 
 15991   00026A                     SPI1SCKPPS      equ	618	;# 
 15992   00026B                     SPI1SDIPPS      equ	619	;# 
 15993   00026C                     SPI1SSPPS       equ	620	;# 
 15994   00026D                     SPI2SCKPPS      equ	621	;# 
 15995   00026E                     SPI2SDIPPS      equ	622	;# 
 15996   00026F                     SPI2SSPPS       equ	623	;# 
 15997   000270                     I2C1SDAPPS      equ	624	;# 
 15998   000271                     I2C1SCLPPS      equ	625	;# 
 15999   000272                     U1RXPPS         equ	626	;# 
 16000   000273                     U1CTSPPS        equ	627	;# 
 16001   000274                     U2RXPPS         equ	628	;# 
 16002   000275                     U2CTSPPS        equ	629	;# 
 16003   000276                     U3RXPPS         equ	630	;# 
 16004   000277                     U3CTSPPS        equ	631	;# 
 16005   000278                     U4RXPPS         equ	632	;# 
 16006   000279                     U4CTSPPS        equ	633	;# 
 16007   00027A                     U5RXPPS         equ	634	;# 
 16008   00027B                     U5CTSPPS        equ	635	;# 
 16009   000286                     RC4I2C          equ	646	;# 
 16010   000287                     RC3I2C          equ	647	;# 
 16011   000288                     RB2I2C          equ	648	;# 
 16012   000289                     RB1I2C          equ	649	;# 
 16013   00028A                     I2C1RXB         equ	650	;# 
 16014   00028B                     I2C1TXB         equ	651	;# 
 16015   00028C                     I2C1CNTL        equ	652	;# 
 16016   00028D                     I2C1CNTH        equ	653	;# 
 16017   00028E                     I2C1ADB0        equ	654	;# 
 16018   00028F                     I2C1ADB1        equ	655	;# 
 16019   000290                     I2C1ADR0        equ	656	;# 
 16020   000291                     I2C1ADR1        equ	657	;# 
 16021   000292                     I2C1ADR2        equ	658	;# 
 16022   000293                     I2C1ADR3        equ	659	;# 
 16023   000294                     I2C1CON0        equ	660	;# 
 16024   000295                     I2C1CON1        equ	661	;# 
 16025   000296                     I2C1CON2        equ	662	;# 
 16026   000297                     I2C1ERR         equ	663	;# 
 16027   000298                     I2C1STAT0       equ	664	;# 
 16028   000299                     I2C1STAT1       equ	665	;# 
 16029   00029A                     I2C1PIR         equ	666	;# 
 16030   00029B                     I2C1PIE         equ	667	;# 
 16031   00029C                     I2C1BTO         equ	668	;# 
 16032   00029D                     I2C1BAUD        equ	669	;# 
 16033   00029E                     I2C1CLK         equ	670	;# 
 16034   00029F                     I2C1BTOC        equ	671	;# 
 16035   0002A1                     U1RXB           equ	673	;# 
 16036   0002A1                     U1RXBL          equ	673	;# 
 16037   0002A2                     U1RXCHK         equ	674	;# 
 16038   0002A3                     U1TXB           equ	675	;# 
 16039   0002A3                     U1TXBL          equ	675	;# 
 16040   0002A4                     U1TXCHK         equ	676	;# 
 16041   0002A5                     U1P1            equ	677	;# 
 16042   0002A5                     U1P1L           equ	677	;# 
 16043   0002A6                     U1P1H           equ	678	;# 
 16044   0002A7                     U1P2            equ	679	;# 
 16045   0002A7                     U1P2L           equ	679	;# 
 16046   0002A8                     U1P2H           equ	680	;# 
 16047   0002A9                     U1P3            equ	681	;# 
 16048   0002A9                     U1P3L           equ	681	;# 
 16049   0002AA                     U1P3H           equ	682	;# 
 16050   0002AB                     U1CON0          equ	683	;# 
 16051   0002AC                     U1CON1          equ	684	;# 
 16052   0002AD                     U1CON2          equ	685	;# 
 16053   0002AE                     U1BRG           equ	686	;# 
 16054   0002AE                     U1BRGL          equ	686	;# 
 16055   0002AF                     U1BRGH          equ	687	;# 
 16056   0002B0                     U1FIFO          equ	688	;# 
 16057   0002B1                     U1UIR           equ	689	;# 
 16058   0002B2                     U1ERRIR         equ	690	;# 
 16059   0002B3                     U1ERRIE         equ	691	;# 
 16060   0002B4                     U2RXB           equ	692	;# 
 16061   0002B4                     U2RXBL          equ	692	;# 
 16062   0002B5                     U2RXCHK         equ	693	;# 
 16063   0002B6                     U2TXB           equ	694	;# 
 16064   0002B6                     U2TXBL          equ	694	;# 
 16065   0002B7                     U2TXCHK         equ	695	;# 
 16066   0002B8                     U2P1            equ	696	;# 
 16067   0002B8                     U2P1L           equ	696	;# 
 16068   0002B9                     U2P1H           equ	697	;# 
 16069   0002BA                     U2P2            equ	698	;# 
 16070   0002BA                     U2P2L           equ	698	;# 
 16071   0002BB                     U2P2H           equ	699	;# 
 16072   0002BC                     U2P3            equ	700	;# 
 16073   0002BC                     U2P3L           equ	700	;# 
 16074   0002BD                     U2P3H           equ	701	;# 
 16075   0002BE                     U2CON0          equ	702	;# 
 16076   0002BF                     U2CON1          equ	703	;# 
 16077   0002C0                     U2CON2          equ	704	;# 
 16078   0002C1                     U2BRG           equ	705	;# 
 16079   0002C1                     U2BRGL          equ	705	;# 
 16080   0002C2                     U2BRGH          equ	706	;# 
 16081   0002C3                     U2FIFO          equ	707	;# 
 16082   0002C4                     U2UIR           equ	708	;# 
 16083   0002C5                     U2ERRIR         equ	709	;# 
 16084   0002C6                     U2ERRIE         equ	710	;# 
 16085   0002C7                     U3RXB           equ	711	;# 
 16086   0002C7                     U3RXBL          equ	711	;# 
 16087   0002C9                     U3TXB           equ	713	;# 
 16088   0002C9                     U3TXBL          equ	713	;# 
 16089   0002CB                     U3P1            equ	715	;# 
 16090   0002CB                     U3P1L           equ	715	;# 
 16091   0002CD                     U3P2            equ	717	;# 
 16092   0002CD                     U3P2L           equ	717	;# 
 16093   0002CF                     U3P3            equ	719	;# 
 16094   0002CF                     U3P3L           equ	719	;# 
 16095   0002D1                     U3CON0          equ	721	;# 
 16096   0002D2                     U3CON1          equ	722	;# 
 16097   0002D3                     U3CON2          equ	723	;# 
 16098   0002D4                     U3BRG           equ	724	;# 
 16099   0002D4                     U3BRGL          equ	724	;# 
 16100   0002D5                     U3BRGH          equ	725	;# 
 16101   0002D6                     U3FIFO          equ	726	;# 
 16102   0002D7                     U3UIR           equ	727	;# 
 16103   0002D8                     U3ERRIR         equ	728	;# 
 16104   0002D9                     U3ERRIE         equ	729	;# 
 16105   0002DA                     U4RXB           equ	730	;# 
 16106   0002DA                     U4RXBL          equ	730	;# 
 16107   0002DC                     U4TXB           equ	732	;# 
 16108   0002DC                     U4TXBL          equ	732	;# 
 16109   0002DE                     U4P1            equ	734	;# 
 16110   0002DE                     U4P1L           equ	734	;# 
 16111   0002E0                     U4P2            equ	736	;# 
 16112   0002E0                     U4P2L           equ	736	;# 
 16113   0002E2                     U4P3            equ	738	;# 
 16114   0002E2                     U4P3L           equ	738	;# 
 16115   0002E4                     U4CON0          equ	740	;# 
 16116   0002E5                     U4CON1          equ	741	;# 
 16117   0002E6                     U4CON2          equ	742	;# 
 16118   0002E7                     U4BRG           equ	743	;# 
 16119   0002E7                     U4BRGL          equ	743	;# 
 16120   0002E8                     U4BRGH          equ	744	;# 
 16121   0002E9                     U4FIFO          equ	745	;# 
 16122   0002EA                     U4UIR           equ	746	;# 
 16123   0002EB                     U4ERRIR         equ	747	;# 
 16124   0002EC                     U4ERRIE         equ	748	;# 
 16125   0002ED                     U5RXB           equ	749	;# 
 16126   0002ED                     U5RXBL          equ	749	;# 
 16127   0002EF                     U5TXB           equ	751	;# 
 16128   0002EF                     U5TXBL          equ	751	;# 
 16129   0002F1                     U5P1            equ	753	;# 
 16130   0002F1                     U5P1L           equ	753	;# 
 16131   0002F3                     U5P2            equ	755	;# 
 16132   0002F3                     U5P2L           equ	755	;# 
 16133   0002F5                     U5P3            equ	757	;# 
 16134   0002F5                     U5P3L           equ	757	;# 
 16135   0002F7                     U5CON0          equ	759	;# 
 16136   0002F8                     U5CON1          equ	760	;# 
 16137   0002F9                     U5CON2          equ	761	;# 
 16138   0002FA                     U5BRG           equ	762	;# 
 16139   0002FA                     U5BRGL          equ	762	;# 
 16140   0002FB                     U5BRGH          equ	763	;# 
 16141   0002FC                     U5FIFO          equ	764	;# 
 16142   0002FD                     U5UIR           equ	765	;# 
 16143   0002FE                     U5ERRIR         equ	766	;# 
 16144   0002FF                     U5ERRIE         equ	767	;# 
 16145   000300                     SMT1TMR         equ	768	;# 
 16146   000300                     SMT1TMRL        equ	768	;# 
 16147   000301                     SMT1TMRH        equ	769	;# 
 16148   000302                     SMT1TMRU        equ	770	;# 
 16149   000303                     SMT1CPR         equ	771	;# 
 16150   000303                     SMT1CPRL        equ	771	;# 
 16151   000304                     SMT1CPRH        equ	772	;# 
 16152   000305                     SMT1CPRU        equ	773	;# 
 16153   000306                     SMT1CPW         equ	774	;# 
 16154   000306                     SMT1CPWL        equ	774	;# 
 16155   000307                     SMT1CPWH        equ	775	;# 
 16156   000308                     SMT1CPWU        equ	776	;# 
 16157   000309                     SMT1PR          equ	777	;# 
 16158   000309                     SMT1PRL         equ	777	;# 
 16159   00030A                     SMT1PRH         equ	778	;# 
 16160   00030B                     SMT1PRU         equ	779	;# 
 16161   00030C                     SMT1CON0        equ	780	;# 
 16162   00030D                     SMT1CON1        equ	781	;# 
 16163   00030E                     SMT1STAT        equ	782	;# 
 16164   00030F                     SMT1CLK         equ	783	;# 
 16165   000310                     SMT1SIG         equ	784	;# 
 16166   000311                     SMT1WIN         equ	785	;# 
 16167   000318                     TMR0L           equ	792	;# 
 16168   000318                     TMR0            equ	792	;# 
 16169   000319                     TMR0H           equ	793	;# 
 16170   000319                     PR0             equ	793	;# 
 16171   00031A                     T0CON0          equ	794	;# 
 16172   00031B                     T0CON1          equ	795	;# 
 16173   00031C                     TMR1            equ	796	;# 
 16174   00031C                     TMR1L           equ	796	;# 
 16175   00031D                     TMR1H           equ	797	;# 
 16176   00031E                     T1CON           equ	798	;# 
 16177   00031E                     TMR1CON         equ	798	;# 
 16178   00031F                     T1GCON          equ	799	;# 
 16179   00031F                     TMR1GCON        equ	799	;# 
 16180   000320                     T1GATE          equ	800	;# 
 16181   000320                     TMR1GATE        equ	800	;# 
 16182   000321                     T1CLK           equ	801	;# 
 16183   000321                     TMR1CLK         equ	801	;# 
 16184   000321                     PR1             equ	801	;# 
 16185   000322                     T2TMR           equ	802	;# 
 16186   000322                     TMR2            equ	802	;# 
 16187   000323                     T2PR            equ	803	;# 
 16188   000323                     PR2             equ	803	;# 
 16189   000324                     T2CON           equ	804	;# 
 16190   000325                     T2HLT           equ	805	;# 
 16191   000326                     T2CLKCON        equ	806	;# 
 16192   000326                     T2CLK           equ	806	;# 
 16193   000327                     T2RST           equ	807	;# 
 16194   000328                     TMR3            equ	808	;# 
 16195   000328                     TMR3L           equ	808	;# 
 16196   000329                     TMR3H           equ	809	;# 
 16197   00032A                     T3CON           equ	810	;# 
 16198   00032A                     TMR3CON         equ	810	;# 
 16199   00032B                     T3GCON          equ	811	;# 
 16200   00032B                     TMR3GCON        equ	811	;# 
 16201   00032C                     T3GATE          equ	812	;# 
 16202   00032C                     TMR3GATE        equ	812	;# 
 16203   00032D                     T3CLK           equ	813	;# 
 16204   00032D                     TMR3CLK         equ	813	;# 
 16205   00032D                     PR3             equ	813	;# 
 16206   00032E                     T4TMR           equ	814	;# 
 16207   00032E                     TMR4            equ	814	;# 
 16208   00032F                     T4PR            equ	815	;# 
 16209   00032F                     PR4             equ	815	;# 
 16210   000330                     T4CON           equ	816	;# 
 16211   000331                     T4HLT           equ	817	;# 
 16212   000332                     T4CLKCON        equ	818	;# 
 16213   000332                     T4CLK           equ	818	;# 
 16214   000333                     T4RST           equ	819	;# 
 16215   000334                     TMR5            equ	820	;# 
 16216   000334                     TMR5L           equ	820	;# 
 16217   000335                     TMR5H           equ	821	;# 
 16218   000336                     T5CON           equ	822	;# 
 16219   000336                     TMR5CON         equ	822	;# 
 16220   000337                     T5GCON          equ	823	;# 
 16221   000337                     TMR5GCON        equ	823	;# 
 16222   000338                     T5GATE          equ	824	;# 
 16223   000338                     TMR5GATE        equ	824	;# 
 16224   000339                     T5CLK           equ	825	;# 
 16225   000339                     TMR5CLK         equ	825	;# 
 16226   000339                     PR5             equ	825	;# 
 16227   00033A                     T6TMR           equ	826	;# 
 16228   00033A                     TMR6            equ	826	;# 
 16229   00033B                     T6PR            equ	827	;# 
 16230   00033B                     PR6             equ	827	;# 
 16231   00033C                     T6CON           equ	828	;# 
 16232   00033D                     T6HLT           equ	829	;# 
 16233   00033E                     T6CLKCON        equ	830	;# 
 16234   00033E                     T6CLK           equ	830	;# 
 16235   00033F                     T6RST           equ	831	;# 
 16236   000340                     CCPR1           equ	832	;# 
 16237   000340                     CCPR1L          equ	832	;# 
 16238   000341                     CCPR1H          equ	833	;# 
 16239   000342                     CCP1CON         equ	834	;# 
 16240   000343                     CCP1CAP         equ	835	;# 
 16241   000344                     CCPR2           equ	836	;# 
 16242   000344                     CCPR2L          equ	836	;# 
 16243   000345                     CCPR2H          equ	837	;# 
 16244   000346                     CCP2CON         equ	838	;# 
 16245   000347                     CCP2CAP         equ	839	;# 
 16246   000348                     CCPR3           equ	840	;# 
 16247   000348                     CCPR3L          equ	840	;# 
 16248   000349                     CCPR3H          equ	841	;# 
 16249   00034A                     CCP3CON         equ	842	;# 
 16250   00034B                     CCP3CAP         equ	843	;# 
 16251   00034C                     CCPTMRS0        equ	844	;# 
 16252   00034F                     CRCDATA         equ	847	;# 
 16253   00034F                     CRCDATAL        equ	847	;# 
 16254   000350                     CRCDATAH        equ	848	;# 
 16255   000351                     CRCDATAU        equ	849	;# 
 16256   000352                     CRCDATAT        equ	850	;# 
 16257   000353                     CRCOUT          equ	851	;# 
 16258   000353                     CRCSHFT         equ	851	;# 
 16259   000353                     CRCXOR          equ	851	;# 
 16260   000353                     CRCOUTL         equ	851	;# 
 16261   000353                     CRCSHFTL        equ	851	;# 
 16262   000353                     CRCSHIFTL       equ	851	;# 
 16263   000353                     CRCXORL         equ	851	;# 
 16264   000354                     CRCOUTH         equ	852	;# 
 16265   000354                     CRCSHFTH        equ	852	;# 
 16266   000354                     CRCSHIFTH       equ	852	;# 
 16267   000354                     CRCXORH         equ	852	;# 
 16268   000355                     CRCOUTU         equ	853	;# 
 16269   000355                     CRCSHFTU        equ	853	;# 
 16270   000355                     CRCSHIFTU       equ	853	;# 
 16271   000355                     CRCXORU         equ	853	;# 
 16272   000356                     CRCOUTT         equ	854	;# 
 16273   000356                     CRCSHFTT        equ	854	;# 
 16274   000356                     CRCSHIFTT       equ	854	;# 
 16275   000356                     CRCXORT         equ	854	;# 
 16276   000357                     CRCCON0         equ	855	;# 
 16277   000358                     CRCCON1         equ	856	;# 
 16278   000359                     CRCCON2         equ	857	;# 
 16279   00035A                     SCANLADR        equ	858	;# 
 16280   00035A                     SCANLADRL       equ	858	;# 
 16281   00035B                     SCANLADRH       equ	859	;# 
 16282   00035C                     SCANLADRU       equ	860	;# 
 16283   00035D                     SCANHADR        equ	861	;# 
 16284   00035D                     SCANHADRL       equ	861	;# 
 16285   00035E                     SCANHADRH       equ	862	;# 
 16286   00035F                     SCANHADRU       equ	863	;# 
 16287   000360                     SCANCON0        equ	864	;# 
 16288   000361                     SCANTRIG        equ	865	;# 
 16289   000362                     IPR0            equ	866	;# 
 16290   000363                     IPR1            equ	867	;# 
 16291   000364                     IPR2            equ	868	;# 
 16292   000365                     IPR3            equ	869	;# 
 16293   000366                     IPR4            equ	870	;# 
 16294   000367                     IPR5            equ	871	;# 
 16295   000368                     IPR6            equ	872	;# 
 16296   000369                     IPR7            equ	873	;# 
 16297   00036A                     IPR8            equ	874	;# 
 16298   00036B                     IPR9            equ	875	;# 
 16299   00036C                     IPR10           equ	876	;# 
 16300   00036D                     IPR11           equ	877	;# 
 16301   00036E                     IPR12           equ	878	;# 
 16302   00036F                     IPR13           equ	879	;# 
 16303   000370                     IPR14           equ	880	;# 
 16304   000371                     IPR15           equ	881	;# 
 16305   000373                     STATUS_CSHAD    equ	883	;# 
 16306   000374                     WREG_CSHAD      equ	884	;# 
 16307   000375                     BSR_CSHAD       equ	885	;# 
 16308   000376                     SHADCON         equ	886	;# 
 16309   000377                     STATUS_SHAD     equ	887	;# 
 16310   000378                     WREG_SHAD       equ	888	;# 
 16311   000379                     BSR_SHAD        equ	889	;# 
 16312   00037A                     PCLATH_SHAD     equ	890	;# 
 16313   00037B                     PCLATU_SHAD     equ	891	;# 
 16314   00037C                     FSR0SH          equ	892	;# 
 16315   00037C                     FSR0L_SHAD      equ	892	;# 
 16316   00037D                     FSR0H_SHAD      equ	893	;# 
 16317   00037E                     FSR1SH          equ	894	;# 
 16318   00037E                     FSR1L_SHAD      equ	894	;# 
 16319   00037F                     FSR1H_SHAD      equ	895	;# 
 16320   000380                     FSR2SH          equ	896	;# 
 16321   000380                     FSR2L_SHAD      equ	896	;# 
 16322   000381                     FSR2H_SHAD      equ	897	;# 
 16323   000382                     PRODSH          equ	898	;# 
 16324   000382                     PRODL_SHAD      equ	898	;# 
 16325   000383                     PRODH_SHAD      equ	899	;# 
 16326   000387                     TU16ACON0       equ	903	;# 
 16327   000388                     TU16ACON1       equ	904	;# 
 16328   000389                     TU16AHLT        equ	905	;# 
 16329   00038A                     TU16APS         equ	906	;# 
 16330   00038B                     TU16ATMR        equ	907	;# 
 16331   00038B                     TU16ACR         equ	907	;# 
 16332   00038B                     TU16ATMRL       equ	907	;# 
 16333   00038B                     TU16ACRL        equ	907	;# 
 16334   00038C                     TU16ATMRH       equ	908	;# 
 16335   00038C                     TU16ACRH        equ	908	;# 
 16336   00038D                     TU16APR         equ	909	;# 
 16337   00038D                     TU16APRL        equ	909	;# 
 16338   00038E                     TU16APRH        equ	910	;# 
 16339   00038F                     TU16ACLK        equ	911	;# 
 16340   000390                     TU16AERS        equ	912	;# 
 16341   000393                     TU16BCON0       equ	915	;# 
 16342   000394                     TU16BCON1       equ	916	;# 
 16343   000395                     TU16BHLT        equ	917	;# 
 16344   000396                     TU16BPS         equ	918	;# 
 16345   000397                     TU16BTMR        equ	919	;# 
 16346   000397                     TU16BCR         equ	919	;# 
 16347   000397                     TU16BTMRL       equ	919	;# 
 16348   000397                     TU16BCRL        equ	919	;# 
 16349   000398                     TU16BTMRH       equ	920	;# 
 16350   000398                     TU16BCRH        equ	920	;# 
 16351   000399                     TU16BPR         equ	921	;# 
 16352   000399                     TU16BPRL        equ	921	;# 
 16353   00039A                     TU16BPRH        equ	922	;# 
 16354   00039B                     TU16BCLK        equ	923	;# 
 16355   00039C                     TU16BERS        equ	924	;# 
 16356   0003BB                     TUCHAIN         equ	955	;# 
 16357   0003BC                     CWG1CLK         equ	956	;# 
 16358   0003BC                     CWG1CLKCON      equ	956	;# 
 16359   0003BD                     CWG1ISM         equ	957	;# 
 16360   0003BE                     CWG1DBR         equ	958	;# 
 16361   0003BF                     CWG1DBF         equ	959	;# 
 16362   0003C0                     CWG1CON0        equ	960	;# 
 16363   0003C1                     CWG1CON1        equ	961	;# 
 16364   0003C2                     CWG1AS0         equ	962	;# 
 16365   0003C3                     CWG1AS1         equ	963	;# 
 16366   0003C4                     CWG1STR         equ	964	;# 
 16367   0003C5                     CWG2CLK         equ	965	;# 
 16368   0003C5                     CWG2CLKCON      equ	965	;# 
 16369   0003C6                     CWG2ISM         equ	966	;# 
 16370   0003C7                     CWG2DBR         equ	967	;# 
 16371   0003C8                     CWG2DBF         equ	968	;# 
 16372   0003C9                     CWG2CON0        equ	969	;# 
 16373   0003CA                     CWG2CON1        equ	970	;# 
 16374   0003CB                     CWG2AS0         equ	971	;# 
 16375   0003CC                     CWG2AS1         equ	972	;# 
 16376   0003CD                     CWG2STR         equ	973	;# 
 16377   0003CE                     CWG3CLK         equ	974	;# 
 16378   0003CE                     CWG3CLKCON      equ	974	;# 
 16379   0003CF                     CWG3ISM         equ	975	;# 
 16380   0003D0                     CWG3DBR         equ	976	;# 
 16381   0003D1                     CWG3DBF         equ	977	;# 
 16382   0003D2                     CWG3CON0        equ	978	;# 
 16383   0003D3                     CWG3CON1        equ	979	;# 
 16384   0003D4                     CWG3AS0         equ	980	;# 
 16385   0003D5                     CWG3AS1         equ	981	;# 
 16386   0003D6                     CWG3STR         equ	982	;# 
 16387   0003D7                     FVRCON          equ	983	;# 
 16388   0003D8                     ADCPCON         equ	984	;# 
 16389   0003D8                     ADCP            equ	984	;# 
 16390   0003D9                     ADLTH           equ	985	;# 
 16391   0003D9                     ADLTHL          equ	985	;# 
 16392   0003DA                     ADLTHH          equ	986	;# 
 16393   0003DB                     ADUTH           equ	987	;# 
 16394   0003DB                     ADUTHL          equ	987	;# 
 16395   0003DC                     ADUTHH          equ	988	;# 
 16396   0003DD                     ADERR           equ	989	;# 
 16397   0003DD                     ADERRL          equ	989	;# 
 16398   0003DE                     ADERRH          equ	990	;# 
 16399   0003DF                     ADSTPT          equ	991	;# 
 16400   0003DF                     ADSTPTL         equ	991	;# 
 16401   0003E0                     ADSTPTH         equ	992	;# 
 16402   0003E1                     ADFLTR          equ	993	;# 
 16403   0003E1                     ADFLTRL         equ	993	;# 
 16404   0003E2                     ADFLTRH         equ	994	;# 
 16405   0003E3                     ADACC           equ	995	;# 
 16406   0003E3                     ADACCL          equ	995	;# 
 16407   0003E4                     ADACCH          equ	996	;# 
 16408   0003E5                     ADACCU          equ	997	;# 
 16409   0003E6                     ADCNT           equ	998	;# 
 16410   0003E7                     ADRPT           equ	999	;# 
 16411   0003E8                     ADPREV          equ	1000	;# 
 16412   0003E8                     ADPREVL         equ	1000	;# 
 16413   0003E9                     ADPREVH         equ	1001	;# 
 16414   0003EA                     ADRES           equ	1002	;# 
 16415   0003EA                     ADRESL          equ	1002	;# 
 16416   0003EB                     ADRESH          equ	1003	;# 
 16417   0003EC                     ADPCH           equ	1004	;# 
 16418   0003EE                     ADACQ           equ	1006	;# 
 16419   0003EE                     ADACQL          equ	1006	;# 
 16420   0003EF                     ADACQH          equ	1007	;# 
 16421   0003F0                     ADCAP           equ	1008	;# 
 16422   0003F1                     ADPRE           equ	1009	;# 
 16423   0003F1                     ADPREL          equ	1009	;# 
 16424   0003F2                     ADPREH          equ	1010	;# 
 16425   0003F3                     ADCON0          equ	1011	;# 
 16426   0003F4                     ADCON1          equ	1012	;# 
 16427   0003F5                     ADCON2          equ	1013	;# 
 16428   0003F6                     ADCON3          equ	1014	;# 
 16429   0003F7                     ADSTAT          equ	1015	;# 
 16430   0003F8                     ADREF           equ	1016	;# 
 16431   0003F9                     ADACT           equ	1017	;# 
 16432   0003FA                     ADCLK           equ	1018	;# 
 16433   0003FB                     ADCTX           equ	1019	;# 
 16434   0003FC                     ADCSEL1         equ	1020	;# 
 16435   0003FD                     ADCSEL2         equ	1021	;# 
 16436   0003FE                     ADCSEL3         equ	1022	;# 
 16437   0003FF                     ADCSEL4         equ	1023	;# 
 16438   000400                     ANSELA          equ	1024	;# 
 16439   000401                     WPUA            equ	1025	;# 
 16440   000402                     ODCONA          equ	1026	;# 
 16441   000403                     SLRCONA         equ	1027	;# 
 16442   000404                     INLVLA          equ	1028	;# 
 16443   000405                     IOCAP           equ	1029	;# 
 16444   000406                     IOCAN           equ	1030	;# 
 16445   000407                     IOCAF           equ	1031	;# 
 16446   000408                     ANSELB          equ	1032	;# 
 16447   000409                     WPUB            equ	1033	;# 
 16448   00040A                     ODCONB          equ	1034	;# 
 16449   00040B                     SLRCONB         equ	1035	;# 
 16450   00040C                     INLVLB          equ	1036	;# 
 16451   00040D                     IOCBP           equ	1037	;# 
 16452   00040E                     IOCBN           equ	1038	;# 
 16453   00040F                     IOCBF           equ	1039	;# 
 16454   000410                     ANSELC          equ	1040	;# 
 16455   000411                     WPUC            equ	1041	;# 
 16456   000412                     ODCONC          equ	1042	;# 
 16457   000413                     SLRCONC         equ	1043	;# 
 16458   000414                     INLVLC          equ	1044	;# 
 16459   000415                     IOCCP           equ	1045	;# 
 16460   000416                     IOCCN           equ	1046	;# 
 16461   000417                     IOCCF           equ	1047	;# 
 16462   000421                     WPUE            equ	1057	;# 
 16463   000424                     INLVLE          equ	1060	;# 
 16464   000425                     IOCEP           equ	1061	;# 
 16465   000426                     IOCEN           equ	1062	;# 
 16466   000427                     IOCEF           equ	1063	;# 
 16467   000440                     NCO1ACC         equ	1088	;# 
 16468   000440                     NCO1ACCL        equ	1088	;# 
 16469   000441                     NCO1ACCH        equ	1089	;# 
 16470   000442                     NCO1ACCU        equ	1090	;# 
 16471   000443                     NCO1INC         equ	1091	;# 
 16472   000443                     NCO1INCL        equ	1091	;# 
 16473   000444                     NCO1INCH        equ	1092	;# 
 16474   000445                     NCO1INCU        equ	1093	;# 
 16475   000446                     NCO1CON         equ	1094	;# 
 16476   000447                     NCO1CLK         equ	1095	;# 
 16477   000448                     NCO2ACC         equ	1096	;# 
 16478   000448                     NCO2ACCL        equ	1096	;# 
 16479   000449                     NCO2ACCH        equ	1097	;# 
 16480   00044A                     NCO2ACCU        equ	1098	;# 
 16481   00044B                     NCO2INC         equ	1099	;# 
 16482   00044B                     NCO2INCL        equ	1099	;# 
 16483   00044C                     NCO2INCH        equ	1100	;# 
 16484   00044D                     NCO2INCU        equ	1101	;# 
 16485   00044E                     NCO2CON         equ	1102	;# 
 16486   00044F                     NCO2CLK         equ	1103	;# 
 16487   000450                     NCO3ACC         equ	1104	;# 
 16488   000450                     NCO3ACCL        equ	1104	;# 
 16489   000451                     NCO3ACCH        equ	1105	;# 
 16490   000452                     NCO3ACCU        equ	1106	;# 
 16491   000453                     NCO3INC         equ	1107	;# 
 16492   000453                     NCO3INCL        equ	1107	;# 
 16493   000454                     NCO3INCH        equ	1108	;# 
 16494   000455                     NCO3INCU        equ	1109	;# 
 16495   000456                     NCO3CON         equ	1110	;# 
 16496   000457                     NCO3CLK         equ	1111	;# 
 16497   000458                     FSCMCON         equ	1112	;# 
 16498   000459                     IVTLOCK         equ	1113	;# 
 16499   00045A                     IVTAD           equ	1114	;# 
 16500   00045A                     IVTADL          equ	1114	;# 
 16501   00045B                     IVTADH          equ	1115	;# 
 16502   00045C                     IVTADU          equ	1116	;# 
 16503   00045D                     IVTBASE         equ	1117	;# 
 16504   00045D                     IVTBASEL        equ	1117	;# 
 16505   00045E                     IVTBASEH        equ	1118	;# 
 16506   00045F                     IVTBASEU        equ	1119	;# 
 16507   000460                     PWM1ERS         equ	1120	;# 
 16508   000461                     PWM1CLK         equ	1121	;# 
 16509   000462                     PWM1LDS         equ	1122	;# 
 16510   000463                     PWM1PR          equ	1123	;# 
 16511   000463                     PWM1PRL         equ	1123	;# 
 16512   000464                     PWM1PRH         equ	1124	;# 
 16513   000465                     PWM1CPRE        equ	1125	;# 
 16514   000466                     PWM1PIPOS       equ	1126	;# 
 16515   000467                     PWM1GIR         equ	1127	;# 
 16516   000468                     PWM1GIE         equ	1128	;# 
 16517   000469                     PWM1CON         equ	1129	;# 
 16518   00046A                     PWM1S1CFG       equ	1130	;# 
 16519   00046B                     PWM1S1P1        equ	1131	;# 
 16520   00046B                     PWM1S1P1L       equ	1131	;# 
 16521   00046C                     PWM1S1P1H       equ	1132	;# 
 16522   00046D                     PWM1S1P2        equ	1133	;# 
 16523   00046D                     PWM1S1P2L       equ	1133	;# 
 16524   00046E                     PWM1S1P2H       equ	1134	;# 
 16525   00046F                     PWM2ERS         equ	1135	;# 
 16526   000470                     PWM2CLK         equ	1136	;# 
 16527   000471                     PWM2LDS         equ	1137	;# 
 16528   000472                     PWM2PR          equ	1138	;# 
 16529   000472                     PWM2PRL         equ	1138	;# 
 16530   000473                     PWM2PRH         equ	1139	;# 
 16531   000474                     PWM2CPRE        equ	1140	;# 
 16532   000475                     PWM2PIPOS       equ	1141	;# 
 16533   000476                     PWM2GIR         equ	1142	;# 
 16534   000477                     PWM2GIE         equ	1143	;# 
 16535   000478                     PWM2CON         equ	1144	;# 
 16536   000479                     PWM2S1CFG       equ	1145	;# 
 16537   00047A                     PWM2S1P1        equ	1146	;# 
 16538   00047A                     PWM2S1P1L       equ	1146	;# 
 16539   00047B                     PWM2S1P1H       equ	1147	;# 
 16540   00047C                     PWM2S1P2        equ	1148	;# 
 16541   00047C                     PWM2S1P2L       equ	1148	;# 
 16542   00047D                     PWM2S1P2H       equ	1149	;# 
 16543   00047E                     PWM3ERS         equ	1150	;# 
 16544   00047F                     PWM3CLK         equ	1151	;# 
 16545   000480                     PWM3LDS         equ	1152	;# 
 16546   000481                     PWM3PR          equ	1153	;# 
 16547   000481                     PWM3PRL         equ	1153	;# 
 16548   000482                     PWM3PRH         equ	1154	;# 
 16549   000483                     PWM3CPRE        equ	1155	;# 
 16550   000484                     PWM3PIPOS       equ	1156	;# 
 16551   000485                     PWM3GIR         equ	1157	;# 
 16552   000486                     PWM3GIE         equ	1158	;# 
 16553   000487                     PWM3CON         equ	1159	;# 
 16554   000488                     PWM3S1CFG       equ	1160	;# 
 16555   000489                     PWM3S1P1        equ	1161	;# 
 16556   000489                     PWM3S1P1L       equ	1161	;# 
 16557   00048A                     PWM3S1P1H       equ	1162	;# 
 16558   00048B                     PWM3S1P2        equ	1163	;# 
 16559   00048B                     PWM3S1P2L       equ	1163	;# 
 16560   00048C                     PWM3S1P2H       equ	1164	;# 
 16561   00048D                     PWM4ERS         equ	1165	;# 
 16562   00048E                     PWM4CLK         equ	1166	;# 
 16563   00048F                     PWM4LDS         equ	1167	;# 
 16564   000490                     PWM4PR          equ	1168	;# 
 16565   000490                     PWM4PRL         equ	1168	;# 
 16566   000491                     PWM4PRH         equ	1169	;# 
 16567   000492                     PWM4CPRE        equ	1170	;# 
 16568   000493                     PWM4PIPOS       equ	1171	;# 
 16569   000494                     PWM4GIR         equ	1172	;# 
 16570   000495                     PWM4GIE         equ	1173	;# 
 16571   000496                     PWM4CON         equ	1174	;# 
 16572   000497                     PWM4S1CFG       equ	1175	;# 
 16573   000498                     PWM4S1P1        equ	1176	;# 
 16574   000498                     PWM4S1P1L       equ	1176	;# 
 16575   000499                     PWM4S1P1H       equ	1177	;# 
 16576   00049A                     PWM4S1P2        equ	1178	;# 
 16577   00049A                     PWM4S1P2L       equ	1178	;# 
 16578   00049B                     PWM4S1P2H       equ	1179	;# 
 16579   00049C                     PWMLOAD         equ	1180	;# 
 16580   00049D                     PWMEN           equ	1181	;# 
 16581   00049E                     PIE0            equ	1182	;# 
 16582   00049F                     PIE1            equ	1183	;# 
 16583   0004A0                     PIE2            equ	1184	;# 
 16584   0004A1                     PIE3            equ	1185	;# 
 16585   0004A2                     PIE4            equ	1186	;# 
 16586   0004A3                     PIE5            equ	1187	;# 
 16587   0004A4                     PIE6            equ	1188	;# 
 16588   0004A5                     PIE7            equ	1189	;# 
 16589   0004A6                     PIE8            equ	1190	;# 
 16590   0004A7                     PIE9            equ	1191	;# 
 16591   0004A8                     PIE10           equ	1192	;# 
 16592   0004A9                     PIE11           equ	1193	;# 
 16593   0004AA                     PIE12           equ	1194	;# 
 16594   0004AB                     PIE13           equ	1195	;# 
 16595   0004AC                     PIE14           equ	1196	;# 
 16596   0004AD                     PIE15           equ	1197	;# 
 16597   0004AE                     PIR0            equ	1198	;# 
 16598   0004AF                     PIR1            equ	1199	;# 
 16599   0004B0                     PIR2            equ	1200	;# 
 16600   0004B1                     PIR3            equ	1201	;# 
 16601   0004B2                     PIR4            equ	1202	;# 
 16602   0004B3                     PIR5            equ	1203	;# 
 16603   0004B4                     PIR6            equ	1204	;# 
 16604   0004B5                     PIR7            equ	1205	;# 
 16605   0004B6                     PIR8            equ	1206	;# 
 16606   0004B7                     PIR9            equ	1207	;# 
 16607   0004B8                     PIR10           equ	1208	;# 
 16608   0004B9                     PIR11           equ	1209	;# 
 16609   0004BA                     PIR12           equ	1210	;# 
 16610   0004BB                     PIR13           equ	1211	;# 
 16611   0004BC                     PIR14           equ	1212	;# 
 16612   0004BD                     PIR15           equ	1213	;# 
 16613   0004BE                     LATA            equ	1214	;# 
 16614   0004BF                     LATB            equ	1215	;# 
 16615   0004C0                     LATC            equ	1216	;# 
 16616   0004C6                     TRISA           equ	1222	;# 
 16617   0004C7                     TRISB           equ	1223	;# 
 16618   0004C8                     TRISC           equ	1224	;# 
 16619   0004CA                     TRISE           equ	1226	;# 
 16620   0004CE                     PORTA           equ	1230	;# 
 16621   0004CF                     PORTB           equ	1231	;# 
 16622   0004D0                     PORTC           equ	1232	;# 
 16623   0004D2                     PORTE           equ	1234	;# 
 16624   0004D6                     INTCON0         equ	1238	;# 
 16625   0004D7                     INTCON1         equ	1239	;# 
 16626   0004D8                     STATUS          equ	1240	;# 
 16627   0004D9                     FSR2            equ	1241	;# 
 16628   0004D9                     FSR2L           equ	1241	;# 
 16629   0004DA                     FSR2H           equ	1242	;# 
 16630   0004DB                     PLUSW2          equ	1243	;# 
 16631   0004DC                     PREINC2         equ	1244	;# 
 16632   0004DD                     POSTDEC2        equ	1245	;# 
 16633   0004DE                     POSTINC2        equ	1246	;# 
 16634   0004DF                     INDF2           equ	1247	;# 
 16635   0004E0                     BSR             equ	1248	;# 
 16636   0004E1                     FSR1            equ	1249	;# 
 16637   0004E1                     FSR1L           equ	1249	;# 
 16638   0004E2                     FSR1H           equ	1250	;# 
 16639   0004E3                     PLUSW1          equ	1251	;# 
 16640   0004E4                     PREINC1         equ	1252	;# 
 16641   0004E5                     POSTDEC1        equ	1253	;# 
 16642   0004E6                     POSTINC1        equ	1254	;# 
 16643   0004E7                     INDF1           equ	1255	;# 
 16644   0004E8                     WREG            equ	1256	;# 
 16645   0004E9                     FSR0            equ	1257	;# 
 16646   0004E9                     FSR0L           equ	1257	;# 
 16647   0004EA                     FSR0H           equ	1258	;# 
 16648   0004EB                     PLUSW0          equ	1259	;# 
 16649   0004EC                     PREINC0         equ	1260	;# 
 16650   0004ED                     POSTDEC0        equ	1261	;# 
 16651   0004EE                     POSTINC0        equ	1262	;# 
 16652   0004EF                     INDF0           equ	1263	;# 
 16653   0004F0                     PCON0           equ	1264	;# 
 16654   0004F1                     PCON1           equ	1265	;# 
 16655   0004F2                     CPUDOZE         equ	1266	;# 
 16656   0004F3                     PROD            equ	1267	;# 
 16657   0004F3                     PRODL           equ	1267	;# 
 16658   0004F4                     PRODH           equ	1268	;# 
 16659   0004F5                     TABLAT          equ	1269	;# 
 16660   0004F6                     TBLPTR          equ	1270	;# 
 16661   0004F6                     TBLPTRL         equ	1270	;# 
 16662   0004F7                     TBLPTRH         equ	1271	;# 
 16663   0004F8                     TBLPTRU         equ	1272	;# 
 16664   0004F9                     PCLAT           equ	1273	;# 
 16665   0004F9                     PCL             equ	1273	;# 
 16666   0004FA                     PCLATH          equ	1274	;# 
 16667   0004FB                     PCLATU          equ	1275	;# 
 16668   0004FC                     STKPTR          equ	1276	;# 
 16669   0004FD                     TOS             equ	1277	;# 
 16670   0004FD                     TOSL            equ	1277	;# 
 16671   0004FE                     TOSH            equ	1278	;# 
 16672   0004FF                     TOSU            equ	1279	;# 
 16673   000038                     BOOTREG         equ	56	;# 
 16674   000039                     CLKRCON         equ	57	;# 
 16675   00003A                     CLKRCLK         equ	58	;# 
 16676   000040                     NVMCON0         equ	64	;# 
 16677   000041                     NVMCON1         equ	65	;# 
 16678   000042                     NVMLOCK         equ	66	;# 
 16679   000043                     NVMADR          equ	67	;# 
 16680   000043                     NVMADRL         equ	67	;# 
 16681   000044                     NVMADRH         equ	68	;# 
 16682   000045                     NVMADRU         equ	69	;# 
 16683   000046                     NVMDAT          equ	70	;# 
 16684   000046                     NVMDATL         equ	70	;# 
 16685   000047                     NVMDATH         equ	71	;# 
 16686   000048                     VREGCON         equ	72	;# 
 16687   000049                     BORCON          equ	73	;# 
 16688   00004A                     HLVDCON0        equ	74	;# 
 16689   00004B                     HLVDCON1        equ	75	;# 
 16690   00004C                     ZCDCON          equ	76	;# 
 16691   000060                     PMD0            equ	96	;# 
 16692   000061                     PMD1            equ	97	;# 
 16693   000062                     PMD2            equ	98	;# 
 16694   000063                     PMD3            equ	99	;# 
 16695   000064                     PMD4            equ	100	;# 
 16696   000065                     PMD5            equ	101	;# 
 16697   000066                     PMD6            equ	102	;# 
 16698   000067                     PMD7            equ	103	;# 
 16699   000068                     PMD8            equ	104	;# 
 16700   00006A                     MD1CON0         equ	106	;# 
 16701   00006B                     MD1CON1         equ	107	;# 
 16702   00006C                     MD1SRC          equ	108	;# 
 16703   00006D                     MD1CARL         equ	109	;# 
 16704   00006E                     MD1CARH         equ	110	;# 
 16705   00006F                     CMOUT           equ	111	;# 
 16706   000070                     CM1CON0         equ	112	;# 
 16707   000071                     CM1CON1         equ	113	;# 
 16708   000072                     CM1NCH          equ	114	;# 
 16709   000073                     CM1PCH          equ	115	;# 
 16710   000074                     CM2CON0         equ	116	;# 
 16711   000075                     CM2CON1         equ	117	;# 
 16712   000076                     CM2NCH          equ	118	;# 
 16713   000077                     CM2PCH          equ	119	;# 
 16714   000078                     WDTCON0         equ	120	;# 
 16715   000079                     WDTCON1         equ	121	;# 
 16716   00007A                     WDTPSL          equ	122	;# 
 16717   00007B                     WDTPSH          equ	123	;# 
 16718   00007C                     WDTTMR          equ	124	;# 
 16719   00007D                     DAC1DAT         equ	125	;# 
 16720   00007D                     DAC1DATL        equ	125	;# 
 16721   00007F                     DAC1CON         equ	127	;# 
 16722   000080                     SPI1RXB         equ	128	;# 
 16723   000081                     SPI1TXB         equ	129	;# 
 16724   000082                     SPI1TCNT        equ	130	;# 
 16725   000082                     SPI1TCNTL       equ	130	;# 
 16726   000083                     SPI1TCNTH       equ	131	;# 
 16727   000084                     SPI1CON0        equ	132	;# 
 16728   000085                     SPI1CON1        equ	133	;# 
 16729   000086                     SPI1CON2        equ	134	;# 
 16730   000087                     SPI1STATUS      equ	135	;# 
 16731   000088                     SPI1TWIDTH      equ	136	;# 
 16732   000089                     SPI1BAUD        equ	137	;# 
 16733   00008A                     SPI1INTF        equ	138	;# 
 16734   00008B                     SPI1INTE        equ	139	;# 
 16735   00008C                     SPI1CLK         equ	140	;# 
 16736   00008D                     SPI2RXB         equ	141	;# 
 16737   00008E                     SPI2TXB         equ	142	;# 
 16738   00008F                     SPI2TCNT        equ	143	;# 
 16739   00008F                     SPI2TCNTL       equ	143	;# 
 16740   000090                     SPI2TCNTH       equ	144	;# 
 16741   000091                     SPI2CON0        equ	145	;# 
 16742   000092                     SPI2CON1        equ	146	;# 
 16743   000093                     SPI2CON2        equ	147	;# 
 16744   000094                     SPI2STATUS      equ	148	;# 
 16745   000095                     SPI2TWIDTH      equ	149	;# 
 16746   000096                     SPI2BAUD        equ	150	;# 
 16747   000097                     SPI2INTF        equ	151	;# 
 16748   000098                     SPI2INTE        equ	152	;# 
 16749   000099                     SPI2CLK         equ	153	;# 
 16750   0000AC                     ACTCON          equ	172	;# 
 16751   0000AD                     OSCCON1         equ	173	;# 
 16752   0000AE                     OSCCON2         equ	174	;# 
 16753   0000AF                     OSCCON3         equ	175	;# 
 16754   0000B0                     OSCTUNE         equ	176	;# 
 16755   0000B1                     OSCFRQ          equ	177	;# 
 16756   0000B1                     OSCFREQ         equ	177	;# 
 16757   0000B2                     OSCSTAT         equ	178	;# 
 16758   0000B2                     OSCSTAT1        equ	178	;# 
 16759   0000B3                     OSCEN           equ	179	;# 
 16760   0000B4                     PRLOCK          equ	180	;# 
 16761   0000B5                     SCANPR          equ	181	;# 
 16762   0000B6                     DMA1PR          equ	182	;# 
 16763   0000B7                     DMA2PR          equ	183	;# 
 16764   0000B8                     DMA3PR          equ	184	;# 
 16765   0000B9                     DMA4PR          equ	185	;# 
 16766   0000BA                     DMA5PR          equ	186	;# 
 16767   0000BB                     DMA6PR          equ	187	;# 
 16768   0000BC                     DMA7PR          equ	188	;# 
 16769   0000BD                     DMA8PR          equ	189	;# 
 16770   0000BE                     MAINPR          equ	190	;# 
 16771   0000BF                     ISRPR           equ	191	;# 
 16772   0000D4                     CLCDATA         equ	212	;# 
 16773   0000D5                     CLCSELECT       equ	213	;# 
 16774   0000D6                     CLCnCON         equ	214	;# 
 16775   0000D7                     CLCnPOL         equ	215	;# 
 16776   0000D8                     CLCnSEL0        equ	216	;# 
 16777   0000D9                     CLCnSEL1        equ	217	;# 
 16778   0000DA                     CLCnSEL2        equ	218	;# 
 16779   0000DB                     CLCnSEL3        equ	219	;# 
 16780   0000DC                     CLCnGLS0        equ	220	;# 
 16781   0000DD                     CLCnGLS1        equ	221	;# 
 16782   0000DE                     CLCnGLS2        equ	222	;# 
 16783   0000DF                     CLCnGLS3        equ	223	;# 
 16784   0000E8                     DMASELECT       equ	232	;# 
 16785   0000E9                     DMAnBUF         equ	233	;# 
 16786   0000EA                     DMAnDCNT        equ	234	;# 
 16787   0000EA                     DMAnDCNTL       equ	234	;# 
 16788   0000EB                     DMAnDCNTH       equ	235	;# 
 16789   0000EC                     DMAnDPTR        equ	236	;# 
 16790   0000EC                     DMAnDPTRL       equ	236	;# 
 16791   0000ED                     DMAnDPTRH       equ	237	;# 
 16792   0000EE                     DMAnDSZ         equ	238	;# 
 16793   0000EE                     DMAnDSZL        equ	238	;# 
 16794   0000EF                     DMAnDSZH        equ	239	;# 
 16795   0000F0                     DMAnDSA         equ	240	;# 
 16796   0000F0                     DMAnDSAL        equ	240	;# 
 16797   0000F1                     DMAnDSAH        equ	241	;# 
 16798   0000F2                     DMAnSCNT        equ	242	;# 
 16799   0000F2                     DMAnSCNTL       equ	242	;# 
 16800   0000F3                     DMAnSCNTH       equ	243	;# 
 16801   0000F4                     DMAnSPTR        equ	244	;# 
 16802   0000F4                     DMAnSPTRL       equ	244	;# 
 16803   0000F5                     DMAnSPTRH       equ	245	;# 
 16804   0000F6                     DMAnSPTRU       equ	246	;# 
 16805   0000F7                     DMAnSSZ         equ	247	;# 
 16806   0000F7                     DMAnSSZL        equ	247	;# 
 16807   0000F8                     DMAnSSZH        equ	248	;# 
 16808   0000F9                     DMAnSSA         equ	249	;# 
 16809   0000F9                     DMAnSSAL        equ	249	;# 
 16810   0000FA                     DMAnSSAH        equ	250	;# 
 16811   0000FB                     DMAnSSAU        equ	251	;# 
 16812   0000FC                     DMAnCON0        equ	252	;# 
 16813   0000FD                     DMAnCON1        equ	253	;# 
 16814   0000FE                     DMAnAIRQ        equ	254	;# 
 16815   0000FF                     DMAnSIRQ        equ	255	;# 
 16816   000100                     C1CONL          equ	256	;# 
 16817   000101                     C1CONH          equ	257	;# 
 16818   000102                     C1CONU          equ	258	;# 
 16819   000103                     C1CONT          equ	259	;# 
 16820   000104                     C1NBTCFGL       equ	260	;# 
 16821   000105                     C1NBTCFGH       equ	261	;# 
 16822   000106                     C1NBTCFGU       equ	262	;# 
 16823   000107                     C1NBTCFGT       equ	263	;# 
 16824   000108                     C1DBTCFGL       equ	264	;# 
 16825   000109                     C1DBTCFGH       equ	265	;# 
 16826   00010A                     C1DBTCFGU       equ	266	;# 
 16827   00010B                     C1DBTCFGT       equ	267	;# 
 16828   00010C                     C1TDCL          equ	268	;# 
 16829   00010D                     C1TDCH          equ	269	;# 
 16830   00010E                     C1TDCU          equ	270	;# 
 16831   000110                     C1TBC           equ	272	;# 
 16832   000110                     C1TBCL          equ	272	;# 
 16833   000111                     C1TBCH          equ	273	;# 
 16834   000112                     C1TBCU          equ	274	;# 
 16835   000113                     C1TBCT          equ	275	;# 
 16836   000114                     C1TSCONL        equ	276	;# 
 16837   000115                     C1TSCONH        equ	277	;# 
 16838   000116                     C1TSCONU        equ	278	;# 
 16839   000117                     C1TSCONT        equ	279	;# 
 16840   000118                     C1VECL          equ	280	;# 
 16841   000119                     C1VECH          equ	281	;# 
 16842   00011A                     C1VECU          equ	282	;# 
 16843   00011B                     C1VECT          equ	283	;# 
 16844   00011C                     C1INTL          equ	284	;# 
 16845   00011D                     C1INTH          equ	285	;# 
 16846   00011E                     C1INTU          equ	286	;# 
 16847   00011F                     C1INTT          equ	287	;# 
 16848   000120                     C1RXIF          equ	288	;# 
 16849   000120                     C1RXIFL         equ	288	;# 
 16850   000121                     C1RXIFH         equ	289	;# 
 16851   000122                     C1RXIFU         equ	290	;# 
 16852   000123                     C1RXIFT         equ	291	;# 
 16853   000124                     C1TXIF          equ	292	;# 
 16854   000124                     C1TXIFL         equ	292	;# 
 16855   000125                     C1TXIFH         equ	293	;# 
 16856   000126                     C1TXIFU         equ	294	;# 
 16857   000127                     C1TXIFT         equ	295	;# 
 16858   000128                     C1RXOVIF        equ	296	;# 
 16859   000128                     C1RXOVIFL       equ	296	;# 
 16860   000129                     C1RXOVIFH       equ	297	;# 
 16861   00012A                     C1RXOVIFU       equ	298	;# 
 16862   00012B                     C1RXOVIFT       equ	299	;# 
 16863   00012C                     C1TXATIF        equ	300	;# 
 16864   00012C                     C1TXATIFL       equ	300	;# 
 16865   00012D                     C1TXATIFH       equ	301	;# 
 16866   00012E                     C1TXATIFU       equ	302	;# 
 16867   00012F                     C1TXATIFT       equ	303	;# 
 16868   000130                     C1TXREQ         equ	304	;# 
 16869   000130                     C1TXREQL        equ	304	;# 
 16870   000131                     C1TXREQH        equ	305	;# 
 16871   000132                     C1TXREQU        equ	306	;# 
 16872   000133                     C1TXREQT        equ	307	;# 
 16873   000134                     C1TRECL         equ	308	;# 
 16874   000135                     C1TRECH         equ	309	;# 
 16875   000136                     C1TRECU         equ	310	;# 
 16876   000137                     C1TRECT         equ	311	;# 
 16877   000138                     C1BDIAG0L       equ	312	;# 
 16878   000139                     C1BDIAG0H       equ	313	;# 
 16879   00013C                     C1BDIAG1L       equ	316	;# 
 16880   00013D                     C1BDIAG1H       equ	317	;# 
 16881   00013E                     C1BDIAG1U       equ	318	;# 
 16882   00013F                     C1BDIAG1T       equ	319	;# 
 16883   000140                     C1TEFCONL       equ	320	;# 
 16884   000141                     C1TEFCONH       equ	321	;# 
 16885   000142                     C1TEFCONU       equ	322	;# 
 16886   000143                     C1TEFCONT       equ	323	;# 
 16887   000144                     C1TEFSTAL       equ	324	;# 
 16888   000145                     C1TEFSTAH       equ	325	;# 
 16889   000146                     C1TEFSTAU       equ	326	;# 
 16890   000147                     C1TEFSTAT       equ	327	;# 
 16891   000148                     C1TEFUA         equ	328	;# 
 16892   000148                     C1TEFUAL        equ	328	;# 
 16893   000149                     C1TEFUAH        equ	329	;# 
 16894   00014A                     C1TEFUAU        equ	330	;# 
 16895   00014B                     C1TEFUAT        equ	331	;# 
 16896   00014C                     C1FIFOBA        equ	332	;# 
 16897   00014C                     C1FIFOBAL       equ	332	;# 
 16898   00014D                     C1FIFOBAH       equ	333	;# 
 16899   00014E                     C1FIFOBAU       equ	334	;# 
 16900   00014F                     C1FIFOBAT       equ	335	;# 
 16901   000150                     C1TXQCONL       equ	336	;# 
 16902   000151                     C1TXQCONH       equ	337	;# 
 16903   000152                     C1TXQCONU       equ	338	;# 
 16904   000153                     C1TXQCONT       equ	339	;# 
 16905   000154                     C1TXQSTAL       equ	340	;# 
 16906   000155                     C1TXQSTAH       equ	341	;# 
 16907   000156                     C1TXQSTAU       equ	342	;# 
 16908   000157                     C1TXQSTAT       equ	343	;# 
 16909   000158                     C1TXQUA         equ	344	;# 
 16910   000158                     C1TXQUAL        equ	344	;# 
 16911   000159                     C1TXQUAH        equ	345	;# 
 16912   00015A                     C1TXQUAU        equ	346	;# 
 16913   00015B                     C1TXQUAT        equ	347	;# 
 16914   00015C                     C1FIFOCON1      equ	348	;# 
 16915   00015C                     C1FIFOCON1L     equ	348	;# 
 16916   00015D                     C1FIFOCON1H     equ	349	;# 
 16917   00015E                     C1FIFOCON1U     equ	350	;# 
 16918   00015F                     C1FIFOCON1T     equ	351	;# 
 16919   000160                     C1FIFOSTA1      equ	352	;# 
 16920   000160                     C1FIFOSTA1L     equ	352	;# 
 16921   000161                     C1FIFOSTA1H     equ	353	;# 
 16922   000162                     C1FIFOSTA1U     equ	354	;# 
 16923   000163                     C1FIFOSTA1T     equ	355	;# 
 16924   000164                     C1FIFOUA1       equ	356	;# 
 16925   000164                     C1FIFOUA1L      equ	356	;# 
 16926   000165                     C1FIFOUA1H      equ	357	;# 
 16927   000166                     C1FIFOUA1U      equ	358	;# 
 16928   000167                     C1FIFOUA1T      equ	359	;# 
 16929   000168                     C1FIFOCON2      equ	360	;# 
 16930   000168                     C1FIFOCON2L     equ	360	;# 
 16931   000169                     C1FIFOCON2H     equ	361	;# 
 16932   00016A                     C1FIFOCON2U     equ	362	;# 
 16933   00016B                     C1FIFOCON2T     equ	363	;# 
 16934   00016C                     C1FIFOSTA2      equ	364	;# 
 16935   00016C                     C1FIFOSTA2L     equ	364	;# 
 16936   00016D                     C1FIFOSTA2H     equ	365	;# 
 16937   00016E                     C1FIFOSTA2U     equ	366	;# 
 16938   00016F                     C1FIFOSTA2T     equ	367	;# 
 16939   000170                     C1FIFOUA2       equ	368	;# 
 16940   000170                     C1FIFOUA2L      equ	368	;# 
 16941   000171                     C1FIFOUA2H      equ	369	;# 
 16942   000172                     C1FIFOUA2U      equ	370	;# 
 16943   000173                     C1FIFOUA2T      equ	371	;# 
 16944   000174                     C1FIFOCON3      equ	372	;# 
 16945   000174                     C1FIFOCON3L     equ	372	;# 
 16946   000175                     C1FIFOCON3H     equ	373	;# 
 16947   000176                     C1FIFOCON3U     equ	374	;# 
 16948   000177                     C1FIFOCON3T     equ	375	;# 
 16949   000178                     C1FIFOSTA3      equ	376	;# 
 16950   000178                     C1FIFOSTA3L     equ	376	;# 
 16951   000179                     C1FIFOSTA3H     equ	377	;# 
 16952   00017A                     C1FIFOSTA3U     equ	378	;# 
 16953   00017B                     C1FIFOSTA3T     equ	379	;# 
 16954   00017C                     C1FIFOUA3       equ	380	;# 
 16955   00017C                     C1FIFOUA3L      equ	380	;# 
 16956   00017D                     C1FIFOUA3H      equ	381	;# 
 16957   00017E                     C1FIFOUA3U      equ	382	;# 
 16958   00017F                     C1FIFOUA3T      equ	383	;# 
 16959   000180                     C1FLTCON0L      equ	384	;# 
 16960   000181                     C1FLTCON0H      equ	385	;# 
 16961   000182                     C1FLTCON0U      equ	386	;# 
 16962   000183                     C1FLTCON0T      equ	387	;# 
 16963   000184                     C1FLTCON1L      equ	388	;# 
 16964   000185                     C1FLTCON1H      equ	389	;# 
 16965   000186                     C1FLTCON1U      equ	390	;# 
 16966   000187                     C1FLTCON1T      equ	391	;# 
 16967   000188                     C1FLTCON2L      equ	392	;# 
 16968   000189                     C1FLTCON2H      equ	393	;# 
 16969   00018A                     C1FLTCON2U      equ	394	;# 
 16970   00018B                     C1FLTCON2T      equ	395	;# 
 16971   00018C                     C1FLTOBJ0       equ	396	;# 
 16972   00018C                     C1FLTOBJ0L      equ	396	;# 
 16973   00018D                     C1FLTOBJ0H      equ	397	;# 
 16974   00018E                     C1FLTOBJ0U      equ	398	;# 
 16975   00018F                     C1FLTOBJ0T      equ	399	;# 
 16976   000190                     C1MASK0         equ	400	;# 
 16977   000190                     C1MASK0L        equ	400	;# 
 16978   000191                     C1MASK0H        equ	401	;# 
 16979   000192                     C1MASK0U        equ	402	;# 
 16980   000193                     C1MASK0T        equ	403	;# 
 16981   000194                     C1FLTOBJ1       equ	404	;# 
 16982   000194                     C1FLTOBJ1L      equ	404	;# 
 16983   000195                     C1FLTOBJ1H      equ	405	;# 
 16984   000196                     C1FLTOBJ1U      equ	406	;# 
 16985   000197                     C1FLTOBJ1T      equ	407	;# 
 16986   000198                     C1MASK1         equ	408	;# 
 16987   000198                     C1MASK1L        equ	408	;# 
 16988   000199                     C1MASK1H        equ	409	;# 
 16989   00019A                     C1MASK1U        equ	410	;# 
 16990   00019B                     C1MASK1T        equ	411	;# 
 16991   00019C                     C1FLTOBJ2       equ	412	;# 
 16992   00019C                     C1FLTOBJ2L      equ	412	;# 
 16993   00019D                     C1FLTOBJ2H      equ	413	;# 
 16994   00019E                     C1FLTOBJ2U      equ	414	;# 
 16995   00019F                     C1FLTOBJ2T      equ	415	;# 
 16996   0001A0                     C1MASK2         equ	416	;# 
 16997   0001A0                     C1MASK2L        equ	416	;# 
 16998   0001A1                     C1MASK2H        equ	417	;# 
 16999   0001A2                     C1MASK2U        equ	418	;# 
 17000   0001A3                     C1MASK2T        equ	419	;# 
 17001   0001A4                     C1FLTOBJ3       equ	420	;# 
 17002   0001A4                     C1FLTOBJ3L      equ	420	;# 
 17003   0001A5                     C1FLTOBJ3H      equ	421	;# 
 17004   0001A6                     C1FLTOBJ3U      equ	422	;# 
 17005   0001A7                     C1FLTOBJ3T      equ	423	;# 
 17006   0001A8                     C1MASK3         equ	424	;# 
 17007   0001A8                     C1MASK3L        equ	424	;# 
 17008   0001A9                     C1MASK3H        equ	425	;# 
 17009   0001AA                     C1MASK3U        equ	426	;# 
 17010   0001AB                     C1MASK3T        equ	427	;# 
 17011   0001AC                     C1FLTOBJ4       equ	428	;# 
 17012   0001AC                     C1FLTOBJ4L      equ	428	;# 
 17013   0001AD                     C1FLTOBJ4H      equ	429	;# 
 17014   0001AE                     C1FLTOBJ4U      equ	430	;# 
 17015   0001AF                     C1FLTOBJ4T      equ	431	;# 
 17016   0001B0                     C1MASK4         equ	432	;# 
 17017   0001B0                     C1MASK4L        equ	432	;# 
 17018   0001B1                     C1MASK4H        equ	433	;# 
 17019   0001B2                     C1MASK4U        equ	434	;# 
 17020   0001B3                     C1MASK4T        equ	435	;# 
 17021   0001B4                     C1FLTOBJ5       equ	436	;# 
 17022   0001B4                     C1FLTOBJ5L      equ	436	;# 
 17023   0001B5                     C1FLTOBJ5H      equ	437	;# 
 17024   0001B6                     C1FLTOBJ5U      equ	438	;# 
 17025   0001B7                     C1FLTOBJ5T      equ	439	;# 
 17026   0001B8                     C1MASK5         equ	440	;# 
 17027   0001B8                     C1MASK5L        equ	440	;# 
 17028   0001B9                     C1MASK5H        equ	441	;# 
 17029   0001BA                     C1MASK5U        equ	442	;# 
 17030   0001BB                     C1MASK5T        equ	443	;# 
 17031   0001BC                     C1FLTOBJ6       equ	444	;# 
 17032   0001BC                     C1FLTOBJ6L      equ	444	;# 
 17033   0001BD                     C1FLTOBJ6H      equ	445	;# 
 17034   0001BE                     C1FLTOBJ6U      equ	446	;# 
 17035   0001BF                     C1FLTOBJ6T      equ	447	;# 
 17036   0001C0                     C1MASK6         equ	448	;# 
 17037   0001C0                     C1MASK6L        equ	448	;# 
 17038   0001C1                     C1MASK6H        equ	449	;# 
 17039   0001C2                     C1MASK6U        equ	450	;# 
 17040   0001C3                     C1MASK6T        equ	451	;# 
 17041   0001C4                     C1FLTOBJ7       equ	452	;# 
 17042   0001C4                     C1FLTOBJ7L      equ	452	;# 
 17043   0001C5                     C1FLTOBJ7H      equ	453	;# 
 17044   0001C6                     C1FLTOBJ7U      equ	454	;# 
 17045   0001C7                     C1FLTOBJ7T      equ	455	;# 
 17046   0001C8                     C1MASK7         equ	456	;# 
 17047   0001C8                     C1MASK7L        equ	456	;# 
 17048   0001C9                     C1MASK7H        equ	457	;# 
 17049   0001CA                     C1MASK7U        equ	458	;# 
 17050   0001CB                     C1MASK7T        equ	459	;# 
 17051   0001CC                     C1FLTOBJ8       equ	460	;# 
 17052   0001CC                     C1FLTOBJ8L      equ	460	;# 
 17053   0001CD                     C1FLTOBJ8H      equ	461	;# 
 17054   0001CE                     C1FLTOBJ8U      equ	462	;# 
 17055   0001CF                     C1FLTOBJ8T      equ	463	;# 
 17056   0001D0                     C1MASK8         equ	464	;# 
 17057   0001D0                     C1MASK8L        equ	464	;# 
 17058   0001D1                     C1MASK8H        equ	465	;# 
 17059   0001D2                     C1MASK8U        equ	466	;# 
 17060   0001D3                     C1MASK8T        equ	467	;# 
 17061   0001D4                     C1FLTOBJ9       equ	468	;# 
 17062   0001D4                     C1FLTOBJ9L      equ	468	;# 
 17063   0001D5                     C1FLTOBJ9H      equ	469	;# 
 17064   0001D6                     C1FLTOBJ9U      equ	470	;# 
 17065   0001D7                     C1FLTOBJ9T      equ	471	;# 
 17066   0001D8                     C1MASK9         equ	472	;# 
 17067   0001D8                     C1MASK9L        equ	472	;# 
 17068   0001D9                     C1MASK9H        equ	473	;# 
 17069   0001DA                     C1MASK9U        equ	474	;# 
 17070   0001DB                     C1MASK9T        equ	475	;# 
 17071   0001DC                     C1FLTOBJ10      equ	476	;# 
 17072   0001DC                     C1FLTOBJ10L     equ	476	;# 
 17073   0001DD                     C1FLTOBJ10H     equ	477	;# 
 17074   0001DE                     C1FLTOBJ10U     equ	478	;# 
 17075   0001DF                     C1FLTOBJ10T     equ	479	;# 
 17076   0001E0                     C1MASK10        equ	480	;# 
 17077   0001E0                     C1MASK10L       equ	480	;# 
 17078   0001E1                     C1MASK10H       equ	481	;# 
 17079   0001E2                     C1MASK10U       equ	482	;# 
 17080   0001E3                     C1MASK10T       equ	483	;# 
 17081   0001E4                     C1FLTOBJ11      equ	484	;# 
 17082   0001E4                     C1FLTOBJ11L     equ	484	;# 
 17083   0001E5                     C1FLTOBJ11H     equ	485	;# 
 17084   0001E6                     C1FLTOBJ11U     equ	486	;# 
 17085   0001E7                     C1FLTOBJ11T     equ	487	;# 
 17086   0001E8                     C1MASK11        equ	488	;# 
 17087   0001E8                     C1MASK11L       equ	488	;# 
 17088   0001E9                     C1MASK11H       equ	489	;# 
 17089   0001EA                     C1MASK11U       equ	490	;# 
 17090   0001EB                     C1MASK11T       equ	491	;# 
 17091   000200                     PPSLOCK         equ	512	;# 
 17092   000201                     RA0PPS          equ	513	;# 
 17093   000202                     RA1PPS          equ	514	;# 
 17094   000203                     RA2PPS          equ	515	;# 
 17095   000204                     RA3PPS          equ	516	;# 
 17096   000205                     RA4PPS          equ	517	;# 
 17097   000206                     RA5PPS          equ	518	;# 
 17098   000207                     RA6PPS          equ	519	;# 
 17099   000208                     RA7PPS          equ	520	;# 
 17100   000209                     RB0PPS          equ	521	;# 
 17101   00020A                     RB1PPS          equ	522	;# 
 17102   00020B                     RB2PPS          equ	523	;# 
 17103   00020C                     RB3PPS          equ	524	;# 
 17104   00020D                     RB4PPS          equ	525	;# 
 17105   00020E                     RB5PPS          equ	526	;# 
 17106   00020F                     RB6PPS          equ	527	;# 
 17107   000210                     RB7PPS          equ	528	;# 
 17108   000211                     RC0PPS          equ	529	;# 
 17109   000212                     RC1PPS          equ	530	;# 
 17110   000213                     RC2PPS          equ	531	;# 
 17111   000214                     RC3PPS          equ	532	;# 
 17112   000215                     RC4PPS          equ	533	;# 
 17113   000216                     RC5PPS          equ	534	;# 
 17114   000217                     RC6PPS          equ	535	;# 
 17115   000218                     RC7PPS          equ	536	;# 
 17116   00023D                     CANRXPPS        equ	573	;# 
 17117   00023E                     INT0PPS         equ	574	;# 
 17118   00023F                     INT1PPS         equ	575	;# 
 17119   000240                     INT2PPS         equ	576	;# 
 17120   000241                     T0CKIPPS        equ	577	;# 
 17121   000242                     T1CKIPPS        equ	578	;# 
 17122   000243                     T1GPPS          equ	579	;# 
 17123   000244                     T3CKIPPS        equ	580	;# 
 17124   000245                     T3GPPS          equ	581	;# 
 17125   000246                     T5CKIPPS        equ	582	;# 
 17126   000247                     T5GPPS          equ	583	;# 
 17127   000248                     T2INPPS         equ	584	;# 
 17128   000249                     T4INPPS         equ	585	;# 
 17129   00024A                     T6INPPS         equ	586	;# 
 17130   00024B                     TUIN0PPS        equ	587	;# 
 17131   00024C                     TUIN1PPS        equ	588	;# 
 17132   00024F                     CCP1PPS         equ	591	;# 
 17133   000250                     CCP2PPS         equ	592	;# 
 17134   000251                     CCP3PPS         equ	593	;# 
 17135   000253                     PWM1ERSPPS      equ	595	;# 
 17136   000254                     PWM2ERSPPS      equ	596	;# 
 17137   000255                     PWM3ERSPPS      equ	597	;# 
 17138   000256                     PWM4ERSPPS      equ	598	;# 
 17139   000257                     PWMIN0PPS       equ	599	;# 
 17140   000258                     PWMIN1PPS       equ	600	;# 
 17141   000259                     SMT1WINPPS      equ	601	;# 
 17142   00025A                     SMT1SIGPPS      equ	602	;# 
 17143   00025B                     CWG1PPS         equ	603	;# 
 17144   00025B                     CWG1INPPS       equ	603	;# 
 17145   00025C                     CWG2PPS         equ	604	;# 
 17146   00025C                     CWG2INPPS       equ	604	;# 
 17147   00025D                     CWG3PPS         equ	605	;# 
 17148   00025D                     CWG3INPPS       equ	605	;# 
 17149   00025E                     MD1CARLPPS      equ	606	;# 
 17150   00025E                     MDCARLPPS       equ	606	;# 
 17151   00025F                     MD1CARHPPS      equ	607	;# 
 17152   00025F                     MDCARHPPS       equ	607	;# 
 17153   000260                     MD1SRCPPS       equ	608	;# 
 17154   000260                     MDSRCPPS        equ	608	;# 
 17155   000261                     CLCIN0PPS       equ	609	;# 
 17156   000262                     CLCIN1PPS       equ	610	;# 
 17157   000263                     CLCIN2PPS       equ	611	;# 
 17158   000264                     CLCIN3PPS       equ	612	;# 
 17159   000265                     CLCIN4PPS       equ	613	;# 
 17160   000266                     CLCIN5PPS       equ	614	;# 
 17161   000267                     CLCIN6PPS       equ	615	;# 
 17162   000268                     CLCIN7PPS       equ	616	;# 
 17163   000269                     ADACTPPS        equ	617	;# 
 17164   00026A                     SPI1SCKPPS      equ	618	;# 
 17165   00026B                     SPI1SDIPPS      equ	619	;# 
 17166   00026C                     SPI1SSPPS       equ	620	;# 
 17167   00026D                     SPI2SCKPPS      equ	621	;# 
 17168   00026E                     SPI2SDIPPS      equ	622	;# 
 17169   00026F                     SPI2SSPPS       equ	623	;# 
 17170   000270                     I2C1SDAPPS      equ	624	;# 
 17171   000271                     I2C1SCLPPS      equ	625	;# 
 17172   000272                     U1RXPPS         equ	626	;# 
 17173   000273                     U1CTSPPS        equ	627	;# 
 17174   000274                     U2RXPPS         equ	628	;# 
 17175   000275                     U2CTSPPS        equ	629	;# 
 17176   000276                     U3RXPPS         equ	630	;# 
 17177   000277                     U3CTSPPS        equ	631	;# 
 17178   000278                     U4RXPPS         equ	632	;# 
 17179   000279                     U4CTSPPS        equ	633	;# 
 17180   00027A                     U5RXPPS         equ	634	;# 
 17181   00027B                     U5CTSPPS        equ	635	;# 
 17182   000286                     RC4I2C          equ	646	;# 
 17183   000287                     RC3I2C          equ	647	;# 
 17184   000288                     RB2I2C          equ	648	;# 
 17185   000289                     RB1I2C          equ	649	;# 
 17186   00028A                     I2C1RXB         equ	650	;# 
 17187   00028B                     I2C1TXB         equ	651	;# 
 17188   00028C                     I2C1CNTL        equ	652	;# 
 17189   00028D                     I2C1CNTH        equ	653	;# 
 17190   00028E                     I2C1ADB0        equ	654	;# 
 17191   00028F                     I2C1ADB1        equ	655	;# 
 17192   000290                     I2C1ADR0        equ	656	;# 
 17193   000291                     I2C1ADR1        equ	657	;# 
 17194   000292                     I2C1ADR2        equ	658	;# 
 17195   000293                     I2C1ADR3        equ	659	;# 
 17196   000294                     I2C1CON0        equ	660	;# 
 17197   000295                     I2C1CON1        equ	661	;# 
 17198   000296                     I2C1CON2        equ	662	;# 
 17199   000297                     I2C1ERR         equ	663	;# 
 17200   000298                     I2C1STAT0       equ	664	;# 
 17201   000299                     I2C1STAT1       equ	665	;# 
 17202   00029A                     I2C1PIR         equ	666	;# 
 17203   00029B                     I2C1PIE         equ	667	;# 
 17204   00029C                     I2C1BTO         equ	668	;# 
 17205   00029D                     I2C1BAUD        equ	669	;# 
 17206   00029E                     I2C1CLK         equ	670	;# 
 17207   00029F                     I2C1BTOC        equ	671	;# 
 17208   0002A1                     U1RXB           equ	673	;# 
 17209   0002A1                     U1RXBL          equ	673	;# 
 17210   0002A2                     U1RXCHK         equ	674	;# 
 17211   0002A3                     U1TXB           equ	675	;# 
 17212   0002A3                     U1TXBL          equ	675	;# 
 17213   0002A4                     U1TXCHK         equ	676	;# 
 17214   0002A5                     U1P1            equ	677	;# 
 17215   0002A5                     U1P1L           equ	677	;# 
 17216   0002A6                     U1P1H           equ	678	;# 
 17217   0002A7                     U1P2            equ	679	;# 
 17218   0002A7                     U1P2L           equ	679	;# 
 17219   0002A8                     U1P2H           equ	680	;# 
 17220   0002A9                     U1P3            equ	681	;# 
 17221   0002A9                     U1P3L           equ	681	;# 
 17222   0002AA                     U1P3H           equ	682	;# 
 17223   0002AB                     U1CON0          equ	683	;# 
 17224   0002AC                     U1CON1          equ	684	;# 
 17225   0002AD                     U1CON2          equ	685	;# 
 17226   0002AE                     U1BRG           equ	686	;# 
 17227   0002AE                     U1BRGL          equ	686	;# 
 17228   0002AF                     U1BRGH          equ	687	;# 
 17229   0002B0                     U1FIFO          equ	688	;# 
 17230   0002B1                     U1UIR           equ	689	;# 
 17231   0002B2                     U1ERRIR         equ	690	;# 
 17232   0002B3                     U1ERRIE         equ	691	;# 
 17233   0002B4                     U2RXB           equ	692	;# 
 17234   0002B4                     U2RXBL          equ	692	;# 
 17235   0002B5                     U2RXCHK         equ	693	;# 
 17236   0002B6                     U2TXB           equ	694	;# 
 17237   0002B6                     U2TXBL          equ	694	;# 
 17238   0002B7                     U2TXCHK         equ	695	;# 
 17239   0002B8                     U2P1            equ	696	;# 
 17240   0002B8                     U2P1L           equ	696	;# 
 17241   0002B9                     U2P1H           equ	697	;# 
 17242   0002BA                     U2P2            equ	698	;# 
 17243   0002BA                     U2P2L           equ	698	;# 
 17244   0002BB                     U2P2H           equ	699	;# 
 17245   0002BC                     U2P3            equ	700	;# 
 17246   0002BC                     U2P3L           equ	700	;# 
 17247   0002BD                     U2P3H           equ	701	;# 
 17248   0002BE                     U2CON0          equ	702	;# 
 17249   0002BF                     U2CON1          equ	703	;# 
 17250   0002C0                     U2CON2          equ	704	;# 
 17251   0002C1                     U2BRG           equ	705	;# 
 17252   0002C1                     U2BRGL          equ	705	;# 
 17253   0002C2                     U2BRGH          equ	706	;# 
 17254   0002C3                     U2FIFO          equ	707	;# 
 17255   0002C4                     U2UIR           equ	708	;# 
 17256   0002C5                     U2ERRIR         equ	709	;# 
 17257   0002C6                     U2ERRIE         equ	710	;# 
 17258   0002C7                     U3RXB           equ	711	;# 
 17259   0002C7                     U3RXBL          equ	711	;# 
 17260   0002C9                     U3TXB           equ	713	;# 
 17261   0002C9                     U3TXBL          equ	713	;# 
 17262   0002CB                     U3P1            equ	715	;# 
 17263   0002CB                     U3P1L           equ	715	;# 
 17264   0002CD                     U3P2            equ	717	;# 
 17265   0002CD                     U3P2L           equ	717	;# 
 17266   0002CF                     U3P3            equ	719	;# 
 17267   0002CF                     U3P3L           equ	719	;# 
 17268   0002D1                     U3CON0          equ	721	;# 
 17269   0002D2                     U3CON1          equ	722	;# 
 17270   0002D3                     U3CON2          equ	723	;# 
 17271   0002D4                     U3BRG           equ	724	;# 
 17272   0002D4                     U3BRGL          equ	724	;# 
 17273   0002D5                     U3BRGH          equ	725	;# 
 17274   0002D6                     U3FIFO          equ	726	;# 
 17275   0002D7                     U3UIR           equ	727	;# 
 17276   0002D8                     U3ERRIR         equ	728	;# 
 17277   0002D9                     U3ERRIE         equ	729	;# 
 17278   0002DA                     U4RXB           equ	730	;# 
 17279   0002DA                     U4RXBL          equ	730	;# 
 17280   0002DC                     U4TXB           equ	732	;# 
 17281   0002DC                     U4TXBL          equ	732	;# 
 17282   0002DE                     U4P1            equ	734	;# 
 17283   0002DE                     U4P1L           equ	734	;# 
 17284   0002E0                     U4P2            equ	736	;# 
 17285   0002E0                     U4P2L           equ	736	;# 
 17286   0002E2                     U4P3            equ	738	;# 
 17287   0002E2                     U4P3L           equ	738	;# 
 17288   0002E4                     U4CON0          equ	740	;# 
 17289   0002E5                     U4CON1          equ	741	;# 
 17290   0002E6                     U4CON2          equ	742	;# 
 17291   0002E7                     U4BRG           equ	743	;# 
 17292   0002E7                     U4BRGL          equ	743	;# 
 17293   0002E8                     U4BRGH          equ	744	;# 
 17294   0002E9                     U4FIFO          equ	745	;# 
 17295   0002EA                     U4UIR           equ	746	;# 
 17296   0002EB                     U4ERRIR         equ	747	;# 
 17297   0002EC                     U4ERRIE         equ	748	;# 
 17298   0002ED                     U5RXB           equ	749	;# 
 17299   0002ED                     U5RXBL          equ	749	;# 
 17300   0002EF                     U5TXB           equ	751	;# 
 17301   0002EF                     U5TXBL          equ	751	;# 
 17302   0002F1                     U5P1            equ	753	;# 
 17303   0002F1                     U5P1L           equ	753	;# 
 17304   0002F3                     U5P2            equ	755	;# 
 17305   0002F3                     U5P2L           equ	755	;# 
 17306   0002F5                     U5P3            equ	757	;# 
 17307   0002F5                     U5P3L           equ	757	;# 
 17308   0002F7                     U5CON0          equ	759	;# 
 17309   0002F8                     U5CON1          equ	760	;# 
 17310   0002F9                     U5CON2          equ	761	;# 
 17311   0002FA                     U5BRG           equ	762	;# 
 17312   0002FA                     U5BRGL          equ	762	;# 
 17313   0002FB                     U5BRGH          equ	763	;# 
 17314   0002FC                     U5FIFO          equ	764	;# 
 17315   0002FD                     U5UIR           equ	765	;# 
 17316   0002FE                     U5ERRIR         equ	766	;# 
 17317   0002FF                     U5ERRIE         equ	767	;# 
 17318   000300                     SMT1TMR         equ	768	;# 
 17319   000300                     SMT1TMRL        equ	768	;# 
 17320   000301                     SMT1TMRH        equ	769	;# 
 17321   000302                     SMT1TMRU        equ	770	;# 
 17322   000303                     SMT1CPR         equ	771	;# 
 17323   000303                     SMT1CPRL        equ	771	;# 
 17324   000304                     SMT1CPRH        equ	772	;# 
 17325   000305                     SMT1CPRU        equ	773	;# 
 17326   000306                     SMT1CPW         equ	774	;# 
 17327   000306                     SMT1CPWL        equ	774	;# 
 17328   000307                     SMT1CPWH        equ	775	;# 
 17329   000308                     SMT1CPWU        equ	776	;# 
 17330   000309                     SMT1PR          equ	777	;# 
 17331   000309                     SMT1PRL         equ	777	;# 
 17332   00030A                     SMT1PRH         equ	778	;# 
 17333   00030B                     SMT1PRU         equ	779	;# 
 17334   00030C                     SMT1CON0        equ	780	;# 
 17335   00030D                     SMT1CON1        equ	781	;# 
 17336   00030E                     SMT1STAT        equ	782	;# 
 17337   00030F                     SMT1CLK         equ	783	;# 
 17338   000310                     SMT1SIG         equ	784	;# 
 17339   000311                     SMT1WIN         equ	785	;# 
 17340   000318                     TMR0L           equ	792	;# 
 17341   000318                     TMR0            equ	792	;# 
 17342   000319                     TMR0H           equ	793	;# 
 17343   000319                     PR0             equ	793	;# 
 17344   00031A                     T0CON0          equ	794	;# 
 17345   00031B                     T0CON1          equ	795	;# 
 17346   00031C                     TMR1            equ	796	;# 
 17347   00031C                     TMR1L           equ	796	;# 
 17348   00031D                     TMR1H           equ	797	;# 
 17349   00031E                     T1CON           equ	798	;# 
 17350   00031E                     TMR1CON         equ	798	;# 
 17351   00031F                     T1GCON          equ	799	;# 
 17352   00031F                     TMR1GCON        equ	799	;# 
 17353   000320                     T1GATE          equ	800	;# 
 17354   000320                     TMR1GATE        equ	800	;# 
 17355   000321                     T1CLK           equ	801	;# 
 17356   000321                     TMR1CLK         equ	801	;# 
 17357   000321                     PR1             equ	801	;# 
 17358   000322                     T2TMR           equ	802	;# 
 17359   000322                     TMR2            equ	802	;# 
 17360   000323                     T2PR            equ	803	;# 
 17361   000323                     PR2             equ	803	;# 
 17362   000324                     T2CON           equ	804	;# 
 17363   000325                     T2HLT           equ	805	;# 
 17364   000326                     T2CLKCON        equ	806	;# 
 17365   000326                     T2CLK           equ	806	;# 
 17366   000327                     T2RST           equ	807	;# 
 17367   000328                     TMR3            equ	808	;# 
 17368   000328                     TMR3L           equ	808	;# 
 17369   000329                     TMR3H           equ	809	;# 
 17370   00032A                     T3CON           equ	810	;# 
 17371   00032A                     TMR3CON         equ	810	;# 
 17372   00032B                     T3GCON          equ	811	;# 
 17373   00032B                     TMR3GCON        equ	811	;# 
 17374   00032C                     T3GATE          equ	812	;# 
 17375   00032C                     TMR3GATE        equ	812	;# 
 17376   00032D                     T3CLK           equ	813	;# 
 17377   00032D                     TMR3CLK         equ	813	;# 
 17378   00032D                     PR3             equ	813	;# 
 17379   00032E                     T4TMR           equ	814	;# 
 17380   00032E                     TMR4            equ	814	;# 
 17381   00032F                     T4PR            equ	815	;# 
 17382   00032F                     PR4             equ	815	;# 
 17383   000330                     T4CON           equ	816	;# 
 17384   000331                     T4HLT           equ	817	;# 
 17385   000332                     T4CLKCON        equ	818	;# 
 17386   000332                     T4CLK           equ	818	;# 
 17387   000333                     T4RST           equ	819	;# 
 17388   000334                     TMR5            equ	820	;# 
 17389   000334                     TMR5L           equ	820	;# 
 17390   000335                     TMR5H           equ	821	;# 
 17391   000336                     T5CON           equ	822	;# 
 17392   000336                     TMR5CON         equ	822	;# 
 17393   000337                     T5GCON          equ	823	;# 
 17394   000337                     TMR5GCON        equ	823	;# 
 17395   000338                     T5GATE          equ	824	;# 
 17396   000338                     TMR5GATE        equ	824	;# 
 17397   000339                     T5CLK           equ	825	;# 
 17398   000339                     TMR5CLK         equ	825	;# 
 17399   000339                     PR5             equ	825	;# 
 17400   00033A                     T6TMR           equ	826	;# 
 17401   00033A                     TMR6            equ	826	;# 
 17402   00033B                     T6PR            equ	827	;# 
 17403   00033B                     PR6             equ	827	;# 
 17404   00033C                     T6CON           equ	828	;# 
 17405   00033D                     T6HLT           equ	829	;# 
 17406   00033E                     T6CLKCON        equ	830	;# 
 17407   00033E                     T6CLK           equ	830	;# 
 17408   00033F                     T6RST           equ	831	;# 
 17409   000340                     CCPR1           equ	832	;# 
 17410   000340                     CCPR1L          equ	832	;# 
 17411   000341                     CCPR1H          equ	833	;# 
 17412   000342                     CCP1CON         equ	834	;# 
 17413   000343                     CCP1CAP         equ	835	;# 
 17414   000344                     CCPR2           equ	836	;# 
 17415   000344                     CCPR2L          equ	836	;# 
 17416   000345                     CCPR2H          equ	837	;# 
 17417   000346                     CCP2CON         equ	838	;# 
 17418   000347                     CCP2CAP         equ	839	;# 
 17419   000348                     CCPR3           equ	840	;# 
 17420   000348                     CCPR3L          equ	840	;# 
 17421   000349                     CCPR3H          equ	841	;# 
 17422   00034A                     CCP3CON         equ	842	;# 
 17423   00034B                     CCP3CAP         equ	843	;# 
 17424   00034C                     CCPTMRS0        equ	844	;# 
 17425   00034F                     CRCDATA         equ	847	;# 
 17426   00034F                     CRCDATAL        equ	847	;# 
 17427   000350                     CRCDATAH        equ	848	;# 
 17428   000351                     CRCDATAU        equ	849	;# 
 17429   000352                     CRCDATAT        equ	850	;# 
 17430   000353                     CRCOUT          equ	851	;# 
 17431   000353                     CRCSHFT         equ	851	;# 
 17432   000353                     CRCXOR          equ	851	;# 
 17433   000353                     CRCOUTL         equ	851	;# 
 17434   000353                     CRCSHFTL        equ	851	;# 
 17435   000353                     CRCSHIFTL       equ	851	;# 
 17436   000353                     CRCXORL         equ	851	;# 
 17437   000354                     CRCOUTH         equ	852	;# 
 17438   000354                     CRCSHFTH        equ	852	;# 
 17439   000354                     CRCSHIFTH       equ	852	;# 
 17440   000354                     CRCXORH         equ	852	;# 
 17441   000355                     CRCOUTU         equ	853	;# 
 17442   000355                     CRCSHFTU        equ	853	;# 
 17443   000355                     CRCSHIFTU       equ	853	;# 
 17444   000355                     CRCXORU         equ	853	;# 
 17445   000356                     CRCOUTT         equ	854	;# 
 17446   000356                     CRCSHFTT        equ	854	;# 
 17447   000356                     CRCSHIFTT       equ	854	;# 
 17448   000356                     CRCXORT         equ	854	;# 
 17449   000357                     CRCCON0         equ	855	;# 
 17450   000358                     CRCCON1         equ	856	;# 
 17451   000359                     CRCCON2         equ	857	;# 
 17452   00035A                     SCANLADR        equ	858	;# 
 17453   00035A                     SCANLADRL       equ	858	;# 
 17454   00035B                     SCANLADRH       equ	859	;# 
 17455   00035C                     SCANLADRU       equ	860	;# 
 17456   00035D                     SCANHADR        equ	861	;# 
 17457   00035D                     SCANHADRL       equ	861	;# 
 17458   00035E                     SCANHADRH       equ	862	;# 
 17459   00035F                     SCANHADRU       equ	863	;# 
 17460   000360                     SCANCON0        equ	864	;# 
 17461   000361                     SCANTRIG        equ	865	;# 
 17462   000362                     IPR0            equ	866	;# 
 17463   000363                     IPR1            equ	867	;# 
 17464   000364                     IPR2            equ	868	;# 
 17465   000365                     IPR3            equ	869	;# 
 17466   000366                     IPR4            equ	870	;# 
 17467   000367                     IPR5            equ	871	;# 
 17468   000368                     IPR6            equ	872	;# 
 17469   000369                     IPR7            equ	873	;# 
 17470   00036A                     IPR8            equ	874	;# 
 17471   00036B                     IPR9            equ	875	;# 
 17472   00036C                     IPR10           equ	876	;# 
 17473   00036D                     IPR11           equ	877	;# 
 17474   00036E                     IPR12           equ	878	;# 
 17475   00036F                     IPR13           equ	879	;# 
 17476   000370                     IPR14           equ	880	;# 
 17477   000371                     IPR15           equ	881	;# 
 17478   000373                     STATUS_CSHAD    equ	883	;# 
 17479   000374                     WREG_CSHAD      equ	884	;# 
 17480   000375                     BSR_CSHAD       equ	885	;# 
 17481   000376                     SHADCON         equ	886	;# 
 17482   000377                     STATUS_SHAD     equ	887	;# 
 17483   000378                     WREG_SHAD       equ	888	;# 
 17484   000379                     BSR_SHAD        equ	889	;# 
 17485   00037A                     PCLATH_SHAD     equ	890	;# 
 17486   00037B                     PCLATU_SHAD     equ	891	;# 
 17487   00037C                     FSR0SH          equ	892	;# 
 17488   00037C                     FSR0L_SHAD      equ	892	;# 
 17489   00037D                     FSR0H_SHAD      equ	893	;# 
 17490   00037E                     FSR1SH          equ	894	;# 
 17491   00037E                     FSR1L_SHAD      equ	894	;# 
 17492   00037F                     FSR1H_SHAD      equ	895	;# 
 17493   000380                     FSR2SH          equ	896	;# 
 17494   000380                     FSR2L_SHAD      equ	896	;# 
 17495   000381                     FSR2H_SHAD      equ	897	;# 
 17496   000382                     PRODSH          equ	898	;# 
 17497   000382                     PRODL_SHAD      equ	898	;# 
 17498   000383                     PRODH_SHAD      equ	899	;# 
 17499   000387                     TU16ACON0       equ	903	;# 
 17500   000388                     TU16ACON1       equ	904	;# 
 17501   000389                     TU16AHLT        equ	905	;# 
 17502   00038A                     TU16APS         equ	906	;# 
 17503   00038B                     TU16ATMR        equ	907	;# 
 17504   00038B                     TU16ACR         equ	907	;# 
 17505   00038B                     TU16ATMRL       equ	907	;# 
 17506   00038B                     TU16ACRL        equ	907	;# 
 17507   00038C                     TU16ATMRH       equ	908	;# 
 17508   00038C                     TU16ACRH        equ	908	;# 
 17509   00038D                     TU16APR         equ	909	;# 
 17510   00038D                     TU16APRL        equ	909	;# 
 17511   00038E                     TU16APRH        equ	910	;# 
 17512   00038F                     TU16ACLK        equ	911	;# 
 17513   000390                     TU16AERS        equ	912	;# 
 17514   000393                     TU16BCON0       equ	915	;# 
 17515   000394                     TU16BCON1       equ	916	;# 
 17516   000395                     TU16BHLT        equ	917	;# 
 17517   000396                     TU16BPS         equ	918	;# 
 17518   000397                     TU16BTMR        equ	919	;# 
 17519   000397                     TU16BCR         equ	919	;# 
 17520   000397                     TU16BTMRL       equ	919	;# 
 17521   000397                     TU16BCRL        equ	919	;# 
 17522   000398                     TU16BTMRH       equ	920	;# 
 17523   000398                     TU16BCRH        equ	920	;# 
 17524   000399                     TU16BPR         equ	921	;# 
 17525   000399                     TU16BPRL        equ	921	;# 
 17526   00039A                     TU16BPRH        equ	922	;# 
 17527   00039B                     TU16BCLK        equ	923	;# 
 17528   00039C                     TU16BERS        equ	924	;# 
 17529   0003BB                     TUCHAIN         equ	955	;# 
 17530   0003BC                     CWG1CLK         equ	956	;# 
 17531   0003BC                     CWG1CLKCON      equ	956	;# 
 17532   0003BD                     CWG1ISM         equ	957	;# 
 17533   0003BE                     CWG1DBR         equ	958	;# 
 17534   0003BF                     CWG1DBF         equ	959	;# 
 17535   0003C0                     CWG1CON0        equ	960	;# 
 17536   0003C1                     CWG1CON1        equ	961	;# 
 17537   0003C2                     CWG1AS0         equ	962	;# 
 17538   0003C3                     CWG1AS1         equ	963	;# 
 17539   0003C4                     CWG1STR         equ	964	;# 
 17540   0003C5                     CWG2CLK         equ	965	;# 
 17541   0003C5                     CWG2CLKCON      equ	965	;# 
 17542   0003C6                     CWG2ISM         equ	966	;# 
 17543   0003C7                     CWG2DBR         equ	967	;# 
 17544   0003C8                     CWG2DBF         equ	968	;# 
 17545   0003C9                     CWG2CON0        equ	969	;# 
 17546   0003CA                     CWG2CON1        equ	970	;# 
 17547   0003CB                     CWG2AS0         equ	971	;# 
 17548   0003CC                     CWG2AS1         equ	972	;# 
 17549   0003CD                     CWG2STR         equ	973	;# 
 17550   0003CE                     CWG3CLK         equ	974	;# 
 17551   0003CE                     CWG3CLKCON      equ	974	;# 
 17552   0003CF                     CWG3ISM         equ	975	;# 
 17553   0003D0                     CWG3DBR         equ	976	;# 
 17554   0003D1                     CWG3DBF         equ	977	;# 
 17555   0003D2                     CWG3CON0        equ	978	;# 
 17556   0003D3                     CWG3CON1        equ	979	;# 
 17557   0003D4                     CWG3AS0         equ	980	;# 
 17558   0003D5                     CWG3AS1         equ	981	;# 
 17559   0003D6                     CWG3STR         equ	982	;# 
 17560   0003D7                     FVRCON          equ	983	;# 
 17561   0003D8                     ADCPCON         equ	984	;# 
 17562   0003D8                     ADCP            equ	984	;# 
 17563   0003D9                     ADLTH           equ	985	;# 
 17564   0003D9                     ADLTHL          equ	985	;# 
 17565   0003DA                     ADLTHH          equ	986	;# 
 17566   0003DB                     ADUTH           equ	987	;# 
 17567   0003DB                     ADUTHL          equ	987	;# 
 17568   0003DC                     ADUTHH          equ	988	;# 
 17569   0003DD                     ADERR           equ	989	;# 
 17570   0003DD                     ADERRL          equ	989	;# 
 17571   0003DE                     ADERRH          equ	990	;# 
 17572   0003DF                     ADSTPT          equ	991	;# 
 17573   0003DF                     ADSTPTL         equ	991	;# 
 17574   0003E0                     ADSTPTH         equ	992	;# 
 17575   0003E1                     ADFLTR          equ	993	;# 
 17576   0003E1                     ADFLTRL         equ	993	;# 
 17577   0003E2                     ADFLTRH         equ	994	;# 
 17578   0003E3                     ADACC           equ	995	;# 
 17579   0003E3                     ADACCL          equ	995	;# 
 17580   0003E4                     ADACCH          equ	996	;# 
 17581   0003E5                     ADACCU          equ	997	;# 
 17582   0003E6                     ADCNT           equ	998	;# 
 17583   0003E7                     ADRPT           equ	999	;# 
 17584   0003E8                     ADPREV          equ	1000	;# 
 17585   0003E8                     ADPREVL         equ	1000	;# 
 17586   0003E9                     ADPREVH         equ	1001	;# 
 17587   0003EA                     ADRES           equ	1002	;# 
 17588   0003EA                     ADRESL          equ	1002	;# 
 17589   0003EB                     ADRESH          equ	1003	;# 
 17590   0003EC                     ADPCH           equ	1004	;# 
 17591   0003EE                     ADACQ           equ	1006	;# 
 17592   0003EE                     ADACQL          equ	1006	;# 
 17593   0003EF                     ADACQH          equ	1007	;# 
 17594   0003F0                     ADCAP           equ	1008	;# 
 17595   0003F1                     ADPRE           equ	1009	;# 
 17596   0003F1                     ADPREL          equ	1009	;# 
 17597   0003F2                     ADPREH          equ	1010	;# 
 17598   0003F3                     ADCON0          equ	1011	;# 
 17599   0003F4                     ADCON1          equ	1012	;# 
 17600   0003F5                     ADCON2          equ	1013	;# 
 17601   0003F6                     ADCON3          equ	1014	;# 
 17602   0003F7                     ADSTAT          equ	1015	;# 
 17603   0003F8                     ADREF           equ	1016	;# 
 17604   0003F9                     ADACT           equ	1017	;# 
 17605   0003FA                     ADCLK           equ	1018	;# 
 17606   0003FB                     ADCTX           equ	1019	;# 
 17607   0003FC                     ADCSEL1         equ	1020	;# 
 17608   0003FD                     ADCSEL2         equ	1021	;# 
 17609   0003FE                     ADCSEL3         equ	1022	;# 
 17610   0003FF                     ADCSEL4         equ	1023	;# 
 17611   000400                     ANSELA          equ	1024	;# 
 17612   000401                     WPUA            equ	1025	;# 
 17613   000402                     ODCONA          equ	1026	;# 
 17614   000403                     SLRCONA         equ	1027	;# 
 17615   000404                     INLVLA          equ	1028	;# 
 17616   000405                     IOCAP           equ	1029	;# 
 17617   000406                     IOCAN           equ	1030	;# 
 17618   000407                     IOCAF           equ	1031	;# 
 17619   000408                     ANSELB          equ	1032	;# 
 17620   000409                     WPUB            equ	1033	;# 
 17621   00040A                     ODCONB          equ	1034	;# 
 17622   00040B                     SLRCONB         equ	1035	;# 
 17623   00040C                     INLVLB          equ	1036	;# 
 17624   00040D                     IOCBP           equ	1037	;# 
 17625   00040E                     IOCBN           equ	1038	;# 
 17626   00040F                     IOCBF           equ	1039	;# 
 17627   000410                     ANSELC          equ	1040	;# 
 17628   000411                     WPUC            equ	1041	;# 
 17629   000412                     ODCONC          equ	1042	;# 
 17630   000413                     SLRCONC         equ	1043	;# 
 17631   000414                     INLVLC          equ	1044	;# 
 17632   000415                     IOCCP           equ	1045	;# 
 17633   000416                     IOCCN           equ	1046	;# 
 17634   000417                     IOCCF           equ	1047	;# 
 17635   000421                     WPUE            equ	1057	;# 
 17636   000424                     INLVLE          equ	1060	;# 
 17637   000425                     IOCEP           equ	1061	;# 
 17638   000426                     IOCEN           equ	1062	;# 
 17639   000427                     IOCEF           equ	1063	;# 
 17640   000440                     NCO1ACC         equ	1088	;# 
 17641   000440                     NCO1ACCL        equ	1088	;# 
 17642   000441                     NCO1ACCH        equ	1089	;# 
 17643   000442                     NCO1ACCU        equ	1090	;# 
 17644   000443                     NCO1INC         equ	1091	;# 
 17645   000443                     NCO1INCL        equ	1091	;# 
 17646   000444                     NCO1INCH        equ	1092	;# 
 17647   000445                     NCO1INCU        equ	1093	;# 
 17648   000446                     NCO1CON         equ	1094	;# 
 17649   000447                     NCO1CLK         equ	1095	;# 
 17650   000448                     NCO2ACC         equ	1096	;# 
 17651   000448                     NCO2ACCL        equ	1096	;# 
 17652   000449                     NCO2ACCH        equ	1097	;# 
 17653   00044A                     NCO2ACCU        equ	1098	;# 
 17654   00044B                     NCO2INC         equ	1099	;# 
 17655   00044B                     NCO2INCL        equ	1099	;# 
 17656   00044C                     NCO2INCH        equ	1100	;# 
 17657   00044D                     NCO2INCU        equ	1101	;# 
 17658   00044E                     NCO2CON         equ	1102	;# 
 17659   00044F                     NCO2CLK         equ	1103	;# 
 17660   000450                     NCO3ACC         equ	1104	;# 
 17661   000450                     NCO3ACCL        equ	1104	;# 
 17662   000451                     NCO3ACCH        equ	1105	;# 
 17663   000452                     NCO3ACCU        equ	1106	;# 
 17664   000453                     NCO3INC         equ	1107	;# 
 17665   000453                     NCO3INCL        equ	1107	;# 
 17666   000454                     NCO3INCH        equ	1108	;# 
 17667   000455                     NCO3INCU        equ	1109	;# 
 17668   000456                     NCO3CON         equ	1110	;# 
 17669   000457                     NCO3CLK         equ	1111	;# 
 17670   000458                     FSCMCON         equ	1112	;# 
 17671   000459                     IVTLOCK         equ	1113	;# 
 17672   00045A                     IVTAD           equ	1114	;# 
 17673   00045A                     IVTADL          equ	1114	;# 
 17674   00045B                     IVTADH          equ	1115	;# 
 17675   00045C                     IVTADU          equ	1116	;# 
 17676   00045D                     IVTBASE         equ	1117	;# 
 17677   00045D                     IVTBASEL        equ	1117	;# 
 17678   00045E                     IVTBASEH        equ	1118	;# 
 17679   00045F                     IVTBASEU        equ	1119	;# 
 17680   000460                     PWM1ERS         equ	1120	;# 
 17681   000461                     PWM1CLK         equ	1121	;# 
 17682   000462                     PWM1LDS         equ	1122	;# 
 17683   000463                     PWM1PR          equ	1123	;# 
 17684   000463                     PWM1PRL         equ	1123	;# 
 17685   000464                     PWM1PRH         equ	1124	;# 
 17686   000465                     PWM1CPRE        equ	1125	;# 
 17687   000466                     PWM1PIPOS       equ	1126	;# 
 17688   000467                     PWM1GIR         equ	1127	;# 
 17689   000468                     PWM1GIE         equ	1128	;# 
 17690   000469                     PWM1CON         equ	1129	;# 
 17691   00046A                     PWM1S1CFG       equ	1130	;# 
 17692   00046B                     PWM1S1P1        equ	1131	;# 
 17693   00046B                     PWM1S1P1L       equ	1131	;# 
 17694   00046C                     PWM1S1P1H       equ	1132	;# 
 17695   00046D                     PWM1S1P2        equ	1133	;# 
 17696   00046D                     PWM1S1P2L       equ	1133	;# 
 17697   00046E                     PWM1S1P2H       equ	1134	;# 
 17698   00046F                     PWM2ERS         equ	1135	;# 
 17699   000470                     PWM2CLK         equ	1136	;# 
 17700   000471                     PWM2LDS         equ	1137	;# 
 17701   000472                     PWM2PR          equ	1138	;# 
 17702   000472                     PWM2PRL         equ	1138	;# 
 17703   000473                     PWM2PRH         equ	1139	;# 
 17704   000474                     PWM2CPRE        equ	1140	;# 
 17705   000475                     PWM2PIPOS       equ	1141	;# 
 17706   000476                     PWM2GIR         equ	1142	;# 
 17707   000477                     PWM2GIE         equ	1143	;# 
 17708   000478                     PWM2CON         equ	1144	;# 
 17709   000479                     PWM2S1CFG       equ	1145	;# 
 17710   00047A                     PWM2S1P1        equ	1146	;# 
 17711   00047A                     PWM2S1P1L       equ	1146	;# 
 17712   00047B                     PWM2S1P1H       equ	1147	;# 
 17713   00047C                     PWM2S1P2        equ	1148	;# 
 17714   00047C                     PWM2S1P2L       equ	1148	;# 
 17715   00047D                     PWM2S1P2H       equ	1149	;# 
 17716   00047E                     PWM3ERS         equ	1150	;# 
 17717   00047F                     PWM3CLK         equ	1151	;# 
 17718   000480                     PWM3LDS         equ	1152	;# 
 17719   000481                     PWM3PR          equ	1153	;# 
 17720   000481                     PWM3PRL         equ	1153	;# 
 17721   000482                     PWM3PRH         equ	1154	;# 
 17722   000483                     PWM3CPRE        equ	1155	;# 
 17723   000484                     PWM3PIPOS       equ	1156	;# 
 17724   000485                     PWM3GIR         equ	1157	;# 
 17725   000486                     PWM3GIE         equ	1158	;# 
 17726   000487                     PWM3CON         equ	1159	;# 
 17727   000488                     PWM3S1CFG       equ	1160	;# 
 17728   000489                     PWM3S1P1        equ	1161	;# 
 17729   000489                     PWM3S1P1L       equ	1161	;# 
 17730   00048A                     PWM3S1P1H       equ	1162	;# 
 17731   00048B                     PWM3S1P2        equ	1163	;# 
 17732   00048B                     PWM3S1P2L       equ	1163	;# 
 17733   00048C                     PWM3S1P2H       equ	1164	;# 
 17734   00048D                     PWM4ERS         equ	1165	;# 
 17735   00048E                     PWM4CLK         equ	1166	;# 
 17736   00048F                     PWM4LDS         equ	1167	;# 
 17737   000490                     PWM4PR          equ	1168	;# 
 17738   000490                     PWM4PRL         equ	1168	;# 
 17739   000491                     PWM4PRH         equ	1169	;# 
 17740   000492                     PWM4CPRE        equ	1170	;# 
 17741   000493                     PWM4PIPOS       equ	1171	;# 
 17742   000494                     PWM4GIR         equ	1172	;# 
 17743   000495                     PWM4GIE         equ	1173	;# 
 17744   000496                     PWM4CON         equ	1174	;# 
 17745   000497                     PWM4S1CFG       equ	1175	;# 
 17746   000498                     PWM4S1P1        equ	1176	;# 
 17747   000498                     PWM4S1P1L       equ	1176	;# 
 17748   000499                     PWM4S1P1H       equ	1177	;# 
 17749   00049A                     PWM4S1P2        equ	1178	;# 
 17750   00049A                     PWM4S1P2L       equ	1178	;# 
 17751   00049B                     PWM4S1P2H       equ	1179	;# 
 17752   00049C                     PWMLOAD         equ	1180	;# 
 17753   00049D                     PWMEN           equ	1181	;# 
 17754   00049E                     PIE0            equ	1182	;# 
 17755   00049F                     PIE1            equ	1183	;# 
 17756   0004A0                     PIE2            equ	1184	;# 
 17757   0004A1                     PIE3            equ	1185	;# 
 17758   0004A2                     PIE4            equ	1186	;# 
 17759   0004A3                     PIE5            equ	1187	;# 
 17760   0004A4                     PIE6            equ	1188	;# 
 17761   0004A5                     PIE7            equ	1189	;# 
 17762   0004A6                     PIE8            equ	1190	;# 
 17763   0004A7                     PIE9            equ	1191	;# 
 17764   0004A8                     PIE10           equ	1192	;# 
 17765   0004A9                     PIE11           equ	1193	;# 
 17766   0004AA                     PIE12           equ	1194	;# 
 17767   0004AB                     PIE13           equ	1195	;# 
 17768   0004AC                     PIE14           equ	1196	;# 
 17769   0004AD                     PIE15           equ	1197	;# 
 17770   0004AE                     PIR0            equ	1198	;# 
 17771   0004AF                     PIR1            equ	1199	;# 
 17772   0004B0                     PIR2            equ	1200	;# 
 17773   0004B1                     PIR3            equ	1201	;# 
 17774   0004B2                     PIR4            equ	1202	;# 
 17775   0004B3                     PIR5            equ	1203	;# 
 17776   0004B4                     PIR6            equ	1204	;# 
 17777   0004B5                     PIR7            equ	1205	;# 
 17778   0004B6                     PIR8            equ	1206	;# 
 17779   0004B7                     PIR9            equ	1207	;# 
 17780   0004B8                     PIR10           equ	1208	;# 
 17781   0004B9                     PIR11           equ	1209	;# 
 17782   0004BA                     PIR12           equ	1210	;# 
 17783   0004BB                     PIR13           equ	1211	;# 
 17784   0004BC                     PIR14           equ	1212	;# 
 17785   0004BD                     PIR15           equ	1213	;# 
 17786   0004BE                     LATA            equ	1214	;# 
 17787   0004BF                     LATB            equ	1215	;# 
 17788   0004C0                     LATC            equ	1216	;# 
 17789   0004C6                     TRISA           equ	1222	;# 
 17790   0004C7                     TRISB           equ	1223	;# 
 17791   0004C8                     TRISC           equ	1224	;# 
 17792   0004CA                     TRISE           equ	1226	;# 
 17793   0004CE                     PORTA           equ	1230	;# 
 17794   0004CF                     PORTB           equ	1231	;# 
 17795   0004D0                     PORTC           equ	1232	;# 
 17796   0004D2                     PORTE           equ	1234	;# 
 17797   0004D6                     INTCON0         equ	1238	;# 
 17798   0004D7                     INTCON1         equ	1239	;# 
 17799   0004D8                     STATUS          equ	1240	;# 
 17800   0004D9                     FSR2            equ	1241	;# 
 17801   0004D9                     FSR2L           equ	1241	;# 
 17802   0004DA                     FSR2H           equ	1242	;# 
 17803   0004DB                     PLUSW2          equ	1243	;# 
 17804   0004DC                     PREINC2         equ	1244	;# 
 17805   0004DD                     POSTDEC2        equ	1245	;# 
 17806   0004DE                     POSTINC2        equ	1246	;# 
 17807   0004DF                     INDF2           equ	1247	;# 
 17808   0004E0                     BSR             equ	1248	;# 
 17809   0004E1                     FSR1            equ	1249	;# 
 17810   0004E1                     FSR1L           equ	1249	;# 
 17811   0004E2                     FSR1H           equ	1250	;# 
 17812   0004E3                     PLUSW1          equ	1251	;# 
 17813   0004E4                     PREINC1         equ	1252	;# 
 17814   0004E5                     POSTDEC1        equ	1253	;# 
 17815   0004E6                     POSTINC1        equ	1254	;# 
 17816   0004E7                     INDF1           equ	1255	;# 
 17817   0004E8                     WREG            equ	1256	;# 
 17818   0004E9                     FSR0            equ	1257	;# 
 17819   0004E9                     FSR0L           equ	1257	;# 
 17820   0004EA                     FSR0H           equ	1258	;# 
 17821   0004EB                     PLUSW0          equ	1259	;# 
 17822   0004EC                     PREINC0         equ	1260	;# 
 17823   0004ED                     POSTDEC0        equ	1261	;# 
 17824   0004EE                     POSTINC0        equ	1262	;# 
 17825   0004EF                     INDF0           equ	1263	;# 
 17826   0004F0                     PCON0           equ	1264	;# 
 17827   0004F1                     PCON1           equ	1265	;# 
 17828   0004F2                     CPUDOZE         equ	1266	;# 
 17829   0004F3                     PROD            equ	1267	;# 
 17830   0004F3                     PRODL           equ	1267	;# 
 17831   0004F4                     PRODH           equ	1268	;# 
 17832   0004F5                     TABLAT          equ	1269	;# 
 17833   0004F6                     TBLPTR          equ	1270	;# 
 17834   0004F6                     TBLPTRL         equ	1270	;# 
 17835   0004F7                     TBLPTRH         equ	1271	;# 
 17836   0004F8                     TBLPTRU         equ	1272	;# 
 17837   0004F9                     PCLAT           equ	1273	;# 
 17838   0004F9                     PCL             equ	1273	;# 
 17839   0004FA                     PCLATH          equ	1274	;# 
 17840   0004FB                     PCLATU          equ	1275	;# 
 17841   0004FC                     STKPTR          equ	1276	;# 
 17842   0004FD                     TOS             equ	1277	;# 
 17843   0004FD                     TOSL            equ	1277	;# 
 17844   0004FE                     TOSH            equ	1278	;# 
 17845   0004FF                     TOSU            equ	1279	;# 
 17846   000038                     BOOTREG         equ	56	;# 
 17847   000039                     CLKRCON         equ	57	;# 
 17848   00003A                     CLKRCLK         equ	58	;# 
 17849   000040                     NVMCON0         equ	64	;# 
 17850   000041                     NVMCON1         equ	65	;# 
 17851   000042                     NVMLOCK         equ	66	;# 
 17852   000043                     NVMADR          equ	67	;# 
 17853   000043                     NVMADRL         equ	67	;# 
 17854   000044                     NVMADRH         equ	68	;# 
 17855   000045                     NVMADRU         equ	69	;# 
 17856   000046                     NVMDAT          equ	70	;# 
 17857   000046                     NVMDATL         equ	70	;# 
 17858   000047                     NVMDATH         equ	71	;# 
 17859   000048                     VREGCON         equ	72	;# 
 17860   000049                     BORCON          equ	73	;# 
 17861   00004A                     HLVDCON0        equ	74	;# 
 17862   00004B                     HLVDCON1        equ	75	;# 
 17863   00004C                     ZCDCON          equ	76	;# 
 17864   000060                     PMD0            equ	96	;# 
 17865   000061                     PMD1            equ	97	;# 
 17866   000062                     PMD2            equ	98	;# 
 17867   000063                     PMD3            equ	99	;# 
 17868   000064                     PMD4            equ	100	;# 
 17869   000065                     PMD5            equ	101	;# 
 17870   000066                     PMD6            equ	102	;# 
 17871   000067                     PMD7            equ	103	;# 
 17872   000068                     PMD8            equ	104	;# 
 17873   00006A                     MD1CON0         equ	106	;# 
 17874   00006B                     MD1CON1         equ	107	;# 
 17875   00006C                     MD1SRC          equ	108	;# 
 17876   00006D                     MD1CARL         equ	109	;# 
 17877   00006E                     MD1CARH         equ	110	;# 
 17878   00006F                     CMOUT           equ	111	;# 
 17879   000070                     CM1CON0         equ	112	;# 
 17880   000071                     CM1CON1         equ	113	;# 
 17881   000072                     CM1NCH          equ	114	;# 
 17882   000073                     CM1PCH          equ	115	;# 
 17883   000074                     CM2CON0         equ	116	;# 
 17884   000075                     CM2CON1         equ	117	;# 
 17885   000076                     CM2NCH          equ	118	;# 
 17886   000077                     CM2PCH          equ	119	;# 
 17887   000078                     WDTCON0         equ	120	;# 
 17888   000079                     WDTCON1         equ	121	;# 
 17889   00007A                     WDTPSL          equ	122	;# 
 17890   00007B                     WDTPSH          equ	123	;# 
 17891   00007C                     WDTTMR          equ	124	;# 
 17892   00007D                     DAC1DAT         equ	125	;# 
 17893   00007D                     DAC1DATL        equ	125	;# 
 17894   00007F                     DAC1CON         equ	127	;# 
 17895   000080                     SPI1RXB         equ	128	;# 
 17896   000081                     SPI1TXB         equ	129	;# 
 17897   000082                     SPI1TCNT        equ	130	;# 
 17898   000082                     SPI1TCNTL       equ	130	;# 
 17899   000083                     SPI1TCNTH       equ	131	;# 
 17900   000084                     SPI1CON0        equ	132	;# 
 17901   000085                     SPI1CON1        equ	133	;# 
 17902   000086                     SPI1CON2        equ	134	;# 
 17903   000087                     SPI1STATUS      equ	135	;# 
 17904   000088                     SPI1TWIDTH      equ	136	;# 
 17905   000089                     SPI1BAUD        equ	137	;# 
 17906   00008A                     SPI1INTF        equ	138	;# 
 17907   00008B                     SPI1INTE        equ	139	;# 
 17908   00008C                     SPI1CLK         equ	140	;# 
 17909   00008D                     SPI2RXB         equ	141	;# 
 17910   00008E                     SPI2TXB         equ	142	;# 
 17911   00008F                     SPI2TCNT        equ	143	;# 
 17912   00008F                     SPI2TCNTL       equ	143	;# 
 17913   000090                     SPI2TCNTH       equ	144	;# 
 17914   000091                     SPI2CON0        equ	145	;# 
 17915   000092                     SPI2CON1        equ	146	;# 
 17916   000093                     SPI2CON2        equ	147	;# 
 17917   000094                     SPI2STATUS      equ	148	;# 
 17918   000095                     SPI2TWIDTH      equ	149	;# 
 17919   000096                     SPI2BAUD        equ	150	;# 
 17920   000097                     SPI2INTF        equ	151	;# 
 17921   000098                     SPI2INTE        equ	152	;# 
 17922   000099                     SPI2CLK         equ	153	;# 
 17923   0000AC                     ACTCON          equ	172	;# 
 17924   0000AD                     OSCCON1         equ	173	;# 
 17925   0000AE                     OSCCON2         equ	174	;# 
 17926   0000AF                     OSCCON3         equ	175	;# 
 17927   0000B0                     OSCTUNE         equ	176	;# 
 17928   0000B1                     OSCFRQ          equ	177	;# 
 17929   0000B1                     OSCFREQ         equ	177	;# 
 17930   0000B2                     OSCSTAT         equ	178	;# 
 17931   0000B2                     OSCSTAT1        equ	178	;# 
 17932   0000B3                     OSCEN           equ	179	;# 
 17933   0000B4                     PRLOCK          equ	180	;# 
 17934   0000B5                     SCANPR          equ	181	;# 
 17935   0000B6                     DMA1PR          equ	182	;# 
 17936   0000B7                     DMA2PR          equ	183	;# 
 17937   0000B8                     DMA3PR          equ	184	;# 
 17938   0000B9                     DMA4PR          equ	185	;# 
 17939   0000BA                     DMA5PR          equ	186	;# 
 17940   0000BB                     DMA6PR          equ	187	;# 
 17941   0000BC                     DMA7PR          equ	188	;# 
 17942   0000BD                     DMA8PR          equ	189	;# 
 17943   0000BE                     MAINPR          equ	190	;# 
 17944   0000BF                     ISRPR           equ	191	;# 
 17945   0000D4                     CLCDATA         equ	212	;# 
 17946   0000D5                     CLCSELECT       equ	213	;# 
 17947   0000D6                     CLCnCON         equ	214	;# 
 17948   0000D7                     CLCnPOL         equ	215	;# 
 17949   0000D8                     CLCnSEL0        equ	216	;# 
 17950   0000D9                     CLCnSEL1        equ	217	;# 
 17951   0000DA                     CLCnSEL2        equ	218	;# 
 17952   0000DB                     CLCnSEL3        equ	219	;# 
 17953   0000DC                     CLCnGLS0        equ	220	;# 
 17954   0000DD                     CLCnGLS1        equ	221	;# 
 17955   0000DE                     CLCnGLS2        equ	222	;# 
 17956   0000DF                     CLCnGLS3        equ	223	;# 
 17957   0000E8                     DMASELECT       equ	232	;# 
 17958   0000E9                     DMAnBUF         equ	233	;# 
 17959   0000EA                     DMAnDCNT        equ	234	;# 
 17960   0000EA                     DMAnDCNTL       equ	234	;# 
 17961   0000EB                     DMAnDCNTH       equ	235	;# 
 17962   0000EC                     DMAnDPTR        equ	236	;# 
 17963   0000EC                     DMAnDPTRL       equ	236	;# 
 17964   0000ED                     DMAnDPTRH       equ	237	;# 
 17965   0000EE                     DMAnDSZ         equ	238	;# 
 17966   0000EE                     DMAnDSZL        equ	238	;# 
 17967   0000EF                     DMAnDSZH        equ	239	;# 
 17968   0000F0                     DMAnDSA         equ	240	;# 
 17969   0000F0                     DMAnDSAL        equ	240	;# 
 17970   0000F1                     DMAnDSAH        equ	241	;# 
 17971   0000F2                     DMAnSCNT        equ	242	;# 
 17972   0000F2                     DMAnSCNTL       equ	242	;# 
 17973   0000F3                     DMAnSCNTH       equ	243	;# 
 17974   0000F4                     DMAnSPTR        equ	244	;# 
 17975   0000F4                     DMAnSPTRL       equ	244	;# 
 17976   0000F5                     DMAnSPTRH       equ	245	;# 
 17977   0000F6                     DMAnSPTRU       equ	246	;# 
 17978   0000F7                     DMAnSSZ         equ	247	;# 
 17979   0000F7                     DMAnSSZL        equ	247	;# 
 17980   0000F8                     DMAnSSZH        equ	248	;# 
 17981   0000F9                     DMAnSSA         equ	249	;# 
 17982   0000F9                     DMAnSSAL        equ	249	;# 
 17983   0000FA                     DMAnSSAH        equ	250	;# 
 17984   0000FB                     DMAnSSAU        equ	251	;# 
 17985   0000FC                     DMAnCON0        equ	252	;# 
 17986   0000FD                     DMAnCON1        equ	253	;# 
 17987   0000FE                     DMAnAIRQ        equ	254	;# 
 17988   0000FF                     DMAnSIRQ        equ	255	;# 
 17989   000100                     C1CONL          equ	256	;# 
 17990   000101                     C1CONH          equ	257	;# 
 17991   000102                     C1CONU          equ	258	;# 
 17992   000103                     C1CONT          equ	259	;# 
 17993   000104                     C1NBTCFGL       equ	260	;# 
 17994   000105                     C1NBTCFGH       equ	261	;# 
 17995   000106                     C1NBTCFGU       equ	262	;# 
 17996   000107                     C1NBTCFGT       equ	263	;# 
 17997   000108                     C1DBTCFGL       equ	264	;# 
 17998   000109                     C1DBTCFGH       equ	265	;# 
 17999   00010A                     C1DBTCFGU       equ	266	;# 
 18000   00010B                     C1DBTCFGT       equ	267	;# 
 18001   00010C                     C1TDCL          equ	268	;# 
 18002   00010D                     C1TDCH          equ	269	;# 
 18003   00010E                     C1TDCU          equ	270	;# 
 18004   000110                     C1TBC           equ	272	;# 
 18005   000110                     C1TBCL          equ	272	;# 
 18006   000111                     C1TBCH          equ	273	;# 
 18007   000112                     C1TBCU          equ	274	;# 
 18008   000113                     C1TBCT          equ	275	;# 
 18009   000114                     C1TSCONL        equ	276	;# 
 18010   000115                     C1TSCONH        equ	277	;# 
 18011   000116                     C1TSCONU        equ	278	;# 
 18012   000117                     C1TSCONT        equ	279	;# 
 18013   000118                     C1VECL          equ	280	;# 
 18014   000119                     C1VECH          equ	281	;# 
 18015   00011A                     C1VECU          equ	282	;# 
 18016   00011B                     C1VECT          equ	283	;# 
 18017   00011C                     C1INTL          equ	284	;# 
 18018   00011D                     C1INTH          equ	285	;# 
 18019   00011E                     C1INTU          equ	286	;# 
 18020   00011F                     C1INTT          equ	287	;# 
 18021   000120                     C1RXIF          equ	288	;# 
 18022   000120                     C1RXIFL         equ	288	;# 
 18023   000121                     C1RXIFH         equ	289	;# 
 18024   000122                     C1RXIFU         equ	290	;# 
 18025   000123                     C1RXIFT         equ	291	;# 
 18026   000124                     C1TXIF          equ	292	;# 
 18027   000124                     C1TXIFL         equ	292	;# 
 18028   000125                     C1TXIFH         equ	293	;# 
 18029   000126                     C1TXIFU         equ	294	;# 
 18030   000127                     C1TXIFT         equ	295	;# 
 18031   000128                     C1RXOVIF        equ	296	;# 
 18032   000128                     C1RXOVIFL       equ	296	;# 
 18033   000129                     C1RXOVIFH       equ	297	;# 
 18034   00012A                     C1RXOVIFU       equ	298	;# 
 18035   00012B                     C1RXOVIFT       equ	299	;# 
 18036   00012C                     C1TXATIF        equ	300	;# 
 18037   00012C                     C1TXATIFL       equ	300	;# 
 18038   00012D                     C1TXATIFH       equ	301	;# 
 18039   00012E                     C1TXATIFU       equ	302	;# 
 18040   00012F                     C1TXATIFT       equ	303	;# 
 18041   000130                     C1TXREQ         equ	304	;# 
 18042   000130                     C1TXREQL        equ	304	;# 
 18043   000131                     C1TXREQH        equ	305	;# 
 18044   000132                     C1TXREQU        equ	306	;# 
 18045   000133                     C1TXREQT        equ	307	;# 
 18046   000134                     C1TRECL         equ	308	;# 
 18047   000135                     C1TRECH         equ	309	;# 
 18048   000136                     C1TRECU         equ	310	;# 
 18049   000137                     C1TRECT         equ	311	;# 
 18050   000138                     C1BDIAG0L       equ	312	;# 
 18051   000139                     C1BDIAG0H       equ	313	;# 
 18052   00013C                     C1BDIAG1L       equ	316	;# 
 18053   00013D                     C1BDIAG1H       equ	317	;# 
 18054   00013E                     C1BDIAG1U       equ	318	;# 
 18055   00013F                     C1BDIAG1T       equ	319	;# 
 18056   000140                     C1TEFCONL       equ	320	;# 
 18057   000141                     C1TEFCONH       equ	321	;# 
 18058   000142                     C1TEFCONU       equ	322	;# 
 18059   000143                     C1TEFCONT       equ	323	;# 
 18060   000144                     C1TEFSTAL       equ	324	;# 
 18061   000145                     C1TEFSTAH       equ	325	;# 
 18062   000146                     C1TEFSTAU       equ	326	;# 
 18063   000147                     C1TEFSTAT       equ	327	;# 
 18064   000148                     C1TEFUA         equ	328	;# 
 18065   000148                     C1TEFUAL        equ	328	;# 
 18066   000149                     C1TEFUAH        equ	329	;# 
 18067   00014A                     C1TEFUAU        equ	330	;# 
 18068   00014B                     C1TEFUAT        equ	331	;# 
 18069   00014C                     C1FIFOBA        equ	332	;# 
 18070   00014C                     C1FIFOBAL       equ	332	;# 
 18071   00014D                     C1FIFOBAH       equ	333	;# 
 18072   00014E                     C1FIFOBAU       equ	334	;# 
 18073   00014F                     C1FIFOBAT       equ	335	;# 
 18074   000150                     C1TXQCONL       equ	336	;# 
 18075   000151                     C1TXQCONH       equ	337	;# 
 18076   000152                     C1TXQCONU       equ	338	;# 
 18077   000153                     C1TXQCONT       equ	339	;# 
 18078   000154                     C1TXQSTAL       equ	340	;# 
 18079   000155                     C1TXQSTAH       equ	341	;# 
 18080   000156                     C1TXQSTAU       equ	342	;# 
 18081   000157                     C1TXQSTAT       equ	343	;# 
 18082   000158                     C1TXQUA         equ	344	;# 
 18083   000158                     C1TXQUAL        equ	344	;# 
 18084   000159                     C1TXQUAH        equ	345	;# 
 18085   00015A                     C1TXQUAU        equ	346	;# 
 18086   00015B                     C1TXQUAT        equ	347	;# 
 18087   00015C                     C1FIFOCON1      equ	348	;# 
 18088   00015C                     C1FIFOCON1L     equ	348	;# 
 18089   00015D                     C1FIFOCON1H     equ	349	;# 
 18090   00015E                     C1FIFOCON1U     equ	350	;# 
 18091   00015F                     C1FIFOCON1T     equ	351	;# 
 18092   000160                     C1FIFOSTA1      equ	352	;# 
 18093   000160                     C1FIFOSTA1L     equ	352	;# 
 18094   000161                     C1FIFOSTA1H     equ	353	;# 
 18095   000162                     C1FIFOSTA1U     equ	354	;# 
 18096   000163                     C1FIFOSTA1T     equ	355	;# 
 18097   000164                     C1FIFOUA1       equ	356	;# 
 18098   000164                     C1FIFOUA1L      equ	356	;# 
 18099   000165                     C1FIFOUA1H      equ	357	;# 
 18100   000166                     C1FIFOUA1U      equ	358	;# 
 18101   000167                     C1FIFOUA1T      equ	359	;# 
 18102   000168                     C1FIFOCON2      equ	360	;# 
 18103   000168                     C1FIFOCON2L     equ	360	;# 
 18104   000169                     C1FIFOCON2H     equ	361	;# 
 18105   00016A                     C1FIFOCON2U     equ	362	;# 
 18106   00016B                     C1FIFOCON2T     equ	363	;# 
 18107   00016C                     C1FIFOSTA2      equ	364	;# 
 18108   00016C                     C1FIFOSTA2L     equ	364	;# 
 18109   00016D                     C1FIFOSTA2H     equ	365	;# 
 18110   00016E                     C1FIFOSTA2U     equ	366	;# 
 18111   00016F                     C1FIFOSTA2T     equ	367	;# 
 18112   000170                     C1FIFOUA2       equ	368	;# 
 18113   000170                     C1FIFOUA2L      equ	368	;# 
 18114   000171                     C1FIFOUA2H      equ	369	;# 
 18115   000172                     C1FIFOUA2U      equ	370	;# 
 18116   000173                     C1FIFOUA2T      equ	371	;# 
 18117   000174                     C1FIFOCON3      equ	372	;# 
 18118   000174                     C1FIFOCON3L     equ	372	;# 
 18119   000175                     C1FIFOCON3H     equ	373	;# 
 18120   000176                     C1FIFOCON3U     equ	374	;# 
 18121   000177                     C1FIFOCON3T     equ	375	;# 
 18122   000178                     C1FIFOSTA3      equ	376	;# 
 18123   000178                     C1FIFOSTA3L     equ	376	;# 
 18124   000179                     C1FIFOSTA3H     equ	377	;# 
 18125   00017A                     C1FIFOSTA3U     equ	378	;# 
 18126   00017B                     C1FIFOSTA3T     equ	379	;# 
 18127   00017C                     C1FIFOUA3       equ	380	;# 
 18128   00017C                     C1FIFOUA3L      equ	380	;# 
 18129   00017D                     C1FIFOUA3H      equ	381	;# 
 18130   00017E                     C1FIFOUA3U      equ	382	;# 
 18131   00017F                     C1FIFOUA3T      equ	383	;# 
 18132   000180                     C1FLTCON0L      equ	384	;# 
 18133   000181                     C1FLTCON0H      equ	385	;# 
 18134   000182                     C1FLTCON0U      equ	386	;# 
 18135   000183                     C1FLTCON0T      equ	387	;# 
 18136   000184                     C1FLTCON1L      equ	388	;# 
 18137   000185                     C1FLTCON1H      equ	389	;# 
 18138   000186                     C1FLTCON1U      equ	390	;# 
 18139   000187                     C1FLTCON1T      equ	391	;# 
 18140   000188                     C1FLTCON2L      equ	392	;# 
 18141   000189                     C1FLTCON2H      equ	393	;# 
 18142   00018A                     C1FLTCON2U      equ	394	;# 
 18143   00018B                     C1FLTCON2T      equ	395	;# 
 18144   00018C                     C1FLTOBJ0       equ	396	;# 
 18145   00018C                     C1FLTOBJ0L      equ	396	;# 
 18146   00018D                     C1FLTOBJ0H      equ	397	;# 
 18147   00018E                     C1FLTOBJ0U      equ	398	;# 
 18148   00018F                     C1FLTOBJ0T      equ	399	;# 
 18149   000190                     C1MASK0         equ	400	;# 
 18150   000190                     C1MASK0L        equ	400	;# 
 18151   000191                     C1MASK0H        equ	401	;# 
 18152   000192                     C1MASK0U        equ	402	;# 
 18153   000193                     C1MASK0T        equ	403	;# 
 18154   000194                     C1FLTOBJ1       equ	404	;# 
 18155   000194                     C1FLTOBJ1L      equ	404	;# 
 18156   000195                     C1FLTOBJ1H      equ	405	;# 
 18157   000196                     C1FLTOBJ1U      equ	406	;# 
 18158   000197                     C1FLTOBJ1T      equ	407	;# 
 18159   000198                     C1MASK1         equ	408	;# 
 18160   000198                     C1MASK1L        equ	408	;# 
 18161   000199                     C1MASK1H        equ	409	;# 
 18162   00019A                     C1MASK1U        equ	410	;# 
 18163   00019B                     C1MASK1T        equ	411	;# 
 18164   00019C                     C1FLTOBJ2       equ	412	;# 
 18165   00019C                     C1FLTOBJ2L      equ	412	;# 
 18166   00019D                     C1FLTOBJ2H      equ	413	;# 
 18167   00019E                     C1FLTOBJ2U      equ	414	;# 
 18168   00019F                     C1FLTOBJ2T      equ	415	;# 
 18169   0001A0                     C1MASK2         equ	416	;# 
 18170   0001A0                     C1MASK2L        equ	416	;# 
 18171   0001A1                     C1MASK2H        equ	417	;# 
 18172   0001A2                     C1MASK2U        equ	418	;# 
 18173   0001A3                     C1MASK2T        equ	419	;# 
 18174   0001A4                     C1FLTOBJ3       equ	420	;# 
 18175   0001A4                     C1FLTOBJ3L      equ	420	;# 
 18176   0001A5                     C1FLTOBJ3H      equ	421	;# 
 18177   0001A6                     C1FLTOBJ3U      equ	422	;# 
 18178   0001A7                     C1FLTOBJ3T      equ	423	;# 
 18179   0001A8                     C1MASK3         equ	424	;# 
 18180   0001A8                     C1MASK3L        equ	424	;# 
 18181   0001A9                     C1MASK3H        equ	425	;# 
 18182   0001AA                     C1MASK3U        equ	426	;# 
 18183   0001AB                     C1MASK3T        equ	427	;# 
 18184   0001AC                     C1FLTOBJ4       equ	428	;# 
 18185   0001AC                     C1FLTOBJ4L      equ	428	;# 
 18186   0001AD                     C1FLTOBJ4H      equ	429	;# 
 18187   0001AE                     C1FLTOBJ4U      equ	430	;# 
 18188   0001AF                     C1FLTOBJ4T      equ	431	;# 
 18189   0001B0                     C1MASK4         equ	432	;# 
 18190   0001B0                     C1MASK4L        equ	432	;# 
 18191   0001B1                     C1MASK4H        equ	433	;# 
 18192   0001B2                     C1MASK4U        equ	434	;# 
 18193   0001B3                     C1MASK4T        equ	435	;# 
 18194   0001B4                     C1FLTOBJ5       equ	436	;# 
 18195   0001B4                     C1FLTOBJ5L      equ	436	;# 
 18196   0001B5                     C1FLTOBJ5H      equ	437	;# 
 18197   0001B6                     C1FLTOBJ5U      equ	438	;# 
 18198   0001B7                     C1FLTOBJ5T      equ	439	;# 
 18199   0001B8                     C1MASK5         equ	440	;# 
 18200   0001B8                     C1MASK5L        equ	440	;# 
 18201   0001B9                     C1MASK5H        equ	441	;# 
 18202   0001BA                     C1MASK5U        equ	442	;# 
 18203   0001BB                     C1MASK5T        equ	443	;# 
 18204   0001BC                     C1FLTOBJ6       equ	444	;# 
 18205   0001BC                     C1FLTOBJ6L      equ	444	;# 
 18206   0001BD                     C1FLTOBJ6H      equ	445	;# 
 18207   0001BE                     C1FLTOBJ6U      equ	446	;# 
 18208   0001BF                     C1FLTOBJ6T      equ	447	;# 
 18209   0001C0                     C1MASK6         equ	448	;# 
 18210   0001C0                     C1MASK6L        equ	448	;# 
 18211   0001C1                     C1MASK6H        equ	449	;# 
 18212   0001C2                     C1MASK6U        equ	450	;# 
 18213   0001C3                     C1MASK6T        equ	451	;# 
 18214   0001C4                     C1FLTOBJ7       equ	452	;# 
 18215   0001C4                     C1FLTOBJ7L      equ	452	;# 
 18216   0001C5                     C1FLTOBJ7H      equ	453	;# 
 18217   0001C6                     C1FLTOBJ7U      equ	454	;# 
 18218   0001C7                     C1FLTOBJ7T      equ	455	;# 
 18219   0001C8                     C1MASK7         equ	456	;# 
 18220   0001C8                     C1MASK7L        equ	456	;# 
 18221   0001C9                     C1MASK7H        equ	457	;# 
 18222   0001CA                     C1MASK7U        equ	458	;# 
 18223   0001CB                     C1MASK7T        equ	459	;# 
 18224   0001CC                     C1FLTOBJ8       equ	460	;# 
 18225   0001CC                     C1FLTOBJ8L      equ	460	;# 
 18226   0001CD                     C1FLTOBJ8H      equ	461	;# 
 18227   0001CE                     C1FLTOBJ8U      equ	462	;# 
 18228   0001CF                     C1FLTOBJ8T      equ	463	;# 
 18229   0001D0                     C1MASK8         equ	464	;# 
 18230   0001D0                     C1MASK8L        equ	464	;# 
 18231   0001D1                     C1MASK8H        equ	465	;# 
 18232   0001D2                     C1MASK8U        equ	466	;# 
 18233   0001D3                     C1MASK8T        equ	467	;# 
 18234   0001D4                     C1FLTOBJ9       equ	468	;# 
 18235   0001D4                     C1FLTOBJ9L      equ	468	;# 
 18236   0001D5                     C1FLTOBJ9H      equ	469	;# 
 18237   0001D6                     C1FLTOBJ9U      equ	470	;# 
 18238   0001D7                     C1FLTOBJ9T      equ	471	;# 
 18239   0001D8                     C1MASK9         equ	472	;# 
 18240   0001D8                     C1MASK9L        equ	472	;# 
 18241   0001D9                     C1MASK9H        equ	473	;# 
 18242   0001DA                     C1MASK9U        equ	474	;# 
 18243   0001DB                     C1MASK9T        equ	475	;# 
 18244   0001DC                     C1FLTOBJ10      equ	476	;# 
 18245   0001DC                     C1FLTOBJ10L     equ	476	;# 
 18246   0001DD                     C1FLTOBJ10H     equ	477	;# 
 18247   0001DE                     C1FLTOBJ10U     equ	478	;# 
 18248   0001DF                     C1FLTOBJ10T     equ	479	;# 
 18249   0001E0                     C1MASK10        equ	480	;# 
 18250   0001E0                     C1MASK10L       equ	480	;# 
 18251   0001E1                     C1MASK10H       equ	481	;# 
 18252   0001E2                     C1MASK10U       equ	482	;# 
 18253   0001E3                     C1MASK10T       equ	483	;# 
 18254   0001E4                     C1FLTOBJ11      equ	484	;# 
 18255   0001E4                     C1FLTOBJ11L     equ	484	;# 
 18256   0001E5                     C1FLTOBJ11H     equ	485	;# 
 18257   0001E6                     C1FLTOBJ11U     equ	486	;# 
 18258   0001E7                     C1FLTOBJ11T     equ	487	;# 
 18259   0001E8                     C1MASK11        equ	488	;# 
 18260   0001E8                     C1MASK11L       equ	488	;# 
 18261   0001E9                     C1MASK11H       equ	489	;# 
 18262   0001EA                     C1MASK11U       equ	490	;# 
 18263   0001EB                     C1MASK11T       equ	491	;# 
 18264   000200                     PPSLOCK         equ	512	;# 
 18265   000201                     RA0PPS          equ	513	;# 
 18266   000202                     RA1PPS          equ	514	;# 
 18267   000203                     RA2PPS          equ	515	;# 
 18268   000204                     RA3PPS          equ	516	;# 
 18269   000205                     RA4PPS          equ	517	;# 
 18270   000206                     RA5PPS          equ	518	;# 
 18271   000207                     RA6PPS          equ	519	;# 
 18272   000208                     RA7PPS          equ	520	;# 
 18273   000209                     RB0PPS          equ	521	;# 
 18274   00020A                     RB1PPS          equ	522	;# 
 18275   00020B                     RB2PPS          equ	523	;# 
 18276   00020C                     RB3PPS          equ	524	;# 
 18277   00020D                     RB4PPS          equ	525	;# 
 18278   00020E                     RB5PPS          equ	526	;# 
 18279   00020F                     RB6PPS          equ	527	;# 
 18280   000210                     RB7PPS          equ	528	;# 
 18281   000211                     RC0PPS          equ	529	;# 
 18282   000212                     RC1PPS          equ	530	;# 
 18283   000213                     RC2PPS          equ	531	;# 
 18284   000214                     RC3PPS          equ	532	;# 
 18285   000215                     RC4PPS          equ	533	;# 
 18286   000216                     RC5PPS          equ	534	;# 
 18287   000217                     RC6PPS          equ	535	;# 
 18288   000218                     RC7PPS          equ	536	;# 
 18289   00023D                     CANRXPPS        equ	573	;# 
 18290   00023E                     INT0PPS         equ	574	;# 
 18291   00023F                     INT1PPS         equ	575	;# 
 18292   000240                     INT2PPS         equ	576	;# 
 18293   000241                     T0CKIPPS        equ	577	;# 
 18294   000242                     T1CKIPPS        equ	578	;# 
 18295   000243                     T1GPPS          equ	579	;# 
 18296   000244                     T3CKIPPS        equ	580	;# 
 18297   000245                     T3GPPS          equ	581	;# 
 18298   000246                     T5CKIPPS        equ	582	;# 
 18299   000247                     T5GPPS          equ	583	;# 
 18300   000248                     T2INPPS         equ	584	;# 
 18301   000249                     T4INPPS         equ	585	;# 
 18302   00024A                     T6INPPS         equ	586	;# 
 18303   00024B                     TUIN0PPS        equ	587	;# 
 18304   00024C                     TUIN1PPS        equ	588	;# 
 18305   00024F                     CCP1PPS         equ	591	;# 
 18306   000250                     CCP2PPS         equ	592	;# 
 18307   000251                     CCP3PPS         equ	593	;# 
 18308   000253                     PWM1ERSPPS      equ	595	;# 
 18309   000254                     PWM2ERSPPS      equ	596	;# 
 18310   000255                     PWM3ERSPPS      equ	597	;# 
 18311   000256                     PWM4ERSPPS      equ	598	;# 
 18312   000257                     PWMIN0PPS       equ	599	;# 
 18313   000258                     PWMIN1PPS       equ	600	;# 
 18314   000259                     SMT1WINPPS      equ	601	;# 
 18315   00025A                     SMT1SIGPPS      equ	602	;# 
 18316   00025B                     CWG1PPS         equ	603	;# 
 18317   00025B                     CWG1INPPS       equ	603	;# 
 18318   00025C                     CWG2PPS         equ	604	;# 
 18319   00025C                     CWG2INPPS       equ	604	;# 
 18320   00025D                     CWG3PPS         equ	605	;# 
 18321   00025D                     CWG3INPPS       equ	605	;# 
 18322   00025E                     MD1CARLPPS      equ	606	;# 
 18323   00025E                     MDCARLPPS       equ	606	;# 
 18324   00025F                     MD1CARHPPS      equ	607	;# 
 18325   00025F                     MDCARHPPS       equ	607	;# 
 18326   000260                     MD1SRCPPS       equ	608	;# 
 18327   000260                     MDSRCPPS        equ	608	;# 
 18328   000261                     CLCIN0PPS       equ	609	;# 
 18329   000262                     CLCIN1PPS       equ	610	;# 
 18330   000263                     CLCIN2PPS       equ	611	;# 
 18331   000264                     CLCIN3PPS       equ	612	;# 
 18332   000265                     CLCIN4PPS       equ	613	;# 
 18333   000266                     CLCIN5PPS       equ	614	;# 
 18334   000267                     CLCIN6PPS       equ	615	;# 
 18335   000268                     CLCIN7PPS       equ	616	;# 
 18336   000269                     ADACTPPS        equ	617	;# 
 18337   00026A                     SPI1SCKPPS      equ	618	;# 
 18338   00026B                     SPI1SDIPPS      equ	619	;# 
 18339   00026C                     SPI1SSPPS       equ	620	;# 
 18340   00026D                     SPI2SCKPPS      equ	621	;# 
 18341   00026E                     SPI2SDIPPS      equ	622	;# 
 18342   00026F                     SPI2SSPPS       equ	623	;# 
 18343   000270                     I2C1SDAPPS      equ	624	;# 
 18344   000271                     I2C1SCLPPS      equ	625	;# 
 18345   000272                     U1RXPPS         equ	626	;# 
 18346   000273                     U1CTSPPS        equ	627	;# 
 18347   000274                     U2RXPPS         equ	628	;# 
 18348   000275                     U2CTSPPS        equ	629	;# 
 18349   000276                     U3RXPPS         equ	630	;# 
 18350   000277                     U3CTSPPS        equ	631	;# 
 18351   000278                     U4RXPPS         equ	632	;# 
 18352   000279                     U4CTSPPS        equ	633	;# 
 18353   00027A                     U5RXPPS         equ	634	;# 
 18354   00027B                     U5CTSPPS        equ	635	;# 
 18355   000286                     RC4I2C          equ	646	;# 
 18356   000287                     RC3I2C          equ	647	;# 
 18357   000288                     RB2I2C          equ	648	;# 
 18358   000289                     RB1I2C          equ	649	;# 
 18359   00028A                     I2C1RXB         equ	650	;# 
 18360   00028B                     I2C1TXB         equ	651	;# 
 18361   00028C                     I2C1CNTL        equ	652	;# 
 18362   00028D                     I2C1CNTH        equ	653	;# 
 18363   00028E                     I2C1ADB0        equ	654	;# 
 18364   00028F                     I2C1ADB1        equ	655	;# 
 18365   000290                     I2C1ADR0        equ	656	;# 
 18366   000291                     I2C1ADR1        equ	657	;# 
 18367   000292                     I2C1ADR2        equ	658	;# 
 18368   000293                     I2C1ADR3        equ	659	;# 
 18369   000294                     I2C1CON0        equ	660	;# 
 18370   000295                     I2C1CON1        equ	661	;# 
 18371   000296                     I2C1CON2        equ	662	;# 
 18372   000297                     I2C1ERR         equ	663	;# 
 18373   000298                     I2C1STAT0       equ	664	;# 
 18374   000299                     I2C1STAT1       equ	665	;# 
 18375   00029A                     I2C1PIR         equ	666	;# 
 18376   00029B                     I2C1PIE         equ	667	;# 
 18377   00029C                     I2C1BTO         equ	668	;# 
 18378   00029D                     I2C1BAUD        equ	669	;# 
 18379   00029E                     I2C1CLK         equ	670	;# 
 18380   00029F                     I2C1BTOC        equ	671	;# 
 18381   0002A1                     U1RXB           equ	673	;# 
 18382   0002A1                     U1RXBL          equ	673	;# 
 18383   0002A2                     U1RXCHK         equ	674	;# 
 18384   0002A3                     U1TXB           equ	675	;# 
 18385   0002A3                     U1TXBL          equ	675	;# 
 18386   0002A4                     U1TXCHK         equ	676	;# 
 18387   0002A5                     U1P1            equ	677	;# 
 18388   0002A5                     U1P1L           equ	677	;# 
 18389   0002A6                     U1P1H           equ	678	;# 
 18390   0002A7                     U1P2            equ	679	;# 
 18391   0002A7                     U1P2L           equ	679	;# 
 18392   0002A8                     U1P2H           equ	680	;# 
 18393   0002A9                     U1P3            equ	681	;# 
 18394   0002A9                     U1P3L           equ	681	;# 
 18395   0002AA                     U1P3H           equ	682	;# 
 18396   0002AB                     U1CON0          equ	683	;# 
 18397   0002AC                     U1CON1          equ	684	;# 
 18398   0002AD                     U1CON2          equ	685	;# 
 18399   0002AE                     U1BRG           equ	686	;# 
 18400   0002AE                     U1BRGL          equ	686	;# 
 18401   0002AF                     U1BRGH          equ	687	;# 
 18402   0002B0                     U1FIFO          equ	688	;# 
 18403   0002B1                     U1UIR           equ	689	;# 
 18404   0002B2                     U1ERRIR         equ	690	;# 
 18405   0002B3                     U1ERRIE         equ	691	;# 
 18406   0002B4                     U2RXB           equ	692	;# 
 18407   0002B4                     U2RXBL          equ	692	;# 
 18408   0002B5                     U2RXCHK         equ	693	;# 
 18409   0002B6                     U2TXB           equ	694	;# 
 18410   0002B6                     U2TXBL          equ	694	;# 
 18411   0002B7                     U2TXCHK         equ	695	;# 
 18412   0002B8                     U2P1            equ	696	;# 
 18413   0002B8                     U2P1L           equ	696	;# 
 18414   0002B9                     U2P1H           equ	697	;# 
 18415   0002BA                     U2P2            equ	698	;# 
 18416   0002BA                     U2P2L           equ	698	;# 
 18417   0002BB                     U2P2H           equ	699	;# 
 18418   0002BC                     U2P3            equ	700	;# 
 18419   0002BC                     U2P3L           equ	700	;# 
 18420   0002BD                     U2P3H           equ	701	;# 
 18421   0002BE                     U2CON0          equ	702	;# 
 18422   0002BF                     U2CON1          equ	703	;# 
 18423   0002C0                     U2CON2          equ	704	;# 
 18424   0002C1                     U2BRG           equ	705	;# 
 18425   0002C1                     U2BRGL          equ	705	;# 
 18426   0002C2                     U2BRGH          equ	706	;# 
 18427   0002C3                     U2FIFO          equ	707	;# 
 18428   0002C4                     U2UIR           equ	708	;# 
 18429   0002C5                     U2ERRIR         equ	709	;# 
 18430   0002C6                     U2ERRIE         equ	710	;# 
 18431   0002C7                     U3RXB           equ	711	;# 
 18432   0002C7                     U3RXBL          equ	711	;# 
 18433   0002C9                     U3TXB           equ	713	;# 
 18434   0002C9                     U3TXBL          equ	713	;# 
 18435   0002CB                     U3P1            equ	715	;# 
 18436   0002CB                     U3P1L           equ	715	;# 
 18437   0002CD                     U3P2            equ	717	;# 
 18438   0002CD                     U3P2L           equ	717	;# 
 18439   0002CF                     U3P3            equ	719	;# 
 18440   0002CF                     U3P3L           equ	719	;# 
 18441   0002D1                     U3CON0          equ	721	;# 
 18442   0002D2                     U3CON1          equ	722	;# 
 18443   0002D3                     U3CON2          equ	723	;# 
 18444   0002D4                     U3BRG           equ	724	;# 
 18445   0002D4                     U3BRGL          equ	724	;# 
 18446   0002D5                     U3BRGH          equ	725	;# 
 18447   0002D6                     U3FIFO          equ	726	;# 
 18448   0002D7                     U3UIR           equ	727	;# 
 18449   0002D8                     U3ERRIR         equ	728	;# 
 18450   0002D9                     U3ERRIE         equ	729	;# 
 18451   0002DA                     U4RXB           equ	730	;# 
 18452   0002DA                     U4RXBL          equ	730	;# 
 18453   0002DC                     U4TXB           equ	732	;# 
 18454   0002DC                     U4TXBL          equ	732	;# 
 18455   0002DE                     U4P1            equ	734	;# 
 18456   0002DE                     U4P1L           equ	734	;# 
 18457   0002E0                     U4P2            equ	736	;# 
 18458   0002E0                     U4P2L           equ	736	;# 
 18459   0002E2                     U4P3            equ	738	;# 
 18460   0002E2                     U4P3L           equ	738	;# 
 18461   0002E4                     U4CON0          equ	740	;# 
 18462   0002E5                     U4CON1          equ	741	;# 
 18463   0002E6                     U4CON2          equ	742	;# 
 18464   0002E7                     U4BRG           equ	743	;# 
 18465   0002E7                     U4BRGL          equ	743	;# 
 18466   0002E8                     U4BRGH          equ	744	;# 
 18467   0002E9                     U4FIFO          equ	745	;# 
 18468   0002EA                     U4UIR           equ	746	;# 
 18469   0002EB                     U4ERRIR         equ	747	;# 
 18470   0002EC                     U4ERRIE         equ	748	;# 
 18471   0002ED                     U5RXB           equ	749	;# 
 18472   0002ED                     U5RXBL          equ	749	;# 
 18473   0002EF                     U5TXB           equ	751	;# 
 18474   0002EF                     U5TXBL          equ	751	;# 
 18475   0002F1                     U5P1            equ	753	;# 
 18476   0002F1                     U5P1L           equ	753	;# 
 18477   0002F3                     U5P2            equ	755	;# 
 18478   0002F3                     U5P2L           equ	755	;# 
 18479   0002F5                     U5P3            equ	757	;# 
 18480   0002F5                     U5P3L           equ	757	;# 
 18481   0002F7                     U5CON0          equ	759	;# 
 18482   0002F8                     U5CON1          equ	760	;# 
 18483   0002F9                     U5CON2          equ	761	;# 
 18484   0002FA                     U5BRG           equ	762	;# 
 18485   0002FA                     U5BRGL          equ	762	;# 
 18486   0002FB                     U5BRGH          equ	763	;# 
 18487   0002FC                     U5FIFO          equ	764	;# 
 18488   0002FD                     U5UIR           equ	765	;# 
 18489   0002FE                     U5ERRIR         equ	766	;# 
 18490   0002FF                     U5ERRIE         equ	767	;# 
 18491   000300                     SMT1TMR         equ	768	;# 
 18492   000300                     SMT1TMRL        equ	768	;# 
 18493   000301                     SMT1TMRH        equ	769	;# 
 18494   000302                     SMT1TMRU        equ	770	;# 
 18495   000303                     SMT1CPR         equ	771	;# 
 18496   000303                     SMT1CPRL        equ	771	;# 
 18497   000304                     SMT1CPRH        equ	772	;# 
 18498   000305                     SMT1CPRU        equ	773	;# 
 18499   000306                     SMT1CPW         equ	774	;# 
 18500   000306                     SMT1CPWL        equ	774	;# 
 18501   000307                     SMT1CPWH        equ	775	;# 
 18502   000308                     SMT1CPWU        equ	776	;# 
 18503   000309                     SMT1PR          equ	777	;# 
 18504   000309                     SMT1PRL         equ	777	;# 
 18505   00030A                     SMT1PRH         equ	778	;# 
 18506   00030B                     SMT1PRU         equ	779	;# 
 18507   00030C                     SMT1CON0        equ	780	;# 
 18508   00030D                     SMT1CON1        equ	781	;# 
 18509   00030E                     SMT1STAT        equ	782	;# 
 18510   00030F                     SMT1CLK         equ	783	;# 
 18511   000310                     SMT1SIG         equ	784	;# 
 18512   000311                     SMT1WIN         equ	785	;# 
 18513   000318                     TMR0L           equ	792	;# 
 18514   000318                     TMR0            equ	792	;# 
 18515   000319                     TMR0H           equ	793	;# 
 18516   000319                     PR0             equ	793	;# 
 18517   00031A                     T0CON0          equ	794	;# 
 18518   00031B                     T0CON1          equ	795	;# 
 18519   00031C                     TMR1            equ	796	;# 
 18520   00031C                     TMR1L           equ	796	;# 
 18521   00031D                     TMR1H           equ	797	;# 
 18522   00031E                     T1CON           equ	798	;# 
 18523   00031E                     TMR1CON         equ	798	;# 
 18524   00031F                     T1GCON          equ	799	;# 
 18525   00031F                     TMR1GCON        equ	799	;# 
 18526   000320                     T1GATE          equ	800	;# 
 18527   000320                     TMR1GATE        equ	800	;# 
 18528   000321                     T1CLK           equ	801	;# 
 18529   000321                     TMR1CLK         equ	801	;# 
 18530   000321                     PR1             equ	801	;# 
 18531   000322                     T2TMR           equ	802	;# 
 18532   000322                     TMR2            equ	802	;# 
 18533   000323                     T2PR            equ	803	;# 
 18534   000323                     PR2             equ	803	;# 
 18535   000324                     T2CON           equ	804	;# 
 18536   000325                     T2HLT           equ	805	;# 
 18537   000326                     T2CLKCON        equ	806	;# 
 18538   000326                     T2CLK           equ	806	;# 
 18539   000327                     T2RST           equ	807	;# 
 18540   000328                     TMR3            equ	808	;# 
 18541   000328                     TMR3L           equ	808	;# 
 18542   000329                     TMR3H           equ	809	;# 
 18543   00032A                     T3CON           equ	810	;# 
 18544   00032A                     TMR3CON         equ	810	;# 
 18545   00032B                     T3GCON          equ	811	;# 
 18546   00032B                     TMR3GCON        equ	811	;# 
 18547   00032C                     T3GATE          equ	812	;# 
 18548   00032C                     TMR3GATE        equ	812	;# 
 18549   00032D                     T3CLK           equ	813	;# 
 18550   00032D                     TMR3CLK         equ	813	;# 
 18551   00032D                     PR3             equ	813	;# 
 18552   00032E                     T4TMR           equ	814	;# 
 18553   00032E                     TMR4            equ	814	;# 
 18554   00032F                     T4PR            equ	815	;# 
 18555   00032F                     PR4             equ	815	;# 
 18556   000330                     T4CON           equ	816	;# 
 18557   000331                     T4HLT           equ	817	;# 
 18558   000332                     T4CLKCON        equ	818	;# 
 18559   000332                     T4CLK           equ	818	;# 
 18560   000333                     T4RST           equ	819	;# 
 18561   000334                     TMR5            equ	820	;# 
 18562   000334                     TMR5L           equ	820	;# 
 18563   000335                     TMR5H           equ	821	;# 
 18564   000336                     T5CON           equ	822	;# 
 18565   000336                     TMR5CON         equ	822	;# 
 18566   000337                     T5GCON          equ	823	;# 
 18567   000337                     TMR5GCON        equ	823	;# 
 18568   000338                     T5GATE          equ	824	;# 
 18569   000338                     TMR5GATE        equ	824	;# 
 18570   000339                     T5CLK           equ	825	;# 
 18571   000339                     TMR5CLK         equ	825	;# 
 18572   000339                     PR5             equ	825	;# 
 18573   00033A                     T6TMR           equ	826	;# 
 18574   00033A                     TMR6            equ	826	;# 
 18575   00033B                     T6PR            equ	827	;# 
 18576   00033B                     PR6             equ	827	;# 
 18577   00033C                     T6CON           equ	828	;# 
 18578   00033D                     T6HLT           equ	829	;# 
 18579   00033E                     T6CLKCON        equ	830	;# 
 18580   00033E                     T6CLK           equ	830	;# 
 18581   00033F                     T6RST           equ	831	;# 
 18582   000340                     CCPR1           equ	832	;# 
 18583   000340                     CCPR1L          equ	832	;# 
 18584   000341                     CCPR1H          equ	833	;# 
 18585   000342                     CCP1CON         equ	834	;# 
 18586   000343                     CCP1CAP         equ	835	;# 
 18587   000344                     CCPR2           equ	836	;# 
 18588   000344                     CCPR2L          equ	836	;# 
 18589   000345                     CCPR2H          equ	837	;# 
 18590   000346                     CCP2CON         equ	838	;# 
 18591   000347                     CCP2CAP         equ	839	;# 
 18592   000348                     CCPR3           equ	840	;# 
 18593   000348                     CCPR3L          equ	840	;# 
 18594   000349                     CCPR3H          equ	841	;# 
 18595   00034A                     CCP3CON         equ	842	;# 
 18596   00034B                     CCP3CAP         equ	843	;# 
 18597   00034C                     CCPTMRS0        equ	844	;# 
 18598   00034F                     CRCDATA         equ	847	;# 
 18599   00034F                     CRCDATAL        equ	847	;# 
 18600   000350                     CRCDATAH        equ	848	;# 
 18601   000351                     CRCDATAU        equ	849	;# 
 18602   000352                     CRCDATAT        equ	850	;# 
 18603   000353                     CRCOUT          equ	851	;# 
 18604   000353                     CRCSHFT         equ	851	;# 
 18605   000353                     CRCXOR          equ	851	;# 
 18606   000353                     CRCOUTL         equ	851	;# 
 18607   000353                     CRCSHFTL        equ	851	;# 
 18608   000353                     CRCSHIFTL       equ	851	;# 
 18609   000353                     CRCXORL         equ	851	;# 
 18610   000354                     CRCOUTH         equ	852	;# 
 18611   000354                     CRCSHFTH        equ	852	;# 
 18612   000354                     CRCSHIFTH       equ	852	;# 
 18613   000354                     CRCXORH         equ	852	;# 
 18614   000355                     CRCOUTU         equ	853	;# 
 18615   000355                     CRCSHFTU        equ	853	;# 
 18616   000355                     CRCSHIFTU       equ	853	;# 
 18617   000355                     CRCXORU         equ	853	;# 
 18618   000356                     CRCOUTT         equ	854	;# 
 18619   000356                     CRCSHFTT        equ	854	;# 
 18620   000356                     CRCSHIFTT       equ	854	;# 
 18621   000356                     CRCXORT         equ	854	;# 
 18622   000357                     CRCCON0         equ	855	;# 
 18623   000358                     CRCCON1         equ	856	;# 
 18624   000359                     CRCCON2         equ	857	;# 
 18625   00035A                     SCANLADR        equ	858	;# 
 18626   00035A                     SCANLADRL       equ	858	;# 
 18627   00035B                     SCANLADRH       equ	859	;# 
 18628   00035C                     SCANLADRU       equ	860	;# 
 18629   00035D                     SCANHADR        equ	861	;# 
 18630   00035D                     SCANHADRL       equ	861	;# 
 18631   00035E                     SCANHADRH       equ	862	;# 
 18632   00035F                     SCANHADRU       equ	863	;# 
 18633   000360                     SCANCON0        equ	864	;# 
 18634   000361                     SCANTRIG        equ	865	;# 
 18635   000362                     IPR0            equ	866	;# 
 18636   000363                     IPR1            equ	867	;# 
 18637   000364                     IPR2            equ	868	;# 
 18638   000365                     IPR3            equ	869	;# 
 18639   000366                     IPR4            equ	870	;# 
 18640   000367                     IPR5            equ	871	;# 
 18641   000368                     IPR6            equ	872	;# 
 18642   000369                     IPR7            equ	873	;# 
 18643   00036A                     IPR8            equ	874	;# 
 18644   00036B                     IPR9            equ	875	;# 
 18645   00036C                     IPR10           equ	876	;# 
 18646   00036D                     IPR11           equ	877	;# 
 18647   00036E                     IPR12           equ	878	;# 
 18648   00036F                     IPR13           equ	879	;# 
 18649   000370                     IPR14           equ	880	;# 
 18650   000371                     IPR15           equ	881	;# 
 18651   000373                     STATUS_CSHAD    equ	883	;# 
 18652   000374                     WREG_CSHAD      equ	884	;# 
 18653   000375                     BSR_CSHAD       equ	885	;# 
 18654   000376                     SHADCON         equ	886	;# 
 18655   000377                     STATUS_SHAD     equ	887	;# 
 18656   000378                     WREG_SHAD       equ	888	;# 
 18657   000379                     BSR_SHAD        equ	889	;# 
 18658   00037A                     PCLATH_SHAD     equ	890	;# 
 18659   00037B                     PCLATU_SHAD     equ	891	;# 
 18660   00037C                     FSR0SH          equ	892	;# 
 18661   00037C                     FSR0L_SHAD      equ	892	;# 
 18662   00037D                     FSR0H_SHAD      equ	893	;# 
 18663   00037E                     FSR1SH          equ	894	;# 
 18664   00037E                     FSR1L_SHAD      equ	894	;# 
 18665   00037F                     FSR1H_SHAD      equ	895	;# 
 18666   000380                     FSR2SH          equ	896	;# 
 18667   000380                     FSR2L_SHAD      equ	896	;# 
 18668   000381                     FSR2H_SHAD      equ	897	;# 
 18669   000382                     PRODSH          equ	898	;# 
 18670   000382                     PRODL_SHAD      equ	898	;# 
 18671   000383                     PRODH_SHAD      equ	899	;# 
 18672   000387                     TU16ACON0       equ	903	;# 
 18673   000388                     TU16ACON1       equ	904	;# 
 18674   000389                     TU16AHLT        equ	905	;# 
 18675   00038A                     TU16APS         equ	906	;# 
 18676   00038B                     TU16ATMR        equ	907	;# 
 18677   00038B                     TU16ACR         equ	907	;# 
 18678   00038B                     TU16ATMRL       equ	907	;# 
 18679   00038B                     TU16ACRL        equ	907	;# 
 18680   00038C                     TU16ATMRH       equ	908	;# 
 18681   00038C                     TU16ACRH        equ	908	;# 
 18682   00038D                     TU16APR         equ	909	;# 
 18683   00038D                     TU16APRL        equ	909	;# 
 18684   00038E                     TU16APRH        equ	910	;# 
 18685   00038F                     TU16ACLK        equ	911	;# 
 18686   000390                     TU16AERS        equ	912	;# 
 18687   000393                     TU16BCON0       equ	915	;# 
 18688   000394                     TU16BCON1       equ	916	;# 
 18689   000395                     TU16BHLT        equ	917	;# 
 18690   000396                     TU16BPS         equ	918	;# 
 18691   000397                     TU16BTMR        equ	919	;# 
 18692   000397                     TU16BCR         equ	919	;# 
 18693   000397                     TU16BTMRL       equ	919	;# 
 18694   000397                     TU16BCRL        equ	919	;# 
 18695   000398                     TU16BTMRH       equ	920	;# 
 18696   000398                     TU16BCRH        equ	920	;# 
 18697   000399                     TU16BPR         equ	921	;# 
 18698   000399                     TU16BPRL        equ	921	;# 
 18699   00039A                     TU16BPRH        equ	922	;# 
 18700   00039B                     TU16BCLK        equ	923	;# 
 18701   00039C                     TU16BERS        equ	924	;# 
 18702   0003BB                     TUCHAIN         equ	955	;# 
 18703   0003BC                     CWG1CLK         equ	956	;# 
 18704   0003BC                     CWG1CLKCON      equ	956	;# 
 18705   0003BD                     CWG1ISM         equ	957	;# 
 18706   0003BE                     CWG1DBR         equ	958	;# 
 18707   0003BF                     CWG1DBF         equ	959	;# 
 18708   0003C0                     CWG1CON0        equ	960	;# 
 18709   0003C1                     CWG1CON1        equ	961	;# 
 18710   0003C2                     CWG1AS0         equ	962	;# 
 18711   0003C3                     CWG1AS1         equ	963	;# 
 18712   0003C4                     CWG1STR         equ	964	;# 
 18713   0003C5                     CWG2CLK         equ	965	;# 
 18714   0003C5                     CWG2CLKCON      equ	965	;# 
 18715   0003C6                     CWG2ISM         equ	966	;# 
 18716   0003C7                     CWG2DBR         equ	967	;# 
 18717   0003C8                     CWG2DBF         equ	968	;# 
 18718   0003C9                     CWG2CON0        equ	969	;# 
 18719   0003CA                     CWG2CON1        equ	970	;# 
 18720   0003CB                     CWG2AS0         equ	971	;# 
 18721   0003CC                     CWG2AS1         equ	972	;# 
 18722   0003CD                     CWG2STR         equ	973	;# 
 18723   0003CE                     CWG3CLK         equ	974	;# 
 18724   0003CE                     CWG3CLKCON      equ	974	;# 
 18725   0003CF                     CWG3ISM         equ	975	;# 
 18726   0003D0                     CWG3DBR         equ	976	;# 
 18727   0003D1                     CWG3DBF         equ	977	;# 
 18728   0003D2                     CWG3CON0        equ	978	;# 
 18729   0003D3                     CWG3CON1        equ	979	;# 
 18730   0003D4                     CWG3AS0         equ	980	;# 
 18731   0003D5                     CWG3AS1         equ	981	;# 
 18732   0003D6                     CWG3STR         equ	982	;# 
 18733   0003D7                     FVRCON          equ	983	;# 
 18734   0003D8                     ADCPCON         equ	984	;# 
 18735   0003D8                     ADCP            equ	984	;# 
 18736   0003D9                     ADLTH           equ	985	;# 
 18737   0003D9                     ADLTHL          equ	985	;# 
 18738   0003DA                     ADLTHH          equ	986	;# 
 18739   0003DB                     ADUTH           equ	987	;# 
 18740   0003DB                     ADUTHL          equ	987	;# 
 18741   0003DC                     ADUTHH          equ	988	;# 
 18742   0003DD                     ADERR           equ	989	;# 
 18743   0003DD                     ADERRL          equ	989	;# 
 18744   0003DE                     ADERRH          equ	990	;# 
 18745   0003DF                     ADSTPT          equ	991	;# 
 18746   0003DF                     ADSTPTL         equ	991	;# 
 18747   0003E0                     ADSTPTH         equ	992	;# 
 18748   0003E1                     ADFLTR          equ	993	;# 
 18749   0003E1                     ADFLTRL         equ	993	;# 
 18750   0003E2                     ADFLTRH         equ	994	;# 
 18751   0003E3                     ADACC           equ	995	;# 
 18752   0003E3                     ADACCL          equ	995	;# 
 18753   0003E4                     ADACCH          equ	996	;# 
 18754   0003E5                     ADACCU          equ	997	;# 
 18755   0003E6                     ADCNT           equ	998	;# 
 18756   0003E7                     ADRPT           equ	999	;# 
 18757   0003E8                     ADPREV          equ	1000	;# 
 18758   0003E8                     ADPREVL         equ	1000	;# 
 18759   0003E9                     ADPREVH         equ	1001	;# 
 18760   0003EA                     ADRES           equ	1002	;# 
 18761   0003EA                     ADRESL          equ	1002	;# 
 18762   0003EB                     ADRESH          equ	1003	;# 
 18763   0003EC                     ADPCH           equ	1004	;# 
 18764   0003EE                     ADACQ           equ	1006	;# 
 18765   0003EE                     ADACQL          equ	1006	;# 
 18766   0003EF                     ADACQH          equ	1007	;# 
 18767   0003F0                     ADCAP           equ	1008	;# 
 18768   0003F1                     ADPRE           equ	1009	;# 
 18769   0003F1                     ADPREL          equ	1009	;# 
 18770   0003F2                     ADPREH          equ	1010	;# 
 18771   0003F3                     ADCON0          equ	1011	;# 
 18772   0003F4                     ADCON1          equ	1012	;# 
 18773   0003F5                     ADCON2          equ	1013	;# 
 18774   0003F6                     ADCON3          equ	1014	;# 
 18775   0003F7                     ADSTAT          equ	1015	;# 
 18776   0003F8                     ADREF           equ	1016	;# 
 18777   0003F9                     ADACT           equ	1017	;# 
 18778   0003FA                     ADCLK           equ	1018	;# 
 18779   0003FB                     ADCTX           equ	1019	;# 
 18780   0003FC                     ADCSEL1         equ	1020	;# 
 18781   0003FD                     ADCSEL2         equ	1021	;# 
 18782   0003FE                     ADCSEL3         equ	1022	;# 
 18783   0003FF                     ADCSEL4         equ	1023	;# 
 18784   000400                     ANSELA          equ	1024	;# 
 18785   000401                     WPUA            equ	1025	;# 
 18786   000402                     ODCONA          equ	1026	;# 
 18787   000403                     SLRCONA         equ	1027	;# 
 18788   000404                     INLVLA          equ	1028	;# 
 18789   000405                     IOCAP           equ	1029	;# 
 18790   000406                     IOCAN           equ	1030	;# 
 18791   000407                     IOCAF           equ	1031	;# 
 18792   000408                     ANSELB          equ	1032	;# 
 18793   000409                     WPUB            equ	1033	;# 
 18794   00040A                     ODCONB          equ	1034	;# 
 18795   00040B                     SLRCONB         equ	1035	;# 
 18796   00040C                     INLVLB          equ	1036	;# 
 18797   00040D                     IOCBP           equ	1037	;# 
 18798   00040E                     IOCBN           equ	1038	;# 
 18799   00040F                     IOCBF           equ	1039	;# 
 18800   000410                     ANSELC          equ	1040	;# 
 18801   000411                     WPUC            equ	1041	;# 
 18802   000412                     ODCONC          equ	1042	;# 
 18803   000413                     SLRCONC         equ	1043	;# 
 18804   000414                     INLVLC          equ	1044	;# 
 18805   000415                     IOCCP           equ	1045	;# 
 18806   000416                     IOCCN           equ	1046	;# 
 18807   000417                     IOCCF           equ	1047	;# 
 18808   000421                     WPUE            equ	1057	;# 
 18809   000424                     INLVLE          equ	1060	;# 
 18810   000425                     IOCEP           equ	1061	;# 
 18811   000426                     IOCEN           equ	1062	;# 
 18812   000427                     IOCEF           equ	1063	;# 
 18813   000440                     NCO1ACC         equ	1088	;# 
 18814   000440                     NCO1ACCL        equ	1088	;# 
 18815   000441                     NCO1ACCH        equ	1089	;# 
 18816   000442                     NCO1ACCU        equ	1090	;# 
 18817   000443                     NCO1INC         equ	1091	;# 
 18818   000443                     NCO1INCL        equ	1091	;# 
 18819   000444                     NCO1INCH        equ	1092	;# 
 18820   000445                     NCO1INCU        equ	1093	;# 
 18821   000446                     NCO1CON         equ	1094	;# 
 18822   000447                     NCO1CLK         equ	1095	;# 
 18823   000448                     NCO2ACC         equ	1096	;# 
 18824   000448                     NCO2ACCL        equ	1096	;# 
 18825   000449                     NCO2ACCH        equ	1097	;# 
 18826   00044A                     NCO2ACCU        equ	1098	;# 
 18827   00044B                     NCO2INC         equ	1099	;# 
 18828   00044B                     NCO2INCL        equ	1099	;# 
 18829   00044C                     NCO2INCH        equ	1100	;# 
 18830   00044D                     NCO2INCU        equ	1101	;# 
 18831   00044E                     NCO2CON         equ	1102	;# 
 18832   00044F                     NCO2CLK         equ	1103	;# 
 18833   000450                     NCO3ACC         equ	1104	;# 
 18834   000450                     NCO3ACCL        equ	1104	;# 
 18835   000451                     NCO3ACCH        equ	1105	;# 
 18836   000452                     NCO3ACCU        equ	1106	;# 
 18837   000453                     NCO3INC         equ	1107	;# 
 18838   000453                     NCO3INCL        equ	1107	;# 
 18839   000454                     NCO3INCH        equ	1108	;# 
 18840   000455                     NCO3INCU        equ	1109	;# 
 18841   000456                     NCO3CON         equ	1110	;# 
 18842   000457                     NCO3CLK         equ	1111	;# 
 18843   000458                     FSCMCON         equ	1112	;# 
 18844   000459                     IVTLOCK         equ	1113	;# 
 18845   00045A                     IVTAD           equ	1114	;# 
 18846   00045A                     IVTADL          equ	1114	;# 
 18847   00045B                     IVTADH          equ	1115	;# 
 18848   00045C                     IVTADU          equ	1116	;# 
 18849   00045D                     IVTBASE         equ	1117	;# 
 18850   00045D                     IVTBASEL        equ	1117	;# 
 18851   00045E                     IVTBASEH        equ	1118	;# 
 18852   00045F                     IVTBASEU        equ	1119	;# 
 18853   000460                     PWM1ERS         equ	1120	;# 
 18854   000461                     PWM1CLK         equ	1121	;# 
 18855   000462                     PWM1LDS         equ	1122	;# 
 18856   000463                     PWM1PR          equ	1123	;# 
 18857   000463                     PWM1PRL         equ	1123	;# 
 18858   000464                     PWM1PRH         equ	1124	;# 
 18859   000465                     PWM1CPRE        equ	1125	;# 
 18860   000466                     PWM1PIPOS       equ	1126	;# 
 18861   000467                     PWM1GIR         equ	1127	;# 
 18862   000468                     PWM1GIE         equ	1128	;# 
 18863   000469                     PWM1CON         equ	1129	;# 
 18864   00046A                     PWM1S1CFG       equ	1130	;# 
 18865   00046B                     PWM1S1P1        equ	1131	;# 
 18866   00046B                     PWM1S1P1L       equ	1131	;# 
 18867   00046C                     PWM1S1P1H       equ	1132	;# 
 18868   00046D                     PWM1S1P2        equ	1133	;# 
 18869   00046D                     PWM1S1P2L       equ	1133	;# 
 18870   00046E                     PWM1S1P2H       equ	1134	;# 
 18871   00046F                     PWM2ERS         equ	1135	;# 
 18872   000470                     PWM2CLK         equ	1136	;# 
 18873   000471                     PWM2LDS         equ	1137	;# 
 18874   000472                     PWM2PR          equ	1138	;# 
 18875   000472                     PWM2PRL         equ	1138	;# 
 18876   000473                     PWM2PRH         equ	1139	;# 
 18877   000474                     PWM2CPRE        equ	1140	;# 
 18878   000475                     PWM2PIPOS       equ	1141	;# 
 18879   000476                     PWM2GIR         equ	1142	;# 
 18880   000477                     PWM2GIE         equ	1143	;# 
 18881   000478                     PWM2CON         equ	1144	;# 
 18882   000479                     PWM2S1CFG       equ	1145	;# 
 18883   00047A                     PWM2S1P1        equ	1146	;# 
 18884   00047A                     PWM2S1P1L       equ	1146	;# 
 18885   00047B                     PWM2S1P1H       equ	1147	;# 
 18886   00047C                     PWM2S1P2        equ	1148	;# 
 18887   00047C                     PWM2S1P2L       equ	1148	;# 
 18888   00047D                     PWM2S1P2H       equ	1149	;# 
 18889   00047E                     PWM3ERS         equ	1150	;# 
 18890   00047F                     PWM3CLK         equ	1151	;# 
 18891   000480                     PWM3LDS         equ	1152	;# 
 18892   000481                     PWM3PR          equ	1153	;# 
 18893   000481                     PWM3PRL         equ	1153	;# 
 18894   000482                     PWM3PRH         equ	1154	;# 
 18895   000483                     PWM3CPRE        equ	1155	;# 
 18896   000484                     PWM3PIPOS       equ	1156	;# 
 18897   000485                     PWM3GIR         equ	1157	;# 
 18898   000486                     PWM3GIE         equ	1158	;# 
 18899   000487                     PWM3CON         equ	1159	;# 
 18900   000488                     PWM3S1CFG       equ	1160	;# 
 18901   000489                     PWM3S1P1        equ	1161	;# 
 18902   000489                     PWM3S1P1L       equ	1161	;# 
 18903   00048A                     PWM3S1P1H       equ	1162	;# 
 18904   00048B                     PWM3S1P2        equ	1163	;# 
 18905   00048B                     PWM3S1P2L       equ	1163	;# 
 18906   00048C                     PWM3S1P2H       equ	1164	;# 
 18907   00048D                     PWM4ERS         equ	1165	;# 
 18908   00048E                     PWM4CLK         equ	1166	;# 
 18909   00048F                     PWM4LDS         equ	1167	;# 
 18910   000490                     PWM4PR          equ	1168	;# 
 18911   000490                     PWM4PRL         equ	1168	;# 
 18912   000491                     PWM4PRH         equ	1169	;# 
 18913   000492                     PWM4CPRE        equ	1170	;# 
 18914   000493                     PWM4PIPOS       equ	1171	;# 
 18915   000494                     PWM4GIR         equ	1172	;# 
 18916   000495                     PWM4GIE         equ	1173	;# 
 18917   000496                     PWM4CON         equ	1174	;# 
 18918   000497                     PWM4S1CFG       equ	1175	;# 
 18919   000498                     PWM4S1P1        equ	1176	;# 
 18920   000498                     PWM4S1P1L       equ	1176	;# 
 18921   000499                     PWM4S1P1H       equ	1177	;# 
 18922   00049A                     PWM4S1P2        equ	1178	;# 
 18923   00049A                     PWM4S1P2L       equ	1178	;# 
 18924   00049B                     PWM4S1P2H       equ	1179	;# 
 18925   00049C                     PWMLOAD         equ	1180	;# 
 18926   00049D                     PWMEN           equ	1181	;# 
 18927   00049E                     PIE0            equ	1182	;# 
 18928   00049F                     PIE1            equ	1183	;# 
 18929   0004A0                     PIE2            equ	1184	;# 
 18930   0004A1                     PIE3            equ	1185	;# 
 18931   0004A2                     PIE4            equ	1186	;# 
 18932   0004A3                     PIE5            equ	1187	;# 
 18933   0004A4                     PIE6            equ	1188	;# 
 18934   0004A5                     PIE7            equ	1189	;# 
 18935   0004A6                     PIE8            equ	1190	;# 
 18936   0004A7                     PIE9            equ	1191	;# 
 18937   0004A8                     PIE10           equ	1192	;# 
 18938   0004A9                     PIE11           equ	1193	;# 
 18939   0004AA                     PIE12           equ	1194	;# 
 18940   0004AB                     PIE13           equ	1195	;# 
 18941   0004AC                     PIE14           equ	1196	;# 
 18942   0004AD                     PIE15           equ	1197	;# 
 18943   0004AE                     PIR0            equ	1198	;# 
 18944   0004AF                     PIR1            equ	1199	;# 
 18945   0004B0                     PIR2            equ	1200	;# 
 18946   0004B1                     PIR3            equ	1201	;# 
 18947   0004B2                     PIR4            equ	1202	;# 
 18948   0004B3                     PIR5            equ	1203	;# 
 18949   0004B4                     PIR6            equ	1204	;# 
 18950   0004B5                     PIR7            equ	1205	;# 
 18951   0004B6                     PIR8            equ	1206	;# 
 18952   0004B7                     PIR9            equ	1207	;# 
 18953   0004B8                     PIR10           equ	1208	;# 
 18954   0004B9                     PIR11           equ	1209	;# 
 18955   0004BA                     PIR12           equ	1210	;# 
 18956   0004BB                     PIR13           equ	1211	;# 
 18957   0004BC                     PIR14           equ	1212	;# 
 18958   0004BD                     PIR15           equ	1213	;# 
 18959   0004BE                     LATA            equ	1214	;# 
 18960   0004BF                     LATB            equ	1215	;# 
 18961   0004C0                     LATC            equ	1216	;# 
 18962   0004C6                     TRISA           equ	1222	;# 
 18963   0004C7                     TRISB           equ	1223	;# 
 18964   0004C8                     TRISC           equ	1224	;# 
 18965   0004CA                     TRISE           equ	1226	;# 
 18966   0004CE                     PORTA           equ	1230	;# 
 18967   0004CF                     PORTB           equ	1231	;# 
 18968   0004D0                     PORTC           equ	1232	;# 
 18969   0004D2                     PORTE           equ	1234	;# 
 18970   0004D6                     INTCON0         equ	1238	;# 
 18971   0004D7                     INTCON1         equ	1239	;# 
 18972   0004D8                     STATUS          equ	1240	;# 
 18973   0004D9                     FSR2            equ	1241	;# 
 18974   0004D9                     FSR2L           equ	1241	;# 
 18975   0004DA                     FSR2H           equ	1242	;# 
 18976   0004DB                     PLUSW2          equ	1243	;# 
 18977   0004DC                     PREINC2         equ	1244	;# 
 18978   0004DD                     POSTDEC2        equ	1245	;# 
 18979   0004DE                     POSTINC2        equ	1246	;# 
 18980   0004DF                     INDF2           equ	1247	;# 
 18981   0004E0                     BSR             equ	1248	;# 
 18982   0004E1                     FSR1            equ	1249	;# 
 18983   0004E1                     FSR1L           equ	1249	;# 
 18984   0004E2                     FSR1H           equ	1250	;# 
 18985   0004E3                     PLUSW1          equ	1251	;# 
 18986   0004E4                     PREINC1         equ	1252	;# 
 18987   0004E5                     POSTDEC1        equ	1253	;# 
 18988   0004E6                     POSTINC1        equ	1254	;# 
 18989   0004E7                     INDF1           equ	1255	;# 
 18990   0004E8                     WREG            equ	1256	;# 
 18991   0004E9                     FSR0            equ	1257	;# 
 18992   0004E9                     FSR0L           equ	1257	;# 
 18993   0004EA                     FSR0H           equ	1258	;# 
 18994   0004EB                     PLUSW0          equ	1259	;# 
 18995   0004EC                     PREINC0         equ	1260	;# 
 18996   0004ED                     POSTDEC0        equ	1261	;# 
 18997   0004EE                     POSTINC0        equ	1262	;# 
 18998   0004EF                     INDF0           equ	1263	;# 
 18999   0004F0                     PCON0           equ	1264	;# 
 19000   0004F1                     PCON1           equ	1265	;# 
 19001   0004F2                     CPUDOZE         equ	1266	;# 
 19002   0004F3                     PROD            equ	1267	;# 
 19003   0004F3                     PRODL           equ	1267	;# 
 19004   0004F4                     PRODH           equ	1268	;# 
 19005   0004F5                     TABLAT          equ	1269	;# 
 19006   0004F6                     TBLPTR          equ	1270	;# 
 19007   0004F6                     TBLPTRL         equ	1270	;# 
 19008   0004F7                     TBLPTRH         equ	1271	;# 
 19009   0004F8                     TBLPTRU         equ	1272	;# 
 19010   0004F9                     PCLAT           equ	1273	;# 
 19011   0004F9                     PCL             equ	1273	;# 
 19012   0004FA                     PCLATH          equ	1274	;# 
 19013   0004FB                     PCLATU          equ	1275	;# 
 19014   0004FC                     STKPTR          equ	1276	;# 
 19015   0004FD                     TOS             equ	1277	;# 
 19016   0004FD                     TOSL            equ	1277	;# 
 19017   0004FE                     TOSH            equ	1278	;# 
 19018   0004FF                     TOSU            equ	1279	;# 
 19019   3803FA                     	org	1018	;# 
 19020   3803FA  FF                 	db	255	;# 
 19021                           
 19022                           	psect	idataBANK5
 19023   008262                     __pidataBANK5:
 19024                           	callstack 0
 19025                           
 19026                           ;initializer for _flashBuffer
 19027   008262  00                 	db	0
 19028   008263  37                 	db	55
 19029                           
 19030                           	psect	mediumconst
 19031   00FE58                     __pmediumconst:
 19032                           	callstack 0
 19033   00FE58  00                 	db	0
 19034   00FE59                     _priorities:
 19035                           	callstack 0
 19036   00FE59  01                 	db	1
 19037   00FE5A  01                 	db	1
 19038   00FE5B  03                 	db	3
 19039   00FE5C  02                 	db	2
 19040   00FE5D  02                 	db	2
 19041   00FE5E  02                 	db	2
 19042   00FE5F  02                 	db	2
 19043   00FE60  03                 	db	3
 19044   00FE61  02                 	db	2
 19045   00FE62  02                 	db	2
 19046   00FE63  03                 	db	3
 19047   00FE64  01                 	db	1
 19048   00FE65  00                 	db	0
 19049   00FE66  00                 	db	0
 19050   00FE67  01                 	db	1
 19051   00FE68  01                 	db	1
 19052   00FE69  01                 	db	1
 19053   00FE6A  01                 	db	1
 19054   00FE6B  01                 	db	1
 19055   00FE6C  01                 	db	1
 19056   00FE6D  01                 	db	1
 19057   00FE6E  01                 	db	1
 19058   00FE6F  01                 	db	1
 19059   00FE70  01                 	db	1
 19060   00FE71  01                 	db	1
 19061   00FE72  01                 	db	1
 19062   00FE73  01                 	db	1
 19063   00FE74  01                 	db	1
 19064   00FE75  01                 	db	1
 19065   00FE76  01                 	db	1
 19066   00FE77  01                 	db	1
 19067   00FE78  01                 	db	1
 19068   00FE79  01                 	db	1
 19069   00FE7A  01                 	db	1
 19070   00FE7B  01                 	db	1
 19071   00FE7C  01                 	db	1
 19072   00FE7D  01                 	db	1
 19073   00FE7E  01                 	db	1
 19074   00FE7F  01                 	db	1
 19075   00FE80  01                 	db	1
 19076   00FE81  01                 	db	1
 19077   00FE82  01                 	db	1
 19078   00FE83  01                 	db	1
 19079   00FE84  01                 	db	1
 19080   00FE85  01                 	db	1
 19081   00FE86  01                 	db	1
 19082   00FE87  01                 	db	1
 19083   00FE88  01                 	db	1
 19084   00FE89  01                 	db	1
 19085   00FE8A  01                 	db	1
 19086   00FE8B  01                 	db	1
 19087   00FE8C  01                 	db	1
 19088   00FE8D  01                 	db	1
 19089   00FE8E  01                 	db	1
 19090   00FE8F  01                 	db	1
 19091   00FE90  01                 	db	1
 19092   00FE91  01                 	db	1
 19093   00FE92  01                 	db	1
 19094   00FE93  01                 	db	1
 19095   00FE94  01                 	db	1
 19096   00FE95  01                 	db	1
 19097   00FE96  01                 	db	1
 19098   00FE97  01                 	db	1
 19099   00FE98  00                 	db	0
 19100   00FE99  01                 	db	1
 19101   00FE9A  01                 	db	1
 19102   00FE9B  01                 	db	1
 19103   00FE9C  01                 	db	1
 19104   00FE9D  01                 	db	1
 19105   00FE9E  01                 	db	1
 19106   00FE9F  01                 	db	1
 19107   00FEA0  01                 	db	1
 19108   00FEA1  01                 	db	1
 19109   00FEA2  00                 	db	0
 19110   00FEA3  01                 	db	1
 19111   00FEA4  01                 	db	1
 19112   00FEA5  00                 	db	0
 19113   00FEA6  00                 	db	0
 19114   00FEA7  00                 	db	0
 19115   00FEA8  00                 	db	0
 19116   00FEA9  00                 	db	0
 19117   00FEAA  00                 	db	0
 19118   00FEAB  00                 	db	0
 19119   00FEAC  00                 	db	0
 19120   00FEAD  00                 	db	0
 19121   00FEAE  00                 	db	0
 19122   00FEAF  00                 	db	0
 19123   00FEB0  00                 	db	0
 19124   00FEB1  00                 	db	0
 19125   00FEB2  00                 	db	0
 19126   00FEB3  00                 	db	0
 19127   00FEB4  00                 	db	0
 19128   00FEB5  00                 	db	0
 19129   00FEB6  01                 	db	1
 19130   00FEB7  01                 	db	1
 19131   00FEB8  01                 	db	1
 19132   00FEB9  01                 	db	1
 19133   00FEBA  01                 	db	1
 19134   00FEBB  03                 	db	3
 19135   00FEBC  01                 	db	1
 19136   00FEBD  01                 	db	1
 19137   00FEBE  01                 	db	1
 19138   00FEBF  01                 	db	1
 19139   00FEC0  01                 	db	1
 19140   00FEC1  01                 	db	1
 19141   00FEC2  01                 	db	1
 19142   00FEC3  01                 	db	1
 19143   00FEC4  00                 	db	0
 19144   00FEC5  00                 	db	0
 19145   00FEC6  00                 	db	0
 19146   00FEC7  00                 	db	0
 19147   00FEC8  00                 	db	0
 19148   00FEC9  00                 	db	0
 19149   00FECA  00                 	db	0
 19150   00FECB  00                 	db	0
 19151   00FECC  01                 	db	1
 19152   00FECD  00                 	db	0
 19153   00FECE  01                 	db	1
 19154   00FECF  01                 	db	1
 19155   00FED0  01                 	db	1
 19156   00FED1  01                 	db	1
 19157   00FED2  01                 	db	1
 19158   00FED3  01                 	db	1
 19159   00FED4  00                 	db	0
 19160   00FED5  01                 	db	1
 19161   00FED6  01                 	db	1
 19162   00FED7  01                 	db	1
 19163   00FED8  01                 	db	1
 19164   00FED9  01                 	db	1
 19165   00FEDA  01                 	db	1
 19166   00FEDB  01                 	db	1
 19167   00FEDC  00                 	db	0
 19168   00FEDD  01                 	db	1
 19169   00FEDE  01                 	db	1
 19170   00FEDF  01                 	db	1
 19171   00FEE0  01                 	db	1
 19172   00FEE1  01                 	db	1
 19173   00FEE2  01                 	db	1
 19174   00FEE3  00                 	db	0
 19175   00FEE4  01                 	db	1
 19176   00FEE5  00                 	db	0
 19177   00FEE6  00                 	db	0
 19178   00FEE7  00                 	db	0
 19179   00FEE8  00                 	db	0
 19180   00FEE9  00                 	db	0
 19181   00FEEA  00                 	db	0
 19182   00FEEB  00                 	db	0
 19183   00FEEC  00                 	db	0
 19184   00FEED  00                 	db	0
 19185   00FEEE  00                 	db	0
 19186   00FEEF  00                 	db	0
 19187   00FEF0  00                 	db	0
 19188   00FEF1  00                 	db	0
 19189   00FEF2  00                 	db	0
 19190   00FEF3  00                 	db	0
 19191   00FEF4  00                 	db	0
 19192   00FEF5  01                 	db	1
 19193   00FEF6  01                 	db	1
 19194   00FEF7  01                 	db	1
 19195   00FEF8  01                 	db	1
 19196   00FEF9  01                 	db	1
 19197   00FEFA  01                 	db	1
 19198   00FEFB  01                 	db	1
 19199   00FEFC  01                 	db	1
 19200   00FEFD  01                 	db	1
 19201   00FEFE  01                 	db	1
 19202   00FEFF  01                 	db	1
 19203   00FF00  00                 	db	0
 19204   00FF01  00                 	db	0
 19205   00FF02  01                 	db	1
 19206   00FF03  01                 	db	1
 19207   00FF04  00                 	db	0
 19208   00FF05  00                 	db	0
 19209   00FF06  00                 	db	0
 19210   00FF07  00                 	db	0
 19211   00FF08  00                 	db	0
 19212   00FF09  00                 	db	0
 19213   00FF0A  00                 	db	0
 19214   00FF0B  00                 	db	0
 19215   00FF0C  01                 	db	1
 19216   00FF0D  00                 	db	0
 19217   00FF0E  00                 	db	0
 19218   00FF0F  01                 	db	1
 19219   00FF10  01                 	db	1
 19220   00FF11  01                 	db	1
 19221   00FF12  00                 	db	0
 19222   00FF13  00                 	db	0
 19223   00FF14  00                 	db	0
 19224   00FF15  01                 	db	1
 19225   00FF16  01                 	db	1
 19226   00FF17  01                 	db	1
 19227   00FF18  01                 	db	1
 19228   00FF19  01                 	db	1
 19229   00FF1A  01                 	db	1
 19230   00FF1B  01                 	db	1
 19231   00FF1C  00                 	db	0
 19232   00FF1D  01                 	db	1
 19233   00FF1E  01                 	db	1
 19234   00FF1F  01                 	db	1
 19235   00FF20  01                 	db	1
 19236   00FF21  01                 	db	1
 19237   00FF22  01                 	db	1
 19238   00FF23  01                 	db	1
 19239   00FF24  01                 	db	1
 19240   00FF25  00                 	db	0
 19241   00FF26  00                 	db	0
 19242   00FF27  00                 	db	0
 19243   00FF28  00                 	db	0
 19244   00FF29  00                 	db	0
 19245   00FF2A  00                 	db	0
 19246   00FF2B  01                 	db	1
 19247   00FF2C  01                 	db	1
 19248   00FF2D  00                 	db	0
 19249   00FF2E  00                 	db	0
 19250   00FF2F  01                 	db	1
 19251   00FF30  01                 	db	1
 19252   00FF31  01                 	db	1
 19253   00FF32  00                 	db	0
 19254   00FF33  00                 	db	0
 19255   00FF34  00                 	db	0
 19256   00FF35  01                 	db	1
 19257   00FF36  01                 	db	1
 19258   00FF37  00                 	db	0
 19259   00FF38  01                 	db	1
 19260   00FF39  01                 	db	1
 19261   00FF3A  01                 	db	1
 19262   00FF3B  00                 	db	0
 19263   00FF3C  00                 	db	0
 19264   00FF3D  01                 	db	1
 19265   00FF3E  00                 	db	0
 19266   00FF3F  01                 	db	1
 19267   00FF40  01                 	db	1
 19268   00FF41  01                 	db	1
 19269   00FF42  01                 	db	1
 19270   00FF43  01                 	db	1
 19271   00FF44  00                 	db	0
 19272   00FF45  00                 	db	0
 19273   00FF46  00                 	db	0
 19274   00FF47  00                 	db	0
 19275   00FF48  00                 	db	0
 19276   00FF49  00                 	db	0
 19277   00FF4A  00                 	db	0
 19278   00FF4B  00                 	db	0
 19279   00FF4C  00                 	db	0
 19280   00FF4D  00                 	db	0
 19281   00FF4E  00                 	db	0
 19282   00FF4F  00                 	db	0
 19283   00FF50  00                 	db	0
 19284   00FF51  00                 	db	0
 19285   00FF52  00                 	db	0
 19286   00FF53  01                 	db	1
 19287   00FF54  00                 	db	0
 19288   00FF55  00                 	db	0
 19289   00FF56  00                 	db	0
 19290   00FF57  00                 	db	0
 19291   00FF58  00                 	db	0
 19292   00FF59                     __end_of_priorities:
 19293                           	callstack 0
 19294   00FF59                     _defaultColours:
 19295                           	callstack 0
 19296   00FF59  00                 	db	0
 19297   00FF5A  00                 	db	0
 19298   00FF5B  00                 	db	0
 19299   00FF5C  07                 	db	7
 19300   00FF5D  07                 	db	7
 19301   00FF5E  07                 	db	7
 19302   00FF5F  07                 	db	7
 19303   00FF60  00                 	db	0
 19304   00FF61  00                 	db	0
 19305   00FF62  00                 	db	0
 19306   00FF63  07                 	db	7
 19307   00FF64  00                 	db	0
 19308   00FF65  00                 	db	0
 19309   00FF66  00                 	db	0
 19310   00FF67  07                 	db	7
 19311   00FF68  3F                 	db	63
 19312   00FF69  1F                 	db	31
 19313   00FF6A  00                 	db	0
 19314   00FF6B  27                 	db	39
 19315   00FF6C  00                 	db	0
 19316   00FF6D  27                 	db	39
 19317   00FF6E  00                 	db	0
 19318   00FF6F  27                 	db	39
 19319   00FF70  27                 	db	39
 19320   00FF71  0F                 	db	15
 19321   00FF72  0F                 	db	15
 19322   00FF73  0F                 	db	15
 19323   00FF74  FF                 	db	255
 19324   00FF75  00                 	db	0
 19325   00FF76  00                 	db	0
 19326   00FF77  00                 	db	0
 19327   00FF78  FF                 	db	255
 19328   00FF79  00                 	db	0
 19329   00FF7A  00                 	db	0
 19330   00FF7B  00                 	db	0
 19331   00FF7C  FF                 	db	255
 19332   00FF7D  FF                 	db	255
 19333   00FF7E  FF                 	db	255
 19334   00FF7F  00                 	db	0
 19335   00FF80  FF                 	db	255
 19336   00FF81  00                 	db	0
 19337   00FF82  FF                 	db	255
 19338   00FF83  00                 	db	0
 19339   00FF84  FF                 	db	255
 19340   00FF85  FF                 	db	255
 19341   00FF86  FF                 	db	255
 19342   00FF87  FF                 	db	255
 19343   00FF88  FF                 	db	255
 19344   00FF89                     __end_of_defaultColours:
 19345                           	callstack 0
 19346   000820                     _paramBlock_absaddr set	2080
 19347   00FF89                     _services:
 19348                           	callstack 0
 19349   00FF89  EB                 	db	low _canService
 19350   00FF8A  FF                 	db	high _canService
 19351   00FF8B  DD                 	db	low _mnsService
 19352   00FF8C  FF                 	db	high _mnsService
 19353   00FF8D  CF                 	db	low _nvService
 19354   00FF8E  FF                 	db	high _nvService
 19355   00FF8F  C1                 	db	low _bootService
 19356   00FF90  FF                 	db	high _bootService
 19357   00FF91  B3                 	db	low _eventTeachService
 19358   00FF92  FF                 	db	high _eventTeachService
 19359   00FF93  A5                 	db	low _eventConsumerService
 19360   00FF94  FF                 	db	high _eventConsumerService
 19361   00FF95                     __end_of_services:
 19362                           	callstack 0
 19363   00FF95                     _bl_version:
 19364                           	callstack 0
 19365   00FF95  42                 	db	66
 19366   00FF96  4C                 	db	76
 19367   00FF97  5F                 	db	95
 19368   00FF98  56                 	db	86
 19369   00FF99  45                 	db	69
 19370   00FF9A  52                 	db	82
 19371   00FF9B  53                 	db	83
 19372   00FF9C  49                 	db	73
 19373   00FF9D  4F                 	db	79
 19374   00FF9E  4E                 	db	78
 19375   00FF9F  3D                 	db	61
 19376   00FFA0                     __end_of_bl_version:
 19377                           	callstack 0
 19378   000848                     _name_absaddr   set	2120
 19379   00FFA0                     _canPri:
 19380                           	callstack 0
 19381   00FFA0  0B                 	db	11
 19382   00FFA1  0A                 	db	10
 19383   00FFA2  09                 	db	9
 19384   00FFA3  08                 	db	8
 19385   00FFA4  00                 	db	0
 19386   00FFA5                     __end_of_canPri:
 19387                           	callstack 0
 19388   00FFA5                     _eventConsumerService:
 19389                           	callstack 0
 19390   00FFA5  06                 	db	6
 19391   00FFA6  02                 	db	2
 19392   00FFA7  00                 	db	0
 19393   00FFA8  00                 	db	0
 19394   00FFA9  94                 	db	low _consumerPowerUp
 19395   00FFAA  7C                 	db	high _consumerPowerUp
 19396   00FFAB  B8                 	db	low _consumerProcessMessage
 19397   00FFAC  3C                 	db	high _consumerProcessMessage
 19398   00FFAD  00                 	db	0
 19399   00FFAE  00                 	db	0
 19400   00FFAF  40                 	db	low _consumerEsdData
 19401   00FFB0  81                 	db	high _consumerEsdData
 19402   00FFB1  94                 	db	low _consumerGetDiagnostic
 19403   00FFB2  7E                 	db	high _consumerGetDiagnostic
 19404   00FFB3                     __end_of_eventConsumerService:
 19405                           	callstack 0
 19406   00FFB3                     _eventTeachService:
 19407                           	callstack 0
 19408   00FFB3  04                 	db	4
 19409   00FFB4  01                 	db	1
 19410   00FFB5  3C                 	db	low _teachFactoryReset
 19411   00FFB6  82                 	db	high _teachFactoryReset
 19412   00FFB7  1C                 	db	low _teachPowerUp
 19413   00FFB8  7C                 	db	high _teachPowerUp
 19414   00FFB9  F8                 	db	low _teachProcessMessage
 19415   00FFBA  16                 	db	high _teachProcessMessage
 19416   00FFBB  00                 	db	0
 19417   00FFBC  00                 	db	0
 19418   00FFBD  04                 	db	low _teachGetESDdata
 19419   00FFBE  7E                 	db	high _teachGetESDdata
 19420   00FFBF  C4                 	db	low _teachGetDiagnostic
 19421   00FFC0  7E                 	db	high _teachGetDiagnostic
 19422   00FFC1                     __end_of_eventTeachService:
 19423                           	callstack 0
 19424   00FFC1                     _bootService:
 19425                           	callstack 0
 19426   00FFC1  0A                 	db	10
 19427   00FFC2  03                 	db	3
 19428   00FFC3  00                 	db	0
 19429   00FFC4  00                 	db	0
 19430   00FFC5  F8                 	db	low _bootPowerUp
 19431   00FFC6  5A                 	db	high _bootPowerUp
 19432   00FFC7  96                 	db	low _bootProcessMessage
 19433   00FFC8  6A                 	db	high _bootProcessMessage
 19434   00FFC9  00                 	db	0
 19435   00FFCA  00                 	db	0
 19436   00FFCB  9C                 	db	low _bootEsdData
 19437   00FFCC  7D                 	db	high _bootEsdData
 19438   00FFCD  00                 	db	0
 19439   00FFCE  00                 	db	0
 19440   00FFCF                     __end_of_bootService:
 19441                           	callstack 0
 19442   00FFCF                     _nvService:
 19443                           	callstack 0
 19444   00FFCF  02                 	db	2
 19445   00FFD0  02                 	db	2
 19446   00FFD1  DC                 	db	low _nvFactoryReset
 19447   00FFD2  7B                 	db	high _nvFactoryReset
 19448   00FFD3  5A                 	db	low _nvPowerUp
 19449   00FFD4  7C                 	db	high _nvPowerUp
 19450   00FFD5  98                 	db	low _nvProcessMessage
 19451   00FFD6  32                 	db	high _nvProcessMessage
 19452   00FFD7  00                 	db	0
 19453   00FFD8  00                 	db	0
 19454   00FFD9  BE                 	db	low _nvGetESDdata
 19455   00FFDA  80                 	db	high _nvGetESDdata
 19456   00FFDB  34                 	db	low _nvGetDiagnostic
 19457   00FFDC  7E                 	db	high _nvGetDiagnostic
 19458   00FFDD                     __end_of_nvService:
 19459                           	callstack 0
 19460   00FFDD                     _mnsService:
 19461                           	callstack 0
 19462   00FFDD  01                 	db	1
 19463   00FFDE  02                 	db	2
 19464   00FFDF  22                 	db	low _mnsFactoryReset
 19465   00FFE0  75                 	db	high _mnsFactoryReset
 19466   00FFE1  12                 	db	low _mnsPowerUp
 19467   00FFE2  4E                 	db	high _mnsPowerUp
 19468   00FFE3  06                 	db	low _mnsProcessMessage
 19469   00FFE4  0A                 	db	high _mnsProcessMessage
 19470   00FFE5  00                 	db	low _mnsPoll
 19471   00FFE6  26                 	db	high _mnsPoll
 19472   00FFE7  00                 	db	0
 19473   00FFE8  00                 	db	0
 19474   00FFE9  64                 	db	low _mnsGetDiagnostic
 19475   00FFEA  7E                 	db	high _mnsGetDiagnostic
 19476   00FFEB                     __end_of_mnsService:
 19477                           	callstack 0
 19478   00FFEB                     _canService:
 19479                           	callstack 0
 19480   00FFEB  03                 	db	3
 19481   00FFEC  02                 	db	2
 19482   00FFED  5C                 	db	low _canFactoryReset
 19483   00FFEE  81                 	db	high _canFactoryReset
 19484   00FFEF  A0                 	db	low _canPowerUp
 19485   00FFF0  4C                 	db	high _canPowerUp
 19486   00FFF1  E0                 	db	low _canProcessMessage
 19487   00FFF2  5B                 	db	high _canProcessMessage
 19488   00FFF3  36                 	db	low _canPoll
 19489   00FFF4  82                 	db	high _canPoll
 19490   00FFF5  E0                 	db	low _canEsdData
 19491   00FFF6  80                 	db	high _canEsdData
 19492   00FFF7  F0                 	db	low _canGetDiagnostic
 19493   00FFF8  64                 	db	high _canGetDiagnostic
 19494   00FFF9                     __end_of_canService:
 19495                           	callstack 0
 19496   00FFF9                     _canTransport:
 19497                           	callstack 0
 19498   00FFF9  9E                 	db	low _canSendMessage
 19499   00FFFA  2A                 	db	high _canSendMessage
 19500   00FFFB  3E                 	db	low _canReceiveMessage
 19501   00FFFC  42                 	db	high _canReceiveMessage
 19502   00FFFD  EE                 	db	low _canWaitForTxQueueToDrain
 19503   00FFFE  81                 	db	high _canWaitForTxQueueToDrain
 19504   00FFFF                     __end_of_canTransport:
 19505                           	callstack 0
 19506   000820                     _paramBlock_absaddr set	2080
 19507   00FFFF  00                 	db	0	; dummy byte at the end
 19508   00FE58                     __smallconst    set	__pmediumconst
 19509   00FE58                     __mediumconst   set	__pmediumconst
 19510   000003                     __activetblptr  equ	3
 19511                           
 19512                           	psect	_paramBlock_text
 19513   000820                     __p_paramBlock_text:
 19514                           	callstack 0
 19515   000820                     _paramBlock:
 19516                           	callstack 0
 19517   000820  A5                 	db	165
 19518   000821  61                 	db	97
 19519   000822  57                 	db	87
 19520   000823  FF                 	db	255
 19521   000824  FC                 	db	252
 19522   000825  31                 	db	49
 19523   000826  01                 	db	1
 19524   000827  09                 	db	9
 19525   000828  17                 	db	23
 19526   000829  01                 	db	1
 19527   00082A  00                 	db	0
 19528   00082B  08                 	db	8
 19529   00082C  00                 	db	0
 19530   00082D  00                 	db	0
 19531   00082E  00                 	db	0
 19532   00082F  00                 	db	0
 19533   000830  00                 	db	0
 19534   000831  00                 	db	0
 19535   000832  01                 	db	1
 19536   000833  01                 	db	1
 19537   000834  00                 	db	0
 19538   000835  00                 	db	0
 19539   000836  00                 	db	0
 19540   000837  00                 	db	0
 19541   000838  14                 	db	20
 19542   000839  00                 	db	0
 19543   00083A  48                 	db	72
 19544   00083B  08                 	db	8
 19545   00083C  00                 	db	0
 19546   00083D  00                 	db	0
 19547   00083E  19                 	db	25
 19548   00083F  04                 	db	4
 19549   000840                     __end_of_paramBlock:
 19550                           	callstack 0
 19551   000848                     _name_absaddr   set	2120
 19552                           
 19553                           	psect	_name_text
 19554   000848                     __p_name_text:
 19555                           	callstack 0
 19556   000848                     _name:
 19557                           	callstack 0
 19558   000848  41                 	db	65
 19559   000849  52                 	db	82
 19560   00084A  47                 	db	71
 19561   00084B  42                 	db	66
 19562   00084C  20                 	db	32
 19563   00084D  20                 	db	32
 19564   00084E  20                 	db	32
 19565   00084F  00                 	db	0
 19566   000850                     __end_of_name:
 19567                           	callstack 0
 19568   000043                     _NVMADR         set	67
 19569   0000F9                     _DMAnSSA        set	249
 19570   0000F0                     _DMAnDSA        set	240
 19571   0000EE                     _DMAnDSZ        set	238
 19572   0000F7                     _DMAnSSZ        set	247
 19573   000082                     _SPI1TCNT       set	130
 19574   0000AF                     _OSCCON3bits    set	175
 19575   0000AD                     _OSCCON1bits    set	173
 19576   000042                     _NVMLOCK        set	66
 19577   000046                     _NVMDATL        set	70
 19578   000043                     _NVMADRL        set	67
 19579   000044                     _NVMADRH        set	68
 19580   000045                     _NVMADRU        set	69
 19581   000040                     _NVMCON0bits    set	64
 19582   000041                     _NVMCON1bits    set	65
 19583   00006A                     _MD1CON0bits    set	106
 19584   0000B4                     _PRLOCKbits     set	180
 19585   0000B4                     _PRLOCK         set	180
 19586   0000B6                     _DMA1PR         set	182
 19587   0000FE                     _DMAnAIRQ       set	254
 19588   0000FF                     _DMAnSIRQ       set	255
 19589   0000FD                     _DMAnCON1bits   set	253
 19590   0000E8                     _DMASELECT      set	232
 19591   00006C                     _MD1SRC         set	108
 19592   00006D                     _MD1CARL        set	109
 19593   00006E                     _MD1CARH        set	110
 19594   00006B                     _MD1CON1        set	107
 19595   00006A                     _MD1CON0        set	106
 19596   0000DF                     _CLCnGLS3       set	223
 19597   0000DE                     _CLCnGLS2       set	222
 19598   0000DD                     _CLCnGLS1       set	221
 19599   0000DC                     _CLCnGLS0       set	220
 19600   0000DB                     _CLCnSEL3       set	219
 19601   0000DA                     _CLCnSEL2       set	218
 19602   0000D9                     _CLCnSEL1       set	217
 19603   0000D8                     _CLCnSEL0       set	216
 19604   0000D7                     _CLCnPOL        set	215
 19605   0000D6                     _CLCnCON        set	214
 19606   0000D5                     _CLCSELECT      set	213
 19607   00008A                     _SPI1INTF       set	138
 19608   000089                     _SPI1BAUDbits   set	137
 19609   00008C                     _SPI1CLKbits    set	140
 19610   000086                     _SPI1CON2bits   set	134
 19611   000085                     _SPI1CON1bits   set	133
 19612   000088                     _SPI1TWIDTHbits set	136
 19613   000084                     _SPI1CON0bits   set	132
 19614   0000FC                     _DMAnCON0bits   set	252
 19615   000081                     _SPI1TXB        set	129
 19616   000158                     _C1TXQUA        set	344
 19617   00017C                     _C1FIFOUA3      set	380
 19618   000170                     _C1FIFOUA2      set	368
 19619   000164                     _C1FIFOUA1      set	356
 19620   00014C                     _C1FIFOBA       set	332
 19621   000102                     _C1CONUbits     set	258
 19622   000103                     _C1CONTbits     set	259
 19623   000175                     _C1FIFOCON3Hbits set	373
 19624   000179                     _C1FIFOSTA3Hbits set	377
 19625   00016D                     _C1FIFOSTA2Hbits set	365
 19626   00016C                     _C1FIFOSTA2Lbits set	364
 19627   000138                     _C1BDIAG0Lbits  set	312
 19628   000139                     _C1BDIAG0Hbits  set	313
 19629   000136                     _C1TRECU        set	310
 19630   000160                     _C1FIFOSTA1Lbits set	352
 19631   00015D                     _C1FIFOCON1Hbits set	349
 19632   00011D                     _C1INTHbits     set	285
 19633   000178                     _C1FIFOSTA3Lbits set	376
 19634   00011F                     _C1INTTbits     set	287
 19635   00011E                     _C1INTUbits     set	286
 19636   000180                     _C1FLTCON0L     set	384
 19637   000193                     _C1MASK0T       set	403
 19638   000192                     _C1MASK0U       set	402
 19639   000191                     _C1MASK0H       set	401
 19640   000190                     _C1MASK0L       set	400
 19641   00018F                     _C1FLTOBJ0T     set	399
 19642   00018E                     _C1FLTOBJ0U     set	398
 19643   00018D                     _C1FLTOBJ0H     set	397
 19644   00018C                     _C1FLTOBJ0L     set	396
 19645   000177                     _C1FIFOCON3T    set	375
 19646   000176                     _C1FIFOCON3U    set	374
 19647   000175                     _C1FIFOCON3H    set	373
 19648   000174                     _C1FIFOCON3L    set	372
 19649   00016B                     _C1FIFOCON2T    set	363
 19650   00016A                     _C1FIFOCON2U    set	362
 19651   000169                     _C1FIFOCON2H    set	361
 19652   000168                     _C1FIFOCON2L    set	360
 19653   00015F                     _C1FIFOCON1T    set	351
 19654   00015E                     _C1FIFOCON1U    set	350
 19655   00015D                     _C1FIFOCON1H    set	349
 19656   00015C                     _C1FIFOCON1L    set	348
 19657   000153                     _C1TXQCONT      set	339
 19658   000152                     _C1TXQCONU      set	338
 19659   000151                     _C1TXQCONH      set	337
 19660   000150                     _C1TXQCONL      set	336
 19661   000107                     _C1NBTCFGT      set	263
 19662   000106                     _C1NBTCFGU      set	262
 19663   000105                     _C1NBTCFGH      set	261
 19664   000104                     _C1NBTCFGL      set	260
 19665   000103                     _C1CONT         set	259
 19666   000102                     _C1CONU         set	258
 19667   000101                     _C1CONH         set	257
 19668   000100                     _C1CONL         set	256
 19669   000101                     _C1CONHbits     set	257
 19670   00023D                     _CANRXPPS       set	573
 19671   00020B                     _RB2PPS         set	523
 19672   000217                     _RC6PPS         set	535
 19673   000216                     _RC5PPS         set	534
 19674   000215                     _RC4PPS         set	533
 19675   000214                     _RC3PPS         set	532
 19676   000213                     _RC2PPS         set	531
 19677   000212                     _RC1PPS         set	530
 19678   000211                     _RC0PPS         set	529
 19679   000318                     _TMR0L          set	792
 19680   000319                     _TMR0H          set	793
 19681   00031A                     _T0CON0bits     set	794
 19682   00031B                     _T0CON1bits     set	795
 19683   000362                     _IPR0bits       set	866
 19684   000367                     _IPR5           set	871
 19685   000330                     _T4CONbits      set	816
 19686   000324                     _T2CONbits      set	804
 19687   00032F                     _T4PR           set	815
 19688   000333                     _T4RST          set	819
 19689   000331                     _T4HLT          set	817
 19690   000332                     _T4CLKCON       set	818
 19691   000330                     _T4CON          set	816
 19692   000323                     _T2PR           set	803
 19693   000327                     _T2RST          set	807
 19694   000325                     _T2HLT          set	805
 19695   000326                     _T2CLKCON       set	806
 19696   000324                     _T2CON          set	804
 19697   001B2F                     _TMR0IP         set	6959
 19698   00250F                     _TMR0IE         set	9487
 19699   00258F                     _TMR0IF         set	9615
 19700   000459                     _IVTLOCKbits    set	1113
 19701   000459                     _IVTLOCK        set	1113
 19702   00045D                     _IVTBASEL       set	1117
 19703   00045E                     _IVTBASEH       set	1118
 19704   00045F                     _IVTBASEU       set	1119
 19705   0004BF                     _LATBbits       set	1215
 19706   0004C6                     _TRISAbits      set	1222
 19707   0004F5                     _TABLAT         set	1269
 19708   0004F6                     _TBLPTRL        set	1270
 19709   0004F7                     _TBLPTRH        set	1271
 19710   0004F8                     _TBLPTRU        set	1272
 19711   0004CE                     _PORTAbits      set	1230
 19712   00049E                     _PIE0bits       set	1182
 19713   0004AE                     _PIR0bits       set	1198
 19714   0004C7                     _TRISBbits      set	1223
 19715   0004C0                     _LATCbits       set	1216
 19716   0004C8                     _TRISC          set	1224
 19717   0004D6                     _INTCON0bits    set	1238
 19718   000410                     _ANSELC         set	1040
 19719   000408                     _ANSELB         set	1032
 19720   000400                     _ANSELA         set	1024
 19721                           
 19722                           ; #config settings
 19723                           
 19724                           	psect	cinit
 19725   007182                     __pcinit:
 19726                           	callstack 0
 19727   007182                     start_initialization:
 19728                           	callstack 0
 19729   007182                     __initialization:
 19730                           	callstack 0
 19731                           
 19732                           ; Initialize objects allocated to BANK5 (2 bytes)
 19733                           ; load TBLPTR registers with __pidataBANK5
 19734   007182  0E62               	movlw	low __pidataBANK5
 19735   007184  6EF6               	movwf	tblptrl,c
 19736   007186  0E82               	movlw	high __pidataBANK5
 19737   007188  6EF7               	movwf	tblptrh,c
 19738   00718A  0E00               	movlw	low (__pidataBANK5 shr (0+16))
 19739   00718C  6EF8               	movwf	tblptru,c
 19740   00718E  0009               	tblrd		*+	;fetch initializer
 19741   007190  C4F5 F5FD          	movff	tablat,__pdataBANK5
 19742   007194  0009               	tblrd		*+	;fetch initializer
 19743   007196  C4F5 F5FE          	movff	tablat,__pdataBANK5+1
 19744                           
 19745                           ; Clear objects allocated to BIGRAM (1405 bytes)
 19746   00719A  EE02  F0FC         	lfsr	0,__pbssBIGRAM
 19747   00719E  EE11 F17D          	lfsr	1,1405
 19748   0071A2                     clear_0:
 19749   0071A2  6AEE               	clrf	postinc0,c
 19750   0071A4  50E5               	movf	postdec1,w,c
 19751   0071A6  50E1               	movf	fsr1l,w,c
 19752   0071A8  E1FC               	bnz	clear_0
 19753   0071AA  50E2               	movf	fsr1h,w,c
 19754   0071AC  E1FA               	bnz	clear_0
 19755                           
 19756                           ; Clear objects allocated to BANK8 (252 bytes)
 19757   0071AE  EE02  F000         	lfsr	0,__pbssBANK8
 19758   0071B2  0EFC               	movlw	252
 19759   0071B4                     clear_1:
 19760   0071B4  6AEE               	clrf	postinc0,c
 19761   0071B6  06E8               	decf	wreg,f,c
 19762   0071B8  E1FD               	bnz	clear_1
 19763                           
 19764                           ; Clear objects allocated to BANK7 (255 bytes)
 19765   0071BA  EE01  F300         	lfsr	0,__pbssBANK7
 19766   0071BE  EE10 F0FF          	lfsr	1,255
 19767   0071C2                     clear_2:
 19768   0071C2  6AEE               	clrf	postinc0,c
 19769   0071C4  50E5               	movf	postdec1,w,c
 19770   0071C6  50E1               	movf	fsr1l,w,c
 19771   0071C8  E1FC               	bnz	clear_2
 19772   0071CA  50E2               	movf	fsr1h,w,c
 19773   0071CC  E1FA               	bnz	clear_2
 19774                           
 19775                           ; Clear objects allocated to BANK6 (189 bytes)
 19776   0071CE  EE01  F200         	lfsr	0,__pbssBANK6
 19777   0071D2  0EBD               	movlw	189
 19778   0071D4                     clear_3:
 19779   0071D4  6AEE               	clrf	postinc0,c
 19780   0071D6  06E8               	decf	wreg,f,c
 19781   0071D8  E1FD               	bnz	clear_3
 19782                           
 19783                           ; Clear objects allocated to BANK5 (112 bytes)
 19784   0071DA  EE01  F160         	lfsr	0,__pbssBANK5
 19785   0071DE  0E70               	movlw	112
 19786   0071E0                     clear_4:
 19787   0071E0  6AEE               	clrf	postinc0,c
 19788   0071E2  06E8               	decf	wreg,f,c
 19789   0071E4  E1FD               	bnz	clear_4
 19790                           
 19791                           ;
 19792                           ; Setup IVTBASE
 19793                           ;
 19794   00045D                     IVTBASEL        equ	1117
 19795   00045E                     IVTBASEH        equ	1118
 19796   00045F                     IVTBASEU        equ	1119
 19797   0071E6  0104               	movlb	4
 19798   0071E8  0E00               	movlw	(ivt0x900_base shr 0)& (0+255)
 19799   0071EA  6F5D               	movwf	93,b
 19800   0071EC  0E09               	movlw	(ivt0x900_base shr (0+8))& (0+255)
 19801   0071EE  6F5E               	movwf	94,b
 19802   0071F0  0E00               	movlw	(ivt0x900_base shr (0+16))& (0+255)
 19803   0071F2  6F5F               	movwf	95,b
 19804   0071F4                     end_of_initialization:
 19805                           	callstack 0
 19806   0071F4                     __end_of__initialization:
 19807                           	callstack 0
 19808   0071F4  0100               	movlb	0
 19809   0071F6  EF12  F031         	goto	_main	;jump to C main() function
 19810                           
 19811                           	psect	bssBANK5
 19812   000560                     __pbssBANK5:
 19813                           	callstack 0
 19814   000560                     _timedResponseTime:
 19815                           	callstack 0
 19816   000560                     	ds	4
 19817   000564                     _ledTimer:
 19818                           	callstack 0
 19819   000564                     	ds	4
 19820   000568                     _uptimeTimer:
 19821                           	callstack 0
 19822   000568                     	ds	4
 19823   00056C                     _heartbeatTimer:
 19824                           	callstack 0
 19825   00056C                     	ds	4
 19826   000570                     _pbTimer:
 19827                           	callstack 0
 19828   000570                     	ds	4
 19829   000574                     _enumerationStartTime:
 19830                           	callstack 0
 19831   000574                     	ds	4
 19832   000578                     _subtestTime:
 19833                           	callstack 0
 19834   000578                     	ds	4
 19835   00057C                     _testTime:
 19836                           	callstack 0
 19837   00057C                     	ds	4
 19838   000580                     _flashTime:
 19839                           	callstack 0
 19840   000580                     	ds	4
 19841   000584                     _flashBlock:
 19842                           	callstack 0
 19843   000584                     	ds	3
 19844   000587                     _timedResponseCallback:
 19845                           	callstack 0
 19846   000587                     	ds	2
 19847   000589                     _flashCounter:
 19848                           	callstack 0
 19849   000589                     	ds	2
 19850   00058B                     _ledState:
 19851                           	callstack 0
 19852   00058B                     	ds	2
 19853   00058D                     _previousNN:
 19854                           	callstack 0
 19855   00058D                     	ds	2
 19856   00058F                     _nn:
 19857                           	callstack 0
 19858   00058F                     	ds	2
 19859   000591                     _transport:
 19860                           	callstack 0
 19861   000591                     	ds	2
 19862   000593                     _timedResponseDelay:
 19863                           	callstack 0
 19864   000593                     	ds	1
 19865   000594                     _eeBootFlag:
 19866                           	callstack 0
 19867   000594                     	ds	1
 19868   000595                     _timedResponseStep:
 19869                           	callstack 0
 19870   000595                     	ds	1
 19871   000596                     _timedResponseType:
 19872                           	callstack 0
 19873   000596                     	ds	1
 19874   000597                     _timedResponseAllServicesFlag:
 19875                           	callstack 0
 19876   000597                     	ds	1
 19877   000598                     _timedResponseServiceIndex:
 19878                           	callstack 0
 19879   000598                     	ds	1
 19880   000599                     _timerExtension2:
 19881                           	callstack 0
 19882   000599                     	ds	1
 19883   00059A                     _timerExtension1:
 19884                           	callstack 0
 19885   00059A                     	ds	1
 19886   00059B                     _flashFlags:
 19887                           	callstack 0
 19888   00059B                     	ds	1
 19889   00059C                     _heartbeatSequence:
 19890                           	callstack 0
 19891   00059C                     	ds	1
 19892   00059D                     _pbWasPushed:
 19893                           	callstack 0
 19894   00059D                     	ds	1
 19895   00059E                     _setupModePreviousMode:
 19896                           	callstack 0
 19897   00059E                     	ds	1
 19898   00059F                     _last_mode_flags:
 19899                           	callstack 0
 19900   00059F                     	ds	1
 19901   0005A0                     _last_mode_state:
 19902                           	callstack 0
 19903   0005A0                     	ds	1
 19904   0005A1                     _mode_state:
 19905                           	callstack 0
 19906   0005A1                     	ds	1
 19907   0005A2                     _timedResponseOpcode:
 19908                           	callstack 0
 19909   0005A2                     	ds	1
 19910   0005A3                     _errno:
 19911                           	callstack 0
 19912   0005A3                     	ds	1
 19913   0005A4                     _mode_flags:
 19914                           	callstack 0
 19915   0005A4                     	ds	1
 19916   0005A5                     _enumerationState:
 19917                           	callstack 0
 19918   0005A5                     	ds	1
 19919   0005A6                     _EnumerationState:
 19920                           	callstack 0
 19921   0005A6                     	ds	1
 19922   0005A7                     _canTransmitFailed:
 19923                           	callstack 0
 19924   0005A7                     	ds	1
 19925   0005A8                     _canId:
 19926                           	callstack 0
 19927   0005A8                     	ds	1
 19928   0005A9                     _bootloaderVersion:
 19929                           	callstack 0
 19930   0005A9                     	ds	1
 19931   0005AA                     _bootloaderType:
 19932                           	callstack 0
 19933   0005AA                     	ds	1
 19934   0005AB                     _refreshRequired:
 19935                           	callstack 0
 19936   0005AB                     	ds	1
 19937   0005AC                     _flashState:
 19938                           	callstack 0
 19939   0005AC                     	ds	1
 19940   0005AD                     _mnsDiagnostics:
 19941                           	callstack 0
 19942   0005AD                     	ds	14
 19943   0005BB                     _nvDiagnostics:
 19944                           	callstack 0
 19945   0005BB                     	ds	6
 19946   0005C1                     _consumerDiagnostics:
 19947                           	callstack 0
 19948   0005C1                     	ds	6
 19949   0005C7                     _rxQueue:
 19950                           	callstack 0
 19951   0005C7                     	ds	5
 19952   0005CC                     _teachDiagnostics:
 19953                           	callstack 0
 19954   0005CC                     	ds	4
 19955                           
 19956                           	psect	dataBANK5
 19957   0005FD                     __pdataBANK5:
 19958                           	callstack 0
 19959   0005FD                     _flashBuffer:
 19960                           	callstack 0
 19961   0005FD                     	ds	2
 19962                           
 19963                           	psect	bssBANK6
 19964   000600                     __pbssBANK6:
 19965                           	callstack 0
 19966   000600                     _nvCache:
 19967                           	callstack 0
 19968   000600                     	ds	50
 19969   000632                     _enumerationResults:
 19970                           	callstack 0
 19971   000632                     	ds	16
 19972   000642                     _flashFlushTime:
 19973                           	callstack 0
 19974   000642                     	ds	4
 19975   000646                     _rxBuffers:
 19976                           	callstack 0
 19977   000646                     	ds	72
 19978   00068E                     _canDiagnostics:
 19979                           	callstack 0
 19980   00068E                     	ds	38
 19981   0006B4                     _tmpMessage:
 19982                           	callstack 0
 19983   0006B4                     	ds	9
 19984                           
 19985                           	psect	bssBANK7
 19986   000700                     __pbssBANK7:
 19987                           	callstack 0
 19988   000700                     _ledPaletteIndexes:
 19989                           	callstack 0
 19990   000700                     	ds	255
 19991                           
 19992                           	psect	bssBANK8
 19993   000800                     __pbssBANK8:
 19994                           	callstack 0
 19995   000800                     _evs:
 19996                           	callstack 0
 19997   000800                     	ds	252
 19998                           
 19999                           	psect	bssBIGRAM
 20000   0008FC                     __pbssBIGRAM:
 20001                           	callstack 0
 20002   0008FC                     _eventChains:
 20003                           	callstack 0
 20004   0008FC                     	ds	640
 20005   000B7C                     _leds:
 20006                           	callstack 0
 20007   000B7C                     	ds	765
 20008                           
 20009                           	psect	cstackBANK5
 20010   0005D0                     __pcstackBANK5:
 20011                           	callstack 0
 20012   0005D0                     ??_mnsProcessMessage:
 20013                           
 20014                           ; 1 bytes @ 0x0
 20015   0005D0                     	ds	30
 20016   0005EE                     ??_poll:
 20017                           
 20018                           ; 1 bytes @ 0x1E
 20019   0005EE                     	ds	4
 20020   0005F2                     poll@handled:
 20021                           	callstack 0
 20022                           
 20023                           ; 1 bytes @ 0x22
 20024   0005F2                     	ds	1
 20025   0005F3                     poll@i:
 20026                           	callstack 0
 20027                           
 20028                           ; 1 bytes @ 0x23
 20029   0005F3                     	ds	1
 20030   0005F4                     poll@m:
 20031                           	callstack 0
 20032                           
 20033                           ; 9 bytes @ 0x24
 20034   0005F4                     	ds	9
 20035                           
 20036                           	psect	cstackCOMRAM
 20037   000501                     __pcstackCOMRAM:
 20038                           	callstack 0
 20039   000501                     ?_getNV:
 20040                           	callstack 0
 20041   000501                     ?_getNextWriteMessage:
 20042                           	callstack 0
 20043   000501                     ?_pop:
 20044                           	callstack 0
 20045   000501                     ?___awdiv:
 20046                           	callstack 0
 20047   000501                     ?___awmod:
 20048                           	callstack 0
 20049   000501                     ?_tickGet:
 20050                           	callstack 0
 20051   000501                     ?___lmul:
 20052                           	callstack 0
 20053   000501                     initARGB@ledno:
 20054                           	callstack 0
 20055   000501                     updateLedRange@end_ledno:
 20056                           	callstack 0
 20057   000501                     APP_nvValidate@value:
 20058                           	callstack 0
 20059   000501                     APP_nvValueChanged@value:
 20060                           	callstack 0
 20061   000501                     bootEsdData@id:
 20062                           	callstack 0
 20063   000501                     canEsdData@id:
 20064                           	callstack 0
 20065   000501                     CAN1_OperationModeSet@status:
 20066                           	callstack 0
 20067   000501                     consumerPowerUp@temp:
 20068                           	callstack 0
 20069   000501                     isConsumedEvent@eventIndex:
 20070                           	callstack 0
 20071   000501                     consumerEsdData@index:
 20072                           	callstack 0
 20073   000501                     teachGetESDdata@id:
 20074                           	callstack 0
 20075   000501                     evtIdxToTableIndex@evtIdx:
 20076                           	callstack 0
 20077   000501                     tableIndexToEvtIdx@tableIndex:
 20078                           	callstack 0
 20079   000501                     nvGetESDdata@id:
 20080                           	callstack 0
 20081   000501                     setTimedResponseDelay@delay:
 20082                           	callstack 0
 20083   000501                     _isEvent$5805:
 20084                           	callstack 0
 20085   000501                     APP_preProcessMessage@m:
 20086                           	callstack 0
 20087   000501                     APP_postProcessMessage@m:
 20088                           	callstack 0
 20089   000501                     prepareSelfEnumResponse@txFifoObj:
 20090                           	callstack 0
 20091   000501                     sendRTR@txFifoObj:
 20092                           	callstack 0
 20093   000501                     getNextWriteMessage@q:
 20094                           	callstack 0
 20095   000501                     pop@q:
 20096                           	callstack 0
 20097   000501                     ___awdiv@dividend:
 20098                           	callstack 0
 20099   000501                     ___awmod@dividend:
 20100                           	callstack 0
 20101   000501                     memcpy@d1:
 20102                           	callstack 0
 20103   000501                     EEPROM_Read@index:
 20104                           	callstack 0
 20105   000501                     EEPROM_WriteNoVerify@index:
 20106                           	callstack 0
 20107   000501                     FLASH_Read@address:
 20108                           	callstack 0
 20109   000501                     ___lmul@multiplier:
 20110                           	callstack 0
 20111   000501                     ??_getNumTxBuffersInUse:
 20112   000501                     ??_getNumRxBuffersInUse:
 20113   000501                     ??_have:
 20114   000501                     ??_findServiceIndex:
 20115   000501                     ??_showStatus:
 20116   000501                     ??_eraseFlashBlock:
 20117   000501                     ??_loadFlashBlock:
 20118   000501                     ??_initTicker:
 20119   000501                     
 20120                           ; 1 bytes @ 0x0
 20121   000501                     	ds	1
 20122   000502                     updateLedRange@colourIndexPair:
 20123                           	callstack 0
 20124   000502                     APP_nvValueChanged@oldValue:
 20125                           	callstack 0
 20126   000502                     CAN1_OperationModeSet@requestMode:
 20127                           	callstack 0
 20128   000502                     initTicker@priority:
 20129                           	callstack 0
 20130   000502                     isEvent@opc:
 20131                           	callstack 0
 20132   000502                     
 20133                           ; 1 bytes @ 0x1
 20134   000502                     	ds	1
 20135   000503                     updateLedRange@start_ledno:
 20136                           	callstack 0
 20137   000503                     showStatus@s:
 20138                           	callstack 0
 20139   000503                     initTicker@divider:
 20140                           	callstack 0
 20141   000503                     findServiceIndex@serviceType:
 20142                           	callstack 0
 20143   000503                     have@id:
 20144                           	callstack 0
 20145   000503                     ___awdiv@divisor:
 20146                           	callstack 0
 20147   000503                     ___awmod@divisor:
 20148                           	callstack 0
 20149   000503                     memcpy@s1:
 20150                           	callstack 0
 20151   000503                     ??_getNV:
 20152   000503                     ??_getNextWriteMessage:
 20153   000503                     ??_pop:
 20154   000503                     
 20155                           ; 1 bytes @ 0x2
 20156   000503                     	ds	1
 20157   000504                     updateLedRange@ledno:
 20158                           	callstack 0
 20159   000504                     getNV@index:
 20160                           	callstack 0
 20161   000504                     EEPROM_WriteNoVerify@value:
 20162                           	callstack 0
 20163   000504                     eraseFlashBlock@interruptEnabled:
 20164                           	callstack 0
 20165   000504                     initTicker@i:
 20166                           	callstack 0
 20167   000504                     findServiceIndex@i:
 20168                           	callstack 0
 20169   000504                     have@i:
 20170                           	callstack 0
 20171   000504                     ??_EEPROM_Read:
 20172   000504                     ??_FLASH_Read:
 20173                           
 20174                           ; 1 bytes @ 0x3
 20175   000504                     	ds	1
 20176   000505                     doFlash@order:
 20177                           	callstack 0
 20178   000505                     getParameterFlags@flags:
 20179                           	callstack 0
 20180   000505                     flushFlashBlock@interruptEnabled:
 20181                           	callstack 0
 20182   000505                     tickGet@IntFlag2:
 20183                           	callstack 0
 20184   000505                     startTimedResponse@serviceIndex:
 20185                           	callstack 0
 20186   000505                     ___awdiv@counter:
 20187                           	callstack 0
 20188   000505                     ___awmod@counter:
 20189                           	callstack 0
 20190   000505                     getNumTxBuffersInUse@i16:
 20191                           	callstack 0
 20192   000505                     getNumRxBuffersInUse@i16:
 20193                           	callstack 0
 20194   000505                     memcpy@n:
 20195                           	callstack 0
 20196   000505                     ___lmul@multiplicand:
 20197                           	callstack 0
 20198   000505                     ??_EEPROM_WriteNoVerify:
 20199   000505                     
 20200                           ; 1 bytes @ 0x4
 20201   000505                     	ds	1
 20202   000506                     doFlash@ledno:
 20203                           	callstack 0
 20204   000506                     tickGet@IntFlag1:
 20205                           	callstack 0
 20206   000506                     ___awdiv@sign:
 20207                           	callstack 0
 20208   000506                     ___awmod@sign:
 20209                           	callstack 0
 20210   000506                     startTimedResponse@callback:
 20211                           	callstack 0
 20212   000506                     FLASH_Write@index:
 20213                           	callstack 0
 20214   000506                     ??_getParameter:
 20215                           
 20216                           ; 1 bytes @ 0x5
 20217   000506                     	ds	1
 20218   000507                     ?_readNVM:
 20219                           	callstack 0
 20220   000507                     ?_canGetDiagnostic:
 20221                           	callstack 0
 20222   000507                     ?_consumerGetDiagnostic:
 20223                           	callstack 0
 20224   000507                     ?_teachGetDiagnostic:
 20225                           	callstack 0
 20226   000507                     ?_mnsGetDiagnostic:
 20227                           	callstack 0
 20228   000507                     ?_nvGetDiagnostic:
 20229                           	callstack 0
 20230   000507                     ___awdiv@quotient:
 20231                           	callstack 0
 20232   000507                     memcpy@d:
 20233                           	callstack 0
 20234   000507                     readNVM@index:
 20235                           	callstack 0
 20236   000507                     tickGet@currentTime:
 20237                           	callstack 0
 20238   000507                     
 20239                           ; 1 bytes @ 0x6
 20240   000507                     	ds	1
 20241   000508                     EEPROM_WriteNoVerify@interruptEnabled:
 20242                           	callstack 0
 20243   000508                     startTimedResponse@type:
 20244                           	callstack 0
 20245   000508                     pop@ret:
 20246                           	callstack 0
 20247   000508                     
 20248                           ; 1 bytes @ 0x7
 20249   000508                     	ds	1
 20250   000509                     consumerGetDiagnostic@index:
 20251                           	callstack 0
 20252   000509                     teachGetDiagnostic@index:
 20253                           	callstack 0
 20254   000509                     mnsGetDiagnostic@index:
 20255                           	callstack 0
 20256   000509                     getParameter@idx:
 20257                           	callstack 0
 20258   000509                     nvGetDiagnostic@index:
 20259                           	callstack 0
 20260   000509                     FLASH_Write@value:
 20261                           	callstack 0
 20262   000509                     memcpy@s:
 20263                           	callstack 0
 20264   000509                     EEPROM_Write@index:
 20265                           	callstack 0
 20266   000509                     ___lmul@product:
 20267                           	callstack 0
 20268   000509                     ??_canGetDiagnostic:
 20269   000509                     ??_APP_nvDefault:
 20270   000509                     
 20271                           ; 1 bytes @ 0x8
 20272   000509                     	ds	1
 20273   00050A                     canGetDiagnostic@index:
 20274                           	callstack 0
 20275   00050A                     ??_readNVM:
 20276   00050A                     ??_FLASH_Write:
 20277                           
 20278                           ; 1 bytes @ 0x9
 20279   00050A                     	ds	1
 20280   00050B                     ?___lldiv:
 20281                           	callstack 0
 20282   00050B                     APP_nvDefault@index:
 20283                           	callstack 0
 20284   00050B                     startEnumeration@txWaiting:
 20285                           	callstack 0
 20286   00050B                     memcpy@tmp:
 20287                           	callstack 0
 20288   00050B                     ___lldiv@dividend:
 20289                           	callstack 0
 20290   00050B                     ??_handleSelfEnumeration:
 20291   00050B                     ??_APP_testMode:
 20292   00050B                     ??_loop:
 20293   00050B                     ??_leds_poll:
 20294                           
 20295                           ; 1 bytes @ 0xA
 20296   00050B                     	ds	1
 20297   00050C                     startEnumeration@i:
 20298                           	callstack 0
 20299   00050C                     getNextWriteMessage@wr:
 20300                           	callstack 0
 20301   00050C                     EEPROM_Write@value:
 20302                           	callstack 0
 20303   00050C                     readNVM@type:
 20304                           	callstack 0
 20305                           
 20306                           ; 1 bytes @ 0xB
 20307   00050C                     	ds	1
 20308   00050D                     ?_getEN:
 20309                           	callstack 0
 20310   00050D                     ?_getNN:
 20311                           	callstack 0
 20312   00050D                     ?_getEv:
 20313                           	callstack 0
 20314   00050D                     bootPowerUp@b:
 20315                           	callstack 0
 20316   00050D                     getEv@evNum:
 20317                           	callstack 0
 20318   00050D                     mnsPowerUp@i:
 20319                           	callstack 0
 20320   00050D                     canPowerUp@temp:
 20321                           	callstack 0
 20322   00050D                     canSendMessage@mp:
 20323                           	callstack 0
 20324   00050D                     ??_getEVs:
 20325   00050D                     ??_loadNvCache:
 20326   00050D                     
 20327                           ; 1 bytes @ 0xC
 20328   00050D                     	ds	1
 20329   00050E                     bootPowerUp@found:
 20330                           	callstack 0
 20331   00050E                     mnsPowerUp@temp:
 20332                           	callstack 0
 20333   00050E                     writeNVM@index:
 20334                           	callstack 0
 20335                           
 20336                           ; 3 bytes @ 0xD
 20337   00050E                     	ds	1
 20338   00050F                     APP_testMode@c:
 20339                           	callstack 0
 20340   00050F                     bootPowerUp@i:
 20341                           	callstack 0
 20342   00050F                     handleSelfEnumeration@receivedCanId:
 20343                           	callstack 0
 20344   00050F                     loadNvCache@temp:
 20345                           	callstack 0
 20346   00050F                     ___lldiv@divisor:
 20347                           	callstack 0
 20348   00050F                     ??_canSendMessage:
 20349   00050F                     ??_getEN:
 20350   00050F                     ??_getNN:
 20351   00050F                     ??_getEv:
 20352                           
 20353                           ; 1 bytes @ 0xE
 20354   00050F                     	ds	1
 20355   000510                     APP_testMode@step:
 20356                           	callstack 0
 20357   000510                     canReceiveMessage@m:
 20358                           	callstack 0
 20359   000510                     bootPowerUp@a:
 20360                           	callstack 0
 20361                           
 20362                           ; 3 bytes @ 0xF
 20363   000510                     	ds	1
 20364   000511                     APP_testMode@i:
 20365                           	callstack 0
 20366   000511                     loadNvCache@i:
 20367                           	callstack 0
 20368   000511                     writeNVM@value:
 20369                           	callstack 0
 20370                           
 20371                           ; 1 bytes @ 0x10
 20372   000511                     	ds	1
 20373   000512                     nvPowerUp@i:
 20374                           	callstack 0
 20375   000512                     ??_writeNVM:
 20376   000512                     ??_canReceiveMessage:
 20377   000512                     
 20378                           ; 1 bytes @ 0x11
 20379   000512                     	ds	1
 20380   000513                     canReceiveMessage@incomingCanId:
 20381                           	callstack 0
 20382   000513                     ___lldiv@quotient:
 20383                           	callstack 0
 20384   000513                     
 20385                           ; 1 bytes @ 0x12
 20386   000513                     	ds	1
 20387   000514                     writeNVM@type:
 20388                           	callstack 0
 20389   000514                     canReceiveMessage@mp:
 20390                           	callstack 0
 20391                           
 20392                           ; 2 bytes @ 0x13
 20393   000514                     	ds	1
 20394   000515                     setNewCanId@newCanId:
 20395                           	callstack 0
 20396   000515                     writeEv@evNum:
 20397                           	callstack 0
 20398   000515                     setNV@value:
 20399                           	callstack 0
 20400   000515                     canSendMessage@temp:
 20401                           	callstack 0
 20402   000515                     ??_nvFactoryReset:
 20403                           
 20404                           ; 1 bytes @ 0x14
 20405   000515                     	ds	1
 20406   000516                     writeEv@evVal:
 20407                           	callstack 0
 20408   000516                     canReceiveMessage@temp:
 20409                           	callstack 0
 20410   000516                     getNN@hi:
 20411                           	callstack 0
 20412   000516                     getEN@hi:
 20413                           	callstack 0
 20414   000516                     ??_processEnumeration:
 20415   000516                     ??_setNV:
 20416                           
 20417                           ; 1 bytes @ 0x15
 20418   000516                     	ds	1
 20419   000517                     nvFactoryReset@i:
 20420                           	callstack 0
 20421   000517                     ___lldiv@counter:
 20422                           	callstack 0
 20423   000517                     canSendMessage@m:
 20424                           	callstack 0
 20425   000517                     ??_writeEv:
 20426                           
 20427                           ; 1 bytes @ 0x16
 20428   000517                     	ds	1
 20429   000518                     setNV@oldValue:
 20430                           	callstack 0
 20431   000518                     canReceiveMessage@rxFifoObj:
 20432                           	callstack 0
 20433   000518                     getNN@lo:
 20434                           	callstack 0
 20435   000518                     getEN@lo:
 20436                           	callstack 0
 20437   000518                     ??_pbDownTimer:
 20438   000518                     ??_pbUpTimer:
 20439                           
 20440                           ; 1 bytes @ 0x17
 20441   000518                     	ds	1
 20442   000519                     setNV@index:
 20443                           	callstack 0
 20444   000519                     canSendMessage@txFifoObj:
 20445                           	callstack 0
 20446                           
 20447                           ; 2 bytes @ 0x18
 20448   000519                     	ds	1
 20449   00051A                     processEnumeration@enumResult:
 20450                           	callstack 0
 20451   00051A                     getEVs@tableIndex:
 20452                           	callstack 0
 20453   00051A                     getNN@flags:
 20454                           	callstack 0
 20455   00051A                     getEN@tableIndex:
 20456                           	callstack 0
 20457                           
 20458                           ; 1 bytes @ 0x19
 20459   00051A                     	ds	1
 20460   00051B                     processEnumeration@newCanId:
 20461                           	callstack 0
 20462   00051B                     getEVs@evIdx:
 20463                           	callstack 0
 20464   00051B                     getNN@tableIndex:
 20465                           	callstack 0
 20466   00051B                     sendMessage@len:
 20467                           	callstack 0
 20468                           
 20469                           ; 1 bytes @ 0x1A
 20470   00051B                     	ds	1
 20471   00051C                     processEnumeration@i:
 20472                           	callstack 0
 20473   00051C                     getEv@tableIndex:
 20474                           	callstack 0
 20475   00051C                     pbDownTimer@timeout:
 20476                           	callstack 0
 20477   00051C                     pbUpTimer@timeout:
 20478                           	callstack 0
 20479   00051C                     sendMessage@data1:
 20480                           	callstack 0
 20481   00051C                     APP_processConsumedEvent@m:
 20482                           	callstack 0
 20483   00051C                     getHash@nn:
 20484                           	callstack 0
 20485                           
 20486                           ; 2 bytes @ 0x1B
 20487   00051C                     	ds	1
 20488   00051D                     sendMessage@data2:
 20489                           	callstack 0
 20490   00051D                     
 20491                           ; 1 bytes @ 0x1C
 20492   00051D                     	ds	1
 20493   00051E                     APP_processConsumedEvent@tableIndex:
 20494                           	callstack 0
 20495   00051E                     sendMessage@data3:
 20496                           	callstack 0
 20497   00051E                     getHash@en:
 20498                           	callstack 0
 20499   00051E                     
 20500                           ; 1 bytes @ 0x1D
 20501   00051E                     	ds	1
 20502   00051F                     APP_processConsumedEvent@onOff:
 20503                           	callstack 0
 20504   00051F                     sendMessage@data4:
 20505                           	callstack 0
 20506                           
 20507                           ; 1 bytes @ 0x1E
 20508   00051F                     	ds	1
 20509   000520                     APP_processConsumedEvent@action:
 20510                           	callstack 0
 20511   000520                     sendMessage@data5:
 20512                           	callstack 0
 20513   000520                     ??_getHash:
 20514                           
 20515                           ; 1 bytes @ 0x1F
 20516   000520                     	ds	1
 20517   000521                     APP_processConsumedEvent@start_ledno:
 20518                           	callstack 0
 20519   000521                     getHash@hash:
 20520                           	callstack 0
 20521   000521                     sendMessage@data6:
 20522                           	callstack 0
 20523                           
 20524                           ; 1 bytes @ 0x20
 20525   000521                     	ds	1
 20526   000522                     APP_processConsumedEvent@end_ledno:
 20527                           	callstack 0
 20528   000522                     sendMessage@data7:
 20529                           	callstack 0
 20530   000522                     findEvent@nodeNumber:
 20531                           	callstack 0
 20532   000522                     ??_rebuildHashtable:
 20533                           
 20534                           ; 1 bytes @ 0x21
 20535   000522                     	ds	1
 20536   000523                     APP_processConsumedEvent@colourPixelIndexPair:
 20537                           	callstack 0
 20538   000523                     ??_sendMessage:
 20539                           
 20540                           ; 1 bytes @ 0x22
 20541   000523                     	ds	1
 20542   000524                     APP_processConsumedEvent@ev:
 20543                           	callstack 0
 20544   000524                     writeEv@tableIndex:
 20545                           	callstack 0
 20546   000524                     findEvent@eventNumber:
 20547                           	callstack 0
 20548                           
 20549                           ; 2 bytes @ 0x23
 20550   000524                     	ds	1
 20551   000525                     rebuildHashtable@hash:
 20552                           	callstack 0
 20553   000525                     sendMessage@opc:
 20554                           	callstack 0
 20555                           
 20556                           ; 1 bytes @ 0x24
 20557   000525                     	ds	1
 20558   000526                     rebuildHashtable@tableIndex:
 20559                           	callstack 0
 20560   000526                     sendMessage2@data1:
 20561                           	callstack 0
 20562   000526                     sendMessage3@data1:
 20563                           	callstack 0
 20564   000526                     sendMessage4@data1:
 20565                           	callstack 0
 20566   000526                     sendMessage5@data1:
 20567                           	callstack 0
 20568   000526                     sendMessage6@data1:
 20569                           	callstack 0
 20570   000526                     sendMessage7@data1:
 20571                           	callstack 0
 20572   000526                     ??_findEvent:
 20573                           
 20574                           ; 1 bytes @ 0x25
 20575   000526                     	ds	1
 20576   000527                     rebuildHashtable@chainIdx:
 20577                           	callstack 0
 20578   000527                     sendMessage2@data2:
 20579                           	callstack 0
 20580   000527                     sendMessage3@data2:
 20581                           	callstack 0
 20582   000527                     sendMessage4@data2:
 20583                           	callstack 0
 20584   000527                     sendMessage5@data2:
 20585                           	callstack 0
 20586   000527                     sendMessage6@data2:
 20587                           	callstack 0
 20588   000527                     sendMessage7@data2:
 20589                           	callstack 0
 20590                           
 20591                           ; 1 bytes @ 0x26
 20592   000527                     	ds	1
 20593   000528                     teachPowerUp@i:
 20594                           	callstack 0
 20595   000528                     sendMessage2@opc:
 20596                           	callstack 0
 20597   000528                     sendMessage3@data3:
 20598                           	callstack 0
 20599   000528                     sendMessage4@data3:
 20600                           	callstack 0
 20601   000528                     sendMessage5@data3:
 20602                           	callstack 0
 20603   000528                     sendMessage6@data3:
 20604                           	callstack 0
 20605   000528                     sendMessage7@data3:
 20606                           	callstack 0
 20607   000528                     findEvent@nn:
 20608                           	callstack 0
 20609   000528                     ??_removeTableEntry:
 20610   000528                     
 20611                           ; 1 bytes @ 0x27
 20612   000528                     	ds	1
 20613   000529                     sendMessage3@opc:
 20614                           	callstack 0
 20615   000529                     sendMessage4@data4:
 20616                           	callstack 0
 20617   000529                     sendMessage5@data4:
 20618                           	callstack 0
 20619   000529                     sendMessage6@data4:
 20620                           	callstack 0
 20621   000529                     sendMessage7@data4:
 20622                           	callstack 0
 20623   000529                     ??_powerUp:
 20624                           
 20625                           ; 1 bytes @ 0x28
 20626   000529                     	ds	1
 20627   00052A                     sendMessage4@opc:
 20628                           	callstack 0
 20629   00052A                     sendMessage5@data5:
 20630                           	callstack 0
 20631   00052A                     sendMessage6@data5:
 20632                           	callstack 0
 20633   00052A                     sendMessage7@data5:
 20634                           	callstack 0
 20635   00052A                     doNnevn@eventNumber:
 20636                           	callstack 0
 20637   00052A                     doRqevn@eventNumber:
 20638                           	callstack 0
 20639   00052A                     findEvent@en:
 20640                           	callstack 0
 20641   00052A                     
 20642                           ; 1 bytes @ 0x29
 20643   00052A                     	ds	1
 20644   00052B                     sendMessage5@opc:
 20645                           	callstack 0
 20646   00052B                     sendMessage6@data6:
 20647                           	callstack 0
 20648   00052B                     sendMessage7@data6:
 20649                           	callstack 0
 20650   00052B                     
 20651                           ; 1 bytes @ 0x2A
 20652   00052B                     	ds	1
 20653   00052C                     doNnevn@count:
 20654                           	callstack 0
 20655   00052C                     doRqevn@count:
 20656                           	callstack 0
 20657   00052C                     doReval@evNum:
 20658                           	callstack 0
 20659   00052C                     findEvent@hash:
 20660                           	callstack 0
 20661   00052C                     sendMessage6@opc:
 20662                           	callstack 0
 20663   00052C                     sendMessage7@data7:
 20664                           	callstack 0
 20665   00052C                     doNenrd@nodeNumber:
 20666                           	callstack 0
 20667   00052C                     checkLen@m:
 20668                           	callstack 0
 20669   00052C                     ??_mnsPoll:
 20670                           
 20671                           ; 1 bytes @ 0x2B
 20672   00052C                     	ds	1
 20673   00052D                     doNnevn@i:
 20674                           	callstack 0
 20675   00052D                     doRqevn@i:
 20676                           	callstack 0
 20677   00052D                     doReval@evIndex:
 20678                           	callstack 0
 20679   00052D                     findEvent@chainIdx:
 20680                           	callstack 0
 20681   00052D                     powerUp@i:
 20682                           	callstack 0
 20683   00052D                     sendMessage7@opc:
 20684                           	callstack 0
 20685   00052D                     
 20686                           ; 1 bytes @ 0x2C
 20687   00052D                     	ds	1
 20688   00052E                     doReval@enNum:
 20689                           	callstack 0
 20690   00052E                     findEvent@tableIndex:
 20691                           	callstack 0
 20692   00052E                     mnsTRallDiagnosticsCallback@serviceIndex:
 20693                           	callstack 0
 20694   00052E                     nvTRnvrdCallback@serviceIndex:
 20695                           	callstack 0
 20696   00052E                     checkLen@needed:
 20697                           	callstack 0
 20698   00052E                     doNenrd@eventNumber:
 20699                           	callstack 0
 20700                           
 20701                           ; 2 bytes @ 0x2D
 20702   00052E                     	ds	1
 20703   00052F                     nerdCallback@step:
 20704                           	callstack 0
 20705   00052F                     doReval@tableIndex:
 20706                           	callstack 0
 20707   00052F                     reqevCallback@step:
 20708                           	callstack 0
 20709   00052F                     mnsTRserviceDiscoveryCallback@step:
 20710                           	callstack 0
 20711   00052F                     mnsTRallDiagnosticsCallback@step:
 20712                           	callstack 0
 20713   00052F                     mnsTRrqnpnCallback@step:
 20714                           	callstack 0
 20715   00052F                     nvTRnvrdCallback@step:
 20716                           	callstack 0
 20717   00052F                     checkLen@service:
 20718                           	callstack 0
 20719   00052F                     doReqev@nodeNumber:
 20720                           	callstack 0
 20721   00052F                     addEvent@nodeNumber:
 20722                           	callstack 0
 20723                           
 20724                           ; 2 bytes @ 0x2E
 20725   00052F                     	ds	1
 20726   000530                     doNenrd@index:
 20727                           	callstack 0
 20728   000530                     nerdCallback@nodeNumber:
 20729                           	callstack 0
 20730   000530                     doReval@evVal:
 20731                           	callstack 0
 20732   000530                     nvTRnvrdCallback@valueOrError:
 20733                           	callstack 0
 20734   000530                     ??_reqevCallback:
 20735   000530                     ??_mnsTRallDiagnosticsCallback:
 20736   000530                     ??_mnsTRserviceDiscoveryCallback:
 20737   000530                     
 20738                           ; 1 bytes @ 0x2F
 20739   000530                     	ds	1
 20740   000531                     doNenrd@tableIndex:
 20741                           	callstack 0
 20742   000531                     consumerEventCheckLen@m:
 20743                           	callstack 0
 20744   000531                     teachCheckLen@m:
 20745                           	callstack 0
 20746   000531                     doReqev@eventNumber:
 20747                           	callstack 0
 20748   000531                     addEvent@eventNumber:
 20749                           	callstack 0
 20750                           
 20751                           ; 2 bytes @ 0x30
 20752   000531                     	ds	1
 20753   000532                     nerdCallback@eventNumber:
 20754                           	callstack 0
 20755                           
 20756                           ; 2 bytes @ 0x31
 20757   000532                     	ds	1
 20758   000533                     consumerEventCheckLen@needed:
 20759                           	callstack 0
 20760   000533                     teachCheckLen@needed:
 20761                           	callstack 0
 20762   000533                     doReqev@evNum:
 20763                           	callstack 0
 20764   000533                     addEvent@evNum:
 20765                           	callstack 0
 20766                           
 20767                           ; 1 bytes @ 0x32
 20768   000533                     	ds	1
 20769   000534                     teachCheckLen@learn:
 20770                           	callstack 0
 20771   000534                     removeTableEntry@i:
 20772                           	callstack 0
 20773   000534                     addEvent@evVal:
 20774                           	callstack 0
 20775   000534                     doReqev@evVal:
 20776                           	callstack 0
 20777   000534                     mnsTRallDiagnosticsCallback@d:
 20778                           	callstack 0
 20779   000534                     
 20780                           ; 1 bytes @ 0x33
 20781   000534                     	ds	1
 20782   000535                     reqevCallback@nEv:
 20783                           	callstack 0
 20784   000535                     removeTableEntry@tableIndex:
 20785                           	callstack 0
 20786   000535                     addEvent@forceOwnNN:
 20787                           	callstack 0
 20788   000535                     
 20789                           ; 1 bytes @ 0x34
 20790   000535                     	ds	1
 20791   000536                     clearAllEvents@tableIndex:
 20792                           	callstack 0
 20793   000536                     doReqev@tableIndex:
 20794                           	callstack 0
 20795   000536                     reqevCallback@eventNumber:
 20796                           	callstack 0
 20797   000536                     removeEvent@nodeNumber:
 20798                           	callstack 0
 20799   000536                     ??_addEvent:
 20800                           
 20801                           ; 1 bytes @ 0x35
 20802   000536                     	ds	1
 20803   000537                     ??_factoryReset:
 20804                           
 20805                           ; 1 bytes @ 0x36
 20806   000537                     	ds	1
 20807   000538                     reqevCallback@ev:
 20808                           	callstack 0
 20809   000538                     removeEvent@eventNumber:
 20810                           	callstack 0
 20811                           
 20812                           ; 2 bytes @ 0x37
 20813   000538                     	ds	2
 20814   00053A                     removeEvent@tableIndex:
 20815                           	callstack 0
 20816   00053A                     reqevCallback@nodeNumber:
 20817                           	callstack 0
 20818   00053A                     
 20819                           ; 1 bytes @ 0x39
 20820   00053A                     	ds	1
 20821   00053B                     factoryReset@i:
 20822                           	callstack 0
 20823   00053B                     doEvuln@nodeNumber:
 20824                           	callstack 0
 20825                           
 20826                           ; 2 bytes @ 0x3A
 20827   00053B                     	ds	1
 20828   00053C                     reqevCallback@tableIndex:
 20829                           	callstack 0
 20830   00053C                     checkPowerOnPb@i:
 20831                           	callstack 0
 20832   00053C                     
 20833                           ; 1 bytes @ 0x3B
 20834   00053C                     	ds	1
 20835   00053D                     doEvuln@eventNumber:
 20836                           	callstack 0
 20837   00053D                     ??_pollTimedResponse:
 20838                           
 20839                           ; 1 bytes @ 0x3C
 20840   00053D                     	ds	2
 20841   00053F                     doEvuln@result:
 20842                           	callstack 0
 20843   00053F                     pollTimedResponse@result:
 20844                           	callstack 0
 20845   00053F                     
 20846                           ; 1 bytes @ 0x3E
 20847   00053F                     	ds	4
 20848   000543                     addEvent@en:
 20849                           	callstack 0
 20850                           
 20851                           ; 2 bytes @ 0x42
 20852   000543                     	ds	2
 20853   000545                     addEvent@e:
 20854                           	callstack 0
 20855                           
 20856                           ; 1 bytes @ 0x44
 20857   000545                     	ds	1
 20858   000546                     addEvent@tableIndex:
 20859                           	callstack 0
 20860                           
 20861                           ; 1 bytes @ 0x45
 20862   000546                     	ds	1
 20863   000547                     APP_addEvent@nodeNumber:
 20864                           	callstack 0
 20865                           
 20866                           ; 2 bytes @ 0x46
 20867   000547                     	ds	2
 20868   000549                     APP_addEvent@eventNumber:
 20869                           	callstack 0
 20870                           
 20871                           ; 2 bytes @ 0x48
 20872   000549                     	ds	2
 20873   00054B                     APP_addEvent@evNum:
 20874                           	callstack 0
 20875                           
 20876                           ; 1 bytes @ 0x4A
 20877   00054B                     	ds	1
 20878   00054C                     APP_addEvent@evVal:
 20879                           	callstack 0
 20880                           
 20881                           ; 1 bytes @ 0x4B
 20882   00054C                     	ds	1
 20883   00054D                     APP_addEvent@forceOwnNN:
 20884                           	callstack 0
 20885                           
 20886                           ; 1 bytes @ 0x4C
 20887   00054D                     	ds	1
 20888   00054E                     doEvlrn@nodeNumber:
 20889                           	callstack 0
 20890   00054E                     
 20891                           ; 1 bytes @ 0x4D
 20892   00054E                     	ds	2
 20893   000550                     doEvlrn@eventNumber:
 20894                           	callstack 0
 20895                           
 20896                           ; 2 bytes @ 0x4F
 20897   000550                     	ds	2
 20898   000552                     doEvlrn@evNum:
 20899                           	callstack 0
 20900                           
 20901                           ; 1 bytes @ 0x51
 20902   000552                     	ds	1
 20903   000553                     doEvlrn@evVal:
 20904                           	callstack 0
 20905                           
 20906                           ; 1 bytes @ 0x52
 20907   000553                     	ds	1
 20908   000554                     bootProcessMessage@m:
 20909                           	callstack 0
 20910   000554                     canProcessMessage@m:
 20911                           	callstack 0
 20912   000554                     consumerProcessMessage@m:
 20913                           	callstack 0
 20914   000554                     teachProcessMessage@m:
 20915                           	callstack 0
 20916   000554                     mnsProcessMessage@m:
 20917                           	callstack 0
 20918   000554                     nvProcessMessage@m:
 20919                           	callstack 0
 20920   000554                     
 20921                           ; 1 bytes @ 0x53
 20922   000554                     	ds	2
 20923   000556                     mnsProcessMessage@i:
 20924                           	callstack 0
 20925   000556                     ??_bootProcessMessage:
 20926   000556                     ??_canProcessMessage:
 20927   000556                     ??_consumerProcessMessage:
 20928   000556                     ??_teachProcessMessage:
 20929   000556                     ??_nvProcessMessage:
 20930                           
 20931                           ; 1 bytes @ 0x55
 20932   000556                     	ds	1
 20933   000557                     _mnsProcessMessage$4475:
 20934                           	callstack 0
 20935                           
 20936                           ; 1 bytes @ 0x56
 20937   000557                     	ds	1
 20938   000558                     mnsProcessMessage@d:
 20939                           	callstack 0
 20940   000558                     nvProcessMessage@valueOrError:
 20941                           	callstack 0
 20942                           
 20943                           ; 2 bytes @ 0x57
 20944   000558                     	ds	1
 20945   000559                     consumerProcessMessage@enn:
 20946                           	callstack 0
 20947                           
 20948                           ; 2 bytes @ 0x58
 20949   000559                     	ds	1
 20950   00055A                     mnsProcessMessage@newMode:
 20951                           	callstack 0
 20952                           
 20953                           ; 1 bytes @ 0x59
 20954   00055A                     	ds	1
 20955   00055B                     consumerProcessMessage@ret:
 20956                           	callstack 0
 20957                           
 20958                           ; 1 bytes @ 0x5A
 20959   00055B                     	ds	1
 20960   00055C                     consumerProcessMessage@tableIndex:
 20961                           	callstack 0
 20962                           
 20963                           ; 1 bytes @ 0x5B
 20964   00055C                     	ds	1
 20965   00055D                     main@i:
 20966                           	callstack 0
 20967   00055D                     
 20968                           ; 1 bytes @ 0x5C
 20969   00055D                     	ds	1
 20970   00055E                     main@t1:
 20971                           	callstack 0
 20972                           
 20973                           ; 1 bytes @ 0x5D
 20974   00055E                     	ds	1
 20975   00055F                     main@t2:
 20976                           	callstack 0
 20977                           
 20978                           ; 1 bytes @ 0x5E
 20979   00055F                     	ds	1
 20980                           
 20981 ;;
 20982 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 20983 ;;
 20984 ;; *************** function _main *****************
 20985 ;; Defined at:
 20986 ;;		line 1261 in file "../../VLCBlib_PIC/vlcb.c"
 20987 ;; Parameters:    Size  Location     Type
 20988 ;;		None
 20989 ;; Auto vars:     Size  Location     Type
 20990 ;;  t2              1   94[COMRAM] unsigned char 
 20991 ;;  t1              1   93[COMRAM] unsigned char 
 20992 ;;  i               1   92[COMRAM] unsigned char 
 20993 ;; Return value:  Size  Location     Type
 20994 ;;                  1    wreg      void 
 20995 ;; Registers used:
 20996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20997 ;; Tracked objects:
 20998 ;;		On entry : 0/0
 20999 ;;		On exit  : 0/0
 21000 ;;		Unchanged: 0/0
 21001 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21003 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21005 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21006 ;;Total ram usage:        3 bytes
 21007 ;; Hardware stack levels required when called: 12
 21008 ;; This function calls:
 21009 ;;		_checkPowerOnPb
 21010 ;;		_factoryReset
 21011 ;;		_initRomOps
 21012 ;;		_loop
 21013 ;;		_poll
 21014 ;;		_powerUp
 21015 ;;		_readNVM
 21016 ;;		_setup
 21017 ;; This function is called by:
 21018 ;;		Startup code after reset
 21019 ;; This function uses a non-reentrant model
 21020 ;;
 21021                           
 21022                           	psect	text0
 21023   006224                     __ptext0:
 21024                           	callstack 0
 21025   006224                     _main:
 21026                           	callstack 115
 21027   006224                     
 21028                           ;../../VLCBlib_PIC/vlcb.c: 1262:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1263:     uint
      +                          8_t t1,t2;;../../VLCBlib_PIC/vlcb.c: 1272:     OSCCON1bits.NOSC = 2;
 21029   006224  0100               	movlb	0	; () banked
 21030   006226  51AD               	movf	173,w,b	;volatile
 21031   006228  0B8F               	andlw	-113
 21032   00622A  0920               	iorlw	32
 21033   00622C  6FAD               	movwf	173,b	;volatile
 21034                           
 21035                           ;../../VLCBlib_PIC/vlcb.c: 1273:     OSCCON1bits.NDIV = 0;
 21036   00622E  0EF0               	movlw	-16
 21037   006230  17AD               	andwf	173,f,b	;volatile
 21038   006232                     l2093:
 21039                           
 21040                           ; BSR set to: 0
 21041                           ;../../VLCBlib_PIC/vlcb.c: 1280:     while ( ! OSCCON3bits.ORDY) {
 21042   006232  A9AF               	btfss	175,4,b	;volatile
 21043   006234  EF1E  F031         	goto	u8651
 21044   006238  EF20  F031         	goto	u8650
 21045   00623C                     u8651:
 21046   00623C  EF19  F031         	goto	l2093
 21047   006240                     u8650:
 21048   006240                     
 21049                           ; BSR set to: 0
 21050                           ;../../VLCBlib_PIC/vlcb.c: 1289:     for (t1=0; t1<64; t1++) {
 21051   006240  6A5E               	clrf	main@t1^(0+1280),c
 21052   006242                     l2096:
 21053                           
 21054                           ;../../VLCBlib_PIC/vlcb.c: 1290:         for (t2=0; t2<255; t2++) {
 21055   006242  6A5F               	clrf	main@t2^(0+1280),c
 21056   006244                     l2098:
 21057                           
 21058                           ;../../VLCBlib_PIC/vlcb.c: 1291:             for (i=0; i<255; i++) {
 21059   006244  6A5D               	clrf	main@i^(0+1280),c
 21060   006246                     l2100:
 21061                           
 21062                           ;../../VLCBlib_PIC/vlcb.c: 1293:                 (LATBbits.LATB7=0);
 21063   006246  9EBF               	bcf	191,7,c	;volatile
 21064   006248                     
 21065                           ;../../VLCBlib_PIC/vlcb.c: 1294:             }
 21066   006248  2A5D               	incf	main@i^(0+1280),f,c
 21067   00624A  285D               	incf	main@i^(0+1280),w,c
 21068   00624C  A4D8               	btfss	status,2,c
 21069   00624E  EF2B  F031         	goto	u8661
 21070   006252  EF2D  F031         	goto	u8660
 21071   006256                     u8661:
 21072   006256  EF23  F031         	goto	l2100
 21073   00625A                     u8660:
 21074   00625A                     
 21075                           ;../../VLCBlib_PIC/vlcb.c: 1295:         }
 21076   00625A  2A5F               	incf	main@t2^(0+1280),f,c
 21077   00625C  285F               	incf	main@t2^(0+1280),w,c
 21078   00625E  A4D8               	btfss	status,2,c
 21079   006260  EF34  F031         	goto	u8671
 21080   006264  EF36  F031         	goto	u8670
 21081   006268                     u8671:
 21082   006268  EF22  F031         	goto	l2098
 21083   00626C                     u8670:
 21084   00626C                     
 21085                           ;../../VLCBlib_PIC/vlcb.c: 1296:     }
 21086   00626C  2A5E               	incf	main@t1^(0+1280),f,c
 21087   00626E  0E3F               	movlw	63
 21088   006270  645E               	cpfsgt	main@t1^(0+1280),c
 21089   006272  EF3D  F031         	goto	u8681
 21090   006276  EF3F  F031         	goto	u8680
 21091   00627A                     u8681:
 21092   00627A  EF21  F031         	goto	l2096
 21093   00627E                     u8680:
 21094   00627E                     
 21095                           ;../../VLCBlib_PIC/vlcb.c: 1306:     IVTBASEU = 0x00;
 21096   00627E  0104               	movlb	4	; () banked
 21097   006280  6B5F               	clrf	95,b	;volatile
 21098   006282                     
 21099                           ; BSR set to: 4
 21100                           ;../../VLCBlib_PIC/vlcb.c: 1307:     IVTBASEH = 0x09;
 21101   006282  0E09               	movlw	9
 21102   006284  6F5E               	movwf	94,b	;volatile
 21103   006286                     
 21104                           ; BSR set to: 4
 21105                           ;../../VLCBlib_PIC/vlcb.c: 1308:     IVTBASEL = 0x00;
 21106   006286  6B5D               	clrf	93,b	;volatile
 21107                           
 21108                           ;../../VLCBlib_PIC/vlcb.c: 1310:     IVTLOCK = 0x55;
 21109   006288  0E55               	movlw	85
 21110   00628A  6F59               	movwf	89,b	;volatile
 21111                           
 21112                           ;../../VLCBlib_PIC/vlcb.c: 1311:     IVTLOCK = 0xAA;
 21113   00628C  0EAA               	movlw	170
 21114   00628E  6F59               	movwf	89,b	;volatile
 21115   006290                     
 21116                           ; BSR set to: 4
 21117                           ;../../VLCBlib_PIC/vlcb.c: 1312:     IVTLOCKbits.IVTLOCKED = 0x01;
 21118   006290  8159               	bsf	89,0,b	;volatile
 21119   006292                     
 21120                           ; BSR set to: 4
 21121                           ;../../VLCBlib_PIC/vlcb.c: 1324:     initRomOps();
 21122   006292  ECD5  F040         	call	_initRomOps	;wreg free
 21123   006296                     
 21124                           ;../../VLCBlib_PIC/vlcb.c: 1326:     if (readNVM(EEPROM_NVM_TYPE, 0x3FA) != 1) {
 21125   006296  0EFA               	movlw	250
 21126   006298  6E07               	movwf	readNVM@index^(0+1280),c
 21127   00629A  0E03               	movlw	3
 21128   00629C  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21129   00629E  0E00               	movlw	0
 21130   0062A0  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21131   0062A2  0E00               	movlw	0
 21132   0062A4  ECEA  F039         	call	_readNVM
 21133   0062A8  0407               	decf	?_readNVM^(0+1280),w,c
 21134   0062AA  1008               	iorwf	(?_readNVM+1)^(0+1280),w,c
 21135   0062AC  B4D8               	btfsc	status,2,c
 21136   0062AE  EF5B  F031         	goto	u8691
 21137   0062B2  EF5D  F031         	goto	u8690
 21138   0062B6                     u8691:
 21139   0062B6  EF5F  F031         	goto	l2102
 21140   0062BA                     u8690:
 21141   0062BA                     
 21142                           ;../../VLCBlib_PIC/vlcb.c: 1327:         factoryReset();
 21143   0062BA  EC97  F02A         	call	_factoryReset	;wreg free
 21144   0062BE                     l2102:
 21145                           
 21146                           ;../../VLCBlib_PIC/vlcb.c: 1331:     powerUp();
 21147   0062BE  EC94  F02B         	call	_powerUp	;wreg free
 21148   0062C2                     
 21149                           ;../../VLCBlib_PIC/vlcb.c: 1334:     {INTCON0bits.GIE = 1;};
 21150   0062C2  8ED6               	bsf	214,7,c	;volatile
 21151                           
 21152                           ;../../VLCBlib_PIC/vlcb.c: 1335:     checkPowerOnPb();
 21153   0062C4  ECCB  F032         	call	_checkPowerOnPb	;wreg free
 21154   0062C8                     
 21155                           ;../../VLCBlib_PIC/vlcb.c: 1338:     {INTCON0bits.GIE = 0;};
 21156   0062C8  9ED6               	bcf	214,7,c	;volatile
 21157   0062CA                     
 21158                           ;../../VLCBlib_PIC/vlcb.c: 1339:     setup();
 21159   0062CA  EC80  F03E         	call	_setup	;wreg free
 21160   0062CE                     
 21161                           ;../../VLCBlib_PIC/vlcb.c: 1342:     {INTCON0bits.GIE = 1;};
 21162   0062CE  8ED6               	bsf	214,7,c	;volatile
 21163   0062D0                     l11105:
 21164                           
 21165                           ;../../VLCBlib_PIC/vlcb.c: 1346:         poll();
 21166   0062D0  EC63  F017         	call	_poll	;wreg free
 21167   0062D4                     
 21168                           ;../../VLCBlib_PIC/vlcb.c: 1347:         loop();
 21169   0062D4  EC1F  F03C         	call	_loop	;wreg free
 21170   0062D8  EF68  F031         	goto	l11105
 21171   0062DC  EF01  F005         	goto	start
 21172   0062E0                     __end_of_main:
 21173                           	callstack 0
 21174                           
 21175 ;; *************** function _setup *****************
 21176 ;; Defined at:
 21177 ;;		line 212 in file "../main.c"
 21178 ;; Parameters:    Size  Location     Type
 21179 ;;		None
 21180 ;; Auto vars:     Size  Location     Type
 21181 ;;		None
 21182 ;; Return value:  Size  Location     Type
 21183 ;;                  1    wreg      void 
 21184 ;; Registers used:
 21185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21186 ;; Tracked objects:
 21187 ;;		On entry : 0/0
 21188 ;;		On exit  : 0/0
 21189 ;;		Unchanged: 0/0
 21190 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21195 ;;Total ram usage:        0 bytes
 21196 ;; Hardware stack levels used: 1
 21197 ;; Hardware stack levels required when called: 2
 21198 ;; This function calls:
 21199 ;;		_initARGB
 21200 ;;		_setTimedResponseDelay
 21201 ;;		_tickGet
 21202 ;;		_updateLedRange
 21203 ;; This function is called by:
 21204 ;;		_main
 21205 ;; This function uses a non-reentrant model
 21206 ;;
 21207                           
 21208                           	psect	text1
 21209   007D00                     __ptext1:
 21210                           	callstack 0
 21211   007D00                     _setup:
 21212                           	callstack 124
 21213   007D00                     
 21214                           ;../main.c: 214:     transport = &canTransport;
 21215   007D00  0EF9               	movlw	low _canTransport
 21216   007D02  0105               	movlb	5	; () banked
 21217   007D04  6F91               	movwf	_transport& (0+255),b
 21218   007D06  0EFF               	movlw	high _canTransport
 21219   007D08  6F92               	movwf	(_transport+1)& (0+255),b
 21220   007D0A                     
 21221                           ; BSR set to: 5
 21222                           ;../main.c: 219:     setTimedResponseDelay(5);
 21223   007D0A  0E05               	movlw	5
 21224   007D0C  EC0A  F041         	call	_setTimedResponseDelay
 21225   007D10                     
 21226                           ;../main.c: 221:     initARGB();
 21227   007D10  ECF1  F023         	call	_initARGB	;wreg free
 21228   007D14                     
 21229                           ;../main.c: 223:     ANSELA = 0x00;
 21230   007D14  0104               	movlb	4	; () banked
 21231   007D16  6B00               	clrf	0,b	;volatile
 21232   007D18                     
 21233                           ; BSR set to: 4
 21234                           ;../main.c: 224:     ANSELB = 0x00;
 21235   007D18  6B08               	clrf	8,b	;volatile
 21236   007D1A                     
 21237                           ; BSR set to: 4
 21238                           ;../main.c: 225:     ANSELC = 0x00;
 21239   007D1A  6B10               	clrf	16,b	;volatile
 21240   007D1C                     
 21241                           ; BSR set to: 4
 21242                           ;../main.c: 228:     (INTCON0bits.GIE = 1);
 21243   007D1C  8ED6               	bsf	214,7,c	;volatile
 21244   007D1E                     
 21245                           ; BSR set to: 4
 21246                           ;../main.c: 229:     flashTime.val = tickGet();
 21247   007D1E  EC75  F039         	call	_tickGet	;wreg free
 21248   007D22  C501  F580         	movff	?_tickGet,_flashTime
 21249   007D26  C502  F581         	movff	?_tickGet+1,_flashTime+1
 21250   007D2A  C503  F582         	movff	?_tickGet+2,_flashTime+2
 21251   007D2E  C504  F583         	movff	?_tickGet+3,_flashTime+3
 21252   007D32  0012               	return		;funcret
 21253   007D34                     __end_of_setup:
 21254                           	callstack 0
 21255                           
 21256 ;; *************** function _setTimedResponseDelay *****************
 21257 ;; Defined at:
 21258 ;;		line 911 in file "../../VLCBlib_PIC/vlcb.c"
 21259 ;; Parameters:    Size  Location     Type
 21260 ;;  delay           1    wreg     unsigned char 
 21261 ;; Auto vars:     Size  Location     Type
 21262 ;;  delay           1    0[COMRAM] unsigned char 
 21263 ;; Return value:  Size  Location     Type
 21264 ;;                  1    wreg      void 
 21265 ;; Registers used:
 21266 ;;		wreg
 21267 ;; Tracked objects:
 21268 ;;		On entry : 0/0
 21269 ;;		On exit  : 0/0
 21270 ;;		Unchanged: 0/0
 21271 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21273 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21275 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21276 ;;Total ram usage:        1 bytes
 21277 ;; Hardware stack levels used: 1
 21278 ;; Hardware stack levels required when called: 1
 21279 ;; This function calls:
 21280 ;;		Nothing
 21281 ;; This function is called by:
 21282 ;;		_setup
 21283 ;; This function uses a non-reentrant model
 21284 ;;
 21285                           
 21286                           	psect	text2
 21287   008214                     __ptext2:
 21288                           	callstack 0
 21289   008214                     _setTimedResponseDelay:
 21290                           	callstack 124
 21291                           
 21292                           ;incstack = 0
 21293                           ;setTimedResponseDelay@delay stored from wreg
 21294   008214  6E01               	movwf	setTimedResponseDelay@delay^(0+1280),c
 21295   008216                     
 21296                           ;../../VLCBlib_PIC/vlcb.c: 912:     timedResponseDelay = delay;
 21297   008216  C501  F593         	movff	setTimedResponseDelay@delay,_timedResponseDelay
 21298   00821A  0012               	return		;funcret
 21299   00821C                     __end_of_setTimedResponseDelay:
 21300                           	callstack 0
 21301                           
 21302 ;; *************** function _powerUp *****************
 21303 ;; Defined at:
 21304 ;;		line 886 in file "../../VLCBlib_PIC/vlcb.c"
 21305 ;; Parameters:    Size  Location     Type
 21306 ;;		None
 21307 ;; Auto vars:     Size  Location     Type
 21308 ;;  i               1   44[COMRAM] unsigned char 
 21309 ;;  divider         1    0        unsigned char 
 21310 ;; Return value:  Size  Location     Type
 21311 ;;                  1    wreg      void 
 21312 ;; Registers used:
 21313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21314 ;; Tracked objects:
 21315 ;;		On entry : 0/0
 21316 ;;		On exit  : 0/0
 21317 ;;		Unchanged: 0/0
 21318 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21320 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21321 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21322 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21323 ;;Total ram usage:        5 bytes
 21324 ;; Hardware stack levels used: 1
 21325 ;; Hardware stack levels required when called: 6
 21326 ;; This function calls:
 21327 ;;		_bootPowerUp
 21328 ;;		_canPowerUp
 21329 ;;		_consumerPowerUp
 21330 ;;		_initTicker
 21331 ;;		_initTimedResponse
 21332 ;;		_leds_powerUp
 21333 ;;		_mnsPowerUp
 21334 ;;		_nvPowerUp
 21335 ;;		_teachPowerUp
 21336 ;; This function is called by:
 21337 ;;		_main
 21338 ;; This function uses a non-reentrant model
 21339 ;;
 21340                           
 21341                           	psect	text3
 21342   005728                     __ptext3:
 21343                           	callstack 0
 21344   005728                     _powerUp:
 21345                           	callstack 120
 21346   005728                     
 21347                           ;../../VLCBlib_PIC/vlcb.c: 887:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 888:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 891:     initTicker(0);
 21348   005728  0E00               	movlw	0
 21349   00572A  EC60  F03B         	call	_initTicker
 21350   00572E                     
 21351                           ;../../VLCBlib_PIC/vlcb.c: 892:     initTimedResponse();
 21352   00572E  EC12  F041         	call	_initTimedResponse	;wreg free
 21353   005732                     
 21354                           ;../../VLCBlib_PIC/vlcb.c: 893:     leds_powerUp();
 21355   005732  EC26  F040         	call	_leds_powerUp	;wreg free
 21356   005736                     
 21357                           ;../../VLCBlib_PIC/vlcb.c: 894:     timedResponseDelay = 5;
 21358   005736  0E05               	movlw	5
 21359   005738  0105               	movlb	5	; () banked
 21360   00573A  6F93               	movwf	_timedResponseDelay& (0+255),b
 21361   00573C                     
 21362                           ; BSR set to: 5
 21363                           ;../../VLCBlib_PIC/vlcb.c: 896:     for (i=0; i<6; i++) {
 21364   00573C  6A2D               	clrf	powerUp@i^(0+1280),c
 21365   00573E                     l10915:
 21366                           
 21367                           ;../../VLCBlib_PIC/vlcb.c: 897:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
 21368   00573E  502D               	movf	powerUp@i^(0+1280),w,c
 21369   005740  0D02               	mullw	2
 21370   005742  0E89               	movlw	low _services
 21371   005744  24F3               	addwf	243,w,c
 21372   005746  6EF6               	movwf	tblptrl,c
 21373   005748  0EFF               	movlw	high _services
 21374   00574A  20F4               	addwfc	244,w,c
 21375   00574C  6EF7               	movwf	tblptrh,c
 21376   00574E                     	if	1	;There are 3 active tblptr bytes
 21377   00574E  6AF8               	clrf	tblptru,c
 21378   005750  0E00               	movlw	low (__mediumconst shr (0+16))
 21379   005752  22F8               	addwfc	tblptru,f,c
 21380   005754                     	endif
 21381   005754  0009               	tblrd		*+
 21382   005756  50F5               	movf	tablat,w,c
 21383   005758  0009               	tblrd		*+
 21384   00575A  10F5               	iorwf	tablat,w,c
 21385   00575C  B4D8               	btfsc	status,2,c
 21386   00575E  EFB3  F02B         	goto	u8311
 21387   005762  EFB5  F02B         	goto	u8310
 21388   005766                     u8311:
 21389   005766  EF06  F02C         	goto	l10921
 21390   00576A                     u8310:
 21391   00576A  502D               	movf	powerUp@i^(0+1280),w,c
 21392   00576C  0D02               	mullw	2
 21393   00576E  0E89               	movlw	low _services
 21394   005770  24F3               	addwf	243,w,c
 21395   005772  6EF6               	movwf	tblptrl,c
 21396   005774  0EFF               	movlw	high _services
 21397   005776  20F4               	addwfc	244,w,c
 21398   005778  6EF7               	movwf	tblptrh,c
 21399   00577A                     	if	1	;There are 3 active tblptr bytes
 21400   00577A  6AF8               	clrf	tblptru,c
 21401   00577C  0E00               	movlw	low (__mediumconst shr (0+16))
 21402   00577E  22F8               	addwfc	tblptru,f,c
 21403   005780                     	endif
 21404   005780  0009               	tblrd		*+
 21405   005782  C4F5 F529          	movff	tablat,??_powerUp
 21406   005786  0009               	tblrd		*+
 21407   005788  C4F5 F52A          	movff	tablat,??_powerUp+1
 21408   00578C  0E04               	movlw	4
 21409   00578E  2629               	addwf	??_powerUp^(0+1280),f,c
 21410   005790  0E00               	movlw	0
 21411   005792  222A               	addwfc	(??_powerUp+1)^(0+1280),f,c
 21412   005794  C529  F4F6         	movff	??_powerUp,tblptrl
 21413   005798  C52A  F4F7         	movff	??_powerUp+1,tblptrh
 21414   00579C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21415   00579C  6AF8               	clrf	tblptru,c
 21416   00579E                     	endif
 21417   00579E                     	if	0	;tblptru may be non-zero
 21418   00579E                     	endif
 21419   00579E  0009               	tblrd		*+
 21420   0057A0  50F5               	movf	tablat,w,c
 21421   0057A2  0009               	tblrd		*+
 21422   0057A4  10F5               	iorwf	tablat,w,c
 21423   0057A6  B4D8               	btfsc	status,2,c
 21424   0057A8  EFD8  F02B         	goto	u8321
 21425   0057AC  EFDA  F02B         	goto	u8320
 21426   0057B0                     u8321:
 21427   0057B0  EF06  F02C         	goto	l10921
 21428   0057B4                     u8320:
 21429   0057B4                     
 21430                           ;../../VLCBlib_PIC/vlcb.c: 898:             services[i]->powerUp();
 21431   0057B4  502D               	movf	powerUp@i^(0+1280),w,c
 21432   0057B6  0D02               	mullw	2
 21433   0057B8  0E89               	movlw	low _services
 21434   0057BA  24F3               	addwf	243,w,c
 21435   0057BC  6EF6               	movwf	tblptrl,c
 21436   0057BE  0EFF               	movlw	high _services
 21437   0057C0  20F4               	addwfc	244,w,c
 21438   0057C2  6EF7               	movwf	tblptrh,c
 21439   0057C4                     	if	1	;There are 3 active tblptr bytes
 21440   0057C4  6AF8               	clrf	tblptru,c
 21441   0057C6  0E00               	movlw	low (__mediumconst shr (0+16))
 21442   0057C8  22F8               	addwfc	tblptru,f,c
 21443   0057CA                     	endif
 21444   0057CA  0009               	tblrd		*+
 21445   0057CC  C4F5 F529          	movff	tablat,??_powerUp
 21446   0057D0  0009               	tblrd		*+
 21447   0057D2  C4F5 F52A          	movff	tablat,??_powerUp+1
 21448   0057D6  0E04               	movlw	4
 21449   0057D8  2629               	addwf	??_powerUp^(0+1280),f,c
 21450   0057DA  0E00               	movlw	0
 21451   0057DC  222A               	addwfc	(??_powerUp+1)^(0+1280),f,c
 21452   0057DE  C529  F4F6         	movff	??_powerUp,tblptrl
 21453   0057E2  C52A  F4F7         	movff	??_powerUp+1,tblptrh
 21454   0057E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21455   0057E6  6AF8               	clrf	tblptru,c
 21456   0057E8                     	endif
 21457   0057E8                     	if	0	;tblptru may be non-zero
 21458   0057E8                     	endif
 21459   0057E8  0009               	tblrd		*+
 21460   0057EA  C4F5 F52B          	movff	tablat,??_powerUp+2
 21461   0057EE  0009               	tblrd		*+
 21462   0057F0  C4F5 F52C          	movff	tablat,??_powerUp+3
 21463   0057F4  D802               	call	u8338
 21464   0057F6  EF06  F02C         	goto	u8339
 21465   0057FA                     u8338:
 21466   0057FA  0005               	push	
 21467   0057FC  6EFA               	movwf	pclath,c
 21468   0057FE  502B               	movf	(??_powerUp+2)^(0+1280),w,c
 21469   005800  6EFD               	movwf	tosl,c
 21470   005802  502C               	movf	(??_powerUp+3)^(0+1280),w,c
 21471   005804  6EFE               	movwf	tosh,c
 21472   005806  6AFF               	clrf	tosu,c
 21473   005808  50FA               	movf	pclath,w,c
 21474   00580A  0012               	return		;indir
 21475   00580C                     u8339:
 21476   00580C                     l10921:
 21477                           
 21478                           ;../../VLCBlib_PIC/vlcb.c: 900:     }
 21479   00580C  2A2D               	incf	powerUp@i^(0+1280),f,c
 21480   00580E  0E05               	movlw	5
 21481   005810  642D               	cpfsgt	powerUp@i^(0+1280),c
 21482   005812  EF0D  F02C         	goto	u8341
 21483   005816  EF0F  F02C         	goto	u8340
 21484   00581A                     u8341:
 21485   00581A  EF9F  F02B         	goto	l10915
 21486   00581E                     u8340:
 21487   00581E  0012               	return		;funcret
 21488   005820                     __end_of_powerUp:
 21489                           	callstack 0
 21490                           
 21491 ;; *************** function _nvPowerUp *****************
 21492 ;; Defined at:
 21493 ;;		line 136 in file "../../VLCBlib_PIC/nv.c"
 21494 ;; Parameters:    Size  Location     Type
 21495 ;;		None
 21496 ;; Auto vars:     Size  Location     Type
 21497 ;;  i               1   17[COMRAM] unsigned char 
 21498 ;; Return value:  Size  Location     Type
 21499 ;;                  1    wreg      void 
 21500 ;; Registers used:
 21501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21502 ;; Tracked objects:
 21503 ;;		On entry : 0/0
 21504 ;;		On exit  : 0/0
 21505 ;;		Unchanged: 0/0
 21506 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21510 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21511 ;;Total ram usage:        1 bytes
 21512 ;; Hardware stack levels used: 1
 21513 ;; Hardware stack levels required when called: 4
 21514 ;; This function calls:
 21515 ;;		_loadNvCache
 21516 ;; This function is called by:
 21517 ;;		_powerUp
 21518 ;; This function uses a non-reentrant model
 21519 ;;
 21520                           
 21521                           	psect	text4
 21522   007C5A                     __ptext4:
 21523                           	callstack 0
 21524   007C5A                     _nvPowerUp:
 21525                           	callstack 121
 21526   007C5A                     
 21527                           ;../../VLCBlib_PIC/nv.c: 138:     uint8_t i;;../../VLCBlib_PIC/nv.c: 139:     for (i=1; 
      +                          i <= 2; i++) {
 21528   007C5A  0E01               	movlw	1
 21529   007C5C  6E12               	movwf	nvPowerUp@i^(0+1280),c
 21530   007C5E                     l10605:
 21531                           
 21532                           ;../../VLCBlib_PIC/nv.c: 140:         nvDiagnostics[i].asUint = 0;
 21533   007C5E  5012               	movf	nvPowerUp@i^(0+1280),w,c
 21534   007C60  0D02               	mullw	2
 21535   007C62  0EBB               	movlw	low _nvDiagnostics
 21536   007C64  24F3               	addwf	243,w,c
 21537   007C66  6ED9               	movwf	fsr2l,c
 21538   007C68  0E05               	movlw	high _nvDiagnostics
 21539   007C6A  20F4               	addwfc	prodh,w,c
 21540   007C6C  6EDA               	movwf	fsr2h,c
 21541   007C6E  6ADE               	clrf	postinc2,c
 21542   007C70  6ADD               	clrf	postdec2,c
 21543   007C72                     
 21544                           ;../../VLCBlib_PIC/nv.c: 141:     }
 21545   007C72  2A12               	incf	nvPowerUp@i^(0+1280),f,c
 21546   007C74  0E02               	movlw	2
 21547   007C76  6412               	cpfsgt	nvPowerUp@i^(0+1280),c
 21548   007C78  EF40  F03E         	goto	u8011
 21549   007C7C  EF42  F03E         	goto	u8010
 21550   007C80                     u8011:
 21551   007C80  EF2F  F03E         	goto	l10605
 21552   007C84                     u8010:
 21553   007C84                     
 21554                           ;../../VLCBlib_PIC/nv.c: 142:     nvDiagnostics[0x00].asUint = 2;
 21555   007C84  0E00               	movlw	0
 21556   007C86  0105               	movlb	5	; () banked
 21557   007C88  6FBC               	movwf	(_nvDiagnostics+1)& (0+255),b
 21558   007C8A  0E02               	movlw	2
 21559   007C8C  6FBB               	movwf	_nvDiagnostics& (0+255),b
 21560   007C8E                     
 21561                           ; BSR set to: 5
 21562                           ;../../VLCBlib_PIC/nv.c: 145:     loadNvCache();
 21563   007C8E  EC2F  F03B         	call	_loadNvCache	;wreg free
 21564   007C92  0012               	return		;funcret
 21565   007C94                     __end_of_nvPowerUp:
 21566                           	callstack 0
 21567                           
 21568 ;; *************** function _mnsPowerUp *****************
 21569 ;; Defined at:
 21570 ;;		line 297 in file "../../VLCBlib_PIC/mns.c"
 21571 ;; Parameters:    Size  Location     Type
 21572 ;;		None
 21573 ;; Auto vars:     Size  Location     Type
 21574 ;;  temp            2   13[COMRAM] int 
 21575 ;;  i               1   12[COMRAM] unsigned char 
 21576 ;; Return value:  Size  Location     Type
 21577 ;;                  1    wreg      void 
 21578 ;; Registers used:
 21579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21580 ;; Tracked objects:
 21581 ;;		On entry : 0/0
 21582 ;;		On exit  : 0/0
 21583 ;;		Unchanged: 0/0
 21584 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21586 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21588 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21589 ;;Total ram usage:        3 bytes
 21590 ;; Hardware stack levels used: 1
 21591 ;; Hardware stack levels required when called: 3
 21592 ;; This function calls:
 21593 ;;		_readNVM
 21594 ;;		_setLEDsByMode
 21595 ;;		_tickGet
 21596 ;; This function is called by:
 21597 ;;		_powerUp
 21598 ;; This function uses a non-reentrant model
 21599 ;;
 21600                           
 21601                           	psect	text5
 21602   004E12                     __ptext5:
 21603                           	callstack 0
 21604   004E12                     _mnsPowerUp:
 21605                           	callstack 122
 21606   004E12                     
 21607                           ;../../VLCBlib_PIC/mns.c: 298:     int temp;;../../VLCBlib_PIC/mns.c: 299:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 301:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
 21608   004E12  0EFD               	movlw	253
 21609   004E14  6E07               	movwf	readNVM@index^(0+1280),c
 21610   004E16  0E03               	movlw	3
 21611   004E18  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21612   004E1A  0E00               	movlw	0
 21613   004E1C  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21614   004E1E  0E00               	movlw	0
 21615   004E20  ECEA  F039         	call	_readNVM
 21616   004E24  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21617   004E28  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21618   004E2C                     
 21619                           ;../../VLCBlib_PIC/mns.c: 302:     if (temp < 0) {
 21620   004E2C  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21621   004E2E  EF1D  F027         	goto	u7400
 21622   004E32  EF1B  F027         	goto	u7401
 21623   004E36                     u7401:
 21624   004E36  EF22  F027         	goto	l1295
 21625   004E3A                     u7400:
 21626   004E3A                     l10073:
 21627                           
 21628                           ;../../VLCBlib_PIC/mns.c: 303:         nn.bytes.hi = 0;
 21629   004E3A  0105               	movlb	5	; () banked
 21630   004E3C  6B90               	clrf	(_nn+1)& (0+255),b
 21631                           
 21632                           ;../../VLCBlib_PIC/mns.c: 304:         nn.bytes.lo = 0;
 21633   004E3E  6B8F               	clrf	_nn& (0+255),b
 21634                           
 21635                           ;../../VLCBlib_PIC/mns.c: 305:     } else {
 21636   004E40  EF3C  F027         	goto	l10081
 21637   004E44                     l1295:
 21638                           
 21639                           ;../../VLCBlib_PIC/mns.c: 306:         nn.bytes.hi = (uint8_t)temp;
 21640   004E44  C50E  F590         	movff	mnsPowerUp@temp,_nn+1
 21641   004E48                     
 21642                           ;../../VLCBlib_PIC/mns.c: 307:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
 21643   004E48  0EFC               	movlw	252
 21644   004E4A  6E07               	movwf	readNVM@index^(0+1280),c
 21645   004E4C  0E03               	movlw	3
 21646   004E4E  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21647   004E50  0E00               	movlw	0
 21648   004E52  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21649   004E54  0E00               	movlw	0
 21650   004E56  ECEA  F039         	call	_readNVM
 21651   004E5A  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21652   004E5E  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21653   004E62                     
 21654                           ;../../VLCBlib_PIC/mns.c: 308:         if (temp < 0) {
 21655   004E62  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21656   004E64  EF38  F027         	goto	u7410
 21657   004E68  EF36  F027         	goto	u7411
 21658   004E6C                     u7411:
 21659   004E6C  EF3A  F027         	goto	l1297
 21660   004E70                     u7410:
 21661   004E70  EF1D  F027         	goto	l10073
 21662   004E74                     l1297:
 21663                           
 21664                           ;../../VLCBlib_PIC/mns.c: 312:             nn.bytes.lo = (uint8_t)temp;
 21665   004E74  C50E  F58F         	movff	mnsPowerUp@temp,_nn
 21666   004E78                     l10081:
 21667                           
 21668                           ;../../VLCBlib_PIC/mns.c: 315:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
 21669   004E78  0EFB               	movlw	251
 21670   004E7A  6E07               	movwf	readNVM@index^(0+1280),c
 21671   004E7C  0E03               	movlw	3
 21672   004E7E  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21673   004E80  0E00               	movlw	0
 21674   004E82  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21675   004E84  0E00               	movlw	0
 21676   004E86  ECEA  F039         	call	_readNVM
 21677   004E8A  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21678   004E8E  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21679   004E92                     
 21680                           ;../../VLCBlib_PIC/mns.c: 316:     if (temp < 0) {
 21681   004E92  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21682   004E94  EF50  F027         	goto	u7420
 21683   004E98  EF4E  F027         	goto	u7421
 21684   004E9C                     u7421:
 21685   004E9C  EF54  F027         	goto	l1299
 21686   004EA0                     u7420:
 21687   004EA0                     
 21688                           ;../../VLCBlib_PIC/mns.c: 317:         mode_state = MODE_UNINITIALISED;
 21689   004EA0  0105               	movlb	5	; () banked
 21690   004EA2  69A1               	setf	_mode_state& (0+255),b
 21691                           
 21692                           ;../../VLCBlib_PIC/mns.c: 318:     } else {
 21693   004EA4  EF56  F027         	goto	l1300
 21694   004EA8                     l1299:
 21695                           
 21696                           ;../../VLCBlib_PIC/mns.c: 319:         mode_state = (uint8_t)temp;
 21697   004EA8  C50E  F5A1         	movff	mnsPowerUp@temp,_mode_state
 21698   004EAC                     l1300:
 21699                           
 21700                           ;../../VLCBlib_PIC/mns.c: 321:     setupModePreviousMode = mode_state;
 21701   004EAC  C5A1  F59E         	movff	_mode_state,_setupModePreviousMode
 21702   004EB0                     
 21703                           ;../../VLCBlib_PIC/mns.c: 322:     temp = readNVM(EEPROM_NVM_TYPE, 0x3F9);
 21704   004EB0  0EF9               	movlw	249
 21705   004EB2  6E07               	movwf	readNVM@index^(0+1280),c
 21706   004EB4  0E03               	movlw	3
 21707   004EB6  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21708   004EB8  0E00               	movlw	0
 21709   004EBA  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21710   004EBC  0E00               	movlw	0
 21711   004EBE  ECEA  F039         	call	_readNVM
 21712   004EC2  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 21713   004EC6  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 21714   004ECA                     
 21715                           ;../../VLCBlib_PIC/mns.c: 323:     if (temp < 0) {
 21716   004ECA  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 21717   004ECC  EF6C  F027         	goto	u7430
 21718   004ED0  EF6A  F027         	goto	u7431
 21719   004ED4                     u7431:
 21720   004ED4  EF70  F027         	goto	l1301
 21721   004ED8                     u7430:
 21722   004ED8                     
 21723                           ;../../VLCBlib_PIC/mns.c: 324:         mode_flags = 0;
 21724   004ED8  0105               	movlb	5	; () banked
 21725   004EDA  6BA4               	clrf	_mode_flags& (0+255),b
 21726                           
 21727                           ;../../VLCBlib_PIC/mns.c: 325:     } else {
 21728   004EDC  EF72  F027         	goto	l10093
 21729   004EE0                     l1301:
 21730                           
 21731                           ;../../VLCBlib_PIC/mns.c: 326:         mode_flags = (uint8_t)temp;
 21732   004EE0  C50E  F5A4         	movff	mnsPowerUp@temp,_mode_flags
 21733   004EE4                     l10093:
 21734                           
 21735                           ;../../VLCBlib_PIC/mns.c: 328:     mode_flags &= ~8;
 21736   004EE4  0105               	movlb	5	; () banked
 21737   004EE6  97A4               	bcf	_mode_flags& (0+255),3,b
 21738                           
 21739                           ;../../VLCBlib_PIC/mns.c: 330:     mode_flags |= 8;
 21740   004EE8  87A4               	bsf	_mode_flags& (0+255),3,b
 21741   004EEA                     
 21742                           ; BSR set to: 5
 21743                           ;../../VLCBlib_PIC/mns.c: 332:     last_mode_flags = mode_flags;
 21744   004EEA  C5A4  F59F         	movff	_mode_flags,_last_mode_flags
 21745   004EEE                     
 21746                           ; BSR set to: 5
 21747                           ;../../VLCBlib_PIC/mns.c: 333:     setLEDsByMode();
 21748   004EEE  EC88  F03D         	call	_setLEDsByMode	;wreg free
 21749   004EF2                     
 21750                           ;../../VLCBlib_PIC/mns.c: 335:     pbTimer.val = tickGet();
 21751   004EF2  EC75  F039         	call	_tickGet	;wreg free
 21752   004EF6  C501  F570         	movff	?_tickGet,_pbTimer
 21753   004EFA  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 21754   004EFE  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 21755   004F02  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 21756   004F06                     
 21757                           ;../../VLCBlib_PIC/mns.c: 336:     pbWasPushed = FALSE;
 21758   004F06  0105               	movlb	5	; () banked
 21759   004F08  6B9D               	clrf	_pbWasPushed& (0+255),b
 21760   004F0A                     
 21761                           ; BSR set to: 5
 21762                           ;../../VLCBlib_PIC/mns.c: 340:     for (i=1; i<= 6; i++) {
 21763   004F0A  0E01               	movlw	1
 21764   004F0C  6E0D               	movwf	mnsPowerUp@i^(0+1280),c
 21765   004F0E                     l10109:
 21766                           
 21767                           ;../../VLCBlib_PIC/mns.c: 341:         mnsDiagnostics[i].asInt = 0;
 21768   004F0E  500D               	movf	mnsPowerUp@i^(0+1280),w,c
 21769   004F10  0D02               	mullw	2
 21770   004F12  0EAD               	movlw	low _mnsDiagnostics
 21771   004F14  24F3               	addwf	243,w,c
 21772   004F16  6ED9               	movwf	fsr2l,c
 21773   004F18  0E05               	movlw	high _mnsDiagnostics
 21774   004F1A  20F4               	addwfc	prodh,w,c
 21775   004F1C  6EDA               	movwf	fsr2h,c
 21776   004F1E  6ADE               	clrf	postinc2,c
 21777   004F20  6ADD               	clrf	postdec2,c
 21778   004F22                     
 21779                           ;../../VLCBlib_PIC/mns.c: 342:     }
 21780   004F22  2A0D               	incf	mnsPowerUp@i^(0+1280),f,c
 21781   004F24  0E06               	movlw	6
 21782   004F26  640D               	cpfsgt	mnsPowerUp@i^(0+1280),c
 21783   004F28  EF98  F027         	goto	u7441
 21784   004F2C  EF9A  F027         	goto	u7440
 21785   004F30                     u7441:
 21786   004F30  EF87  F027         	goto	l10109
 21787   004F34                     u7440:
 21788   004F34                     
 21789                           ;../../VLCBlib_PIC/mns.c: 343:     mnsDiagnostics[0x00].asInt = 6;
 21790   004F34  0E00               	movlw	0
 21791   004F36  0105               	movlb	5	; () banked
 21792   004F38  6FAE               	movwf	(_mnsDiagnostics+1)& (0+255),b
 21793   004F3A  0E06               	movlw	6
 21794   004F3C  6FAD               	movwf	_mnsDiagnostics& (0+255),b
 21795   004F3E                     
 21796                           ; BSR set to: 5
 21797                           ;../../VLCBlib_PIC/mns.c: 345:     heartbeatSequence = 0;
 21798   004F3E  6B9C               	clrf	_heartbeatSequence& (0+255),b
 21799                           
 21800                           ;../../VLCBlib_PIC/mns.c: 346:     heartbeatTimer.val = 0;
 21801   004F40  0E00               	movlw	0
 21802   004F42  6F6C               	movwf	_heartbeatTimer& (0+255),b
 21803   004F44  0E00               	movlw	0
 21804   004F46  6F6D               	movwf	(_heartbeatTimer+1)& (0+255),b
 21805   004F48  0E00               	movlw	0
 21806   004F4A  6F6E               	movwf	(_heartbeatTimer+2)& (0+255),b
 21807   004F4C  0E00               	movlw	0
 21808   004F4E  6F6F               	movwf	(_heartbeatTimer+3)& (0+255),b
 21809                           
 21810                           ;../../VLCBlib_PIC/mns.c: 347:     uptimeTimer.val = 0;
 21811   004F50  0E00               	movlw	0
 21812   004F52  6F68               	movwf	_uptimeTimer& (0+255),b
 21813   004F54  0E00               	movlw	0
 21814   004F56  6F69               	movwf	(_uptimeTimer+1)& (0+255),b
 21815   004F58  0E00               	movlw	0
 21816   004F5A  6F6A               	movwf	(_uptimeTimer+2)& (0+255),b
 21817   004F5C  0E00               	movlw	0
 21818   004F5E  6F6B               	movwf	(_uptimeTimer+3)& (0+255),b
 21819   004F60                     
 21820                           ; BSR set to: 5
 21821   004F60  0012               	return		;funcret
 21822   004F62                     __end_of_mnsPowerUp:
 21823                           	callstack 0
 21824                           
 21825 ;; *************** function _consumerPowerUp *****************
 21826 ;; Defined at:
 21827 ;;		line 92 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 21828 ;; Parameters:    Size  Location     Type
 21829 ;;		None
 21830 ;; Auto vars:     Size  Location     Type
 21831 ;;  temp            1    0[COMRAM] unsigned char 
 21832 ;; Return value:  Size  Location     Type
 21833 ;;                  1    wreg      void 
 21834 ;; Registers used:
 21835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21836 ;; Tracked objects:
 21837 ;;		On entry : 0/0
 21838 ;;		On exit  : 0/0
 21839 ;;		Unchanged: 0/0
 21840 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21844 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21845 ;;Total ram usage:        1 bytes
 21846 ;; Hardware stack levels used: 1
 21847 ;; Hardware stack levels required when called: 1
 21848 ;; This function calls:
 21849 ;;		Nothing
 21850 ;; This function is called by:
 21851 ;;		_powerUp
 21852 ;; This function uses a non-reentrant model
 21853 ;;
 21854                           
 21855                           	psect	text6
 21856   007C94                     __ptext6:
 21857                           	callstack 0
 21858   007C94                     _consumerPowerUp:
 21859                           	callstack 124
 21860   007C94                     
 21861                           ;../../VLCBlib_PIC/event_consumer_simple.c: 94:     uint8_t temp;;../../VLCBlib_PIC/even
      +                          t_consumer_simple.c: 96:     for (temp=1; temp<=2; temp++) {
 21862   007C94  0E01               	movlw	1
 21863   007C96  6E01               	movwf	consumerPowerUp@temp^(0+1280),c
 21864   007C98                     l9683:
 21865                           
 21866                           ;../../VLCBlib_PIC/event_consumer_simple.c: 97:         consumerDiagnostics[temp].asUint
      +                           = 0;
 21867   007C98  5001               	movf	consumerPowerUp@temp^(0+1280),w,c
 21868   007C9A  0D02               	mullw	2
 21869   007C9C  0EC1               	movlw	low _consumerDiagnostics
 21870   007C9E  24F3               	addwf	243,w,c
 21871   007CA0  6ED9               	movwf	fsr2l,c
 21872   007CA2  0E05               	movlw	high _consumerDiagnostics
 21873   007CA4  20F4               	addwfc	prodh,w,c
 21874   007CA6  6EDA               	movwf	fsr2h,c
 21875   007CA8  6ADE               	clrf	postinc2,c
 21876   007CAA  6ADD               	clrf	postdec2,c
 21877   007CAC                     
 21878                           ;../../VLCBlib_PIC/event_consumer_simple.c: 98:     }
 21879   007CAC  2A01               	incf	consumerPowerUp@temp^(0+1280),f,c
 21880   007CAE  0E02               	movlw	2
 21881   007CB0  6401               	cpfsgt	consumerPowerUp@temp^(0+1280),c
 21882   007CB2  EF5D  F03E         	goto	u6891
 21883   007CB6  EF5F  F03E         	goto	u6890
 21884   007CBA                     u6891:
 21885   007CBA  EF4C  F03E         	goto	l9683
 21886   007CBE                     u6890:
 21887   007CBE                     
 21888                           ;../../VLCBlib_PIC/event_consumer_simple.c: 99:     consumerDiagnostics[0].asUint = 2;
 21889   007CBE  0E00               	movlw	0
 21890   007CC0  0105               	movlb	5	; () banked
 21891   007CC2  6FC2               	movwf	(_consumerDiagnostics+1)& (0+255),b
 21892   007CC4  0E02               	movlw	2
 21893   007CC6  6FC1               	movwf	_consumerDiagnostics& (0+255),b
 21894   007CC8                     
 21895                           ; BSR set to: 5
 21896   007CC8  0012               	return		;funcret
 21897   007CCA                     __end_of_consumerPowerUp:
 21898                           	callstack 0
 21899                           
 21900 ;; *************** function _canPowerUp *****************
 21901 ;; Defined at:
 21902 ;;		line 254 in file "../../VLCBlib_PIC/can18_can_2.c"
 21903 ;; Parameters:    Size  Location     Type
 21904 ;;		None
 21905 ;; Auto vars:     Size  Location     Type
 21906 ;;  temp            2   12[COMRAM] int 
 21907 ;;  txFifoObj       2    0        PTR unsigned char 
 21908 ;; Return value:  Size  Location     Type
 21909 ;;                  1    wreg      void 
 21910 ;; Registers used:
 21911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21912 ;; Tracked objects:
 21913 ;;		On entry : 0/0
 21914 ;;		On exit  : 0/0
 21915 ;;		Unchanged: 0/0
 21916 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21918 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21920 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21921 ;;Total ram usage:        2 bytes
 21922 ;; Hardware stack levels used: 1
 21923 ;; Hardware stack levels required when called: 3
 21924 ;; This function calls:
 21925 ;;		_CAN1_OperationModeSet
 21926 ;;		_prepareSelfEnumResponse
 21927 ;;		_readNVM
 21928 ;;		_tickGet
 21929 ;; This function is called by:
 21930 ;;		_powerUp
 21931 ;; This function uses a non-reentrant model
 21932 ;;
 21933                           
 21934                           	psect	text7
 21935   004CA0                     __ptext7:
 21936                           	callstack 0
 21937   004CA0                     _canPowerUp:
 21938                           	callstack 122
 21939   004CA0                     
 21940                           ;../../VLCBlib_PIC/can18_can_2.c: 255:     int temp;;../../VLCBlib_PIC/can18_can_2.c: 25
      +                          6:     uint8_t* txFifoObj;;../../VLCBlib_PIC/can18_can_2.c: 259:     rxQueue.readIndex =
      +                           0;
 21941   004CA0  0105               	movlb	5	; () banked
 21942   004CA2  6BC9               	clrf	(_rxQueue+2)& (0+255),b
 21943                           
 21944                           ;../../VLCBlib_PIC/can18_can_2.c: 260:     rxQueue.writeIndex = 0;
 21945   004CA4  6BCA               	clrf	(_rxQueue+3)& (0+255),b
 21946   004CA6                     
 21947                           ; BSR set to: 5
 21948                           ;../../VLCBlib_PIC/can18_can_2.c: 261:     rxQueue.messages = rxBuffers;
 21949   004CA6  0E46               	movlw	low _rxBuffers
 21950   004CA8  6FC7               	movwf	_rxQueue& (0+255),b
 21951   004CAA  0E06               	movlw	high _rxBuffers
 21952   004CAC  6FC8               	movwf	(_rxQueue+1)& (0+255),b
 21953   004CAE                     
 21954                           ; BSR set to: 5
 21955                           ;../../VLCBlib_PIC/can18_can_2.c: 262:     rxQueue.size = 8;
 21956   004CAE  0E08               	movlw	8
 21957   004CB0  6FCB               	movwf	(_rxQueue+4)& (0+255),b
 21958   004CB2                     
 21959                           ; BSR set to: 5
 21960                           ;../../VLCBlib_PIC/can18_can_2.c: 264:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
 21961   004CB2  0EFE               	movlw	254
 21962   004CB4  6E07               	movwf	readNVM@index^(0+1280),c
 21963   004CB6  0E03               	movlw	3
 21964   004CB8  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 21965   004CBA  0E00               	movlw	0
 21966   004CBC  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 21967   004CBE  0E00               	movlw	0
 21968   004CC0  ECEA  F039         	call	_readNVM
 21969   004CC4  C507  F50D         	movff	?_readNVM,canPowerUp@temp
 21970   004CC8  C508  F50E         	movff	?_readNVM+1,canPowerUp@temp+1
 21971   004CCC                     
 21972                           ;../../VLCBlib_PIC/can18_can_2.c: 265:     if (temp < 0) {
 21973   004CCC  BE0E               	btfsc	(canPowerUp@temp+1)^(0+1280),7,c
 21974   004CCE  EF6D  F026         	goto	u6770
 21975   004CD2  EF6B  F026         	goto	u6771
 21976   004CD6                     u6771:
 21977   004CD6  EF71  F026         	goto	l570
 21978   004CDA                     u6770:
 21979   004CDA                     
 21980                           ;../../VLCBlib_PIC/can18_can_2.c: 267:         canId = 0;
 21981   004CDA  0105               	movlb	5	; () banked
 21982   004CDC  6BA8               	clrf	_canId& (0+255),b
 21983                           
 21984                           ;../../VLCBlib_PIC/can18_can_2.c: 268:     } else {
 21985   004CDE  EF73  F026         	goto	l9439
 21986   004CE2                     l570:
 21987                           
 21988                           ;../../VLCBlib_PIC/can18_can_2.c: 269:         canId = (uint8_t)temp;
 21989   004CE2  C50D  F5A8         	movff	canPowerUp@temp,_canId
 21990   004CE6                     l9439:
 21991                           
 21992                           ;../../VLCBlib_PIC/can18_can_2.c: 273:     for (temp=1; temp<18; temp++) {
 21993   004CE6  0E00               	movlw	0
 21994   004CE8  6E0E               	movwf	(canPowerUp@temp+1)^(0+1280),c
 21995   004CEA  0E01               	movlw	1
 21996   004CEC  6E0D               	movwf	canPowerUp@temp^(0+1280),c
 21997   004CEE                     l9445:
 21998                           
 21999                           ;../../VLCBlib_PIC/can18_can_2.c: 274:         canDiagnostics[temp].asUint = 0;
 22000   004CEE  90D8               	bcf	status,0,c
 22001   004CF0  340D               	rlcf	canPowerUp@temp^(0+1280),w,c
 22002   004CF2  6ED9               	movwf	fsr2l,c
 22003   004CF4  340E               	rlcf	(canPowerUp@temp+1)^(0+1280),w,c
 22004   004CF6  6EDA               	movwf	fsr2h,c
 22005   004CF8  0E8E               	movlw	low _canDiagnostics
 22006   004CFA  26D9               	addwf	fsr2l,f,c
 22007   004CFC  0E06               	movlw	high _canDiagnostics
 22008   004CFE  22DA               	addwfc	fsr2h,f,c
 22009   004D00  6ADE               	clrf	postinc2,c
 22010   004D02  6ADD               	clrf	postdec2,c
 22011   004D04                     
 22012                           ;../../VLCBlib_PIC/can18_can_2.c: 275:     }
 22013   004D04  4A0D               	infsnz	canPowerUp@temp^(0+1280),f,c
 22014   004D06  2A0E               	incf	(canPowerUp@temp+1)^(0+1280),f,c
 22015   004D08  BE0E               	btfsc	(canPowerUp@temp+1)^(0+1280),7,c
 22016   004D0A  EF90  F026         	goto	u6781
 22017   004D0E  500E               	movf	(canPowerUp@temp+1)^(0+1280),w,c
 22018   004D10  E109               	bnz	u6780
 22019   004D12  0E12               	movlw	18
 22020   004D14  5C0D               	subwf	canPowerUp@temp^(0+1280),w,c
 22021   004D16  A0D8               	btfss	status,0,c
 22022   004D18  EF90  F026         	goto	u6781
 22023   004D1C  EF92  F026         	goto	u6780
 22024   004D20                     u6781:
 22025   004D20  EF77  F026         	goto	l9445
 22026   004D24                     u6780:
 22027   004D24                     
 22028                           ;../../VLCBlib_PIC/can18_can_2.c: 276:     canDiagnostics[0x00].asUint = 18;
 22029   004D24  0E00               	movlw	0
 22030   004D26  0106               	movlb	6	; () banked
 22031   004D28  6F8F               	movwf	(_canDiagnostics+1)& (0+255),b
 22032   004D2A  0E12               	movlw	18
 22033   004D2C  6F8E               	movwf	_canDiagnostics& (0+255),b
 22034   004D2E                     
 22035                           ; BSR set to: 6
 22036                           ;../../VLCBlib_PIC/can18_can_2.c: 279:     canTransmitFailed=0;
 22037   004D2E  0105               	movlb	5	; () banked
 22038   004D30  6BA7               	clrf	_canTransmitFailed& (0+255),b
 22039                           
 22040                           ;../../VLCBlib_PIC/can18_can_2.c: 282:     RB2PPS = 0x46;
 22041   004D32  0E46               	movlw	70
 22042   004D34  0102               	movlb	2	; () banked
 22043   004D36  6F0B               	movwf	11,b	;volatile
 22044                           
 22045                           ;../../VLCBlib_PIC/can18_can_2.c: 283:     CANRXPPS = 013 ;
 22046   004D38  0E0B               	movlw	11
 22047   004D3A  6F3D               	movwf	61,b	;volatile
 22048   004D3C                     
 22049                           ; BSR set to: 2
 22050                           ;../../VLCBlib_PIC/can18_can_2.c: 284:     TRISBbits.TRISB2 = 0;
 22051   004D3C  94C7               	bcf	199,2,c	;volatile
 22052   004D3E                     
 22053                           ; BSR set to: 2
 22054                           ;../../VLCBlib_PIC/can18_can_2.c: 285:     TRISBbits.TRISB3 = 1;
 22055   004D3E  86C7               	bsf	199,3,c	;volatile
 22056   004D40                     
 22057                           ; BSR set to: 2
 22058                           ;../../VLCBlib_PIC/can18_can_2.c: 286:     IPR5 = 0;
 22059   004D40  0103               	movlb	3	; () banked
 22060   004D42  6B67               	clrf	103,b	;volatile
 22061   004D44                     
 22062                           ; BSR set to: 3
 22063                           ;../../VLCBlib_PIC/can18_can_2.c: 288:     C1CONHbits.ON = 1;
 22064   004D44  0101               	movlb	1	; () banked
 22065   004D46  8F01               	bsf	1,7,b	;volatile
 22066   004D48                     
 22067                           ; BSR set to: 1
 22068                           ;../../VLCBlib_PIC/can18_can_2.c: 291:     if (CAN_OP_MODE_REQUEST_SUCCESS == CAN1_Opera
      +                          tionModeSet(CAN_CONFIGURATION_MODE)) {
 22069   004D48  0E04               	movlw	4
 22070   004D4A  EC81  F037         	call	_CAN1_OperationModeSet
 22071   004D4E  0900               	iorlw	0
 22072   004D50  A4D8               	btfss	status,2,c
 22073   004D52  EFAD  F026         	goto	u6791
 22074   004D56  EFAF  F026         	goto	u6790
 22075   004D5A                     u6791:
 22076   004D5A  EFF2  F026         	goto	l9549
 22077   004D5E                     u6790:
 22078   004D5E                     
 22079                           ;../../VLCBlib_PIC/can18_can_2.c: 295:         C1FIFOBA = 0x3BB0;
 22080   004D5E  0EB0               	movlw	176
 22081   004D60  0101               	movlb	1	; () banked
 22082   004D62  6F4C               	movwf	76,b	;volatile
 22083   004D64  0E3B               	movlw	59
 22084   004D66  6F4D               	movwf	77,b	;volatile
 22085   004D68  0E00               	movlw	0
 22086   004D6A  6F4E               	movwf	78,b	;volatile
 22087   004D6C  0E00               	movlw	0
 22088   004D6E  6F4F               	movwf	79,b	;volatile
 22089   004D70                     
 22090                           ; BSR set to: 1
 22091                           ;../../VLCBlib_PIC/can18_can_2.c: 297:         C1CONL = 0x00;
 22092   004D70  6B00               	clrf	0,b	;volatile
 22093                           
 22094                           ;../../VLCBlib_PIC/can18_can_2.c: 298:         C1CONH = 0x87;
 22095   004D72  0E87               	movlw	135
 22096   004D74  6F01               	movwf	1,b	;volatile
 22097                           
 22098                           ;../../VLCBlib_PIC/can18_can_2.c: 299:         C1CONU = 0x10;
 22099   004D76  0E10               	movlw	16
 22100   004D78  6F02               	movwf	2,b	;volatile
 22101                           
 22102                           ;../../VLCBlib_PIC/can18_can_2.c: 300:         C1CONT = 0x50;
 22103   004D7A  0E50               	movlw	80
 22104   004D7C  6F03               	movwf	3,b	;volatile
 22105   004D7E                     
 22106                           ; BSR set to: 1
 22107                           ;../../VLCBlib_PIC/can18_can_2.c: 301:         C1NBTCFGL = 0x00;
 22108   004D7E  6B04               	clrf	4,b	;volatile
 22109                           
 22110                           ;../../VLCBlib_PIC/can18_can_2.c: 302:         C1NBTCFGH = 0x03;
 22111   004D80  0E03               	movlw	3
 22112   004D82  6F05               	movwf	5,b	;volatile
 22113                           
 22114                           ;../../VLCBlib_PIC/can18_can_2.c: 303:         C1NBTCFGU = 0x02;
 22115   004D84  0E02               	movlw	2
 22116   004D86  6F06               	movwf	6,b	;volatile
 22117                           
 22118                           ;../../VLCBlib_PIC/can18_can_2.c: 304:         C1NBTCFGT = 0x3F;
 22119   004D88  0E3F               	movlw	63
 22120   004D8A  6F07               	movwf	7,b	;volatile
 22121                           
 22122                           ;../../VLCBlib_PIC/can18_can_2.c: 306:         C1TXQCONL = 0x10;
 22123   004D8C  0E10               	movlw	16
 22124   004D8E  6F50               	movwf	80,b	;volatile
 22125                           
 22126                           ;../../VLCBlib_PIC/can18_can_2.c: 307:         C1TXQCONH = 0x04;
 22127   004D90  0E04               	movlw	4
 22128   004D92  6F51               	movwf	81,b	;volatile
 22129                           
 22130                           ;../../VLCBlib_PIC/can18_can_2.c: 308:         C1TXQCONU = 0x6F;
 22131   004D94  0E6F               	movlw	111
 22132   004D96  6F52               	movwf	82,b	;volatile
 22133   004D98                     
 22134                           ; BSR set to: 1
 22135   004D98  0E03               	movlw	3
 22136   004D9A  6F53               	movwf	83,b	;volatile
 22137   004D9C                     
 22138                           ; BSR set to: 1
 22139                           ;../../VLCBlib_PIC/can18_can_2.c: 314:         C1FIFOCON1L = 0x80;
 22140   004D9C  0E80               	movlw	128
 22141   004D9E  6F5C               	movwf	92,b	;volatile
 22142   004DA0                     
 22143                           ; BSR set to: 1
 22144                           ;../../VLCBlib_PIC/can18_can_2.c: 315:         C1FIFOCON1H = 0x04;
 22145   004DA0  0E04               	movlw	4
 22146   004DA2  6F5D               	movwf	93,b	;volatile
 22147   004DA4                     
 22148                           ; BSR set to: 1
 22149                           ;../../VLCBlib_PIC/can18_can_2.c: 316:         C1FIFOCON1U = 0x6F;
 22150   004DA4  0E6F               	movlw	111
 22151   004DA6  6F5E               	movwf	94,b	;volatile
 22152   004DA8                     
 22153                           ; BSR set to: 1
 22154   004DA8  6B5F               	clrf	95,b	;volatile
 22155   004DAA                     
 22156                           ; BSR set to: 1
 22157                           ;../../VLCBlib_PIC/can18_can_2.c: 322:         C1FIFOCON2L = 0x80;
 22158   004DAA  0E80               	movlw	128
 22159   004DAC  6F68               	movwf	104,b	;volatile
 22160   004DAE                     
 22161                           ; BSR set to: 1
 22162                           ;../../VLCBlib_PIC/can18_can_2.c: 323:         C1FIFOCON2H = 0x04;
 22163   004DAE  0E04               	movlw	4
 22164   004DB0  6F69               	movwf	105,b	;volatile
 22165   004DB2                     
 22166                           ; BSR set to: 1
 22167                           ;../../VLCBlib_PIC/can18_can_2.c: 324:         C1FIFOCON2U = 0x60;
 22168   004DB2  0E60               	movlw	96
 22169   004DB4  6F6A               	movwf	106,b	;volatile
 22170   004DB6                     
 22171                           ; BSR set to: 1
 22172   004DB6  0E1F               	movlw	31
 22173   004DB8  6F6B               	movwf	107,b	;volatile
 22174   004DBA                     
 22175                           ; BSR set to: 1
 22176                           ;../../VLCBlib_PIC/can18_can_2.c: 330:         C1FIFOCON3L = 0x08;
 22177   004DBA  0E08               	movlw	8
 22178   004DBC  6F74               	movwf	116,b	;volatile
 22179   004DBE                     
 22180                           ; BSR set to: 1
 22181                           ;../../VLCBlib_PIC/can18_can_2.c: 331:         C1FIFOCON3H = 0x04;
 22182   004DBE  0E04               	movlw	4
 22183   004DC0  6F75               	movwf	117,b	;volatile
 22184   004DC2                     
 22185                           ; BSR set to: 1
 22186                           ;../../VLCBlib_PIC/can18_can_2.c: 332:         C1FIFOCON3U = 0x00;
 22187   004DC2  6B76               	clrf	118,b	;volatile
 22188   004DC4                     
 22189                           ; BSR set to: 1
 22190   004DC4  0E1F               	movlw	31
 22191   004DC6  6F77               	movwf	119,b	;volatile
 22192   004DC8                     
 22193                           ; BSR set to: 1
 22194                           ;../../VLCBlib_PIC/can18_can_2.c: 338:         C1FLTOBJ0L = 0x00;
 22195   004DC8  6B8C               	clrf	140,b	;volatile
 22196   004DCA                     
 22197                           ; BSR set to: 1
 22198                           ;../../VLCBlib_PIC/can18_can_2.c: 339:         C1FLTOBJ0H = 0x00;
 22199   004DCA  6B8D               	clrf	141,b	;volatile
 22200   004DCC                     
 22201                           ; BSR set to: 1
 22202                           ;../../VLCBlib_PIC/can18_can_2.c: 340:         C1FLTOBJ0U = 0x00;
 22203   004DCC  6B8E               	clrf	142,b	;volatile
 22204   004DCE                     
 22205                           ; BSR set to: 1
 22206                           ;../../VLCBlib_PIC/can18_can_2.c: 341:         C1FLTOBJ0T = 0x00;
 22207   004DCE  6B8F               	clrf	143,b	;volatile
 22208   004DD0                     
 22209                           ; BSR set to: 1
 22210                           ;../../VLCBlib_PIC/can18_can_2.c: 342:         C1MASK0L = 0x00;
 22211   004DD0  6B90               	clrf	144,b	;volatile
 22212   004DD2                     
 22213                           ; BSR set to: 1
 22214                           ;../../VLCBlib_PIC/can18_can_2.c: 343:         C1MASK0H = 0x00;
 22215   004DD2  6B91               	clrf	145,b	;volatile
 22216   004DD4                     
 22217                           ; BSR set to: 1
 22218                           ;../../VLCBlib_PIC/can18_can_2.c: 344:         C1MASK0U = 0x00;
 22219   004DD4  6B92               	clrf	146,b	;volatile
 22220   004DD6                     
 22221                           ; BSR set to: 1
 22222                           ;../../VLCBlib_PIC/can18_can_2.c: 345:         C1MASK0T = 0x40;
 22223   004DD6  0E40               	movlw	64
 22224   004DD8  6F93               	movwf	147,b	;volatile
 22225   004DDA                     
 22226                           ; BSR set to: 1
 22227                           ;../../VLCBlib_PIC/can18_can_2.c: 346:         C1FLTCON0L = 0x83;
 22228   004DDA  0E83               	movlw	131
 22229   004DDC  6F80               	movwf	128,b	;volatile
 22230   004DDE                     
 22231                           ; BSR set to: 1
 22232                           ;../../VLCBlib_PIC/can18_can_2.c: 349:         (void)CAN1_OperationModeSet(CAN_NORMAL_2_
      +                          0_MODE);
 22233   004DDE  0E06               	movlw	6
 22234   004DE0  EC81  F037         	call	_CAN1_OperationModeSet
 22235   004DE4                     l9549:
 22236                           
 22237                           ;../../VLCBlib_PIC/can18_can_2.c: 353:     prepareSelfEnumResponse();
 22238   004DE4  ECFD  F038         	call	_prepareSelfEnumResponse	;wreg free
 22239   004DE8                     
 22240                           ;../../VLCBlib_PIC/can18_can_2.c: 355:     enumerationState = NO_ENUMERATION;
 22241   004DE8  0105               	movlb	5	; () banked
 22242   004DEA  6BA5               	clrf	_enumerationState& (0+255),b
 22243   004DEC                     
 22244                           ; BSR set to: 5
 22245                           ;../../VLCBlib_PIC/can18_can_2.c: 356:     enumerationStartTime.val = tickGet();
 22246   004DEC  EC75  F039         	call	_tickGet	;wreg free
 22247   004DF0  C501  F574         	movff	?_tickGet,_enumerationStartTime
 22248   004DF4  C502  F575         	movff	?_tickGet+1,_enumerationStartTime+1
 22249   004DF8  C503  F576         	movff	?_tickGet+2,_enumerationStartTime+2
 22250   004DFC  C504  F577         	movff	?_tickGet+3,_enumerationStartTime+3
 22251   004E00                     
 22252                           ;../../VLCBlib_PIC/can18_can_2.c: 358:     IPR0bits.CANIP = 0;
 22253   004E00  0103               	movlb	3	; () banked
 22254   004E02  9D62               	bcf	98,6,b	;volatile
 22255   004E04                     
 22256                           ; BSR set to: 3
 22257                           ;../../VLCBlib_PIC/can18_can_2.c: 359:     PIR0bits.CANIF = 0;
 22258   004E04  9CAE               	bcf	174,6,c	;volatile
 22259   004E06                     
 22260                           ; BSR set to: 3
 22261                           ;../../VLCBlib_PIC/can18_can_2.c: 360:     C1INTUbits.TXIE = 1;
 22262   004E06  0101               	movlb	1	; () banked
 22263   004E08  811E               	bsf	30,0,b	;volatile
 22264   004E0A                     
 22265                           ; BSR set to: 1
 22266                           ;../../VLCBlib_PIC/can18_can_2.c: 361:     C1INTTbits.RXOVIE = 1;
 22267   004E0A  871F               	bsf	31,3,b	;volatile
 22268   004E0C                     
 22269                           ; BSR set to: 1
 22270                           ;../../VLCBlib_PIC/can18_can_2.c: 362:     C1INTTbits.IVMIE = 1;
 22271   004E0C  8F1F               	bsf	31,7,b	;volatile
 22272   004E0E                     
 22273                           ; BSR set to: 1
 22274                           ;../../VLCBlib_PIC/can18_can_2.c: 364:     PIE0bits.CANIE = 1;
 22275   004E0E  8C9E               	bsf	158,6,c	;volatile
 22276   004E10                     
 22277                           ; BSR set to: 1
 22278   004E10  0012               	return		;funcret
 22279   004E12                     __end_of_canPowerUp:
 22280                           	callstack 0
 22281                           
 22282 ;; *************** function _bootPowerUp *****************
 22283 ;; Defined at:
 22284 ;;		line 197 in file "../../VLCBlib_PIC/boot.c"
 22285 ;; Parameters:    Size  Location     Type
 22286 ;;		None
 22287 ;; Auto vars:     Size  Location     Type
 22288 ;;  a               3   15[COMRAM] unsigned um
 22289 ;;  i               1   14[COMRAM] unsigned char 
 22290 ;;  found           1   13[COMRAM] unsigned char 
 22291 ;;  b               1   12[COMRAM] unsigned char 
 22292 ;; Return value:  Size  Location     Type
 22293 ;;                  1    wreg      void 
 22294 ;; Registers used:
 22295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22296 ;; Tracked objects:
 22297 ;;		On entry : 0/0
 22298 ;;		On exit  : 0/0
 22299 ;;		Unchanged: 0/0
 22300 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22302 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22304 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22305 ;;Total ram usage:        6 bytes
 22306 ;; Hardware stack levels used: 1
 22307 ;; Hardware stack levels required when called: 3
 22308 ;; This function calls:
 22309 ;;		_readNVM
 22310 ;; This function is called by:
 22311 ;;		_powerUp
 22312 ;; This function uses a non-reentrant model
 22313 ;;
 22314                           
 22315                           	psect	text8
 22316   005AF8                     __ptext8:
 22317                           	callstack 0
 22318   005AF8                     _bootPowerUp:
 22319                           	callstack 122
 22320   005AF8                     
 22321                           ;../../VLCBlib_PIC/boot.c: 198:     uint24_t a;;../../VLCBlib_PIC/boot.c: 199:     uint8
      +                          _t i;;../../VLCBlib_PIC/boot.c: 200:     uint8_t b;;../../VLCBlib_PIC/boot.c: 201:     u
      +                          int8_t found;;../../VLCBlib_PIC/boot.c: 203:     bootloaderType = BL_TYPE_Unknown;
 22322   005AF8  0105               	movlb	5	; () banked
 22323   005AFA  6BAA               	clrf	_bootloaderType& (0+255),b
 22324                           
 22325                           ;../../VLCBlib_PIC/boot.c: 204:     bootloaderVersion = 0;
 22326   005AFC  6BA9               	clrf	_bootloaderVersion& (0+255),b
 22327   005AFE                     
 22328                           ; BSR set to: 5
 22329                           ;../../VLCBlib_PIC/boot.c: 207:     for (a=0; a<0x7FF; a++) {
 22330   005AFE  0E00               	movlw	0
 22331   005B00  6E10               	movwf	bootPowerUp@a^(0+1280),c
 22332   005B02  0E00               	movlw	0
 22333   005B04  6E11               	movwf	(bootPowerUp@a+1)^(0+1280),c
 22334   005B06  0E00               	movlw	0
 22335   005B08  6E12               	movwf	(bootPowerUp@a+2)^(0+1280),c
 22336   005B0A                     l9365:
 22337   005B0A                     
 22338                           ;../../VLCBlib_PIC/boot.c: 209:         for (i=0; i<11; i++) {
 22339   005B0A  6A0F               	clrf	bootPowerUp@i^(0+1280),c
 22340   005B0C                     l9373:
 22341                           
 22342                           ;../../VLCBlib_PIC/boot.c: 210:             b = (uint8_t)readNVM(FLASH_NVM_TYPE, a+i);
 22343   005B0C  500F               	movf	bootPowerUp@i^(0+1280),w,c
 22344   005B0E  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 22345   005B10  6E07               	movwf	readNVM@index^(0+1280),c
 22346   005B12  0E00               	movlw	0
 22347   005B14  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 22348   005B16  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22349   005B18  0E00               	movlw	0
 22350   005B1A  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 22351   005B1C  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22352   005B1E  0E01               	movlw	1
 22353   005B20  ECEA  F039         	call	_readNVM
 22354   005B24  5007               	movf	?_readNVM^(0+1280),w,c
 22355   005B26  6E0D               	movwf	bootPowerUp@b^(0+1280),c
 22356   005B28                     
 22357                           ;../../VLCBlib_PIC/boot.c: 211:             if (b != bl_version[i]) {
 22358   005B28  0E95               	movlw	low _bl_version
 22359   005B2A  240F               	addwf	bootPowerUp@i^(0+1280),w,c
 22360   005B2C  6EF6               	movwf	tblptrl,c
 22361   005B2E  6AF7               	clrf	tblptrh,c
 22362   005B30  0EFF               	movlw	high _bl_version
 22363   005B32  22F7               	addwfc	tblptrh,f,c
 22364   005B34                     	if	1	;There are 3 active tblptr bytes
 22365   005B34  6AF8               	clrf	tblptru,c
 22366   005B36  0E00               	movlw	low (__mediumconst shr (0+16))
 22367   005B38  22F8               	addwfc	tblptru,f,c
 22368   005B3A                     	endif
 22369   005B3A  0008               	tblrd		*
 22370   005B3C  50F5               	movf	tablat,w,c
 22371   005B3E  180D               	xorwf	bootPowerUp@b^(0+1280),w,c
 22372   005B40  B4D8               	btfsc	status,2,c
 22373   005B42  EFA5  F02D         	goto	u6711
 22374   005B46  EFA7  F02D         	goto	u6710
 22375   005B4A                     u6711:
 22376   005B4A  EFAA  F02D         	goto	l9381
 22377   005B4E                     u6710:
 22378   005B4E                     
 22379                           ;../../VLCBlib_PIC/boot.c: 212:                 found = 0;
 22380   005B4E  6A0E               	clrf	bootPowerUp@found^(0+1280),c
 22381                           
 22382                           ;../../VLCBlib_PIC/boot.c: 213:                 break;
 22383   005B50  EFB5  F02D         	goto	l9387
 22384   005B54                     l9381:
 22385                           
 22386                           ;../../VLCBlib_PIC/boot.c: 215:                 found = 1;
 22387   005B54  0E01               	movlw	1
 22388   005B56  6E0E               	movwf	bootPowerUp@found^(0+1280),c
 22389   005B58                     
 22390                           ;../../VLCBlib_PIC/boot.c: 217:         }
 22391   005B58  2A0F               	incf	bootPowerUp@i^(0+1280),f,c
 22392   005B5A  0E0A               	movlw	10
 22393   005B5C  640F               	cpfsgt	bootPowerUp@i^(0+1280),c
 22394   005B5E  EFB3  F02D         	goto	u6721
 22395   005B62  EFB5  F02D         	goto	u6720
 22396   005B66                     u6721:
 22397   005B66  EF86  F02D         	goto	l9373
 22398   005B6A                     u6720:
 22399   005B6A                     l9387:
 22400                           
 22401                           ;../../VLCBlib_PIC/boot.c: 218:         if (found) {
 22402   005B6A  500E               	movf	bootPowerUp@found^(0+1280),w,c
 22403   005B6C  B4D8               	btfsc	status,2,c
 22404   005B6E  EFBB  F02D         	goto	u6731
 22405   005B72  EFBD  F02D         	goto	u6730
 22406   005B76                     u6731:
 22407   005B76  EFDD  F02D         	goto	l340
 22408   005B7A                     u6730:
 22409   005B7A                     
 22410                           ;../../VLCBlib_PIC/boot.c: 219:             bootloaderType = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, a+11);
 22411   005B7A  0E0B               	movlw	11
 22412   005B7C  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 22413   005B7E  6E07               	movwf	readNVM@index^(0+1280),c
 22414   005B80  0E00               	movlw	0
 22415   005B82  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 22416   005B84  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22417   005B86  0E00               	movlw	0
 22418   005B88  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 22419   005B8A  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22420   005B8C  0E01               	movlw	1
 22421   005B8E  ECEA  F039         	call	_readNVM
 22422   005B92  5007               	movf	?_readNVM^(0+1280),w,c
 22423   005B94  0105               	movlb	5	; () banked
 22424   005B96  6FAA               	movwf	_bootloaderType& (0+255),b
 22425                           
 22426                           ;../../VLCBlib_PIC/boot.c: 220:             bootloaderVersion = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, a+12);
 22427   005B98  0E0C               	movlw	12
 22428   005B9A  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 22429   005B9C  6E07               	movwf	readNVM@index^(0+1280),c
 22430   005B9E  0E00               	movlw	0
 22431   005BA0  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 22432   005BA2  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 22433   005BA4  0E00               	movlw	0
 22434   005BA6  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 22435   005BA8  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 22436   005BAA  0E01               	movlw	1
 22437   005BAC  ECEA  F039         	call	_readNVM
 22438   005BB0  5007               	movf	?_readNVM^(0+1280),w,c
 22439   005BB2  0105               	movlb	5	; () banked
 22440   005BB4  6FA9               	movwf	_bootloaderVersion& (0+255),b
 22441   005BB6  EFEF  F02D         	goto	l341
 22442   005BBA                     l340:
 22443                           
 22444                           ;../../VLCBlib_PIC/boot.c: 223:     }
 22445   005BBA  0E01               	movlw	1
 22446   005BBC  2610               	addwf	bootPowerUp@a^(0+1280),f,c
 22447   005BBE  0E00               	movlw	0
 22448   005BC0  2211               	addwfc	(bootPowerUp@a+1)^(0+1280),f,c
 22449   005BC2  0E00               	movlw	0
 22450   005BC4  2212               	addwfc	(bootPowerUp@a+2)^(0+1280),f,c
 22451   005BC6  5012               	movf	(bootPowerUp@a+2)^(0+1280),w,c
 22452   005BC8  E10A               	bnz	u6740
 22453   005BCA  2810               	incf	bootPowerUp@a^(0+1280),w,c
 22454   005BCC  0E07               	movlw	7
 22455   005BCE  5811               	subwfb	(bootPowerUp@a+1)^(0+1280),w,c
 22456   005BD0  A0D8               	btfss	status,0,c
 22457   005BD2  EFED  F02D         	goto	u6741
 22458   005BD6  EFEF  F02D         	goto	u6740
 22459   005BDA                     u6741:
 22460   005BDA  EF85  F02D         	goto	l9365
 22461   005BDE                     u6740:
 22462   005BDE                     l341:
 22463   005BDE  0012               	return		;funcret
 22464   005BE0                     __end_of_bootPowerUp:
 22465                           	callstack 0
 22466                           
 22467 ;; *************** function _teachPowerUp *****************
 22468 ;; Defined at:
 22469 ;;		line 197 in file "../../VLCBlib_PIC/event_teach_simple.c"
 22470 ;; Parameters:    Size  Location     Type
 22471 ;;		None
 22472 ;; Auto vars:     Size  Location     Type
 22473 ;;  i               1   39[COMRAM] unsigned char 
 22474 ;; Return value:  Size  Location     Type
 22475 ;;                  1    wreg      void 
 22476 ;; Registers used:
 22477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22478 ;; Tracked objects:
 22479 ;;		On entry : 0/0
 22480 ;;		On exit  : 0/0
 22481 ;;		Unchanged: 0/0
 22482 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22484 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22486 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22487 ;;Total ram usage:        1 bytes
 22488 ;; Hardware stack levels used: 1
 22489 ;; Hardware stack levels required when called: 5
 22490 ;; This function calls:
 22491 ;;		_rebuildHashtable
 22492 ;; This function is called by:
 22493 ;;		_powerUp
 22494 ;; This function uses a non-reentrant model
 22495 ;;
 22496                           
 22497                           	psect	text9
 22498   007C1C                     __ptext9:
 22499                           	callstack 0
 22500   007C1C                     _teachPowerUp:
 22501                           	callstack 120
 22502   007C1C                     
 22503                           ;../../VLCBlib_PIC/event_teach_simple.c: 198:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 201:     rebuildHashtable();
 22504   007C1C  EC16  F02B         	call	_rebuildHashtable	;wreg free
 22505   007C20                     
 22506                           ;../../VLCBlib_PIC/event_teach_simple.c: 205:     for (i=1; i<= 1; i++) {
 22507   007C20  0E01               	movlw	1
 22508   007C22  6E28               	movwf	teachPowerUp@i^(0+1280),c
 22509   007C24                     l9787:
 22510                           
 22511                           ;../../VLCBlib_PIC/event_teach_simple.c: 206:         teachDiagnostics[i].asUint = 0;
 22512   007C24  5028               	movf	teachPowerUp@i^(0+1280),w,c
 22513   007C26  0D02               	mullw	2
 22514   007C28  0ECC               	movlw	low _teachDiagnostics
 22515   007C2A  24F3               	addwf	243,w,c
 22516   007C2C  6ED9               	movwf	fsr2l,c
 22517   007C2E  0E05               	movlw	high _teachDiagnostics
 22518   007C30  20F4               	addwfc	prodh,w,c
 22519   007C32  6EDA               	movwf	fsr2h,c
 22520   007C34  6ADE               	clrf	postinc2,c
 22521   007C36  6ADD               	clrf	postdec2,c
 22522   007C38                     
 22523                           ;../../VLCBlib_PIC/event_teach_simple.c: 207:     }
 22524   007C38  2A28               	incf	teachPowerUp@i^(0+1280),f,c
 22525   007C3A  0E01               	movlw	1
 22526   007C3C  6428               	cpfsgt	teachPowerUp@i^(0+1280),c
 22527   007C3E  EF23  F03E         	goto	u7021
 22528   007C42  EF25  F03E         	goto	u7020
 22529   007C46                     u7021:
 22530   007C46  EF12  F03E         	goto	l9787
 22531   007C4A                     u7020:
 22532   007C4A                     
 22533                           ;../../VLCBlib_PIC/event_teach_simple.c: 208:     teachDiagnostics[0x00].asUint = 1;
 22534   007C4A  0E00               	movlw	0
 22535   007C4C  0105               	movlb	5	; () banked
 22536   007C4E  6FCD               	movwf	(_teachDiagnostics+1)& (0+255),b
 22537   007C50  0E01               	movlw	1
 22538   007C52  6FCC               	movwf	_teachDiagnostics& (0+255),b
 22539   007C54                     
 22540                           ; BSR set to: 5
 22541                           ;../../VLCBlib_PIC/event_teach_simple.c: 210:     errno = 0;
 22542   007C54  6BA3               	clrf	_errno& (0+255),b
 22543   007C56                     
 22544                           ; BSR set to: 5
 22545                           ;../../VLCBlib_PIC/event_teach_simple.c: 211:     mode_flags &= ~1;
 22546   007C56  91A4               	bcf	_mode_flags& (0+255),0,b
 22547   007C58                     
 22548                           ; BSR set to: 5
 22549   007C58  0012               	return		;funcret
 22550   007C5A                     __end_of_teachPowerUp:
 22551                           	callstack 0
 22552                           
 22553 ;; *************** function _loadNvCache *****************
 22554 ;; Defined at:
 22555 ;;		line 162 in file "../../VLCBlib_PIC/nv.c"
 22556 ;; Parameters:    Size  Location     Type
 22557 ;;		None
 22558 ;; Auto vars:     Size  Location     Type
 22559 ;;  temp            2   14[COMRAM] short 
 22560 ;;  i               1   16[COMRAM] unsigned char 
 22561 ;; Return value:  Size  Location     Type
 22562 ;;                  1    wreg      void 
 22563 ;; Registers used:
 22564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22565 ;; Tracked objects:
 22566 ;;		On entry : 0/0
 22567 ;;		On exit  : 0/0
 22568 ;;		Unchanged: 0/0
 22569 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22571 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22572 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22573 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22574 ;;Total ram usage:        5 bytes
 22575 ;; Hardware stack levels used: 1
 22576 ;; Hardware stack levels required when called: 3
 22577 ;; This function calls:
 22578 ;;		_readNVM
 22579 ;; This function is called by:
 22580 ;;		_nvPowerUp
 22581 ;; This function uses a non-reentrant model
 22582 ;;
 22583                           
 22584                           	psect	text10
 22585   00765E                     __ptext10:
 22586                           	callstack 0
 22587   00765E                     _loadNvCache:
 22588                           	callstack 121
 22589   00765E                     
 22590                           ;../../VLCBlib_PIC/nv.c: 163:     uint8_t i;;../../VLCBlib_PIC/nv.c: 164:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 166:     for (i=1; i<= 49; i++) {
 22591   00765E  0E01               	movlw	1
 22592   007660  6E11               	movwf	loadNvCache@i^(0+1280),c
 22593   007662                     l8995:
 22594                           
 22595                           ;../../VLCBlib_PIC/nv.c: 167:         temp = readNVM(EEPROM_NVM_TYPE, 0x200 +i);
 22596   007662  0E00               	movlw	0
 22597   007664  2411               	addwf	loadNvCache@i^(0+1280),w,c
 22598   007666  6E0D               	movwf	??_loadNvCache^(0+1280),c
 22599   007668  6A0E               	clrf	(??_loadNvCache+1)^(0+1280),c
 22600   00766A  0E02               	movlw	2
 22601   00766C  220E               	addwfc	(??_loadNvCache+1)^(0+1280),f,c
 22602   00766E  C50D  F507         	movff	??_loadNvCache,readNVM@index
 22603   007672  C50E  F508         	movff	??_loadNvCache+1,readNVM@index+1
 22604   007676  6A09               	clrf	(readNVM@index+2)^(0+1280),c
 22605   007678  BE08               	btfsc	(readNVM@index+1)^(0+1280),7,c
 22606   00767A  0609               	decf	(readNVM@index+2)^(0+1280),f,c
 22607   00767C  0E00               	movlw	0
 22608   00767E  ECEA  F039         	call	_readNVM
 22609   007682  C507  F50F         	movff	?_readNVM,loadNvCache@temp
 22610   007686  C508  F510         	movff	?_readNVM+1,loadNvCache@temp+1
 22611   00768A                     
 22612                           ;../../VLCBlib_PIC/nv.c: 168:         if (temp < 0) {
 22613   00768A  BE10               	btfsc	(loadNvCache@temp+1)^(0+1280),7,c
 22614   00768C  EF4C  F03B         	goto	u6330
 22615   007690  EF4A  F03B         	goto	u6331
 22616   007694                     u6331:
 22617   007694  EF4E  F03B         	goto	l9001
 22618   007698                     u6330:
 22619   007698  EF56  F03B         	goto	l9003
 22620   00769C                     l9001:
 22621                           
 22622                           ;../../VLCBlib_PIC/nv.c: 171:             nvCache[i] = (uint8_t)temp;
 22623   00769C  0E00               	movlw	low _nvCache
 22624   00769E  2411               	addwf	loadNvCache@i^(0+1280),w,c
 22625   0076A0  6ED9               	movwf	fsr2l,c
 22626   0076A2  6ADA               	clrf	fsr2h,c
 22627   0076A4  0E06               	movlw	high _nvCache
 22628   0076A6  22DA               	addwfc	fsr2h,f,c
 22629   0076A8  C50F  F4DF         	movff	loadNvCache@temp,indf2
 22630   0076AC                     l9003:
 22631                           
 22632                           ;../../VLCBlib_PIC/nv.c: 173:     }
 22633   0076AC  2A11               	incf	loadNvCache@i^(0+1280),f,c
 22634   0076AE  0E31               	movlw	49
 22635   0076B0  6411               	cpfsgt	loadNvCache@i^(0+1280),c
 22636   0076B2  EF5D  F03B         	goto	u6341
 22637   0076B6  EF5F  F03B         	goto	u6340
 22638   0076BA                     u6341:
 22639   0076BA  EF31  F03B         	goto	l8995
 22640   0076BE                     u6340:
 22641   0076BE  0012               	return		;funcret
 22642   0076C0                     __end_of_loadNvCache:
 22643                           	callstack 0
 22644                           
 22645 ;; *************** function _leds_powerUp *****************
 22646 ;; Defined at:
 22647 ;;		line 77 in file "../../VLCBlib_PIC/statusLeds2.c"
 22648 ;; Parameters:    Size  Location     Type
 22649 ;;		None
 22650 ;; Auto vars:     Size  Location     Type
 22651 ;;		None
 22652 ;; Return value:  Size  Location     Type
 22653 ;;                  1    wreg      void 
 22654 ;; Registers used:
 22655 ;;		wreg, status,2, status,0, cstack
 22656 ;; Tracked objects:
 22657 ;;		On entry : 0/0
 22658 ;;		On exit  : 0/0
 22659 ;;		Unchanged: 0/0
 22660 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22665 ;;Total ram usage:        0 bytes
 22666 ;; Hardware stack levels used: 1
 22667 ;; Hardware stack levels required when called: 2
 22668 ;; This function calls:
 22669 ;;		_tickGet
 22670 ;; This function is called by:
 22671 ;;		_powerUp
 22672 ;; This function uses a non-reentrant model
 22673 ;;
 22674                           
 22675                           	psect	text11
 22676   00804C                     __ptext11:
 22677                           	callstack 0
 22678   00804C                     _leds_powerUp:
 22679                           	callstack 123
 22680   00804C                     
 22681                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     {ANSELA=ANSELB=0; TRISBbits.TRISB6=TRISBbits.T
      +                          RISB7=0,TRISAbits.TRISA2=1;};
 22682   00804C  0104               	movlb	4	; () banked
 22683   00804E  6B08               	clrf	8,b	;volatile
 22684   008050  6B00               	clrf	0,b	;volatile
 22685   008052  9EC7               	bcf	199,7,c	;volatile
 22686   008054  9CC7               	bcf	199,6,c	;volatile
 22687   008056  84C6               	bsf	198,2,c	;volatile
 22688                           
 22689                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[0] = 0;
 22690   008058  0105               	movlb	5	; () banked
 22691   00805A  6B89               	clrf	_flashCounter& (0+255),b
 22692                           
 22693                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     flashCounter[1] = 0;
 22694   00805C  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 22695   00805E                     
 22696                           ; BSR set to: 5
 22697                           ;../../VLCBlib_PIC/statusLeds2.c: 82:     ledTimer.val = tickGet();
 22698   00805E  EC75  F039         	call	_tickGet	;wreg free
 22699   008062  C501  F564         	movff	?_tickGet,_ledTimer
 22700   008066  C502  F565         	movff	?_tickGet+1,_ledTimer+1
 22701   00806A  C503  F566         	movff	?_tickGet+2,_ledTimer+2
 22702   00806E  C504  F567         	movff	?_tickGet+3,_ledTimer+3
 22703   008072  0012               	return		;funcret
 22704   008074                     __end_of_leds_powerUp:
 22705                           	callstack 0
 22706                           
 22707 ;; *************** function _initTimedResponse *****************
 22708 ;; Defined at:
 22709 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
 22710 ;; Parameters:    Size  Location     Type
 22711 ;;		None
 22712 ;; Auto vars:     Size  Location     Type
 22713 ;;		None
 22714 ;; Return value:  Size  Location     Type
 22715 ;;                  1    wreg      void 
 22716 ;; Registers used:
 22717 ;;		None
 22718 ;; Tracked objects:
 22719 ;;		On entry : 0/0
 22720 ;;		On exit  : 0/0
 22721 ;;		Unchanged: 0/0
 22722 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22727 ;;Total ram usage:        0 bytes
 22728 ;; Hardware stack levels used: 1
 22729 ;; Hardware stack levels required when called: 1
 22730 ;; This function calls:
 22731 ;;		Nothing
 22732 ;; This function is called by:
 22733 ;;		_powerUp
 22734 ;; This function uses a non-reentrant model
 22735 ;;
 22736                           
 22737                           	psect	text12
 22738   008224                     __ptext12:
 22739                           	callstack 0
 22740   008224                     _initTimedResponse:
 22741                           	callstack 124
 22742   008224                     
 22743                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
 22744   008224  0105               	movlb	5	; () banked
 22745   008226  6996               	setf	_timedResponseType& (0+255),b
 22746   008228                     
 22747                           ; BSR set to: 5
 22748   008228  0012               	return		;funcret
 22749   00822A                     __end_of_initTimedResponse:
 22750                           	callstack 0
 22751                           
 22752 ;; *************** function _initTicker *****************
 22753 ;; Defined at:
 22754 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
 22755 ;; Parameters:    Size  Location     Type
 22756 ;;  priority        1    wreg     unsigned char 
 22757 ;; Auto vars:     Size  Location     Type
 22758 ;;  priority        1    1[COMRAM] unsigned char 
 22759 ;;  i               1    3[COMRAM] unsigned char 
 22760 ;;  divider         1    2[COMRAM] unsigned char 
 22761 ;; Return value:  Size  Location     Type
 22762 ;;                  1    wreg      void 
 22763 ;; Registers used:
 22764 ;;		wreg, status,2, status,0
 22765 ;; Tracked objects:
 22766 ;;		On entry : 0/0
 22767 ;;		On exit  : 0/0
 22768 ;;		Unchanged: 0/0
 22769 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22771 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22772 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22773 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22774 ;;Total ram usage:        4 bytes
 22775 ;; Hardware stack levels used: 1
 22776 ;; Hardware stack levels required when called: 1
 22777 ;; This function calls:
 22778 ;;		Nothing
 22779 ;; This function is called by:
 22780 ;;		_powerUp
 22781 ;; This function uses a non-reentrant model
 22782 ;;
 22783                           
 22784                           	psect	text13
 22785   0076C0                     __ptext13:
 22786                           	callstack 0
 22787   0076C0                     _initTicker:
 22788                           	callstack 124
 22789                           
 22790                           ; BSR set to: 5
 22791                           ;incstack = 0
 22792                           ;initTicker@priority stored from wreg
 22793   0076C0  6E02               	movwf	initTicker@priority^(0+1280),c
 22794   0076C2                     
 22795                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
 22796   0076C2  6A03               	clrf	initTicker@divider^(0+1280),c
 22797   0076C4                     
 22798                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
 22799   0076C4  0E40               	movlw	64
 22800   0076C6  6E04               	movwf	initTicker@i^(0+1280),c
 22801   0076C8                     l10765:
 22802                           
 22803                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
 22804   0076C8  2A03               	incf	initTicker@divider^(0+1280),f,c
 22805   0076CA  90D8               	bcf	status,0,c
 22806   0076CC  3204               	rrcf	initTicker@i^(0+1280),f,c
 22807   0076CE  5004               	movf	initTicker@i^(0+1280),w,c
 22808   0076D0  A4D8               	btfss	status,2,c
 22809   0076D2  EF6D  F03B         	goto	u8141
 22810   0076D6  EF6F  F03B         	goto	u8140
 22811   0076DA                     u8141:
 22812   0076DA  EF64  F03B         	goto	l10765
 22813   0076DE                     u8140:
 22814   0076DE                     
 22815                           ;../../VLCBlib_PIC/ticktime.c: 122:     T0CON1bits.CKPS = (uint8_t)(0b00000000 | (divide
      +                          r+1));
 22816   0076DE  C503  F501         	movff	initTicker@divider,??_initTicker
 22817   0076E2  0E01               	movlw	1
 22818   0076E4  2601               	addwf	??_initTicker^(0+1280),f,c
 22819   0076E6  0103               	movlb	3	; () banked
 22820   0076E8  511B               	movf	27,w,b	;volatile
 22821   0076EA  1801               	xorwf	??_initTicker^(0+1280),w,c
 22822   0076EC  0BF0               	andlw	-16
 22823   0076EE  1801               	xorwf	??_initTicker^(0+1280),w,c
 22824   0076F0  6F1B               	movwf	27,b	;volatile
 22825   0076F2                     
 22826                           ; BSR set to: 3
 22827                           ;../../VLCBlib_PIC/ticktime.c: 123:     T0CON0bits.MD16 = 1;
 22828   0076F2  891A               	bsf	26,4,b	;volatile
 22829   0076F4                     
 22830                           ; BSR set to: 3
 22831                           ;../../VLCBlib_PIC/ticktime.c: 124:     T0CON1bits.CS = 2;
 22832   0076F4  511B               	movf	27,w,b	;volatile
 22833   0076F6  0B1F               	andlw	-225
 22834   0076F8  0940               	iorlw	64
 22835   0076FA  6F1B               	movwf	27,b	;volatile
 22836   0076FC                     
 22837                           ; BSR set to: 3
 22838                           ;../../VLCBlib_PIC/ticktime.c: 125:     TMR0H = 0;
 22839   0076FC  6B19               	clrf	25,b	;volatile
 22840   0076FE                     
 22841                           ; BSR set to: 3
 22842                           ;../../VLCBlib_PIC/ticktime.c: 126:     TMR0L = 0;
 22843   0076FE  6B18               	clrf	24,b	;volatile
 22844   007700                     
 22845                           ; BSR set to: 3
 22846                           ;../../VLCBlib_PIC/ticktime.c: 127:     TMR0IP = (__bit)priority;
 22847   007700  B002               	btfsc	initTicker@priority^(0+1280),0,c
 22848   007702  EF85  F03B         	goto	u8151
 22849   007706  EF88  F03B         	goto	u8150
 22850   00770A                     u8151:
 22851   00770A  8F65               	bsf	101,7,b	;volatile
 22852   00770C  EF8A  F03B         	goto	u8165
 22853   007710                     u8150:
 22854   007710  0103               	movlb	3	; () banked
 22855   007712  9F65               	bcf	101,7,b	;volatile
 22856   007714                     u8165:
 22857   007714                     
 22858                           ; BSR set to: 3
 22859                           ;../../VLCBlib_PIC/ticktime.c: 128:     TMR0IF = 0;
 22860   007714  9EB1               	bcf	1201,7,c	;volatile
 22861   007716                     
 22862                           ; BSR set to: 3
 22863                           ;../../VLCBlib_PIC/ticktime.c: 129:     TMR0IE = 1;
 22864   007716  8EA1               	bsf	1185,7,c	;volatile
 22865   007718                     
 22866                           ; BSR set to: 3
 22867                           ;../../VLCBlib_PIC/ticktime.c: 130:     T0CON0bits.EN = 1;
 22868   007718  8F1A               	bsf	26,7,b	;volatile
 22869   00771A                     
 22870                           ; BSR set to: 3
 22871                           ;../../VLCBlib_PIC/ticktime.c: 132:     timerExtension1 = 0;
 22872   00771A  0105               	movlb	5	; () banked
 22873   00771C  6B9A               	clrf	_timerExtension1& (0+255),b	;volatile
 22874   00771E                     
 22875                           ; BSR set to: 5
 22876                           ;../../VLCBlib_PIC/ticktime.c: 133:     timerExtension2 = 0;
 22877   00771E  6B99               	clrf	_timerExtension2& (0+255),b	;volatile
 22878   007720                     
 22879                           ; BSR set to: 5
 22880   007720  0012               	return		;funcret
 22881   007722                     __end_of_initTicker:
 22882                           	callstack 0
 22883                           
 22884 ;; *************** function _CAN1_OperationModeSet *****************
 22885 ;; Defined at:
 22886 ;;		line 919 in file "../../VLCBlib_PIC/can18_can_2.c"
 22887 ;; Parameters:    Size  Location     Type
 22888 ;;  requestMode     1    wreg     const enum E23640
 22889 ;; Auto vars:     Size  Location     Type
 22890 ;;  requestMode     1    1[COMRAM] const enum E23640
 22891 ;;  status          1    0[COMRAM] enum E23649
 22892 ;; Return value:  Size  Location     Type
 22893 ;;                  1    wreg      enum E23649
 22894 ;; Registers used:
 22895 ;;		wreg, status,2, status,0, cstack
 22896 ;; Tracked objects:
 22897 ;;		On entry : 0/0
 22898 ;;		On exit  : 0/0
 22899 ;;		Unchanged: 0/0
 22900 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22902 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22904 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22905 ;;Total ram usage:        2 bytes
 22906 ;; Hardware stack levels used: 1
 22907 ;; Hardware stack levels required when called: 2
 22908 ;; This function calls:
 22909 ;;		_CAN1_OperationModeGet
 22910 ;; This function is called by:
 22911 ;;		_canPowerUp
 22912 ;; This function uses a non-reentrant model
 22913 ;;
 22914                           
 22915                           	psect	text14
 22916   006F02                     __ptext14:
 22917                           	callstack 0
 22918   006F02                     _CAN1_OperationModeSet:
 22919                           	callstack 122
 22920                           
 22921                           ; BSR set to: 5
 22922                           ;incstack = 0
 22923                           ;CAN1_OperationModeSet@requestMode stored from wreg
 22924   006F02  6E02               	movwf	CAN1_OperationModeSet@requestMode^(0+1280),c
 22925   006F04                     
 22926                           ;../../VLCBlib_PIC/can18_can_2.c: 919: enum CAN_OP_MODE_STATUS CAN1_OperationModeSet(con
      +                          st enum CAN_OP_MODES requestMode);../../VLCBlib_PIC/can18_can_2.c: 920: {;../../VLCBlib_
      +                          PIC/can18_can_2.c: 921:     enum CAN_OP_MODE_STATUS status = CAN_OP_MODE_REQUEST_SUCCESS
      +                          ;
 22927   006F04  6A01               	clrf	CAN1_OperationModeSet@status^(0+1280),c
 22928   006F06                     
 22929                           ;../../VLCBlib_PIC/can18_can_2.c: 923:     if ((CAN1_OperationModeGet() == CAN_CONFIGURA
      +                          TION_MODE)
 22930   006F06  EC00  F041         	call	_CAN1_OperationModeGet	;wreg free
 22931   006F0A  0A04               	xorlw	4
 22932   006F0C  B4D8               	btfsc	status,2,c
 22933   006F0E  EF8B  F037         	goto	u5811
 22934   006F12  EF8D  F037         	goto	u5810
 22935   006F16                     u5811:
 22936   006F16  EF9E  F037         	goto	l8505
 22937   006F1A                     u5810:
 22938   006F1A  0402               	decf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 22939   006F1C  B4D8               	btfsc	status,2,c
 22940   006F1E  EF93  F037         	goto	u5821
 22941   006F22  EF95  F037         	goto	u5820
 22942   006F26                     u5821:
 22943   006F26  EF9E  F037         	goto	l8505
 22944   006F2A                     u5820:
 22945   006F2A  0E04               	movlw	4
 22946   006F2C  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 22947   006F2E  A4D8               	btfss	status,2,c
 22948   006F30  EF9C  F037         	goto	u5831
 22949   006F34  EF9E  F037         	goto	u5830
 22950   006F38                     u5831:
 22951   006F38  EFBE  F037         	goto	l8511
 22952   006F3C                     u5830:
 22953   006F3C                     l8505:
 22954                           
 22955                           ;../../VLCBlib_PIC/can18_can_2.c: 926:     {;../../VLCBlib_PIC/can18_can_2.c: 927:      
      +                             C1CONTbits.REQOP = (unsigned char)requestMode;
 22956   006F3C  0101               	movlb	1	; () banked
 22957   006F3E  5103               	movf	3,w,b	;volatile
 22958   006F40  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 22959   006F42  0BF8               	andlw	-8
 22960   006F44  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 22961   006F46  6F03               	movwf	3,b	;volatile
 22962                           
 22963                           ;../../VLCBlib_PIC/can18_can_2.c: 929:         while (C1CONUbits.OPMOD != requestMode)
 22964   006F48  EFB1  F037         	goto	l8509
 22965   006F4C                     l754:
 22966                           
 22967                           ; BSR set to: 1
 22968                           ;../../VLCBlib_PIC/can18_can_2.c: 930:         {;../../VLCBlib_PIC/can18_can_2.c: 932:  
      +                                     if (C1INTHbits.SERRIF == 1)
 22969   006F4C  A91D               	btfss	29,4,b	;volatile
 22970   006F4E  EFAB  F037         	goto	u5841
 22971   006F52  EFAD  F037         	goto	u5840
 22972   006F56                     u5841:
 22973   006F56  EFB1  F037         	goto	l8509
 22974   006F5A                     u5840:
 22975   006F5A                     
 22976                           ; BSR set to: 1
 22977                           ;../../VLCBlib_PIC/can18_can_2.c: 933:             {;../../VLCBlib_PIC/can18_can_2.c: 93
      +                          4:                 status = CAN_OP_MODE_SYS_ERROR_OCCURED;
 22978   006F5A  0E02               	movlw	2
 22979   006F5C  6E01               	movwf	CAN1_OperationModeSet@status^(0+1280),c
 22980                           
 22981                           ;../../VLCBlib_PIC/can18_can_2.c: 935:                 break;
 22982   006F5E  EFC0  F037         	goto	l757
 22983   006F62                     l8509:
 22984                           
 22985                           ; BSR set to: 1
 22986                           ;../../VLCBlib_PIC/can18_can_2.c: 929:         while (C1CONUbits.OPMOD != requestMode)
 22987   006F62  3902               	swapf	2,w,b	;volatile
 22988   006F64  32E8               	rrcf	wreg,f,c
 22989   006F66  0B07               	andlw	7
 22990   006F68  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 22991   006F6A  A4D8               	btfss	status,2,c
 22992   006F6C  EFBA  F037         	goto	u5851
 22993   006F70  EFBC  F037         	goto	u5850
 22994   006F74                     u5851:
 22995   006F74  EFA6  F037         	goto	l754
 22996   006F78                     u5850:
 22997   006F78  EFC0  F037         	goto	l757
 22998   006F7C                     l8511:
 22999                           
 23000                           ;../../VLCBlib_PIC/can18_can_2.c: 940:     {;../../VLCBlib_PIC/can18_can_2.c: 941:      
      +                             status = CAN_OP_MODE_REQUEST_FAIL;
 23001   006F7C  0E01               	movlw	1
 23002   006F7E  6E01               	movwf	CAN1_OperationModeSet@status^(0+1280),c
 23003   006F80                     l757:
 23004                           
 23005                           ;../../VLCBlib_PIC/can18_can_2.c: 944:     return status;
 23006   006F80  5001               	movf	CAN1_OperationModeSet@status^(0+1280),w,c
 23007   006F82  0012               	return		;funcret
 23008   006F84                     __end_of_CAN1_OperationModeSet:
 23009                           	callstack 0
 23010                           
 23011 ;; *************** function _CAN1_OperationModeGet *****************
 23012 ;; Defined at:
 23013 ;;		line 952 in file "../../VLCBlib_PIC/can18_can_2.c"
 23014 ;; Parameters:    Size  Location     Type
 23015 ;;		None
 23016 ;; Auto vars:     Size  Location     Type
 23017 ;;		None
 23018 ;; Return value:  Size  Location     Type
 23019 ;;                  1    wreg      enum E23640
 23020 ;; Registers used:
 23021 ;;		wreg, status,2, status,0
 23022 ;; Tracked objects:
 23023 ;;		On entry : 0/0
 23024 ;;		On exit  : 0/0
 23025 ;;		Unchanged: 0/0
 23026 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23031 ;;Total ram usage:        0 bytes
 23032 ;; Hardware stack levels used: 1
 23033 ;; Hardware stack levels required when called: 1
 23034 ;; This function calls:
 23035 ;;		Nothing
 23036 ;; This function is called by:
 23037 ;;		_CAN1_OperationModeSet
 23038 ;; This function uses a non-reentrant model
 23039 ;;
 23040                           
 23041                           	psect	text15
 23042   008200                     __ptext15:
 23043                           	callstack 0
 23044   008200                     _CAN1_OperationModeGet:
 23045                           	callstack 122
 23046   008200                     
 23047                           ;../../VLCBlib_PIC/can18_can_2.c: 954:     return C1CONUbits.OPMOD;
 23048   008200  0101               	movlb	1	; () banked
 23049   008202  3902               	swapf	2,w,b	;volatile
 23050   008204  32E8               	rrcf	wreg,f,c
 23051   008206  0B07               	andlw	7
 23052   008208                     
 23053                           ; BSR set to: 1
 23054   008208  0012               	return		;funcret
 23055   00820A                     __end_of_CAN1_OperationModeGet:
 23056                           	callstack 0
 23057                           
 23058 ;; *************** function _poll *****************
 23059 ;; Defined at:
 23060 ;;		line 1005 in file "../../VLCBlib_PIC/vlcb.c"
 23061 ;; Parameters:    Size  Location     Type
 23062 ;;		None
 23063 ;; Auto vars:     Size  Location     Type
 23064 ;;  m               9   36[BANK5 ] struct Message
 23065 ;;  i               1   35[BANK5 ] unsigned char 
 23066 ;;  handled         1   34[BANK5 ] enum E23340
 23067 ;; Return value:  Size  Location     Type
 23068 ;;                  1    wreg      void 
 23069 ;; Registers used:
 23070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23071 ;; Tracked objects:
 23072 ;;		On entry : 0/0
 23073 ;;		On exit  : 0/0
 23074 ;;		Unchanged: 0/0
 23075 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23077 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23078 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23079 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23080 ;;Total ram usage:       15 bytes
 23081 ;; Hardware stack levels used: 1
 23082 ;; Hardware stack levels required when called: 11
 23083 ;; This function calls:
 23084 ;;		NULL
 23085 ;;		_APP_postProcessMessage
 23086 ;;		_APP_preProcessMessage
 23087 ;;		___lmul
 23088 ;;		_bootProcessMessage
 23089 ;;		_canPoll
 23090 ;;		_canProcessMessage
 23091 ;;		_canReceiveMessage
 23092 ;;		_consumerProcessMessage
 23093 ;;		_flushFlashBlock
 23094 ;;		_leds_poll
 23095 ;;		_mnsPoll
 23096 ;;		_mnsProcessMessage
 23097 ;;		_nvProcessMessage
 23098 ;;		_pollTimedResponse
 23099 ;;		_showStatus
 23100 ;;		_teachProcessMessage
 23101 ;;		_tickGet
 23102 ;; This function is called by:
 23103 ;;		_main
 23104 ;; This function uses a non-reentrant model
 23105 ;;
 23106                           
 23107                           	psect	text16
 23108   002EC6                     __ptext16:
 23109                           	callstack 0
 23110   002EC6                     _poll:
 23111                           	callstack 115
 23112   002EC6                     
 23113                           ;../../VLCBlib_PIC/vlcb.c: 1006:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1007:     Mess
      +                          age m;;../../VLCBlib_PIC/vlcb.c: 1008:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 
      +                          1011:     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000
      +                          )) {
 23114   002EC6  EC75  F039         	call	_tickGet	;wreg free
 23115   002ECA  0105               	movlb	5	; () banked
 23116   002ECC  5160               	movf	_timedResponseTime& (0+255),w,b
 23117   002ECE  5C01               	subwf	?_tickGet^(0+1280),w,c
 23118   002ED0  6FEE               	movwf	??_poll& (0+255),b
 23119   002ED2  5161               	movf	(_timedResponseTime+1)& (0+255),w,b
 23120   002ED4  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 23121   002ED6  6FEF               	movwf	(??_poll+1)& (0+255),b
 23122   002ED8  5162               	movf	(_timedResponseTime+2)& (0+255),w,b
 23123   002EDA  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 23124   002EDC  6FF0               	movwf	(??_poll+2)& (0+255),b
 23125   002EDE  5163               	movf	(_timedResponseTime+3)& (0+255),w,b
 23126   002EE0  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 23127   002EE2  6FF1               	movwf	(??_poll+3)& (0+255),b
 23128   002EE4  5193               	movf	_timedResponseDelay& (0+255),w,b
 23129   002EE6  6E01               	movwf	___lmul@multiplier^(0+1280),c
 23130   002EE8  6A02               	clrf	(___lmul@multiplier+1)^(0+1280),c
 23131   002EEA  6A03               	clrf	(___lmul@multiplier+2)^(0+1280),c
 23132   002EEC  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 23133   002EEE  0E3E               	movlw	62
 23134   002EF0  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 23135   002EF2  0E00               	movlw	0
 23136   002EF4  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 23137   002EF6  0E00               	movlw	0
 23138   002EF8  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 23139   002EFA  0E00               	movlw	0
 23140   002EFC  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 23141   002EFE  ECC7  F03A         	call	___lmul	;wreg free
 23142   002F02  0105               	movlb	5	; () banked
 23143   002F04  51EE               	movf	??_poll& (0+255),w,b
 23144   002F06  5C01               	subwf	?___lmul^(0+1280),w,c
 23145   002F08  51EF               	movf	(??_poll+1)& (0+255),w,b
 23146   002F0A  5802               	subwfb	(?___lmul+1)^(0+1280),w,c
 23147   002F0C  51F0               	movf	(??_poll+2)& (0+255),w,b
 23148   002F0E  5803               	subwfb	(?___lmul+2)^(0+1280),w,c
 23149   002F10  51F1               	movf	(??_poll+3)& (0+255),w,b
 23150   002F12  5804               	subwfb	(?___lmul+3)^(0+1280),w,c
 23151   002F14  B0D8               	btfsc	status,0,c
 23152   002F16  EF8F  F017         	goto	u8421
 23153   002F1A  EF91  F017         	goto	u8420
 23154   002F1E                     u8421:
 23155   002F1E  EF9D  F017         	goto	l10961
 23156   002F22                     u8420:
 23157   002F22                     
 23158                           ; BSR set to: 5
 23159                           ;../../VLCBlib_PIC/vlcb.c: 1012:         pollTimedResponse();
 23160   002F22  EC53  F030         	call	_pollTimedResponse	;wreg free
 23161   002F26                     
 23162                           ;../../VLCBlib_PIC/vlcb.c: 1013:         timedResponseTime.val = tickGet();
 23163   002F26  EC75  F039         	call	_tickGet	;wreg free
 23164   002F2A  C501  F560         	movff	?_tickGet,_timedResponseTime
 23165   002F2E  C502  F561         	movff	?_tickGet+1,_timedResponseTime+1
 23166   002F32  C503  F562         	movff	?_tickGet+2,_timedResponseTime+2
 23167   002F36  C504  F563         	movff	?_tickGet+3,_timedResponseTime+3
 23168   002F3A                     l10961:
 23169                           
 23170                           ;../../VLCBlib_PIC/vlcb.c: 1015:     if ((tickGet() - flashFlushTime.val) > 62500) {
 23171   002F3A  EC75  F039         	call	_tickGet	;wreg free
 23172   002F3E  0106               	movlb	6	; () banked
 23173   002F40  5142               	movf	_flashFlushTime& (0+255),w,b
 23174   002F42  5C01               	subwf	?_tickGet^(0+1280),w,c
 23175   002F44  0105               	movlb	5	; () banked
 23176   002F46  6FEE               	movwf	??_poll& (0+255),b
 23177   002F48  0106               	movlb	6	; () banked
 23178   002F4A  5143               	movf	(_flashFlushTime+1)& (0+255),w,b
 23179   002F4C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 23180   002F4E  0105               	movlb	5	; () banked
 23181   002F50  6FEF               	movwf	(??_poll+1)& (0+255),b
 23182   002F52  0106               	movlb	6	; () banked
 23183   002F54  5144               	movf	(_flashFlushTime+2)& (0+255),w,b
 23184   002F56  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 23185   002F58  0105               	movlb	5	; () banked
 23186   002F5A  6FF0               	movwf	(??_poll+2)& (0+255),b
 23187   002F5C  0106               	movlb	6	; () banked
 23188   002F5E  5145               	movf	(_flashFlushTime+3)& (0+255),w,b
 23189   002F60  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 23190   002F62  0105               	movlb	5	; () banked
 23191   002F64  6FF1               	movwf	(??_poll+3)& (0+255),b
 23192   002F66  51F1               	movf	(??_poll+3)& (0+255),w,b
 23193   002F68  11F0               	iorwf	(??_poll+2)& (0+255),w,b
 23194   002F6A  E10B               	bnz	u8430
 23195   002F6C  0E25               	movlw	37
 23196   002F6E  5DEE               	subwf	??_poll& (0+255),w,b
 23197   002F70  0EF4               	movlw	244
 23198   002F72  59EF               	subwfb	(??_poll+1)& (0+255),w,b
 23199   002F74  A0D8               	btfss	status,0,c
 23200   002F76  EFBF  F017         	goto	u8431
 23201   002F7A  EFC1  F017         	goto	u8430
 23202   002F7E                     u8431:
 23203   002F7E  EFCD  F017         	goto	l10967
 23204   002F82                     u8430:
 23205   002F82                     
 23206                           ; BSR set to: 5
 23207                           ;../../VLCBlib_PIC/vlcb.c: 1016:         flushFlashBlock();
 23208   002F82  EC62  F034         	call	_flushFlashBlock	;wreg free
 23209   002F86                     
 23210                           ;../../VLCBlib_PIC/vlcb.c: 1017:         flashFlushTime.val = tickGet();
 23211   002F86  EC75  F039         	call	_tickGet	;wreg free
 23212   002F8A  C501  F642         	movff	?_tickGet,_flashFlushTime
 23213   002F8E  C502  F643         	movff	?_tickGet+1,_flashFlushTime+1
 23214   002F92  C503  F644         	movff	?_tickGet+2,_flashFlushTime+2
 23215   002F96  C504  F645         	movff	?_tickGet+3,_flashFlushTime+3
 23216   002F9A                     l10967:
 23217                           
 23218                           ;../../VLCBlib_PIC/vlcb.c: 1020:     for (i=0; i<6; i++) {
 23219   002F9A  0105               	movlb	5	; () banked
 23220   002F9C  6BF3               	clrf	poll@i& (0+255),b
 23221   002F9E                     l10973:
 23222                           
 23223                           ; BSR set to: 5
 23224                           ;../../VLCBlib_PIC/vlcb.c: 1021:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
 23225   002F9E  51F3               	movf	poll@i& (0+255),w,b
 23226   002FA0  0D02               	mullw	2
 23227   002FA2  0E89               	movlw	low _services
 23228   002FA4  24F3               	addwf	243,w,c
 23229   002FA6  6EF6               	movwf	tblptrl,c
 23230   002FA8  0EFF               	movlw	high _services
 23231   002FAA  20F4               	addwfc	244,w,c
 23232   002FAC  6EF7               	movwf	tblptrh,c
 23233   002FAE                     	if	1	;There are 3 active tblptr bytes
 23234   002FAE  6AF8               	clrf	tblptru,c
 23235   002FB0  0E00               	movlw	low (__mediumconst shr (0+16))
 23236   002FB2  22F8               	addwfc	tblptru,f,c
 23237   002FB4                     	endif
 23238   002FB4  0009               	tblrd		*+
 23239   002FB6  50F5               	movf	tablat,w,c
 23240   002FB8  0009               	tblrd		*+
 23241   002FBA  10F5               	iorwf	tablat,w,c
 23242   002FBC  B4D8               	btfsc	status,2,c
 23243   002FBE  EFE3  F017         	goto	u8441
 23244   002FC2  EFE5  F017         	goto	u8440
 23245   002FC6                     u8441:
 23246   002FC6  EF36  F018         	goto	l10979
 23247   002FCA                     u8440:
 23248   002FCA                     
 23249                           ; BSR set to: 5
 23250   002FCA  51F3               	movf	poll@i& (0+255),w,b
 23251   002FCC  0D02               	mullw	2
 23252   002FCE  0E89               	movlw	low _services
 23253   002FD0  24F3               	addwf	243,w,c
 23254   002FD2  6EF6               	movwf	tblptrl,c
 23255   002FD4  0EFF               	movlw	high _services
 23256   002FD6  20F4               	addwfc	244,w,c
 23257   002FD8  6EF7               	movwf	tblptrh,c
 23258   002FDA                     	if	1	;There are 3 active tblptr bytes
 23259   002FDA  6AF8               	clrf	tblptru,c
 23260   002FDC  0E00               	movlw	low (__mediumconst shr (0+16))
 23261   002FDE  22F8               	addwfc	tblptru,f,c
 23262   002FE0                     	endif
 23263   002FE0  0009               	tblrd		*+
 23264   002FE2  C4F5 F5EE          	movff	tablat,??_poll
 23265   002FE6  0009               	tblrd		*+
 23266   002FE8  C4F5 F5EF          	movff	tablat,??_poll+1
 23267   002FEC  0E08               	movlw	8
 23268   002FEE  27EE               	addwf	??_poll& (0+255),f,b
 23269   002FF0  0E00               	movlw	0
 23270   002FF2  23EF               	addwfc	(??_poll+1)& (0+255),f,b
 23271   002FF4  C5EE  F4F6         	movff	??_poll,tblptrl
 23272   002FF8  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23273   002FFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23274   002FFC  6AF8               	clrf	tblptru,c
 23275   002FFE                     	endif
 23276   002FFE                     	if	0	;tblptru may be non-zero
 23277   002FFE                     	endif
 23278   002FFE  0009               	tblrd		*+
 23279   003000  50F5               	movf	tablat,w,c
 23280   003002  0009               	tblrd		*+
 23281   003004  10F5               	iorwf	tablat,w,c
 23282   003006  B4D8               	btfsc	status,2,c
 23283   003008  EF08  F018         	goto	u8451
 23284   00300C  EF0A  F018         	goto	u8450
 23285   003010                     u8451:
 23286   003010  EF36  F018         	goto	l10979
 23287   003014                     u8450:
 23288   003014                     
 23289                           ; BSR set to: 5
 23290                           ;../../VLCBlib_PIC/vlcb.c: 1022:             services[i]->poll();
 23291   003014  51F3               	movf	poll@i& (0+255),w,b
 23292   003016  0D02               	mullw	2
 23293   003018  0E89               	movlw	low _services
 23294   00301A  24F3               	addwf	243,w,c
 23295   00301C  6EF6               	movwf	tblptrl,c
 23296   00301E  0EFF               	movlw	high _services
 23297   003020  20F4               	addwfc	244,w,c
 23298   003022  6EF7               	movwf	tblptrh,c
 23299   003024                     	if	1	;There are 3 active tblptr bytes
 23300   003024  6AF8               	clrf	tblptru,c
 23301   003026  0E00               	movlw	low (__mediumconst shr (0+16))
 23302   003028  22F8               	addwfc	tblptru,f,c
 23303   00302A                     	endif
 23304   00302A  0009               	tblrd		*+
 23305   00302C  C4F5 F5EE          	movff	tablat,??_poll
 23306   003030  0009               	tblrd		*+
 23307   003032  C4F5 F5EF          	movff	tablat,??_poll+1
 23308   003036  0E08               	movlw	8
 23309   003038  27EE               	addwf	??_poll& (0+255),f,b
 23310   00303A  0E00               	movlw	0
 23311   00303C  23EF               	addwfc	(??_poll+1)& (0+255),f,b
 23312   00303E  C5EE  F4F6         	movff	??_poll,tblptrl
 23313   003042  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23314   003046                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23315   003046  6AF8               	clrf	tblptru,c
 23316   003048                     	endif
 23317   003048                     	if	0	;tblptru may be non-zero
 23318   003048                     	endif
 23319   003048  0009               	tblrd		*+
 23320   00304A  C4F5 F5F0          	movff	tablat,??_poll+2
 23321   00304E  0009               	tblrd		*+
 23322   003050  C4F5 F5F1          	movff	tablat,??_poll+3
 23323   003054  D802               	call	u8468
 23324   003056  EF36  F018         	goto	u8469
 23325   00305A                     u8468:
 23326   00305A  0005               	push	
 23327   00305C  6EFA               	movwf	pclath,c
 23328   00305E  51F0               	movf	(??_poll+2)& (0+255),w,b
 23329   003060  6EFD               	movwf	tosl,c
 23330   003062  51F1               	movf	(??_poll+3)& (0+255),w,b
 23331   003064  6EFE               	movwf	tosh,c
 23332   003066  6AFF               	clrf	tosu,c
 23333   003068  50FA               	movf	pclath,w,c
 23334   00306A  0012               	return		;indir
 23335   00306C                     u8469:
 23336   00306C                     l10979:
 23337                           
 23338                           ;../../VLCBlib_PIC/vlcb.c: 1024:     }
 23339   00306C  0105               	movlb	5	; () banked
 23340   00306E  2BF3               	incf	poll@i& (0+255),f,b
 23341   003070                     
 23342                           ; BSR set to: 5
 23343   003070  0E05               	movlw	5
 23344   003072  65F3               	cpfsgt	poll@i& (0+255),b
 23345   003074  EF3E  F018         	goto	u8471
 23346   003078  EF40  F018         	goto	u8470
 23347   00307C                     u8471:
 23348   00307C  EFCF  F017         	goto	l10973
 23349   003080                     u8470:
 23350   003080                     
 23351                           ; BSR set to: 5
 23352                           ;../../VLCBlib_PIC/vlcb.c: 1026:     leds_poll();
 23353   003080  EC22  F01B         	call	_leds_poll	;wreg free
 23354   003084                     
 23355                           ;../../VLCBlib_PIC/vlcb.c: 1029:     handled = NOT_PROCESSED;
 23356   003084  0105               	movlb	5	; () banked
 23357   003086  6BF2               	clrf	poll@handled& (0+255),b
 23358   003088                     
 23359                           ; BSR set to: 5
 23360                           ;../../VLCBlib_PIC/vlcb.c: 1030:     if (transport != ((void*)0)) {
 23361   003088  5191               	movf	_transport& (0+255),w,b
 23362   00308A  1192               	iorwf	(_transport+1)& (0+255),w,b
 23363   00308C  B4D8               	btfsc	status,2,c
 23364   00308E  EF4B  F018         	goto	u8481
 23365   003092  EF4D  F018         	goto	u8480
 23366   003096                     u8481:
 23367   003096  EF3D  F019         	goto	l11021
 23368   00309A                     u8480:
 23369   00309A                     
 23370                           ; BSR set to: 5
 23371                           ;../../VLCBlib_PIC/vlcb.c: 1031:         if (transport->receiveMessage != ((void*)0)) {
 23372   00309A  0E02               	movlw	2
 23373   00309C  2591               	addwf	_transport& (0+255),w,b
 23374   00309E  6FEE               	movwf	??_poll& (0+255),b
 23375   0030A0  0E00               	movlw	0
 23376   0030A2  2192               	addwfc	(_transport+1)& (0+255),w,b
 23377   0030A4  6FEF               	movwf	(??_poll+1)& (0+255),b
 23378   0030A6  C5EE  F4F6         	movff	??_poll,tblptrl
 23379   0030AA  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23380   0030AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23381   0030AE  6AF8               	clrf	tblptru,c
 23382   0030B0                     	endif
 23383   0030B0                     	if	0	;tblptru may be non-zero
 23384   0030B0                     	endif
 23385   0030B0  0009               	tblrd		*+
 23386   0030B2  50F5               	movf	tablat,w,c
 23387   0030B4  0009               	tblrd		*+
 23388   0030B6  10F5               	iorwf	tablat,w,c
 23389   0030B8  B4D8               	btfsc	status,2,c
 23390   0030BA  EF61  F018         	goto	u8491
 23391   0030BE  EF63  F018         	goto	u8490
 23392   0030C2                     u8491:
 23393   0030C2  EF3D  F019         	goto	l11021
 23394   0030C6                     u8490:
 23395   0030C6                     
 23396                           ; BSR set to: 5
 23397                           ;../../VLCBlib_PIC/vlcb.c: 1032:             if (transport->receiveMessage(&m)) {
 23398   0030C6  0EF4               	movlw	low poll@m
 23399   0030C8  6E10               	movwf	canReceiveMessage@m^(0+1280),c
 23400   0030CA  0E05               	movlw	high poll@m
 23401   0030CC  6E11               	movwf	(canReceiveMessage@m+1)^(0+1280),c
 23402   0030CE  0E02               	movlw	2
 23403   0030D0  2591               	addwf	_transport& (0+255),w,b
 23404   0030D2  6FEE               	movwf	??_poll& (0+255),b
 23405   0030D4  0E00               	movlw	0
 23406   0030D6  2192               	addwfc	(_transport+1)& (0+255),w,b
 23407   0030D8  6FEF               	movwf	(??_poll+1)& (0+255),b
 23408   0030DA  C5EE  F4F6         	movff	??_poll,tblptrl
 23409   0030DE  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23410   0030E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23411   0030E2  6AF8               	clrf	tblptru,c
 23412   0030E4                     	endif
 23413   0030E4                     	if	0	;tblptru may be non-zero
 23414   0030E4                     	endif
 23415   0030E4  0009               	tblrd		*+
 23416   0030E6  C4F5 F5F0          	movff	tablat,??_poll+2
 23417   0030EA  0009               	tblrd		*+
 23418   0030EC  C4F5 F5F1          	movff	tablat,??_poll+3
 23419   0030F0  D802               	call	u8508
 23420   0030F2  EF84  F018         	goto	u8509
 23421   0030F6                     u8508:
 23422   0030F6  0005               	push	
 23423   0030F8  6EFA               	movwf	pclath,c
 23424   0030FA  51F0               	movf	(??_poll+2)& (0+255),w,b
 23425   0030FC  6EFD               	movwf	tosl,c
 23426   0030FE  51F1               	movf	(??_poll+3)& (0+255),w,b
 23427   003100  6EFE               	movwf	tosh,c
 23428   003102  6AFF               	clrf	tosu,c
 23429   003104  50FA               	movf	pclath,w,c
 23430   003106  0012               	return		;indir
 23431   003108                     u8509:
 23432   003108  0900               	iorlw	0
 23433   00310A  B4D8               	btfsc	status,2,c
 23434   00310C  EF8A  F018         	goto	u8511
 23435   003110  EF8C  F018         	goto	u8510
 23436   003114                     u8511:
 23437   003114  EF3D  F019         	goto	l11021
 23438   003118                     u8510:
 23439   003118                     
 23440                           ;../../VLCBlib_PIC/vlcb.c: 1033:                 if (m.len > 0) {
 23441   003118  0105               	movlb	5	; () banked
 23442   00311A  51F4               	movf	poll@m& (0+255),w,b
 23443   00311C  B4D8               	btfsc	status,2,c
 23444   00311E  EF93  F018         	goto	u8521
 23445   003122  EF95  F018         	goto	u8520
 23446   003126                     u8521:
 23447   003126  EF3D  F019         	goto	l11021
 23448   00312A                     u8520:
 23449   00312A                     
 23450                           ; BSR set to: 5
 23451                           ;../../VLCBlib_PIC/vlcb.c: 1034:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
 23452   00312A  0E07               	movlw	7
 23453   00312C  ECB1  F027         	call	_showStatus
 23454                           
 23455                           ;../../VLCBlib_PIC/vlcb.c: 1035:                     handled = APP_preProcessMessage(&m)
      +                          ;
 23456   003130  0EF4               	movlw	low poll@m
 23457   003132  6E01               	movwf	APP_preProcessMessage@m^(0+1280),c
 23458   003134  0E05               	movlw	high poll@m
 23459   003136  6E02               	movwf	(APP_preProcessMessage@m+1)^(0+1280),c
 23460   003138  EC2D  F041         	call	_APP_preProcessMessage	;wreg free
 23461   00313C  0105               	movlb	5	; () banked
 23462   00313E  6FF2               	movwf	poll@handled& (0+255),b
 23463   003140                     
 23464                           ; BSR set to: 5
 23465                           ;../../VLCBlib_PIC/vlcb.c: 1036:                     if (handled == NOT_PROCESSED) {
 23466   003140  51F2               	movf	poll@handled& (0+255),w,b
 23467   003142  A4D8               	btfss	status,2,c
 23468   003144  EFA6  F018         	goto	u8531
 23469   003148  EFA8  F018         	goto	u8530
 23470   00314C                     u8531:
 23471   00314C  EF3D  F019         	goto	l11021
 23472   003150                     u8530:
 23473   003150                     
 23474                           ; BSR set to: 5
 23475                           ;../../VLCBlib_PIC/vlcb.c: 1037:                         for (i=0; i<6; i++) {
 23476   003150  6BF3               	clrf	poll@i& (0+255),b
 23477   003152                     l11005:
 23478                           
 23479                           ; BSR set to: 5
 23480                           ;../../VLCBlib_PIC/vlcb.c: 1038:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
 23481   003152  51F3               	movf	poll@i& (0+255),w,b
 23482   003154  0D02               	mullw	2
 23483   003156  0E89               	movlw	low _services
 23484   003158  24F3               	addwf	243,w,c
 23485   00315A  6EF6               	movwf	tblptrl,c
 23486   00315C  0EFF               	movlw	high _services
 23487   00315E  20F4               	addwfc	244,w,c
 23488   003160  6EF7               	movwf	tblptrh,c
 23489   003162                     	if	1	;There are 3 active tblptr bytes
 23490   003162  6AF8               	clrf	tblptru,c
 23491   003164  0E00               	movlw	low (__mediumconst shr (0+16))
 23492   003166  22F8               	addwfc	tblptru,f,c
 23493   003168                     	endif
 23494   003168  0009               	tblrd		*+
 23495   00316A  50F5               	movf	tablat,w,c
 23496   00316C  0009               	tblrd		*+
 23497   00316E  10F5               	iorwf	tablat,w,c
 23498   003170  B4D8               	btfsc	status,2,c
 23499   003172  EFBD  F018         	goto	u8541
 23500   003176  EFBF  F018         	goto	u8540
 23501   00317A                     u8541:
 23502   00317A  EF21  F019         	goto	l11013
 23503   00317E                     u8540:
 23504   00317E                     
 23505                           ; BSR set to: 5
 23506   00317E  51F3               	movf	poll@i& (0+255),w,b
 23507   003180  0D02               	mullw	2
 23508   003182  0E89               	movlw	low _services
 23509   003184  24F3               	addwf	243,w,c
 23510   003186  6EF6               	movwf	tblptrl,c
 23511   003188  0EFF               	movlw	high _services
 23512   00318A  20F4               	addwfc	244,w,c
 23513   00318C  6EF7               	movwf	tblptrh,c
 23514   00318E                     	if	1	;There are 3 active tblptr bytes
 23515   00318E  6AF8               	clrf	tblptru,c
 23516   003190  0E00               	movlw	low (__mediumconst shr (0+16))
 23517   003192  22F8               	addwfc	tblptru,f,c
 23518   003194                     	endif
 23519   003194  0009               	tblrd		*+
 23520   003196  C4F5 F5EE          	movff	tablat,??_poll
 23521   00319A  0009               	tblrd		*+
 23522   00319C  C4F5 F5EF          	movff	tablat,??_poll+1
 23523   0031A0  0E06               	movlw	6
 23524   0031A2  27EE               	addwf	??_poll& (0+255),f,b
 23525   0031A4  0E00               	movlw	0
 23526   0031A6  23EF               	addwfc	(??_poll+1)& (0+255),f,b
 23527   0031A8  C5EE  F4F6         	movff	??_poll,tblptrl
 23528   0031AC  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23529   0031B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23530   0031B0  6AF8               	clrf	tblptru,c
 23531   0031B2                     	endif
 23532   0031B2                     	if	0	;tblptru may be non-zero
 23533   0031B2                     	endif
 23534   0031B2  0009               	tblrd		*+
 23535   0031B4  50F5               	movf	tablat,w,c
 23536   0031B6  0009               	tblrd		*+
 23537   0031B8  10F5               	iorwf	tablat,w,c
 23538   0031BA  B4D8               	btfsc	status,2,c
 23539   0031BC  EFE2  F018         	goto	u8551
 23540   0031C0  EFE4  F018         	goto	u8550
 23541   0031C4                     u8551:
 23542   0031C4  EF21  F019         	goto	l11013
 23543   0031C8                     u8550:
 23544   0031C8                     
 23545                           ; BSR set to: 5
 23546                           ;../../VLCBlib_PIC/vlcb.c: 1039:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
 23547   0031C8  0EF4               	movlw	low poll@m
 23548   0031CA  6E54               	movwf	nvProcessMessage@m^(0+1280),c
 23549   0031CC  0E05               	movlw	high poll@m
 23550   0031CE  6E55               	movwf	(nvProcessMessage@m+1)^(0+1280),c
 23551   0031D0  51F3               	movf	poll@i& (0+255),w,b
 23552   0031D2  0D02               	mullw	2
 23553   0031D4  0E89               	movlw	low _services
 23554   0031D6  24F3               	addwf	243,w,c
 23555   0031D8  6EF6               	movwf	tblptrl,c
 23556   0031DA  0EFF               	movlw	high _services
 23557   0031DC  20F4               	addwfc	244,w,c
 23558   0031DE  6EF7               	movwf	tblptrh,c
 23559   0031E0                     	if	1	;There are 3 active tblptr bytes
 23560   0031E0  6AF8               	clrf	tblptru,c
 23561   0031E2  0E00               	movlw	low (__mediumconst shr (0+16))
 23562   0031E4  22F8               	addwfc	tblptru,f,c
 23563   0031E6                     	endif
 23564   0031E6  0009               	tblrd		*+
 23565   0031E8  C4F5 F5EE          	movff	tablat,??_poll
 23566   0031EC  0009               	tblrd		*+
 23567   0031EE  C4F5 F5EF          	movff	tablat,??_poll+1
 23568   0031F2  0E06               	movlw	6
 23569   0031F4  27EE               	addwf	??_poll& (0+255),f,b
 23570   0031F6  0E00               	movlw	0
 23571   0031F8  23EF               	addwfc	(??_poll+1)& (0+255),f,b
 23572   0031FA  C5EE  F4F6         	movff	??_poll,tblptrl
 23573   0031FE  C5EF  F4F7         	movff	??_poll+1,tblptrh
 23574   003202                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23575   003202  6AF8               	clrf	tblptru,c
 23576   003204                     	endif
 23577   003204                     	if	0	;tblptru may be non-zero
 23578   003204                     	endif
 23579   003204  0009               	tblrd		*+
 23580   003206  C4F5 F5F0          	movff	tablat,??_poll+2
 23581   00320A  0009               	tblrd		*+
 23582   00320C  C4F5 F5F1          	movff	tablat,??_poll+3
 23583   003210  D802               	call	u8568
 23584   003212  EF14  F019         	goto	u8569
 23585   003216                     u8568:
 23586   003216  0005               	push	
 23587   003218  6EFA               	movwf	pclath,c
 23588   00321A  51F0               	movf	(??_poll+2)& (0+255),w,b
 23589   00321C  6EFD               	movwf	tosl,c
 23590   00321E  51F1               	movf	(??_poll+3)& (0+255),w,b
 23591   003220  6EFE               	movwf	tosh,c
 23592   003222  6AFF               	clrf	tosu,c
 23593   003224  50FA               	movf	pclath,w,c
 23594   003226  0012               	return		;indir
 23595   003228                     u8569:
 23596   003228  06E8               	decf	wreg,f,c
 23597   00322A  A4D8               	btfss	status,2,c
 23598   00322C  EF1A  F019         	goto	u8571
 23599   003230  EF1C  F019         	goto	u8570
 23600   003234                     u8571:
 23601   003234  EF21  F019         	goto	l11013
 23602   003238                     u8570:
 23603   003238                     
 23604                           ;../../VLCBlib_PIC/vlcb.c: 1040:                                     handled = PROCESSED
      +                          ;
 23605   003238  0E01               	movlw	1
 23606   00323A  0105               	movlb	5	; () banked
 23607   00323C  6FF2               	movwf	poll@handled& (0+255),b
 23608                           
 23609                           ;../../VLCBlib_PIC/vlcb.c: 1041:                                     break;
 23610   00323E  EF2B  F019         	goto	l11017
 23611   003242                     l11013:
 23612                           
 23613                           ;../../VLCBlib_PIC/vlcb.c: 1044:                         }
 23614   003242  0105               	movlb	5	; () banked
 23615   003244  2BF3               	incf	poll@i& (0+255),f,b
 23616   003246                     
 23617                           ; BSR set to: 5
 23618   003246  0E05               	movlw	5
 23619   003248  65F3               	cpfsgt	poll@i& (0+255),b
 23620   00324A  EF29  F019         	goto	u8581
 23621   00324E  EF2B  F019         	goto	u8580
 23622   003252                     u8581:
 23623   003252  EFA9  F018         	goto	l11005
 23624   003256                     u8580:
 23625   003256                     l11017:
 23626                           
 23627                           ; BSR set to: 5
 23628                           ;../../VLCBlib_PIC/vlcb.c: 1045:                         if (handled == NOT_PROCESSED) {
 23629   003256  51F2               	movf	poll@handled& (0+255),w,b
 23630   003258  A4D8               	btfss	status,2,c
 23631   00325A  EF31  F019         	goto	u8591
 23632   00325E  EF33  F019         	goto	u8590
 23633   003262                     u8591:
 23634   003262  EF3D  F019         	goto	l2039
 23635   003266                     u8590:
 23636   003266                     
 23637                           ; BSR set to: 5
 23638                           ;../../VLCBlib_PIC/vlcb.c: 1046:                             handled = APP_postProcessMe
      +                          ssage(&m);
 23639   003266  0EF4               	movlw	low poll@m
 23640   003268  6E01               	movwf	APP_postProcessMessage@m^(0+1280),c
 23641   00326A  0E05               	movlw	high poll@m
 23642   00326C  6E02               	movwf	(APP_postProcessMessage@m+1)^(0+1280),c
 23643   00326E  EC2F  F041         	call	_APP_postProcessMessage	;wreg free
 23644   003272  0105               	movlb	5	; () banked
 23645   003274  6FF2               	movwf	poll@handled& (0+255),b
 23646   003276  EF3D  F019         	goto	l11021
 23647   00327A                     l2039:
 23648   00327A                     l11021:
 23649                           
 23650                           ;../../VLCBlib_PIC/vlcb.c: 1053:     if (handled) {
 23651   00327A  0105               	movlb	5	; () banked
 23652   00327C  51F2               	movf	poll@handled& (0+255),w,b
 23653   00327E  B4D8               	btfsc	status,2,c
 23654   003280  EF44  F019         	goto	u8601
 23655   003284  EF46  F019         	goto	u8600
 23656   003288                     u8601:
 23657   003288  EF4B  F019         	goto	l2048
 23658   00328C                     u8600:
 23659   00328C                     
 23660                           ; BSR set to: 5
 23661                           ;../../VLCBlib_PIC/vlcb.c: 1054:         mnsDiagnostics[0x06].asUint++;
 23662   00328C  4BB9               	infsnz	(_mnsDiagnostics+12)& (0+255),f,b
 23663   00328E  2BBA               	incf	(_mnsDiagnostics+13)& (0+255),f,b
 23664   003290                     
 23665                           ; BSR set to: 5
 23666                           ;../../VLCBlib_PIC/vlcb.c: 1055:         showStatus(STATUS_MESSAGE_ACTED);
 23667   003290  0E08               	movlw	8
 23668   003292  ECB1  F027         	call	_showStatus
 23669   003296                     l2048:
 23670   003296  0012               	return		;funcret
 23671   003298                     __end_of_poll:
 23672                           	callstack 0
 23673                           
 23674 ;; *************** function _nvProcessMessage *****************
 23675 ;; Defined at:
 23676 ;;		line 240 in file "../../VLCBlib_PIC/nv.c"
 23677 ;; Parameters:    Size  Location     Type
 23678 ;;  m               2   83[COMRAM] PTR struct Message
 23679 ;;		 -> poll@m(9), 
 23680 ;; Auto vars:     Size  Location     Type
 23681 ;;  valueOrError    2   87[COMRAM] short 
 23682 ;; Return value:  Size  Location     Type
 23683 ;;                  1    wreg      enum E23340
 23684 ;; Registers used:
 23685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23686 ;; Tracked objects:
 23687 ;;		On entry : 0/0
 23688 ;;		On exit  : 0/0
 23689 ;;		Unchanged: 0/0
 23690 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23692 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23693 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23694 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23695 ;;Total ram usage:        6 bytes
 23696 ;; Hardware stack levels used: 1
 23697 ;; Hardware stack levels required when called: 7
 23698 ;; This function calls:
 23699 ;;		_findServiceIndex
 23700 ;;		_getNV
 23701 ;;		_sendMessage2
 23702 ;;		_sendMessage3
 23703 ;;		_sendMessage4
 23704 ;;		_sendMessage5
 23705 ;;		_setNV
 23706 ;;		_startTimedResponse
 23707 ;; This function is called by:
 23708 ;;		_poll
 23709 ;; This function uses a non-reentrant model
 23710 ;;
 23711                           
 23712                           	psect	text17
 23713   003298                     __ptext17:
 23714                           	callstack 0
 23715   003298                     _nvProcessMessage:
 23716                           	callstack 118
 23717   003298                     
 23718                           ;../../VLCBlib_PIC/nv.c: 241:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 243:    
      +                           if (m->len < 3) {
 23719   003298  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 23720   00329C  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 23721   0032A0  0E03               	movlw	3
 23722   0032A2  60DF               	cpfslt	indf2,c
 23723   0032A4  EF56  F019         	goto	u8021
 23724   0032A8  EF58  F019         	goto	u8020
 23725   0032AC                     u8021:
 23726   0032AC  EF5B  F019         	goto	l10621
 23727   0032B0                     u8020:
 23728   0032B0                     l10617:
 23729                           
 23730                           ;../../VLCBlib_PIC/nv.c: 244:         return NOT_PROCESSED;
 23731   0032B0  0E00               	movlw	0
 23732   0032B2  EF21  F01B         	goto	l1567
 23733   0032B6                     l10621:
 23734                           
 23735                           ;../../VLCBlib_PIC/nv.c: 247:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 23736   0032B6  EE20 F002          	lfsr	2,2
 23737   0032BA  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23738   0032BC  26D9               	addwf	fsr2l,f,c
 23739   0032BE  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23740   0032C0  22DA               	addwfc	fsr2h,f,c
 23741   0032C2  50DE               	movf	postinc2,w,c
 23742   0032C4  0105               	movlb	5	; () banked
 23743   0032C6  1990               	xorwf	(_nn+1)& (0+255),w,b
 23744   0032C8  B4D8               	btfsc	status,2,c
 23745   0032CA  EF69  F019         	goto	u8031
 23746   0032CE  EF6B  F019         	goto	u8030
 23747   0032D2                     u8031:
 23748   0032D2  EF6D  F019         	goto	l10627
 23749   0032D6                     u8030:
 23750   0032D6  EF58  F019         	goto	l10617
 23751   0032DA                     l10627:
 23752                           
 23753                           ; BSR set to: 5
 23754                           ;../../VLCBlib_PIC/nv.c: 248:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 23755   0032DA  EE20 F003          	lfsr	2,3
 23756   0032DE  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23757   0032E0  26D9               	addwf	fsr2l,f,c
 23758   0032E2  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23759   0032E4  22DA               	addwfc	fsr2h,f,c
 23760   0032E6  518F               	movf	_nn& (0+255),w,b
 23761   0032E8  18DE               	xorwf	postinc2,w,c
 23762   0032EA  B4D8               	btfsc	status,2,c
 23763   0032EC  EF7A  F019         	goto	u8041
 23764   0032F0  EF7C  F019         	goto	u8040
 23765   0032F4                     u8041:
 23766   0032F4  EF02  F01B         	goto	l10745
 23767   0032F8                     u8040:
 23768   0032F8  EF58  F019         	goto	l10617
 23769   0032FC                     l10633:
 23770                           
 23771                           ; BSR set to: 5
 23772                           ;../../VLCBlib_PIC/nv.c: 252:             if (m->len < 4) {
 23773   0032FC  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 23774   003300  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 23775   003304  0E04               	movlw	4
 23776   003306  60DF               	cpfslt	indf2,c
 23777   003308  EF88  F019         	goto	u8051
 23778   00330C  EF8A  F019         	goto	u8050
 23779   003310                     u8051:
 23780   003310  EFA6  F019         	goto	l10643
 23781   003314                     u8050:
 23782   003314                     
 23783                           ; BSR set to: 5
 23784                           ;../../VLCBlib_PIC/nv.c: 253:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 23785   003314  C590  F526         	movff	_nn+1,sendMessage3@data1
 23786   003318  C58F  F527         	movff	_nn,sendMessage3@data2
 23787   00331C  0E01               	movlw	1
 23788   00331E  6E28               	movwf	sendMessage3@data3^(0+1280),c
 23789   003320  0E6F               	movlw	111
 23790   003322  ECD2  F03F         	call	_sendMessage3
 23791                           
 23792                           ;../../VLCBlib_PIC/nv.c: 255:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 23793   003326  C590  F526         	movff	_nn+1,sendMessage5@data1
 23794   00332A  C58F  F527         	movff	_nn,sendMessage5@data2
 23795   00332E  0E71               	movlw	113
 23796   003330  6E28               	movwf	sendMessage5@data3^(0+1280),c
 23797   003332  0E01               	movlw	1
 23798   003334  6E29               	movwf	sendMessage5@data4^(0+1280),c
 23799   003336  0E01               	movlw	1
 23800   003338  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 23801   00333A  0EAF               	movlw	175
 23802   00333C  EC11  F040         	call	_sendMessage5
 23803   003340                     l10637:
 23804                           
 23805                           ;../../VLCBlib_PIC/nv.c: 258:                 nvDiagnostics[0x02].asUint++;
 23806   003340  0105               	movlb	5	; () banked
 23807   003342  4BBF               	infsnz	(_nvDiagnostics+4)& (0+255),f,b
 23808   003344  2BC0               	incf	(_nvDiagnostics+5)& (0+255),f,b
 23809   003346                     l10639:
 23810                           
 23811                           ;../../VLCBlib_PIC/nv.c: 260:                 return PROCESSED;
 23812   003346  0E01               	movlw	1
 23813   003348  EF21  F01B         	goto	l1567
 23814   00334C                     l10643:
 23815                           
 23816                           ; BSR set to: 5
 23817                           ;../../VLCBlib_PIC/nv.c: 262:             valueOrError = getNV(m->bytes[2]);
 23818   00334C  EE20 F004          	lfsr	2,4
 23819   003350  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23820   003352  26D9               	addwf	fsr2l,f,c
 23821   003354  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23822   003356  22DA               	addwfc	fsr2h,f,c
 23823   003358  50DF               	movf	indf2,w,c
 23824   00335A  ECA0  F03C         	call	_getNV
 23825   00335E  C501  F558         	movff	?_getNV,nvProcessMessage@valueOrError
 23826   003362  C502  F559         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 23827   003366                     
 23828                           ;../../VLCBlib_PIC/nv.c: 263:             if (valueOrError < 0) {
 23829   003366  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 23830   003368  EFBA  F019         	goto	u8060
 23831   00336C  EFB8  F019         	goto	u8061
 23832   003370                     u8061:
 23833   003370  EFD4  F019         	goto	l10655
 23834   003374                     u8060:
 23835   003374                     
 23836                           ;../../VLCBlib_PIC/nv.c: 264:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 23837   003374  C590  F526         	movff	_nn+1,sendMessage3@data1
 23838   003378  C58F  F527         	movff	_nn,sendMessage3@data2
 23839   00337C  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 23840   00337E  0800               	sublw	0
 23841   003380  6E28               	movwf	sendMessage3@data3^(0+1280),c
 23842   003382  0E6F               	movlw	111
 23843   003384  ECD2  F03F         	call	_sendMessage3
 23844                           
 23845                           ;../../VLCBlib_PIC/nv.c: 266:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 23846   003388  C590  F526         	movff	_nn+1,sendMessage5@data1
 23847   00338C  C58F  F527         	movff	_nn,sendMessage5@data2
 23848   003390  0E71               	movlw	113
 23849   003392  6E28               	movwf	sendMessage5@data3^(0+1280),c
 23850   003394  0E01               	movlw	1
 23851   003396  6E29               	movwf	sendMessage5@data4^(0+1280),c
 23852   003398  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 23853   00339A  0800               	sublw	0
 23854   00339C  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 23855   00339E  0EAF               	movlw	175
 23856   0033A0  EC11  F040         	call	_sendMessage5
 23857   0033A4  EFA0  F019         	goto	l10637
 23858   0033A8                     l10655:
 23859                           
 23860                           ;../../VLCBlib_PIC/nv.c: 274:             nvDiagnostics[0x01].asUint++;
 23861   0033A8  0105               	movlb	5	; () banked
 23862   0033AA  4BBD               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 23863   0033AC  2BBE               	incf	(_nvDiagnostics+3)& (0+255),f,b
 23864   0033AE                     
 23865                           ; BSR set to: 5
 23866                           ;../../VLCBlib_PIC/nv.c: 276:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 23867   0033AE  C590  F526         	movff	_nn+1,sendMessage4@data1
 23868   0033B2  C58F  F527         	movff	_nn,sendMessage4@data2
 23869   0033B6  EE20 F004          	lfsr	2,4
 23870   0033BA  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23871   0033BC  26D9               	addwf	fsr2l,f,c
 23872   0033BE  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23873   0033C0  22DA               	addwfc	fsr2h,f,c
 23874   0033C2  50DF               	movf	indf2,w,c
 23875   0033C4  6E28               	movwf	sendMessage4@data3^(0+1280),c
 23876   0033C6  C558  F529         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 23877   0033CA  0E97               	movlw	151
 23878   0033CC  ECBD  F03F         	call	_sendMessage4
 23879   0033D0                     
 23880                           ;../../VLCBlib_PIC/nv.c: 278:             if (((mode_flags & 8) == 0) && (m->bytes[2] ==
      +                           0)) {
 23881   0033D0  0105               	movlb	5	; () banked
 23882   0033D2  B7A4               	btfsc	_mode_flags& (0+255),3,b
 23883   0033D4  EFEE  F019         	goto	u8071
 23884   0033D8  EFF0  F019         	goto	u8070
 23885   0033DC                     u8071:
 23886   0033DC  EFA3  F019         	goto	l10639
 23887   0033E0                     u8070:
 23888   0033E0                     
 23889                           ; BSR set to: 5
 23890   0033E0  EE20 F004          	lfsr	2,4
 23891   0033E4  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23892   0033E6  26D9               	addwf	fsr2l,f,c
 23893   0033E8  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23894   0033EA  22DA               	addwfc	fsr2h,f,c
 23895   0033EC  50DF               	movf	indf2,w,c
 23896   0033EE  A4D8               	btfss	status,2,c
 23897   0033F0  EFFC  F019         	goto	u8081
 23898   0033F4  EFFE  F019         	goto	u8080
 23899   0033F8                     u8081:
 23900   0033F8  EFA3  F019         	goto	l10639
 23901   0033FC                     u8080:
 23902   0033FC                     
 23903                           ; BSR set to: 5
 23904                           ;../../VLCBlib_PIC/nv.c: 280:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 23905   0033FC  0E02               	movlw	2
 23906   0033FE  EC6F  F036         	call	_findServiceIndex
 23907   003402  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 23908   003404  0E96               	movlw	low _nvTRnvrdCallback
 23909   003406  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 23910   003408  0E78               	movlw	high _nvTRnvrdCallback
 23911   00340A  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 23912   00340C  0E06               	movlw	6
 23913   00340E  ECF1  F03B         	call	_startTimedResponse
 23914   003412  EFA3  F019         	goto	l10639
 23915   003416                     l10669:
 23916                           
 23917                           ; BSR set to: 5
 23918                           ;../../VLCBlib_PIC/nv.c: 284:             if (m->len < 5) {
 23919   003416  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 23920   00341A  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 23921   00341E  0E05               	movlw	5
 23922   003420  60DF               	cpfslt	indf2,c
 23923   003422  EF15  F01A         	goto	u8091
 23924   003426  EF17  F01A         	goto	u8090
 23925   00342A                     u8091:
 23926   00342A  EF26  F01A         	goto	l10679
 23927   00342E                     u8090:
 23928   00342E                     
 23929                           ; BSR set to: 5
 23930                           ;../../VLCBlib_PIC/nv.c: 287:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 23931   00342E  C590  F526         	movff	_nn+1,sendMessage5@data1
 23932   003432  C58F  F527         	movff	_nn,sendMessage5@data2
 23933   003436  0E96               	movlw	150
 23934   003438  6E28               	movwf	sendMessage5@data3^(0+1280),c
 23935   00343A  0E01               	movlw	1
 23936   00343C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 23937   00343E  0E01               	movlw	1
 23938   003440  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 23939   003442  0EAF               	movlw	175
 23940   003444  EC11  F040         	call	_sendMessage5
 23941   003448  EFA0  F019         	goto	l10637
 23942   00344C                     l10679:
 23943                           
 23944                           ; BSR set to: 5
 23945                           ;../../VLCBlib_PIC/nv.c: 294:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 23946   00344C  EE20 F005          	lfsr	2,5
 23947   003450  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23948   003452  26D9               	addwf	fsr2l,f,c
 23949   003454  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23950   003456  22DA               	addwfc	fsr2h,f,c
 23951   003458  50DF               	movf	indf2,w,c
 23952   00345A  6E15               	movwf	setNV@value^(0+1280),c
 23953   00345C  EE20 F004          	lfsr	2,4
 23954   003460  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 23955   003462  26D9               	addwf	fsr2l,f,c
 23956   003464  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 23957   003466  22DA               	addwfc	fsr2h,f,c
 23958   003468  50DF               	movf	indf2,w,c
 23959   00346A  EC28  F036         	call	_setNV
 23960   00346E  6E56               	movwf	??_nvProcessMessage^(0+1280),c
 23961   003470  5056               	movf	??_nvProcessMessage^(0+1280),w,c
 23962   003472  6E58               	movwf	nvProcessMessage@valueOrError^(0+1280),c
 23963   003474  6A59               	clrf	(nvProcessMessage@valueOrError+1)^(0+1280),c
 23964   003476                     
 23965                           ;../../VLCBlib_PIC/nv.c: 295:             if (valueOrError >0) {
 23966   003476  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 23967   003478  EF46  F01A         	goto	u8101
 23968   00347C  5059               	movf	(nvProcessMessage@valueOrError+1)^(0+1280),w,c
 23969   00347E  E108               	bnz	u8100
 23970   003480  0458               	decf	nvProcessMessage@valueOrError^(0+1280),w,c
 23971   003482  A0D8               	btfss	status,0,c
 23972   003484  EF46  F01A         	goto	u8101
 23973   003488  EF48  F01A         	goto	u8100
 23974   00348C                     u8101:
 23975   00348C  EF53  F01A         	goto	l10691
 23976   003490                     u8100:
 23977   003490                     
 23978                           ;../../VLCBlib_PIC/nv.c: 296:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 23979   003490  C590  F526         	movff	_nn+1,sendMessage3@data1
 23980   003494  C58F  F527         	movff	_nn,sendMessage3@data2
 23981   003498  C558  F528         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 23982   00349C  0E6F               	movlw	111
 23983   00349E  ECD2  F03F         	call	_sendMessage3
 23984   0034A2  EFA0  F019         	goto	l10637
 23985   0034A6                     l10691:
 23986                           
 23987                           ;../../VLCBlib_PIC/nv.c: 303:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 23988   0034A6  C590  F526         	movff	_nn+1,sendMessage2@data1
 23989   0034AA  C58F  F527         	movff	_nn,sendMessage2@data2
 23990   0034AE  0E59               	movlw	89
 23991   0034B0  ECE7  F03F         	call	_sendMessage2
 23992                           
 23993                           ;../../VLCBlib_PIC/nv.c: 305:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 23994   0034B4  C590  F526         	movff	_nn+1,sendMessage5@data1
 23995   0034B8  C58F  F527         	movff	_nn,sendMessage5@data2
 23996   0034BC  0E96               	movlw	150
 23997   0034BE  6E28               	movwf	sendMessage5@data3^(0+1280),c
 23998   0034C0  0E01               	movlw	1
 23999   0034C2  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24000   0034C4  0E00               	movlw	0
 24001   0034C6  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24002   0034C8  0EAF               	movlw	175
 24003   0034CA  EC11  F040         	call	_sendMessage5
 24004   0034CE  EFA3  F019         	goto	l10639
 24005   0034D2                     l10697:
 24006                           
 24007                           ; BSR set to: 5
 24008                           ;../../VLCBlib_PIC/nv.c: 310:             if (m->len < 5) {
 24009   0034D2  C554  F4D9         	movff	nvProcessMessage@m,fsr2l
 24010   0034D6  C555  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 24011   0034DA  0E05               	movlw	5
 24012   0034DC  60DF               	cpfslt	indf2,c
 24013   0034DE  EF73  F01A         	goto	u8111
 24014   0034E2  EF75  F01A         	goto	u8110
 24015   0034E6                     u8111:
 24016   0034E6  EF84  F01A         	goto	l10707
 24017   0034EA                     u8110:
 24018   0034EA                     
 24019                           ; BSR set to: 5
 24020                           ;../../VLCBlib_PIC/nv.c: 312:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24021   0034EA  C590  F526         	movff	_nn+1,sendMessage5@data1
 24022   0034EE  C58F  F527         	movff	_nn,sendMessage5@data2
 24023   0034F2  0E8E               	movlw	142
 24024   0034F4  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24025   0034F6  0E01               	movlw	1
 24026   0034F8  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24027   0034FA  0E01               	movlw	1
 24028   0034FC  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24029   0034FE  0EAF               	movlw	175
 24030   003500  EC11  F040         	call	_sendMessage5
 24031   003504  EFA0  F019         	goto	l10637
 24032   003508                     l10707:
 24033                           
 24034                           ; BSR set to: 5
 24035                           ;../../VLCBlib_PIC/nv.c: 318:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 24036   003508  EE20 F005          	lfsr	2,5
 24037   00350C  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24038   00350E  26D9               	addwf	fsr2l,f,c
 24039   003510  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24040   003512  22DA               	addwfc	fsr2h,f,c
 24041   003514  50DF               	movf	indf2,w,c
 24042   003516  6E15               	movwf	setNV@value^(0+1280),c
 24043   003518  EE20 F004          	lfsr	2,4
 24044   00351C  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24045   00351E  26D9               	addwf	fsr2l,f,c
 24046   003520  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24047   003522  22DA               	addwfc	fsr2h,f,c
 24048   003524  50DF               	movf	indf2,w,c
 24049   003526  EC28  F036         	call	_setNV
 24050   00352A  6E56               	movwf	??_nvProcessMessage^(0+1280),c
 24051   00352C  5056               	movf	??_nvProcessMessage^(0+1280),w,c
 24052   00352E  6E58               	movwf	nvProcessMessage@valueOrError^(0+1280),c
 24053   003530  6A59               	clrf	(nvProcessMessage@valueOrError+1)^(0+1280),c
 24054   003532                     
 24055                           ;../../VLCBlib_PIC/nv.c: 319:             if (valueOrError >0) {
 24056   003532  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 24057   003534  EFA4  F01A         	goto	u8121
 24058   003538  5059               	movf	(nvProcessMessage@valueOrError+1)^(0+1280),w,c
 24059   00353A  E108               	bnz	u8120
 24060   00353C  0458               	decf	nvProcessMessage@valueOrError^(0+1280),w,c
 24061   00353E  A0D8               	btfss	status,0,c
 24062   003540  EFA4  F01A         	goto	u8121
 24063   003544  EFA6  F01A         	goto	u8120
 24064   003548                     u8121:
 24065   003548  EFBE  F01A         	goto	l10719
 24066   00354C                     u8120:
 24067   00354C                     
 24068                           ;../../VLCBlib_PIC/nv.c: 320:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 24069   00354C  C590  F526         	movff	_nn+1,sendMessage3@data1
 24070   003550  C58F  F527         	movff	_nn,sendMessage3@data2
 24071   003554  C558  F528         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 24072   003558  0E6F               	movlw	111
 24073   00355A  ECD2  F03F         	call	_sendMessage3
 24074                           
 24075                           ;../../VLCBlib_PIC/nv.c: 321:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 24076   00355E  C590  F526         	movff	_nn+1,sendMessage5@data1
 24077   003562  C58F  F527         	movff	_nn,sendMessage5@data2
 24078   003566  0E8E               	movlw	142
 24079   003568  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24080   00356A  0E01               	movlw	1
 24081   00356C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24082   00356E  C558  F52A         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 24083   003572  0EAF               	movlw	175
 24084   003574  EC11  F040         	call	_sendMessage5
 24085   003578  EFA0  F019         	goto	l10637
 24086   00357C                     l10719:
 24087                           
 24088                           ;../../VLCBlib_PIC/nv.c: 327:             valueOrError = getNV(m->bytes[2]);
 24089   00357C  EE20 F004          	lfsr	2,4
 24090   003580  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24091   003582  26D9               	addwf	fsr2l,f,c
 24092   003584  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24093   003586  22DA               	addwfc	fsr2h,f,c
 24094   003588  50DF               	movf	indf2,w,c
 24095   00358A  ECA0  F03C         	call	_getNV
 24096   00358E  C501  F558         	movff	?_getNV,nvProcessMessage@valueOrError
 24097   003592  C502  F559         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 24098   003596                     
 24099                           ;../../VLCBlib_PIC/nv.c: 328:             if (valueOrError < 0) {
 24100   003596  BE59               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 24101   003598  EFD2  F01A         	goto	u8130
 24102   00359C  EFD0  F01A         	goto	u8131
 24103   0035A0                     u8131:
 24104   0035A0  EFEC  F01A         	goto	l10731
 24105   0035A4                     u8130:
 24106   0035A4                     
 24107                           ;../../VLCBlib_PIC/nv.c: 329:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 24108   0035A4  C590  F526         	movff	_nn+1,sendMessage3@data1
 24109   0035A8  C58F  F527         	movff	_nn,sendMessage3@data2
 24110   0035AC  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 24111   0035AE  0800               	sublw	0
 24112   0035B0  6E28               	movwf	sendMessage3@data3^(0+1280),c
 24113   0035B2  0E6F               	movlw	111
 24114   0035B4  ECD2  F03F         	call	_sendMessage3
 24115                           
 24116                           ;../../VLCBlib_PIC/nv.c: 330:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 24117   0035B8  C590  F526         	movff	_nn+1,sendMessage5@data1
 24118   0035BC  C58F  F527         	movff	_nn,sendMessage5@data2
 24119   0035C0  0E8E               	movlw	142
 24120   0035C2  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24121   0035C4  0E01               	movlw	1
 24122   0035C6  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24123   0035C8  5058               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 24124   0035CA  0800               	sublw	0
 24125   0035CC  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24126   0035CE  0EAF               	movlw	175
 24127   0035D0  EC11  F040         	call	_sendMessage5
 24128   0035D4  EFA0  F019         	goto	l10637
 24129   0035D8                     l10731:
 24130                           
 24131                           ;../../VLCBlib_PIC/nv.c: 336:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 24132   0035D8  C590  F526         	movff	_nn+1,sendMessage4@data1
 24133   0035DC  C58F  F527         	movff	_nn,sendMessage4@data2
 24134   0035E0  EE20 F004          	lfsr	2,4
 24135   0035E4  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24136   0035E6  26D9               	addwf	fsr2l,f,c
 24137   0035E8  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24138   0035EA  22DA               	addwfc	fsr2h,f,c
 24139   0035EC  50DF               	movf	indf2,w,c
 24140   0035EE  6E28               	movwf	sendMessage4@data3^(0+1280),c
 24141   0035F0  C558  F529         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 24142   0035F4  0E97               	movlw	151
 24143   0035F6  ECBD  F03F         	call	_sendMessage4
 24144   0035FA                     
 24145                           ;../../VLCBlib_PIC/nv.c: 338:             nvDiagnostics[0x01].asUint++;
 24146   0035FA  0105               	movlb	5	; () banked
 24147   0035FC  4BBD               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 24148   0035FE  2BBE               	incf	(_nvDiagnostics+3)& (0+255),f,b
 24149   003600  EFA3  F019         	goto	l10639
 24150   003604                     l10745:
 24151                           
 24152                           ; BSR set to: 5
 24153   003604  EE20 F001          	lfsr	2,1
 24154   003608  5054               	movf	nvProcessMessage@m^(0+1280),w,c
 24155   00360A  26D9               	addwf	fsr2l,f,c
 24156   00360C  5055               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 24157   00360E  22DA               	addwfc	fsr2h,f,c
 24158   003610  50DF               	movf	indf2,w,c
 24159   003612  6E56               	movwf	??_nvProcessMessage^(0+1280),c
 24160   003614  6A57               	clrf	(??_nvProcessMessage+1)^(0+1280),c
 24161                           
 24162                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24163                           ; Switch size 1, requested type "simple"
 24164                           ; Number of cases is 1, Range of values is 0 to 0
 24165                           ; switch strategies available:
 24166                           ; Name         Instructions Cycles
 24167                           ; simple_byte            4     3 (average)
 24168                           ;	Chosen strategy is simple_byte
 24169   003616  5057               	movf	(??_nvProcessMessage+1)^(0+1280),w,c
 24170   003618  0A00               	xorlw	0	; case 0
 24171   00361A  B4D8               	btfsc	status,2,c
 24172   00361C  EF12  F01B         	goto	l11589
 24173   003620  EF58  F019         	goto	l10617
 24174   003624                     l11589:
 24175                           
 24176                           ; BSR set to: 5
 24177                           ; Switch size 1, requested type "simple"
 24178                           ; Number of cases is 3, Range of values is 113 to 150
 24179                           ; switch strategies available:
 24180                           ; Name         Instructions Cycles
 24181                           ; simple_byte           10     6 (average)
 24182                           ;	Chosen strategy is simple_byte
 24183   003624  5056               	movf	??_nvProcessMessage^(0+1280),w,c
 24184   003626  0A71               	xorlw	113	; case 113
 24185   003628  B4D8               	btfsc	status,2,c
 24186   00362A  EF7E  F019         	goto	l10633
 24187   00362E  0AFF               	xorlw	255	; case 142
 24188   003630  B4D8               	btfsc	status,2,c
 24189   003632  EF69  F01A         	goto	l10697
 24190   003636  0A18               	xorlw	24	; case 150
 24191   003638  B4D8               	btfsc	status,2,c
 24192   00363A  EF0B  F01A         	goto	l10669
 24193   00363E  EF58  F019         	goto	l10617
 24194   003642                     l1567:
 24195   003642  0012               	return		;funcret
 24196   003644                     __end_of_nvProcessMessage:
 24197                           	callstack 0
 24198                           
 24199 ;; *************** function _mnsProcessMessage *****************
 24200 ;; Defined at:
 24201 ;;		line 358 in file "../../VLCBlib_PIC/mns.c"
 24202 ;; Parameters:    Size  Location     Type
 24203 ;;  m               2   83[COMRAM] PTR struct Message
 24204 ;;		 -> poll@m(9), 
 24205 ;; Auto vars:     Size  Location     Type
 24206 ;;  d               2   87[COMRAM] PTR struct DiagnosticVal
 24207 ;;		 -> nvDiagnostics(6), mnsDiagnostics(14), teachDiagnostics(4), consumerDiagnostics(6), 
 24208 ;;		 -> canDiagnostics(38), NULL(0), 
 24209 ;;  newMode         1   89[COMRAM] unsigned char 
 24210 ;;  i               1   85[COMRAM] unsigned char 
 24211 ;;  flags           1    0        unsigned char 
 24212 ;; Return value:  Size  Location     Type
 24213 ;;                  1    wreg      enum E23340
 24214 ;; Registers used:
 24215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24216 ;; Tracked objects:
 24217 ;;		On entry : 0/0
 24218 ;;		On exit  : 0/0
 24219 ;;		Unchanged: 0/0
 24220 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 24221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24222 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24223 ;;      Temps:          0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24224 ;;      Totals:         7      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24225 ;;Total ram usage:       37 bytes
 24226 ;; Hardware stack levels used: 1
 24227 ;; Hardware stack levels required when called: 6
 24228 ;; This function calls:
 24229 ;;		NULL
 24230 ;;		_bootEsdData
 24231 ;;		_canEsdData
 24232 ;;		_canGetDiagnostic
 24233 ;;		_canWaitForTxQueueToDrain
 24234 ;;		_consumerEsdData
 24235 ;;		_consumerGetDiagnostic
 24236 ;;		_findServiceIndex
 24237 ;;		_getParameter
 24238 ;;		_getParameterFlags
 24239 ;;		_mnsGetDiagnostic
 24240 ;;		_nvGetDiagnostic
 24241 ;;		_nvGetESDdata
 24242 ;;		_rebuildHashtable
 24243 ;;		_sendMessage2
 24244 ;;		_sendMessage3
 24245 ;;		_sendMessage4
 24246 ;;		_sendMessage5
 24247 ;;		_sendMessage6
 24248 ;;		_sendMessage7
 24249 ;;		_setLEDsByMode
 24250 ;;		_startTimedResponse
 24251 ;;		_teachGetDiagnostic
 24252 ;;		_teachGetESDdata
 24253 ;;		_writeNVM
 24254 ;; This function is called by:
 24255 ;;		_poll
 24256 ;; This function uses a non-reentrant model
 24257 ;;
 24258                           
 24259                           	psect	text18
 24260   000A06                     __ptext18:
 24261                           	callstack 0
 24262   000A06                     _mnsProcessMessage:
 24263                           	callstack 119
 24264   000A06                     
 24265                           ;../../VLCBlib_PIC/mns.c: 359:     uint8_t i;;../../VLCBlib_PIC/mns.c: 360:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 362:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 367: 
      +                              if (mode_state == MODE_SETUP) {
 24266   000A06  0105               	movlb	5	; () banked
 24267   000A08  51A1               	movf	_mode_state& (0+255),w,b
 24268   000A0A  A4D8               	btfss	status,2,c
 24269   000A0C  EF0A  F005         	goto	u7451
 24270   000A10  EF0C  F005         	goto	u7450
 24271   000A14                     u7451:
 24272   000A14  EF62  F006         	goto	l10223
 24273   000A18                     u7450:
 24274   000A18  EFCA  F005         	goto	l10167
 24275   000A1C                     l10123:
 24276                           
 24277                           ; BSR set to: 5
 24278                           ;../../VLCBlib_PIC/mns.c: 370:                 if (m->len < 3) {
 24279   000A1C  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24280   000A20  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24281   000A24  0E03               	movlw	3
 24282   000A26  60DF               	cpfslt	indf2,c
 24283   000A28  EF18  F005         	goto	u7461
 24284   000A2C  EF1A  F005         	goto	u7460
 24285   000A30                     u7461:
 24286   000A30  EF29  F005         	goto	l10127
 24287   000A34                     u7460:
 24288   000A34                     
 24289                           ; BSR set to: 5
 24290                           ;../../VLCBlib_PIC/mns.c: 372:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_SNN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24291   000A34  C590  F526         	movff	_nn+1,sendMessage5@data1
 24292   000A38  C58F  F527         	movff	_nn,sendMessage5@data2
 24293   000A3C  0E42               	movlw	66
 24294   000A3E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24295   000A40  0E01               	movlw	1
 24296   000A42  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24297   000A44  0E01               	movlw	1
 24298   000A46  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24299   000A48  0EAF               	movlw	175
 24300   000A4A  EC11  F040         	call	_sendMessage5
 24301                           
 24302                           ;../../VLCBlib_PIC/mns.c: 374:                 } else {
 24303   000A4E  EF60  F005         	goto	l10143
 24304   000A52                     l10127:
 24305                           
 24306                           ; BSR set to: 5
 24307                           ;../../VLCBlib_PIC/mns.c: 375:                     nn.bytes.hi = m->bytes[0];
 24308   000A52  EE20 F002          	lfsr	2,2
 24309   000A56  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24310   000A58  26D9               	addwf	fsr2l,f,c
 24311   000A5A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24312   000A5C  22DA               	addwfc	fsr2h,f,c
 24313   000A5E  50DF               	movf	indf2,w,c
 24314   000A60  6F90               	movwf	(_nn+1)& (0+255),b
 24315                           
 24316                           ;../../VLCBlib_PIC/mns.c: 376:                     nn.bytes.lo = m->bytes[1];
 24317   000A62  EE20 F003          	lfsr	2,3
 24318   000A66  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24319   000A68  26D9               	addwf	fsr2l,f,c
 24320   000A6A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24321   000A6C  22DA               	addwfc	fsr2h,f,c
 24322   000A6E  50DF               	movf	indf2,w,c
 24323   000A70  6F8F               	movwf	_nn& (0+255),b
 24324   000A72                     
 24325                           ; BSR set to: 5
 24326                           ;../../VLCBlib_PIC/mns.c: 377:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.hi);
 24327   000A72  0EFD               	movlw	253
 24328   000A74  6E0E               	movwf	writeNVM@index^(0+1280),c
 24329   000A76  0E03               	movlw	3
 24330   000A78  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 24331   000A7A  0E00               	movlw	0
 24332   000A7C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 24333   000A7E  C590  F511         	movff	_nn+1,writeNVM@value
 24334   000A82  0E00               	movlw	0
 24335   000A84  EC91  F03B         	call	_writeNVM
 24336   000A88                     
 24337                           ;../../VLCBlib_PIC/mns.c: 378:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.lo);
 24338   000A88  0EFC               	movlw	252
 24339   000A8A  6E0E               	movwf	writeNVM@index^(0+1280),c
 24340   000A8C  0E03               	movlw	3
 24341   000A8E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 24342   000A90  0E00               	movlw	0
 24343   000A92  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 24344   000A94  C58F  F511         	movff	_nn,writeNVM@value
 24345   000A98  0E00               	movlw	0
 24346   000A9A  EC91  F03B         	call	_writeNVM
 24347   000A9E                     
 24348                           ;../../VLCBlib_PIC/mns.c: 380:                     mode_state = MODE_NORMAL;
 24349   000A9E  0E01               	movlw	1
 24350   000AA0  0105               	movlb	5	; () banked
 24351   000AA2  6FA1               	movwf	_mode_state& (0+255),b
 24352   000AA4                     
 24353                           ; BSR set to: 5
 24354                           ;../../VLCBlib_PIC/mns.c: 383:                     rebuildHashtable();
 24355   000AA4  EC16  F02B         	call	_rebuildHashtable	;wreg free
 24356   000AA8                     
 24357                           ;../../VLCBlib_PIC/mns.c: 386:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 24358   000AA8  C590  F526         	movff	_nn+1,sendMessage2@data1
 24359   000AAC  C58F  F527         	movff	_nn,sendMessage2@data2
 24360   000AB0  0E52               	movlw	82
 24361   000AB2  ECE7  F03F         	call	_sendMessage2
 24362   000AB6                     
 24363                           ;../../VLCBlib_PIC/mns.c: 388:                     mnsDiagnostics[0x05].asUint++;
 24364   000AB6  0105               	movlb	5	; () banked
 24365   000AB8  4BB7               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 24366   000ABA  2BB8               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 24367   000ABC                     l10141:
 24368                           
 24369                           ; BSR set to: 5
 24370                           ;../../VLCBlib_PIC/mns.c: 391:                     setLEDsByMode();
 24371   000ABC  EC88  F03D         	call	_setLEDsByMode	;wreg free
 24372   000AC0                     l10143:
 24373                           
 24374                           ;../../VLCBlib_PIC/mns.c: 393:                 return PROCESSED;
 24375   000AC0  0E01               	movlw	1
 24376   000AC2  EF7B  F00B         	goto	l1313
 24377   000AC6                     l10147:
 24378                           
 24379                           ; BSR set to: 5
 24380                           ;../../VLCBlib_PIC/mns.c: 395:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'a',
 24381   000AC6  0EA5               	movlw	165
 24382   000AC8  6E26               	movwf	sendMessage7@data1^(0+1280),c
 24383   000ACA  0E61               	movlw	97
 24384   000ACC  6E27               	movwf	sendMessage7@data2^(0+1280),c
 24385   000ACE  0E57               	movlw	87
 24386   000AD0  6E28               	movwf	sendMessage7@data3^(0+1280),c
 24387   000AD2  0EFF               	movlw	255
 24388   000AD4  6E29               	movwf	sendMessage7@data4^(0+1280),c
 24389   000AD6  0EFC               	movlw	252
 24390   000AD8  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 24391   000ADA  0E31               	movlw	49
 24392   000ADC  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 24393   000ADE  0E01               	movlw	1
 24394   000AE0  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 24395   000AE2  0EEF               	movlw	239
 24396   000AE4  ECFC  F03F         	call	_sendMessage7
 24397   000AE8  EF60  F005         	goto	l10143
 24398   000AEC                     l10153:
 24399                           
 24400                           ; BSR set to: 5
 24401                           ;../../VLCBlib_PIC/mns.c: 400:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 24402   000AEC  0E48               	movlw	72
 24403   000AEE  6EF6               	movwf	tblptrl,c
 24404   000AF0                     	if	1	;There is more than 1 active tblptr byte
 24405   000AF0  0E08               	movlw	8
 24406   000AF2  6EF7               	movwf	tblptrh,c
 24407   000AF4                     	endif
 24408   000AF4                     	if	1	;There are 3 active tblptr bytes
 24409   000AF4  0E00               	movlw	0
 24410   000AF6  6EF8               	movwf	tblptru,c
 24411   000AF8                     	endif
 24412   000AF8  0008               	tblrd		*
 24413   000AFA  C4F5 F526          	movff	tablat,sendMessage7@data1
 24414   000AFE  0E49               	movlw	73
 24415   000B00  6EF6               	movwf	tblptrl,c
 24416   000B02  0E08               	movlw	8
 24417   000B04  6EF7               	movwf	tblptrh,c
 24418   000B06  0E00               	movlw	0
 24419   000B08  6EF8               	movwf	tblptru,c
 24420   000B0A  0008               	tblrd		*
 24421   000B0C  C4F5 F527          	movff	tablat,sendMessage7@data2
 24422   000B10  0E4A               	movlw	74
 24423   000B12  6EF6               	movwf	tblptrl,c
 24424   000B14  0E08               	movlw	8
 24425   000B16  6EF7               	movwf	tblptrh,c
 24426   000B18  0E00               	movlw	0
 24427   000B1A  6EF8               	movwf	tblptru,c
 24428   000B1C  0008               	tblrd		*
 24429   000B1E  C4F5 F528          	movff	tablat,sendMessage7@data3
 24430   000B22  0E4B               	movlw	75
 24431   000B24  6EF6               	movwf	tblptrl,c
 24432   000B26  0E08               	movlw	8
 24433   000B28  6EF7               	movwf	tblptrh,c
 24434   000B2A  0E00               	movlw	0
 24435   000B2C  6EF8               	movwf	tblptru,c
 24436   000B2E  0008               	tblrd		*
 24437   000B30  C4F5 F529          	movff	tablat,sendMessage7@data4
 24438   000B34  0E4C               	movlw	76
 24439   000B36  6EF6               	movwf	tblptrl,c
 24440   000B38  0E08               	movlw	8
 24441   000B3A  6EF7               	movwf	tblptrh,c
 24442   000B3C  0E00               	movlw	0
 24443   000B3E  6EF8               	movwf	tblptru,c
 24444   000B40  0008               	tblrd		*
 24445   000B42  C4F5 F52A          	movff	tablat,sendMessage7@data5
 24446   000B46  0E4D               	movlw	77
 24447   000B48  6EF6               	movwf	tblptrl,c
 24448   000B4A  0E08               	movlw	8
 24449   000B4C  6EF7               	movwf	tblptrh,c
 24450   000B4E  0E00               	movlw	0
 24451   000B50  6EF8               	movwf	tblptru,c
 24452   000B52  0008               	tblrd		*
 24453   000B54  C4F5 F52B          	movff	tablat,sendMessage7@data6
 24454   000B58  0E4E               	movlw	78
 24455   000B5A  6EF6               	movwf	tblptrl,c
 24456   000B5C  0E08               	movlw	8
 24457   000B5E  6EF7               	movwf	tblptrh,c
 24458   000B60  0E00               	movlw	0
 24459   000B62  6EF8               	movwf	tblptru,c
 24460   000B64  0008               	tblrd		*
 24461   000B66  C4F5 F52C          	movff	tablat,sendMessage7@data7
 24462   000B6A  0EE2               	movlw	226
 24463   000B6C  ECFC  F03F         	call	_sendMessage7
 24464   000B70  EF60  F005         	goto	l10143
 24465   000B74                     l10159:
 24466                           
 24467                           ; BSR set to: 5
 24468                           ;../../VLCBlib_PIC/mns.c: 404:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_CANARGB, getParameterFlags());
 24469   000B74  0E00               	movlw	0
 24470   000B76  6E26               	movwf	sendMessage5@data1^(0+1280),c
 24471   000B78  0E00               	movlw	0
 24472   000B7A  6E27               	movwf	sendMessage5@data2^(0+1280),c
 24473   000B7C  0EA5               	movlw	165
 24474   000B7E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24475   000B80  0E57               	movlw	87
 24476   000B82  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24477   000B84  ECFB  F036         	call	_getParameterFlags	;wreg free
 24478   000B88  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24479   000B8A  0EB6               	movlw	182
 24480   000B8C  EC11  F040         	call	_sendMessage5
 24481   000B90  EF60  F005         	goto	l10143
 24482   000B94                     l10167:
 24483                           
 24484                           ; BSR set to: 5
 24485   000B94  EE20 F001          	lfsr	2,1
 24486   000B98  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24487   000B9A  26D9               	addwf	fsr2l,f,c
 24488   000B9C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24489   000B9E  22DA               	addwfc	fsr2h,f,c
 24490   000BA0  50DF               	movf	indf2,w,c
 24491   000BA2  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 24492   000BA4  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 24493                           
 24494                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24495                           ; Switch size 1, requested type "simple"
 24496                           ; Number of cases is 1, Range of values is 0 to 0
 24497                           ; switch strategies available:
 24498                           ; Name         Instructions Cycles
 24499                           ; simple_byte            4     3 (average)
 24500                           ;	Chosen strategy is simple_byte
 24501   000BA6  51D1               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 24502   000BA8  0A00               	xorlw	0	; case 0
 24503   000BAA  B4D8               	btfsc	status,2,c
 24504   000BAC  EFDA  F005         	goto	l11591
 24505   000BB0  EFED  F005         	goto	l10169
 24506   000BB4                     l11591:
 24507                           
 24508                           ; BSR set to: 5
 24509                           ; Switch size 1, requested type "simple"
 24510                           ; Number of cases is 4, Range of values is 13 to 66
 24511                           ; switch strategies available:
 24512                           ; Name         Instructions Cycles
 24513                           ; simple_byte           13     7 (average)
 24514                           ;	Chosen strategy is simple_byte
 24515   000BB4  51D0               	movf	??_mnsProcessMessage& (0+255),w,b
 24516   000BB6  0A0D               	xorlw	13	; case 13
 24517   000BB8  B4D8               	btfsc	status,2,c
 24518   000BBA  EFBA  F005         	goto	l10159
 24519   000BBE  0A1D               	xorlw	29	; case 16
 24520   000BC0  B4D8               	btfsc	status,2,c
 24521   000BC2  EF63  F005         	goto	l10147
 24522   000BC6  0A01               	xorlw	1	; case 17
 24523   000BC8  B4D8               	btfsc	status,2,c
 24524   000BCA  EF76  F005         	goto	l10153
 24525   000BCE  0A53               	xorlw	83	; case 66
 24526   000BD0  B4D8               	btfsc	status,2,c
 24527   000BD2  EF0E  F005         	goto	l10123
 24528   000BD6  EFED  F005         	goto	l10169
 24529   000BDA                     l10169:
 24530                           
 24531                           ; BSR set to: 5
 24532                           ;../../VLCBlib_PIC/mns.c: 409:         return NOT_PROCESSED;
 24533   000BDA  0E00               	movlw	0
 24534   000BDC  EF7B  F00B         	goto	l1313
 24535   000BE0                     l10173:
 24536                           
 24537                           ; BSR set to: 5
 24538                           ;../../VLCBlib_PIC/mns.c: 414:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_CANARGB, getParameterFlags());
 24539   000BE0  C590  F526         	movff	_nn+1,sendMessage5@data1
 24540   000BE4  C58F  F527         	movff	_nn,sendMessage5@data2
 24541   000BE8  0EA5               	movlw	165
 24542   000BEA  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24543   000BEC  0E57               	movlw	87
 24544   000BEE  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24545   000BF0  ECFB  F036         	call	_getParameterFlags	;wreg free
 24546   000BF4  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24547   000BF6  0EB6               	movlw	182
 24548   000BF8  EC11  F040         	call	_sendMessage5
 24549   000BFC  EF60  F005         	goto	l10143
 24550   000C00                     l10179:
 24551                           
 24552                           ; BSR set to: 5
 24553                           ;../../VLCBlib_PIC/mns.c: 418:             if (m->len < 4) {
 24554   000C00  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24555   000C04  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24556   000C08  0E04               	movlw	4
 24557   000C0A  60DF               	cpfslt	indf2,c
 24558   000C0C  EF0A  F006         	goto	u7471
 24559   000C10  EF0C  F006         	goto	u7470
 24560   000C14                     u7471:
 24561   000C14  EF1B  F006         	goto	l10187
 24562   000C18                     u7470:
 24563   000C18                     
 24564                           ; BSR set to: 5
 24565                           ;../../VLCBlib_PIC/mns.c: 419:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24566   000C18  C590  F526         	movff	_nn+1,sendMessage5@data1
 24567   000C1C  C58F  F527         	movff	_nn,sendMessage5@data2
 24568   000C20  0E76               	movlw	118
 24569   000C22  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24570   000C24  0E01               	movlw	1
 24571   000C26  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24572   000C28  0E01               	movlw	1
 24573   000C2A  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24574   000C2C  0EAF               	movlw	175
 24575   000C2E  EC11  F040         	call	_sendMessage5
 24576   000C32  EF60  F005         	goto	l10143
 24577   000C36                     l10187:
 24578                           
 24579                           ; BSR set to: 5
 24580                           ;../../VLCBlib_PIC/mns.c: 422:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 24581   000C36  EE20 F002          	lfsr	2,2
 24582   000C3A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24583   000C3C  26D9               	addwf	fsr2l,f,c
 24584   000C3E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24585   000C40  22DA               	addwfc	fsr2h,f,c
 24586   000C42  50DF               	movf	indf2,w,c
 24587   000C44  A4D8               	btfss	status,2,c
 24588   000C46  EF27  F006         	goto	u7481
 24589   000C4A  EF29  F006         	goto	u7480
 24590   000C4E                     u7481:
 24591   000C4E  EF7D  F006         	goto	l10225
 24592   000C52                     u7480:
 24593   000C52                     
 24594                           ; BSR set to: 5
 24595   000C52  EE20 F003          	lfsr	2,3
 24596   000C56  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24597   000C58  26D9               	addwf	fsr2l,f,c
 24598   000C5A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24599   000C5C  22DA               	addwfc	fsr2h,f,c
 24600   000C5E  50DF               	movf	indf2,w,c
 24601   000C60  A4D8               	btfss	status,2,c
 24602   000C62  EF35  F006         	goto	u7491
 24603   000C66  EF37  F006         	goto	u7490
 24604   000C6A                     u7491:
 24605   000C6A  EF7D  F006         	goto	l10225
 24606   000C6E                     u7490:
 24607   000C6E                     
 24608                           ; BSR set to: 5
 24609                           ;../../VLCBlib_PIC/mns.c: 423:                 newMode = m->bytes[2];
 24610   000C6E  EE20 F004          	lfsr	2,4
 24611   000C72  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24612   000C74  26D9               	addwf	fsr2l,f,c
 24613   000C76  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24614   000C78  22DA               	addwfc	fsr2h,f,c
 24615   000C7A  50DF               	movf	indf2,w,c
 24616   000C7C  6E5A               	movwf	mnsProcessMessage@newMode^(0+1280),c
 24617                           
 24618                           ;../../VLCBlib_PIC/mns.c: 425:                 switch (newMode) {
 24619   000C7E  EF4D  F006         	goto	l10219
 24620   000C82                     l10193:
 24621                           
 24622                           ; BSR set to: 5
 24623                           ;../../VLCBlib_PIC/mns.c: 427:                         mode_flags |= 4;
 24624   000C82  85A4               	bsf	_mode_flags& (0+255),2,b
 24625   000C84  EF60  F005         	goto	l10143
 24626   000C88                     l10199:
 24627                           
 24628                           ; BSR set to: 5
 24629                           ;../../VLCBlib_PIC/mns.c: 430:                         mode_flags &= ~4;
 24630   000C88  95A4               	bcf	_mode_flags& (0+255),2,b
 24631   000C8A  EF60  F005         	goto	l10143
 24632   000C8E                     l10205:
 24633                           
 24634                           ; BSR set to: 5
 24635                           ;../../VLCBlib_PIC/mns.c: 433:                         mode_flags |= 8;
 24636   000C8E  87A4               	bsf	_mode_flags& (0+255),3,b
 24637   000C90  EF60  F005         	goto	l10143
 24638   000C94                     l10211:
 24639                           
 24640                           ; BSR set to: 5
 24641                           ;../../VLCBlib_PIC/mns.c: 436:                         mode_flags &= ~8;
 24642   000C94  97A4               	bcf	_mode_flags& (0+255),3,b
 24643   000C96  EF60  F005         	goto	l10143
 24644   000C9A                     l10219:
 24645                           
 24646                           ; BSR set to: 5
 24647   000C9A  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 24648                           
 24649                           ; Switch size 1, requested type "simple"
 24650                           ; Number of cases is 4, Range of values is 12 to 17
 24651                           ; switch strategies available:
 24652                           ; Name         Instructions Cycles
 24653                           ; simple_byte           13     7 (average)
 24654                           ;	Chosen strategy is simple_byte
 24655   000C9C  0A0C               	xorlw	12	; case 12
 24656   000C9E  B4D8               	btfsc	status,2,c
 24657   000CA0  EF41  F006         	goto	l10193
 24658   000CA4  0A01               	xorlw	1	; case 13
 24659   000CA6  B4D8               	btfsc	status,2,c
 24660   000CA8  EF44  F006         	goto	l10199
 24661   000CAC  0A1D               	xorlw	29	; case 16
 24662   000CAE  B4D8               	btfsc	status,2,c
 24663   000CB0  EF47  F006         	goto	l10205
 24664   000CB4  0A01               	xorlw	1	; case 17
 24665   000CB6  B4D8               	btfsc	status,2,c
 24666   000CB8  EF4A  F006         	goto	l10211
 24667   000CBC  EF60  F006         	goto	l1323
 24668   000CC0                     l1323:
 24669                           
 24670                           ; BSR set to: 5
 24671                           ;../../VLCBlib_PIC/mns.c: 442:             break;
 24672   000CC0  EF7D  F006         	goto	l10225
 24673   000CC4                     l10223:
 24674                           
 24675                           ; BSR set to: 5
 24676   000CC4  EE20 F001          	lfsr	2,1
 24677   000CC8  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24678   000CCA  26D9               	addwf	fsr2l,f,c
 24679   000CCC  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24680   000CCE  22DA               	addwfc	fsr2h,f,c
 24681   000CD0  50DF               	movf	indf2,w,c
 24682   000CD2  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 24683   000CD4  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 24684                           
 24685                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24686                           ; Switch size 1, requested type "simple"
 24687                           ; Number of cases is 1, Range of values is 0 to 0
 24688                           ; switch strategies available:
 24689                           ; Name         Instructions Cycles
 24690                           ; simple_byte            4     3 (average)
 24691                           ;	Chosen strategy is simple_byte
 24692   000CD6  51D1               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 24693   000CD8  0A00               	xorlw	0	; case 0
 24694   000CDA  B4D8               	btfsc	status,2,c
 24695   000CDC  EF72  F006         	goto	l11593
 24696   000CE0  EF7D  F006         	goto	l10225
 24697   000CE4                     l11593:
 24698                           
 24699                           ; BSR set to: 5
 24700                           ; Switch size 1, requested type "simple"
 24701                           ; Number of cases is 2, Range of values is 13 to 118
 24702                           ; switch strategies available:
 24703                           ; Name         Instructions Cycles
 24704                           ; simple_byte            7     4 (average)
 24705                           ;	Chosen strategy is simple_byte
 24706   000CE4  51D0               	movf	??_mnsProcessMessage& (0+255),w,b
 24707   000CE6  0A0D               	xorlw	13	; case 13
 24708   000CE8  B4D8               	btfsc	status,2,c
 24709   000CEA  EFF0  F005         	goto	l10173
 24710   000CEE  0A7B               	xorlw	123	; case 118
 24711   000CF0  B4D8               	btfsc	status,2,c
 24712   000CF2  EF00  F006         	goto	l10179
 24713   000CF6  EF7D  F006         	goto	l10225
 24714   000CFA                     l10225:
 24715                           
 24716                           ; BSR set to: 5
 24717                           ;../../VLCBlib_PIC/mns.c: 447:     if (m->len < 3) {
 24718   000CFA  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24719   000CFE  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24720   000D02  0E03               	movlw	3
 24721   000D04  60DF               	cpfslt	indf2,c
 24722   000D06  EF87  F006         	goto	u7501
 24723   000D0A  EF89  F006         	goto	u7500
 24724   000D0E                     u7501:
 24725   000D0E  EF8B  F006         	goto	l10231
 24726   000D12                     u7500:
 24727   000D12  EFED  F005         	goto	l10169
 24728   000D16                     l10231:
 24729                           
 24730                           ; BSR set to: 5
 24731                           ;../../VLCBlib_PIC/mns.c: 451:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 24732   000D16  EE20 F002          	lfsr	2,2
 24733   000D1A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24734   000D1C  26D9               	addwf	fsr2l,f,c
 24735   000D1E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24736   000D20  22DA               	addwfc	fsr2h,f,c
 24737   000D22  50DE               	movf	postinc2,w,c
 24738   000D24  1990               	xorwf	(_nn+1)& (0+255),w,b
 24739   000D26  B4D8               	btfsc	status,2,c
 24740   000D28  EF98  F006         	goto	u7511
 24741   000D2C  EF9A  F006         	goto	u7510
 24742   000D30                     u7511:
 24743   000D30  EF9C  F006         	goto	l10237
 24744   000D34                     u7510:
 24745   000D34  EFED  F005         	goto	l10169
 24746   000D38                     l10237:
 24747                           
 24748                           ; BSR set to: 5
 24749                           ;../../VLCBlib_PIC/mns.c: 452:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 24750   000D38  EE20 F003          	lfsr	2,3
 24751   000D3C  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24752   000D3E  26D9               	addwf	fsr2l,f,c
 24753   000D40  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24754   000D42  22DA               	addwfc	fsr2h,f,c
 24755   000D44  518F               	movf	_nn& (0+255),w,b
 24756   000D46  18DE               	xorwf	postinc2,w,c
 24757   000D48  B4D8               	btfsc	status,2,c
 24758   000D4A  EFA9  F006         	goto	u7521
 24759   000D4E  EFAB  F006         	goto	u7520
 24760   000D52                     u7521:
 24761   000D52  EF50  F00B         	goto	l10447
 24762   000D56                     u7520:
 24763   000D56  EFED  F005         	goto	l10169
 24764   000D5A                     l10243:
 24765                           
 24766                           ; BSR set to: 5
 24767                           ;../../VLCBlib_PIC/mns.c: 456:             if (m->len < 4) {
 24768   000D5A  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24769   000D5E  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24770   000D62  0E04               	movlw	4
 24771   000D64  60DF               	cpfslt	indf2,c
 24772   000D66  EFB7  F006         	goto	u7531
 24773   000D6A  EFB9  F006         	goto	u7530
 24774   000D6E                     u7531:
 24775   000D6E  EFC8  F006         	goto	l10251
 24776   000D72                     u7530:
 24777   000D72                     
 24778                           ; BSR set to: 5
 24779                           ;../../VLCBlib_PIC/mns.c: 458:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24780   000D72  C590  F526         	movff	_nn+1,sendMessage5@data1
 24781   000D76  C58F  F527         	movff	_nn,sendMessage5@data2
 24782   000D7A  0E73               	movlw	115
 24783   000D7C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24784   000D7E  0E01               	movlw	1
 24785   000D80  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24786   000D82  0E01               	movlw	1
 24787   000D84  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24788   000D86  0EAF               	movlw	175
 24789   000D88  EC11  F040         	call	_sendMessage5
 24790   000D8C  EF60  F005         	goto	l10143
 24791   000D90                     l10251:
 24792                           
 24793                           ; BSR set to: 5
 24794                           ;../../VLCBlib_PIC/mns.c: 462:             if (m->bytes[2] > 20) {
 24795   000D90  EE20 F004          	lfsr	2,4
 24796   000D94  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24797   000D96  26D9               	addwf	fsr2l,f,c
 24798   000D98  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24799   000D9A  22DA               	addwfc	fsr2h,f,c
 24800   000D9C  0E14               	movlw	20
 24801   000D9E  64DF               	cpfsgt	indf2,c
 24802   000DA0  EFD4  F006         	goto	u7541
 24803   000DA4  EFD6  F006         	goto	u7540
 24804   000DA8                     u7541:
 24805   000DA8  EFEE  F006         	goto	l10259
 24806   000DAC                     u7540:
 24807   000DAC                     
 24808                           ; BSR set to: 5
 24809                           ;../../VLCBlib_PIC/mns.c: 463:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 24810   000DAC  C590  F526         	movff	_nn+1,sendMessage3@data1
 24811   000DB0  C58F  F527         	movff	_nn,sendMessage3@data2
 24812   000DB4  0E09               	movlw	9
 24813   000DB6  6E28               	movwf	sendMessage3@data3^(0+1280),c
 24814   000DB8  0E6F               	movlw	111
 24815   000DBA  ECD2  F03F         	call	_sendMessage3
 24816                           
 24817                           ;../../VLCBlib_PIC/mns.c: 465:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 24818   000DBE  C590  F526         	movff	_nn+1,sendMessage5@data1
 24819   000DC2  C58F  F527         	movff	_nn,sendMessage5@data2
 24820   000DC6  0E73               	movlw	115
 24821   000DC8  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24822   000DCA  0E01               	movlw	1
 24823   000DCC  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24824   000DCE  0E09               	movlw	9
 24825   000DD0  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24826   000DD2  0EAF               	movlw	175
 24827   000DD4  EC11  F040         	call	_sendMessage5
 24828   000DD8  EF60  F005         	goto	l10143
 24829   000DDC                     l10259:
 24830                           
 24831                           ; BSR set to: 5
 24832                           ;../../VLCBlib_PIC/mns.c: 469:             i = getParameter(m->bytes[2]);
 24833   000DDC  EE20 F004          	lfsr	2,4
 24834   000DE0  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24835   000DE2  26D9               	addwf	fsr2l,f,c
 24836   000DE4  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24837   000DE6  22DA               	addwfc	fsr2h,f,c
 24838   000DE8  50DF               	movf	indf2,w,c
 24839   000DEA  ECD3  F024         	call	_getParameter
 24840   000DEE  6E56               	movwf	mnsProcessMessage@i^(0+1280),c
 24841   000DF0                     
 24842                           ;../../VLCBlib_PIC/mns.c: 470:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 24843   000DF0  C590  F526         	movff	_nn+1,sendMessage4@data1
 24844   000DF4  C58F  F527         	movff	_nn,sendMessage4@data2
 24845   000DF8  EE20 F004          	lfsr	2,4
 24846   000DFC  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24847   000DFE  26D9               	addwf	fsr2l,f,c
 24848   000E00  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24849   000E02  22DA               	addwfc	fsr2h,f,c
 24850   000E04  50DF               	movf	indf2,w,c
 24851   000E06  6E28               	movwf	sendMessage4@data3^(0+1280),c
 24852   000E08  C556  F529         	movff	mnsProcessMessage@i,sendMessage4@data4
 24853   000E0C  0E9B               	movlw	155
 24854   000E0E  ECBD  F03F         	call	_sendMessage4
 24855   000E12                     
 24856                           ;../../VLCBlib_PIC/mns.c: 472:             if (((mode_flags & 8) == 0) && (m->bytes[2] =
      +                          = 0)) {
 24857   000E12  0105               	movlb	5	; () banked
 24858   000E14  B7A4               	btfsc	_mode_flags& (0+255),3,b
 24859   000E16  EF0F  F007         	goto	u7551
 24860   000E1A  EF11  F007         	goto	u7550
 24861   000E1E                     u7551:
 24862   000E1E  EF60  F005         	goto	l10143
 24863   000E22                     u7550:
 24864   000E22                     
 24865                           ; BSR set to: 5
 24866   000E22  EE20 F004          	lfsr	2,4
 24867   000E26  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24868   000E28  26D9               	addwf	fsr2l,f,c
 24869   000E2A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24870   000E2C  22DA               	addwfc	fsr2h,f,c
 24871   000E2E  50DF               	movf	indf2,w,c
 24872   000E30  A4D8               	btfss	status,2,c
 24873   000E32  EF1D  F007         	goto	u7561
 24874   000E36  EF1F  F007         	goto	u7560
 24875   000E3A                     u7561:
 24876   000E3A  EF60  F005         	goto	l10143
 24877   000E3E                     u7560:
 24878   000E3E                     
 24879                           ; BSR set to: 5
 24880                           ;../../VLCBlib_PIC/mns.c: 473:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 24881   000E3E  0E01               	movlw	1
 24882   000E40  EC6F  F036         	call	_findServiceIndex
 24883   000E44  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 24884   000E46  0E68               	movlw	low _mnsTRrqnpnCallback
 24885   000E48  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 24886   000E4A  0E7D               	movlw	high _mnsTRrqnpnCallback
 24887   000E4C  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 24888   000E4E  0E07               	movlw	7
 24889   000E50  ECF1  F03B         	call	_startTimedResponse
 24890   000E54  EF60  F005         	goto	l10143
 24891   000E58                     l1341:
 24892                           
 24893                           ; BSR set to: 5
 24894                           ;../../VLCBlib_PIC/mns.c: 478:             previousNN.word = nn.word;
 24895   000E58  C58F  F58D         	movff	_nn,_previousNN
 24896   000E5C  C590  F58E         	movff	_nn+1,_previousNN+1
 24897   000E60                     
 24898                           ; BSR set to: 5
 24899                           ;../../VLCBlib_PIC/mns.c: 480:             writeNVM(EEPROM_NVM_TYPE, 0x3FA, 0xFF);
 24900   000E60  0EFA               	movlw	250
 24901   000E62  6E0E               	movwf	writeNVM@index^(0+1280),c
 24902   000E64  0E03               	movlw	3
 24903   000E66  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 24904   000E68  0E00               	movlw	0
 24905   000E6A  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 24906   000E6C  0EFF               	movlw	255
 24907   000E6E  6E11               	movwf	writeNVM@value^(0+1280),c
 24908   000E70  0E00               	movlw	0
 24909   000E72  EC91  F03B         	call	_writeNVM
 24910   000E76                     
 24911                           ;../../VLCBlib_PIC/mns.c: 481:             if (previousNN.word != 0) {
 24912   000E76  0105               	movlb	5	; () banked
 24913   000E78  518D               	movf	_previousNN& (0+255),w,b
 24914   000E7A  118E               	iorwf	(_previousNN+1)& (0+255),w,b
 24915   000E7C  B4D8               	btfsc	status,2,c
 24916   000E7E  EF43  F007         	goto	u7571
 24917   000E82  EF45  F007         	goto	u7570
 24918   000E86                     u7571:
 24919   000E86  EF6A  F007         	goto	l1342
 24920   000E8A                     u7570:
 24921   000E8A                     
 24922                           ; BSR set to: 5
 24923                           ;../../VLCBlib_PIC/mns.c: 482:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 24924   000E8A  C58E  F526         	movff	_previousNN+1,sendMessage2@data1
 24925   000E8E  C58D  F527         	movff	_previousNN,sendMessage2@data2
 24926   000E92  0E51               	movlw	81
 24927   000E94  ECE7  F03F         	call	_sendMessage2
 24928   000E98                     
 24929                           ;../../VLCBlib_PIC/mns.c: 483:                 transport->waitForTxQueueToDrain();
 24930   000E98  0E04               	movlw	4
 24931   000E9A  0105               	movlb	5	; () banked
 24932   000E9C  2591               	addwf	_transport& (0+255),w,b
 24933   000E9E  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 24934   000EA0  0E00               	movlw	0
 24935   000EA2  2192               	addwfc	(_transport+1)& (0+255),w,b
 24936   000EA4  6FD1               	movwf	(??_mnsProcessMessage+1)& (0+255),b
 24937   000EA6  C5D0  F4F6         	movff	??_mnsProcessMessage,tblptrl
 24938   000EAA  C5D1  F4F7         	movff	??_mnsProcessMessage+1,tblptrh
 24939   000EAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24940   000EAE  6AF8               	clrf	tblptru,c
 24941   000EB0                     	endif
 24942   000EB0                     	if	0	;tblptru may be non-zero
 24943   000EB0                     	endif
 24944   000EB0  0009               	tblrd		*+
 24945   000EB2  C4F5 F5D2          	movff	tablat,??_mnsProcessMessage+2
 24946   000EB6  0009               	tblrd		*+
 24947   000EB8  C4F5 F5D3          	movff	tablat,??_mnsProcessMessage+3
 24948   000EBC  D802               	call	u7588
 24949   000EBE  EF6A  F007         	goto	u7589
 24950   000EC2                     u7588:
 24951   000EC2  0005               	push	
 24952   000EC4  6EFA               	movwf	pclath,c
 24953   000EC6  51D2               	movf	(??_mnsProcessMessage+2)& (0+255),w,b
 24954   000EC8  6EFD               	movwf	tosl,c
 24955   000ECA  51D3               	movf	(??_mnsProcessMessage+3)& (0+255),w,b
 24956   000ECC  6EFE               	movwf	tosh,c
 24957   000ECE  6AFF               	clrf	tosu,c
 24958   000ED0  50FA               	movf	pclath,w,c
 24959   000ED2  0012               	return		;indir
 24960   000ED4                     u7589:
 24961   000ED4                     l1342:
 24962   000ED4  00FF               	reset		;# 
 24963   000ED6                     l10281:
 24964                           
 24965                           ;../../VLCBlib_PIC/mns.c: 488:             if (m->len < 5) {
 24966   000ED6  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 24967   000EDA  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 24968   000EDE  0E05               	movlw	5
 24969   000EE0  60DF               	cpfslt	indf2,c
 24970   000EE2  EF75  F007         	goto	u7591
 24971   000EE6  EF77  F007         	goto	u7590
 24972   000EEA                     u7591:
 24973   000EEA  EF86  F007         	goto	l10289
 24974   000EEE                     u7590:
 24975   000EEE                     
 24976                           ;../../VLCBlib_PIC/mns.c: 489:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 24977   000EEE  C590  F526         	movff	_nn+1,sendMessage5@data1
 24978   000EF2  C58F  F527         	movff	_nn,sendMessage5@data2
 24979   000EF6  0E87               	movlw	135
 24980   000EF8  6E28               	movwf	sendMessage5@data3^(0+1280),c
 24981   000EFA  0E01               	movlw	1
 24982   000EFC  6E29               	movwf	sendMessage5@data4^(0+1280),c
 24983   000EFE  0E01               	movlw	1
 24984   000F00  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 24985   000F02  0EAF               	movlw	175
 24986   000F04  EC11  F040         	call	_sendMessage5
 24987   000F08  EF60  F005         	goto	l10143
 24988   000F0C                     l10289:
 24989                           
 24990                           ;../../VLCBlib_PIC/mns.c: 492:             if (m->bytes[2] == 0) {
 24991   000F0C  EE20 F004          	lfsr	2,4
 24992   000F10  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 24993   000F12  26D9               	addwf	fsr2l,f,c
 24994   000F14  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 24995   000F16  22DA               	addwfc	fsr2h,f,c
 24996   000F18  50DF               	movf	indf2,w,c
 24997   000F1A  A4D8               	btfss	status,2,c
 24998   000F1C  EF92  F007         	goto	u7601
 24999   000F20  EF94  F007         	goto	u7600
 25000   000F24                     u7601:
 25001   000F24  EF9F  F007         	goto	l10293
 25002   000F28                     u7600:
 25003   000F28                     
 25004                           ;../../VLCBlib_PIC/mns.c: 494:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 25005   000F28  0E00               	movlw	0
 25006   000F2A  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25007   000F2C  0E02               	movlw	low _mnsTRallDiagnosticsCallback
 25008   000F2E  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25009   000F30  0E53               	movlw	high _mnsTRallDiagnosticsCallback
 25010   000F32  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25011   000F34  0E04               	movlw	4
 25012   000F36  ECF1  F03B         	call	_startTimedResponse
 25013                           
 25014                           ;../../VLCBlib_PIC/mns.c: 495:             } else {
 25015   000F3A  EF60  F005         	goto	l10143
 25016   000F3E                     l10293:
 25017                           
 25018                           ;../../VLCBlib_PIC/mns.c: 497:                 if (m->bytes[2] > 6) {
 25019   000F3E  EE20 F004          	lfsr	2,4
 25020   000F42  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25021   000F44  26D9               	addwf	fsr2l,f,c
 25022   000F46  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25023   000F48  22DA               	addwfc	fsr2h,f,c
 25024   000F4A  0E06               	movlw	6
 25025   000F4C  64DF               	cpfsgt	indf2,c
 25026   000F4E  EFAB  F007         	goto	u7611
 25027   000F52  EFAD  F007         	goto	u7610
 25028   000F56                     u7611:
 25029   000F56  EFBC  F007         	goto	l10301
 25030   000F5A                     u7610:
 25031   000F5A                     
 25032                           ;../../VLCBlib_PIC/mns.c: 498:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 25033   000F5A  C590  F526         	movff	_nn+1,sendMessage5@data1
 25034   000F5E  C58F  F527         	movff	_nn,sendMessage5@data2
 25035   000F62  0E87               	movlw	135
 25036   000F64  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25037   000F66  0E01               	movlw	1
 25038   000F68  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25039   000F6A  0EFC               	movlw	252
 25040   000F6C  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25041   000F6E  0EAF               	movlw	175
 25042   000F70  EC11  F040         	call	_sendMessage5
 25043   000F74  EF60  F005         	goto	l10143
 25044   000F78                     l10301:
 25045                           
 25046                           ;../../VLCBlib_PIC/mns.c: 501:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 25047   000F78  EE20 F004          	lfsr	2,4
 25048   000F7C  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25049   000F7E  26D9               	addwf	fsr2l,f,c
 25050   000F80  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25051   000F82  22DA               	addwfc	fsr2h,f,c
 25052   000F84  50DF               	movf	indf2,w,c
 25053   000F86  0105               	movlb	5	; () banked
 25054   000F88  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25055   000F8A  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25056   000F8C  90D8               	bcf	status,0,c
 25057   000F8E  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25058   000F90  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25059   000F92  0EFE               	movlw	254
 25060   000F94  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25061   000F96  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25062   000F98  0EFF               	movlw	255
 25063   000F9A  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25064   000F9C  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25065   000F9E  0E89               	movlw	low _services
 25066   000FA0  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25067   000FA2  6EF6               	movwf	tblptrl,c
 25068   000FA4  0EFF               	movlw	high _services
 25069   000FA6  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25070   000FA8  6EF7               	movwf	tblptrh,c
 25071   000FAA                     	if	1	;There are 3 active tblptr bytes
 25072   000FAA  6AF8               	clrf	tblptru,c
 25073   000FAC  0E00               	movlw	low (__mediumconst shr (0+16))
 25074   000FAE  22F8               	addwfc	tblptru,f,c
 25075   000FB0                     	endif
 25076   000FB0  0009               	tblrd		*+
 25077   000FB2  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25078   000FB6  0009               	tblrd		*+
 25079   000FB8  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25080   000FBC  0E0C               	movlw	12
 25081   000FBE  27D4               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 25082   000FC0  0E00               	movlw	0
 25083   000FC2  23D5               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 25084   000FC4  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25085   000FC8  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25086   000FCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25087   000FCC  6AF8               	clrf	tblptru,c
 25088   000FCE                     	endif
 25089   000FCE                     	if	0	;tblptru may be non-zero
 25090   000FCE                     	endif
 25091   000FCE  0009               	tblrd		*+
 25092   000FD0  50F5               	movf	tablat,w,c
 25093   000FD2  0009               	tblrd		*+
 25094   000FD4  10F5               	iorwf	tablat,w,c
 25095   000FD6  A4D8               	btfss	status,2,c
 25096   000FD8  EFF0  F007         	goto	u7621
 25097   000FDC  EFF2  F007         	goto	u7620
 25098   000FE0                     u7621:
 25099   000FE0  EF05  F008         	goto	l10305
 25100   000FE4                     u7620:
 25101   000FE4                     
 25102                           ; BSR set to: 5
 25103                           ;../../VLCBlib_PIC/mns.c: 503:                     sendMessage5(OPC_DGN, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_RDGN, m->bytes[2], 0);
 25104   000FE4  C590  F526         	movff	_nn+1,sendMessage5@data1
 25105   000FE8  C58F  F527         	movff	_nn,sendMessage5@data2
 25106   000FEC  0E87               	movlw	135
 25107   000FEE  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25108   000FF0  EE20 F004          	lfsr	2,4
 25109   000FF4  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25110   000FF6  26D9               	addwf	fsr2l,f,c
 25111   000FF8  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25112   000FFA  22DA               	addwfc	fsr2h,f,c
 25113   000FFC  50DF               	movf	indf2,w,c
 25114   000FFE  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25115   001000  0E00               	movlw	0
 25116   001002  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25117   001004  0EC7               	movlw	199
 25118   001006  EC11  F040         	call	_sendMessage5
 25119   00100A                     l10305:
 25120                           
 25121                           ;../../VLCBlib_PIC/mns.c: 505:                 if (m->bytes[3] == 0) {
 25122   00100A  EE20 F005          	lfsr	2,5
 25123   00100E  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25124   001010  26D9               	addwf	fsr2l,f,c
 25125   001012  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25126   001014  22DA               	addwfc	fsr2h,f,c
 25127   001016  50DF               	movf	indf2,w,c
 25128   001018  A4D8               	btfss	status,2,c
 25129   00101A  EF11  F008         	goto	u7631
 25130   00101E  EF13  F008         	goto	u7630
 25131   001022                     u7631:
 25132   001022  EF24  F008         	goto	l10315
 25133   001026                     u7630:
 25134   001026                     
 25135                           ;../../VLCBlib_PIC/mns.c: 507:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 25136   001026  EE20 F004          	lfsr	2,4
 25137   00102A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25138   00102C  26D9               	addwf	fsr2l,f,c
 25139   00102E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25140   001030  22DA               	addwfc	fsr2h,f,c
 25141   001032  50DF               	movf	indf2,w,c
 25142   001034  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25143   001036  0E02               	movlw	low _mnsTRallDiagnosticsCallback
 25144   001038  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25145   00103A  0E53               	movlw	high _mnsTRallDiagnosticsCallback
 25146   00103C  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25147   00103E  0E04               	movlw	4
 25148   001040  ECF1  F03B         	call	_startTimedResponse
 25149   001044  EF60  F005         	goto	l10143
 25150   001048                     l10315:
 25151                           
 25152                           ;../../VLCBlib_PIC/mns.c: 510:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 25153   001048  EE20 F004          	lfsr	2,4
 25154   00104C  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25155   00104E  26D9               	addwf	fsr2l,f,c
 25156   001050  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25157   001052  22DA               	addwfc	fsr2h,f,c
 25158   001054  50DF               	movf	indf2,w,c
 25159   001056  0105               	movlb	5	; () banked
 25160   001058  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25161   00105A  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25162   00105C  90D8               	bcf	status,0,c
 25163   00105E  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25164   001060  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25165   001062  0EFE               	movlw	254
 25166   001064  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25167   001066  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25168   001068  0EFF               	movlw	255
 25169   00106A  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25170   00106C  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25171   00106E  0E89               	movlw	low _services
 25172   001070  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25173   001072  6EF6               	movwf	tblptrl,c
 25174   001074  0EFF               	movlw	high _services
 25175   001076  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25176   001078  6EF7               	movwf	tblptrh,c
 25177   00107A                     	if	1	;There are 3 active tblptr bytes
 25178   00107A  6AF8               	clrf	tblptru,c
 25179   00107C  0E00               	movlw	low (__mediumconst shr (0+16))
 25180   00107E  22F8               	addwfc	tblptru,f,c
 25181   001080                     	endif
 25182   001080  0009               	tblrd		*+
 25183   001082  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25184   001086  0009               	tblrd		*+
 25185   001088  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25186   00108C  0E0C               	movlw	12
 25187   00108E  27D4               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 25188   001090  0E00               	movlw	0
 25189   001092  23D5               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 25190   001094  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25191   001098  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25192   00109C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25193   00109C  6AF8               	clrf	tblptru,c
 25194   00109E                     	endif
 25195   00109E                     	if	0	;tblptru may be non-zero
 25196   00109E                     	endif
 25197   00109E  0009               	tblrd		*+
 25198   0010A0  C4F5 F5D6          	movff	tablat,??_mnsProcessMessage+6
 25199   0010A4  0009               	tblrd		*+
 25200   0010A6  C4F5 F5D7          	movff	tablat,??_mnsProcessMessage+7
 25201   0010AA  D802               	call	u7648
 25202   0010AC  EF68  F008         	goto	u7649
 25203   0010B0                     u7648:
 25204   0010B0  0005               	push	
 25205   0010B2  6EFA               	movwf	pclath,c
 25206   0010B4  51D6               	movf	(??_mnsProcessMessage+6)& (0+255),w,b
 25207   0010B6  6EFD               	movwf	tosl,c
 25208   0010B8  51D7               	movf	(??_mnsProcessMessage+7)& (0+255),w,b
 25209   0010BA  6EFE               	movwf	tosh,c
 25210   0010BC  6AFF               	clrf	tosu,c
 25211   0010BE  50FA               	movf	pclath,w,c
 25212   0010C0  EE20 F005          	lfsr	2,5
 25213   0010C4  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25214   0010C6  26D9               	addwf	fsr2l,f,c
 25215   0010C8  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25216   0010CA  22DA               	addwfc	fsr2h,f,c
 25217   0010CC  50DF               	movf	indf2,w,c
 25218   0010CE  0012               	return		;indir
 25219   0010D0                     u7649:
 25220   0010D0  C507  F558         	movff	?_nvGetDiagnostic,mnsProcessMessage@d
 25221   0010D4  C508  F559         	movff	?_nvGetDiagnostic+1,mnsProcessMessage@d+1
 25222   0010D8                     
 25223                           ;../../VLCBlib_PIC/mns.c: 511:                     if (d == ((void*)0)) {
 25224   0010D8  5058               	movf	mnsProcessMessage@d^(0+1280),w,c
 25225   0010DA  1059               	iorwf	(mnsProcessMessage@d+1)^(0+1280),w,c
 25226   0010DC  A4D8               	btfss	status,2,c
 25227   0010DE  EF73  F008         	goto	u7651
 25228   0010E2  EF75  F008         	goto	u7650
 25229   0010E6                     u7651:
 25230   0010E6  EF84  F008         	goto	l10321
 25231   0010EA                     u7650:
 25232   0010EA                     
 25233                           ;../../VLCBlib_PIC/mns.c: 513:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 25234   0010EA  C590  F526         	movff	_nn+1,sendMessage5@data1
 25235   0010EE  C58F  F527         	movff	_nn,sendMessage5@data2
 25236   0010F2  0E87               	movlw	135
 25237   0010F4  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25238   0010F6  0E01               	movlw	1
 25239   0010F8  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25240   0010FA  0EFD               	movlw	253
 25241   0010FC  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25242   0010FE  0EAF               	movlw	175
 25243   001100  EC11  F040         	call	_sendMessage5
 25244                           
 25245                           ;../../VLCBlib_PIC/mns.c: 514:                     } else {
 25246   001104  EF60  F005         	goto	l10143
 25247   001108                     l10321:
 25248                           
 25249                           ;../../VLCBlib_PIC/mns.c: 516:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 25250   001108  C590  F526         	movff	_nn+1,sendMessage6@data1
 25251   00110C  C58F  F527         	movff	_nn,sendMessage6@data2
 25252   001110  EE20 F004          	lfsr	2,4
 25253   001114  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25254   001116  26D9               	addwf	fsr2l,f,c
 25255   001118  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25256   00111A  22DA               	addwfc	fsr2h,f,c
 25257   00111C  50DF               	movf	indf2,w,c
 25258   00111E  6E28               	movwf	sendMessage6@data3^(0+1280),c
 25259   001120  EE20 F005          	lfsr	2,5
 25260   001124  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25261   001126  26D9               	addwf	fsr2l,f,c
 25262   001128  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25263   00112A  22DA               	addwfc	fsr2h,f,c
 25264   00112C  50DF               	movf	indf2,w,c
 25265   00112E  6E29               	movwf	sendMessage6@data4^(0+1280),c
 25266   001130  EE20 F001          	lfsr	2,1
 25267   001134  5058               	movf	mnsProcessMessage@d^(0+1280),w,c
 25268   001136  26D9               	addwf	fsr2l,f,c
 25269   001138  5059               	movf	(mnsProcessMessage@d+1)^(0+1280),w,c
 25270   00113A  22DA               	addwfc	fsr2h,f,c
 25271   00113C  50DF               	movf	indf2,w,c
 25272   00113E  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 25273   001140  C558  F4D9         	movff	mnsProcessMessage@d,fsr2l
 25274   001144  C559  F4DA         	movff	mnsProcessMessage@d+1,fsr2h
 25275   001148  50DF               	movf	indf2,w,c
 25276   00114A  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 25277   00114C  0EC7               	movlw	199
 25278   00114E  ECA8  F03F         	call	_sendMessage6
 25279   001152  EF60  F005         	goto	l10143
 25280   001156                     l10327:
 25281                           
 25282                           ; BSR set to: 5
 25283                           ;../../VLCBlib_PIC/mns.c: 524:             if (m->len < 4) {
 25284   001156  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 25285   00115A  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 25286   00115E  0E04               	movlw	4
 25287   001160  60DF               	cpfslt	indf2,c
 25288   001162  EFB5  F008         	goto	u7661
 25289   001166  EFB7  F008         	goto	u7660
 25290   00116A                     u7661:
 25291   00116A  EFC6  F008         	goto	l10335
 25292   00116E                     u7660:
 25293   00116E                     
 25294                           ; BSR set to: 5
 25295                           ;../../VLCBlib_PIC/mns.c: 525:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 25296   00116E  C590  F526         	movff	_nn+1,sendMessage5@data1
 25297   001172  C58F  F527         	movff	_nn,sendMessage5@data2
 25298   001176  0E78               	movlw	120
 25299   001178  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25300   00117A  0E01               	movlw	1
 25301   00117C  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25302   00117E  0E01               	movlw	1
 25303   001180  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25304   001182  0EAF               	movlw	175
 25305   001184  EC11  F040         	call	_sendMessage5
 25306   001188  EF60  F005         	goto	l10143
 25307   00118C                     l10335:
 25308                           
 25309                           ; BSR set to: 5
 25310                           ;../../VLCBlib_PIC/mns.c: 528:             if (m->bytes[2] == 0) {
 25311   00118C  EE20 F004          	lfsr	2,4
 25312   001190  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25313   001192  26D9               	addwf	fsr2l,f,c
 25314   001194  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25315   001196  22DA               	addwfc	fsr2h,f,c
 25316   001198  50DF               	movf	indf2,w,c
 25317   00119A  A4D8               	btfss	status,2,c
 25318   00119C  EFD2  F008         	goto	u7671
 25319   0011A0  EFD4  F008         	goto	u7670
 25320   0011A4                     u7671:
 25321   0011A4  EFEC  F008         	goto	l10341
 25322   0011A8                     u7670:
 25323   0011A8                     
 25324                           ; BSR set to: 5
 25325                           ;../../VLCBlib_PIC/mns.c: 530:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 6);
 25326   0011A8  C590  F526         	movff	_nn+1,sendMessage5@data1
 25327   0011AC  C58F  F527         	movff	_nn,sendMessage5@data2
 25328   0011B0  0E00               	movlw	0
 25329   0011B2  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25330   0011B4  0E00               	movlw	0
 25331   0011B6  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25332   0011B8  0E06               	movlw	6
 25333   0011BA  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25334   0011BC  0EAC               	movlw	172
 25335   0011BE  EC11  F040         	call	_sendMessage5
 25336   0011C2                     
 25337                           ;../../VLCBlib_PIC/mns.c: 532:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 25338   0011C2  0E01               	movlw	1
 25339   0011C4  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 25340   0011C6  0EFE               	movlw	low _mnsTRserviceDiscoveryCallback
 25341   0011C8  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 25342   0011CA  0E69               	movlw	high _mnsTRserviceDiscoveryCallback
 25343   0011CC  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 25344   0011CE  0E03               	movlw	3
 25345   0011D0  ECF1  F03B         	call	_startTimedResponse
 25346                           
 25347                           ;../../VLCBlib_PIC/mns.c: 533:             } else if (m->bytes[2] > 6) {
 25348   0011D4  EF60  F005         	goto	l10143
 25349   0011D8                     l10341:
 25350                           
 25351                           ; BSR set to: 5
 25352   0011D8  EE20 F004          	lfsr	2,4
 25353   0011DC  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25354   0011DE  26D9               	addwf	fsr2l,f,c
 25355   0011E0  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25356   0011E2  22DA               	addwfc	fsr2h,f,c
 25357   0011E4  0E06               	movlw	6
 25358   0011E6  64DF               	cpfsgt	indf2,c
 25359   0011E8  EFF8  F008         	goto	u7681
 25360   0011EC  EFFA  F008         	goto	u7680
 25361   0011F0                     u7681:
 25362   0011F0  EF09  F009         	goto	l10351
 25363   0011F4                     u7680:
 25364   0011F4                     
 25365                           ; BSR set to: 5
 25366                           ;../../VLCBlib_PIC/mns.c: 534:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 25367   0011F4  C590  F526         	movff	_nn+1,sendMessage5@data1
 25368   0011F8  C58F  F527         	movff	_nn,sendMessage5@data2
 25369   0011FC  0E78               	movlw	120
 25370   0011FE  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25371   001200  0E01               	movlw	1
 25372   001202  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25373   001204  0EFC               	movlw	252
 25374   001206  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25375   001208  0EAF               	movlw	175
 25376   00120A  EC11  F040         	call	_sendMessage5
 25377   00120E  EF60  F005         	goto	l10143
 25378   001212                     l10351:
 25379                           
 25380                           ; BSR set to: 5
 25381                           ;../../VLCBlib_PIC/mns.c: 538:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 25382   001212  EE20 F004          	lfsr	2,4
 25383   001216  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25384   001218  26D9               	addwf	fsr2l,f,c
 25385   00121A  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25386   00121C  22DA               	addwfc	fsr2h,f,c
 25387   00121E  50DF               	movf	indf2,w,c
 25388   001220  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25389   001222  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25390   001224  90D8               	bcf	status,0,c
 25391   001226  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25392   001228  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25393   00122A  0EFE               	movlw	254
 25394   00122C  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25395   00122E  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25396   001230  0EFF               	movlw	255
 25397   001232  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25398   001234  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25399   001236  0E89               	movlw	low _services
 25400   001238  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25401   00123A  6EF6               	movwf	tblptrl,c
 25402   00123C  0EFF               	movlw	high _services
 25403   00123E  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25404   001240  6EF7               	movwf	tblptrh,c
 25405   001242                     	if	1	;There are 3 active tblptr bytes
 25406   001242  6AF8               	clrf	tblptru,c
 25407   001244  0E00               	movlw	low (__mediumconst shr (0+16))
 25408   001246  22F8               	addwfc	tblptru,f,c
 25409   001248                     	endif
 25410   001248  0009               	tblrd		*+
 25411   00124A  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25412   00124E  0009               	tblrd		*+
 25413   001250  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25414   001254  0E0A               	movlw	10
 25415   001256  27D4               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 25416   001258  0E00               	movlw	0
 25417   00125A  23D5               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 25418   00125C  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25419   001260  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25420   001264                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25421   001264  6AF8               	clrf	tblptru,c
 25422   001266                     	endif
 25423   001266                     	if	0	;tblptru may be non-zero
 25424   001266                     	endif
 25425   001266  0009               	tblrd		*+
 25426   001268  50F5               	movf	tablat,w,c
 25427   00126A  0009               	tblrd		*+
 25428   00126C  10F5               	iorwf	tablat,w,c
 25429   00126E  A4D8               	btfss	status,2,c
 25430   001270  EF3C  F009         	goto	u7691
 25431   001274  EF3E  F009         	goto	u7690
 25432   001278                     u7691:
 25433   001278  EF7E  F009         	goto	l10355
 25434   00127C                     u7690:
 25435   00127C                     
 25436                           ; BSR set to: 5
 25437                           ;../../VLCBlib_PIC/mns.c: 539:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 25438   00127C  C590  F526         	movff	_nn+1,sendMessage7@data1
 25439   001280  C58F  F527         	movff	_nn,sendMessage7@data2
 25440   001284  EE20 F004          	lfsr	2,4
 25441   001288  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25442   00128A  26D9               	addwf	fsr2l,f,c
 25443   00128C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25444   00128E  22DA               	addwfc	fsr2h,f,c
 25445   001290  50DF               	movf	indf2,w,c
 25446   001292  6E28               	movwf	sendMessage7@data3^(0+1280),c
 25447   001294  EE20 F004          	lfsr	2,4
 25448   001298  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25449   00129A  26D9               	addwf	fsr2l,f,c
 25450   00129C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25451   00129E  22DA               	addwfc	fsr2h,f,c
 25452   0012A0  50DF               	movf	indf2,w,c
 25453   0012A2  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25454   0012A4  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25455   0012A6  90D8               	bcf	status,0,c
 25456   0012A8  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25457   0012AA  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25458   0012AC  0EFE               	movlw	254
 25459   0012AE  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25460   0012B0  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25461   0012B2  0EFF               	movlw	255
 25462   0012B4  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25463   0012B6  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25464   0012B8  0E89               	movlw	low _services
 25465   0012BA  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25466   0012BC  6EF6               	movwf	tblptrl,c
 25467   0012BE  0EFF               	movlw	high _services
 25468   0012C0  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25469   0012C2  6EF7               	movwf	tblptrh,c
 25470   0012C4                     	if	1	;There are 3 active tblptr bytes
 25471   0012C4  6AF8               	clrf	tblptru,c
 25472   0012C6  0E00               	movlw	low (__mediumconst shr (0+16))
 25473   0012C8  22F8               	addwfc	tblptru,f,c
 25474   0012CA                     	endif
 25475   0012CA  0009               	tblrd		*+
 25476   0012CC  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25477   0012D0  0009               	tblrd		*+
 25478   0012D2  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25479   0012D6  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25480   0012DA  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25481   0012DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25482   0012DE  6AF8               	clrf	tblptru,c
 25483   0012E0                     	endif
 25484   0012E0                     	if	0	;tblptru may be non-zero
 25485   0012E0                     	endif
 25486   0012E0  0008               	tblrd		*
 25487   0012E2  C4F5 F529          	movff	tablat,sendMessage7@data4
 25488   0012E6  0E00               	movlw	0
 25489   0012E8  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 25490   0012EA  0E00               	movlw	0
 25491   0012EC  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 25492   0012EE  0E00               	movlw	0
 25493   0012F0  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 25494   0012F2  0EE7               	movlw	231
 25495   0012F4  ECFC  F03F         	call	_sendMessage7
 25496                           
 25497                           ;../../VLCBlib_PIC/mns.c: 540:                 } else {
 25498   0012F8  EF60  F005         	goto	l10143
 25499   0012FC                     l10355:
 25500                           
 25501                           ; BSR set to: 5
 25502                           ;../../VLCBlib_PIC/mns.c: 541:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 25503   0012FC  C590  F526         	movff	_nn+1,sendMessage7@data1
 25504   001300  C58F  F527         	movff	_nn,sendMessage7@data2
 25505   001304  EE20 F004          	lfsr	2,4
 25506   001308  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25507   00130A  26D9               	addwf	fsr2l,f,c
 25508   00130C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25509   00130E  22DA               	addwfc	fsr2h,f,c
 25510   001310  50DF               	movf	indf2,w,c
 25511   001312  6E28               	movwf	sendMessage7@data3^(0+1280),c
 25512   001314  EE20 F004          	lfsr	2,4
 25513   001318  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25514   00131A  26D9               	addwf	fsr2l,f,c
 25515   00131C  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25516   00131E  22DA               	addwfc	fsr2h,f,c
 25517   001320  50DF               	movf	indf2,w,c
 25518   001322  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 25519   001324  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 25520   001326  90D8               	bcf	status,0,c
 25521   001328  37D0               	rlcf	??_mnsProcessMessage& (0+255),f,b
 25522   00132A  37D1               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 25523   00132C  0EFE               	movlw	254
 25524   00132E  25D0               	addwf	??_mnsProcessMessage& (0+255),w,b
 25525   001330  6FD2               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 25526   001332  0EFF               	movlw	255
 25527   001334  21D1               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 25528   001336  6FD3               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 25529   001338  0E89               	movlw	low _services
 25530   00133A  25D2               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 25531   00133C  6EF6               	movwf	tblptrl,c
 25532   00133E  0EFF               	movlw	high _services
 25533   001340  21D3               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 25534   001342  6EF7               	movwf	tblptrh,c
 25535   001344                     	if	1	;There are 3 active tblptr bytes
 25536   001344  6AF8               	clrf	tblptru,c
 25537   001346  0E00               	movlw	low (__mediumconst shr (0+16))
 25538   001348  22F8               	addwfc	tblptru,f,c
 25539   00134A                     	endif
 25540   00134A  0009               	tblrd		*+
 25541   00134C  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+4
 25542   001350  0009               	tblrd		*+
 25543   001352  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+5
 25544   001356  C5D4  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 25545   00135A  C5D5  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 25546   00135E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25547   00135E  6AF8               	clrf	tblptru,c
 25548   001360                     	endif
 25549   001360                     	if	0	;tblptru may be non-zero
 25550   001360                     	endif
 25551   001360  0008               	tblrd		*
 25552   001362  C4F5 F529          	movff	tablat,sendMessage7@data4
 25553   001366  EE20 F004          	lfsr	2,4
 25554   00136A  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25555   00136C  26D9               	addwf	fsr2l,f,c
 25556   00136E  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25557   001370  22DA               	addwfc	fsr2h,f,c
 25558   001372  50DF               	movf	indf2,w,c
 25559   001374  6FD6               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 25560   001376  6BD7               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 25561   001378  90D8               	bcf	status,0,c
 25562   00137A  37D6               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 25563   00137C  37D7               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 25564   00137E  0EFE               	movlw	254
 25565   001380  25D6               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 25566   001382  6FD8               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 25567   001384  0EFF               	movlw	255
 25568   001386  21D7               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 25569   001388  6FD9               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 25570   00138A  0E89               	movlw	low _services
 25571   00138C  25D8               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 25572   00138E  6EF6               	movwf	tblptrl,c
 25573   001390  0EFF               	movlw	high _services
 25574   001392  21D9               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 25575   001394  6EF7               	movwf	tblptrh,c
 25576   001396                     	if	1	;There are 3 active tblptr bytes
 25577   001396  6AF8               	clrf	tblptru,c
 25578   001398  0E00               	movlw	low (__mediumconst shr (0+16))
 25579   00139A  22F8               	addwfc	tblptru,f,c
 25580   00139C                     	endif
 25581   00139C  0009               	tblrd		*+
 25582   00139E  C4F5 F5DA          	movff	tablat,??_mnsProcessMessage+10
 25583   0013A2  0009               	tblrd		*+
 25584   0013A4  C4F5 F5DB          	movff	tablat,??_mnsProcessMessage+11
 25585   0013A8  0E0A               	movlw	10
 25586   0013AA  27DA               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 25587   0013AC  0E00               	movlw	0
 25588   0013AE  23DB               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 25589   0013B0  C5DA  F4F6         	movff	??_mnsProcessMessage+10,tblptrl
 25590   0013B4  C5DB  F4F7         	movff	??_mnsProcessMessage+11,tblptrh
 25591   0013B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25592   0013B8  6AF8               	clrf	tblptru,c
 25593   0013BA                     	endif
 25594   0013BA                     	if	0	;tblptru may be non-zero
 25595   0013BA                     	endif
 25596   0013BA  0009               	tblrd		*+
 25597   0013BC  C4F5 F5DC          	movff	tablat,??_mnsProcessMessage+12
 25598   0013C0  0009               	tblrd		*+
 25599   0013C2  C4F5 F5DD          	movff	tablat,??_mnsProcessMessage+13
 25600   0013C6  D802               	call	u7708
 25601   0013C8  EFF0  F009         	goto	u7709
 25602   0013CC                     u7708:
 25603   0013CC  0005               	push	
 25604   0013CE  6EFA               	movwf	pclath,c
 25605   0013D0  51DC               	movf	(??_mnsProcessMessage+12)& (0+255),w,b
 25606   0013D2  6EFD               	movwf	tosl,c
 25607   0013D4  51DD               	movf	(??_mnsProcessMessage+13)& (0+255),w,b
 25608   0013D6  6EFE               	movwf	tosh,c
 25609   0013D8  6AFF               	clrf	tosu,c
 25610   0013DA  50FA               	movf	pclath,w,c
 25611   0013DC  0E01               	movlw	1
 25612   0013DE  0012               	return		;indir
 25613   0013E0                     u7709:
 25614   0013E0  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 25615   0013E2  EE20 F004          	lfsr	2,4
 25616   0013E6  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25617   0013E8  26D9               	addwf	fsr2l,f,c
 25618   0013EA  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25619   0013EC  22DA               	addwfc	fsr2h,f,c
 25620   0013EE  50DF               	movf	indf2,w,c
 25621   0013F0  0105               	movlb	5	; () banked
 25622   0013F2  6FDE               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 25623   0013F4  6BDF               	clrf	(??_mnsProcessMessage+15)& (0+255),b
 25624   0013F6  90D8               	bcf	status,0,c
 25625   0013F8  37DE               	rlcf	(??_mnsProcessMessage+14)& (0+255),f,b
 25626   0013FA  37DF               	rlcf	(??_mnsProcessMessage+15)& (0+255),f,b
 25627   0013FC  0EFE               	movlw	254
 25628   0013FE  25DE               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 25629   001400  6FE0               	movwf	(??_mnsProcessMessage+16)& (0+255),b
 25630   001402  0EFF               	movlw	255
 25631   001404  21DF               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 25632   001406  6FE1               	movwf	(??_mnsProcessMessage+17)& (0+255),b
 25633   001408  0E89               	movlw	low _services
 25634   00140A  25E0               	addwf	(??_mnsProcessMessage+16)& (0+255),w,b
 25635   00140C  6EF6               	movwf	tblptrl,c
 25636   00140E  0EFF               	movlw	high _services
 25637   001410  21E1               	addwfc	(??_mnsProcessMessage+17)& (0+255),w,b
 25638   001412  6EF7               	movwf	tblptrh,c
 25639   001414                     	if	1	;There are 3 active tblptr bytes
 25640   001414  6AF8               	clrf	tblptru,c
 25641   001416  0E00               	movlw	low (__mediumconst shr (0+16))
 25642   001418  22F8               	addwfc	tblptru,f,c
 25643   00141A                     	endif
 25644   00141A  0009               	tblrd		*+
 25645   00141C  C4F5 F5E2          	movff	tablat,??_mnsProcessMessage+18
 25646   001420  0009               	tblrd		*+
 25647   001422  C4F5 F5E3          	movff	tablat,??_mnsProcessMessage+19
 25648   001426  0E0A               	movlw	10
 25649   001428  27E2               	addwf	(??_mnsProcessMessage+18)& (0+255),f,b
 25650   00142A  0E00               	movlw	0
 25651   00142C  23E3               	addwfc	(??_mnsProcessMessage+19)& (0+255),f,b
 25652   00142E  C5E2  F4F6         	movff	??_mnsProcessMessage+18,tblptrl
 25653   001432  C5E3  F4F7         	movff	??_mnsProcessMessage+19,tblptrh
 25654   001436                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25655   001436  6AF8               	clrf	tblptru,c
 25656   001438                     	endif
 25657   001438                     	if	0	;tblptru may be non-zero
 25658   001438                     	endif
 25659   001438  0009               	tblrd		*+
 25660   00143A  C4F5 F5E4          	movff	tablat,??_mnsProcessMessage+20
 25661   00143E  0009               	tblrd		*+
 25662   001440  C4F5 F5E5          	movff	tablat,??_mnsProcessMessage+21
 25663   001444  D802               	call	u7718
 25664   001446  EF2F  F00A         	goto	u7719
 25665   00144A                     u7718:
 25666   00144A  0005               	push	
 25667   00144C  6EFA               	movwf	pclath,c
 25668   00144E  51E4               	movf	(??_mnsProcessMessage+20)& (0+255),w,b
 25669   001450  6EFD               	movwf	tosl,c
 25670   001452  51E5               	movf	(??_mnsProcessMessage+21)& (0+255),w,b
 25671   001454  6EFE               	movwf	tosh,c
 25672   001456  6AFF               	clrf	tosu,c
 25673   001458  50FA               	movf	pclath,w,c
 25674   00145A  0E02               	movlw	2
 25675   00145C  0012               	return		;indir
 25676   00145E                     u7719:
 25677   00145E  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 25678   001460  EE20 F004          	lfsr	2,4
 25679   001464  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25680   001466  26D9               	addwf	fsr2l,f,c
 25681   001468  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25682   00146A  22DA               	addwfc	fsr2h,f,c
 25683   00146C  50DF               	movf	indf2,w,c
 25684   00146E  0105               	movlb	5	; () banked
 25685   001470  6FE6               	movwf	(??_mnsProcessMessage+22)& (0+255),b
 25686   001472  6BE7               	clrf	(??_mnsProcessMessage+23)& (0+255),b
 25687   001474  90D8               	bcf	status,0,c
 25688   001476  37E6               	rlcf	(??_mnsProcessMessage+22)& (0+255),f,b
 25689   001478  37E7               	rlcf	(??_mnsProcessMessage+23)& (0+255),f,b
 25690   00147A  0EFE               	movlw	254
 25691   00147C  25E6               	addwf	(??_mnsProcessMessage+22)& (0+255),w,b
 25692   00147E  6FE8               	movwf	(??_mnsProcessMessage+24)& (0+255),b
 25693   001480  0EFF               	movlw	255
 25694   001482  21E7               	addwfc	(??_mnsProcessMessage+23)& (0+255),w,b
 25695   001484  6FE9               	movwf	(??_mnsProcessMessage+25)& (0+255),b
 25696   001486  0E89               	movlw	low _services
 25697   001488  25E8               	addwf	(??_mnsProcessMessage+24)& (0+255),w,b
 25698   00148A  6EF6               	movwf	tblptrl,c
 25699   00148C  0EFF               	movlw	high _services
 25700   00148E  21E9               	addwfc	(??_mnsProcessMessage+25)& (0+255),w,b
 25701   001490  6EF7               	movwf	tblptrh,c
 25702   001492                     	if	1	;There are 3 active tblptr bytes
 25703   001492  6AF8               	clrf	tblptru,c
 25704   001494  0E00               	movlw	low (__mediumconst shr (0+16))
 25705   001496  22F8               	addwfc	tblptru,f,c
 25706   001498                     	endif
 25707   001498  0009               	tblrd		*+
 25708   00149A  C4F5 F5EA          	movff	tablat,??_mnsProcessMessage+26
 25709   00149E  0009               	tblrd		*+
 25710   0014A0  C4F5 F5EB          	movff	tablat,??_mnsProcessMessage+27
 25711   0014A4  0E0A               	movlw	10
 25712   0014A6  27EA               	addwf	(??_mnsProcessMessage+26)& (0+255),f,b
 25713   0014A8  0E00               	movlw	0
 25714   0014AA  23EB               	addwfc	(??_mnsProcessMessage+27)& (0+255),f,b
 25715   0014AC  C5EA  F4F6         	movff	??_mnsProcessMessage+26,tblptrl
 25716   0014B0  C5EB  F4F7         	movff	??_mnsProcessMessage+27,tblptrh
 25717   0014B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25718   0014B4  6AF8               	clrf	tblptru,c
 25719   0014B6                     	endif
 25720   0014B6                     	if	0	;tblptru may be non-zero
 25721   0014B6                     	endif
 25722   0014B6  0009               	tblrd		*+
 25723   0014B8  C4F5 F5EC          	movff	tablat,??_mnsProcessMessage+28
 25724   0014BC  0009               	tblrd		*+
 25725   0014BE  C4F5 F5ED          	movff	tablat,??_mnsProcessMessage+29
 25726   0014C2  D802               	call	u7728
 25727   0014C4  EF6E  F00A         	goto	u7729
 25728   0014C8                     u7728:
 25729   0014C8  0005               	push	
 25730   0014CA  6EFA               	movwf	pclath,c
 25731   0014CC  51EC               	movf	(??_mnsProcessMessage+28)& (0+255),w,b
 25732   0014CE  6EFD               	movwf	tosl,c
 25733   0014D0  51ED               	movf	(??_mnsProcessMessage+29)& (0+255),w,b
 25734   0014D2  6EFE               	movwf	tosh,c
 25735   0014D4  6AFF               	clrf	tosu,c
 25736   0014D6  50FA               	movf	pclath,w,c
 25737   0014D8  0E03               	movlw	3
 25738   0014DA  0012               	return		;indir
 25739   0014DC                     u7729:
 25740   0014DC  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 25741   0014DE  0EE7               	movlw	231
 25742   0014E0  ECFC  F03F         	call	_sendMessage7
 25743   0014E4  EF60  F005         	goto	l10143
 25744   0014E8                     l10361:
 25745                           
 25746                           ; BSR set to: 5
 25747                           ;../../VLCBlib_PIC/mns.c: 551:             if (m->len < 4) {
 25748   0014E8  C554  F4D9         	movff	mnsProcessMessage@m,fsr2l
 25749   0014EC  C555  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 25750   0014F0  0E04               	movlw	4
 25751   0014F2  60DF               	cpfslt	indf2,c
 25752   0014F4  EF7E  F00A         	goto	u7731
 25753   0014F8  EF80  F00A         	goto	u7730
 25754   0014FC                     u7731:
 25755   0014FC  EF8F  F00A         	goto	l10369
 25756   001500                     u7730:
 25757   001500                     
 25758                           ; BSR set to: 5
 25759                           ;../../VLCBlib_PIC/mns.c: 552:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 25760   001500  C590  F526         	movff	_nn+1,sendMessage5@data1
 25761   001504  C58F  F527         	movff	_nn,sendMessage5@data2
 25762   001508  0E76               	movlw	118
 25763   00150A  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25764   00150C  0E01               	movlw	1
 25765   00150E  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25766   001510  0E01               	movlw	1
 25767   001512  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25768   001514  0EAF               	movlw	175
 25769   001516  EC11  F040         	call	_sendMessage5
 25770   00151A  EF60  F005         	goto	l10143
 25771   00151E                     l10369:
 25772                           
 25773                           ; BSR set to: 5
 25774                           ;../../VLCBlib_PIC/mns.c: 555:             newMode = m->bytes[2];
 25775   00151E  EE20 F004          	lfsr	2,4
 25776   001522  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 25777   001524  26D9               	addwf	fsr2l,f,c
 25778   001526  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 25779   001528  22DA               	addwfc	fsr2h,f,c
 25780   00152A  50DF               	movf	indf2,w,c
 25781   00152C  6E5A               	movwf	mnsProcessMessage@newMode^(0+1280),c
 25782   00152E                     
 25783                           ; BSR set to: 5
 25784                           ;../../VLCBlib_PIC/mns.c: 556:             previousNN.word = nn.word;
 25785   00152E  C58F  F58D         	movff	_nn,_previousNN
 25786   001532  C590  F58E         	movff	_nn+1,_previousNN+1
 25787                           
 25788                           ;../../VLCBlib_PIC/mns.c: 558:             switch (newMode) {
 25789   001536  EF32  F00B         	goto	l10435
 25790   00153A                     l10373:
 25791                           
 25792                           ; BSR set to: 5
 25793                           ;../../VLCBlib_PIC/mns.c: 561:                     if (mode_state == MODE_NORMAL) {
 25794   00153A  05A1               	decf	_mode_state& (0+255),w,b
 25795   00153C  A4D8               	btfss	status,2,c
 25796   00153E  EFA3  F00A         	goto	u7741
 25797   001542  EFA5  F00A         	goto	u7740
 25798   001546                     u7741:
 25799   001546  EFED  F005         	goto	l10169
 25800   00154A                     u7740:
 25801   00154A                     
 25802                           ; BSR set to: 5
 25803                           ;../../VLCBlib_PIC/mns.c: 562:                         sendMessage2((newMode == MODE_SET
      +                          UP) ? OPC_RQNN : OPC_NNREL, nn.bytes.hi, nn.bytes.lo);
 25804   00154A  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 25805   00154C  B4D8               	btfsc	status,2,c
 25806   00154E  EFAB  F00A         	goto	u7751
 25807   001552  EFAD  F00A         	goto	u7750
 25808   001556                     u7751:
 25809   001556  EFB1  F00A         	goto	l10379
 25810   00155A                     u7750:
 25811   00155A                     
 25812                           ; BSR set to: 5
 25813   00155A  0E51               	movlw	81
 25814   00155C  6E57               	movwf	_mnsProcessMessage$4475^(0+1280),c
 25815   00155E  EFB3  F00A         	goto	l10381
 25816   001562                     l10379:
 25817                           
 25818                           ; BSR set to: 5
 25819   001562  0E50               	movlw	80
 25820   001564  6E57               	movwf	_mnsProcessMessage$4475^(0+1280),c
 25821   001566                     l10381:
 25822                           
 25823                           ; BSR set to: 5
 25824   001566  C590  F526         	movff	_nn+1,sendMessage2@data1
 25825   00156A  C58F  F527         	movff	_nn,sendMessage2@data2
 25826   00156E  5057               	movf	_mnsProcessMessage$4475^(0+1280),w,c
 25827   001570  ECE7  F03F         	call	_sendMessage2
 25828   001574                     
 25829                           ;../../VLCBlib_PIC/mns.c: 563:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 25830   001574  C590  F526         	movff	_nn+1,sendMessage5@data1
 25831   001578  C58F  F527         	movff	_nn,sendMessage5@data2
 25832   00157C  0E76               	movlw	118
 25833   00157E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25834   001580  0E01               	movlw	1
 25835   001582  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25836   001584  0E00               	movlw	0
 25837   001586  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25838   001588  0EAF               	movlw	175
 25839   00158A  EC11  F040         	call	_sendMessage5
 25840   00158E                     
 25841                           ;../../VLCBlib_PIC/mns.c: 564:                         nn.bytes.lo = nn.bytes.hi = 0;
 25842   00158E  0105               	movlb	5	; () banked
 25843   001590  6B90               	clrf	(_nn+1)& (0+255),b
 25844   001592  6B8F               	clrf	_nn& (0+255),b
 25845   001594                     
 25846                           ; BSR set to: 5
 25847                           ;../../VLCBlib_PIC/mns.c: 565:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC +
      +                          1, nn.bytes.hi);
 25848   001594  0EFD               	movlw	253
 25849   001596  6E0E               	movwf	writeNVM@index^(0+1280),c
 25850   001598  0E03               	movlw	3
 25851   00159A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 25852   00159C  0E00               	movlw	0
 25853   00159E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 25854   0015A0  C590  F511         	movff	_nn+1,writeNVM@value
 25855   0015A4  0E00               	movlw	0
 25856   0015A6  EC91  F03B         	call	_writeNVM
 25857   0015AA                     
 25858                           ;../../VLCBlib_PIC/mns.c: 566:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC, 
      +                          nn.bytes.lo);
 25859   0015AA  0EFC               	movlw	252
 25860   0015AC  6E0E               	movwf	writeNVM@index^(0+1280),c
 25861   0015AE  0E03               	movlw	3
 25862   0015B0  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 25863   0015B2  0E00               	movlw	0
 25864   0015B4  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 25865   0015B6  C58F  F511         	movff	_nn,writeNVM@value
 25866   0015BA  0E00               	movlw	0
 25867   0015BC  EC91  F03B         	call	_writeNVM
 25868                           
 25869                           ;../../VLCBlib_PIC/mns.c: 568:                         mode_state = (newMode == MODE_SET
      +                          UP) ? MODE_SETUP : MODE_UNINITIALISED;
 25870   0015C0  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 25871   0015C2  B4D8               	btfsc	status,2,c
 25872   0015C4  EFE6  F00A         	goto	u7761
 25873   0015C8  EFE8  F00A         	goto	u7760
 25874   0015CC                     u7761:
 25875   0015CC  EFEC  F00A         	goto	l1372
 25876   0015D0                     u7760:
 25877   0015D0  0105               	movlb	5	; () banked
 25878   0015D2  69A1               	setf	_mode_state& (0+255),b
 25879   0015D4  EFEE  F00A         	goto	l10393
 25880   0015D8                     l1372:
 25881   0015D8  0105               	movlb	5	; () banked
 25882   0015DA  6BA1               	clrf	_mode_state& (0+255),b
 25883   0015DC                     l10393:
 25884                           
 25885                           ; BSR set to: 5
 25886                           ;../../VLCBlib_PIC/mns.c: 569:                         setupModePreviousMode = MODE_NORM
      +                          AL;
 25887   0015DC  0E01               	movlw	1
 25888   0015DE  6F9E               	movwf	_setupModePreviousMode& (0+255),b
 25889   0015E0  EF5E  F005         	goto	l10141
 25890   0015E4                     l10401:
 25891                           
 25892                           ; BSR set to: 5
 25893                           ;../../VLCBlib_PIC/mns.c: 576:                     mode_flags |= 4;
 25894   0015E4  85A4               	bsf	_mode_flags& (0+255),2,b
 25895   0015E6                     
 25896                           ; BSR set to: 5
 25897                           ;../../VLCBlib_PIC/mns.c: 577:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 25898   0015E6  C590  F526         	movff	_nn+1,sendMessage5@data1
 25899   0015EA  C58F  F527         	movff	_nn,sendMessage5@data2
 25900   0015EE  0E76               	movlw	118
 25901   0015F0  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25902   0015F2  0E01               	movlw	1
 25903   0015F4  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25904   0015F6  0E00               	movlw	0
 25905   0015F8  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25906   0015FA  0EAF               	movlw	175
 25907   0015FC  EC11  F040         	call	_sendMessage5
 25908   001600  EF60  F005         	goto	l10143
 25909   001604                     l10409:
 25910                           
 25911                           ; BSR set to: 5
 25912                           ;../../VLCBlib_PIC/mns.c: 580:                     mode_flags &= ~4;
 25913   001604  95A4               	bcf	_mode_flags& (0+255),2,b
 25914   001606                     
 25915                           ; BSR set to: 5
 25916                           ;../../VLCBlib_PIC/mns.c: 581:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 25917   001606  C590  F526         	movff	_nn+1,sendMessage5@data1
 25918   00160A  C58F  F527         	movff	_nn,sendMessage5@data2
 25919   00160E  0E76               	movlw	118
 25920   001610  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25921   001612  0E01               	movlw	1
 25922   001614  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25923   001616  0E00               	movlw	0
 25924   001618  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25925   00161A  0EAF               	movlw	175
 25926   00161C  EC11  F040         	call	_sendMessage5
 25927   001620  EF60  F005         	goto	l10143
 25928   001624                     l10417:
 25929                           
 25930                           ; BSR set to: 5
 25931                           ;../../VLCBlib_PIC/mns.c: 584:                     mode_flags |= 8;
 25932   001624  87A4               	bsf	_mode_flags& (0+255),3,b
 25933   001626                     
 25934                           ; BSR set to: 5
 25935                           ;../../VLCBlib_PIC/mns.c: 585:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 25936   001626  C590  F526         	movff	_nn+1,sendMessage5@data1
 25937   00162A  C58F  F527         	movff	_nn,sendMessage5@data2
 25938   00162E  0E76               	movlw	118
 25939   001630  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25940   001632  0E01               	movlw	1
 25941   001634  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25942   001636  0E00               	movlw	0
 25943   001638  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25944   00163A  0EAF               	movlw	175
 25945   00163C  EC11  F040         	call	_sendMessage5
 25946   001640  EF60  F005         	goto	l10143
 25947   001644                     l10425:
 25948                           
 25949                           ; BSR set to: 5
 25950                           ;../../VLCBlib_PIC/mns.c: 588:                     mode_flags &= ~8;
 25951   001644  97A4               	bcf	_mode_flags& (0+255),3,b
 25952   001646                     
 25953                           ; BSR set to: 5
 25954                           ;../../VLCBlib_PIC/mns.c: 589:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 25955   001646  C590  F526         	movff	_nn+1,sendMessage5@data1
 25956   00164A  C58F  F527         	movff	_nn,sendMessage5@data2
 25957   00164E  0E76               	movlw	118
 25958   001650  6E28               	movwf	sendMessage5@data3^(0+1280),c
 25959   001652  0E01               	movlw	1
 25960   001654  6E29               	movwf	sendMessage5@data4^(0+1280),c
 25961   001656  0E00               	movlw	0
 25962   001658  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 25963   00165A  0EAF               	movlw	175
 25964   00165C  EC11  F040         	call	_sendMessage5
 25965   001660  EF60  F005         	goto	l10143
 25966   001664                     l10435:
 25967                           
 25968                           ; BSR set to: 5
 25969   001664  505A               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 25970                           
 25971                           ; Switch size 1, requested type "simple"
 25972                           ; Number of cases is 6, Range of values is 0 to 255
 25973                           ; switch strategies available:
 25974                           ; Name         Instructions Cycles
 25975                           ; simple_byte           19    10 (average)
 25976                           ;	Chosen strategy is simple_byte
 25977   001666  0A00               	xorlw	0	; case 0
 25978   001668  B4D8               	btfsc	status,2,c
 25979   00166A  EF9D  F00A         	goto	l10373
 25980   00166E  0A0C               	xorlw	12	; case 12
 25981   001670  B4D8               	btfsc	status,2,c
 25982   001672  EFF2  F00A         	goto	l10401
 25983   001676  0A01               	xorlw	1	; case 13
 25984   001678  B4D8               	btfsc	status,2,c
 25985   00167A  EF02  F00B         	goto	l10409
 25986   00167E  0A1D               	xorlw	29	; case 16
 25987   001680  B4D8               	btfsc	status,2,c
 25988   001682  EF12  F00B         	goto	l10417
 25989   001686  0A01               	xorlw	1	; case 17
 25990   001688  B4D8               	btfsc	status,2,c
 25991   00168A  EF22  F00B         	goto	l10425
 25992   00168E  0AEE               	xorlw	238	; case 255
 25993   001690  B4D8               	btfsc	status,2,c
 25994   001692  EF9D  F00A         	goto	l10373
 25995   001696  EFED  F005         	goto	l10169
 25996   00169A                     l1381:
 25997                           
 25998                           ; BSR set to: 5
 25999   00169A  00FF               	reset		;# 
 26000   00169C  EF60  F005         	goto	l10143
 26001   0016A0                     l10447:
 26002                           
 26003                           ; BSR set to: 5
 26004   0016A0  EE20 F001          	lfsr	2,1
 26005   0016A4  5054               	movf	mnsProcessMessage@m^(0+1280),w,c
 26006   0016A6  26D9               	addwf	fsr2l,f,c
 26007   0016A8  5055               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 26008   0016AA  22DA               	addwfc	fsr2h,f,c
 26009   0016AC  50DF               	movf	indf2,w,c
 26010   0016AE  6FD0               	movwf	??_mnsProcessMessage& (0+255),b
 26011   0016B0  6BD1               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 26012                           
 26013                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26014                           ; Switch size 1, requested type "simple"
 26015                           ; Number of cases is 1, Range of values is 0 to 0
 26016                           ; switch strategies available:
 26017                           ; Name         Instructions Cycles
 26018                           ; simple_byte            4     3 (average)
 26019                           ;	Chosen strategy is simple_byte
 26020   0016B2  51D1               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 26021   0016B4  0A00               	xorlw	0	; case 0
 26022   0016B6  B4D8               	btfsc	status,2,c
 26023   0016B8  EF60  F00B         	goto	l11595
 26024   0016BC  EFED  F005         	goto	l10169
 26025   0016C0                     l11595:
 26026                           
 26027                           ; BSR set to: 5
 26028                           ; Switch size 1, requested type "simple"
 26029                           ; Number of cases is 6, Range of values is 79 to 135
 26030                           ; switch strategies available:
 26031                           ; Name         Instructions Cycles
 26032                           ; simple_byte           19    10 (average)
 26033                           ;	Chosen strategy is simple_byte
 26034   0016C0  51D0               	movf	??_mnsProcessMessage& (0+255),w,b
 26035   0016C2  0A4F               	xorlw	79	; case 79
 26036   0016C4  B4D8               	btfsc	status,2,c
 26037   0016C6  EF2C  F007         	goto	l1341
 26038   0016CA  0A11               	xorlw	17	; case 94
 26039   0016CC  B4D8               	btfsc	status,2,c
 26040   0016CE  EF4D  F00B         	goto	l1381
 26041   0016D2  0A2D               	xorlw	45	; case 115
 26042   0016D4  B4D8               	btfsc	status,2,c
 26043   0016D6  EFAD  F006         	goto	l10243
 26044   0016DA  0A05               	xorlw	5	; case 118
 26045   0016DC  B4D8               	btfsc	status,2,c
 26046   0016DE  EF74  F00A         	goto	l10361
 26047   0016E2  0A0E               	xorlw	14	; case 120
 26048   0016E4  B4D8               	btfsc	status,2,c
 26049   0016E6  EFAB  F008         	goto	l10327
 26050   0016EA  0AFF               	xorlw	255	; case 135
 26051   0016EC  B4D8               	btfsc	status,2,c
 26052   0016EE  EF6B  F007         	goto	l10281
 26053   0016F2  EFED  F005         	goto	l10169
 26054   0016F6                     l1313:
 26055   0016F6  0012               	return		;funcret
 26056   0016F8                     __end_of_mnsProcessMessage:
 26057                           	callstack 0
 26058                           
 26059 ;; *************** function _consumerProcessMessage *****************
 26060 ;; Defined at:
 26061 ;;		line 110 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 26062 ;; Parameters:    Size  Location     Type
 26063 ;;  m               2   83[COMRAM] PTR struct Message
 26064 ;;		 -> poll@m(9), 
 26065 ;; Auto vars:     Size  Location     Type
 26066 ;;  enn             2   88[COMRAM] unsigned short 
 26067 ;;  tableIndex      1   91[COMRAM] unsigned char 
 26068 ;;  ret             1   90[COMRAM] enum E23340
 26069 ;; Return value:  Size  Location     Type
 26070 ;;                  1    wreg      enum E23340
 26071 ;; Registers used:
 26072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26073 ;; Tracked objects:
 26074 ;;		On entry : 0/0
 26075 ;;		On exit  : 0/0
 26076 ;;		Unchanged: 0/0
 26077 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26078 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26079 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26080 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26081 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26082 ;;Total ram usage:        9 bytes
 26083 ;; Hardware stack levels used: 1
 26084 ;; Hardware stack levels required when called: 8
 26085 ;; This function calls:
 26086 ;;		_APP_processConsumedEvent
 26087 ;;		_consumerEventCheckLen
 26088 ;;		_findEvent
 26089 ;;		_isConsumedEvent
 26090 ;;		_sendMessage7
 26091 ;; This function is called by:
 26092 ;;		_poll
 26093 ;; This function uses a non-reentrant model
 26094 ;;
 26095                           
 26096                           	psect	text19
 26097   003CB8                     __ptext19:
 26098                           	callstack 0
 26099   003CB8                     _consumerProcessMessage:
 26100                           	callstack 117
 26101   003CB8                     
 26102                           ;../../VLCBlib_PIC/event_consumer_simple.c: 111:     Processed ret;;../../VLCBlib_PIC/ev
      +                          ent_consumer_simple.c: 112:     uint8_t tableIndex;;../../VLCBlib_PIC/event_consumer_sim
      +                          ple.c: 113:     uint16_t enn;;../../VLCBlib_PIC/event_consumer_simple.c: 116:     if (m-
      +                          >opc == OPC_MODE) {
 26103   003CB8  EE20 F001          	lfsr	2,1
 26104   003CBC  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26105   003CBE  26D9               	addwf	fsr2l,f,c
 26106   003CC0  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26107   003CC2  22DA               	addwfc	fsr2h,f,c
 26108   003CC4  0E76               	movlw	118
 26109   003CC6  18DE               	xorwf	postinc2,w,c
 26110   003CC8  A4D8               	btfss	status,2,c
 26111   003CCA  EF69  F01E         	goto	u6901
 26112   003CCE  EF6B  F01E         	goto	u6900
 26113   003CD2                     u6901:
 26114   003CD2  EFC4  F01E         	goto	l9725
 26115   003CD6                     u6900:
 26116   003CD6                     
 26117                           ;../../VLCBlib_PIC/event_consumer_simple.c: 117:         if (consumerEventCheckLen(m, 4)
      +                           == PROCESSED) return PROCESSED;
 26118   003CD6  C554  F531         	movff	consumerProcessMessage@m,consumerEventCheckLen@m
 26119   003CDA  C555  F532         	movff	consumerProcessMessage@m+1,consumerEventCheckLen@m+1
 26120   003CDE  0E04               	movlw	4
 26121   003CE0  6E33               	movwf	consumerEventCheckLen@needed^(0+1280),c
 26122   003CE2  ECE1  F040         	call	_consumerEventCheckLen	;wreg free
 26123   003CE6  06E8               	decf	wreg,f,c
 26124   003CE8  A4D8               	btfss	status,2,c
 26125   003CEA  EF79  F01E         	goto	u6911
 26126   003CEE  EF7B  F01E         	goto	u6910
 26127   003CF2                     u6911:
 26128   003CF2  EF7E  F01E         	goto	l9699
 26129   003CF6                     u6910:
 26130   003CF6                     l9695:
 26131   003CF6  0E01               	movlw	1
 26132   003CF8  EFCE  F01F         	goto	l801
 26133   003CFC                     l9699:
 26134                           
 26135                           ;../../VLCBlib_PIC/event_consumer_simple.c: 118:         if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 26136   003CFC  EE20 F002          	lfsr	2,2
 26137   003D00  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26138   003D02  26D9               	addwf	fsr2l,f,c
 26139   003D04  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26140   003D06  22DA               	addwfc	fsr2h,f,c
 26141   003D08  50DE               	movf	postinc2,w,c
 26142   003D0A  0105               	movlb	5	; () banked
 26143   003D0C  1990               	xorwf	(_nn+1)& (0+255),w,b
 26144   003D0E  A4D8               	btfss	status,2,c
 26145   003D10  EF8C  F01E         	goto	u6921
 26146   003D14  EF8E  F01E         	goto	u6920
 26147   003D18                     u6921:
 26148   003D18  EFC1  F01E         	goto	l9721
 26149   003D1C                     u6920:
 26150   003D1C                     
 26151                           ; BSR set to: 5
 26152   003D1C  EE20 F003          	lfsr	2,3
 26153   003D20  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26154   003D22  26D9               	addwf	fsr2l,f,c
 26155   003D24  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26156   003D26  22DA               	addwfc	fsr2h,f,c
 26157   003D28  518F               	movf	_nn& (0+255),w,b
 26158   003D2A  18DE               	xorwf	postinc2,w,c
 26159   003D2C  A4D8               	btfss	status,2,c
 26160   003D2E  EF9B  F01E         	goto	u6931
 26161   003D32  EF9D  F01E         	goto	u6930
 26162   003D36                     u6931:
 26163   003D36  EFC1  F01E         	goto	l9721
 26164   003D3A                     u6930:
 26165   003D3A                     
 26166                           ; BSR set to: 5
 26167                           ;../../VLCBlib_PIC/event_consumer_simple.c: 119:             if (m->bytes[2] == MODE_EVE
      +                          NT_ACK_ON) {
 26168   003D3A  EE20 F004          	lfsr	2,4
 26169   003D3E  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26170   003D40  26D9               	addwf	fsr2l,f,c
 26171   003D42  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26172   003D44  22DA               	addwfc	fsr2h,f,c
 26173   003D46  0E0A               	movlw	10
 26174   003D48  18DE               	xorwf	postinc2,w,c
 26175   003D4A  A4D8               	btfss	status,2,c
 26176   003D4C  EFAA  F01E         	goto	u6941
 26177   003D50  EFAC  F01E         	goto	u6940
 26178   003D54                     u6941:
 26179   003D54  EFAF  F01E         	goto	l9713
 26180   003D58                     u6940:
 26181   003D58                     
 26182                           ; BSR set to: 5
 26183                           ;../../VLCBlib_PIC/event_consumer_simple.c: 121:                 mode_flags |= 2;
 26184   003D58  83A4               	bsf	_mode_flags& (0+255),1,b
 26185   003D5A  EF7B  F01E         	goto	l9695
 26186   003D5E                     l9713:
 26187                           
 26188                           ; BSR set to: 5
 26189   003D5E  EE20 F004          	lfsr	2,4
 26190   003D62  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26191   003D64  26D9               	addwf	fsr2l,f,c
 26192   003D66  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26193   003D68  22DA               	addwfc	fsr2h,f,c
 26194   003D6A  0E0B               	movlw	11
 26195   003D6C  18DE               	xorwf	postinc2,w,c
 26196   003D6E  A4D8               	btfss	status,2,c
 26197   003D70  EFBC  F01E         	goto	u6951
 26198   003D74  EFBE  F01E         	goto	u6950
 26199   003D78                     u6951:
 26200   003D78  EFC1  F01E         	goto	l9721
 26201   003D7C                     u6950:
 26202   003D7C                     
 26203                           ; BSR set to: 5
 26204                           ;../../VLCBlib_PIC/event_consumer_simple.c: 125:                 mode_flags &= ~2;
 26205   003D7C  93A4               	bcf	_mode_flags& (0+255),1,b
 26206   003D7E  EF7B  F01E         	goto	l9695
 26207   003D82                     l9721:
 26208                           
 26209                           ;../../VLCBlib_PIC/event_consumer_simple.c: 129:         return NOT_PROCESSED;
 26210   003D82  0E00               	movlw	0
 26211   003D84  EFCE  F01F         	goto	l801
 26212   003D88                     l9725:
 26213                           
 26214                           ;../../VLCBlib_PIC/event_consumer_simple.c: 133:     if (m->len < 5) return NOT_PROCESSE
      +                          D;
 26215   003D88  C554  F4D9         	movff	consumerProcessMessage@m,fsr2l
 26216   003D8C  C555  F4DA         	movff	consumerProcessMessage@m+1,fsr2h
 26217   003D90  0E05               	movlw	5
 26218   003D92  60DF               	cpfslt	indf2,c
 26219   003D94  EFCE  F01E         	goto	u6961
 26220   003D98  EFD0  F01E         	goto	u6960
 26221   003D9C                     u6961:
 26222   003D9C  EFD2  F01E         	goto	l9731
 26223   003DA0                     u6960:
 26224   003DA0  EFC1  F01E         	goto	l9721
 26225   003DA4                     l9731:
 26226                           
 26227                           ;../../VLCBlib_PIC/event_consumer_simple.c: 135:     enn = ((uint16_t)m->bytes[0])*256+m
      +                          ->bytes[1];
 26228   003DA4  EE20 F003          	lfsr	2,3
 26229   003DA8  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26230   003DAA  26D9               	addwf	fsr2l,f,c
 26231   003DAC  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26232   003DAE  22DA               	addwfc	fsr2h,f,c
 26233   003DB0  50DF               	movf	indf2,w,c
 26234   003DB2  6E56               	movwf	??_consumerProcessMessage^(0+1280),c
 26235   003DB4  EE20 F002          	lfsr	2,2
 26236   003DB8  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26237   003DBA  26D9               	addwf	fsr2l,f,c
 26238   003DBC  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26239   003DBE  22DA               	addwfc	fsr2h,f,c
 26240   003DC0  50DF               	movf	indf2,w,c
 26241   003DC2  6E57               	movwf	(??_consumerProcessMessage+1)^(0+1280),c
 26242   003DC4  5056               	movf	??_consumerProcessMessage^(0+1280),w,c
 26243   003DC6  6E59               	movwf	consumerProcessMessage@enn^(0+1280),c
 26244   003DC8  C557  F55A         	movff	??_consumerProcessMessage+1,consumerProcessMessage@enn+1
 26245                           
 26246                           ;../../VLCBlib_PIC/event_consumer_simple.c: 137:     switch (m->opc) {
 26247   003DCC  EFF0  F01E         	goto	l9743
 26248   003DD0                     l810:
 26249   003DD0                     l9733:
 26250                           
 26251                           ;../../VLCBlib_PIC/event_consumer_simple.c: 144:   enn = 0;
 26252   003DD0  0E00               	movlw	0
 26253   003DD2  6E5A               	movwf	(consumerProcessMessage@enn+1)^(0+1280),c
 26254   003DD4  0E00               	movlw	0
 26255   003DD6  6E59               	movwf	consumerProcessMessage@enn^(0+1280),c
 26256   003DD8  EF43  F01F         	goto	l9745
 26257   003DDC                     l815:
 26258                           
 26259                           ;../../VLCBlib_PIC/event_consumer_simple.c: 152:             break;
 26260   003DDC  EF43  F01F         	goto	l9745
 26261   003DE0                     l9743:
 26262   003DE0  EE20 F001          	lfsr	2,1
 26263   003DE4  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26264   003DE6  26D9               	addwf	fsr2l,f,c
 26265   003DE8  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26266   003DEA  22DA               	addwfc	fsr2h,f,c
 26267   003DEC  50DF               	movf	indf2,w,c
 26268   003DEE  6E56               	movwf	??_consumerProcessMessage^(0+1280),c
 26269   003DF0  6A57               	clrf	(??_consumerProcessMessage+1)^(0+1280),c
 26270                           
 26271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26272                           ; Switch size 1, requested type "simple"
 26273                           ; Number of cases is 1, Range of values is 0 to 0
 26274                           ; switch strategies available:
 26275                           ; Name         Instructions Cycles
 26276                           ; simple_byte            4     3 (average)
 26277                           ;	Chosen strategy is simple_byte
 26278   003DF2  5057               	movf	(??_consumerProcessMessage+1)^(0+1280),w,c
 26279   003DF4  0A00               	xorlw	0	; case 0
 26280   003DF6  B4D8               	btfsc	status,2,c
 26281   003DF8  EF00  F01F         	goto	l11597
 26282   003DFC  EFC1  F01E         	goto	l9721
 26283   003E00                     l11597:
 26284                           
 26285                           ; Switch size 1, requested type "simple"
 26286                           ; Number of cases is 16, Range of values is 144 to 249
 26287                           ; switch strategies available:
 26288                           ; Name         Instructions Cycles
 26289                           ; simple_byte           49    25 (average)
 26290                           ;	Chosen strategy is simple_byte
 26291   003E00  5056               	movf	??_consumerProcessMessage^(0+1280),w,c
 26292   003E02  0A90               	xorlw	144	; case 144
 26293   003E04  B4D8               	btfsc	status,2,c
 26294   003E06  EFEE  F01E         	goto	l815
 26295   003E0A  0A01               	xorlw	1	; case 145
 26296   003E0C  B4D8               	btfsc	status,2,c
 26297   003E0E  EFEE  F01E         	goto	l815
 26298   003E12  0A09               	xorlw	9	; case 152
 26299   003E14  B4D8               	btfsc	status,2,c
 26300   003E16  EFE8  F01E         	goto	l810
 26301   003E1A  0A01               	xorlw	1	; case 153
 26302   003E1C  B4D8               	btfsc	status,2,c
 26303   003E1E  EFE8  F01E         	goto	l810
 26304   003E22  0A29               	xorlw	41	; case 176
 26305   003E24  B4D8               	btfsc	status,2,c
 26306   003E26  EF43  F01F         	goto	l9745
 26307   003E2A  0A01               	xorlw	1	; case 177
 26308   003E2C  B4D8               	btfsc	status,2,c
 26309   003E2E  EF43  F01F         	goto	l9745
 26310   003E32  0A09               	xorlw	9	; case 184
 26311   003E34  B4D8               	btfsc	status,2,c
 26312   003E36  EFE8  F01E         	goto	l9733
 26313   003E3A  0A01               	xorlw	1	; case 185
 26314   003E3C  B4D8               	btfsc	status,2,c
 26315   003E3E  EFE8  F01E         	goto	l9733
 26316   003E42  0A69               	xorlw	105	; case 208
 26317   003E44  B4D8               	btfsc	status,2,c
 26318   003E46  EF43  F01F         	goto	l9745
 26319   003E4A  0A01               	xorlw	1	; case 209
 26320   003E4C  B4D8               	btfsc	status,2,c
 26321   003E4E  EF43  F01F         	goto	l9745
 26322   003E52  0A09               	xorlw	9	; case 216
 26323   003E54  B4D8               	btfsc	status,2,c
 26324   003E56  EFE8  F01E         	goto	l9733
 26325   003E5A  0A01               	xorlw	1	; case 217
 26326   003E5C  B4D8               	btfsc	status,2,c
 26327   003E5E  EFE8  F01E         	goto	l9733
 26328   003E62  0A29               	xorlw	41	; case 240
 26329   003E64  B4D8               	btfsc	status,2,c
 26330   003E66  EF43  F01F         	goto	l9745
 26331   003E6A  0A01               	xorlw	1	; case 241
 26332   003E6C  B4D8               	btfsc	status,2,c
 26333   003E6E  EF43  F01F         	goto	l9745
 26334   003E72  0A09               	xorlw	9	; case 248
 26335   003E74  B4D8               	btfsc	status,2,c
 26336   003E76  EFE8  F01E         	goto	l9733
 26337   003E7A  0A01               	xorlw	1	; case 249
 26338   003E7C  B4D8               	btfsc	status,2,c
 26339   003E7E  EFE8  F01E         	goto	l9733
 26340   003E82  EFC1  F01E         	goto	l9721
 26341   003E86                     l9745:
 26342                           
 26343                           ;../../VLCBlib_PIC/event_consumer_simple.c: 172:     tableIndex = findEvent(enn, ((uint1
      +                          6_t)m->bytes[2])*256+m->bytes[3]);
 26344   003E86  C559  F522         	movff	consumerProcessMessage@enn,findEvent@nodeNumber
 26345   003E8A  C55A  F523         	movff	consumerProcessMessage@enn+1,findEvent@nodeNumber+1
 26346   003E8E  EE20 F005          	lfsr	2,5
 26347   003E92  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26348   003E94  26D9               	addwf	fsr2l,f,c
 26349   003E96  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26350   003E98  22DA               	addwfc	fsr2h,f,c
 26351   003E9A  50DF               	movf	indf2,w,c
 26352   003E9C  6E56               	movwf	??_consumerProcessMessage^(0+1280),c
 26353   003E9E  EE20 F004          	lfsr	2,4
 26354   003EA2  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26355   003EA4  26D9               	addwf	fsr2l,f,c
 26356   003EA6  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26357   003EA8  22DA               	addwfc	fsr2h,f,c
 26358   003EAA  50DF               	movf	indf2,w,c
 26359   003EAC  6E57               	movwf	(??_consumerProcessMessage+1)^(0+1280),c
 26360   003EAE  5056               	movf	??_consumerProcessMessage^(0+1280),w,c
 26361   003EB0  6E24               	movwf	findEvent@eventNumber^(0+1280),c
 26362   003EB2  C557  F525         	movff	??_consumerProcessMessage+1,findEvent@eventNumber+1
 26363   003EB6  EC70  F031         	call	_findEvent	;wreg free
 26364   003EBA  6E5C               	movwf	consumerProcessMessage@tableIndex^(0+1280),c
 26365   003EBC                     
 26366                           ;../../VLCBlib_PIC/event_consumer_simple.c: 173:     if (tableIndex == 0xff) return NOT_
      +                          PROCESSED;
 26367   003EBC  285C               	incf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26368   003EBE  A4D8               	btfss	status,2,c
 26369   003EC0  EF64  F01F         	goto	u6971
 26370   003EC4  EF66  F01F         	goto	u6970
 26371   003EC8                     u6971:
 26372   003EC8  EF68  F01F         	goto	l9753
 26373   003ECC                     u6970:
 26374   003ECC  EFC1  F01E         	goto	l9721
 26375   003ED0                     l9753:
 26376                           
 26377                           ;../../VLCBlib_PIC/event_consumer_simple.c: 175:     if (!isConsumedEvent(tableIndex)) {
 26378   003ED0  505C               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26379   003ED2  EC05  F041         	call	_isConsumedEvent
 26380   003ED6  0900               	iorlw	0
 26381   003ED8  A4D8               	btfss	status,2,c
 26382   003EDA  EF71  F01F         	goto	u6981
 26383   003EDE  EF73  F01F         	goto	u6980
 26384   003EE2                     u6981:
 26385   003EE2  EF75  F01F         	goto	l827
 26386   003EE6                     u6980:
 26387   003EE6  EFC1  F01E         	goto	l9721
 26388   003EEA                     l827:
 26389                           
 26390                           ;../../VLCBlib_PIC/event_consumer_simple.c: 183:     if ((mode_flags & 2) && (isConsumed
      +                          Event(tableIndex))) {
 26391   003EEA  0105               	movlb	5	; () banked
 26392   003EEC  A3A4               	btfss	_mode_flags& (0+255),1,b
 26393   003EEE  EF7B  F01F         	goto	u6991
 26394   003EF2  EF7D  F01F         	goto	u6990
 26395   003EF6                     u6991:
 26396   003EF6  EFBA  F01F         	goto	l9765
 26397   003EFA                     u6990:
 26398   003EFA                     
 26399                           ; BSR set to: 5
 26400   003EFA  505C               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26401   003EFC  EC05  F041         	call	_isConsumedEvent
 26402   003F00  0900               	iorlw	0
 26403   003F02  B4D8               	btfsc	status,2,c
 26404   003F04  EF86  F01F         	goto	u7001
 26405   003F08  EF88  F01F         	goto	u7000
 26406   003F0C                     u7001:
 26407   003F0C  EFBA  F01F         	goto	l9765
 26408   003F10                     u7000:
 26409   003F10                     
 26410                           ;../../VLCBlib_PIC/event_consumer_simple.c: 185:         sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, (uint8_t)(m->opc), m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]
      +                          );
 26411   003F10  C590  F526         	movff	_nn+1,sendMessage7@data1
 26412   003F14  C58F  F527         	movff	_nn,sendMessage7@data2
 26413   003F18  EE20 F001          	lfsr	2,1
 26414   003F1C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26415   003F1E  26D9               	addwf	fsr2l,f,c
 26416   003F20  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26417   003F22  22DA               	addwfc	fsr2h,f,c
 26418   003F24  50DF               	movf	indf2,w,c
 26419   003F26  6E28               	movwf	sendMessage7@data3^(0+1280),c
 26420   003F28  EE20 F002          	lfsr	2,2
 26421   003F2C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26422   003F2E  26D9               	addwf	fsr2l,f,c
 26423   003F30  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26424   003F32  22DA               	addwfc	fsr2h,f,c
 26425   003F34  50DF               	movf	indf2,w,c
 26426   003F36  6E29               	movwf	sendMessage7@data4^(0+1280),c
 26427   003F38  EE20 F003          	lfsr	2,3
 26428   003F3C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26429   003F3E  26D9               	addwf	fsr2l,f,c
 26430   003F40  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26431   003F42  22DA               	addwfc	fsr2h,f,c
 26432   003F44  50DF               	movf	indf2,w,c
 26433   003F46  6E2A               	movwf	sendMessage7@data5^(0+1280),c
 26434   003F48  EE20 F004          	lfsr	2,4
 26435   003F4C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26436   003F4E  26D9               	addwf	fsr2l,f,c
 26437   003F50  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26438   003F52  22DA               	addwfc	fsr2h,f,c
 26439   003F54  50DF               	movf	indf2,w,c
 26440   003F56  6E2B               	movwf	sendMessage7@data6^(0+1280),c
 26441   003F58  EE20 F005          	lfsr	2,5
 26442   003F5C  5054               	movf	consumerProcessMessage@m^(0+1280),w,c
 26443   003F5E  26D9               	addwf	fsr2l,f,c
 26444   003F60  5055               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 26445   003F62  22DA               	addwfc	fsr2h,f,c
 26446   003F64  50DF               	movf	indf2,w,c
 26447   003F66  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 26448   003F68  0EE6               	movlw	230
 26449   003F6A  ECFC  F03F         	call	_sendMessage7
 26450   003F6E                     
 26451                           ;../../VLCBlib_PIC/event_consumer_simple.c: 187:         consumerDiagnostics[2].asInt++;
 26452   003F6E  0105               	movlb	5	; () banked
 26453   003F70  4BC5               	infsnz	(_consumerDiagnostics+4)& (0+255),f,b
 26454   003F72  2BC6               	incf	(_consumerDiagnostics+5)& (0+255),f,b
 26455   003F74                     l9765:
 26456                           
 26457                           ;../../VLCBlib_PIC/event_consumer_simple.c: 195:     ret = APP_processConsumedEvent(tabl
      +                          eIndex, m);
 26458   003F74  C554  F51C         	movff	consumerProcessMessage@m,APP_processConsumedEvent@m
 26459   003F78  C555  F51D         	movff	consumerProcessMessage@m+1,APP_processConsumedEvent@m+1
 26460   003F7C  505C               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 26461   003F7E  EC8C  F02C         	call	_APP_processConsumedEvent
 26462   003F82  6E5B               	movwf	consumerProcessMessage@ret^(0+1280),c
 26463   003F84                     
 26464                           ;../../VLCBlib_PIC/event_consumer_simple.c: 196:     if (ret == PROCESSED) {
 26465   003F84  045B               	decf	consumerProcessMessage@ret^(0+1280),w,c
 26466   003F86  A4D8               	btfss	status,2,c
 26467   003F88  EFC8  F01F         	goto	u7011
 26468   003F8C  EFCA  F01F         	goto	u7010
 26469   003F90                     u7011:
 26470   003F90  EFCD  F01F         	goto	l9771
 26471   003F94                     u7010:
 26472   003F94                     
 26473                           ;../../VLCBlib_PIC/event_consumer_simple.c: 197:         consumerDiagnostics[1].asUint++
      +                          ;
 26474   003F94  0105               	movlb	5	; () banked
 26475   003F96  4BC3               	infsnz	(_consumerDiagnostics+2)& (0+255),f,b
 26476   003F98  2BC4               	incf	(_consumerDiagnostics+3)& (0+255),f,b
 26477   003F9A                     l9771:
 26478                           
 26479                           ;../../VLCBlib_PIC/event_consumer_simple.c: 199:     return ret;
 26480   003F9A  505B               	movf	consumerProcessMessage@ret^(0+1280),w,c
 26481   003F9C                     l801:
 26482   003F9C  0012               	return		;funcret
 26483   003F9E                     __end_of_consumerProcessMessage:
 26484                           	callstack 0
 26485                           
 26486 ;; *************** function _canProcessMessage *****************
 26487 ;; Defined at:
 26488 ;;		line 411 in file "../../VLCBlib_PIC/can18_can_2.c"
 26489 ;; Parameters:    Size  Location     Type
 26490 ;;  m               2   83[COMRAM] PTR struct Message
 26491 ;;		 -> poll@m(9), 
 26492 ;; Auto vars:     Size  Location     Type
 26493 ;;		None
 26494 ;; Return value:  Size  Location     Type
 26495 ;;                  1    wreg      enum E23507
 26496 ;; Registers used:
 26497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26498 ;; Tracked objects:
 26499 ;;		On entry : 0/0
 26500 ;;		On exit  : 0/0
 26501 ;;		Unchanged: 0/0
 26502 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26505 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26506 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26507 ;;Total ram usage:        4 bytes
 26508 ;; Hardware stack levels used: 1
 26509 ;; Hardware stack levels required when called: 6
 26510 ;; This function calls:
 26511 ;;		_sendMessage5
 26512 ;; This function is called by:
 26513 ;;		_poll
 26514 ;; This function uses a non-reentrant model
 26515 ;;
 26516                           
 26517                           	psect	text20
 26518   005BE0                     __ptext20:
 26519                           	callstack 0
 26520   005BE0                     _canProcessMessage:
 26521                           	callstack 119
 26522   005BE0                     
 26523                           ;../../VLCBlib_PIC/can18_can_2.c: 413:     if (m->len < 3) return NOT_PROCESSED;
 26524   005BE0  C554  F4D9         	movff	canProcessMessage@m,fsr2l
 26525   005BE4  C555  F4DA         	movff	canProcessMessage@m+1,fsr2h
 26526   005BE8  0E03               	movlw	3
 26527   005BEA  60DF               	cpfslt	indf2,c
 26528   005BEC  EFFA  F02D         	goto	u6801
 26529   005BF0  EFFC  F02D         	goto	u6800
 26530   005BF4                     u6801:
 26531   005BF4  EFFF  F02D         	goto	l9573
 26532   005BF8                     u6800:
 26533   005BF8                     l9569:
 26534   005BF8  0E00               	movlw	0
 26535   005BFA  EF5B  F02E         	goto	l624
 26536   005BFE                     l9573:
 26537                           
 26538                           ;../../VLCBlib_PIC/can18_can_2.c: 414:     if (m->bytes[0] != nn.bytes.hi) return NOT_PR
      +                          OCESSED;
 26539   005BFE  EE20 F002          	lfsr	2,2
 26540   005C02  5054               	movf	canProcessMessage@m^(0+1280),w,c
 26541   005C04  26D9               	addwf	fsr2l,f,c
 26542   005C06  5055               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 26543   005C08  22DA               	addwfc	fsr2h,f,c
 26544   005C0A  50DE               	movf	postinc2,w,c
 26545   005C0C  0105               	movlb	5	; () banked
 26546   005C0E  1990               	xorwf	(_nn+1)& (0+255),w,b
 26547   005C10  B4D8               	btfsc	status,2,c
 26548   005C12  EF0D  F02E         	goto	u6811
 26549   005C16  EF0F  F02E         	goto	u6810
 26550   005C1A                     u6811:
 26551   005C1A  EF11  F02E         	goto	l9579
 26552   005C1E                     u6810:
 26553   005C1E  EFFC  F02D         	goto	l9569
 26554   005C22                     l9579:
 26555                           
 26556                           ; BSR set to: 5
 26557                           ;../../VLCBlib_PIC/can18_can_2.c: 415:     if (m->bytes[1] != nn.bytes.lo) return NOT_PR
      +                          OCESSED;
 26558   005C22  EE20 F003          	lfsr	2,3
 26559   005C26  5054               	movf	canProcessMessage@m^(0+1280),w,c
 26560   005C28  26D9               	addwf	fsr2l,f,c
 26561   005C2A  5055               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 26562   005C2C  22DA               	addwfc	fsr2h,f,c
 26563   005C2E  518F               	movf	_nn& (0+255),w,b
 26564   005C30  18DE               	xorwf	postinc2,w,c
 26565   005C32  B4D8               	btfsc	status,2,c
 26566   005C34  EF1E  F02E         	goto	u6821
 26567   005C38  EF20  F02E         	goto	u6820
 26568   005C3C                     u6821:
 26569   005C3C  EF40  F02E         	goto	l9603
 26570   005C40                     u6820:
 26571   005C40  EFFC  F02D         	goto	l9569
 26572   005C44                     l9585:
 26573                           
 26574                           ;../../VLCBlib_PIC/can18_can_2.c: 421:             return PROCESSED;
 26575   005C44  0E01               	movlw	1
 26576   005C46  EF5B  F02E         	goto	l624
 26577   005C4A                     l9589:
 26578                           
 26579                           ; BSR set to: 5
 26580                           ;../../VLCBlib_PIC/can18_can_2.c: 423:             if (m->len < 4) {
 26581   005C4A  C554  F4D9         	movff	canProcessMessage@m,fsr2l
 26582   005C4E  C555  F4DA         	movff	canProcessMessage@m+1,fsr2h
 26583   005C52  0E04               	movlw	4
 26584   005C54  60DF               	cpfslt	indf2,c
 26585   005C56  EF2F  F02E         	goto	u6831
 26586   005C5A  EF31  F02E         	goto	u6830
 26587   005C5E                     u6831:
 26588   005C5E  EF22  F02E         	goto	l9585
 26589   005C62                     u6830:
 26590   005C62                     
 26591                           ; BSR set to: 5
 26592                           ;../../VLCBlib_PIC/can18_can_2.c: 425:                 sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_CANID, SERVICE_ID_MNS, CMDERR_INV_CMD);
 26593   005C62  C590  F526         	movff	_nn+1,sendMessage5@data1
 26594   005C66  C58F  F527         	movff	_nn,sendMessage5@data2
 26595   005C6A  0E75               	movlw	117
 26596   005C6C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 26597   005C6E  0E01               	movlw	1
 26598   005C70  6E29               	movwf	sendMessage5@data4^(0+1280),c
 26599   005C72  0E01               	movlw	1
 26600   005C74  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 26601   005C76  0EAF               	movlw	175
 26602   005C78  EC11  F040         	call	_sendMessage5
 26603   005C7C  EF22  F02E         	goto	l9585
 26604   005C80                     l9603:
 26605                           
 26606                           ; BSR set to: 5
 26607   005C80  EE20 F001          	lfsr	2,1
 26608   005C84  5054               	movf	canProcessMessage@m^(0+1280),w,c
 26609   005C86  26D9               	addwf	fsr2l,f,c
 26610   005C88  5055               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 26611   005C8A  22DA               	addwfc	fsr2h,f,c
 26612   005C8C  50DF               	movf	indf2,w,c
 26613   005C8E  6E56               	movwf	??_canProcessMessage^(0+1280),c
 26614   005C90  6A57               	clrf	(??_canProcessMessage+1)^(0+1280),c
 26615                           
 26616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26617                           ; Switch size 1, requested type "simple"
 26618                           ; Number of cases is 1, Range of values is 0 to 0
 26619                           ; switch strategies available:
 26620                           ; Name         Instructions Cycles
 26621                           ; simple_byte            4     3 (average)
 26622                           ;	Chosen strategy is simple_byte
 26623   005C92  5057               	movf	(??_canProcessMessage+1)^(0+1280),w,c
 26624   005C94  0A00               	xorlw	0	; case 0
 26625   005C96  B4D8               	btfsc	status,2,c
 26626   005C98  EF50  F02E         	goto	l11599
 26627   005C9C  EFFC  F02D         	goto	l9569
 26628   005CA0                     l11599:
 26629                           
 26630                           ; BSR set to: 5
 26631                           ; Switch size 1, requested type "simple"
 26632                           ; Number of cases is 2, Range of values is 93 to 117
 26633                           ; switch strategies available:
 26634                           ; Name         Instructions Cycles
 26635                           ; simple_byte            7     4 (average)
 26636                           ;	Chosen strategy is simple_byte
 26637   005CA0  5056               	movf	??_canProcessMessage^(0+1280),w,c
 26638   005CA2  0A5D               	xorlw	93	; case 93
 26639   005CA4  B4D8               	btfsc	status,2,c
 26640   005CA6  EF22  F02E         	goto	l9585
 26641   005CAA  0A28               	xorlw	40	; case 117
 26642   005CAC  B4D8               	btfsc	status,2,c
 26643   005CAE  EF25  F02E         	goto	l9589
 26644   005CB2  EFFC  F02D         	goto	l9569
 26645   005CB6                     l624:
 26646   005CB6  0012               	return		;funcret
 26647   005CB8                     __end_of_canProcessMessage:
 26648                           	callstack 0
 26649                           
 26650 ;; *************** function _bootProcessMessage *****************
 26651 ;; Defined at:
 26652 ;;		line 231 in file "../../VLCBlib_PIC/boot.c"
 26653 ;; Parameters:    Size  Location     Type
 26654 ;;  m               2   83[COMRAM] PTR struct Message
 26655 ;;		 -> poll@m(9), 
 26656 ;; Auto vars:     Size  Location     Type
 26657 ;;		None
 26658 ;; Return value:  Size  Location     Type
 26659 ;;                  1    wreg      enum E23340
 26660 ;; Registers used:
 26661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26662 ;; Tracked objects:
 26663 ;;		On entry : 0/0
 26664 ;;		On exit  : 0/0
 26665 ;;		Unchanged: 0/0
 26666 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26667 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26669 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26670 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26671 ;;Total ram usage:        4 bytes
 26672 ;; Hardware stack levels used: 1
 26673 ;; Hardware stack levels required when called: 6
 26674 ;; This function calls:
 26675 ;;		_writeNVM
 26676 ;; This function is called by:
 26677 ;;		_poll
 26678 ;; This function uses a non-reentrant model
 26679 ;;
 26680                           
 26681                           	psect	text21
 26682   006A96                     __ptext21:
 26683                           	callstack 0
 26684   006A96                     _bootProcessMessage:
 26685                           	callstack 119
 26686   006A96                     
 26687                           ;../../VLCBlib_PIC/boot.c: 233:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 26688   006A96  EE20 F002          	lfsr	2,2
 26689   006A9A  5054               	movf	bootProcessMessage@m^(0+1280),w,c
 26690   006A9C  26D9               	addwf	fsr2l,f,c
 26691   006A9E  5055               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 26692   006AA0  22DA               	addwfc	fsr2h,f,c
 26693   006AA2  50DE               	movf	postinc2,w,c
 26694   006AA4  0105               	movlb	5	; () banked
 26695   006AA6  1990               	xorwf	(_nn+1)& (0+255),w,b
 26696   006AA8  B4D8               	btfsc	status,2,c
 26697   006AAA  EF59  F035         	goto	u6751
 26698   006AAE  EF5B  F035         	goto	u6750
 26699   006AB2                     u6751:
 26700   006AB2  EF5E  F035         	goto	l9401
 26701   006AB6                     u6750:
 26702   006AB6                     l9397:
 26703                           
 26704                           ; BSR set to: 5
 26705   006AB6  0E00               	movlw	0
 26706   006AB8  EF95  F035         	goto	l345
 26707   006ABC                     l9401:
 26708                           
 26709                           ; BSR set to: 5
 26710                           ;../../VLCBlib_PIC/boot.c: 234:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 26711   006ABC  EE20 F003          	lfsr	2,3
 26712   006AC0  5054               	movf	bootProcessMessage@m^(0+1280),w,c
 26713   006AC2  26D9               	addwf	fsr2l,f,c
 26714   006AC4  5055               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 26715   006AC6  22DA               	addwfc	fsr2h,f,c
 26716   006AC8  518F               	movf	_nn& (0+255),w,b
 26717   006ACA  18DE               	xorwf	postinc2,w,c
 26718   006ACC  B4D8               	btfsc	status,2,c
 26719   006ACE  EF6B  F035         	goto	u6761
 26720   006AD2  EF6D  F035         	goto	u6760
 26721   006AD6                     u6761:
 26722   006AD6  EF7E  F035         	goto	l9419
 26723   006ADA                     u6760:
 26724   006ADA  EF5B  F035         	goto	l9397
 26725   006ADE                     l9407:
 26726                           
 26727                           ; BSR set to: 5
 26728                           ;../../VLCBlib_PIC/boot.c: 239:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 26729   006ADE  0EFF               	movlw	255
 26730   006AE0  6E0E               	movwf	writeNVM@index^(0+1280),c
 26731   006AE2  0E03               	movlw	3
 26732   006AE4  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 26733   006AE6  0E00               	movlw	0
 26734   006AE8  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 26735   006AEA  0EFF               	movlw	255
 26736   006AEC  6E11               	movwf	writeNVM@value^(0+1280),c
 26737   006AEE  0E00               	movlw	0
 26738   006AF0  EC91  F03B         	call	_writeNVM
 26739   006AF4  00FF               	reset		;# 
 26740   006AF6                     
 26741                           ;../../VLCBlib_PIC/boot.c: 241:             return PROCESSED;
 26742   006AF6  0E01               	movlw	1
 26743   006AF8  EF95  F035         	goto	l345
 26744   006AFC                     l9419:
 26745                           
 26746                           ; BSR set to: 5
 26747   006AFC  EE20 F001          	lfsr	2,1
 26748   006B00  5054               	movf	bootProcessMessage@m^(0+1280),w,c
 26749   006B02  26D9               	addwf	fsr2l,f,c
 26750   006B04  5055               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 26751   006B06  22DA               	addwfc	fsr2h,f,c
 26752   006B08  50DF               	movf	indf2,w,c
 26753   006B0A  6E56               	movwf	??_bootProcessMessage^(0+1280),c
 26754   006B0C  6A57               	clrf	(??_bootProcessMessage+1)^(0+1280),c
 26755                           
 26756                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26757                           ; Switch size 1, requested type "simple"
 26758                           ; Number of cases is 1, Range of values is 0 to 0
 26759                           ; switch strategies available:
 26760                           ; Name         Instructions Cycles
 26761                           ; simple_byte            4     3 (average)
 26762                           ;	Chosen strategy is simple_byte
 26763   006B0E  5057               	movf	(??_bootProcessMessage+1)^(0+1280),w,c
 26764   006B10  0A00               	xorlw	0	; case 0
 26765   006B12  B4D8               	btfsc	status,2,c
 26766   006B14  EF8E  F035         	goto	l11601
 26767   006B18  EF5B  F035         	goto	l9397
 26768   006B1C                     l11601:
 26769                           
 26770                           ; BSR set to: 5
 26771                           ; Switch size 1, requested type "simple"
 26772                           ; Number of cases is 1, Range of values is 92 to 92
 26773                           ; switch strategies available:
 26774                           ; Name         Instructions Cycles
 26775                           ; simple_byte            4     3 (average)
 26776                           ;	Chosen strategy is simple_byte
 26777   006B1C  5056               	movf	??_bootProcessMessage^(0+1280),w,c
 26778   006B1E  0A5C               	xorlw	92	; case 92
 26779   006B20  B4D8               	btfsc	status,2,c
 26780   006B22  EF6F  F035         	goto	l9407
 26781   006B26  EF5B  F035         	goto	l9397
 26782   006B2A                     l345:
 26783   006B2A  0012               	return		;funcret
 26784   006B2C                     __end_of_bootProcessMessage:
 26785                           	callstack 0
 26786                           
 26787 ;; *************** function _teachProcessMessage *****************
 26788 ;; Defined at:
 26789 ;;		line 221 in file "../../VLCBlib_PIC/event_teach_simple.c"
 26790 ;; Parameters:    Size  Location     Type
 26791 ;;  m               2   83[COMRAM] PTR struct Message
 26792 ;;		 -> poll@m(9), 
 26793 ;; Auto vars:     Size  Location     Type
 26794 ;;		None
 26795 ;; Return value:  Size  Location     Type
 26796 ;;                  1    wreg      enum E23340
 26797 ;; Registers used:
 26798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26799 ;; Tracked objects:
 26800 ;;		On entry : 0/0
 26801 ;;		On exit  : 0/0
 26802 ;;		Unchanged: 0/0
 26803 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26806 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26807 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26808 ;;Total ram usage:        8 bytes
 26809 ;; Hardware stack levels used: 1
 26810 ;; Hardware stack levels required when called: 10
 26811 ;; This function calls:
 26812 ;;		_doEvlrn
 26813 ;;		_doEvuln
 26814 ;;		_doNenrd
 26815 ;;		_doNerd
 26816 ;;		_doNnclr
 26817 ;;		_doNnevn
 26818 ;;		_doReqev
 26819 ;;		_doReval
 26820 ;;		_doRqevn
 26821 ;;		_sendMessage3
 26822 ;;		_sendMessage5
 26823 ;;		_teachCheckLen
 26824 ;; This function is called by:
 26825 ;;		_poll
 26826 ;; This function uses a non-reentrant model
 26827 ;;
 26828                           
 26829                           	psect	text22
 26830   0016F8                     __ptext22:
 26831                           	callstack 0
 26832   0016F8                     _teachProcessMessage:
 26833                           	callstack 115
 26834   0016F8                     
 26835                           ;../../VLCBlib_PIC/event_teach_simple.c: 222:     switch(m->opc) {
 26836   0016F8  EF20  F00F         	goto	l10059
 26837   0016FC                     l9801:
 26838                           
 26839                           ;../../VLCBlib_PIC/event_teach_simple.c: 225:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 26840   0016FC  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 26841   001700  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 26842   001704  0E03               	movlw	3
 26843   001706  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 26844   001708  0E00               	movlw	0
 26845   00170A  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 26846   00170C  ECC2  F037         	call	_teachCheckLen	;wreg free
 26847   001710  06E8               	decf	wreg,f,c
 26848   001712  A4D8               	btfss	status,2,c
 26849   001714  EF8E  F00B         	goto	u7031
 26850   001718  EF90  F00B         	goto	u7030
 26851   00171C                     u7031:
 26852   00171C  EF93  F00B         	goto	l9807
 26853   001720                     u7030:
 26854   001720                     l9803:
 26855   001720  0E01               	movlw	1
 26856   001722  EF67  F00F         	goto	l958
 26857   001726                     l9807:
 26858                           
 26859                           ;../../VLCBlib_PIC/event_teach_simple.c: 226:             if ((m->bytes[0] == nn.bytes.h
      +                          i) && (m->bytes[1] == nn.bytes.lo)) {
 26860   001726  EE20 F002          	lfsr	2,2
 26861   00172A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 26862   00172C  26D9               	addwf	fsr2l,f,c
 26863   00172E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 26864   001730  22DA               	addwfc	fsr2h,f,c
 26865   001732  50DE               	movf	postinc2,w,c
 26866   001734  0105               	movlb	5	; () banked
 26867   001736  1990               	xorwf	(_nn+1)& (0+255),w,b
 26868   001738  A4D8               	btfss	status,2,c
 26869   00173A  EFA1  F00B         	goto	u7041
 26870   00173E  EFA3  F00B         	goto	u7040
 26871   001742                     u7041:
 26872   001742  EFB5  F00B         	goto	l9813
 26873   001746                     u7040:
 26874   001746                     
 26875                           ; BSR set to: 5
 26876   001746  EE20 F003          	lfsr	2,3
 26877   00174A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 26878   00174C  26D9               	addwf	fsr2l,f,c
 26879   00174E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 26880   001750  22DA               	addwfc	fsr2h,f,c
 26881   001752  518F               	movf	_nn& (0+255),w,b
 26882   001754  18DE               	xorwf	postinc2,w,c
 26883   001756  A4D8               	btfss	status,2,c
 26884   001758  EFB0  F00B         	goto	u7051
 26885   00175C  EFB2  F00B         	goto	u7050
 26886   001760                     u7051:
 26887   001760  EFB5  F00B         	goto	l9813
 26888   001764                     u7050:
 26889   001764                     l9811:
 26890                           
 26891                           ; BSR set to: 5
 26892                           ;../../VLCBlib_PIC/event_teach_simple.c: 227:                 mode_flags |= 1;
 26893   001764  81A4               	bsf	_mode_flags& (0+255),0,b
 26894                           
 26895                           ;../../VLCBlib_PIC/event_teach_simple.c: 228:             } else {
 26896   001766  EF90  F00B         	goto	l9803
 26897   00176A                     l9813:
 26898                           
 26899                           ; BSR set to: 5
 26900                           ;../../VLCBlib_PIC/event_teach_simple.c: 229:                 mode_flags &= ~1;
 26901   00176A  91A4               	bcf	_mode_flags& (0+255),0,b
 26902   00176C  EF90  F00B         	goto	l9803
 26903   001770                     l9819:
 26904                           
 26905                           ;../../VLCBlib_PIC/event_teach_simple.c: 234:             if (teachCheckLen(m, 4, 0) == 
      +                          PROCESSED) return PROCESSED;
 26906   001770  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 26907   001774  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 26908   001778  0E04               	movlw	4
 26909   00177A  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 26910   00177C  0E00               	movlw	0
 26911   00177E  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 26912   001780  ECC2  F037         	call	_teachCheckLen	;wreg free
 26913   001784  06E8               	decf	wreg,f,c
 26914   001786  A4D8               	btfss	status,2,c
 26915   001788  EFC8  F00B         	goto	u7061
 26916   00178C  EFCA  F00B         	goto	u7060
 26917   001790                     u7061:
 26918   001790  EFCC  F00B         	goto	l9825
 26919   001794                     u7060:
 26920   001794  EF90  F00B         	goto	l9803
 26921   001798                     l9825:
 26922                           
 26923                           ;../../VLCBlib_PIC/event_teach_simple.c: 235:             if ((m->bytes[0] == nn.bytes.h
      +                          i) && (m->bytes[1] == nn.bytes.lo)) {
 26924   001798  EE20 F002          	lfsr	2,2
 26925   00179C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 26926   00179E  26D9               	addwf	fsr2l,f,c
 26927   0017A0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 26928   0017A2  22DA               	addwfc	fsr2h,f,c
 26929   0017A4  50DE               	movf	postinc2,w,c
 26930   0017A6  0105               	movlb	5	; () banked
 26931   0017A8  1990               	xorwf	(_nn+1)& (0+255),w,b
 26932   0017AA  A4D8               	btfss	status,2,c
 26933   0017AC  EFDA  F00B         	goto	u7071
 26934   0017B0  EFDC  F00B         	goto	u7070
 26935   0017B4                     u7071:
 26936   0017B4  EF0D  F00C         	goto	l9847
 26937   0017B8                     u7070:
 26938   0017B8                     
 26939                           ; BSR set to: 5
 26940   0017B8  EE20 F003          	lfsr	2,3
 26941   0017BC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 26942   0017BE  26D9               	addwf	fsr2l,f,c
 26943   0017C0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 26944   0017C2  22DA               	addwfc	fsr2h,f,c
 26945   0017C4  518F               	movf	_nn& (0+255),w,b
 26946   0017C6  18DE               	xorwf	postinc2,w,c
 26947   0017C8  A4D8               	btfss	status,2,c
 26948   0017CA  EFE9  F00B         	goto	u7081
 26949   0017CE  EFEB  F00B         	goto	u7080
 26950   0017D2                     u7081:
 26951   0017D2  EF0D  F00C         	goto	l9847
 26952   0017D6                     u7080:
 26953   0017D6                     
 26954                           ; BSR set to: 5
 26955                           ;../../VLCBlib_PIC/event_teach_simple.c: 236:                 if (m->bytes[2] == MODE_LE
      +                          ARN_ON) {
 26956   0017D6  EE20 F004          	lfsr	2,4
 26957   0017DA  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 26958   0017DC  26D9               	addwf	fsr2l,f,c
 26959   0017DE  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 26960   0017E0  22DA               	addwfc	fsr2h,f,c
 26961   0017E2  0E08               	movlw	8
 26962   0017E4  18DE               	xorwf	postinc2,w,c
 26963   0017E6  A4D8               	btfss	status,2,c
 26964   0017E8  EFF8  F00B         	goto	u7091
 26965   0017EC  EFFA  F00B         	goto	u7090
 26966   0017F0                     u7091:
 26967   0017F0  EFFC  F00B         	goto	l9839
 26968   0017F4                     u7090:
 26969   0017F4  EFB2  F00B         	goto	l9811
 26970   0017F8                     l9839:
 26971                           
 26972                           ; BSR set to: 5
 26973   0017F8  EE20 F004          	lfsr	2,4
 26974   0017FC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 26975   0017FE  26D9               	addwf	fsr2l,f,c
 26976   001800  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 26977   001802  22DA               	addwfc	fsr2h,f,c
 26978   001804  0E09               	movlw	9
 26979   001806  18DE               	xorwf	postinc2,w,c
 26980   001808  A4D8               	btfss	status,2,c
 26981   00180A  EF09  F00C         	goto	u7101
 26982   00180E  EF0B  F00C         	goto	u7100
 26983   001812                     u7101:
 26984   001812  EF0E  F00C         	goto	l9849
 26985   001816                     u7100:
 26986   001816  EFB5  F00B         	goto	l9813
 26987   00181A                     l9847:
 26988                           
 26989                           ; BSR set to: 5
 26990                           ;../../VLCBlib_PIC/event_teach_simple.c: 247:                 mode_flags &= ~1;
 26991   00181A  91A4               	bcf	_mode_flags& (0+255),0,b
 26992   00181C                     l9849:
 26993                           
 26994                           ;../../VLCBlib_PIC/event_teach_simple.c: 249:             return NOT_PROCESSED;
 26995   00181C  0E00               	movlw	0
 26996   00181E  EF67  F00F         	goto	l958
 26997   001822                     l9853:
 26998                           
 26999                           ;../../VLCBlib_PIC/event_teach_simple.c: 253:             if (teachCheckLen(m, 7, 1) == 
      +                          PROCESSED) {
 27000   001822  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27001   001826  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27002   00182A  0E07               	movlw	7
 27003   00182C  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27004   00182E  0E01               	movlw	1
 27005   001830  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27006   001832  ECC2  F037         	call	_teachCheckLen	;wreg free
 27007   001836  06E8               	decf	wreg,f,c
 27008   001838  A4D8               	btfss	status,2,c
 27009   00183A  EF21  F00C         	goto	u7111
 27010   00183E  EF23  F00C         	goto	u7110
 27011   001842                     u7111:
 27012   001842  EF2E  F00C         	goto	l969
 27013   001846                     u7110:
 27014   001846                     
 27015                           ;../../VLCBlib_PIC/event_teach_simple.c: 254:                 sendMessage3(OPC_CMDERR, n
      +                          n.bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 27016   001846  C590  F526         	movff	_nn+1,sendMessage3@data1
 27017   00184A  C58F  F527         	movff	_nn,sendMessage3@data2
 27018   00184E  0E01               	movlw	1
 27019   001850  6E28               	movwf	sendMessage3@data3^(0+1280),c
 27020   001852  0E6F               	movlw	111
 27021   001854  ECD2  F03F         	call	_sendMessage3
 27022   001858  EF90  F00B         	goto	l9803
 27023   00185C                     l969:
 27024                           
 27025                           ;../../VLCBlib_PIC/event_teach_simple.c: 258:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 27026   00185C  0105               	movlb	5	; () banked
 27027   00185E  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27028   001860  EF34  F00C         	goto	u7121
 27029   001864  EF36  F00C         	goto	u7120
 27030   001868                     u7121:
 27031   001868  EF38  F00C         	goto	l9865
 27032   00186C                     u7120:
 27033   00186C  EF90  F00B         	goto	l9803
 27034   001870                     l9865:
 27035                           
 27036                           ; BSR set to: 5
 27037                           ;../../VLCBlib_PIC/event_teach_simple.c: 260:             doEvlrn((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[
      +                          5]);
 27038   001870  EE20 F003          	lfsr	2,3
 27039   001874  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27040   001876  26D9               	addwf	fsr2l,f,c
 27041   001878  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27042   00187A  22DA               	addwfc	fsr2h,f,c
 27043   00187C  50DF               	movf	indf2,w,c
 27044   00187E  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27045   001880  EE20 F002          	lfsr	2,2
 27046   001884  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27047   001886  26D9               	addwf	fsr2l,f,c
 27048   001888  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27049   00188A  22DA               	addwfc	fsr2h,f,c
 27050   00188C  50DF               	movf	indf2,w,c
 27051   00188E  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27052   001890  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27053   001892  6E4E               	movwf	doEvlrn@nodeNumber^(0+1280),c
 27054   001894  C557  F54F         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 27055   001898  EE20 F005          	lfsr	2,5
 27056   00189C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27057   00189E  26D9               	addwf	fsr2l,f,c
 27058   0018A0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27059   0018A2  22DA               	addwfc	fsr2h,f,c
 27060   0018A4  50DF               	movf	indf2,w,c
 27061   0018A6  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27062   0018A8  EE20 F004          	lfsr	2,4
 27063   0018AC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27064   0018AE  26D9               	addwf	fsr2l,f,c
 27065   0018B0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27066   0018B2  22DA               	addwfc	fsr2h,f,c
 27067   0018B4  50DF               	movf	indf2,w,c
 27068   0018B6  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27069   0018B8  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27070   0018BA  6E50               	movwf	doEvlrn@eventNumber^(0+1280),c
 27071   0018BC  C55A  F551         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 27072   0018C0  EE20 F006          	lfsr	2,6
 27073   0018C4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27074   0018C6  26D9               	addwf	fsr2l,f,c
 27075   0018C8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27076   0018CA  22DA               	addwfc	fsr2h,f,c
 27077   0018CC  50DF               	movf	indf2,w,c
 27078   0018CE  6E52               	movwf	doEvlrn@evNum^(0+1280),c
 27079   0018D0  EE20 F007          	lfsr	2,7
 27080   0018D4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27081   0018D6  26D9               	addwf	fsr2l,f,c
 27082   0018D8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27083   0018DA  22DA               	addwfc	fsr2h,f,c
 27084   0018DC  50DF               	movf	indf2,w,c
 27085   0018DE  6E53               	movwf	doEvlrn@evVal^(0+1280),c
 27086   0018E0  ECC7  F02E         	call	_doEvlrn	;wreg free
 27087   0018E4  EF90  F00B         	goto	l9803
 27088   0018E8                     l9871:
 27089                           
 27090                           ;../../VLCBlib_PIC/event_teach_simple.c: 263:             if (teachCheckLen(m, 5, 1) == 
      +                          PROCESSED) return PROCESSED;
 27091   0018E8  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27092   0018EC  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27093   0018F0  0E05               	movlw	5
 27094   0018F2  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27095   0018F4  0E01               	movlw	1
 27096   0018F6  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27097   0018F8  ECC2  F037         	call	_teachCheckLen	;wreg free
 27098   0018FC  06E8               	decf	wreg,f,c
 27099   0018FE  A4D8               	btfss	status,2,c
 27100   001900  EF84  F00C         	goto	u7131
 27101   001904  EF86  F00C         	goto	u7130
 27102   001908                     u7131:
 27103   001908  EF88  F00C         	goto	l972
 27104   00190C                     u7130:
 27105   00190C  EF90  F00B         	goto	l9803
 27106   001910                     l972:
 27107                           
 27108                           ;../../VLCBlib_PIC/event_teach_simple.c: 264:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 27109   001910  0105               	movlb	5	; () banked
 27110   001912  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27111   001914  EF8E  F00C         	goto	u7141
 27112   001918  EF90  F00C         	goto	u7140
 27113   00191C                     u7141:
 27114   00191C  EF92  F00C         	goto	l9881
 27115   001920                     u7140:
 27116   001920  EF90  F00B         	goto	l9803
 27117   001924                     l9881:
 27118                           
 27119                           ; BSR set to: 5
 27120                           ;../../VLCBlib_PIC/event_teach_simple.c: 266:             doEvuln((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 27121   001924  EE20 F003          	lfsr	2,3
 27122   001928  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27123   00192A  26D9               	addwf	fsr2l,f,c
 27124   00192C  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27125   00192E  22DA               	addwfc	fsr2h,f,c
 27126   001930  50DF               	movf	indf2,w,c
 27127   001932  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27128   001934  EE20 F002          	lfsr	2,2
 27129   001938  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27130   00193A  26D9               	addwf	fsr2l,f,c
 27131   00193C  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27132   00193E  22DA               	addwfc	fsr2h,f,c
 27133   001940  50DF               	movf	indf2,w,c
 27134   001942  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27135   001944  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27136   001946  6E3B               	movwf	doEvuln@nodeNumber^(0+1280),c
 27137   001948  C557  F53C         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 27138   00194C  EE20 F005          	lfsr	2,5
 27139   001950  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27140   001952  26D9               	addwf	fsr2l,f,c
 27141   001954  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27142   001956  22DA               	addwfc	fsr2h,f,c
 27143   001958  50DF               	movf	indf2,w,c
 27144   00195A  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27145   00195C  EE20 F004          	lfsr	2,4
 27146   001960  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27147   001962  26D9               	addwf	fsr2l,f,c
 27148   001964  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27149   001966  22DA               	addwfc	fsr2h,f,c
 27150   001968  50DF               	movf	indf2,w,c
 27151   00196A  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27152   00196C  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27153   00196E  6E3D               	movwf	doEvuln@eventNumber^(0+1280),c
 27154   001970  C55A  F53E         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 27155   001974  EC44  F038         	call	_doEvuln	;wreg free
 27156   001978  EF90  F00B         	goto	l9803
 27157   00197C                     l9887:
 27158                           
 27159                           ;../../VLCBlib_PIC/event_teach_simple.c: 269:             if (teachCheckLen(m, 6, 1) == 
      +                          PROCESSED) return PROCESSED;
 27160   00197C  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27161   001980  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27162   001984  0E06               	movlw	6
 27163   001986  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27164   001988  0E01               	movlw	1
 27165   00198A  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27166   00198C  ECC2  F037         	call	_teachCheckLen	;wreg free
 27167   001990  06E8               	decf	wreg,f,c
 27168   001992  A4D8               	btfss	status,2,c
 27169   001994  EFCE  F00C         	goto	u7151
 27170   001998  EFD0  F00C         	goto	u7150
 27171   00199C                     u7151:
 27172   00199C  EFD2  F00C         	goto	l975
 27173   0019A0                     u7150:
 27174   0019A0  EF90  F00B         	goto	l9803
 27175   0019A4                     l975:
 27176                           
 27177                           ;../../VLCBlib_PIC/event_teach_simple.c: 270:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 27178   0019A4  0105               	movlb	5	; () banked
 27179   0019A6  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27180   0019A8  EFD8  F00C         	goto	u7161
 27181   0019AC  EFDA  F00C         	goto	u7160
 27182   0019B0                     u7161:
 27183   0019B0  EFDC  F00C         	goto	l9897
 27184   0019B4                     u7160:
 27185   0019B4  EF90  F00B         	goto	l9803
 27186   0019B8                     l9897:
 27187                           
 27188                           ; BSR set to: 5
 27189                           ;../../VLCBlib_PIC/event_teach_simple.c: 272:             doReqev((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 27190   0019B8  EE20 F003          	lfsr	2,3
 27191   0019BC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27192   0019BE  26D9               	addwf	fsr2l,f,c
 27193   0019C0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27194   0019C2  22DA               	addwfc	fsr2h,f,c
 27195   0019C4  50DF               	movf	indf2,w,c
 27196   0019C6  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27197   0019C8  EE20 F002          	lfsr	2,2
 27198   0019CC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27199   0019CE  26D9               	addwf	fsr2l,f,c
 27200   0019D0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27201   0019D2  22DA               	addwfc	fsr2h,f,c
 27202   0019D4  50DF               	movf	indf2,w,c
 27203   0019D6  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27204   0019D8  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27205   0019DA  6E2F               	movwf	doReqev@nodeNumber^(0+1280),c
 27206   0019DC  C557  F530         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 27207   0019E0  EE20 F005          	lfsr	2,5
 27208   0019E4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27209   0019E6  26D9               	addwf	fsr2l,f,c
 27210   0019E8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27211   0019EA  22DA               	addwfc	fsr2h,f,c
 27212   0019EC  50DF               	movf	indf2,w,c
 27213   0019EE  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27214   0019F0  EE20 F004          	lfsr	2,4
 27215   0019F4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27216   0019F6  26D9               	addwf	fsr2l,f,c
 27217   0019F8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27218   0019FA  22DA               	addwfc	fsr2h,f,c
 27219   0019FC  50DF               	movf	indf2,w,c
 27220   0019FE  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27221   001A00  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27222   001A02  6E31               	movwf	doReqev@eventNumber^(0+1280),c
 27223   001A04  C55A  F532         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 27224   001A08  EE20 F006          	lfsr	2,6
 27225   001A0C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27226   001A0E  26D9               	addwf	fsr2l,f,c
 27227   001A10  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27228   001A12  22DA               	addwfc	fsr2h,f,c
 27229   001A14  50DF               	movf	indf2,w,c
 27230   001A16  6E33               	movwf	doReqev@evNum^(0+1280),c
 27231   001A18  EC96  F025         	call	_doReqev	;wreg free
 27232   001A1C  EF90  F00B         	goto	l9803
 27233   001A20                     l9903:
 27234                           
 27235                           ;../../VLCBlib_PIC/event_teach_simple.c: 276:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27236   001A20  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27237   001A24  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27238   001A28  0E03               	movlw	3
 27239   001A2A  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27240   001A2C  0E00               	movlw	0
 27241   001A2E  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27242   001A30  ECC2  F037         	call	_teachCheckLen	;wreg free
 27243   001A34  06E8               	decf	wreg,f,c
 27244   001A36  A4D8               	btfss	status,2,c
 27245   001A38  EF20  F00D         	goto	u7171
 27246   001A3C  EF22  F00D         	goto	u7170
 27247   001A40                     u7171:
 27248   001A40  EF24  F00D         	goto	l9909
 27249   001A44                     u7170:
 27250   001A44  EF90  F00B         	goto	l9803
 27251   001A48                     l9909:
 27252                           
 27253                           ;../../VLCBlib_PIC/event_teach_simple.c: 277:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27254   001A48  EE20 F002          	lfsr	2,2
 27255   001A4C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27256   001A4E  26D9               	addwf	fsr2l,f,c
 27257   001A50  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27258   001A52  22DA               	addwfc	fsr2h,f,c
 27259   001A54  50DE               	movf	postinc2,w,c
 27260   001A56  0105               	movlb	5	; () banked
 27261   001A58  1990               	xorwf	(_nn+1)& (0+255),w,b
 27262   001A5A  A4D8               	btfss	status,2,c
 27263   001A5C  EF32  F00D         	goto	u7181
 27264   001A60  EF34  F00D         	goto	u7180
 27265   001A64                     u7181:
 27266   001A64  EF90  F00B         	goto	l9803
 27267   001A68                     u7180:
 27268   001A68                     
 27269                           ; BSR set to: 5
 27270   001A68  EE20 F003          	lfsr	2,3
 27271   001A6C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27272   001A6E  26D9               	addwf	fsr2l,f,c
 27273   001A70  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27274   001A72  22DA               	addwfc	fsr2h,f,c
 27275   001A74  518F               	movf	_nn& (0+255),w,b
 27276   001A76  18DE               	xorwf	postinc2,w,c
 27277   001A78  B4D8               	btfsc	status,2,c
 27278   001A7A  EF41  F00D         	goto	u7191
 27279   001A7E  EF43  F00D         	goto	u7190
 27280   001A82                     u7191:
 27281   001A82  EFB5  F00B         	goto	l9813
 27282   001A86                     u7190:
 27283   001A86  EF90  F00B         	goto	l9803
 27284   001A8A                     l9923:
 27285                           
 27286                           ;../../VLCBlib_PIC/event_teach_simple.c: 282:             if (teachCheckLen(m, 3, 1) == 
      +                          PROCESSED) return PROCESSED;
 27287   001A8A  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27288   001A8E  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27289   001A92  0E03               	movlw	3
 27290   001A94  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27291   001A96  0E01               	movlw	1
 27292   001A98  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27293   001A9A  ECC2  F037         	call	_teachCheckLen	;wreg free
 27294   001A9E  06E8               	decf	wreg,f,c
 27295   001AA0  A4D8               	btfss	status,2,c
 27296   001AA2  EF55  F00D         	goto	u7201
 27297   001AA6  EF57  F00D         	goto	u7200
 27298   001AAA                     u7201:
 27299   001AAA  EF59  F00D         	goto	l9929
 27300   001AAE                     u7200:
 27301   001AAE  EF90  F00B         	goto	l9803
 27302   001AB2                     l9929:
 27303                           
 27304                           ;../../VLCBlib_PIC/event_teach_simple.c: 283:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27305   001AB2  EE20 F002          	lfsr	2,2
 27306   001AB6  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27307   001AB8  26D9               	addwf	fsr2l,f,c
 27308   001ABA  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27309   001ABC  22DA               	addwfc	fsr2h,f,c
 27310   001ABE  50DE               	movf	postinc2,w,c
 27311   001AC0  0105               	movlb	5	; () banked
 27312   001AC2  1990               	xorwf	(_nn+1)& (0+255),w,b
 27313   001AC4  A4D8               	btfss	status,2,c
 27314   001AC6  EF67  F00D         	goto	u7211
 27315   001ACA  EF69  F00D         	goto	u7210
 27316   001ACE                     u7211:
 27317   001ACE  EF90  F00B         	goto	l9803
 27318   001AD2                     u7210:
 27319   001AD2                     
 27320                           ; BSR set to: 5
 27321   001AD2  EE20 F003          	lfsr	2,3
 27322   001AD6  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27323   001AD8  26D9               	addwf	fsr2l,f,c
 27324   001ADA  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27325   001ADC  22DA               	addwfc	fsr2h,f,c
 27326   001ADE  518F               	movf	_nn& (0+255),w,b
 27327   001AE0  18DE               	xorwf	postinc2,w,c
 27328   001AE2  B4D8               	btfsc	status,2,c
 27329   001AE4  EF76  F00D         	goto	u7221
 27330   001AE8  EF78  F00D         	goto	u7220
 27331   001AEC                     u7221:
 27332   001AEC  EF7A  F00D         	goto	l984
 27333   001AF0                     u7220:
 27334   001AF0  EF90  F00B         	goto	l9803
 27335   001AF4                     l984:
 27336                           
 27337                           ; BSR set to: 5
 27338                           ;../../VLCBlib_PIC/event_teach_simple.c: 285:             if (! (mode_flags & 1)) {
 27339   001AF4  B1A4               	btfsc	_mode_flags& (0+255),0,b
 27340   001AF6  EF7F  F00D         	goto	u7231
 27341   001AFA  EF81  F00D         	goto	u7230
 27342   001AFE                     u7231:
 27343   001AFE  EF99  F00D         	goto	l9943
 27344   001B02                     u7230:
 27345   001B02                     
 27346                           ; BSR set to: 5
 27347                           ;../../VLCBlib_PIC/event_teach_simple.c: 286:                 sendMessage3(OPC_CMDERR, n
      +                          n.bytes.hi, nn.bytes.lo, CMDERR_NOT_LRN);
 27348   001B02  C590  F526         	movff	_nn+1,sendMessage3@data1
 27349   001B06  C58F  F527         	movff	_nn,sendMessage3@data2
 27350   001B0A  0E02               	movlw	2
 27351   001B0C  6E28               	movwf	sendMessage3@data3^(0+1280),c
 27352   001B0E  0E6F               	movlw	111
 27353   001B10  ECD2  F03F         	call	_sendMessage3
 27354                           
 27355                           ;../../VLCBlib_PIC/event_teach_simple.c: 288:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 27356   001B14  C590  F526         	movff	_nn+1,sendMessage5@data1
 27357   001B18  C58F  F527         	movff	_nn,sendMessage5@data2
 27358   001B1C  0E55               	movlw	85
 27359   001B1E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 27360   001B20  0E04               	movlw	4
 27361   001B22  6E29               	movwf	sendMessage5@data4^(0+1280),c
 27362   001B24  0E02               	movlw	2
 27363   001B26  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 27364   001B28  0EAF               	movlw	175
 27365   001B2A  EC11  F040         	call	_sendMessage5
 27366   001B2E  EF90  F00B         	goto	l9803
 27367   001B32                     l9943:
 27368                           
 27369                           ; BSR set to: 5
 27370                           ;../../VLCBlib_PIC/event_teach_simple.c: 293:             doNnclr();
 27371   001B32  EC7A  F03F         	call	_doNnclr	;wreg free
 27372                           
 27373                           ;../../VLCBlib_PIC/event_teach_simple.c: 294:             break;
 27374   001B36  EF0E  F00C         	goto	l9849
 27375   001B3A                     l9945:
 27376                           
 27377                           ;../../VLCBlib_PIC/event_teach_simple.c: 296:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27378   001B3A  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27379   001B3E  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27380   001B42  0E03               	movlw	3
 27381   001B44  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27382   001B46  0E00               	movlw	0
 27383   001B48  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27384   001B4A  ECC2  F037         	call	_teachCheckLen	;wreg free
 27385   001B4E  06E8               	decf	wreg,f,c
 27386   001B50  A4D8               	btfss	status,2,c
 27387   001B52  EFAD  F00D         	goto	u7241
 27388   001B56  EFAF  F00D         	goto	u7240
 27389   001B5A                     u7241:
 27390   001B5A  EFB1  F00D         	goto	l9951
 27391   001B5E                     u7240:
 27392   001B5E  EF90  F00B         	goto	l9803
 27393   001B62                     l9951:
 27394                           
 27395                           ;../../VLCBlib_PIC/event_teach_simple.c: 297:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27396   001B62  EE20 F002          	lfsr	2,2
 27397   001B66  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27398   001B68  26D9               	addwf	fsr2l,f,c
 27399   001B6A  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27400   001B6C  22DA               	addwfc	fsr2h,f,c
 27401   001B6E  50DE               	movf	postinc2,w,c
 27402   001B70  0105               	movlb	5	; () banked
 27403   001B72  1990               	xorwf	(_nn+1)& (0+255),w,b
 27404   001B74  A4D8               	btfss	status,2,c
 27405   001B76  EFBF  F00D         	goto	u7251
 27406   001B7A  EFC1  F00D         	goto	u7250
 27407   001B7E                     u7251:
 27408   001B7E  EF90  F00B         	goto	l9803
 27409   001B82                     u7250:
 27410   001B82                     
 27411                           ; BSR set to: 5
 27412   001B82  EE20 F003          	lfsr	2,3
 27413   001B86  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27414   001B88  26D9               	addwf	fsr2l,f,c
 27415   001B8A  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27416   001B8C  22DA               	addwfc	fsr2h,f,c
 27417   001B8E  518F               	movf	_nn& (0+255),w,b
 27418   001B90  18DE               	xorwf	postinc2,w,c
 27419   001B92  B4D8               	btfsc	status,2,c
 27420   001B94  EFCE  F00D         	goto	u7261
 27421   001B98  EFD0  F00D         	goto	u7260
 27422   001B9C                     u7261:
 27423   001B9C  EFD2  F00D         	goto	l9959
 27424   001BA0                     u7260:
 27425   001BA0  EF90  F00B         	goto	l9803
 27426   001BA4                     l9959:
 27427                           
 27428                           ; BSR set to: 5
 27429                           ;../../VLCBlib_PIC/event_teach_simple.c: 299:             doNerd();
 27430   001BA4  ECC9  F040         	call	_doNerd	;wreg free
 27431   001BA8  EF90  F00B         	goto	l9803
 27432   001BAC                     l9965:
 27433                           
 27434                           ;../../VLCBlib_PIC/event_teach_simple.c: 302:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27435   001BAC  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27436   001BB0  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27437   001BB4  0E03               	movlw	3
 27438   001BB6  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27439   001BB8  0E00               	movlw	0
 27440   001BBA  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27441   001BBC  ECC2  F037         	call	_teachCheckLen	;wreg free
 27442   001BC0  06E8               	decf	wreg,f,c
 27443   001BC2  A4D8               	btfss	status,2,c
 27444   001BC4  EFE6  F00D         	goto	u7271
 27445   001BC8  EFE8  F00D         	goto	u7270
 27446   001BCC                     u7271:
 27447   001BCC  EFEA  F00D         	goto	l9971
 27448   001BD0                     u7270:
 27449   001BD0  EF90  F00B         	goto	l9803
 27450   001BD4                     l9971:
 27451                           
 27452                           ;../../VLCBlib_PIC/event_teach_simple.c: 303:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27453   001BD4  EE20 F002          	lfsr	2,2
 27454   001BD8  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27455   001BDA  26D9               	addwf	fsr2l,f,c
 27456   001BDC  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27457   001BDE  22DA               	addwfc	fsr2h,f,c
 27458   001BE0  50DE               	movf	postinc2,w,c
 27459   001BE2  0105               	movlb	5	; () banked
 27460   001BE4  1990               	xorwf	(_nn+1)& (0+255),w,b
 27461   001BE6  A4D8               	btfss	status,2,c
 27462   001BE8  EFF8  F00D         	goto	u7281
 27463   001BEC  EFFA  F00D         	goto	u7280
 27464   001BF0                     u7281:
 27465   001BF0  EF90  F00B         	goto	l9803
 27466   001BF4                     u7280:
 27467   001BF4                     
 27468                           ; BSR set to: 5
 27469   001BF4  EE20 F003          	lfsr	2,3
 27470   001BF8  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27471   001BFA  26D9               	addwf	fsr2l,f,c
 27472   001BFC  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27473   001BFE  22DA               	addwfc	fsr2h,f,c
 27474   001C00  518F               	movf	_nn& (0+255),w,b
 27475   001C02  18DE               	xorwf	postinc2,w,c
 27476   001C04  B4D8               	btfsc	status,2,c
 27477   001C06  EF07  F00E         	goto	u7291
 27478   001C0A  EF09  F00E         	goto	u7290
 27479   001C0E                     u7291:
 27480   001C0E  EF0B  F00E         	goto	l9979
 27481   001C12                     u7290:
 27482   001C12  EF90  F00B         	goto	l9803
 27483   001C16                     l9979:
 27484                           
 27485                           ; BSR set to: 5
 27486                           ;../../VLCBlib_PIC/event_teach_simple.c: 305:             doNnevn();
 27487   001C16  EC3E  F03D         	call	_doNnevn	;wreg free
 27488   001C1A  EF90  F00B         	goto	l9803
 27489   001C1E                     l9985:
 27490                           
 27491                           ;../../VLCBlib_PIC/event_teach_simple.c: 308:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 27492   001C1E  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27493   001C22  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27494   001C26  0E03               	movlw	3
 27495   001C28  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27496   001C2A  0E00               	movlw	0
 27497   001C2C  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27498   001C2E  ECC2  F037         	call	_teachCheckLen	;wreg free
 27499   001C32  06E8               	decf	wreg,f,c
 27500   001C34  A4D8               	btfss	status,2,c
 27501   001C36  EF1F  F00E         	goto	u7301
 27502   001C3A  EF21  F00E         	goto	u7300
 27503   001C3E                     u7301:
 27504   001C3E  EF23  F00E         	goto	l9991
 27505   001C42                     u7300:
 27506   001C42  EF90  F00B         	goto	l9803
 27507   001C46                     l9991:
 27508                           
 27509                           ;../../VLCBlib_PIC/event_teach_simple.c: 309:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27510   001C46  EE20 F002          	lfsr	2,2
 27511   001C4A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27512   001C4C  26D9               	addwf	fsr2l,f,c
 27513   001C4E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27514   001C50  22DA               	addwfc	fsr2h,f,c
 27515   001C52  50DE               	movf	postinc2,w,c
 27516   001C54  0105               	movlb	5	; () banked
 27517   001C56  1990               	xorwf	(_nn+1)& (0+255),w,b
 27518   001C58  A4D8               	btfss	status,2,c
 27519   001C5A  EF31  F00E         	goto	u7311
 27520   001C5E  EF33  F00E         	goto	u7310
 27521   001C62                     u7311:
 27522   001C62  EF90  F00B         	goto	l9803
 27523   001C66                     u7310:
 27524   001C66                     
 27525                           ; BSR set to: 5
 27526   001C66  EE20 F003          	lfsr	2,3
 27527   001C6A  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27528   001C6C  26D9               	addwf	fsr2l,f,c
 27529   001C6E  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27530   001C70  22DA               	addwfc	fsr2h,f,c
 27531   001C72  518F               	movf	_nn& (0+255),w,b
 27532   001C74  18DE               	xorwf	postinc2,w,c
 27533   001C76  B4D8               	btfsc	status,2,c
 27534   001C78  EF40  F00E         	goto	u7321
 27535   001C7C  EF42  F00E         	goto	u7320
 27536   001C80                     u7321:
 27537   001C80  EF44  F00E         	goto	l9999
 27538   001C84                     u7320:
 27539   001C84  EF90  F00B         	goto	l9803
 27540   001C88                     l9999:
 27541                           
 27542                           ; BSR set to: 5
 27543                           ;../../VLCBlib_PIC/event_teach_simple.c: 311:             doRqevn();
 27544   001C88  EC18  F03D         	call	_doRqevn	;wreg free
 27545   001C8C  EF90  F00B         	goto	l9803
 27546   001C90                     l10005:
 27547                           
 27548                           ;../../VLCBlib_PIC/event_teach_simple.c: 314:             if (teachCheckLen(m, 4, 0) == 
      +                          PROCESSED) return PROCESSED;
 27549   001C90  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27550   001C94  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27551   001C98  0E04               	movlw	4
 27552   001C9A  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27553   001C9C  0E00               	movlw	0
 27554   001C9E  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27555   001CA0  ECC2  F037         	call	_teachCheckLen	;wreg free
 27556   001CA4  06E8               	decf	wreg,f,c
 27557   001CA6  A4D8               	btfss	status,2,c
 27558   001CA8  EF58  F00E         	goto	u7331
 27559   001CAC  EF5A  F00E         	goto	u7330
 27560   001CB0                     u7331:
 27561   001CB0  EF5C  F00E         	goto	l10011
 27562   001CB4                     u7330:
 27563   001CB4  EF90  F00B         	goto	l9803
 27564   001CB8                     l10011:
 27565                           
 27566                           ;../../VLCBlib_PIC/event_teach_simple.c: 315:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27567   001CB8  EE20 F002          	lfsr	2,2
 27568   001CBC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27569   001CBE  26D9               	addwf	fsr2l,f,c
 27570   001CC0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27571   001CC2  22DA               	addwfc	fsr2h,f,c
 27572   001CC4  50DE               	movf	postinc2,w,c
 27573   001CC6  0105               	movlb	5	; () banked
 27574   001CC8  1990               	xorwf	(_nn+1)& (0+255),w,b
 27575   001CCA  A4D8               	btfss	status,2,c
 27576   001CCC  EF6A  F00E         	goto	u7341
 27577   001CD0  EF6C  F00E         	goto	u7340
 27578   001CD4                     u7341:
 27579   001CD4  EF90  F00B         	goto	l9803
 27580   001CD8                     u7340:
 27581   001CD8                     
 27582                           ; BSR set to: 5
 27583   001CD8  EE20 F003          	lfsr	2,3
 27584   001CDC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27585   001CDE  26D9               	addwf	fsr2l,f,c
 27586   001CE0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27587   001CE2  22DA               	addwfc	fsr2h,f,c
 27588   001CE4  518F               	movf	_nn& (0+255),w,b
 27589   001CE6  18DE               	xorwf	postinc2,w,c
 27590   001CE8  B4D8               	btfsc	status,2,c
 27591   001CEA  EF79  F00E         	goto	u7351
 27592   001CEE  EF7B  F00E         	goto	u7350
 27593   001CF2                     u7351:
 27594   001CF2  EF7D  F00E         	goto	l10019
 27595   001CF6                     u7350:
 27596   001CF6  EF90  F00B         	goto	l9803
 27597   001CFA                     l10019:
 27598                           
 27599                           ; BSR set to: 5
 27600                           ;../../VLCBlib_PIC/event_teach_simple.c: 317:             doNenrd(m->bytes[2]);
 27601   001CFA  EE20 F004          	lfsr	2,4
 27602   001CFE  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27603   001D00  26D9               	addwf	fsr2l,f,c
 27604   001D02  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27605   001D04  22DA               	addwfc	fsr2h,f,c
 27606   001D06  50DF               	movf	indf2,w,c
 27607   001D08  EC03  F038         	call	_doNenrd
 27608   001D0C  EF90  F00B         	goto	l9803
 27609   001D10                     l10025:
 27610                           
 27611                           ;../../VLCBlib_PIC/event_teach_simple.c: 320:             if (teachCheckLen(m, 5, 0) == 
      +                          PROCESSED) return PROCESSED;
 27612   001D10  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27613   001D14  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27614   001D18  0E05               	movlw	5
 27615   001D1A  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27616   001D1C  0E00               	movlw	0
 27617   001D1E  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27618   001D20  ECC2  F037         	call	_teachCheckLen	;wreg free
 27619   001D24  06E8               	decf	wreg,f,c
 27620   001D26  A4D8               	btfss	status,2,c
 27621   001D28  EF98  F00E         	goto	u7361
 27622   001D2C  EF9A  F00E         	goto	u7360
 27623   001D30                     u7361:
 27624   001D30  EF9C  F00E         	goto	l10031
 27625   001D34                     u7360:
 27626   001D34  EF90  F00B         	goto	l9803
 27627   001D38                     l10031:
 27628                           
 27629                           ;../../VLCBlib_PIC/event_teach_simple.c: 321:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 27630   001D38  EE20 F002          	lfsr	2,2
 27631   001D3C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27632   001D3E  26D9               	addwf	fsr2l,f,c
 27633   001D40  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27634   001D42  22DA               	addwfc	fsr2h,f,c
 27635   001D44  50DE               	movf	postinc2,w,c
 27636   001D46  0105               	movlb	5	; () banked
 27637   001D48  1990               	xorwf	(_nn+1)& (0+255),w,b
 27638   001D4A  A4D8               	btfss	status,2,c
 27639   001D4C  EFAA  F00E         	goto	u7371
 27640   001D50  EFAC  F00E         	goto	u7370
 27641   001D54                     u7371:
 27642   001D54  EF90  F00B         	goto	l9803
 27643   001D58                     u7370:
 27644   001D58                     
 27645                           ; BSR set to: 5
 27646   001D58  EE20 F003          	lfsr	2,3
 27647   001D5C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27648   001D5E  26D9               	addwf	fsr2l,f,c
 27649   001D60  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27650   001D62  22DA               	addwfc	fsr2h,f,c
 27651   001D64  518F               	movf	_nn& (0+255),w,b
 27652   001D66  18DE               	xorwf	postinc2,w,c
 27653   001D68  B4D8               	btfsc	status,2,c
 27654   001D6A  EFB9  F00E         	goto	u7381
 27655   001D6E  EFBB  F00E         	goto	u7380
 27656   001D72                     u7381:
 27657   001D72  EFBD  F00E         	goto	l10039
 27658   001D76                     u7380:
 27659   001D76  EF90  F00B         	goto	l9803
 27660   001D7A                     l10039:
 27661                           
 27662                           ; BSR set to: 5
 27663                           ;../../VLCBlib_PIC/event_teach_simple.c: 323:             doReval(m->bytes[2], m->bytes[
      +                          3]);
 27664   001D7A  EE20 F005          	lfsr	2,5
 27665   001D7E  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27666   001D80  26D9               	addwf	fsr2l,f,c
 27667   001D82  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27668   001D84  22DA               	addwfc	fsr2h,f,c
 27669   001D86  50DF               	movf	indf2,w,c
 27670   001D88  6E2C               	movwf	doReval@evNum^(0+1280),c
 27671   001D8A  EE20 F004          	lfsr	2,4
 27672   001D8E  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27673   001D90  26D9               	addwf	fsr2l,f,c
 27674   001D92  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27675   001D94  22DA               	addwfc	fsr2h,f,c
 27676   001D96  50DF               	movf	indf2,w,c
 27677   001D98  EC07  F02D         	call	_doReval
 27678   001D9C  EF90  F00B         	goto	l9803
 27679   001DA0                     l10045:
 27680                           
 27681                           ;../../VLCBlib_PIC/event_teach_simple.c: 326:             if (teachCheckLen(m, 8, 1) == 
      +                          PROCESSED) return PROCESSED;
 27682   001DA0  C554  F531         	movff	teachProcessMessage@m,teachCheckLen@m
 27683   001DA4  C555  F532         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 27684   001DA8  0E08               	movlw	8
 27685   001DAA  6E33               	movwf	teachCheckLen@needed^(0+1280),c
 27686   001DAC  0E01               	movlw	1
 27687   001DAE  6E34               	movwf	teachCheckLen@learn^(0+1280),c
 27688   001DB0  ECC2  F037         	call	_teachCheckLen	;wreg free
 27689   001DB4  06E8               	decf	wreg,f,c
 27690   001DB6  A4D8               	btfss	status,2,c
 27691   001DB8  EFE0  F00E         	goto	u7391
 27692   001DBC  EFE2  F00E         	goto	u7390
 27693   001DC0                     u7391:
 27694   001DC0  EFE4  F00E         	goto	l10051
 27695   001DC4                     u7390:
 27696   001DC4  EF90  F00B         	goto	l9803
 27697   001DC8                     l10051:
 27698                           
 27699                           ;../../VLCBlib_PIC/event_teach_simple.c: 328:             doEvlrn((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[
      +                          6]);
 27700   001DC8  EE20 F003          	lfsr	2,3
 27701   001DCC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27702   001DCE  26D9               	addwf	fsr2l,f,c
 27703   001DD0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27704   001DD2  22DA               	addwfc	fsr2h,f,c
 27705   001DD4  50DF               	movf	indf2,w,c
 27706   001DD6  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27707   001DD8  EE20 F002          	lfsr	2,2
 27708   001DDC  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27709   001DDE  26D9               	addwf	fsr2l,f,c
 27710   001DE0  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27711   001DE2  22DA               	addwfc	fsr2h,f,c
 27712   001DE4  50DF               	movf	indf2,w,c
 27713   001DE6  6E57               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 27714   001DE8  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27715   001DEA  6E4E               	movwf	doEvlrn@nodeNumber^(0+1280),c
 27716   001DEC  C557  F54F         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 27717   001DF0  EE20 F005          	lfsr	2,5
 27718   001DF4  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27719   001DF6  26D9               	addwf	fsr2l,f,c
 27720   001DF8  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27721   001DFA  22DA               	addwfc	fsr2h,f,c
 27722   001DFC  50DF               	movf	indf2,w,c
 27723   001DFE  6E59               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 27724   001E00  EE20 F004          	lfsr	2,4
 27725   001E04  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27726   001E06  26D9               	addwf	fsr2l,f,c
 27727   001E08  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27728   001E0A  22DA               	addwfc	fsr2h,f,c
 27729   001E0C  50DF               	movf	indf2,w,c
 27730   001E0E  6E5A               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 27731   001E10  5059               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 27732   001E12  6E50               	movwf	doEvlrn@eventNumber^(0+1280),c
 27733   001E14  C55A  F551         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 27734   001E18  EE20 F007          	lfsr	2,7
 27735   001E1C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27736   001E1E  26D9               	addwf	fsr2l,f,c
 27737   001E20  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27738   001E22  22DA               	addwfc	fsr2h,f,c
 27739   001E24  50DF               	movf	indf2,w,c
 27740   001E26  6E52               	movwf	doEvlrn@evNum^(0+1280),c
 27741   001E28  EE20 F008          	lfsr	2,8
 27742   001E2C  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27743   001E2E  26D9               	addwf	fsr2l,f,c
 27744   001E30  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27745   001E32  22DA               	addwfc	fsr2h,f,c
 27746   001E34  50DF               	movf	indf2,w,c
 27747   001E36  6E53               	movwf	doEvlrn@evVal^(0+1280),c
 27748   001E38  ECC7  F02E         	call	_doEvlrn	;wreg free
 27749   001E3C  EF90  F00B         	goto	l9803
 27750   001E40                     l10059:
 27751   001E40  EE20 F001          	lfsr	2,1
 27752   001E44  5054               	movf	teachProcessMessage@m^(0+1280),w,c
 27753   001E46  26D9               	addwf	fsr2l,f,c
 27754   001E48  5055               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 27755   001E4A  22DA               	addwfc	fsr2h,f,c
 27756   001E4C  50DF               	movf	indf2,w,c
 27757   001E4E  6E56               	movwf	??_teachProcessMessage^(0+1280),c
 27758   001E50  6A57               	clrf	(??_teachProcessMessage+1)^(0+1280),c
 27759                           
 27760                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27761                           ; Switch size 1, requested type "simple"
 27762                           ; Number of cases is 1, Range of values is 0 to 0
 27763                           ; switch strategies available:
 27764                           ; Name         Instructions Cycles
 27765                           ; simple_byte            4     3 (average)
 27766                           ;	Chosen strategy is simple_byte
 27767   001E52  5057               	movf	(??_teachProcessMessage+1)^(0+1280),w,c
 27768   001E54  0A00               	xorlw	0	; case 0
 27769   001E56  B4D8               	btfsc	status,2,c
 27770   001E58  EF30  F00F         	goto	l11603
 27771   001E5C  EF0E  F00C         	goto	l9849
 27772   001E60                     l11603:
 27773                           
 27774                           ; Switch size 1, requested type "simple"
 27775                           ; Number of cases is 13, Range of values is 83 to 245
 27776                           ; switch strategies available:
 27777                           ; Name         Instructions Cycles
 27778                           ; simple_byte           40    21 (average)
 27779                           ;	Chosen strategy is simple_byte
 27780   001E60  5056               	movf	??_teachProcessMessage^(0+1280),w,c
 27781   001E62  0A53               	xorlw	83	; case 83
 27782   001E64  B4D8               	btfsc	status,2,c
 27783   001E66  EF7E  F00B         	goto	l9801
 27784   001E6A  0A07               	xorlw	7	; case 84
 27785   001E6C  B4D8               	btfsc	status,2,c
 27786   001E6E  EF10  F00D         	goto	l9903
 27787   001E72  0A01               	xorlw	1	; case 85
 27788   001E74  B4D8               	btfsc	status,2,c
 27789   001E76  EF45  F00D         	goto	l9923
 27790   001E7A  0A03               	xorlw	3	; case 86
 27791   001E7C  B4D8               	btfsc	status,2,c
 27792   001E7E  EFD6  F00D         	goto	l9965
 27793   001E82  0A01               	xorlw	1	; case 87
 27794   001E84  B4D8               	btfsc	status,2,c
 27795   001E86  EF9D  F00D         	goto	l9945
 27796   001E8A  0A0F               	xorlw	15	; case 88
 27797   001E8C  B4D8               	btfsc	status,2,c
 27798   001E8E  EF0F  F00E         	goto	l9985
 27799   001E92  0A2A               	xorlw	42	; case 114
 27800   001E94  B4D8               	btfsc	status,2,c
 27801   001E96  EF48  F00E         	goto	l10005
 27802   001E9A  0A04               	xorlw	4	; case 118
 27803   001E9C  B4D8               	btfsc	status,2,c
 27804   001E9E  EFB8  F00B         	goto	l9819
 27805   001EA2  0AE3               	xorlw	227	; case 149
 27806   001EA4  B4D8               	btfsc	status,2,c
 27807   001EA6  EF74  F00C         	goto	l9871
 27808   001EAA  0A09               	xorlw	9	; case 156
 27809   001EAC  B4D8               	btfsc	status,2,c
 27810   001EAE  EF88  F00E         	goto	l10025
 27811   001EB2  0A2E               	xorlw	46	; case 178
 27812   001EB4  B4D8               	btfsc	status,2,c
 27813   001EB6  EFBE  F00C         	goto	l9887
 27814   001EBA  0A60               	xorlw	96	; case 210
 27815   001EBC  B4D8               	btfsc	status,2,c
 27816   001EBE  EF11  F00C         	goto	l9853
 27817   001EC2  0A27               	xorlw	39	; case 245
 27818   001EC4  B4D8               	btfsc	status,2,c
 27819   001EC6  EFD0  F00E         	goto	l10045
 27820   001ECA  EF0E  F00C         	goto	l9849
 27821   001ECE                     l958:
 27822   001ECE  0012               	return		;funcret
 27823   001ED0                     __end_of_teachProcessMessage:
 27824                           	callstack 0
 27825                           
 27826 ;; *************** function _teachCheckLen *****************
 27827 ;; Defined at:
 27828 ;;		line 343 in file "../../VLCBlib_PIC/event_teach_simple.c"
 27829 ;; Parameters:    Size  Location     Type
 27830 ;;  m               2   48[COMRAM] PTR struct Message
 27831 ;;		 -> poll@m(9), 
 27832 ;;  needed          1   50[COMRAM] unsigned char 
 27833 ;;  learn           1   51[COMRAM] unsigned char 
 27834 ;; Auto vars:     Size  Location     Type
 27835 ;;		None
 27836 ;; Return value:  Size  Location     Type
 27837 ;;                  1    wreg      enum E23340
 27838 ;; Registers used:
 27839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27840 ;; Tracked objects:
 27841 ;;		On entry : 0/0
 27842 ;;		On exit  : 0/0
 27843 ;;		Unchanged: 0/0
 27844 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27847 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27848 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27849 ;;Total ram usage:        5 bytes
 27850 ;; Hardware stack levels used: 1
 27851 ;; Hardware stack levels required when called: 7
 27852 ;; This function calls:
 27853 ;;		_checkLen
 27854 ;;		_sendMessage5
 27855 ;; This function is called by:
 27856 ;;		_teachProcessMessage
 27857 ;; This function uses a non-reentrant model
 27858 ;;
 27859                           
 27860                           	psect	text23
 27861   006F84                     __ptext23:
 27862                           	callstack 0
 27863   006F84                     _teachCheckLen:
 27864                           	callstack 117
 27865   006F84                     
 27866                           ;../../VLCBlib_PIC/event_teach_simple.c: 344:     if (learn) {
 27867   006F84  5034               	movf	teachCheckLen@learn^(0+1280),w,c
 27868   006F86  B4D8               	btfsc	status,2,c
 27869   006F88  EFC8  F037         	goto	u6021
 27870   006F8C  EFCA  F037         	goto	u6020
 27871   006F90                     u6021:
 27872   006F90  EFF8  F037         	goto	l8693
 27873   006F94                     u6020:
 27874   006F94                     
 27875                           ;../../VLCBlib_PIC/event_teach_simple.c: 346:         if (m->len < needed) {
 27876   006F94  C531  F4D9         	movff	teachCheckLen@m,fsr2l
 27877   006F98  C532  F4DA         	movff	teachCheckLen@m+1,fsr2h
 27878   006F9C  5033               	movf	teachCheckLen@needed^(0+1280),w,c
 27879   006F9E  5CDE               	subwf	postinc2,w,c
 27880   006FA0  B0D8               	btfsc	status,0,c
 27881   006FA2  EFD5  F037         	goto	u6031
 27882   006FA6  EFD7  F037         	goto	u6030
 27883   006FAA                     u6031:
 27884   006FAA  EFF5  F037         	goto	l8689
 27885   006FAE                     u6030:
 27886   006FAE                     
 27887                           ;../../VLCBlib_PIC/event_teach_simple.c: 348:             if (mode_flags & 1) {
 27888   006FAE  0105               	movlb	5	; () banked
 27889   006FB0  A1A4               	btfss	_mode_flags& (0+255),0,b
 27890   006FB2  EFDD  F037         	goto	u6041
 27891   006FB6  EFDF  F037         	goto	u6040
 27892   006FBA                     u6041:
 27893   006FBA  EFF2  F037         	goto	l8685
 27894   006FBE                     u6040:
 27895   006FBE                     
 27896                           ; BSR set to: 5
 27897                           ;../../VLCBlib_PIC/event_teach_simple.c: 351:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, (uint8_t)(m->opc), SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 27898   006FBE  C590  F526         	movff	_nn+1,sendMessage5@data1
 27899   006FC2  C58F  F527         	movff	_nn,sendMessage5@data2
 27900   006FC6  EE20 F001          	lfsr	2,1
 27901   006FCA  5031               	movf	teachCheckLen@m^(0+1280),w,c
 27902   006FCC  26D9               	addwf	fsr2l,f,c
 27903   006FCE  5032               	movf	(teachCheckLen@m+1)^(0+1280),w,c
 27904   006FD0  22DA               	addwfc	fsr2h,f,c
 27905   006FD2  50DF               	movf	indf2,w,c
 27906   006FD4  6E28               	movwf	sendMessage5@data3^(0+1280),c
 27907   006FD6  0E04               	movlw	4
 27908   006FD8  6E29               	movwf	sendMessage5@data4^(0+1280),c
 27909   006FDA  0E01               	movlw	1
 27910   006FDC  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 27911   006FDE  0EAF               	movlw	175
 27912   006FE0  EC11  F040         	call	_sendMessage5
 27913   006FE4                     l8685:
 27914                           
 27915                           ;../../VLCBlib_PIC/event_teach_simple.c: 354:             return PROCESSED;
 27916   006FE4  0E01               	movlw	1
 27917   006FE6  EF02  F038         	goto	l1022
 27918   006FEA                     l8689:
 27919                           
 27920                           ;../../VLCBlib_PIC/event_teach_simple.c: 356:         return NOT_PROCESSED;
 27921   006FEA  0E00               	movlw	0
 27922   006FEC  EF02  F038         	goto	l1022
 27923   006FF0                     l8693:
 27924                           
 27925                           ;../../VLCBlib_PIC/event_teach_simple.c: 358:     return checkLen(m, needed, SERVICE_ID_
      +                          OLD_TEACH);
 27926   006FF0  C531  F52C         	movff	teachCheckLen@m,checkLen@m
 27927   006FF4  C532  F52D         	movff	teachCheckLen@m+1,checkLen@m+1
 27928   006FF8  C533  F52E         	movff	teachCheckLen@needed,checkLen@needed
 27929   006FFC  0E04               	movlw	4
 27930   006FFE  6E2F               	movwf	checkLen@service^(0+1280),c
 27931   007000  ECC3  F033         	call	_checkLen	;wreg free
 27932   007004                     l1022:
 27933   007004  0012               	return		;funcret
 27934   007006                     __end_of_teachCheckLen:
 27935                           	callstack 0
 27936                           
 27937 ;; *************** function _doRqevn *****************
 27938 ;; Defined at:
 27939 ;;		line 488 in file "../../VLCBlib_PIC/event_teach_simple.c"
 27940 ;; Parameters:    Size  Location     Type
 27941 ;;		None
 27942 ;; Auto vars:     Size  Location     Type
 27943 ;;  eventNumber     2   41[COMRAM] unsigned short 
 27944 ;;  i               1   44[COMRAM] unsigned char 
 27945 ;;  count           1   43[COMRAM] unsigned char 
 27946 ;; Return value:  Size  Location     Type
 27947 ;;                  1    wreg      void 
 27948 ;; Registers used:
 27949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27950 ;; Tracked objects:
 27951 ;;		On entry : 0/0
 27952 ;;		On exit  : 0/0
 27953 ;;		Unchanged: 0/0
 27954 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27956 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27958 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27959 ;;Total ram usage:        4 bytes
 27960 ;; Hardware stack levels used: 1
 27961 ;; Hardware stack levels required when called: 6
 27962 ;; This function calls:
 27963 ;;		_getEN
 27964 ;;		_sendMessage3
 27965 ;; This function is called by:
 27966 ;;		_teachProcessMessage
 27967 ;; This function uses a non-reentrant model
 27968 ;;
 27969                           
 27970                           	psect	text24
 27971   007A30                     __ptext24:
 27972                           	callstack 0
 27973   007A30                     _doRqevn:
 27974                           	callstack 118
 27975   007A30                     
 27976                           ;../../VLCBlib_PIC/event_teach_simple.c: 490:     uint8_t count = 0;
 27977   007A30  6A2C               	clrf	doRqevn@count^(0+1280),c
 27978                           
 27979                           ;../../VLCBlib_PIC/event_teach_simple.c: 491:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 492:     for (i=0; i<255; i++) {
 27980   007A32  6A2D               	clrf	doRqevn@i^(0+1280),c
 27981   007A34                     l8801:
 27982                           
 27983                           ;../../VLCBlib_PIC/event_teach_simple.c: 493:         uint16_t eventNumber;;../../VLCBli
      +                          b_PIC/event_teach_simple.c: 494:         eventNumber = getEN(i);
 27984   007A34  502D               	movf	doRqevn@i^(0+1280),w,c
 27985   007A36  EC1E  F033         	call	_getEN
 27986   007A3A  C50D  F52A         	movff	?_getEN,doRqevn@eventNumber
 27987   007A3E  C50E  F52B         	movff	?_getEN+1,doRqevn@eventNumber+1
 27988   007A42                     
 27989                           ;../../VLCBlib_PIC/event_teach_simple.c: 495:         if (eventNumber != 0) {
 27990   007A42  502A               	movf	doRqevn@eventNumber^(0+1280),w,c
 27991   007A44  102B               	iorwf	(doRqevn@eventNumber+1)^(0+1280),w,c
 27992   007A46  B4D8               	btfsc	status,2,c
 27993   007A48  EF28  F03D         	goto	u6151
 27994   007A4C  EF2A  F03D         	goto	u6150
 27995   007A50                     u6151:
 27996   007A50  EF2B  F03D         	goto	l1062
 27997   007A54                     u6150:
 27998   007A54                     
 27999                           ;../../VLCBlib_PIC/event_teach_simple.c: 496:             count++;
 28000   007A54  2A2C               	incf	doRqevn@count^(0+1280),f,c
 28001   007A56                     l1062:
 28002                           
 28003                           ;../../VLCBlib_PIC/event_teach_simple.c: 498:     }
 28004   007A56  2A2D               	incf	doRqevn@i^(0+1280),f,c
 28005   007A58  282D               	incf	doRqevn@i^(0+1280),w,c
 28006   007A5A  A4D8               	btfss	status,2,c
 28007   007A5C  EF32  F03D         	goto	u6161
 28008   007A60  EF34  F03D         	goto	u6160
 28009   007A64                     u6161:
 28010   007A64  EF1A  F03D         	goto	l8801
 28011   007A68                     u6160:
 28012   007A68                     
 28013                           ;../../VLCBlib_PIC/event_teach_simple.c: 499:     sendMessage3(OPC_NUMEV, nn.bytes.hi, n
      +                          n.bytes.lo, count);
 28014   007A68  C590  F526         	movff	_nn+1,sendMessage3@data1
 28015   007A6C  C58F  F527         	movff	_nn,sendMessage3@data2
 28016   007A70  C52C  F528         	movff	doRqevn@count,sendMessage3@data3
 28017   007A74  0E74               	movlw	116
 28018   007A76  ECD2  F03F         	call	_sendMessage3
 28019   007A7A  0012               	return		;funcret
 28020   007A7C                     __end_of_doRqevn:
 28021                           	callstack 0
 28022                           
 28023 ;; *************** function _doReval *****************
 28024 ;; Defined at:
 28025 ;;		line 557 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28026 ;; Parameters:    Size  Location     Type
 28027 ;;  enNum           1    wreg     unsigned char 
 28028 ;;  evNum           1   43[COMRAM] unsigned char 
 28029 ;; Auto vars:     Size  Location     Type
 28030 ;;  enNum           1   45[COMRAM] unsigned char 
 28031 ;;  evVal           2   47[COMRAM] int 
 28032 ;;  tableIndex      1   46[COMRAM] unsigned char 
 28033 ;;  evIndex         1   44[COMRAM] unsigned char 
 28034 ;; Return value:  Size  Location     Type
 28035 ;;                  1    wreg      void 
 28036 ;; Registers used:
 28037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28038 ;; Tracked objects:
 28039 ;;		On entry : 0/0
 28040 ;;		On exit  : 0/0
 28041 ;;		Unchanged: 0/0
 28042 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28043 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28044 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28046 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28047 ;;Total ram usage:        6 bytes
 28048 ;; Hardware stack levels used: 1
 28049 ;; Hardware stack levels required when called: 6
 28050 ;; This function calls:
 28051 ;;		_evtIdxToTableIndex
 28052 ;;		_findServiceIndex
 28053 ;;		_getEv
 28054 ;;		_sendMessage3
 28055 ;;		_sendMessage5
 28056 ;;		_startTimedResponse
 28057 ;; This function is called by:
 28058 ;;		_teachProcessMessage
 28059 ;; This function uses a non-reentrant model
 28060 ;;
 28061                           
 28062                           	psect	text25
 28063   005A0E                     __ptext25:
 28064                           	callstack 0
 28065   005A0E                     _doReval:
 28066                           	callstack 118
 28067                           
 28068                           ;incstack = 0
 28069                           ;doReval@enNum stored from wreg
 28070   005A0E  6E2E               	movwf	doReval@enNum^(0+1280),c
 28071   005A10                     
 28072                           ;../../VLCBlib_PIC/event_teach_simple.c: 560:     uint8_t evIndex;;../../VLCBlib_PIC/eve
      +                          nt_teach_simple.c: 561:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 28073   005A10  502E               	movf	doReval@enNum^(0+1280),w,c
 28074   005A12  EC15  F041         	call	_evtIdxToTableIndex
 28075   005A16  6E2F               	movwf	doReval@tableIndex^(0+1280),c
 28076   005A18                     
 28077                           ;../../VLCBlib_PIC/event_teach_simple.c: 562:     int evVal;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 564:     if (tableIndex >= 255) {
 28078   005A18  282F               	incf	doReval@tableIndex^(0+1280),w,c
 28079   005A1A  A4D8               	btfss	status,2,c
 28080   005A1C  EF12  F02D         	goto	u6181
 28081   005A20  EF14  F02D         	goto	u6180
 28082   005A24                     u6181:
 28083   005A24  EF1F  F02D         	goto	l8831
 28084   005A28                     u6180:
 28085   005A28                     
 28086                           ;../../VLCBlib_PIC/event_teach_simple.c: 565:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 28087   005A28  C590  F526         	movff	_nn+1,sendMessage3@data1
 28088   005A2C  C58F  F527         	movff	_nn,sendMessage3@data2
 28089   005A30  0E06               	movlw	6
 28090   005A32  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28091   005A34  0E6F               	movlw	111
 28092   005A36  ECD2  F03F         	call	_sendMessage3
 28093   005A3A  EF7B  F02D         	goto	l1075
 28094   005A3E                     l8831:
 28095                           
 28096                           ;../../VLCBlib_PIC/event_teach_simple.c: 569:     evIndex = evNum-1U;
 28097   005A3E  042C               	decf	doReval@evNum^(0+1280),w,c
 28098   005A40  6E2D               	movwf	doReval@evIndex^(0+1280),c
 28099   005A42                     
 28100                           ;../../VLCBlib_PIC/event_teach_simple.c: 571:     if (evNum == 0) {
 28101   005A42  502C               	movf	doReval@evNum^(0+1280),w,c
 28102   005A44  A4D8               	btfss	status,2,c
 28103   005A46  EF27  F02D         	goto	u6191
 28104   005A4A  EF29  F02D         	goto	u6190
 28105   005A4E                     u6191:
 28106   005A4E  EF44  F02D         	goto	l8843
 28107   005A52                     u6190:
 28108   005A52                     
 28109                           ;../../VLCBlib_PIC/event_teach_simple.c: 572:         evVal = 248;
 28110   005A52  0E00               	movlw	0
 28111   005A54  6E31               	movwf	(doReval@evVal+1)^(0+1280),c
 28112   005A56  0EF8               	movlw	248
 28113   005A58  6E30               	movwf	doReval@evVal^(0+1280),c
 28114   005A5A                     
 28115                           ;../../VLCBlib_PIC/event_teach_simple.c: 573:         if ((mode_flags & 8) == 0) {
 28116   005A5A  0105               	movlb	5	; () banked
 28117   005A5C  B7A4               	btfsc	_mode_flags& (0+255),3,b
 28118   005A5E  EF33  F02D         	goto	u6201
 28119   005A62  EF35  F02D         	goto	u6200
 28120   005A66                     u6201:
 28121   005A66  EF4D  F02D         	goto	l8845
 28122   005A6A                     u6200:
 28123   005A6A                     
 28124                           ; BSR set to: 5
 28125                           ;../../VLCBlib_PIC/event_teach_simple.c: 576:             timedResponseOpcode = OPC_NEVA
      +                          L;
 28126   005A6A  0EB5               	movlw	181
 28127   005A6C  6FA2               	movwf	_timedResponseOpcode& (0+255),b
 28128   005A6E                     
 28129                           ; BSR set to: 5
 28130                           ;../../VLCBlib_PIC/event_teach_simple.c: 577:             startTimedResponse(tableIndex,
      +                           findServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 28131   005A6E  0E04               	movlw	4
 28132   005A70  EC6F  F036         	call	_findServiceIndex
 28133   005A74  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 28134   005A76  0EB8               	movlw	low _reqevCallback
 28135   005A78  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 28136   005A7A  0E5C               	movlw	high _reqevCallback
 28137   005A7C  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 28138   005A7E  502F               	movf	doReval@tableIndex^(0+1280),w,c
 28139   005A80  ECF1  F03B         	call	_startTimedResponse
 28140   005A84  EF4D  F02D         	goto	l8845
 28141   005A88                     l8843:
 28142                           
 28143                           ;../../VLCBlib_PIC/event_teach_simple.c: 580:         evVal = getEv(tableIndex, evIndex)
      +                          ;
 28144   005A88  C52D  F50D         	movff	doReval@evIndex,getEv@evNum
 28145   005A8C  502F               	movf	doReval@tableIndex^(0+1280),w,c
 28146   005A8E  EC13  F034         	call	_getEv
 28147   005A92  C50D  F530         	movff	?_getEv,doReval@evVal
 28148   005A96  C50E  F531         	movff	?_getEv+1,doReval@evVal+1
 28149   005A9A                     l8845:
 28150                           
 28151                           ;../../VLCBlib_PIC/event_teach_simple.c: 583:     if (evVal < 0) {
 28152   005A9A  BE31               	btfsc	(doReval@evVal+1)^(0+1280),7,c
 28153   005A9C  EF54  F02D         	goto	u6210
 28154   005AA0  EF52  F02D         	goto	u6211
 28155   005AA4                     u6211:
 28156   005AA4  EF6E  F02D         	goto	l8851
 28157   005AA8                     u6210:
 28158   005AA8                     
 28159                           ;../../VLCBlib_PIC/event_teach_simple.c: 585:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, (uint8_t)(-evVal));
 28160   005AA8  C590  F526         	movff	_nn+1,sendMessage3@data1
 28161   005AAC  C58F  F527         	movff	_nn,sendMessage3@data2
 28162   005AB0  5030               	movf	doReval@evVal^(0+1280),w,c
 28163   005AB2  0800               	sublw	0
 28164   005AB4  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28165   005AB6  0E6F               	movlw	111
 28166   005AB8  ECD2  F03F         	call	_sendMessage3
 28167                           
 28168                           ;../../VLCBlib_PIC/event_teach_simple.c: 587:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REVAL, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 28169   005ABC  C590  F526         	movff	_nn+1,sendMessage5@data1
 28170   005AC0  C58F  F527         	movff	_nn,sendMessage5@data2
 28171   005AC4  0E9C               	movlw	156
 28172   005AC6  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28173   005AC8  0E04               	movlw	4
 28174   005ACA  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28175   005ACC  5030               	movf	doReval@evVal^(0+1280),w,c
 28176   005ACE  0800               	sublw	0
 28177   005AD0  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28178   005AD2  0EAF               	movlw	175
 28179   005AD4  EC11  F040         	call	_sendMessage5
 28180   005AD8  EF7B  F02D         	goto	l1075
 28181   005ADC                     l8851:
 28182                           
 28183                           ;../../VLCBlib_PIC/event_teach_simple.c: 591:     sendMessage5(OPC_NEVAL, nn.bytes.hi, n
      +                          n.bytes.lo, enNum, evNum, (uint8_t)evVal);
 28184   005ADC  C590  F526         	movff	_nn+1,sendMessage5@data1
 28185   005AE0  C58F  F527         	movff	_nn,sendMessage5@data2
 28186   005AE4  C52E  F528         	movff	doReval@enNum,sendMessage5@data3
 28187   005AE8  C52C  F529         	movff	doReval@evNum,sendMessage5@data4
 28188   005AEC  C530  F52A         	movff	doReval@evVal,sendMessage5@data5
 28189   005AF0  0EB5               	movlw	181
 28190   005AF2  EC11  F040         	call	_sendMessage5
 28191   005AF6                     l1075:
 28192   005AF6  0012               	return		;funcret
 28193   005AF8                     __end_of_doReval:
 28194                           	callstack 0
 28195                           
 28196 ;; *************** function _doReqev *****************
 28197 ;; Defined at:
 28198 ;;		line 622 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28199 ;; Parameters:    Size  Location     Type
 28200 ;;  nodeNumber      2   46[COMRAM] unsigned short 
 28201 ;;  eventNumber     2   48[COMRAM] unsigned short 
 28202 ;;  evNum           1   50[COMRAM] unsigned char 
 28203 ;; Auto vars:     Size  Location     Type
 28204 ;;  evVal           2   51[COMRAM] short 
 28205 ;;  tableIndex      1   53[COMRAM] unsigned char 
 28206 ;; Return value:  Size  Location     Type
 28207 ;;                  1    wreg      void 
 28208 ;; Registers used:
 28209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28210 ;; Tracked objects:
 28211 ;;		On entry : 0/0
 28212 ;;		On exit  : 0/0
 28213 ;;		Unchanged: 0/0
 28214 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28215 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28216 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28218 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28219 ;;Total ram usage:        8 bytes
 28220 ;; Hardware stack levels used: 1
 28221 ;; Hardware stack levels required when called: 6
 28222 ;; This function calls:
 28223 ;;		_findEvent
 28224 ;;		_findServiceIndex
 28225 ;;		_getEv
 28226 ;;		_numEv
 28227 ;;		_sendMessage3
 28228 ;;		_sendMessage5
 28229 ;;		_sendMessage6
 28230 ;;		_startTimedResponse
 28231 ;; This function is called by:
 28232 ;;		_teachProcessMessage
 28233 ;; This function uses a non-reentrant model
 28234 ;;
 28235                           
 28236                           	psect	text26
 28237   004B2C                     __ptext26:
 28238                           	callstack 0
 28239   004B2C                     _doReqev:
 28240                           	callstack 118
 28241   004B2C                     
 28242                           ;../../VLCBlib_PIC/event_teach_simple.c: 623:     int16_t evVal;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 625:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 28243   004B2C  C52F  F522         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 28244   004B30  C530  F523         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 28245   004B34  C531  F524         	movff	doReqev@eventNumber,findEvent@eventNumber
 28246   004B38  C532  F525         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 28247   004B3C  EC70  F031         	call	_findEvent	;wreg free
 28248   004B40  6E36               	movwf	doReqev@tableIndex^(0+1280),c
 28249   004B42                     
 28250                           ;../../VLCBlib_PIC/event_teach_simple.c: 626:     if (tableIndex == 0xff) {
 28251   004B42  2836               	incf	doReqev@tableIndex^(0+1280),w,c
 28252   004B44  A4D8               	btfss	status,2,c
 28253   004B46  EFA7  F025         	goto	u6081
 28254   004B4A  EFA9  F025         	goto	u6080
 28255   004B4E                     u6081:
 28256   004B4E  EFC1  F025         	goto	l8739
 28257   004B52                     u6080:
 28258   004B52                     
 28259                           ;../../VLCBlib_PIC/event_teach_simple.c: 627:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INVALID_EVENT);
 28260   004B52  C590  F526         	movff	_nn+1,sendMessage3@data1
 28261   004B56  C58F  F527         	movff	_nn,sendMessage3@data2
 28262   004B5A  0E07               	movlw	7
 28263   004B5C  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28264   004B5E  0E6F               	movlw	111
 28265   004B60  ECD2  F03F         	call	_sendMessage3
 28266                           
 28267                           ;../../VLCBlib_PIC/event_teach_simple.c: 629:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 28268   004B64  C590  F526         	movff	_nn+1,sendMessage5@data1
 28269   004B68  C58F  F527         	movff	_nn,sendMessage5@data2
 28270   004B6C  0EB2               	movlw	178
 28271   004B6E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28272   004B70  0E04               	movlw	4
 28273   004B72  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28274   004B74  0E07               	movlw	7
 28275   004B76  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28276   004B78  0EAF               	movlw	175
 28277   004B7A  EC11  F040         	call	_sendMessage5
 28278   004B7E  EF4F  F026         	goto	l1087
 28279   004B82                     l8739:
 28280                           
 28281                           ;../../VLCBlib_PIC/event_teach_simple.c: 633:     if (evNum > 252) {
 28282   004B82  0EFC               	movlw	252
 28283   004B84  6433               	cpfsgt	doReqev@evNum^(0+1280),c
 28284   004B86  EFC7  F025         	goto	u6091
 28285   004B8A  EFC9  F025         	goto	u6090
 28286   004B8E                     u6091:
 28287   004B8E  EFE1  F025         	goto	l8745
 28288   004B92                     u6090:
 28289   004B92                     
 28290                           ;../../VLCBlib_PIC/event_teach_simple.c: 634:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 28291   004B92  C590  F526         	movff	_nn+1,sendMessage3@data1
 28292   004B96  C58F  F527         	movff	_nn,sendMessage3@data2
 28293   004B9A  0E06               	movlw	6
 28294   004B9C  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28295   004B9E  0E6F               	movlw	111
 28296   004BA0  ECD2  F03F         	call	_sendMessage3
 28297                           
 28298                           ;../../VLCBlib_PIC/event_teach_simple.c: 636:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 28299   004BA4  C590  F526         	movff	_nn+1,sendMessage5@data1
 28300   004BA8  C58F  F527         	movff	_nn,sendMessage5@data2
 28301   004BAC  0EB2               	movlw	178
 28302   004BAE  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28303   004BB0  0E04               	movlw	4
 28304   004BB2  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28305   004BB4  0E06               	movlw	6
 28306   004BB6  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28307   004BB8  0EAF               	movlw	175
 28308   004BBA  EC11  F040         	call	_sendMessage5
 28309   004BBE  EF4F  F026         	goto	l1087
 28310   004BC2                     l8745:
 28311                           
 28312                           ;../../VLCBlib_PIC/event_teach_simple.c: 641:     if (evNum == 0) {
 28313   004BC2  5033               	movf	doReqev@evNum^(0+1280),w,c
 28314   004BC4  A4D8               	btfss	status,2,c
 28315   004BC6  EFE7  F025         	goto	u6101
 28316   004BCA  EFE9  F025         	goto	u6100
 28317   004BCE                     u6101:
 28318   004BCE  EF16  F026         	goto	l8759
 28319   004BD2                     u6100:
 28320   004BD2                     
 28321                           ;../../VLCBlib_PIC/event_teach_simple.c: 642:         evVal = 248;
 28322   004BD2  0E00               	movlw	0
 28323   004BD4  6E35               	movwf	(doReqev@evVal+1)^(0+1280),c
 28324   004BD6  0EF8               	movlw	248
 28325   004BD8  6E34               	movwf	doReqev@evVal^(0+1280),c
 28326   004BDA                     
 28327                           ;../../VLCBlib_PIC/event_teach_simple.c: 643:         if ((mode_flags & 8) == 0) {
 28328   004BDA  0105               	movlb	5	; () banked
 28329   004BDC  B7A4               	btfsc	_mode_flags& (0+255),3,b
 28330   004BDE  EFF3  F025         	goto	u6111
 28331   004BE2  EFF5  F025         	goto	u6110
 28332   004BE6                     u6111:
 28333   004BE6  EF1F  F026         	goto	l8761
 28334   004BEA                     u6110:
 28335   004BEA                     
 28336                           ; BSR set to: 5
 28337                           ;../../VLCBlib_PIC/event_teach_simple.c: 644:             sendMessage6(OPC_EVANS, nodeNu
      +                          mber>>8, nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 28338   004BEA  5030               	movf	(doReqev@nodeNumber+1)^(0+1280),w,c
 28339   004BEC  6E26               	movwf	sendMessage6@data1^(0+1280),c
 28340   004BEE  C52F  F527         	movff	doReqev@nodeNumber,sendMessage6@data2
 28341   004BF2  5032               	movf	(doReqev@eventNumber+1)^(0+1280),w,c
 28342   004BF4  6E28               	movwf	sendMessage6@data3^(0+1280),c
 28343   004BF6  C531  F529         	movff	doReqev@eventNumber,sendMessage6@data4
 28344   004BFA  0E00               	movlw	0
 28345   004BFC  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 28346   004BFE  5036               	movf	doReqev@tableIndex^(0+1280),w,c
 28347   004C00  EC27  F041         	call	_numEv
 28348   004C04  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 28349   004C06  0ED3               	movlw	211
 28350   004C08  ECA8  F03F         	call	_sendMessage6
 28351   004C0C                     
 28352                           ;../../VLCBlib_PIC/event_teach_simple.c: 647:             timedResponseOpcode = OPC_EVAN
      +                          S;
 28353   004C0C  0ED3               	movlw	211
 28354   004C0E  0105               	movlb	5	; () banked
 28355   004C10  6FA2               	movwf	_timedResponseOpcode& (0+255),b
 28356   004C12                     
 28357                           ; BSR set to: 5
 28358                           ;../../VLCBlib_PIC/event_teach_simple.c: 648:             startTimedResponse(tableIndex,
      +                           findServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 28359   004C12  0E04               	movlw	4
 28360   004C14  EC6F  F036         	call	_findServiceIndex
 28361   004C18  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 28362   004C1A  0EB8               	movlw	low _reqevCallback
 28363   004C1C  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 28364   004C1E  0E5C               	movlw	high _reqevCallback
 28365   004C20  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 28366   004C22  5036               	movf	doReqev@tableIndex^(0+1280),w,c
 28367   004C24  ECF1  F03B         	call	_startTimedResponse
 28368   004C28  EF4F  F026         	goto	l1087
 28369   004C2C                     l8759:
 28370                           
 28371                           ;../../VLCBlib_PIC/event_teach_simple.c: 652:         evVal = getEv(tableIndex, evNum-1)
      +                          ;
 28372   004C2C  0433               	decf	doReqev@evNum^(0+1280),w,c
 28373   004C2E  6E0D               	movwf	getEv@evNum^(0+1280),c
 28374   004C30  5036               	movf	doReqev@tableIndex^(0+1280),w,c
 28375   004C32  EC13  F034         	call	_getEv
 28376   004C36  C50D  F534         	movff	?_getEv,doReqev@evVal
 28377   004C3A  C50E  F535         	movff	?_getEv+1,doReqev@evVal+1
 28378   004C3E                     l8761:
 28379                           
 28380                           ;../../VLCBlib_PIC/event_teach_simple.c: 655:     if (evVal < 0) {
 28381   004C3E  BE35               	btfsc	(doReqev@evVal+1)^(0+1280),7,c
 28382   004C40  EF26  F026         	goto	u6120
 28383   004C44  EF24  F026         	goto	u6121
 28384   004C48                     u6121:
 28385   004C48  EF40  F026         	goto	l8767
 28386   004C4C                     u6120:
 28387   004C4C                     
 28388                           ;../../VLCBlib_PIC/event_teach_simple.c: 657:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, (uint8_t)(-evVal));
 28389   004C4C  C590  F526         	movff	_nn+1,sendMessage3@data1
 28390   004C50  C58F  F527         	movff	_nn,sendMessage3@data2
 28391   004C54  5034               	movf	doReqev@evVal^(0+1280),w,c
 28392   004C56  0800               	sublw	0
 28393   004C58  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28394   004C5A  0E6F               	movlw	111
 28395   004C5C  ECD2  F03F         	call	_sendMessage3
 28396                           
 28397                           ;../../VLCBlib_PIC/event_teach_simple.c: 659:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 28398   004C60  C590  F526         	movff	_nn+1,sendMessage5@data1
 28399   004C64  C58F  F527         	movff	_nn,sendMessage5@data2
 28400   004C68  0EB2               	movlw	178
 28401   004C6A  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28402   004C6C  0E04               	movlw	4
 28403   004C6E  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28404   004C70  5034               	movf	doReqev@evVal^(0+1280),w,c
 28405   004C72  0800               	sublw	0
 28406   004C74  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28407   004C76  0EAF               	movlw	175
 28408   004C78  EC11  F040         	call	_sendMessage5
 28409   004C7C  EF4F  F026         	goto	l1087
 28410   004C80                     l8767:
 28411                           
 28412                           ;../../VLCBlib_PIC/event_teach_simple.c: 664:     sendMessage6(OPC_EVANS, nodeNumber>>8,
      +                           nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 28413   004C80  5030               	movf	(doReqev@nodeNumber+1)^(0+1280),w,c
 28414   004C82  6E26               	movwf	sendMessage6@data1^(0+1280),c
 28415   004C84  C52F  F527         	movff	doReqev@nodeNumber,sendMessage6@data2
 28416   004C88  5032               	movf	(doReqev@eventNumber+1)^(0+1280),w,c
 28417   004C8A  6E28               	movwf	sendMessage6@data3^(0+1280),c
 28418   004C8C  C531  F529         	movff	doReqev@eventNumber,sendMessage6@data4
 28419   004C90  C533  F52A         	movff	doReqev@evNum,sendMessage6@data5
 28420   004C94  C534  F52B         	movff	doReqev@evVal,sendMessage6@data6
 28421   004C98  0ED3               	movlw	211
 28422   004C9A  ECA8  F03F         	call	_sendMessage6
 28423   004C9E                     l1087:
 28424   004C9E  0012               	return		;funcret
 28425   004CA0                     __end_of_doReqev:
 28426                           	callstack 0
 28427                           
 28428 ;; *************** function _doNnevn *****************
 28429 ;; Defined at:
 28430 ;;		line 412 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28431 ;; Parameters:    Size  Location     Type
 28432 ;;		None
 28433 ;; Auto vars:     Size  Location     Type
 28434 ;;  eventNumber     2   41[COMRAM] unsigned short 
 28435 ;;  i               1   44[COMRAM] unsigned char 
 28436 ;;  count           1   43[COMRAM] unsigned char 
 28437 ;; Return value:  Size  Location     Type
 28438 ;;                  1    wreg      void 
 28439 ;; Registers used:
 28440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28441 ;; Tracked objects:
 28442 ;;		On entry : 0/0
 28443 ;;		On exit  : 0/0
 28444 ;;		Unchanged: 0/0
 28445 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28447 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28449 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28450 ;;Total ram usage:        4 bytes
 28451 ;; Hardware stack levels used: 1
 28452 ;; Hardware stack levels required when called: 6
 28453 ;; This function calls:
 28454 ;;		_getEN
 28455 ;;		_sendMessage3
 28456 ;; This function is called by:
 28457 ;;		_teachProcessMessage
 28458 ;; This function uses a non-reentrant model
 28459 ;;
 28460                           
 28461                           	psect	text27
 28462   007A7C                     __ptext27:
 28463                           	callstack 0
 28464   007A7C                     _doNnevn:
 28465                           	callstack 118
 28466   007A7C                     
 28467                           ;../../VLCBlib_PIC/event_teach_simple.c: 414:     uint8_t count = 0;
 28468   007A7C  6A2C               	clrf	doNnevn@count^(0+1280),c
 28469                           
 28470                           ;../../VLCBlib_PIC/event_teach_simple.c: 415:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 416:     for (i=0; i<255; i++) {
 28471   007A7E  6A2D               	clrf	doNnevn@i^(0+1280),c
 28472   007A80                     l8785:
 28473                           
 28474                           ;../../VLCBlib_PIC/event_teach_simple.c: 417:         uint16_t eventNumber;;../../VLCBli
      +                          b_PIC/event_teach_simple.c: 418:         eventNumber = getEN(i);
 28475   007A80  502D               	movf	doNnevn@i^(0+1280),w,c
 28476   007A82  EC1E  F033         	call	_getEN
 28477   007A86  C50D  F52A         	movff	?_getEN,doNnevn@eventNumber
 28478   007A8A  C50E  F52B         	movff	?_getEN+1,doNnevn@eventNumber+1
 28479   007A8E                     
 28480                           ;../../VLCBlib_PIC/event_teach_simple.c: 419:         if (eventNumber == 0) {
 28481   007A8E  502A               	movf	doNnevn@eventNumber^(0+1280),w,c
 28482   007A90  102B               	iorwf	(doNnevn@eventNumber+1)^(0+1280),w,c
 28483   007A92  A4D8               	btfss	status,2,c
 28484   007A94  EF4E  F03D         	goto	u6131
 28485   007A98  EF50  F03D         	goto	u6130
 28486   007A9C                     u6131:
 28487   007A9C  EF51  F03D         	goto	l1044
 28488   007AA0                     u6130:
 28489   007AA0                     
 28490                           ;../../VLCBlib_PIC/event_teach_simple.c: 420:             count++;
 28491   007AA0  2A2C               	incf	doNnevn@count^(0+1280),f,c
 28492   007AA2                     l1044:
 28493                           
 28494                           ;../../VLCBlib_PIC/event_teach_simple.c: 422:     }
 28495   007AA2  2A2D               	incf	doNnevn@i^(0+1280),f,c
 28496   007AA4  282D               	incf	doNnevn@i^(0+1280),w,c
 28497   007AA6  A4D8               	btfss	status,2,c
 28498   007AA8  EF58  F03D         	goto	u6141
 28499   007AAC  EF5A  F03D         	goto	u6140
 28500   007AB0                     u6141:
 28501   007AB0  EF40  F03D         	goto	l8785
 28502   007AB4                     u6140:
 28503   007AB4                     
 28504                           ;../../VLCBlib_PIC/event_teach_simple.c: 423:     sendMessage3(OPC_EVNLF, nn.bytes.hi, n
      +                          n.bytes.lo, count);
 28505   007AB4  C590  F526         	movff	_nn+1,sendMessage3@data1
 28506   007AB8  C58F  F527         	movff	_nn,sendMessage3@data2
 28507   007ABC  C52C  F528         	movff	doNnevn@count,sendMessage3@data3
 28508   007AC0  0E70               	movlw	112
 28509   007AC2  ECD2  F03F         	call	_sendMessage3
 28510   007AC6  0012               	return		;funcret
 28511   007AC8                     __end_of_doNnevn:
 28512                           	callstack 0
 28513                           
 28514 ;; *************** function _doNnclr *****************
 28515 ;; Defined at:
 28516 ;;		line 505 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28517 ;; Parameters:    Size  Location     Type
 28518 ;;		None
 28519 ;; Auto vars:     Size  Location     Type
 28520 ;;		None
 28521 ;; Return value:  Size  Location     Type
 28522 ;;                  1    wreg      void 
 28523 ;; Registers used:
 28524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28525 ;; Tracked objects:
 28526 ;;		On entry : 0/0
 28527 ;;		On exit  : 0/0
 28528 ;;		Unchanged: 0/0
 28529 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28534 ;;Total ram usage:        0 bytes
 28535 ;; Hardware stack levels used: 1
 28536 ;; Hardware stack levels required when called: 8
 28537 ;; This function calls:
 28538 ;;		_clearAllEvents
 28539 ;;		_sendMessage2
 28540 ;;		_sendMessage5
 28541 ;; This function is called by:
 28542 ;;		_teachProcessMessage
 28543 ;; This function uses a non-reentrant model
 28544 ;;
 28545                           
 28546                           	psect	text28
 28547   007EF4                     __ptext28:
 28548                           	callstack 0
 28549   007EF4                     _doNnclr:
 28550                           	callstack 116
 28551   007EF4                     
 28552                           ;../../VLCBlib_PIC/event_teach_simple.c: 506:     clearAllEvents();
 28553   007EF4  EC81  F040         	call	_clearAllEvents	;wreg free
 28554   007EF8                     
 28555                           ;../../VLCBlib_PIC/event_teach_simple.c: 507:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 28556   007EF8  C590  F526         	movff	_nn+1,sendMessage2@data1
 28557   007EFC  C58F  F527         	movff	_nn,sendMessage2@data2
 28558   007F00  0E59               	movlw	89
 28559   007F02  ECE7  F03F         	call	_sendMessage2
 28560   007F06                     
 28561                           ;../../VLCBlib_PIC/event_teach_simple.c: 509:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, GRSP_OK);
 28562   007F06  C590  F526         	movff	_nn+1,sendMessage5@data1
 28563   007F0A  C58F  F527         	movff	_nn,sendMessage5@data2
 28564   007F0E  0E55               	movlw	85
 28565   007F10  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28566   007F12  0E04               	movlw	4
 28567   007F14  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28568   007F16  0E00               	movlw	0
 28569   007F18  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28570   007F1A  0EAF               	movlw	175
 28571   007F1C  EC11  F040         	call	_sendMessage5
 28572   007F20  0012               	return		;funcret
 28573   007F22                     __end_of_doNnclr:
 28574                           	callstack 0
 28575                           
 28576 ;; *************** function _doNerd *****************
 28577 ;; Defined at:
 28578 ;;		line 431 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28579 ;; Parameters:    Size  Location     Type
 28580 ;;		None
 28581 ;; Auto vars:     Size  Location     Type
 28582 ;;		None
 28583 ;; Return value:  Size  Location     Type
 28584 ;;                  1    wreg      void 
 28585 ;; Registers used:
 28586 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28587 ;; Tracked objects:
 28588 ;;		On entry : 0/0
 28589 ;;		On exit  : 0/0
 28590 ;;		Unchanged: 0/0
 28591 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28596 ;;Total ram usage:        0 bytes
 28597 ;; Hardware stack levels used: 1
 28598 ;; Hardware stack levels required when called: 2
 28599 ;; This function calls:
 28600 ;;		_findServiceIndex
 28601 ;;		_startTimedResponse
 28602 ;; This function is called by:
 28603 ;;		_teachProcessMessage
 28604 ;; This function uses a non-reentrant model
 28605 ;;
 28606                           
 28607                           	psect	text29
 28608   008192                     __ptext29:
 28609                           	callstack 0
 28610   008192                     _doNerd:
 28611                           	callstack 122
 28612   008192                     
 28613                           ;../../VLCBlib_PIC/event_teach_simple.c: 432:     startTimedResponse(2, findServiceIndex
      +                          (SERVICE_ID_OLD_TEACH), nerdCallback);
 28614   008192  0E04               	movlw	4
 28615   008194  EC6F  F036         	call	_findServiceIndex
 28616   008198  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 28617   00819A  0E48               	movlw	low _nerdCallback
 28618   00819C  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 28619   00819E  0E74               	movlw	high _nerdCallback
 28620   0081A0  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 28621   0081A2  0E02               	movlw	2
 28622   0081A4  ECF1  F03B         	call	_startTimedResponse
 28623   0081A8  0012               	return		;funcret
 28624   0081AA                     __end_of_doNerd:
 28625                           	callstack 0
 28626                           
 28627 ;; *************** function _doNenrd *****************
 28628 ;; Defined at:
 28629 ;;		line 464 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28630 ;; Parameters:    Size  Location     Type
 28631 ;;  index           1    wreg     unsigned char 
 28632 ;; Auto vars:     Size  Location     Type
 28633 ;;  index           1   47[COMRAM] unsigned char 
 28634 ;;  eventNumber     2   45[COMRAM] unsigned short 
 28635 ;;  nodeNumber      2   43[COMRAM] unsigned short 
 28636 ;;  tableIndex      1   48[COMRAM] unsigned char 
 28637 ;; Return value:  Size  Location     Type
 28638 ;;                  1    wreg      void 
 28639 ;; Registers used:
 28640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28641 ;; Tracked objects:
 28642 ;;		On entry : 0/0
 28643 ;;		On exit  : 0/0
 28644 ;;		Unchanged: 0/0
 28645 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28647 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28649 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28650 ;;Total ram usage:        6 bytes
 28651 ;; Hardware stack levels used: 1
 28652 ;; Hardware stack levels required when called: 6
 28653 ;; This function calls:
 28654 ;;		_evtIdxToTableIndex
 28655 ;;		_getEN
 28656 ;;		_getNN
 28657 ;;		_sendMessage3
 28658 ;;		_sendMessage5
 28659 ;; This function is called by:
 28660 ;;		_teachProcessMessage
 28661 ;; This function uses a non-reentrant model
 28662 ;;
 28663                           
 28664                           	psect	text30
 28665   007006                     __ptext30:
 28666                           	callstack 0
 28667   007006                     _doNenrd:
 28668                           	callstack 118
 28669                           
 28670                           ;incstack = 0
 28671                           ;doNenrd@index stored from wreg
 28672   007006  6E30               	movwf	doNenrd@index^(0+1280),c
 28673   007008                     
 28674                           ;../../VLCBlib_PIC/event_teach_simple.c: 465:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 466:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 468:     tableIndex = evtIdxToTableIndex(index);
 28675   007008  5030               	movf	doNenrd@index^(0+1280),w,c
 28676   00700A  EC15  F041         	call	_evtIdxToTableIndex
 28677   00700E  6E31               	movwf	doNenrd@tableIndex^(0+1280),c
 28678   007010                     
 28679                           ;../../VLCBlib_PIC/event_teach_simple.c: 470:     if (tableIndex >= 255) {
 28680   007010  2831               	incf	doNenrd@tableIndex^(0+1280),w,c
 28681   007012  A4D8               	btfss	status,2,c
 28682   007014  EF0E  F038         	goto	u6171
 28683   007018  EF10  F038         	goto	u6170
 28684   00701C                     u6171:
 28685   00701C  EF28  F038         	goto	l8819
 28686   007020                     u6170:
 28687   007020                     
 28688                           ;../../VLCBlib_PIC/event_teach_simple.c: 471:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EN_IDX);
 28689   007020  C590  F526         	movff	_nn+1,sendMessage3@data1
 28690   007024  C58F  F527         	movff	_nn,sendMessage3@data2
 28691   007028  0E08               	movlw	8
 28692   00702A  6E28               	movwf	sendMessage3@data3^(0+1280),c
 28693   00702C  0E6F               	movlw	111
 28694   00702E  ECD2  F03F         	call	_sendMessage3
 28695                           
 28696                           ;../../VLCBlib_PIC/event_teach_simple.c: 473:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, OPC_NENRD, SERVICE_ID_OLD_TEACH, CMDERR_INV_EN_IDX);
 28697   007032  C590  F526         	movff	_nn+1,sendMessage5@data1
 28698   007036  C58F  F527         	movff	_nn,sendMessage5@data2
 28699   00703A  0E72               	movlw	114
 28700   00703C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28701   00703E  0E04               	movlw	4
 28702   007040  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28703   007042  0E08               	movlw	8
 28704   007044  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28705   007046  0EAF               	movlw	175
 28706   007048  EC11  F040         	call	_sendMessage5
 28707   00704C  EF43  F038         	goto	l1057
 28708   007050                     l8819:
 28709                           
 28710                           ;../../VLCBlib_PIC/event_teach_simple.c: 477:     nodeNumber = getNN(tableIndex);
 28711   007050  5031               	movf	doNenrd@tableIndex^(0+1280),w,c
 28712   007052  ECF0  F028         	call	_getNN
 28713   007056  C50D  F52C         	movff	?_getNN,doNenrd@nodeNumber
 28714   00705A  C50E  F52D         	movff	?_getNN+1,doNenrd@nodeNumber+1
 28715                           
 28716                           ;../../VLCBlib_PIC/event_teach_simple.c: 478:     eventNumber = getEN(tableIndex);
 28717   00705E  5031               	movf	doNenrd@tableIndex^(0+1280),w,c
 28718   007060  EC1E  F033         	call	_getEN
 28719   007064  C50D  F52E         	movff	?_getEN,doNenrd@eventNumber
 28720   007068  C50E  F52F         	movff	?_getEN+1,doNenrd@eventNumber+1
 28721   00706C                     
 28722                           ;../../VLCBlib_PIC/event_teach_simple.c: 479:     sendMessage5(OPC_ENRSP, nodeNumber>>8,
      +                           nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 28723   00706C  502D               	movf	(doNenrd@nodeNumber+1)^(0+1280),w,c
 28724   00706E  6E26               	movwf	sendMessage5@data1^(0+1280),c
 28725   007070  C52C  F527         	movff	doNenrd@nodeNumber,sendMessage5@data2
 28726   007074  502F               	movf	(doNenrd@eventNumber+1)^(0+1280),w,c
 28727   007076  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28728   007078  C52E  F529         	movff	doNenrd@eventNumber,sendMessage5@data4
 28729   00707C  C530  F52A         	movff	doNenrd@index,sendMessage5@data5
 28730   007080  0EF2               	movlw	242
 28731   007082  EC11  F040         	call	_sendMessage5
 28732   007086                     l1057:
 28733   007086  0012               	return		;funcret
 28734   007088                     __end_of_doNenrd:
 28735                           	callstack 0
 28736                           
 28737 ;; *************** function _evtIdxToTableIndex *****************
 28738 ;; Defined at:
 28739 ;;		line 961 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28740 ;; Parameters:    Size  Location     Type
 28741 ;;  evtIdx          1    wreg     unsigned char 
 28742 ;; Auto vars:     Size  Location     Type
 28743 ;;  evtIdx          1    0[COMRAM] unsigned char 
 28744 ;; Return value:  Size  Location     Type
 28745 ;;                  1    wreg      unsigned char 
 28746 ;; Registers used:
 28747 ;;		wreg, status,2, status,0
 28748 ;; Tracked objects:
 28749 ;;		On entry : 0/0
 28750 ;;		On exit  : 0/0
 28751 ;;		Unchanged: 0/0
 28752 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28756 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28757 ;;Total ram usage:        1 bytes
 28758 ;; Hardware stack levels used: 1
 28759 ;; Hardware stack levels required when called: 1
 28760 ;; This function calls:
 28761 ;;		Nothing
 28762 ;; This function is called by:
 28763 ;;		_doNenrd
 28764 ;;		_doReval
 28765 ;; This function uses a non-reentrant model
 28766 ;;
 28767                           
 28768                           	psect	text31
 28769   00822A                     __ptext31:
 28770                           	callstack 0
 28771   00822A                     _evtIdxToTableIndex:
 28772                           	callstack 122
 28773                           
 28774                           ;incstack = 0
 28775                           ;evtIdxToTableIndex@evtIdx stored from wreg
 28776   00822A  6E01               	movwf	evtIdxToTableIndex@evtIdx^(0+1280),c
 28777   00822C                     
 28778                           ;../../VLCBlib_PIC/event_teach_simple.c: 962:     return evtIdx - 1;
 28779   00822C  0401               	decf	evtIdxToTableIndex@evtIdx^(0+1280),w,c
 28780   00822E  0012               	return		;funcret
 28781   008230                     __end_of_evtIdxToTableIndex:
 28782                           	callstack 0
 28783                           
 28784 ;; *************** function _doEvuln *****************
 28785 ;; Defined at:
 28786 ;;		line 599 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28787 ;; Parameters:    Size  Location     Type
 28788 ;;  nodeNumber      2   58[COMRAM] unsigned short 
 28789 ;;  eventNumber     2   60[COMRAM] unsigned short 
 28790 ;; Auto vars:     Size  Location     Type
 28791 ;;  result          1   62[COMRAM] unsigned char 
 28792 ;; Return value:  Size  Location     Type
 28793 ;;                  1    wreg      void 
 28794 ;; Registers used:
 28795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28796 ;; Tracked objects:
 28797 ;;		On entry : 0/0
 28798 ;;		On exit  : 0/0
 28799 ;;		Unchanged: 0/0
 28800 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28801 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28802 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28804 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28805 ;;Total ram usage:        5 bytes
 28806 ;; Hardware stack levels used: 1
 28807 ;; Hardware stack levels required when called: 8
 28808 ;; This function calls:
 28809 ;;		_removeEvent
 28810 ;;		_sendMessage2
 28811 ;;		_sendMessage3
 28812 ;;		_sendMessage5
 28813 ;; This function is called by:
 28814 ;;		_teachProcessMessage
 28815 ;; This function uses a non-reentrant model
 28816 ;;
 28817                           
 28818                           	psect	text32
 28819   007088                     __ptext32:
 28820                           	callstack 0
 28821   007088                     _doEvuln:
 28822                           	callstack 116
 28823   007088                     
 28824                           ;../../VLCBlib_PIC/event_teach_simple.c: 600:     uint8_t result;;../../VLCBlib_PIC/even
      +                          t_teach_simple.c: 601:     result = removeEvent(nodeNumber, eventNumber);
 28825   007088  C53B  F536         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 28826   00708C  C53C  F537         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 28827   007090  C53D  F538         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 28828   007094  C53E  F539         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 28829   007098  EC9A  F03E         	call	_removeEvent	;wreg free
 28830   00709C  6E3F               	movwf	doEvuln@result^(0+1280),c
 28831   00709E                     
 28832                           ;../../VLCBlib_PIC/event_teach_simple.c: 602:     if (result) {
 28833   00709E  503F               	movf	doEvuln@result^(0+1280),w,c
 28834   0070A0  B4D8               	btfsc	status,2,c
 28835   0070A2  EF55  F038         	goto	u6071
 28836   0070A6  EF57  F038         	goto	u6070
 28837   0070AA                     u6071:
 28838   0070AA  EF6F  F038         	goto	l8729
 28839   0070AE                     u6070:
 28840   0070AE                     
 28841                           ;../../VLCBlib_PIC/event_teach_simple.c: 603:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, result);
 28842   0070AE  C590  F526         	movff	_nn+1,sendMessage3@data1
 28843   0070B2  C58F  F527         	movff	_nn,sendMessage3@data2
 28844   0070B6  C53F  F528         	movff	doEvuln@result,sendMessage3@data3
 28845   0070BA  0E6F               	movlw	111
 28846   0070BC  ECD2  F03F         	call	_sendMessage3
 28847                           
 28848                           ;../../VLCBlib_PIC/event_teach_simple.c: 605:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 28849   0070C0  C590  F526         	movff	_nn+1,sendMessage5@data1
 28850   0070C4  C58F  F527         	movff	_nn,sendMessage5@data2
 28851   0070C8  0E95               	movlw	149
 28852   0070CA  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28853   0070CC  0E04               	movlw	4
 28854   0070CE  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28855   0070D0  C53F  F52A         	movff	doEvuln@result,sendMessage5@data5
 28856   0070D4  0EAF               	movlw	175
 28857   0070D6  EC11  F040         	call	_sendMessage5
 28858   0070DA  EF83  F038         	goto	l1083
 28859   0070DE                     l8729:
 28860                           
 28861                           ;../../VLCBlib_PIC/event_teach_simple.c: 610:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 28862   0070DE  C590  F526         	movff	_nn+1,sendMessage2@data1
 28863   0070E2  C58F  F527         	movff	_nn,sendMessage2@data2
 28864   0070E6  0E59               	movlw	89
 28865   0070E8  ECE7  F03F         	call	_sendMessage2
 28866                           
 28867                           ;../../VLCBlib_PIC/event_teach_simple.c: 612:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 28868   0070EC  C590  F526         	movff	_nn+1,sendMessage5@data1
 28869   0070F0  C58F  F527         	movff	_nn,sendMessage5@data2
 28870   0070F4  0E95               	movlw	149
 28871   0070F6  6E28               	movwf	sendMessage5@data3^(0+1280),c
 28872   0070F8  0E04               	movlw	4
 28873   0070FA  6E29               	movwf	sendMessage5@data4^(0+1280),c
 28874   0070FC  0E00               	movlw	0
 28875   0070FE  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 28876   007100  0EAF               	movlw	175
 28877   007102  EC11  F040         	call	_sendMessage5
 28878   007106                     l1083:
 28879   007106  0012               	return		;funcret
 28880   007108                     __end_of_doEvuln:
 28881                           	callstack 0
 28882                           
 28883 ;; *************** function _removeEvent *****************
 28884 ;; Defined at:
 28885 ;;		line 705 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28886 ;; Parameters:    Size  Location     Type
 28887 ;;  nodeNumber      2   53[COMRAM] unsigned short 
 28888 ;;  eventNumber     2   55[COMRAM] unsigned short 
 28889 ;; Auto vars:     Size  Location     Type
 28890 ;;  tableIndex      1   57[COMRAM] unsigned char 
 28891 ;; Return value:  Size  Location     Type
 28892 ;;                  1    wreg      unsigned char 
 28893 ;; Registers used:
 28894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28895 ;; Tracked objects:
 28896 ;;		On entry : 0/0
 28897 ;;		On exit  : 0/0
 28898 ;;		Unchanged: 0/0
 28899 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28903 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28904 ;;Total ram usage:        5 bytes
 28905 ;; Hardware stack levels used: 1
 28906 ;; Hardware stack levels required when called: 7
 28907 ;; This function calls:
 28908 ;;		_findEvent
 28909 ;;		_removeTableEntry
 28910 ;; This function is called by:
 28911 ;;		_doEvuln
 28912 ;; This function uses a non-reentrant model
 28913 ;;
 28914                           
 28915                           	psect	text33
 28916   007D34                     __ptext33:
 28917                           	callstack 0
 28918   007D34                     _removeEvent:
 28919                           	callstack 116
 28920   007D34                     
 28921                           ;../../VLCBlib_PIC/event_teach_simple.c: 707:     uint8_t tableIndex = findEvent(nodeNum
      +                          ber, eventNumber);
 28922   007D34  C536  F522         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 28923   007D38  C537  F523         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 28924   007D3C  C538  F524         	movff	removeEvent@eventNumber,findEvent@eventNumber
 28925   007D40  C539  F525         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 28926   007D44  EC70  F031         	call	_findEvent	;wreg free
 28927   007D48  6E3A               	movwf	removeEvent@tableIndex^(0+1280),c
 28928   007D4A                     
 28929                           ;../../VLCBlib_PIC/event_teach_simple.c: 708:     if (tableIndex == 0xff) return CMDERR_
      +                          INVALID_EVENT;
 28930   007D4A  283A               	incf	removeEvent@tableIndex^(0+1280),w,c
 28931   007D4C  A4D8               	btfss	status,2,c
 28932   007D4E  EFAB  F03E         	goto	u5631
 28933   007D52  EFAD  F03E         	goto	u5630
 28934   007D56                     u5631:
 28935   007D56  EFB0  F03E         	goto	l8181
 28936   007D5A                     u5630:
 28937   007D5A  0E07               	movlw	7
 28938   007D5C  EFB3  F03E         	goto	l1103
 28939   007D60                     l8181:
 28940                           
 28941                           ;../../VLCBlib_PIC/event_teach_simple.c: 710:     return removeTableEntry(tableIndex);
 28942   007D60  503A               	movf	removeEvent@tableIndex^(0+1280),w,c
 28943   007D62  EC1A  F022         	call	_removeTableEntry
 28944   007D66                     l1103:
 28945   007D66  0012               	return		;funcret
 28946   007D68                     __end_of_removeEvent:
 28947                           	callstack 0
 28948                           
 28949 ;; *************** function _doEvlrn *****************
 28950 ;; Defined at:
 28951 ;;		line 522 in file "../../VLCBlib_PIC/event_teach_simple.c"
 28952 ;; Parameters:    Size  Location     Type
 28953 ;;  nodeNumber      2   77[COMRAM] unsigned short 
 28954 ;;  eventNumber     2   79[COMRAM] unsigned short 
 28955 ;;  evNum           1   81[COMRAM] unsigned char 
 28956 ;;  evVal           1   82[COMRAM] unsigned char 
 28957 ;; Auto vars:     Size  Location     Type
 28958 ;;		None
 28959 ;; Return value:  Size  Location     Type
 28960 ;;                  1    wreg      void 
 28961 ;; Registers used:
 28962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28963 ;; Tracked objects:
 28964 ;;		On entry : 0/0
 28965 ;;		On exit  : 0/0
 28966 ;;		Unchanged: 0/0
 28967 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28968 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28971 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28972 ;;Total ram usage:        6 bytes
 28973 ;; Hardware stack levels used: 1
 28974 ;; Hardware stack levels required when called: 9
 28975 ;; This function calls:
 28976 ;;		_APP_addEvent
 28977 ;;		_sendMessage2
 28978 ;;		_sendMessage3
 28979 ;;		_sendMessage5
 28980 ;; This function is called by:
 28981 ;;		_teachProcessMessage
 28982 ;; This function uses a non-reentrant model
 28983 ;;
 28984                           
 28985                           	psect	text34
 28986   005D8E                     __ptext34:
 28987                           	callstack 0
 28988   005D8E                     _doEvlrn:
 28989                           	callstack 115
 28990   005D8E                     
 28991                           ;../../VLCBlib_PIC/event_teach_simple.c: 524:     evNum--;
 28992   005D8E  0652               	decf	doEvlrn@evNum^(0+1280),f,c
 28993   005D90                     
 28994                           ;../../VLCBlib_PIC/event_teach_simple.c: 525:     if (evNum >= 252) {
 28995   005D90  0EFB               	movlw	251
 28996   005D92  6452               	cpfsgt	doEvlrn@evNum^(0+1280),c
 28997   005D94  EFCE  F02E         	goto	u6051
 28998   005D98  EFD0  F02E         	goto	u6050
 28999   005D9C                     u6051:
 29000   005D9C  EFE8  F02E         	goto	l8705
 29001   005DA0                     u6050:
 29002   005DA0                     
 29003                           ;../../VLCBlib_PIC/event_teach_simple.c: 526:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 29004   005DA0  C590  F526         	movff	_nn+1,sendMessage3@data1
 29005   005DA4  C58F  F527         	movff	_nn,sendMessage3@data2
 29006   005DA8  0E06               	movlw	6
 29007   005DAA  6E28               	movwf	sendMessage3@data3^(0+1280),c
 29008   005DAC  0E6F               	movlw	111
 29009   005DAE  ECD2  F03F         	call	_sendMessage3
 29010                           
 29011                           ;../../VLCBlib_PIC/event_teach_simple.c: 528:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 29012   005DB2  C590  F526         	movff	_nn+1,sendMessage5@data1
 29013   005DB6  C58F  F527         	movff	_nn,sendMessage5@data2
 29014   005DBA  0ED2               	movlw	210
 29015   005DBC  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29016   005DBE  0E04               	movlw	4
 29017   005DC0  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29018   005DC2  0E06               	movlw	6
 29019   005DC4  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 29020   005DC6  0EAF               	movlw	175
 29021   005DC8  EC11  F040         	call	_sendMessage5
 29022   005DCC  EF2F  F02F         	goto	l1070
 29023   005DD0                     l8705:
 29024                           
 29025                           ;../../VLCBlib_PIC/event_teach_simple.c: 532:     APP_addEvent(nodeNumber, eventNumber, 
      +                          evNum, evVal, FALSE);
 29026   005DD0  C54E  F547         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 29027   005DD4  C54F  F548         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 29028   005DD8  C550  F549         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 29029   005DDC  C551  F54A         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 29030   005DE0  C552  F54B         	movff	doEvlrn@evNum,APP_addEvent@evNum
 29031   005DE4  C553  F54C         	movff	doEvlrn@evVal,APP_addEvent@evVal
 29032   005DE8  0E00               	movlw	0
 29033   005DEA  6E4D               	movwf	APP_addEvent@forceOwnNN^(0+1280),c
 29034   005DEC  EC4E  F040         	call	_APP_addEvent	;wreg free
 29035   005DF0                     
 29036                           ;../../VLCBlib_PIC/event_teach_simple.c: 533:     if (errno) {
 29037   005DF0  0105               	movlb	5	; () banked
 29038   005DF2  51A3               	movf	_errno& (0+255),w,b
 29039   005DF4  B4D8               	btfsc	status,2,c
 29040   005DF6  EFFF  F02E         	goto	u6061
 29041   005DFA  EF01  F02F         	goto	u6060
 29042   005DFE                     u6061:
 29043   005DFE  EF19  F02F         	goto	l8713
 29044   005E02                     u6060:
 29045   005E02                     
 29046                           ; BSR set to: 5
 29047                           ;../../VLCBlib_PIC/event_teach_simple.c: 535:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, errno);
 29048   005E02  C590  F526         	movff	_nn+1,sendMessage3@data1
 29049   005E06  C58F  F527         	movff	_nn,sendMessage3@data2
 29050   005E0A  C5A3  F528         	movff	_errno,sendMessage3@data3
 29051   005E0E  0E6F               	movlw	111
 29052   005E10  ECD2  F03F         	call	_sendMessage3
 29053                           
 29054                           ;../../VLCBlib_PIC/event_teach_simple.c: 537:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, errno);
 29055   005E14  C590  F526         	movff	_nn+1,sendMessage5@data1
 29056   005E18  C58F  F527         	movff	_nn,sendMessage5@data2
 29057   005E1C  0ED2               	movlw	210
 29058   005E1E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29059   005E20  0E04               	movlw	4
 29060   005E22  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29061   005E24  C5A3  F52A         	movff	_errno,sendMessage5@data5
 29062   005E28  0EAF               	movlw	175
 29063   005E2A  EC11  F040         	call	_sendMessage5
 29064   005E2E  EF2F  F02F         	goto	l1070
 29065   005E32                     l8713:
 29066                           
 29067                           ; BSR set to: 5
 29068                           ;../../VLCBlib_PIC/event_teach_simple.c: 542:     teachDiagnostics[0x01].asUint++;
 29069   005E32  4BCE               	infsnz	(_teachDiagnostics+2)& (0+255),f,b
 29070   005E34  2BCF               	incf	(_teachDiagnostics+3)& (0+255),f,b
 29071   005E36                     
 29072                           ; BSR set to: 5
 29073                           ;../../VLCBlib_PIC/event_teach_simple.c: 544:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 29074   005E36  C590  F526         	movff	_nn+1,sendMessage2@data1
 29075   005E3A  C58F  F527         	movff	_nn,sendMessage2@data2
 29076   005E3E  0E59               	movlw	89
 29077   005E40  ECE7  F03F         	call	_sendMessage2
 29078   005E44                     
 29079                           ;../../VLCBlib_PIC/event_teach_simple.c: 546:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 29080   005E44  C590  F526         	movff	_nn+1,sendMessage5@data1
 29081   005E48  C58F  F527         	movff	_nn,sendMessage5@data2
 29082   005E4C  0ED2               	movlw	210
 29083   005E4E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 29084   005E50  0E04               	movlw	4
 29085   005E52  6E29               	movwf	sendMessage5@data4^(0+1280),c
 29086   005E54  0E00               	movlw	0
 29087   005E56  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 29088   005E58  0EAF               	movlw	175
 29089   005E5A  EC11  F040         	call	_sendMessage5
 29090   005E5E                     l1070:
 29091   005E5E  0012               	return		;funcret
 29092   005E60                     __end_of_doEvlrn:
 29093                           	callstack 0
 29094                           
 29095 ;; *************** function _APP_addEvent *****************
 29096 ;; Defined at:
 29097 ;;		line 93 in file "../canargb_events.c"
 29098 ;; Parameters:    Size  Location     Type
 29099 ;;  nodeNumber      2   70[COMRAM] unsigned short 
 29100 ;;  eventNumber     2   72[COMRAM] unsigned short 
 29101 ;;  evNum           1   74[COMRAM] unsigned char 
 29102 ;;  evVal           1   75[COMRAM] unsigned char 
 29103 ;;  forceOwnNN      1   76[COMRAM] enum E23257
 29104 ;; Auto vars:     Size  Location     Type
 29105 ;;		None
 29106 ;; Return value:  Size  Location     Type
 29107 ;;                  1    wreg      unsigned char 
 29108 ;; Registers used:
 29109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29110 ;; Tracked objects:
 29111 ;;		On entry : 0/0
 29112 ;;		On exit  : 0/0
 29113 ;;		Unchanged: 0/0
 29114 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29115 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29118 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29119 ;;Total ram usage:        7 bytes
 29120 ;; Hardware stack levels used: 1
 29121 ;; Hardware stack levels required when called: 8
 29122 ;; This function calls:
 29123 ;;		_addEvent
 29124 ;; This function is called by:
 29125 ;;		_doEvlrn
 29126 ;; This function uses a non-reentrant model
 29127 ;;
 29128                           
 29129                           	psect	text35
 29130   00809C                     __ptext35:
 29131                           	callstack 0
 29132   00809C                     _APP_addEvent:
 29133                           	callstack 115
 29134   00809C                     
 29135                           ;../canargb_events.c: 94:     return addEvent(nodeNumber, eventNumber, evNum, evVal, for
      +                          ceOwnNN);;	Return value of _APP_addEvent is never used
 29136   00809C  C547  F52F         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 29137   0080A0  C548  F530         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 29138   0080A4  C549  F531         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 29139   0080A8  C54A  F532         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 29140   0080AC  C54B  F533         	movff	APP_addEvent@evNum,addEvent@evNum
 29141   0080B0  C54C  F534         	movff	APP_addEvent@evVal,addEvent@evVal
 29142   0080B4  C54D  F535         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 29143   0080B8  ECE8  F01C         	call	_addEvent	;wreg free
 29144   0080BC  0012               	return		;funcret
 29145   0080BE                     __end_of_APP_addEvent:
 29146                           	callstack 0
 29147                           
 29148 ;; *************** function _addEvent *****************
 29149 ;; Defined at:
 29150 ;;		line 754 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29151 ;; Parameters:    Size  Location     Type
 29152 ;;  nodeNumber      2   46[COMRAM] unsigned short 
 29153 ;;  eventNumber     2   48[COMRAM] unsigned short 
 29154 ;;  evNum           1   50[COMRAM] unsigned char 
 29155 ;;  evVal           1   51[COMRAM] unsigned char 
 29156 ;;  forceOwnNN      1   52[COMRAM] enum E23307
 29157 ;; Auto vars:     Size  Location     Type
 29158 ;;  e               1   68[COMRAM] unsigned char 
 29159 ;;  en              2   66[COMRAM] unsigned short 
 29160 ;;  tableIndex      1   69[COMRAM] unsigned char 
 29161 ;; Return value:  Size  Location     Type
 29162 ;;                  1    wreg      unsigned char 
 29163 ;; Registers used:
 29164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29165 ;; Tracked objects:
 29166 ;;		On entry : 0/0
 29167 ;;		On exit  : 0/0
 29168 ;;		Unchanged: 0/0
 29169 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29170 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29171 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29172 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29173 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29174 ;;Total ram usage:       24 bytes
 29175 ;; Hardware stack levels used: 1
 29176 ;; Hardware stack levels required when called: 7
 29177 ;; This function calls:
 29178 ;;		_findEvent
 29179 ;;		_flushFlashBlock
 29180 ;;		_getEN
 29181 ;;		_rebuildHashtable
 29182 ;;		_writeEv
 29183 ;;		_writeNVM
 29184 ;; This function is called by:
 29185 ;;		_APP_addEvent
 29186 ;; This function uses a non-reentrant model
 29187 ;;
 29188                           
 29189                           	psect	text36
 29190   0039D0                     __ptext36:
 29191                           	callstack 0
 29192   0039D0                     _addEvent:
 29193                           	callstack 115
 29194   0039D0                     
 29195                           ;../../VLCBlib_PIC/event_teach_simple.c: 755:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 758:     tableIndex = findEvent(nodeNumber, eventNumber);
 29196   0039D0  C52F  F522         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 29197   0039D4  C530  F523         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 29198   0039D8  C531  F524         	movff	addEvent@eventNumber,findEvent@eventNumber
 29199   0039DC  C532  F525         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 29200   0039E0  EC70  F031         	call	_findEvent	;wreg free
 29201   0039E4  6E46               	movwf	addEvent@tableIndex^(0+1280),c
 29202   0039E6                     
 29203                           ;../../VLCBlib_PIC/event_teach_simple.c: 759:     if (tableIndex == 0xff) {
 29204   0039E6  2846               	incf	addEvent@tableIndex^(0+1280),w,c
 29205   0039E8  A4D8               	btfss	status,2,c
 29206   0039EA  EFF9  F01C         	goto	u5121
 29207   0039EE  EFFB  F01C         	goto	u5120
 29208   0039F2                     u5121:
 29209   0039F2  EF42  F01E         	goto	l7795
 29210   0039F6                     u5120:
 29211   0039F6                     
 29212                           ;../../VLCBlib_PIC/event_teach_simple.c: 760:         errno = CMDERR_TOO_MANY_EVENTS;
 29213   0039F6  0E04               	movlw	4
 29214   0039F8  0105               	movlb	5	; () banked
 29215   0039FA  6FA3               	movwf	_errno& (0+255),b
 29216   0039FC                     
 29217                           ; BSR set to: 5
 29218                           ;../../VLCBlib_PIC/event_teach_simple.c: 762:         for (tableIndex=0; tableIndex<255;
      +                           tableIndex++) {
 29219   0039FC  6A46               	clrf	addEvent@tableIndex^(0+1280),c
 29220   0039FE                     l7757:
 29221   0039FE  2846               	incf	addEvent@tableIndex^(0+1280),w,c
 29222   003A00  A4D8               	btfss	status,2,c
 29223   003A02  EF05  F01D         	goto	u5131
 29224   003A06  EF07  F01D         	goto	u5130
 29225   003A0A                     u5131:
 29226   003A0A  EF09  F01D         	goto	l7761
 29227   003A0E                     u5130:
 29228   003A0E  EF36  F01E         	goto	l7789
 29229   003A12                     l7761:
 29230                           
 29231                           ;../../VLCBlib_PIC/event_teach_simple.c: 763:             uint16_t en = getEN(tableIndex
      +                          );
 29232   003A12  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29233   003A14  EC1E  F033         	call	_getEN
 29234   003A18  C50D  F543         	movff	?_getEN,addEvent@en
 29235   003A1C  C50E  F544         	movff	?_getEN+1,addEvent@en+1
 29236   003A20                     
 29237                           ;../../VLCBlib_PIC/event_teach_simple.c: 764:             if (en == 0) {
 29238   003A20  5043               	movf	addEvent@en^(0+1280),w,c
 29239   003A22  1044               	iorwf	(addEvent@en+1)^(0+1280),w,c
 29240   003A24  A4D8               	btfss	status,2,c
 29241   003A26  EF17  F01D         	goto	u5141
 29242   003A2A  EF19  F01D         	goto	u5140
 29243   003A2E                     u5141:
 29244   003A2E  EF33  F01E         	goto	l7785
 29245   003A32                     u5140:
 29246   003A32                     
 29247                           ;../../VLCBlib_PIC/event_teach_simple.c: 765:                 uint8_t e;;../../VLCBlib_P
      +                          IC/event_teach_simple.c: 767:                 writeNVM(FLASH_NVM_TYPE, 0x10000 + (sizeof
      +                          (Event) + 1 + 252)*tableIndex+1, nodeNumber&0xFF);
 29248   003A32  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29249   003A34  6E36               	movwf	??_addEvent^(0+1280),c
 29250   003A36  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29251   003A38  0E01               	movlw	1
 29252   003A3A  0236               	mulwf	??_addEvent^(0+1280),c
 29253   003A3C  C4F3 F538          	movff	prodl,??_addEvent+2
 29254   003A40  C4F4 F539          	movff	prodh,??_addEvent+3
 29255   003A44  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29256   003A46  50F3               	movf	prodl,w,c
 29257   003A48  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29258   003A4A  0E01               	movlw	1
 29259   003A4C  0236               	mulwf	??_addEvent^(0+1280),c
 29260   003A4E  50F3               	movf	prodl,w,c
 29261   003A50  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29262   003A52  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29263   003A56  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29264   003A5A  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29265   003A5C  0E01               	movlw	1
 29266   003A5E  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29267   003A60  6E0E               	movwf	writeNVM@index^(0+1280),c
 29268   003A62  0E00               	movlw	0
 29269   003A64  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29270   003A66  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29271   003A68  0E01               	movlw	1
 29272   003A6A  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29273   003A6C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29274   003A6E  C52F  F511         	movff	addEvent@nodeNumber,writeNVM@value
 29275   003A72  0E01               	movlw	1
 29276   003A74  EC91  F03B         	call	_writeNVM
 29277                           
 29278                           ;../../VLCBlib_PIC/event_teach_simple.c: 768:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x10000 + (sizeof(Event) + 1 + 252)*tableIndex+0, nodeNumber>>8);
 29279   003A78  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29280   003A7A  6E36               	movwf	??_addEvent^(0+1280),c
 29281   003A7C  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29282   003A7E  0E01               	movlw	1
 29283   003A80  0236               	mulwf	??_addEvent^(0+1280),c
 29284   003A82  C4F3 F538          	movff	prodl,??_addEvent+2
 29285   003A86  C4F4 F539          	movff	prodh,??_addEvent+3
 29286   003A8A  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29287   003A8C  50F3               	movf	prodl,w,c
 29288   003A8E  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29289   003A90  0E01               	movlw	1
 29290   003A92  0236               	mulwf	??_addEvent^(0+1280),c
 29291   003A94  50F3               	movf	prodl,w,c
 29292   003A96  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29293   003A98  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29294   003A9C  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29295   003AA0  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29296   003AA2  0E00               	movlw	0
 29297   003AA4  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29298   003AA6  6E0E               	movwf	writeNVM@index^(0+1280),c
 29299   003AA8  0E00               	movlw	0
 29300   003AAA  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29301   003AAC  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29302   003AAE  0E01               	movlw	1
 29303   003AB0  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29304   003AB2  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29305   003AB4  5030               	movf	(addEvent@nodeNumber+1)^(0+1280),w,c
 29306   003AB6  6E11               	movwf	writeNVM@value^(0+1280),c
 29307   003AB8  0E01               	movlw	1
 29308   003ABA  EC91  F03B         	call	_writeNVM
 29309                           
 29310                           ;../../VLCBlib_PIC/event_teach_simple.c: 769:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x10000 + (sizeof(Event) + 1 + 252)*tableIndex+3, eventNumber&0xFF);
 29311   003ABE  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29312   003AC0  6E36               	movwf	??_addEvent^(0+1280),c
 29313   003AC2  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29314   003AC4  0E01               	movlw	1
 29315   003AC6  0236               	mulwf	??_addEvent^(0+1280),c
 29316   003AC8  C4F3 F538          	movff	prodl,??_addEvent+2
 29317   003ACC  C4F4 F539          	movff	prodh,??_addEvent+3
 29318   003AD0  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29319   003AD2  50F3               	movf	prodl,w,c
 29320   003AD4  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29321   003AD6  0E01               	movlw	1
 29322   003AD8  0236               	mulwf	??_addEvent^(0+1280),c
 29323   003ADA  50F3               	movf	prodl,w,c
 29324   003ADC  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29325   003ADE  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29326   003AE2  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29327   003AE6  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29328   003AE8  0E03               	movlw	3
 29329   003AEA  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29330   003AEC  6E0E               	movwf	writeNVM@index^(0+1280),c
 29331   003AEE  0E00               	movlw	0
 29332   003AF0  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29333   003AF2  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29334   003AF4  0E01               	movlw	1
 29335   003AF6  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29336   003AF8  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29337   003AFA  C531  F511         	movff	addEvent@eventNumber,writeNVM@value
 29338   003AFE  0E01               	movlw	1
 29339   003B00  EC91  F03B         	call	_writeNVM
 29340                           
 29341                           ;../../VLCBlib_PIC/event_teach_simple.c: 770:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x10000 + (sizeof(Event) + 1 + 252)*tableIndex+2, eventNumber>>8);
 29342   003B04  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29343   003B06  6E36               	movwf	??_addEvent^(0+1280),c
 29344   003B08  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29345   003B0A  0E01               	movlw	1
 29346   003B0C  0236               	mulwf	??_addEvent^(0+1280),c
 29347   003B0E  C4F3 F538          	movff	prodl,??_addEvent+2
 29348   003B12  C4F4 F539          	movff	prodh,??_addEvent+3
 29349   003B16  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29350   003B18  50F3               	movf	prodl,w,c
 29351   003B1A  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29352   003B1C  0E01               	movlw	1
 29353   003B1E  0236               	mulwf	??_addEvent^(0+1280),c
 29354   003B20  50F3               	movf	prodl,w,c
 29355   003B22  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29356   003B24  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29357   003B28  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29358   003B2C  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29359   003B2E  0E02               	movlw	2
 29360   003B30  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29361   003B32  6E0E               	movwf	writeNVM@index^(0+1280),c
 29362   003B34  0E00               	movlw	0
 29363   003B36  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29364   003B38  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29365   003B3A  0E01               	movlw	1
 29366   003B3C  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29367   003B3E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29368   003B40  5032               	movf	(addEvent@eventNumber+1)^(0+1280),w,c
 29369   003B42  6E11               	movwf	writeNVM@value^(0+1280),c
 29370   003B44  0E01               	movlw	1
 29371   003B46  EC91  F03B         	call	_writeNVM
 29372   003B4A                     
 29373                           ;../../VLCBlib_PIC/event_teach_simple.c: 771:                 if (forceOwnNN) {
 29374   003B4A  5035               	movf	addEvent@forceOwnNN^(0+1280),w,c
 29375   003B4C  B4D8               	btfsc	status,2,c
 29376   003B4E  EFAB  F01D         	goto	u5151
 29377   003B52  EFAD  F01D         	goto	u5150
 29378   003B56                     u5151:
 29379   003B56  EFD2  F01D         	goto	l7771
 29380   003B5A                     u5150:
 29381   003B5A                     
 29382                           ;../../VLCBlib_PIC/event_teach_simple.c: 772:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+4, 1);
 29383   003B5A  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29384   003B5C  6E36               	movwf	??_addEvent^(0+1280),c
 29385   003B5E  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29386   003B60  0E01               	movlw	1
 29387   003B62  0236               	mulwf	??_addEvent^(0+1280),c
 29388   003B64  C4F3 F538          	movff	prodl,??_addEvent+2
 29389   003B68  C4F4 F539          	movff	prodh,??_addEvent+3
 29390   003B6C  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29391   003B6E  50F3               	movf	prodl,w,c
 29392   003B70  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29393   003B72  0E01               	movlw	1
 29394   003B74  0236               	mulwf	??_addEvent^(0+1280),c
 29395   003B76  50F3               	movf	prodl,w,c
 29396   003B78  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29397   003B7A  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29398   003B7E  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29399   003B82  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29400   003B84  0E04               	movlw	4
 29401   003B86  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29402   003B88  6E0E               	movwf	writeNVM@index^(0+1280),c
 29403   003B8A  0E00               	movlw	0
 29404   003B8C  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29405   003B8E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29406   003B90  0E01               	movlw	1
 29407   003B92  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29408   003B94  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29409   003B96  0E01               	movlw	1
 29410   003B98  6E11               	movwf	writeNVM@value^(0+1280),c
 29411   003B9A  0E01               	movlw	1
 29412   003B9C  EC91  F03B         	call	_writeNVM
 29413                           
 29414                           ;../../VLCBlib_PIC/event_teach_simple.c: 773:                 } else {
 29415   003BA0  EFF5  F01D         	goto	l7773
 29416   003BA4                     l7771:
 29417                           
 29418                           ;../../VLCBlib_PIC/event_teach_simple.c: 774:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+4, 0);
 29419   003BA4  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29420   003BA6  6E36               	movwf	??_addEvent^(0+1280),c
 29421   003BA8  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29422   003BAA  0E01               	movlw	1
 29423   003BAC  0236               	mulwf	??_addEvent^(0+1280),c
 29424   003BAE  C4F3 F538          	movff	prodl,??_addEvent+2
 29425   003BB2  C4F4 F539          	movff	prodh,??_addEvent+3
 29426   003BB6  0237               	mulwf	(??_addEvent+1)^(0+1280),c
 29427   003BB8  50F3               	movf	prodl,w,c
 29428   003BBA  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29429   003BBC  0E01               	movlw	1
 29430   003BBE  0236               	mulwf	??_addEvent^(0+1280),c
 29431   003BC0  50F3               	movf	prodl,w,c
 29432   003BC2  2639               	addwf	(??_addEvent+3)^(0+1280),f,c
 29433   003BC4  C538  F53A         	movff	??_addEvent+2,??_addEvent+4
 29434   003BC8  C539  F53B         	movff	??_addEvent+3,??_addEvent+5
 29435   003BCC  6A3C               	clrf	(??_addEvent+6)^(0+1280),c
 29436   003BCE  0E04               	movlw	4
 29437   003BD0  243A               	addwf	(??_addEvent+4)^(0+1280),w,c
 29438   003BD2  6E0E               	movwf	writeNVM@index^(0+1280),c
 29439   003BD4  0E00               	movlw	0
 29440   003BD6  203B               	addwfc	(??_addEvent+5)^(0+1280),w,c
 29441   003BD8  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29442   003BDA  0E01               	movlw	1
 29443   003BDC  203C               	addwfc	(??_addEvent+6)^(0+1280),w,c
 29444   003BDE  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29445   003BE0  0E00               	movlw	0
 29446   003BE2  6E11               	movwf	writeNVM@value^(0+1280),c
 29447   003BE4  0E01               	movlw	1
 29448   003BE6  EC91  F03B         	call	_writeNVM
 29449   003BEA                     l7773:
 29450                           
 29451                           ;../../VLCBlib_PIC/event_teach_simple.c: 776:                 for (e = 0; e < 248; e++) 
      +                          {
 29452   003BEA  6A45               	clrf	addEvent@e^(0+1280),c
 29453   003BEC                     l7779:
 29454                           
 29455                           ;../../VLCBlib_PIC/event_teach_simple.c: 777:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+5 +e, 0);
 29456   003BEC  5045               	movf	addEvent@e^(0+1280),w,c
 29457   003BEE  6E36               	movwf	??_addEvent^(0+1280),c
 29458   003BF0  6A37               	clrf	(??_addEvent+1)^(0+1280),c
 29459   003BF2  6A38               	clrf	(??_addEvent+2)^(0+1280),c
 29460   003BF4  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29461   003BF6  6E39               	movwf	(??_addEvent+3)^(0+1280),c
 29462   003BF8  6A3A               	clrf	(??_addEvent+4)^(0+1280),c
 29463   003BFA  0E01               	movlw	1
 29464   003BFC  0239               	mulwf	(??_addEvent+3)^(0+1280),c
 29465   003BFE  C4F3 F53B          	movff	prodl,??_addEvent+5
 29466   003C02  C4F4 F53C          	movff	prodh,??_addEvent+6
 29467   003C06  023A               	mulwf	(??_addEvent+4)^(0+1280),c
 29468   003C08  50F3               	movf	prodl,w,c
 29469   003C0A  263C               	addwf	(??_addEvent+6)^(0+1280),f,c
 29470   003C0C  0E01               	movlw	1
 29471   003C0E  0239               	mulwf	(??_addEvent+3)^(0+1280),c
 29472   003C10  50F3               	movf	prodl,w,c
 29473   003C12  263C               	addwf	(??_addEvent+6)^(0+1280),f,c
 29474   003C14  C53B  F53D         	movff	??_addEvent+5,??_addEvent+7
 29475   003C18  C53C  F53E         	movff	??_addEvent+6,??_addEvent+8
 29476   003C1C  6A3F               	clrf	(??_addEvent+9)^(0+1280),c
 29477   003C1E  5036               	movf	??_addEvent^(0+1280),w,c
 29478   003C20  243D               	addwf	(??_addEvent+7)^(0+1280),w,c
 29479   003C22  6E40               	movwf	(??_addEvent+10)^(0+1280),c
 29480   003C24  5037               	movf	(??_addEvent+1)^(0+1280),w,c
 29481   003C26  203E               	addwfc	(??_addEvent+8)^(0+1280),w,c
 29482   003C28  6E41               	movwf	(??_addEvent+11)^(0+1280),c
 29483   003C2A  5038               	movf	(??_addEvent+2)^(0+1280),w,c
 29484   003C2C  203F               	addwfc	(??_addEvent+9)^(0+1280),w,c
 29485   003C2E  6E42               	movwf	(??_addEvent+12)^(0+1280),c
 29486   003C30  0E05               	movlw	5
 29487   003C32  2440               	addwf	(??_addEvent+10)^(0+1280),w,c
 29488   003C34  6E0E               	movwf	writeNVM@index^(0+1280),c
 29489   003C36  0E00               	movlw	0
 29490   003C38  2041               	addwfc	(??_addEvent+11)^(0+1280),w,c
 29491   003C3A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29492   003C3C  0E01               	movlw	1
 29493   003C3E  2042               	addwfc	(??_addEvent+12)^(0+1280),w,c
 29494   003C40  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29495   003C42  0E00               	movlw	0
 29496   003C44  6E11               	movwf	writeNVM@value^(0+1280),c
 29497   003C46  0E01               	movlw	1
 29498   003C48  EC91  F03B         	call	_writeNVM
 29499   003C4C                     
 29500                           ;../../VLCBlib_PIC/event_teach_simple.c: 778:                 }
 29501   003C4C  2A45               	incf	addEvent@e^(0+1280),f,c
 29502   003C4E  0EF7               	movlw	247
 29503   003C50  6445               	cpfsgt	addEvent@e^(0+1280),c
 29504   003C52  EF2D  F01E         	goto	u5161
 29505   003C56  EF2F  F01E         	goto	u5160
 29506   003C5A                     u5161:
 29507   003C5A  EFF6  F01D         	goto	l7779
 29508   003C5E                     u5160:
 29509   003C5E                     
 29510                           ;../../VLCBlib_PIC/event_teach_simple.c: 779:                 errno = 0;
 29511   003C5E  0105               	movlb	5	; () banked
 29512   003C60  6BA3               	clrf	_errno& (0+255),b
 29513                           
 29514                           ;../../VLCBlib_PIC/event_teach_simple.c: 780:                 break;
 29515   003C62  EF36  F01E         	goto	l7789
 29516   003C66                     l7785:
 29517                           
 29518                           ;../../VLCBlib_PIC/event_teach_simple.c: 782:         }
 29519   003C66  2A46               	incf	addEvent@tableIndex^(0+1280),f,c
 29520   003C68  EFFF  F01C         	goto	l7757
 29521   003C6C                     l7789:
 29522                           
 29523                           ;../../VLCBlib_PIC/event_teach_simple.c: 783:         if (errno) {
 29524   003C6C  0105               	movlb	5	; () banked
 29525   003C6E  51A3               	movf	_errno& (0+255),w,b
 29526   003C70  B4D8               	btfsc	status,2,c
 29527   003C72  EF3D  F01E         	goto	u5171
 29528   003C76  EF3F  F01E         	goto	u5170
 29529   003C7A                     u5171:
 29530   003C7A  EF42  F01E         	goto	l7795
 29531   003C7E                     u5170:
 29532   003C7E                     l7791:
 29533                           
 29534                           ; BSR set to: 5
 29535                           ;../../VLCBlib_PIC/event_teach_simple.c: 784:             return 0xff;
 29536   003C7E  0EFF               	movlw	255
 29537   003C80  EF5B  F01E         	goto	l1120
 29538   003C84                     l7795:
 29539                           
 29540                           ;../../VLCBlib_PIC/event_teach_simple.c: 788:     if (writeEv(tableIndex, evNum, evVal))
      +                           {
 29541   003C84  C533  F515         	movff	addEvent@evNum,writeEv@evNum
 29542   003C88  C534  F516         	movff	addEvent@evVal,writeEv@evVal
 29543   003C8C  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29544   003C8E  EC96  F035         	call	_writeEv
 29545   003C92  0900               	iorlw	0
 29546   003C94  B4D8               	btfsc	status,2,c
 29547   003C96  EF4F  F01E         	goto	u5181
 29548   003C9A  EF51  F01E         	goto	u5180
 29549   003C9E                     u5181:
 29550   003C9E  EF56  F01E         	goto	l7803
 29551   003CA2                     u5180:
 29552   003CA2                     
 29553                           ;../../VLCBlib_PIC/event_teach_simple.c: 790:         errno = CMDERR_INV_EV_IDX;
 29554   003CA2  0E06               	movlw	6
 29555   003CA4  0105               	movlb	5	; () banked
 29556   003CA6  6FA3               	movwf	_errno& (0+255),b
 29557   003CA8  EF3F  F01E         	goto	l7791
 29558   003CAC                     l7803:
 29559                           
 29560                           ;../../VLCBlib_PIC/event_teach_simple.c: 794:     flushFlashBlock();
 29561   003CAC  EC62  F034         	call	_flushFlashBlock	;wreg free
 29562   003CB0                     
 29563                           ;../../VLCBlib_PIC/event_teach_simple.c: 796:     rebuildHashtable();
 29564   003CB0  EC16  F02B         	call	_rebuildHashtable	;wreg free
 29565   003CB4                     
 29566                           ;../../VLCBlib_PIC/event_teach_simple.c: 798:     return tableIndex;
 29567   003CB4  5046               	movf	addEvent@tableIndex^(0+1280),w,c
 29568   003CB6                     l1120:
 29569   003CB6  0012               	return		;funcret
 29570   003CB8                     __end_of_addEvent:
 29571                           	callstack 0
 29572                           
 29573 ;; *************** function _writeEv *****************
 29574 ;; Defined at:
 29575 ;;		line 845 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29576 ;; Parameters:    Size  Location     Type
 29577 ;;  tableIndex      1    wreg     unsigned char 
 29578 ;;  evNum           1   20[COMRAM] unsigned char 
 29579 ;;  evVal           1   21[COMRAM] unsigned char 
 29580 ;; Auto vars:     Size  Location     Type
 29581 ;;  tableIndex      1   35[COMRAM] unsigned char 
 29582 ;; Return value:  Size  Location     Type
 29583 ;;                  1    wreg      unsigned char 
 29584 ;; Registers used:
 29585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29586 ;; Tracked objects:
 29587 ;;		On entry : 0/0
 29588 ;;		On exit  : 0/0
 29589 ;;		Unchanged: 0/0
 29590 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29593 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29594 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29595 ;;Total ram usage:       16 bytes
 29596 ;; Hardware stack levels used: 1
 29597 ;; Hardware stack levels required when called: 6
 29598 ;; This function calls:
 29599 ;;		_writeNVM
 29600 ;; This function is called by:
 29601 ;;		_addEvent
 29602 ;; This function uses a non-reentrant model
 29603 ;;
 29604                           
 29605                           	psect	text37
 29606   006B2C                     __ptext37:
 29607                           	callstack 0
 29608   006B2C                     _writeEv:
 29609                           	callstack 115
 29610                           
 29611                           ;incstack = 0
 29612                           ;writeEv@tableIndex stored from wreg
 29613   006B2C  6E24               	movwf	writeEv@tableIndex^(0+1280),c
 29614   006B2E                     
 29615                           ;../../VLCBlib_PIC/event_teach_simple.c: 846:     if (evNum >= 252) {
 29616   006B2E  0EFB               	movlw	251
 29617   006B30  6415               	cpfsgt	writeEv@evNum^(0+1280),c
 29618   006B32  EF9D  F035         	goto	u5061
 29619   006B36  EF9F  F035         	goto	u5060
 29620   006B3A                     u5061:
 29621   006B3A  EFA2  F035         	goto	l7699
 29622   006B3E                     u5060:
 29623   006B3E                     
 29624                           ;../../VLCBlib_PIC/event_teach_simple.c: 847:         return CMDERR_INV_EV_IDX;
 29625   006B3E  0E06               	movlw	6
 29626   006B40  EFDE  F035         	goto	l1132
 29627   006B44                     l7699:
 29628                           
 29629                           ;../../VLCBlib_PIC/event_teach_simple.c: 849:     if (tableIndex >= 255) {
 29630   006B44  2824               	incf	writeEv@tableIndex^(0+1280),w,c
 29631   006B46  A4D8               	btfss	status,2,c
 29632   006B48  EFA8  F035         	goto	u5071
 29633   006B4C  EFAA  F035         	goto	u5070
 29634   006B50                     u5071:
 29635   006B50  EFAD  F035         	goto	l7705
 29636   006B54                     u5070:
 29637   006B54                     
 29638                           ;../../VLCBlib_PIC/event_teach_simple.c: 850:         return CMDERR_INV_EN_IDX;
 29639   006B54  0E08               	movlw	8
 29640   006B56  EFDE  F035         	goto	l1132
 29641   006B5A                     l7705:
 29642                           
 29643                           ;../../VLCBlib_PIC/event_teach_simple.c: 854:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex+5 +evNum, evVal);
 29644   006B5A  5015               	movf	writeEv@evNum^(0+1280),w,c
 29645   006B5C  6E17               	movwf	??_writeEv^(0+1280),c
 29646   006B5E  6A18               	clrf	(??_writeEv+1)^(0+1280),c
 29647   006B60  6A19               	clrf	(??_writeEv+2)^(0+1280),c
 29648   006B62  5024               	movf	writeEv@tableIndex^(0+1280),w,c
 29649   006B64  6E1A               	movwf	(??_writeEv+3)^(0+1280),c
 29650   006B66  6A1B               	clrf	(??_writeEv+4)^(0+1280),c
 29651   006B68  0E01               	movlw	1
 29652   006B6A  021A               	mulwf	(??_writeEv+3)^(0+1280),c
 29653   006B6C  C4F3 F51C          	movff	prodl,??_writeEv+5
 29654   006B70  C4F4 F51D          	movff	prodh,??_writeEv+6
 29655   006B74  021B               	mulwf	(??_writeEv+4)^(0+1280),c
 29656   006B76  50F3               	movf	prodl,w,c
 29657   006B78  261D               	addwf	(??_writeEv+6)^(0+1280),f,c
 29658   006B7A  0E01               	movlw	1
 29659   006B7C  021A               	mulwf	(??_writeEv+3)^(0+1280),c
 29660   006B7E  50F3               	movf	prodl,w,c
 29661   006B80  261D               	addwf	(??_writeEv+6)^(0+1280),f,c
 29662   006B82  C51C  F51E         	movff	??_writeEv+5,??_writeEv+7
 29663   006B86  C51D  F51F         	movff	??_writeEv+6,??_writeEv+8
 29664   006B8A  6A20               	clrf	(??_writeEv+9)^(0+1280),c
 29665   006B8C  5017               	movf	??_writeEv^(0+1280),w,c
 29666   006B8E  241E               	addwf	(??_writeEv+7)^(0+1280),w,c
 29667   006B90  6E21               	movwf	(??_writeEv+10)^(0+1280),c
 29668   006B92  5018               	movf	(??_writeEv+1)^(0+1280),w,c
 29669   006B94  201F               	addwfc	(??_writeEv+8)^(0+1280),w,c
 29670   006B96  6E22               	movwf	(??_writeEv+11)^(0+1280),c
 29671   006B98  5019               	movf	(??_writeEv+2)^(0+1280),w,c
 29672   006B9A  2020               	addwfc	(??_writeEv+9)^(0+1280),w,c
 29673   006B9C  6E23               	movwf	(??_writeEv+12)^(0+1280),c
 29674   006B9E  0E05               	movlw	5
 29675   006BA0  2421               	addwf	(??_writeEv+10)^(0+1280),w,c
 29676   006BA2  6E0E               	movwf	writeNVM@index^(0+1280),c
 29677   006BA4  0E00               	movlw	0
 29678   006BA6  2022               	addwfc	(??_writeEv+11)^(0+1280),w,c
 29679   006BA8  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 29680   006BAA  0E01               	movlw	1
 29681   006BAC  2023               	addwfc	(??_writeEv+12)^(0+1280),w,c
 29682   006BAE  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 29683   006BB0  C516  F511         	movff	writeEv@evVal,writeNVM@value
 29684   006BB4  0E01               	movlw	1
 29685   006BB6  EC91  F03B         	call	_writeNVM
 29686   006BBA                     
 29687                           ;../../VLCBlib_PIC/event_teach_simple.c: 855:     return 0;
 29688   006BBA  0E00               	movlw	0
 29689   006BBC                     l1132:
 29690   006BBC  0012               	return		;funcret
 29691   006BBE                     __end_of_writeEv:
 29692                           	callstack 0
 29693                           
 29694 ;; *************** function _pollTimedResponse *****************
 29695 ;; Defined at:
 29696 ;;		line 116 in file "../../VLCBlib_PIC/timedResponse.c"
 29697 ;; Parameters:    Size  Location     Type
 29698 ;;		None
 29699 ;; Auto vars:     Size  Location     Type
 29700 ;;  result          1   62[COMRAM] enum E23467
 29701 ;; Return value:  Size  Location     Type
 29702 ;;                  1    wreg      void 
 29703 ;; Registers used:
 29704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29705 ;; Tracked objects:
 29706 ;;		On entry : 0/0
 29707 ;;		On exit  : 0/0
 29708 ;;		Unchanged: 0/0
 29709 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29711 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29712 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29713 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29714 ;;Total ram usage:        3 bytes
 29715 ;; Hardware stack levels used: 1
 29716 ;; Hardware stack levels required when called: 7
 29717 ;; This function calls:
 29718 ;;		NULL
 29719 ;;		_mnsTRallDiagnosticsCallback
 29720 ;;		_mnsTRrqnpnCallback
 29721 ;;		_mnsTRserviceDiscoveryCallback
 29722 ;;		_nerdCallback
 29723 ;;		_nvTRnvrdCallback
 29724 ;;		_reqevCallback
 29725 ;; This function is called by:
 29726 ;;		_poll
 29727 ;; This function uses a non-reentrant model
 29728 ;;
 29729                           
 29730                           	psect	text38
 29731   0060A6                     __ptext38:
 29732                           	callstack 0
 29733   0060A6                     _pollTimedResponse:
 29734                           	callstack 118
 29735   0060A6                     
 29736                           ;../../VLCBlib_PIC/timedResponse.c: 117:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 119:     if (timedResponseType == 0xFF) {
 29737   0060A6  0105               	movlb	5	; () banked
 29738   0060A8  2996               	incf	_timedResponseType& (0+255),w,b
 29739   0060AA  A4D8               	btfss	status,2,c
 29740   0060AC  EF5A  F030         	goto	u8171
 29741   0060B0  EF5C  F030         	goto	u8170
 29742   0060B4                     u8171:
 29743   0060B4  EF5E  F030         	goto	l10799
 29744   0060B8                     u8170:
 29745   0060B8  EFB2  F030         	goto	l1881
 29746   0060BC                     l10799:
 29747                           
 29748                           ; BSR set to: 5
 29749                           ;../../VLCBlib_PIC/timedResponse.c: 123:     if (timedResponseCallback == ((void*)0)) {
 29750   0060BC  5187               	movf	_timedResponseCallback& (0+255),w,b
 29751   0060BE  1188               	iorwf	(_timedResponseCallback+1)& (0+255),w,b
 29752   0060C0  A4D8               	btfss	status,2,c
 29753   0060C2  EF65  F030         	goto	u8181
 29754   0060C6  EF67  F030         	goto	u8180
 29755   0060CA                     u8181:
 29756   0060CA  EF6A  F030         	goto	l10803
 29757   0060CE                     u8180:
 29758   0060CE                     l10801:
 29759                           
 29760                           ; BSR set to: 5
 29761                           ;../../VLCBlib_PIC/timedResponse.c: 125:         timedResponseType = 0xFF;
 29762   0060CE  6996               	setf	_timedResponseType& (0+255),b
 29763                           
 29764                           ;../../VLCBlib_PIC/timedResponse.c: 126:         return;
 29765   0060D0  EFB2  F030         	goto	l1881
 29766   0060D4                     l10803:
 29767                           
 29768                           ; BSR set to: 5
 29769                           ;../../VLCBlib_PIC/timedResponse.c: 130:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 29770   0060D4  D802               	call	u8198
 29771   0060D6  EF7B  F030         	goto	u8199
 29772   0060DA                     u8198:
 29773   0060DA  0005               	push	
 29774   0060DC  6EFA               	movwf	pclath,c
 29775   0060DE  5187               	movf	_timedResponseCallback& (0+255),w,b
 29776   0060E0  6EFD               	movwf	tosl,c
 29777   0060E2  5188               	movf	(_timedResponseCallback+1)& (0+255),w,b
 29778   0060E4  6EFE               	movwf	tosh,c
 29779   0060E6  6AFF               	clrf	tosu,c
 29780   0060E8  50FA               	movf	pclath,w,c
 29781   0060EA  C598  F52E         	movff	_timedResponseServiceIndex,nvTRnvrdCallback@serviceIndex
 29782   0060EE  C595  F52F         	movff	_timedResponseStep,nvTRnvrdCallback@step
 29783   0060F2  5196               	movf	_timedResponseType& (0+255),w,b
 29784   0060F4  0012               	return		;indir
 29785   0060F6                     u8199:
 29786   0060F6  6E3F               	movwf	pollTimedResponse@result^(0+1280),c
 29787                           
 29788                           ;../../VLCBlib_PIC/timedResponse.c: 131:     switch (result) {
 29789   0060F8  EF99  F030         	goto	l10817
 29790   0060FC                     l10805:
 29791                           
 29792                           ;../../VLCBlib_PIC/timedResponse.c: 135:             if (timedResponseAllServicesFlag) {
 29793   0060FC  0105               	movlb	5	; () banked
 29794   0060FE  5197               	movf	_timedResponseAllServicesFlag& (0+255),w,b
 29795   006100  B4D8               	btfsc	status,2,c
 29796   006102  EF85  F030         	goto	u8201
 29797   006106  EF87  F030         	goto	u8200
 29798   00610A                     u8201:
 29799   00610A  EF67  F030         	goto	l10801
 29800   00610E                     u8200:
 29801   00610E                     
 29802                           ; BSR set to: 5
 29803                           ;../../VLCBlib_PIC/timedResponse.c: 137:                 timedResponseServiceIndex++;
 29804   00610E  2B98               	incf	_timedResponseServiceIndex& (0+255),f,b
 29805   006110                     
 29806                           ; BSR set to: 5
 29807                           ;../../VLCBlib_PIC/timedResponse.c: 138:                 if (timedResponseServiceIndex >
      +                          = 6) {
 29808   006110  0E05               	movlw	5
 29809   006112  6598               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 29810   006114  EF8E  F030         	goto	u8211
 29811   006118  EF90  F030         	goto	u8210
 29812   00611C                     u8211:
 29813   00611C  EF92  F030         	goto	l1886
 29814   006120                     u8210:
 29815   006120  EF67  F030         	goto	l10801
 29816   006124                     l1886:
 29817                           
 29818                           ; BSR set to: 5
 29819                           ;../../VLCBlib_PIC/timedResponse.c: 142:                     timedResponseStep = 0;
 29820   006124  6B95               	clrf	_timedResponseStep& (0+255),b
 29821   006126  EFB2  F030         	goto	l1881
 29822   00612A                     l10813:
 29823                           
 29824                           ;../../VLCBlib_PIC/timedResponse.c: 151:             timedResponseStep++;
 29825   00612A  0105               	movlb	5	; () banked
 29826   00612C  2B95               	incf	_timedResponseStep& (0+255),f,b
 29827                           
 29828                           ;../../VLCBlib_PIC/timedResponse.c: 152:             break;
 29829   00612E  EFB2  F030         	goto	l1881
 29830   006132                     l10817:
 29831   006132  503F               	movf	pollTimedResponse@result^(0+1280),w,c
 29832   006134  6E3D               	movwf	??_pollTimedResponse^(0+1280),c
 29833   006136  6A3E               	clrf	(??_pollTimedResponse+1)^(0+1280),c
 29834                           
 29835                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29836                           ; Switch size 1, requested type "simple"
 29837                           ; Number of cases is 1, Range of values is 0 to 0
 29838                           ; switch strategies available:
 29839                           ; Name         Instructions Cycles
 29840                           ; simple_byte            4     3 (average)
 29841                           ;	Chosen strategy is simple_byte
 29842   006138  503E               	movf	(??_pollTimedResponse+1)^(0+1280),w,c
 29843   00613A  0A00               	xorlw	0	; case 0
 29844   00613C  B4D8               	btfsc	status,2,c
 29845   00613E  EFA3  F030         	goto	l11605
 29846   006142  EFB2  F030         	goto	l1881
 29847   006146                     l11605:
 29848                           
 29849                           ; Switch size 1, requested type "simple"
 29850                           ; Number of cases is 3, Range of values is 0 to 2
 29851                           ; switch strategies available:
 29852                           ; Name         Instructions Cycles
 29853                           ; simple_byte           10     6 (average)
 29854                           ;	Chosen strategy is simple_byte
 29855   006146  503D               	movf	??_pollTimedResponse^(0+1280),w,c
 29856   006148  0A00               	xorlw	0	; case 0
 29857   00614A  B4D8               	btfsc	status,2,c
 29858   00614C  EF7E  F030         	goto	l10805
 29859   006150  0A01               	xorlw	1	; case 1
 29860   006152  B4D8               	btfsc	status,2,c
 29861   006154  EFB2  F030         	goto	l1881
 29862   006158  0A03               	xorlw	3	; case 2
 29863   00615A  B4D8               	btfsc	status,2,c
 29864   00615C  EF95  F030         	goto	l10813
 29865   006160  EFB2  F030         	goto	l1881
 29866   006164                     l1881:
 29867   006164  0012               	return		;funcret
 29868   006166                     __end_of_pollTimedResponse:
 29869                           	callstack 0
 29870                           
 29871 ;; *************** function _nvTRnvrdCallback *****************
 29872 ;; Defined at:
 29873 ;;		line 369 in file "../../VLCBlib_PIC/nv.c"
 29874 ;; Parameters:    Size  Location     Type
 29875 ;;  type            1    wreg     unsigned char 
 29876 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 29877 ;;  step            1   46[COMRAM] unsigned char 
 29878 ;; Auto vars:     Size  Location     Type
 29879 ;;  type            1    0[COMRAM] unsigned char 
 29880 ;;  valueOrError    2   47[COMRAM] short 
 29881 ;; Return value:  Size  Location     Type
 29882 ;;                  1    wreg      enum E23491
 29883 ;; Registers used:
 29884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29885 ;; Tracked objects:
 29886 ;;		On entry : 0/0
 29887 ;;		On exit  : 0/0
 29888 ;;		Unchanged: 0/0
 29889 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29891 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29893 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29894 ;;Total ram usage:        4 bytes
 29895 ;; Hardware stack levels used: 1
 29896 ;; Hardware stack levels required when called: 6
 29897 ;; This function calls:
 29898 ;;		_getNV
 29899 ;;		_sendMessage4
 29900 ;; This function is called by:
 29901 ;;		_nvProcessMessage
 29902 ;;		_pollTimedResponse
 29903 ;; This function uses a non-reentrant model
 29904 ;;
 29905                           
 29906                           	psect	text39
 29907   007896                     __ptext39:
 29908                           	callstack 0
 29909   007896                     _nvTRnvrdCallback:
 29910                           	callstack 118
 29911   007896                     
 29912                           ;../../VLCBlib_PIC/nv.c: 370:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 371:    
      +                           if (step > 49) {
 29913   007896  0E31               	movlw	49
 29914   007898  642F               	cpfsgt	nvTRnvrdCallback@step^(0+1280),c
 29915   00789A  EF51  F03C         	goto	u6371
 29916   00789E  EF53  F03C         	goto	u6370
 29917   0078A2                     u6371:
 29918   0078A2  EF56  F03C         	goto	l9049
 29919   0078A6                     u6370:
 29920   0078A6                     l9045:
 29921                           
 29922                           ;../../VLCBlib_PIC/nv.c: 372:         return TIMED_RESPONSE_RESULT_FINISHED;
 29923   0078A6  0E00               	movlw	0
 29924   0078A8  EF75  F03C         	goto	l1594
 29925   0078AC                     l9049:
 29926                           
 29927                           ;../../VLCBlib_PIC/nv.c: 374:     valueOrError = getNV(step+1);
 29928   0078AC  282F               	incf	nvTRnvrdCallback@step^(0+1280),w,c
 29929   0078AE  ECA0  F03C         	call	_getNV
 29930   0078B2  C501  F530         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 29931   0078B6  C502  F531         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 29932   0078BA                     
 29933                           ;../../VLCBlib_PIC/nv.c: 375:     if (valueOrError < 0) {
 29934   0078BA  BE31               	btfsc	(nvTRnvrdCallback@valueOrError+1)^(0+1280),7,c
 29935   0078BC  EF64  F03C         	goto	u6380
 29936   0078C0  EF62  F03C         	goto	u6381
 29937   0078C4                     u6381:
 29938   0078C4  EF66  F03C         	goto	l9057
 29939   0078C8                     u6380:
 29940   0078C8  EF53  F03C         	goto	l9045
 29941   0078CC                     l9057:
 29942                           
 29943                           ;../../VLCBlib_PIC/nv.c: 378:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 29944   0078CC  C590  F526         	movff	_nn+1,sendMessage4@data1
 29945   0078D0  C58F  F527         	movff	_nn,sendMessage4@data2
 29946   0078D4  282F               	incf	nvTRnvrdCallback@step^(0+1280),w,c
 29947   0078D6  6E28               	movwf	sendMessage4@data3^(0+1280),c
 29948   0078D8  C530  F529         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 29949   0078DC  0E97               	movlw	151
 29950   0078DE  ECBD  F03F         	call	_sendMessage4
 29951   0078E2                     
 29952                           ;../../VLCBlib_PIC/nv.c: 380:     nvDiagnostics[0x01].asUint++;
 29953   0078E2  0105               	movlb	5	; () banked
 29954   0078E4  4BBD               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 29955   0078E6  2BBE               	incf	(_nvDiagnostics+3)& (0+255),f,b
 29956   0078E8                     
 29957                           ; BSR set to: 5
 29958                           ;../../VLCBlib_PIC/nv.c: 382:     return TIMED_RESPONSE_RESULT_NEXT;
 29959   0078E8  0E02               	movlw	2
 29960   0078EA                     l1594:
 29961   0078EA  0012               	return		;funcret
 29962   0078EC                     __end_of_nvTRnvrdCallback:
 29963                           	callstack 0
 29964                           
 29965 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 29966 ;; Defined at:
 29967 ;;		line 901 in file "../../VLCBlib_PIC/mns.c"
 29968 ;; Parameters:    Size  Location     Type
 29969 ;;  type            1    wreg     unsigned char 
 29970 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 29971 ;;  step            1   46[COMRAM] unsigned char 
 29972 ;; Auto vars:     Size  Location     Type
 29973 ;;  type            1    0[COMRAM] unsigned char 
 29974 ;; Return value:  Size  Location     Type
 29975 ;;                  1    wreg      enum E23474
 29976 ;; Registers used:
 29977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29978 ;; Tracked objects:
 29979 ;;		On entry : 0/0
 29980 ;;		On exit  : 0/0
 29981 ;;		Unchanged: 0/0
 29982 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29985 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29986 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29987 ;;Total ram usage:        6 bytes
 29988 ;; Hardware stack levels used: 1
 29989 ;; Hardware stack levels required when called: 6
 29990 ;; This function calls:
 29991 ;;		_sendMessage5
 29992 ;; This function is called by:
 29993 ;;		_mnsProcessMessage
 29994 ;;		_pollTimedResponse
 29995 ;; This function uses a non-reentrant model
 29996 ;;
 29997                           
 29998                           	psect	text40
 29999   0069FE                     __ptext40:
 30000                           	callstack 0
 30001   0069FE                     _mnsTRserviceDiscoveryCallback:
 30002                           	callstack 118
 30003   0069FE                     
 30004                           ;../../VLCBlib_PIC/mns.c: 902:     if (step >= 6) {
 30005   0069FE  0E05               	movlw	5
 30006   006A00  642F               	cpfsgt	mnsTRserviceDiscoveryCallback@step^(0+1280),c
 30007   006A02  EF05  F035         	goto	u6271
 30008   006A06  EF07  F035         	goto	u6270
 30009   006A0A                     u6271:
 30010   006A0A  EF0A  F035         	goto	l8937
 30011   006A0E                     u6270:
 30012   006A0E                     
 30013                           ;../../VLCBlib_PIC/mns.c: 903:         return TIMED_RESPONSE_RESULT_FINISHED;
 30014   006A0E  0E00               	movlw	0
 30015   006A10  EF4A  F035         	goto	l1474
 30016   006A14                     l8937:
 30017                           
 30018                           ;../../VLCBlib_PIC/mns.c: 906:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 30019   006A14  C590  F526         	movff	_nn+1,sendMessage5@data1
 30020   006A18  C58F  F527         	movff	_nn,sendMessage5@data2
 30021   006A1C  282F               	incf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30022   006A1E  6E28               	movwf	sendMessage5@data3^(0+1280),c
 30023   006A20  502F               	movf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30024   006A22  0D02               	mullw	2
 30025   006A24  0E89               	movlw	low _services
 30026   006A26  24F3               	addwf	243,w,c
 30027   006A28  6EF6               	movwf	tblptrl,c
 30028   006A2A  0EFF               	movlw	high _services
 30029   006A2C  20F4               	addwfc	244,w,c
 30030   006A2E  6EF7               	movwf	tblptrh,c
 30031   006A30                     	if	1	;There are 3 active tblptr bytes
 30032   006A30  6AF8               	clrf	tblptru,c
 30033   006A32  0E00               	movlw	low (__mediumconst shr (0+16))
 30034   006A34  22F8               	addwfc	tblptru,f,c
 30035   006A36                     	endif
 30036   006A36  0009               	tblrd		*+
 30037   006A38  C4F5 F530          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 30038   006A3C  0009               	tblrd		*+
 30039   006A3E  C4F5 F531          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 30040   006A42  C530  F4F6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 30041   006A46  C531  F4F7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 30042   006A4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30043   006A4A  6AF8               	clrf	tblptru,c
 30044   006A4C                     	endif
 30045   006A4C                     	if	0	;tblptru may be non-zero
 30046   006A4C                     	endif
 30047   006A4C  0008               	tblrd		*
 30048   006A4E  C4F5 F529          	movff	tablat,sendMessage5@data4
 30049   006A52  502F               	movf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30050   006A54  0D02               	mullw	2
 30051   006A56  0E89               	movlw	low _services
 30052   006A58  24F3               	addwf	243,w,c
 30053   006A5A  6EF6               	movwf	tblptrl,c
 30054   006A5C  0EFF               	movlw	high _services
 30055   006A5E  20F4               	addwfc	244,w,c
 30056   006A60  6EF7               	movwf	tblptrh,c
 30057   006A62                     	if	1	;There are 3 active tblptr bytes
 30058   006A62  6AF8               	clrf	tblptru,c
 30059   006A64  0E00               	movlw	low (__mediumconst shr (0+16))
 30060   006A66  22F8               	addwfc	tblptru,f,c
 30061   006A68                     	endif
 30062   006A68  0009               	tblrd		*+
 30063   006A6A  C4F5 F532          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 30064   006A6E  0009               	tblrd		*+
 30065   006A70  C4F5 F533          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 30066   006A74  0E01               	movlw	1
 30067   006A76  2632               	addwf	(??_mnsTRserviceDiscoveryCallback+2)^(0+1280),f,c
 30068   006A78  0E00               	movlw	0
 30069   006A7A  2233               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)^(0+1280),f,c
 30070   006A7C  C532  F4F6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 30071   006A80  C533  F4F7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 30072   006A84                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30073   006A84  6AF8               	clrf	tblptru,c
 30074   006A86                     	endif
 30075   006A86                     	if	0	;tblptru may be non-zero
 30076   006A86                     	endif
 30077   006A86  0008               	tblrd		*
 30078   006A88  C4F5 F52A          	movff	tablat,sendMessage5@data5
 30079   006A8C  0EAC               	movlw	172
 30080   006A8E  EC11  F040         	call	_sendMessage5
 30081   006A92                     
 30082                           ;../../VLCBlib_PIC/mns.c: 908:     return TIMED_RESPONSE_RESULT_NEXT;
 30083   006A92  0E02               	movlw	2
 30084   006A94                     l1474:
 30085   006A94  0012               	return		;funcret
 30086   006A96                     __end_of_mnsTRserviceDiscoveryCallback:
 30087                           	callstack 0
 30088                           
 30089 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 30090 ;; Defined at:
 30091 ;;		line 920 in file "../../VLCBlib_PIC/mns.c"
 30092 ;; Parameters:    Size  Location     Type
 30093 ;;  type            1    wreg     unsigned char 
 30094 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30095 ;;  step            1   46[COMRAM] unsigned char 
 30096 ;; Auto vars:     Size  Location     Type
 30097 ;;  type            1    0[COMRAM] unsigned char 
 30098 ;;  d               2   51[COMRAM] PTR struct DiagnosticVal
 30099 ;;		 -> nvDiagnostics(6), mnsDiagnostics(14), teachDiagnostics(4), consumerDiagnostics(6), 
 30100 ;;		 -> canDiagnostics(38), NULL(0), 
 30101 ;; Return value:  Size  Location     Type
 30102 ;;                  1    wreg      enum E23474
 30103 ;; Registers used:
 30104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30105 ;; Tracked objects:
 30106 ;;		On entry : 0/0
 30107 ;;		On exit  : 0/0
 30108 ;;		Unchanged: 0/0
 30109 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30112 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30113 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30114 ;;Total ram usage:        8 bytes
 30115 ;; Hardware stack levels used: 1
 30116 ;; Hardware stack levels required when called: 6
 30117 ;; This function calls:
 30118 ;;		NULL
 30119 ;;		_canGetDiagnostic
 30120 ;;		_consumerGetDiagnostic
 30121 ;;		_mnsGetDiagnostic
 30122 ;;		_nvGetDiagnostic
 30123 ;;		_sendMessage6
 30124 ;;		_teachGetDiagnostic
 30125 ;; This function is called by:
 30126 ;;		_mnsProcessMessage
 30127 ;;		_pollTimedResponse
 30128 ;; This function uses a non-reentrant model
 30129 ;;
 30130                           
 30131                           	psect	text41
 30132   005302                     __ptext41:
 30133                           	callstack 0
 30134   005302                     _mnsTRallDiagnosticsCallback:
 30135                           	callstack 118
 30136   005302                     
 30137                           ;../../VLCBlib_PIC/mns.c: 921:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 30138   005302  502E               	movf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30139   005304  0D02               	mullw	2
 30140   005306  0E89               	movlw	low _services
 30141   005308  24F3               	addwf	243,w,c
 30142   00530A  6EF6               	movwf	tblptrl,c
 30143   00530C  0EFF               	movlw	high _services
 30144   00530E  20F4               	addwfc	244,w,c
 30145   005310  6EF7               	movwf	tblptrh,c
 30146   005312                     	if	1	;There are 3 active tblptr bytes
 30147   005312  6AF8               	clrf	tblptru,c
 30148   005314  0E00               	movlw	low (__mediumconst shr (0+16))
 30149   005316  22F8               	addwfc	tblptru,f,c
 30150   005318                     	endif
 30151   005318  0009               	tblrd		*+
 30152   00531A  C4F5 F530          	movff	tablat,??_mnsTRallDiagnosticsCallback
 30153   00531E  0009               	tblrd		*+
 30154   005320  C4F5 F531          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 30155   005324  0E0C               	movlw	12
 30156   005326  2630               	addwf	??_mnsTRallDiagnosticsCallback^(0+1280),f,c
 30157   005328  0E00               	movlw	0
 30158   00532A  2231               	addwfc	(??_mnsTRallDiagnosticsCallback+1)^(0+1280),f,c
 30159   00532C  C530  F4F6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 30160   005330  C531  F4F7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 30161   005334                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30162   005334  6AF8               	clrf	tblptru,c
 30163   005336                     	endif
 30164   005336                     	if	0	;tblptru may be non-zero
 30165   005336                     	endif
 30166   005336  0009               	tblrd		*+
 30167   005338  50F5               	movf	tablat,w,c
 30168   00533A  0009               	tblrd		*+
 30169   00533C  10F5               	iorwf	tablat,w,c
 30170   00533E  A4D8               	btfss	status,2,c
 30171   005340  EFA4  F029         	goto	u6281
 30172   005344  EFA6  F029         	goto	u6280
 30173   005348                     u6281:
 30174   005348  EFB8  F029         	goto	l8951
 30175   00534C                     u6280:
 30176   00534C                     
 30177                           ;../../VLCBlib_PIC/mns.c: 922:         sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, s
      +                          erviceIndex+1, 0, 0, 0);
 30178   00534C  C590  F526         	movff	_nn+1,sendMessage6@data1
 30179   005350  C58F  F527         	movff	_nn,sendMessage6@data2
 30180   005354  282E               	incf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30181   005356  6E28               	movwf	sendMessage6@data3^(0+1280),c
 30182   005358  0E00               	movlw	0
 30183   00535A  6E29               	movwf	sendMessage6@data4^(0+1280),c
 30184   00535C  0E00               	movlw	0
 30185   00535E  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 30186   005360  0E00               	movlw	0
 30187   005362  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 30188   005364  0EC7               	movlw	199
 30189   005366  ECA8  F03F         	call	_sendMessage6
 30190   00536A                     l8947:
 30191                           
 30192                           ;../../VLCBlib_PIC/mns.c: 923:         return TIMED_RESPONSE_RESULT_FINISHED;
 30193   00536A  0E00               	movlw	0
 30194   00536C  EF0E  F02A         	goto	l1478
 30195   005370                     l8951:
 30196                           
 30197                           ;../../VLCBlib_PIC/mns.c: 925:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step);
 30198   005370  502E               	movf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30199   005372  0D02               	mullw	2
 30200   005374  0E89               	movlw	low _services
 30201   005376  24F3               	addwf	243,w,c
 30202   005378  6EF6               	movwf	tblptrl,c
 30203   00537A  0EFF               	movlw	high _services
 30204   00537C  20F4               	addwfc	244,w,c
 30205   00537E  6EF7               	movwf	tblptrh,c
 30206   005380                     	if	1	;There are 3 active tblptr bytes
 30207   005380  6AF8               	clrf	tblptru,c
 30208   005382  0E00               	movlw	low (__mediumconst shr (0+16))
 30209   005384  22F8               	addwfc	tblptru,f,c
 30210   005386                     	endif
 30211   005386  0009               	tblrd		*+
 30212   005388  C4F5 F530          	movff	tablat,??_mnsTRallDiagnosticsCallback
 30213   00538C  0009               	tblrd		*+
 30214   00538E  C4F5 F531          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 30215   005392  0E0C               	movlw	12
 30216   005394  2630               	addwf	??_mnsTRallDiagnosticsCallback^(0+1280),f,c
 30217   005396  0E00               	movlw	0
 30218   005398  2231               	addwfc	(??_mnsTRallDiagnosticsCallback+1)^(0+1280),f,c
 30219   00539A  C530  F4F6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 30220   00539E  C531  F4F7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 30221   0053A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30222   0053A2  6AF8               	clrf	tblptru,c
 30223   0053A4                     	endif
 30224   0053A4                     	if	0	;tblptru may be non-zero
 30225   0053A4                     	endif
 30226   0053A4  0009               	tblrd		*+
 30227   0053A6  C4F5 F532          	movff	tablat,??_mnsTRallDiagnosticsCallback+2
 30228   0053AA  0009               	tblrd		*+
 30229   0053AC  C4F5 F533          	movff	tablat,??_mnsTRallDiagnosticsCallback+3
 30230   0053B0  D802               	call	u6298
 30231   0053B2  EFE5  F029         	goto	u6299
 30232   0053B6                     u6298:
 30233   0053B6  0005               	push	
 30234   0053B8  6EFA               	movwf	pclath,c
 30235   0053BA  5032               	movf	(??_mnsTRallDiagnosticsCallback+2)^(0+1280),w,c
 30236   0053BC  6EFD               	movwf	tosl,c
 30237   0053BE  5033               	movf	(??_mnsTRallDiagnosticsCallback+3)^(0+1280),w,c
 30238   0053C0  6EFE               	movwf	tosh,c
 30239   0053C2  6AFF               	clrf	tosu,c
 30240   0053C4  50FA               	movf	pclath,w,c
 30241   0053C6  502F               	movf	mnsTRallDiagnosticsCallback@step^(0+1280),w,c
 30242   0053C8  0012               	return		;indir
 30243   0053CA                     u6299:
 30244   0053CA  C507  F534         	movff	?_nvGetDiagnostic,mnsTRallDiagnosticsCallback@d
 30245   0053CE  C508  F535         	movff	?_nvGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 30246   0053D2                     
 30247                           ;../../VLCBlib_PIC/mns.c: 926:     if (d == ((void*)0)) {
 30248   0053D2  5034               	movf	mnsTRallDiagnosticsCallback@d^(0+1280),w,c
 30249   0053D4  1035               	iorwf	(mnsTRallDiagnosticsCallback@d+1)^(0+1280),w,c
 30250   0053D6  A4D8               	btfss	status,2,c
 30251   0053D8  EFF0  F029         	goto	u6301
 30252   0053DC  EFF2  F029         	goto	u6300
 30253   0053E0                     u6301:
 30254   0053E0  EFF4  F029         	goto	l8959
 30255   0053E4                     u6300:
 30256   0053E4  EFB5  F029         	goto	l8947
 30257   0053E8                     l8959:
 30258                           
 30259                           ;../../VLCBlib_PIC/mns.c: 931:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step, d->asBytes.hi, d->asBytes.lo);
 30260   0053E8  C590  F526         	movff	_nn+1,sendMessage6@data1
 30261   0053EC  C58F  F527         	movff	_nn,sendMessage6@data2
 30262   0053F0  282E               	incf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30263   0053F2  6E28               	movwf	sendMessage6@data3^(0+1280),c
 30264   0053F4  C52F  F529         	movff	mnsTRallDiagnosticsCallback@step,sendMessage6@data4
 30265   0053F8  EE20 F001          	lfsr	2,1
 30266   0053FC  5034               	movf	mnsTRallDiagnosticsCallback@d^(0+1280),w,c
 30267   0053FE  26D9               	addwf	fsr2l,f,c
 30268   005400  5035               	movf	(mnsTRallDiagnosticsCallback@d+1)^(0+1280),w,c
 30269   005402  22DA               	addwfc	fsr2h,f,c
 30270   005404  50DF               	movf	indf2,w,c
 30271   005406  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 30272   005408  C534  F4D9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 30273   00540C  C535  F4DA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 30274   005410  50DF               	movf	indf2,w,c
 30275   005412  6E2B               	movwf	sendMessage6@data6^(0+1280),c
 30276   005414  0EC7               	movlw	199
 30277   005416  ECA8  F03F         	call	_sendMessage6
 30278   00541A                     
 30279                           ;../../VLCBlib_PIC/mns.c: 932:     return TIMED_RESPONSE_RESULT_NEXT;
 30280   00541A  0E02               	movlw	2
 30281   00541C                     l1478:
 30282   00541C  0012               	return		;funcret
 30283   00541E                     __end_of_mnsTRallDiagnosticsCallback:
 30284                           	callstack 0
 30285                           
 30286 ;; *************** function _mnsTRrqnpnCallback *****************
 30287 ;; Defined at:
 30288 ;;		line 943 in file "../../VLCBlib_PIC/mns.c"
 30289 ;; Parameters:    Size  Location     Type
 30290 ;;  type            1    wreg     unsigned char 
 30291 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30292 ;;  step            1   46[COMRAM] unsigned char 
 30293 ;; Auto vars:     Size  Location     Type
 30294 ;;  type            1    0[COMRAM] unsigned char 
 30295 ;; Return value:  Size  Location     Type
 30296 ;;                  1    wreg      enum E23474
 30297 ;; Registers used:
 30298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30299 ;; Tracked objects:
 30300 ;;		On entry : 0/0
 30301 ;;		On exit  : 0/0
 30302 ;;		Unchanged: 0/0
 30303 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30308 ;;Total ram usage:        2 bytes
 30309 ;; Hardware stack levels used: 1
 30310 ;; Hardware stack levels required when called: 6
 30311 ;; This function calls:
 30312 ;;		_getParameter
 30313 ;;		_sendMessage4
 30314 ;; This function is called by:
 30315 ;;		_mnsProcessMessage
 30316 ;;		_pollTimedResponse
 30317 ;; This function uses a non-reentrant model
 30318 ;;
 30319                           
 30320                           	psect	text42
 30321   007D68                     __ptext42:
 30322                           	callstack 0
 30323   007D68                     _mnsTRrqnpnCallback:
 30324                           	callstack 118
 30325   007D68                     
 30326                           ;../../VLCBlib_PIC/mns.c: 944:     if (step >= 20) {
 30327   007D68  0E13               	movlw	19
 30328   007D6A  642F               	cpfsgt	mnsTRrqnpnCallback@step^(0+1280),c
 30329   007D6C  EFBA  F03E         	goto	u6311
 30330   007D70  EFBC  F03E         	goto	u6310
 30331   007D74                     u6311:
 30332   007D74  EFBF  F03E         	goto	l8971
 30333   007D78                     u6310:
 30334   007D78                     
 30335                           ;../../VLCBlib_PIC/mns.c: 945:         return TIMED_RESPONSE_RESULT_FINISHED;
 30336   007D78  0E00               	movlw	0
 30337   007D7A  EFCD  F03E         	goto	l1483
 30338   007D7E                     l8971:
 30339                           
 30340                           ;../../VLCBlib_PIC/mns.c: 947:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 30341   007D7E  C590  F526         	movff	_nn+1,sendMessage4@data1
 30342   007D82  C58F  F527         	movff	_nn,sendMessage4@data2
 30343   007D86  282F               	incf	mnsTRrqnpnCallback@step^(0+1280),w,c
 30344   007D88  6E28               	movwf	sendMessage4@data3^(0+1280),c
 30345   007D8A  282F               	incf	mnsTRrqnpnCallback@step^(0+1280),w,c
 30346   007D8C  ECD3  F024         	call	_getParameter
 30347   007D90  6E29               	movwf	sendMessage4@data4^(0+1280),c
 30348   007D92  0E9B               	movlw	155
 30349   007D94  ECBD  F03F         	call	_sendMessage4
 30350   007D98                     
 30351                           ;../../VLCBlib_PIC/mns.c: 948:     return TIMED_RESPONSE_RESULT_NEXT;
 30352   007D98  0E02               	movlw	2
 30353   007D9A                     l1483:
 30354   007D9A  0012               	return		;funcret
 30355   007D9C                     __end_of_mnsTRrqnpnCallback:
 30356                           	callstack 0
 30357                           
 30358 ;; *************** function _nerdCallback *****************
 30359 ;; Defined at:
 30360 ;;		line 442 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30361 ;; Parameters:    Size  Location     Type
 30362 ;;  type            1    wreg     unsigned char 
 30363 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30364 ;;  step            1   46[COMRAM] unsigned char 
 30365 ;; Auto vars:     Size  Location     Type
 30366 ;;  type            1    0[COMRAM] unsigned char 
 30367 ;;  eventNumber     2   49[COMRAM] struct Word
 30368 ;;  nodeNumber      2   47[COMRAM] struct Word
 30369 ;; Return value:  Size  Location     Type
 30370 ;;                  1    wreg      enum E23474
 30371 ;; Registers used:
 30372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30373 ;; Tracked objects:
 30374 ;;		On entry : 0/0
 30375 ;;		On exit  : 0/0
 30376 ;;		Unchanged: 0/0
 30377 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30379 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30381 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30382 ;;Total ram usage:        6 bytes
 30383 ;; Hardware stack levels used: 1
 30384 ;; Hardware stack levels required when called: 6
 30385 ;; This function calls:
 30386 ;;		_getEN
 30387 ;;		_getNN
 30388 ;;		_sendMessage7
 30389 ;;		_tableIndexToEvtIdx
 30390 ;; This function is called by:
 30391 ;;		_doNerd
 30392 ;;		_pollTimedResponse
 30393 ;; This function uses a non-reentrant model
 30394 ;;
 30395                           
 30396                           	psect	text43
 30397   007448                     __ptext43:
 30398                           	callstack 0
 30399   007448                     _nerdCallback:
 30400                           	callstack 118
 30401   007448                     
 30402                           ;../../VLCBlib_PIC/event_teach_simple.c: 443:     Word nodeNumber, eventNumber;;../../VL
      +                          CBlib_PIC/event_teach_simple.c: 445:     if (step >= 255) {
 30403   007448  282F               	incf	nerdCallback@step^(0+1280),w,c
 30404   00744A  A4D8               	btfss	status,2,c
 30405   00744C  EF2A  F03A         	goto	u6221
 30406   007450  EF2C  F03A         	goto	u6220
 30407   007454                     u6221:
 30408   007454  EF2F  F03A         	goto	l8877
 30409   007458                     u6220:
 30410   007458                     
 30411                           ;../../VLCBlib_PIC/event_teach_simple.c: 446:         return TIMED_RESPONSE_RESULT_FINIS
      +                          HED;
 30412   007458  0E00               	movlw	0
 30413   00745A  EF5A  F03A         	goto	l1052
 30414   00745E                     l8877:
 30415                           
 30416                           ;../../VLCBlib_PIC/event_teach_simple.c: 449:     eventNumber.word = getEN(step);
 30417   00745E  502F               	movf	nerdCallback@step^(0+1280),w,c
 30418   007460  EC1E  F033         	call	_getEN
 30419   007464  C50D  F532         	movff	?_getEN,nerdCallback@eventNumber
 30420   007468  C50E  F533         	movff	?_getEN+1,nerdCallback@eventNumber+1
 30421   00746C                     
 30422                           ;../../VLCBlib_PIC/event_teach_simple.c: 450:     if (eventNumber.word != 0) {
 30423   00746C  5032               	movf	nerdCallback@eventNumber^(0+1280),w,c
 30424   00746E  1033               	iorwf	(nerdCallback@eventNumber+1)^(0+1280),w,c
 30425   007470  B4D8               	btfsc	status,2,c
 30426   007472  EF3D  F03A         	goto	u6231
 30427   007476  EF3F  F03A         	goto	u6230
 30428   00747A                     u6231:
 30429   00747A  EF59  F03A         	goto	l8885
 30430   00747E                     u6230:
 30431   00747E                     
 30432                           ;../../VLCBlib_PIC/event_teach_simple.c: 451:         nodeNumber.word = getNN(step);
 30433   00747E  502F               	movf	nerdCallback@step^(0+1280),w,c
 30434   007480  ECF0  F028         	call	_getNN
 30435   007484  C50D  F530         	movff	?_getNN,nerdCallback@nodeNumber
 30436   007488  C50E  F531         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 30437   00748C                     
 30438                           ;../../VLCBlib_PIC/event_teach_simple.c: 452:         sendMessage7(OPC_ENRSP, nn.bytes.h
      +                          i, nn.bytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNum
      +                          ber.bytes.lo, tableIndexToEvtIdx(step));
 30439   00748C  C590  F526         	movff	_nn+1,sendMessage7@data1
 30440   007490  C58F  F527         	movff	_nn,sendMessage7@data2
 30441   007494  C531  F528         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 30442   007498  C530  F529         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 30443   00749C  C533  F52A         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 30444   0074A0  C532  F52B         	movff	nerdCallback@eventNumber,sendMessage7@data6
 30445   0074A4  502F               	movf	nerdCallback@step^(0+1280),w,c
 30446   0074A6  EC18  F041         	call	_tableIndexToEvtIdx
 30447   0074AA  6E2C               	movwf	sendMessage7@data7^(0+1280),c
 30448   0074AC  0EF2               	movlw	242
 30449   0074AE  ECFC  F03F         	call	_sendMessage7
 30450   0074B2                     l8885:
 30451                           
 30452                           ;../../VLCBlib_PIC/event_teach_simple.c: 455:     return TIMED_RESPONSE_RESULT_NEXT;
 30453   0074B2  0E02               	movlw	2
 30454   0074B4                     l1052:
 30455   0074B4  0012               	return		;funcret
 30456   0074B6                     __end_of_nerdCallback:
 30457                           	callstack 0
 30458                           
 30459 ;; *************** function _reqevCallback *****************
 30460 ;; Defined at:
 30461 ;;		line 674 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30462 ;; Parameters:    Size  Location     Type
 30463 ;;  tableIndex      1    wreg     unsigned char 
 30464 ;;  serviceIndex    1   45[COMRAM] unsigned char 
 30465 ;;  step            1   46[COMRAM] unsigned char 
 30466 ;; Auto vars:     Size  Location     Type
 30467 ;;  tableIndex      1   59[COMRAM] unsigned char 
 30468 ;;  nodeNumber      2   57[COMRAM] struct Word
 30469 ;;  ev              2   55[COMRAM] short 
 30470 ;;  eventNumber     2   53[COMRAM] struct Word
 30471 ;;  nEv             1   52[COMRAM] unsigned char 
 30472 ;; Return value:  Size  Location     Type
 30473 ;;                  1    wreg      enum E23474
 30474 ;; Registers used:
 30475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30476 ;; Tracked objects:
 30477 ;;		On entry : 0/0
 30478 ;;		On exit  : 0/0
 30479 ;;		Unchanged: 0/0
 30480 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30482 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30483 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30484 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30485 ;;Total ram usage:       15 bytes
 30486 ;; Hardware stack levels used: 1
 30487 ;; Hardware stack levels required when called: 6
 30488 ;; This function calls:
 30489 ;;		_getEN
 30490 ;;		_getEv
 30491 ;;		_getNN
 30492 ;;		_numEv
 30493 ;;		_sendMessage5
 30494 ;;		_sendMessage6
 30495 ;;		_tableIndexToEvtIdx
 30496 ;; This function is called by:
 30497 ;;		_doReval
 30498 ;;		_doReqev
 30499 ;;		_pollTimedResponse
 30500 ;; This function uses a non-reentrant model
 30501 ;;
 30502                           
 30503                           	psect	text44
 30504   005CB8                     __ptext44:
 30505                           	callstack 0
 30506   005CB8                     _reqevCallback:
 30507                           	callstack 118
 30508                           
 30509                           ;incstack = 0
 30510                           ;reqevCallback@tableIndex stored from wreg
 30511   005CB8  6E3C               	movwf	reqevCallback@tableIndex^(0+1280),c
 30512   005CBA                     
 30513                           ;../../VLCBlib_PIC/event_teach_simple.c: 675:     Word nodeNumber, eventNumber;;../../VL
      +                          CBlib_PIC/event_teach_simple.c: 677:     uint8_t nEv = numEv(tableIndex);
 30514   005CBA  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30515   005CBC  EC27  F041         	call	_numEv
 30516   005CC0  6E35               	movwf	reqevCallback@nEv^(0+1280),c
 30517   005CC2                     
 30518                           ;../../VLCBlib_PIC/event_teach_simple.c: 678:     int16_t ev;;../../VLCBlib_PIC/event_te
      +                          ach_simple.c: 680:     if (step+1 > nEv) {
 30519   005CC2  502F               	movf	reqevCallback@step^(0+1280),w,c
 30520   005CC4  6E30               	movwf	??_reqevCallback^(0+1280),c
 30521   005CC6  6A31               	clrf	(??_reqevCallback+1)^(0+1280),c
 30522   005CC8  0E01               	movlw	1
 30523   005CCA  2630               	addwf	??_reqevCallback^(0+1280),f,c
 30524   005CCC  0E00               	movlw	0
 30525   005CCE  2231               	addwfc	(??_reqevCallback+1)^(0+1280),f,c
 30526   005CD0  5035               	movf	reqevCallback@nEv^(0+1280),w,c
 30527   005CD2  6E32               	movwf	(??_reqevCallback+2)^(0+1280),c
 30528   005CD4  6A33               	clrf	(??_reqevCallback+3)^(0+1280),c
 30529   005CD6  5030               	movf	??_reqevCallback^(0+1280),w,c
 30530   005CD8  5C32               	subwf	(??_reqevCallback+2)^(0+1280),w,c
 30531   005CDA  5033               	movf	(??_reqevCallback+3)^(0+1280),w,c
 30532   005CDC  0A80               	xorlw	128
 30533   005CDE  6E34               	movwf	(??_reqevCallback+4)^(0+1280),c
 30534   005CE0  5031               	movf	(??_reqevCallback+1)^(0+1280),w,c
 30535   005CE2  0A80               	xorlw	128
 30536   005CE4  5834               	subwfb	(??_reqevCallback+4)^(0+1280),w,c
 30537   005CE6  B0D8               	btfsc	status,0,c
 30538   005CE8  EF78  F02E         	goto	u6241
 30539   005CEC  EF7A  F02E         	goto	u6240
 30540   005CF0                     u6241:
 30541   005CF0  EF7D  F02E         	goto	l8897
 30542   005CF4                     u6240:
 30543   005CF4                     
 30544                           ;../../VLCBlib_PIC/event_teach_simple.c: 681:         return TIMED_RESPONSE_RESULT_FINIS
      +                          HED;
 30545   005CF4  0E00               	movlw	0
 30546   005CF6  EFC6  F02E         	goto	l1096
 30547   005CFA                     l8897:
 30548                           
 30549                           ;../../VLCBlib_PIC/event_teach_simple.c: 684:     nodeNumber.word = getNN(tableIndex);
 30550   005CFA  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30551   005CFC  ECF0  F028         	call	_getNN
 30552   005D00  C50D  F53A         	movff	?_getNN,reqevCallback@nodeNumber
 30553   005D04  C50E  F53B         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 30554                           
 30555                           ;../../VLCBlib_PIC/event_teach_simple.c: 685:     eventNumber.word = getEN(tableIndex);
 30556   005D08  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30557   005D0A  EC1E  F033         	call	_getEN
 30558   005D0E  C50D  F536         	movff	?_getEN,reqevCallback@eventNumber
 30559   005D12  C50E  F537         	movff	?_getEN+1,reqevCallback@eventNumber+1
 30560                           
 30561                           ;../../VLCBlib_PIC/event_teach_simple.c: 686:     ev = getEv(tableIndex, step);
 30562   005D16  C52F  F50D         	movff	reqevCallback@step,getEv@evNum
 30563   005D1A  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30564   005D1C  EC13  F034         	call	_getEv
 30565   005D20  C50D  F538         	movff	?_getEv,reqevCallback@ev
 30566   005D24  C50E  F539         	movff	?_getEv+1,reqevCallback@ev+1
 30567   005D28                     
 30568                           ;../../VLCBlib_PIC/event_teach_simple.c: 687:     if (ev >= 0) {
 30569   005D28  BE39               	btfsc	(reqevCallback@ev+1)^(0+1280),7,c
 30570   005D2A  EF99  F02E         	goto	u6251
 30571   005D2E  EF9B  F02E         	goto	u6250
 30572   005D32                     u6251:
 30573   005D32  EFC5  F02E         	goto	l8907
 30574   005D36                     u6250:
 30575   005D36                     
 30576                           ;../../VLCBlib_PIC/event_teach_simple.c: 688:         if (timedResponseOpcode == OPC_EVA
      +                          NS) {
 30577   005D36  0ED3               	movlw	211
 30578   005D38  0105               	movlb	5	; () banked
 30579   005D3A  19A2               	xorwf	_timedResponseOpcode& (0+255),w,b
 30580   005D3C  A4D8               	btfss	status,2,c
 30581   005D3E  EFA3  F02E         	goto	u6261
 30582   005D42  EFA5  F02E         	goto	u6260
 30583   005D46                     u6261:
 30584   005D46  EFB6  F02E         	goto	l8905
 30585   005D4A                     u6260:
 30586   005D4A                     
 30587                           ; BSR set to: 5
 30588                           ;../../VLCBlib_PIC/event_teach_simple.c: 689:             sendMessage6(OPC_EVANS, nodeNu
      +                          mber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, 
      +                          (uint8_t)ev);
 30589   005D4A  C53B  F526         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 30590   005D4E  C53A  F527         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 30591   005D52  C537  F528         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 30592   005D56  C536  F529         	movff	reqevCallback@eventNumber,sendMessage6@data4
 30593   005D5A  282F               	incf	reqevCallback@step^(0+1280),w,c
 30594   005D5C  6E2A               	movwf	sendMessage6@data5^(0+1280),c
 30595   005D5E  C538  F52B         	movff	reqevCallback@ev,sendMessage6@data6
 30596   005D62  0ED3               	movlw	211
 30597   005D64  ECA8  F03F         	call	_sendMessage6
 30598                           
 30599                           ;../../VLCBlib_PIC/event_teach_simple.c: 690:         } else {
 30600   005D68  EFC5  F02E         	goto	l8907
 30601   005D6C                     l8905:
 30602                           
 30603                           ; BSR set to: 5
 30604                           ;../../VLCBlib_PIC/event_teach_simple.c: 691:             sendMessage5(OPC_NEVAL, nodeNu
      +                          mber.bytes.hi, nodeNumber.bytes.lo, tableIndexToEvtIdx(tableIndex), step+1, (uint8_t)ev)
      +                          ;
 30605   005D6C  C53B  F526         	movff	reqevCallback@nodeNumber+1,sendMessage5@data1
 30606   005D70  C53A  F527         	movff	reqevCallback@nodeNumber,sendMessage5@data2
 30607   005D74  503C               	movf	reqevCallback@tableIndex^(0+1280),w,c
 30608   005D76  EC18  F041         	call	_tableIndexToEvtIdx
 30609   005D7A  6E28               	movwf	sendMessage5@data3^(0+1280),c
 30610   005D7C  282F               	incf	reqevCallback@step^(0+1280),w,c
 30611   005D7E  6E29               	movwf	sendMessage5@data4^(0+1280),c
 30612   005D80  C538  F52A         	movff	reqevCallback@ev,sendMessage5@data5
 30613   005D84  0EB5               	movlw	181
 30614   005D86  EC11  F040         	call	_sendMessage5
 30615   005D8A                     l8907:
 30616                           
 30617                           ;../../VLCBlib_PIC/event_teach_simple.c: 694:     return TIMED_RESPONSE_RESULT_NEXT;
 30618   005D8A  0E02               	movlw	2
 30619   005D8C                     l1096:
 30620   005D8C  0012               	return		;funcret
 30621   005D8E                     __end_of_reqevCallback:
 30622                           	callstack 0
 30623                           
 30624 ;; *************** function _numEv *****************
 30625 ;; Defined at:
 30626 ;;		line 881 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30627 ;; Parameters:    Size  Location     Type
 30628 ;;  tableIndex      1    wreg     unsigned char 
 30629 ;; Auto vars:     Size  Location     Type
 30630 ;;  tableIndex      1    0[COMRAM] unsigned char 
 30631 ;; Return value:  Size  Location     Type
 30632 ;;                  1    wreg      unsigned char 
 30633 ;; Registers used:
 30634 ;;		wreg
 30635 ;; Tracked objects:
 30636 ;;		On entry : 0/0
 30637 ;;		On exit  : 0/0
 30638 ;;		Unchanged: 0/0
 30639 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30644 ;;Total ram usage:        0 bytes
 30645 ;; Hardware stack levels used: 1
 30646 ;; Hardware stack levels required when called: 1
 30647 ;; This function calls:
 30648 ;;		Nothing
 30649 ;; This function is called by:
 30650 ;;		_doReqev
 30651 ;;		_reqevCallback
 30652 ;; This function uses a non-reentrant model
 30653 ;;
 30654                           
 30655                           	psect	text45
 30656   00824E                     __ptext45:
 30657                           	callstack 0
 30658   00824E                     _numEv:
 30659                           	callstack 122
 30660   00824E                     
 30661                           ;../../VLCBlib_PIC/event_teach_simple.c: 882:     return 252;
 30662   00824E  0EFC               	movlw	252
 30663   008250  0012               	return		;funcret
 30664   008252                     __end_of_numEv:
 30665                           	callstack 0
 30666                           
 30667 ;; *************** function _getEv *****************
 30668 ;; Defined at:
 30669 ;;		line 865 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30670 ;; Parameters:    Size  Location     Type
 30671 ;;  tableIndex      1    wreg     unsigned char 
 30672 ;;  evNum           1   12[COMRAM] unsigned char 
 30673 ;; Auto vars:     Size  Location     Type
 30674 ;;  tableIndex      1   27[COMRAM] unsigned char 
 30675 ;; Return value:  Size  Location     Type
 30676 ;;                  2   12[COMRAM] short 
 30677 ;; Registers used:
 30678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30679 ;; Tracked objects:
 30680 ;;		On entry : 0/0
 30681 ;;		On exit  : 0/0
 30682 ;;		Unchanged: 0/0
 30683 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30686 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30687 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30688 ;;Total ram usage:       16 bytes
 30689 ;; Hardware stack levels used: 1
 30690 ;; Hardware stack levels required when called: 3
 30691 ;; This function calls:
 30692 ;;		_readNVM
 30693 ;; This function is called by:
 30694 ;;		_doReval
 30695 ;;		_doReqev
 30696 ;;		_reqevCallback
 30697 ;; This function uses a non-reentrant model
 30698 ;;
 30699                           
 30700                           	psect	text46
 30701   006826                     __ptext46:
 30702                           	callstack 0
 30703   006826                     _getEv:
 30704                           	callstack 120
 30705                           
 30706                           ;incstack = 0
 30707                           ;getEv@tableIndex stored from wreg
 30708   006826  6E1C               	movwf	getEv@tableIndex^(0+1280),c
 30709   006828                     
 30710                           ;../../VLCBlib_PIC/event_teach_simple.c: 866:     if (tableIndex >= 255) {
 30711   006828  281C               	incf	getEv@tableIndex^(0+1280),w,c
 30712   00682A  A4D8               	btfss	status,2,c
 30713   00682C  EF1A  F034         	goto	u5611
 30714   006830  EF1C  F034         	goto	u5610
 30715   006834                     u5611:
 30716   006834  EF22  F034         	goto	l8163
 30717   006838                     u5610:
 30718   006838                     
 30719                           ;../../VLCBlib_PIC/event_teach_simple.c: 867:         return CMDERR_INV_EN_IDX;
 30720   006838  0E00               	movlw	0
 30721   00683A  6E0E               	movwf	(?_getEv+1)^(0+1280),c
 30722   00683C  0E08               	movlw	8
 30723   00683E  6E0D               	movwf	?_getEv^(0+1280),c
 30724   006840  EF61  F034         	goto	l1137
 30725   006844                     l8163:
 30726                           
 30727                           ;../../VLCBlib_PIC/event_teach_simple.c: 869:     if (evNum >= 252) {
 30728   006844  0EFB               	movlw	251
 30729   006846  640D               	cpfsgt	getEv@evNum^(0+1280),c
 30730   006848  EF28  F034         	goto	u5621
 30731   00684C  EF2A  F034         	goto	u5620
 30732   006850                     u5621:
 30733   006850  EF30  F034         	goto	l8169
 30734   006854                     u5620:
 30735   006854                     
 30736                           ;../../VLCBlib_PIC/event_teach_simple.c: 870:         return -CMDERR_INV_EV_IDX;
 30737   006854  0EFF               	movlw	255
 30738   006856  6E0E               	movwf	(?_getEv+1)^(0+1280),c
 30739   006858  0EFA               	movlw	250
 30740   00685A  6E0D               	movwf	?_getEv^(0+1280),c
 30741   00685C  EF61  F034         	goto	l1137
 30742   006860                     l8169:
 30743                           
 30744                           ;../../VLCBlib_PIC/event_teach_simple.c: 872:     return (uint8_t)readNVM(FLASH_NVM_TYPE
      +                          , 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+5 +evNum);
 30745   006860  500D               	movf	getEv@evNum^(0+1280),w,c
 30746   006862  6E0F               	movwf	??_getEv^(0+1280),c
 30747   006864  6A10               	clrf	(??_getEv+1)^(0+1280),c
 30748   006866  6A11               	clrf	(??_getEv+2)^(0+1280),c
 30749   006868  501C               	movf	getEv@tableIndex^(0+1280),w,c
 30750   00686A  6E12               	movwf	(??_getEv+3)^(0+1280),c
 30751   00686C  6A13               	clrf	(??_getEv+4)^(0+1280),c
 30752   00686E  0E01               	movlw	1
 30753   006870  0212               	mulwf	(??_getEv+3)^(0+1280),c
 30754   006872  C4F3 F514          	movff	prodl,??_getEv+5
 30755   006876  C4F4 F515          	movff	prodh,??_getEv+6
 30756   00687A  0213               	mulwf	(??_getEv+4)^(0+1280),c
 30757   00687C  50F3               	movf	prodl,w,c
 30758   00687E  2615               	addwf	(??_getEv+6)^(0+1280),f,c
 30759   006880  0E01               	movlw	1
 30760   006882  0212               	mulwf	(??_getEv+3)^(0+1280),c
 30761   006884  50F3               	movf	prodl,w,c
 30762   006886  2615               	addwf	(??_getEv+6)^(0+1280),f,c
 30763   006888  C514  F516         	movff	??_getEv+5,??_getEv+7
 30764   00688C  C515  F517         	movff	??_getEv+6,??_getEv+8
 30765   006890  6A18               	clrf	(??_getEv+9)^(0+1280),c
 30766   006892  500F               	movf	??_getEv^(0+1280),w,c
 30767   006894  2416               	addwf	(??_getEv+7)^(0+1280),w,c
 30768   006896  6E19               	movwf	(??_getEv+10)^(0+1280),c
 30769   006898  5010               	movf	(??_getEv+1)^(0+1280),w,c
 30770   00689A  2017               	addwfc	(??_getEv+8)^(0+1280),w,c
 30771   00689C  6E1A               	movwf	(??_getEv+11)^(0+1280),c
 30772   00689E  5011               	movf	(??_getEv+2)^(0+1280),w,c
 30773   0068A0  2018               	addwfc	(??_getEv+9)^(0+1280),w,c
 30774   0068A2  6E1B               	movwf	(??_getEv+12)^(0+1280),c
 30775   0068A4  0E05               	movlw	5
 30776   0068A6  2419               	addwf	(??_getEv+10)^(0+1280),w,c
 30777   0068A8  6E07               	movwf	readNVM@index^(0+1280),c
 30778   0068AA  0E00               	movlw	0
 30779   0068AC  201A               	addwfc	(??_getEv+11)^(0+1280),w,c
 30780   0068AE  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 30781   0068B0  0E01               	movlw	1
 30782   0068B2  201B               	addwfc	(??_getEv+12)^(0+1280),w,c
 30783   0068B4  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 30784   0068B6  0E01               	movlw	1
 30785   0068B8  ECEA  F039         	call	_readNVM
 30786   0068BC  5007               	movf	?_readNVM^(0+1280),w,c
 30787   0068BE  6E0D               	movwf	?_getEv^(0+1280),c
 30788   0068C0  6A0E               	clrf	(?_getEv+1)^(0+1280),c
 30789   0068C2                     l1137:
 30790   0068C2  0012               	return		;funcret
 30791   0068C4                     __end_of_getEv:
 30792                           	callstack 0
 30793                           
 30794 ;; *************** function _tableIndexToEvtIdx *****************
 30795 ;; Defined at:
 30796 ;;		line 971 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30797 ;; Parameters:    Size  Location     Type
 30798 ;;  tableIndex      1    wreg     unsigned char 
 30799 ;; Auto vars:     Size  Location     Type
 30800 ;;  tableIndex      1    0[COMRAM] unsigned char 
 30801 ;; Return value:  Size  Location     Type
 30802 ;;                  1    wreg      unsigned char 
 30803 ;; Registers used:
 30804 ;;		wreg, status,2, status,0
 30805 ;; Tracked objects:
 30806 ;;		On entry : 0/0
 30807 ;;		On exit  : 0/0
 30808 ;;		Unchanged: 0/0
 30809 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30813 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30814 ;;Total ram usage:        1 bytes
 30815 ;; Hardware stack levels used: 1
 30816 ;; Hardware stack levels required when called: 1
 30817 ;; This function calls:
 30818 ;;		Nothing
 30819 ;; This function is called by:
 30820 ;;		_nerdCallback
 30821 ;;		_reqevCallback
 30822 ;; This function uses a non-reentrant model
 30823 ;;
 30824                           
 30825                           	psect	text47
 30826   008230                     __ptext47:
 30827                           	callstack 0
 30828   008230                     _tableIndexToEvtIdx:
 30829                           	callstack 122
 30830                           
 30831                           ;incstack = 0
 30832                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 30833   008230  6E01               	movwf	tableIndexToEvtIdx@tableIndex^(0+1280),c
 30834   008232                     
 30835                           ;../../VLCBlib_PIC/event_teach_simple.c: 972:     return tableIndex + 1;
 30836   008232  2801               	incf	tableIndexToEvtIdx@tableIndex^(0+1280),w,c
 30837   008234  0012               	return		;funcret
 30838   008236                     __end_of_tableIndexToEvtIdx:
 30839                           	callstack 0
 30840                           
 30841 ;; *************** function _setNV *****************
 30842 ;; Defined at:
 30843 ;;		line 218 in file "../../VLCBlib_PIC/nv.c"
 30844 ;; Parameters:    Size  Location     Type
 30845 ;;  index           1    wreg     unsigned char 
 30846 ;;  value           1   20[COMRAM] unsigned char 
 30847 ;; Auto vars:     Size  Location     Type
 30848 ;;  index           1   24[COMRAM] unsigned char 
 30849 ;;  oldValue        1   23[COMRAM] unsigned char 
 30850 ;; Return value:  Size  Location     Type
 30851 ;;                  1    wreg      unsigned char 
 30852 ;; Registers used:
 30853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30854 ;; Tracked objects:
 30855 ;;		On entry : 0/0
 30856 ;;		On exit  : 0/0
 30857 ;;		Unchanged: 0/0
 30858 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30859 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30860 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30861 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30862 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30863 ;;Total ram usage:        5 bytes
 30864 ;; Hardware stack levels used: 1
 30865 ;; Hardware stack levels required when called: 6
 30866 ;; This function calls:
 30867 ;;		_APP_nvValidate
 30868 ;;		_APP_nvValueChanged
 30869 ;;		_writeNVM
 30870 ;; This function is called by:
 30871 ;;		_nvProcessMessage
 30872 ;; This function uses a non-reentrant model
 30873 ;;
 30874                           
 30875                           	psect	text48
 30876   006C50                     __ptext48:
 30877                           	callstack 0
 30878   006C50                     _setNV:
 30879                           	callstack 118
 30880                           
 30881                           ;incstack = 0
 30882                           ;setNV@index stored from wreg
 30883   006C50  6E19               	movwf	setNV@index^(0+1280),c
 30884   006C52                     
 30885                           ;../../VLCBlib_PIC/nv.c: 219:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 221:     if 
      +                          (index > 49) return CMDERR_INV_NV_IDX;
 30886   006C52  0E31               	movlw	49
 30887   006C54  6419               	cpfsgt	setNV@index^(0+1280),c
 30888   006C56  EF2F  F036         	goto	u6351
 30889   006C5A  EF31  F036         	goto	u6350
 30890   006C5E                     u6351:
 30891   006C5E  EF34  F036         	goto	l9013
 30892   006C62                     u6350:
 30893   006C62  0E0A               	movlw	10
 30894   006C64  EF6E  F036         	goto	l1562
 30895   006C68                     l9013:
 30896                           
 30897                           ;../../VLCBlib_PIC/nv.c: 222:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 30898   006C68  C515  F501         	movff	setNV@value,APP_nvValidate@value
 30899   006C6C  5019               	movf	setNV@index^(0+1280),w,c
 30900   006C6E  EC29  F041         	call	_APP_nvValidate
 30901   006C72  0900               	iorlw	0
 30902   006C74  A4D8               	btfss	status,2,c
 30903   006C76  EF3F  F036         	goto	u6361
 30904   006C7A  EF41  F036         	goto	u6360
 30905   006C7E                     u6361:
 30906   006C7E  EF44  F036         	goto	l9019
 30907   006C82                     u6360:
 30908   006C82  0E0C               	movlw	12
 30909   006C84  EF6E  F036         	goto	l1562
 30910   006C88                     l9019:
 30911                           
 30912                           ;../../VLCBlib_PIC/nv.c: 224:     oldValue = nvCache[index];
 30913   006C88  0E00               	movlw	low _nvCache
 30914   006C8A  2419               	addwf	setNV@index^(0+1280),w,c
 30915   006C8C  6ED9               	movwf	fsr2l,c
 30916   006C8E  6ADA               	clrf	fsr2h,c
 30917   006C90  0E06               	movlw	high _nvCache
 30918   006C92  22DA               	addwfc	fsr2h,f,c
 30919   006C94  50DF               	movf	indf2,w,c
 30920   006C96  6E18               	movwf	setNV@oldValue^(0+1280),c
 30921                           
 30922                           ;../../VLCBlib_PIC/nv.c: 225:     nvCache[index] = value;
 30923   006C98  0E00               	movlw	low _nvCache
 30924   006C9A  2419               	addwf	setNV@index^(0+1280),w,c
 30925   006C9C  6ED9               	movwf	fsr2l,c
 30926   006C9E  6ADA               	clrf	fsr2h,c
 30927   006CA0  0E06               	movlw	high _nvCache
 30928   006CA2  22DA               	addwfc	fsr2h,f,c
 30929   006CA4  C515  F4DF         	movff	setNV@value,indf2
 30930   006CA8                     
 30931                           ;../../VLCBlib_PIC/nv.c: 226:     writeNVM(EEPROM_NVM_TYPE, 0x200 +index, value);
 30932   006CA8  0E00               	movlw	0
 30933   006CAA  2419               	addwf	setNV@index^(0+1280),w,c
 30934   006CAC  6E16               	movwf	??_setNV^(0+1280),c
 30935   006CAE  6A17               	clrf	(??_setNV+1)^(0+1280),c
 30936   006CB0  0E02               	movlw	2
 30937   006CB2  2217               	addwfc	(??_setNV+1)^(0+1280),f,c
 30938   006CB4  C516  F50E         	movff	??_setNV,writeNVM@index
 30939   006CB8  C517  F50F         	movff	??_setNV+1,writeNVM@index+1
 30940   006CBC  6A10               	clrf	(writeNVM@index+2)^(0+1280),c
 30941   006CBE  BE0F               	btfsc	(writeNVM@index+1)^(0+1280),7,c
 30942   006CC0  0610               	decf	(writeNVM@index+2)^(0+1280),f,c
 30943   006CC2  C515  F511         	movff	setNV@value,writeNVM@value
 30944   006CC6  0E00               	movlw	0
 30945   006CC8  EC91  F03B         	call	_writeNVM
 30946   006CCC                     
 30947                           ;../../VLCBlib_PIC/nv.c: 231:     APP_nvValueChanged(index, value, oldValue);
 30948   006CCC  C515  F501         	movff	setNV@value,APP_nvValueChanged@value
 30949   006CD0  C518  F502         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 30950   006CD4  5019               	movf	setNV@index^(0+1280),w,c
 30951   006CD6  EC32  F041         	call	_APP_nvValueChanged
 30952   006CDA                     
 30953                           ;../../VLCBlib_PIC/nv.c: 232:     return 0;
 30954   006CDA  0E00               	movlw	0
 30955   006CDC                     l1562:
 30956   006CDC  0012               	return		;funcret
 30957   006CDE                     __end_of_setNV:
 30958                           	callstack 0
 30959                           
 30960 ;; *************** function _APP_nvValueChanged *****************
 30961 ;; Defined at:
 30962 ;;		line 100 in file "../canargb_nvs.c"
 30963 ;; Parameters:    Size  Location     Type
 30964 ;;  index           1    wreg     unsigned char 
 30965 ;;  value           1    0[COMRAM] unsigned char 
 30966 ;;  oldValue        1    1[COMRAM] unsigned char 
 30967 ;; Auto vars:     Size  Location     Type
 30968 ;;  index           1    0[COMRAM] unsigned char 
 30969 ;; Return value:  Size  Location     Type
 30970 ;;                  1    wreg      void 
 30971 ;; Registers used:
 30972 ;;		wreg
 30973 ;; Tracked objects:
 30974 ;;		On entry : 0/0
 30975 ;;		On exit  : 0/0
 30976 ;;		Unchanged: 0/0
 30977 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30978 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30981 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30982 ;;Total ram usage:        2 bytes
 30983 ;; Hardware stack levels used: 1
 30984 ;; Hardware stack levels required when called: 1
 30985 ;; This function calls:
 30986 ;;		Nothing
 30987 ;; This function is called by:
 30988 ;;		_setNV
 30989 ;; This function uses a non-reentrant model
 30990 ;;
 30991                           
 30992                           	psect	text49
 30993   008264                     __ptext49:
 30994                           	callstack 0
 30995   008264                     _APP_nvValueChanged:
 30996                           	callstack 122
 30997   008264  0012               	return		;funcret
 30998   008266                     __end_of_APP_nvValueChanged:
 30999                           	callstack 0
 31000                           
 31001 ;; *************** function _APP_nvValidate *****************
 31002 ;; Defined at:
 31003 ;;		line 92 in file "../canargb_nvs.c"
 31004 ;; Parameters:    Size  Location     Type
 31005 ;;  index           1    wreg     unsigned char 
 31006 ;;  value           1    0[COMRAM] unsigned char 
 31007 ;; Auto vars:     Size  Location     Type
 31008 ;;  index           1    0[COMRAM] unsigned char 
 31009 ;; Return value:  Size  Location     Type
 31010 ;;                  1    wreg      enum E23468
 31011 ;; Registers used:
 31012 ;;		wreg
 31013 ;; Tracked objects:
 31014 ;;		On entry : 0/0
 31015 ;;		On exit  : 0/0
 31016 ;;		Unchanged: 0/0
 31017 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31018 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31021 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31022 ;;Total ram usage:        1 bytes
 31023 ;; Hardware stack levels used: 1
 31024 ;; Hardware stack levels required when called: 1
 31025 ;; This function calls:
 31026 ;;		Nothing
 31027 ;; This function is called by:
 31028 ;;		_setNV
 31029 ;; This function uses a non-reentrant model
 31030 ;;
 31031                           
 31032                           	psect	text50
 31033   008252                     __ptext50:
 31034                           	callstack 0
 31035   008252                     _APP_nvValidate:
 31036                           	callstack 122
 31037   008252                     
 31038                           ;../canargb_nvs.c: 93:     return VALID;
 31039   008252  0E01               	movlw	1
 31040   008254  0012               	return		;funcret
 31041   008256                     __end_of_APP_nvValidate:
 31042                           	callstack 0
 31043                           
 31044 ;; *************** function _nvGetESDdata *****************
 31045 ;; Defined at:
 31046 ;;		line 354 in file "../../VLCBlib_PIC/nv.c"
 31047 ;; Parameters:    Size  Location     Type
 31048 ;;  id              1    wreg     unsigned char 
 31049 ;; Auto vars:     Size  Location     Type
 31050 ;;  id              1    0[COMRAM] unsigned char 
 31051 ;; Return value:  Size  Location     Type
 31052 ;;                  1    wreg      unsigned char 
 31053 ;; Registers used:
 31054 ;;		wreg, status,2, status,0
 31055 ;; Tracked objects:
 31056 ;;		On entry : 0/0
 31057 ;;		On exit  : 0/0
 31058 ;;		Unchanged: 0/0
 31059 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31061 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31063 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31064 ;;Total ram usage:        1 bytes
 31065 ;; Hardware stack levels used: 1
 31066 ;; Hardware stack levels required when called: 1
 31067 ;; This function calls:
 31068 ;;		Nothing
 31069 ;; This function is called by:
 31070 ;;		_mnsProcessMessage
 31071 ;; This function uses a non-reentrant model
 31072 ;;
 31073                           
 31074                           	psect	text51
 31075   0080BE                     __ptext51:
 31076                           	callstack 0
 31077   0080BE                     _nvGetESDdata:
 31078                           	callstack 123
 31079                           
 31080                           ;incstack = 0
 31081                           ;nvGetESDdata@id stored from wreg
 31082   0080BE  6E01               	movwf	nvGetESDdata@id^(0+1280),c
 31083   0080C0                     
 31084                           ;../../VLCBlib_PIC/nv.c: 355:     switch (id) {
 31085   0080C0  EF68  F040         	goto	l9041
 31086   0080C4                     l9031:
 31087   0080C4  0E31               	movlw	49
 31088   0080C6  EF6F  F040         	goto	l1588
 31089   0080CA                     l9035:
 31090   0080CA  0E00               	movlw	0
 31091   0080CC  EF6F  F040         	goto	l1588
 31092   0080D0                     l9041:
 31093   0080D0  5001               	movf	nvGetESDdata@id^(0+1280),w,c
 31094                           
 31095                           ; Switch size 1, requested type "simple"
 31096                           ; Number of cases is 1, Range of values is 1 to 1
 31097                           ; switch strategies available:
 31098                           ; Name         Instructions Cycles
 31099                           ; simple_byte            4     3 (average)
 31100                           ;	Chosen strategy is simple_byte
 31101   0080D2  0A01               	xorlw	1	; case 1
 31102   0080D4  B4D8               	btfsc	status,2,c
 31103   0080D6  EF62  F040         	goto	l9031
 31104   0080DA  EF65  F040         	goto	l9035
 31105   0080DE                     l1588:
 31106   0080DE  0012               	return		;funcret
 31107   0080E0                     __end_of_nvGetESDdata:
 31108                           	callstack 0
 31109                           
 31110 ;; *************** function _consumerEsdData *****************
 31111 ;; Defined at:
 31112 ;;		line 232 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 31113 ;; Parameters:    Size  Location     Type
 31114 ;;  index           1    wreg     unsigned char 
 31115 ;; Auto vars:     Size  Location     Type
 31116 ;;  index           1    0[COMRAM] unsigned char 
 31117 ;; Return value:  Size  Location     Type
 31118 ;;                  1    wreg      unsigned char 
 31119 ;; Registers used:
 31120 ;;		wreg, status,2, status,0
 31121 ;; Tracked objects:
 31122 ;;		On entry : 0/0
 31123 ;;		On exit  : 0/0
 31124 ;;		Unchanged: 0/0
 31125 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31130 ;;Total ram usage:        1 bytes
 31131 ;; Hardware stack levels used: 1
 31132 ;; Hardware stack levels required when called: 1
 31133 ;; This function calls:
 31134 ;;		Nothing
 31135 ;; This function is called by:
 31136 ;;		_mnsProcessMessage
 31137 ;; This function uses a non-reentrant model
 31138 ;;
 31139                           
 31140                           	psect	text52
 31141   008140                     __ptext52:
 31142                           	callstack 0
 31143   008140                     _consumerEsdData:
 31144                           	callstack 123
 31145                           
 31146                           ;incstack = 0
 31147                           ;consumerEsdData@index stored from wreg
 31148   008140  6E01               	movwf	consumerEsdData@index^(0+1280),c
 31149   008142                     
 31150                           ;../../VLCBlib_PIC/event_consumer_simple.c: 233:     switch (index){
 31151   008142  EFA6  F040         	goto	l8673
 31152   008146                     l8663:
 31153                           
 31154                           ;../../VLCBlib_PIC/event_consumer_simple.c: 235:             return CONSUMER_EV_NOT_SPEC
      +                          IFIED;
 31155   008146  0E00               	movlw	0
 31156   008148  EFAD  F040         	goto	l841
 31157   00814C                     l8673:
 31158   00814C  5001               	movf	consumerEsdData@index^(0+1280),w,c
 31159                           
 31160                           ; Switch size 1, requested type "simple"
 31161                           ; Number of cases is 1, Range of values is 0 to 0
 31162                           ; switch strategies available:
 31163                           ; Name         Instructions Cycles
 31164                           ; simple_byte            4     3 (average)
 31165                           ;	Chosen strategy is simple_byte
 31166   00814E  0A00               	xorlw	0	; case 0
 31167   008150  B4D8               	btfsc	status,2,c
 31168   008152  EFA3  F040         	goto	l8663
 31169   008156  EFA3  F040         	goto	l8663
 31170   00815A                     l841:
 31171   00815A  0012               	return		;funcret
 31172   00815C                     __end_of_consumerEsdData:
 31173                           	callstack 0
 31174                           
 31175 ;; *************** function _canEsdData *****************
 31176 ;; Defined at:
 31177 ;;		line 468 in file "../../VLCBlib_PIC/can18_can_2.c"
 31178 ;; Parameters:    Size  Location     Type
 31179 ;;  id              1    wreg     unsigned char 
 31180 ;; Auto vars:     Size  Location     Type
 31181 ;;  id              1    0[COMRAM] unsigned char 
 31182 ;; Return value:  Size  Location     Type
 31183 ;;                  1    wreg      unsigned char 
 31184 ;; Registers used:
 31185 ;;		wreg, status,2, status,0
 31186 ;; Tracked objects:
 31187 ;;		On entry : 0/0
 31188 ;;		On exit  : 0/0
 31189 ;;		Unchanged: 0/0
 31190 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31194 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31195 ;;Total ram usage:        1 bytes
 31196 ;; Hardware stack levels used: 1
 31197 ;; Hardware stack levels required when called: 1
 31198 ;; This function calls:
 31199 ;;		Nothing
 31200 ;; This function is called by:
 31201 ;;		_mnsProcessMessage
 31202 ;; This function uses a non-reentrant model
 31203 ;;
 31204                           
 31205                           	psect	text53
 31206   0080E0                     __ptext53:
 31207                           	callstack 0
 31208   0080E0                     _canEsdData:
 31209                           	callstack 123
 31210                           
 31211                           ;incstack = 0
 31212                           ;canEsdData@id stored from wreg
 31213   0080E0  6E01               	movwf	canEsdData@id^(0+1280),c
 31214   0080E2                     
 31215                           ;../../VLCBlib_PIC/can18_can_2.c: 469:     switch(id) {
 31216   0080E2  EF79  F040         	goto	l8597
 31217   0080E6                     l8587:
 31218                           
 31219                           ;../../VLCBlib_PIC/can18_can_2.c: 471:             return CAN_HW_PIC_CAN_2_0;
 31220   0080E6  0E02               	movlw	2
 31221   0080E8  EF80  F040         	goto	l640
 31222   0080EC                     l8591:
 31223                           
 31224                           ;../../VLCBlib_PIC/can18_can_2.c: 473:             return 0;
 31225   0080EC  0E00               	movlw	0
 31226   0080EE  EF80  F040         	goto	l640
 31227   0080F2                     l8597:
 31228   0080F2  5001               	movf	canEsdData@id^(0+1280),w,c
 31229                           
 31230                           ; Switch size 1, requested type "simple"
 31231                           ; Number of cases is 1, Range of values is 1 to 1
 31232                           ; switch strategies available:
 31233                           ; Name         Instructions Cycles
 31234                           ; simple_byte            4     3 (average)
 31235                           ;	Chosen strategy is simple_byte
 31236   0080F4  0A01               	xorlw	1	; case 1
 31237   0080F6  B4D8               	btfsc	status,2,c
 31238   0080F8  EF73  F040         	goto	l8587
 31239   0080FC  EF76  F040         	goto	l8591
 31240   008100                     l640:
 31241   008100  0012               	return		;funcret
 31242   008102                     __end_of_canEsdData:
 31243                           	callstack 0
 31244                           
 31245 ;; *************** function _bootEsdData *****************
 31246 ;; Defined at:
 31247 ;;		line 252 in file "../../VLCBlib_PIC/boot.c"
 31248 ;; Parameters:    Size  Location     Type
 31249 ;;  id              1    wreg     unsigned char 
 31250 ;; Auto vars:     Size  Location     Type
 31251 ;;  id              1    0[COMRAM] unsigned char 
 31252 ;; Return value:  Size  Location     Type
 31253 ;;                  1    wreg      unsigned char 
 31254 ;; Registers used:
 31255 ;;		wreg, status,2, status,0
 31256 ;; Tracked objects:
 31257 ;;		On entry : 0/0
 31258 ;;		On exit  : 0/0
 31259 ;;		Unchanged: 0/0
 31260 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31265 ;;Total ram usage:        1 bytes
 31266 ;; Hardware stack levels used: 1
 31267 ;; Hardware stack levels required when called: 1
 31268 ;; This function calls:
 31269 ;;		Nothing
 31270 ;; This function is called by:
 31271 ;;		_mnsProcessMessage
 31272 ;; This function uses a non-reentrant model
 31273 ;;
 31274                           
 31275                           	psect	text54
 31276   007D9C                     __ptext54:
 31277                           	callstack 0
 31278   007D9C                     _bootEsdData:
 31279                           	callstack 123
 31280                           
 31281                           ;incstack = 0
 31282                           ;bootEsdData@id stored from wreg
 31283   007D9C  6E01               	movwf	bootEsdData@id^(0+1280),c
 31284   007D9E                     
 31285                           ;../../VLCBlib_PIC/boot.c: 253:     switch (id) {
 31286   007D9E  EFDC  F03E         	goto	l8491
 31287   007DA2                     l354:
 31288                           
 31289                           ;../../VLCBlib_PIC/boot.c: 256:             return bootloaderType;
 31290   007DA2  0105               	movlb	5	; () banked
 31291   007DA4  51AA               	movf	_bootloaderType& (0+255),w,b
 31292   007DA6  EFE7  F03E         	goto	l355
 31293   007DAA                     l356:
 31294                           
 31295                           ;../../VLCBlib_PIC/boot.c: 259:             return bootloaderVersion;
 31296   007DAA  0105               	movlb	5	; () banked
 31297   007DAC  51A9               	movf	_bootloaderVersion& (0+255),w,b
 31298   007DAE  EFE7  F03E         	goto	l355
 31299   007DB2                     l8485:
 31300                           
 31301                           ;../../VLCBlib_PIC/boot.c: 261:             return 0;
 31302   007DB2  0E00               	movlw	0
 31303   007DB4  EFE7  F03E         	goto	l355
 31304   007DB8                     l8491:
 31305   007DB8  5001               	movf	bootEsdData@id^(0+1280),w,c
 31306                           
 31307                           ; Switch size 1, requested type "simple"
 31308                           ; Number of cases is 2, Range of values is 1 to 2
 31309                           ; switch strategies available:
 31310                           ; Name         Instructions Cycles
 31311                           ; simple_byte            7     4 (average)
 31312                           ;	Chosen strategy is simple_byte
 31313   007DBA  0A01               	xorlw	1	; case 1
 31314   007DBC  B4D8               	btfsc	status,2,c
 31315   007DBE  EFD1  F03E         	goto	l354
 31316   007DC2  0A03               	xorlw	3	; case 2
 31317   007DC4  B4D8               	btfsc	status,2,c
 31318   007DC6  EFD5  F03E         	goto	l356
 31319   007DCA  EFD9  F03E         	goto	l8485
 31320   007DCE                     l355:
 31321   007DCE  0012               	return		;funcret
 31322   007DD0                     __end_of_bootEsdData:
 31323                           	callstack 0
 31324                           
 31325 ;; *************** function _teachGetESDdata *****************
 31326 ;; Defined at:
 31327 ;;		line 367 in file "../../VLCBlib_PIC/event_teach_simple.c"
 31328 ;; Parameters:    Size  Location     Type
 31329 ;;  id              1    wreg     unsigned char 
 31330 ;; Auto vars:     Size  Location     Type
 31331 ;;  id              1    0[COMRAM] unsigned char 
 31332 ;; Return value:  Size  Location     Type
 31333 ;;                  1    wreg      unsigned char 
 31334 ;; Registers used:
 31335 ;;		wreg, status,2, status,0
 31336 ;; Tracked objects:
 31337 ;;		On entry : 0/0
 31338 ;;		On exit  : 0/0
 31339 ;;		Unchanged: 0/0
 31340 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31344 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31345 ;;Total ram usage:        1 bytes
 31346 ;; Hardware stack levels used: 1
 31347 ;; Hardware stack levels required when called: 1
 31348 ;; This function calls:
 31349 ;;		Nothing
 31350 ;; This function is called by:
 31351 ;;		_mnsProcessMessage
 31352 ;; This function uses a non-reentrant model
 31353 ;;
 31354                           
 31355                           	psect	text55
 31356   007E04                     __ptext55:
 31357                           	callstack 0
 31358   007E04                     _teachGetESDdata:
 31359                           	callstack 123
 31360                           
 31361                           ;incstack = 0
 31362                           ;teachGetESDdata@id stored from wreg
 31363   007E04  6E01               	movwf	teachGetESDdata@id^(0+1280),c
 31364   007E06                     
 31365                           ;../../VLCBlib_PIC/event_teach_simple.c: 368:     switch (id) {
 31366   007E06  EF0E  F03F         	goto	l8869
 31367   007E0A                     l8855:
 31368   007E0A  0EFF               	movlw	255
 31369   007E0C  EF19  F03F         	goto	l1027
 31370   007E10                     l8859:
 31371   007E10  0EFC               	movlw	252
 31372   007E12  EF19  F03F         	goto	l1027
 31373   007E16                     l8863:
 31374   007E16  0E00               	movlw	0
 31375   007E18  EF19  F03F         	goto	l1027
 31376   007E1C                     l8869:
 31377   007E1C  5001               	movf	teachGetESDdata@id^(0+1280),w,c
 31378                           
 31379                           ; Switch size 1, requested type "simple"
 31380                           ; Number of cases is 2, Range of values is 1 to 2
 31381                           ; switch strategies available:
 31382                           ; Name         Instructions Cycles
 31383                           ; simple_byte            7     4 (average)
 31384                           ;	Chosen strategy is simple_byte
 31385   007E1E  0A01               	xorlw	1	; case 1
 31386   007E20  B4D8               	btfsc	status,2,c
 31387   007E22  EF05  F03F         	goto	l8855
 31388   007E26  0A03               	xorlw	3	; case 2
 31389   007E28  B4D8               	btfsc	status,2,c
 31390   007E2A  EF08  F03F         	goto	l8859
 31391   007E2E  EF0B  F03F         	goto	l8863
 31392   007E32                     l1027:
 31393   007E32  0012               	return		;funcret
 31394   007E34                     __end_of_teachGetESDdata:
 31395                           	callstack 0
 31396                           
 31397 ;; *************** function _nvGetDiagnostic *****************
 31398 ;; Defined at:
 31399 ;;		line 150 in file "../../VLCBlib_PIC/nv.c"
 31400 ;; Parameters:    Size  Location     Type
 31401 ;;  index           1    wreg     unsigned char 
 31402 ;; Auto vars:     Size  Location     Type
 31403 ;;  index           1    8[COMRAM] unsigned char 
 31404 ;; Return value:  Size  Location     Type
 31405 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31406 ;; Registers used:
 31407 ;;		wreg, status,2, status,0, prodl, prodh
 31408 ;; Tracked objects:
 31409 ;;		On entry : 0/0
 31410 ;;		On exit  : 0/0
 31411 ;;		Unchanged: 0/0
 31412 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31416 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31417 ;;Total ram usage:        3 bytes
 31418 ;; Hardware stack levels used: 1
 31419 ;; Hardware stack levels required when called: 1
 31420 ;; This function calls:
 31421 ;;		Nothing
 31422 ;; This function is called by:
 31423 ;;		_mnsTRallDiagnosticsCallback
 31424 ;;		_mnsProcessMessage
 31425 ;; This function uses a non-reentrant model
 31426 ;;
 31427                           
 31428                           	psect	text56
 31429   007E34                     __ptext56:
 31430                           	callstack 0
 31431   007E34                     _nvGetDiagnostic:
 31432                           	callstack 122
 31433                           
 31434                           ;incstack = 0
 31435                           ;nvGetDiagnostic@index stored from wreg
 31436   007E34  6E09               	movwf	nvGetDiagnostic@index^(0+1280),c
 31437   007E36                     
 31438                           ;../../VLCBlib_PIC/nv.c: 151:     if (index > 2) {
 31439   007E36  0E02               	movlw	2
 31440   007E38  6409               	cpfsgt	nvGetDiagnostic@index^(0+1280),c
 31441   007E3A  EF21  F03F         	goto	u5711
 31442   007E3E  EF23  F03F         	goto	u5710
 31443   007E42                     u5711:
 31444   007E42  EF29  F03F         	goto	l8347
 31445   007E46                     u5710:
 31446   007E46                     
 31447                           ;../../VLCBlib_PIC/nv.c: 152:         return ((void*)0);
 31448   007E46  0E00               	movlw	0
 31449   007E48  6E07               	movwf	?_nvGetDiagnostic^(0+1280),c
 31450   007E4A  0E00               	movlw	0
 31451   007E4C  6E08               	movwf	(?_nvGetDiagnostic+1)^(0+1280),c
 31452   007E4E  EF31  F03F         	goto	l1543
 31453   007E52                     l8347:
 31454                           
 31455                           ;../../VLCBlib_PIC/nv.c: 154:     return &(nvDiagnostics[index]);
 31456   007E52  5009               	movf	nvGetDiagnostic@index^(0+1280),w,c
 31457   007E54  0D02               	mullw	2
 31458   007E56  0EBB               	movlw	low _nvDiagnostics
 31459   007E58  24F3               	addwf	243,w,c
 31460   007E5A  6E07               	movwf	?_nvGetDiagnostic^(0+1280),c
 31461   007E5C  0E05               	movlw	high _nvDiagnostics
 31462   007E5E  20F4               	addwfc	prodh,w,c
 31463   007E60  6E08               	movwf	(?_nvGetDiagnostic+1)^(0+1280),c
 31464   007E62                     l1543:
 31465   007E62  0012               	return		;funcret
 31466   007E64                     __end_of_nvGetDiagnostic:
 31467                           	callstack 0
 31468                           
 31469 ;; *************** function _mnsGetDiagnostic *****************
 31470 ;; Defined at:
 31471 ;;		line 807 in file "../../VLCBlib_PIC/mns.c"
 31472 ;; Parameters:    Size  Location     Type
 31473 ;;  index           1    wreg     unsigned char 
 31474 ;; Auto vars:     Size  Location     Type
 31475 ;;  index           1    8[COMRAM] unsigned char 
 31476 ;; Return value:  Size  Location     Type
 31477 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31478 ;; Registers used:
 31479 ;;		wreg, status,2, status,0, prodl, prodh
 31480 ;; Tracked objects:
 31481 ;;		On entry : 0/0
 31482 ;;		On exit  : 0/0
 31483 ;;		Unchanged: 0/0
 31484 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31488 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31489 ;;Total ram usage:        3 bytes
 31490 ;; Hardware stack levels used: 1
 31491 ;; Hardware stack levels required when called: 1
 31492 ;; This function calls:
 31493 ;;		Nothing
 31494 ;; This function is called by:
 31495 ;;		_mnsTRallDiagnosticsCallback
 31496 ;;		_mnsProcessMessage
 31497 ;; This function uses a non-reentrant model
 31498 ;;
 31499                           
 31500                           	psect	text57
 31501   007E64                     __ptext57:
 31502                           	callstack 0
 31503   007E64                     _mnsGetDiagnostic:
 31504                           	callstack 122
 31505                           
 31506                           ;incstack = 0
 31507                           ;mnsGetDiagnostic@index stored from wreg
 31508   007E64  6E09               	movwf	mnsGetDiagnostic@index^(0+1280),c
 31509   007E66                     
 31510                           ;../../VLCBlib_PIC/mns.c: 808:     if (index > 6) {
 31511   007E66  0E06               	movlw	6
 31512   007E68  6409               	cpfsgt	mnsGetDiagnostic@index^(0+1280),c
 31513   007E6A  EF39  F03F         	goto	u5661
 31514   007E6E  EF3B  F03F         	goto	u5660
 31515   007E72                     u5661:
 31516   007E72  EF41  F03F         	goto	l8299
 31517   007E76                     u5660:
 31518   007E76                     
 31519                           ;../../VLCBlib_PIC/mns.c: 809:         return ((void*)0);
 31520   007E76  0E00               	movlw	0
 31521   007E78  6E07               	movwf	?_mnsGetDiagnostic^(0+1280),c
 31522   007E7A  0E00               	movlw	0
 31523   007E7C  6E08               	movwf	(?_mnsGetDiagnostic+1)^(0+1280),c
 31524   007E7E  EF49  F03F         	goto	l1433
 31525   007E82                     l8299:
 31526                           
 31527                           ;../../VLCBlib_PIC/mns.c: 811:     return &(mnsDiagnostics[index]);
 31528   007E82  5009               	movf	mnsGetDiagnostic@index^(0+1280),w,c
 31529   007E84  0D02               	mullw	2
 31530   007E86  0EAD               	movlw	low _mnsDiagnostics
 31531   007E88  24F3               	addwf	243,w,c
 31532   007E8A  6E07               	movwf	?_mnsGetDiagnostic^(0+1280),c
 31533   007E8C  0E05               	movlw	high _mnsDiagnostics
 31534   007E8E  20F4               	addwfc	prodh,w,c
 31535   007E90  6E08               	movwf	(?_mnsGetDiagnostic+1)^(0+1280),c
 31536   007E92                     l1433:
 31537   007E92  0012               	return		;funcret
 31538   007E94                     __end_of_mnsGetDiagnostic:
 31539                           	callstack 0
 31540                           
 31541 ;; *************** function _consumerGetDiagnostic *****************
 31542 ;; Defined at:
 31543 ;;		line 218 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 31544 ;; Parameters:    Size  Location     Type
 31545 ;;  index           1    wreg     unsigned char 
 31546 ;; Auto vars:     Size  Location     Type
 31547 ;;  index           1    8[COMRAM] unsigned char 
 31548 ;; Return value:  Size  Location     Type
 31549 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31550 ;; Registers used:
 31551 ;;		wreg, status,2, status,0, prodl, prodh
 31552 ;; Tracked objects:
 31553 ;;		On entry : 0/0
 31554 ;;		On exit  : 0/0
 31555 ;;		Unchanged: 0/0
 31556 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31558 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31560 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31561 ;;Total ram usage:        3 bytes
 31562 ;; Hardware stack levels used: 1
 31563 ;; Hardware stack levels required when called: 1
 31564 ;; This function calls:
 31565 ;;		Nothing
 31566 ;; This function is called by:
 31567 ;;		_mnsTRallDiagnosticsCallback
 31568 ;;		_mnsProcessMessage
 31569 ;; This function uses a non-reentrant model
 31570 ;;
 31571                           
 31572                           	psect	text58
 31573   007E94                     __ptext58:
 31574                           	callstack 0
 31575   007E94                     _consumerGetDiagnostic:
 31576                           	callstack 122
 31577                           
 31578                           ;incstack = 0
 31579                           ;consumerGetDiagnostic@index stored from wreg
 31580   007E94  6E09               	movwf	consumerGetDiagnostic@index^(0+1280),c
 31581   007E96                     
 31582                           ;../../VLCBlib_PIC/event_consumer_simple.c: 219:     if (index > 2) {
 31583   007E96  0E02               	movlw	2
 31584   007E98  6409               	cpfsgt	consumerGetDiagnostic@index^(0+1280),c
 31585   007E9A  EF51  F03F         	goto	u5491
 31586   007E9E  EF53  F03F         	goto	u5490
 31587   007EA2                     u5491:
 31588   007EA2  EF59  F03F         	goto	l8075
 31589   007EA6                     u5490:
 31590   007EA6                     
 31591                           ;../../VLCBlib_PIC/event_consumer_simple.c: 220:         return ((void*)0);
 31592   007EA6  0E00               	movlw	0
 31593   007EA8  6E07               	movwf	?_consumerGetDiagnostic^(0+1280),c
 31594   007EAA  0E00               	movlw	0
 31595   007EAC  6E08               	movwf	(?_consumerGetDiagnostic+1)^(0+1280),c
 31596   007EAE  EF61  F03F         	goto	l836
 31597   007EB2                     l8075:
 31598                           
 31599                           ;../../VLCBlib_PIC/event_consumer_simple.c: 222:     return &(consumerDiagnostics[index]
      +                          );
 31600   007EB2  5009               	movf	consumerGetDiagnostic@index^(0+1280),w,c
 31601   007EB4  0D02               	mullw	2
 31602   007EB6  0EC1               	movlw	low _consumerDiagnostics
 31603   007EB8  24F3               	addwf	243,w,c
 31604   007EBA  6E07               	movwf	?_consumerGetDiagnostic^(0+1280),c
 31605   007EBC  0E05               	movlw	high _consumerDiagnostics
 31606   007EBE  20F4               	addwfc	prodh,w,c
 31607   007EC0  6E08               	movwf	(?_consumerGetDiagnostic+1)^(0+1280),c
 31608   007EC2                     l836:
 31609   007EC2  0012               	return		;funcret
 31610   007EC4                     __end_of_consumerGetDiagnostic:
 31611                           	callstack 0
 31612                           
 31613 ;; *************** function _canGetDiagnostic *****************
 31614 ;; Defined at:
 31615 ;;		line 500 in file "../../VLCBlib_PIC/can18_can_2.c"
 31616 ;; Parameters:    Size  Location     Type
 31617 ;;  index           1    wreg     unsigned char 
 31618 ;; Auto vars:     Size  Location     Type
 31619 ;;  index           1    9[COMRAM] unsigned char 
 31620 ;;  i16             2    0        short 
 31621 ;; Return value:  Size  Location     Type
 31622 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31623 ;; Registers used:
 31624 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 31625 ;; Tracked objects:
 31626 ;;		On entry : 0/0
 31627 ;;		On exit  : 0/0
 31628 ;;		Unchanged: 0/0
 31629 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31633 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31634 ;;Total ram usage:        4 bytes
 31635 ;; Hardware stack levels used: 1
 31636 ;; Hardware stack levels required when called: 2
 31637 ;; This function calls:
 31638 ;;		_getNumRxBuffersInUse
 31639 ;;		_getNumTxBuffersInUse
 31640 ;; This function is called by:
 31641 ;;		_mnsTRallDiagnosticsCallback
 31642 ;;		_mnsProcessMessage
 31643 ;; This function uses a non-reentrant model
 31644 ;;
 31645                           
 31646                           	psect	text59
 31647   0064F0                     __ptext59:
 31648                           	callstack 0
 31649   0064F0                     _canGetDiagnostic:
 31650                           	callstack 121
 31651                           
 31652                           ;incstack = 0
 31653                           ;canGetDiagnostic@index stored from wreg
 31654   0064F0  6E0A               	movwf	canGetDiagnostic@index^(0+1280),c
 31655   0064F2                     
 31656                           ;../../VLCBlib_PIC/can18_can_2.c: 501:     int16_t i16;;../../VLCBlib_PIC/can18_can_2.c:
      +                           503:     if (index > 18) {
 31657   0064F2  0E12               	movlw	18
 31658   0064F4  640A               	cpfsgt	canGetDiagnostic@index^(0+1280),c
 31659   0064F6  EF7F  F032         	goto	u5461
 31660   0064FA  EF81  F032         	goto	u5460
 31661   0064FE                     u5461:
 31662   0064FE  EFAB  F032         	goto	l8043
 31663   006502                     u5460:
 31664   006502                     
 31665                           ;../../VLCBlib_PIC/can18_can_2.c: 504:         return ((void*)0);
 31666   006502  0E00               	movlw	0
 31667   006504  6E07               	movwf	?_canGetDiagnostic^(0+1280),c
 31668   006506  0E00               	movlw	0
 31669   006508  6E08               	movwf	(?_canGetDiagnostic+1)^(0+1280),c
 31670   00650A  EFCA  F032         	goto	l646
 31671   00650E                     l648:
 31672                           
 31673                           ;../../VLCBlib_PIC/can18_can_2.c: 508:             canDiagnostics[0x03].asUint = C1TRECU
      +                          ;
 31674   00650E  C136 F694          	movff	310,_canDiagnostics+6	;volatile
 31675   006512  0106               	movlb	6	; () banked
 31676   006514  6B95               	clrf	(_canDiagnostics+7)& (0+255),b
 31677                           
 31678                           ;../../VLCBlib_PIC/can18_can_2.c: 509:             break;
 31679   006516  EFC2  F032         	goto	l8045
 31680   00651A                     l8037:
 31681                           
 31682                           ;../../VLCBlib_PIC/can18_can_2.c: 511:             canDiagnostics[0x04].asUint = getNumT
      +                          xBuffersInUse();
 31683   00651A  EC84  F038         	call	_getNumTxBuffersInUse	;wreg free
 31684   00651E  6E09               	movwf	??_canGetDiagnostic^(0+1280),c
 31685   006520  5009               	movf	??_canGetDiagnostic^(0+1280),w,c
 31686   006522  0106               	movlb	6	; () banked
 31687   006524  6F96               	movwf	(_canDiagnostics+8)& (0+255),b
 31688   006526  6B97               	clrf	(_canDiagnostics+9)& (0+255),b
 31689                           
 31690                           ;../../VLCBlib_PIC/can18_can_2.c: 512:             break;
 31691   006528  EFC2  F032         	goto	l8045
 31692   00652C                     l8039:
 31693                           
 31694                           ;../../VLCBlib_PIC/can18_can_2.c: 514:             canDiagnostics[0x07].asUint = getNumR
      +                          xBuffersInUse();
 31695   00652C  ECB0  F039         	call	_getNumRxBuffersInUse	;wreg free
 31696   006530  6E09               	movwf	??_canGetDiagnostic^(0+1280),c
 31697   006532  5009               	movf	??_canGetDiagnostic^(0+1280),w,c
 31698   006534  0106               	movlb	6	; () banked
 31699   006536  6F9C               	movwf	(_canDiagnostics+14)& (0+255),b
 31700   006538  6B9D               	clrf	(_canDiagnostics+15)& (0+255),b
 31701                           
 31702                           ;../../VLCBlib_PIC/can18_can_2.c: 515:             break;
 31703   00653A  EFC2  F032         	goto	l8045
 31704   00653E                     l652:
 31705                           
 31706                           ;../../VLCBlib_PIC/can18_can_2.c: 517:             canDiagnostics[0x02].asUint = C1BDIAG
      +                          0Hbits.NTERRCNT;
 31707   00653E  C139 F692          	movff	313,_canDiagnostics+4	;volatile
 31708   006542  0106               	movlb	6	; () banked
 31709   006544  6B93               	clrf	(_canDiagnostics+5)& (0+255),b
 31710                           
 31711                           ;../../VLCBlib_PIC/can18_can_2.c: 518:             break;
 31712   006546  EFC2  F032         	goto	l8045
 31713   00654A                     l653:
 31714                           
 31715                           ;../../VLCBlib_PIC/can18_can_2.c: 520:             canDiagnostics[0x01].asUint = C1BDIAG
      +                          0Lbits.NRERRCNT;
 31716   00654A  C138 F690          	movff	312,_canDiagnostics+2	;volatile
 31717   00654E  0106               	movlb	6	; () banked
 31718   006550  6B91               	clrf	(_canDiagnostics+3)& (0+255),b
 31719                           
 31720                           ;../../VLCBlib_PIC/can18_can_2.c: 521:             break;
 31721   006552  EFC2  F032         	goto	l8045
 31722   006556                     l8043:
 31723   006556  500A               	movf	canGetDiagnostic@index^(0+1280),w,c
 31724                           
 31725                           ; Switch size 1, requested type "simple"
 31726                           ; Number of cases is 5, Range of values is 1 to 7
 31727                           ; switch strategies available:
 31728                           ; Name         Instructions Cycles
 31729                           ; simple_byte           16     9 (average)
 31730                           ;	Chosen strategy is simple_byte
 31731   006558  0A01               	xorlw	1	; case 1
 31732   00655A  B4D8               	btfsc	status,2,c
 31733   00655C  EFA5  F032         	goto	l653
 31734   006560  0A03               	xorlw	3	; case 2
 31735   006562  B4D8               	btfsc	status,2,c
 31736   006564  EF9F  F032         	goto	l652
 31737   006568  0A01               	xorlw	1	; case 3
 31738   00656A  B4D8               	btfsc	status,2,c
 31739   00656C  EF87  F032         	goto	l648
 31740   006570  0A07               	xorlw	7	; case 4
 31741   006572  B4D8               	btfsc	status,2,c
 31742   006574  EF8D  F032         	goto	l8037
 31743   006578  0A03               	xorlw	3	; case 7
 31744   00657A  B4D8               	btfsc	status,2,c
 31745   00657C  EF96  F032         	goto	l8039
 31746   006580  EFC2  F032         	goto	l8045
 31747   006584                     l8045:
 31748                           
 31749                           ;../../VLCBlib_PIC/can18_can_2.c: 524:     return &(canDiagnostics[index]);
 31750   006584  500A               	movf	canGetDiagnostic@index^(0+1280),w,c
 31751   006586  0D02               	mullw	2
 31752   006588  0E8E               	movlw	low _canDiagnostics
 31753   00658A  24F3               	addwf	243,w,c
 31754   00658C  6E07               	movwf	?_canGetDiagnostic^(0+1280),c
 31755   00658E  0E06               	movlw	high _canDiagnostics
 31756   006590  20F4               	addwfc	prodh,w,c
 31757   006592  6E08               	movwf	(?_canGetDiagnostic+1)^(0+1280),c
 31758   006594                     l646:
 31759   006594  0012               	return		;funcret
 31760   006596                     __end_of_canGetDiagnostic:
 31761                           	callstack 0
 31762                           
 31763 ;; *************** function _teachGetDiagnostic *****************
 31764 ;; Defined at:
 31765 ;;		line 382 in file "../../VLCBlib_PIC/event_teach_simple.c"
 31766 ;; Parameters:    Size  Location     Type
 31767 ;;  index           1    wreg     unsigned char 
 31768 ;; Auto vars:     Size  Location     Type
 31769 ;;  index           1    8[COMRAM] unsigned char 
 31770 ;; Return value:  Size  Location     Type
 31771 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 31772 ;; Registers used:
 31773 ;;		wreg, status,2, status,0, prodl, prodh
 31774 ;; Tracked objects:
 31775 ;;		On entry : 0/0
 31776 ;;		On exit  : 0/0
 31777 ;;		Unchanged: 0/0
 31778 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31782 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31783 ;;Total ram usage:        3 bytes
 31784 ;; Hardware stack levels used: 1
 31785 ;; Hardware stack levels required when called: 1
 31786 ;; This function calls:
 31787 ;;		Nothing
 31788 ;; This function is called by:
 31789 ;;		_mnsTRallDiagnosticsCallback
 31790 ;;		_mnsProcessMessage
 31791 ;; This function uses a non-reentrant model
 31792 ;;
 31793                           
 31794                           	psect	text60
 31795   007EC4                     __ptext60:
 31796                           	callstack 0
 31797   007EC4                     _teachGetDiagnostic:
 31798                           	callstack 122
 31799                           
 31800                           ;incstack = 0
 31801                           ;teachGetDiagnostic@index stored from wreg
 31802   007EC4  6E09               	movwf	teachGetDiagnostic@index^(0+1280),c
 31803   007EC6                     
 31804                           ;../../VLCBlib_PIC/event_teach_simple.c: 383:     if (index > 1) {
 31805   007EC6  0E01               	movlw	1
 31806   007EC8  6409               	cpfsgt	teachGetDiagnostic@index^(0+1280),c
 31807   007ECA  EF69  F03F         	goto	u5541
 31808   007ECE  EF6B  F03F         	goto	u5540
 31809   007ED2                     u5541:
 31810   007ED2  EF71  F03F         	goto	l8105
 31811   007ED6                     u5540:
 31812   007ED6                     
 31813                           ;../../VLCBlib_PIC/event_teach_simple.c: 384:         return ((void*)0);
 31814   007ED6  0E00               	movlw	0
 31815   007ED8  6E07               	movwf	?_teachGetDiagnostic^(0+1280),c
 31816   007EDA  0E00               	movlw	0
 31817   007EDC  6E08               	movwf	(?_teachGetDiagnostic+1)^(0+1280),c
 31818   007EDE  EF79  F03F         	goto	l1034
 31819   007EE2                     l8105:
 31820                           
 31821                           ;../../VLCBlib_PIC/event_teach_simple.c: 386:     return &(teachDiagnostics[index]);
 31822   007EE2  5009               	movf	teachGetDiagnostic@index^(0+1280),w,c
 31823   007EE4  0D02               	mullw	2
 31824   007EE6  0ECC               	movlw	low _teachDiagnostics
 31825   007EE8  24F3               	addwf	243,w,c
 31826   007EEA  6E07               	movwf	?_teachGetDiagnostic^(0+1280),c
 31827   007EEC  0E05               	movlw	high _teachDiagnostics
 31828   007EEE  20F4               	addwfc	prodh,w,c
 31829   007EF0  6E08               	movwf	(?_teachGetDiagnostic+1)^(0+1280),c
 31830   007EF2                     l1034:
 31831   007EF2  0012               	return		;funcret
 31832   007EF4                     __end_of_teachGetDiagnostic:
 31833                           	callstack 0
 31834                           
 31835 ;; *************** function _startTimedResponse *****************
 31836 ;; Defined at:
 31837 ;;		line 93 in file "../../VLCBlib_PIC/timedResponse.c"
 31838 ;; Parameters:    Size  Location     Type
 31839 ;;  type            1    wreg     unsigned char 
 31840 ;;  serviceIndex    1    4[COMRAM] unsigned char 
 31841 ;;  callback        2    5[COMRAM] PTR FTN(unsigned char ,u
 31842 ;;		 -> nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), 
 31843 ;;		 -> reqevCallback(1), nerdCallback(1), 
 31844 ;; Auto vars:     Size  Location     Type
 31845 ;;  type            1    7[COMRAM] unsigned char 
 31846 ;; Return value:  Size  Location     Type
 31847 ;;                  1    wreg      void 
 31848 ;; Registers used:
 31849 ;;		wreg, status,2, status,0
 31850 ;; Tracked objects:
 31851 ;;		On entry : 0/0
 31852 ;;		On exit  : 0/0
 31853 ;;		Unchanged: 0/0
 31854 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31855 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31858 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31859 ;;Total ram usage:        4 bytes
 31860 ;; Hardware stack levels used: 1
 31861 ;; Hardware stack levels required when called: 1
 31862 ;; This function calls:
 31863 ;;		Nothing
 31864 ;; This function is called by:
 31865 ;;		_doNerd
 31866 ;;		_doReval
 31867 ;;		_doReqev
 31868 ;;		_mnsProcessMessage
 31869 ;;		_nvProcessMessage
 31870 ;; This function uses a non-reentrant model
 31871 ;;
 31872                           
 31873                           	psect	text61
 31874   0077E2                     __ptext61:
 31875                           	callstack 0
 31876   0077E2                     _startTimedResponse:
 31877                           	callstack 122
 31878                           
 31879                           ;incstack = 0
 31880                           ;startTimedResponse@type stored from wreg
 31881   0077E2  6E08               	movwf	startTimedResponse@type^(0+1280),c
 31882   0077E4                     
 31883                           ;../../VLCBlib_PIC/timedResponse.c: 94:     timedResponseType = type;
 31884   0077E4  C508  F596         	movff	startTimedResponse@type,_timedResponseType
 31885   0077E8                     
 31886                           ;../../VLCBlib_PIC/timedResponse.c: 95:     if (serviceIndex == 0) {
 31887   0077E8  5005               	movf	startTimedResponse@serviceIndex^(0+1280),w,c
 31888   0077EA  A4D8               	btfss	status,2,c
 31889   0077EC  EFFA  F03B         	goto	u5581
 31890   0077F0  EFFC  F03B         	goto	u5580
 31891   0077F4                     u5581:
 31892   0077F4  EF02  F03C         	goto	l1872
 31893   0077F8                     u5580:
 31894   0077F8                     
 31895                           ;../../VLCBlib_PIC/timedResponse.c: 97:         timedResponseAllServicesFlag = 1;
 31896   0077F8  0E01               	movlw	1
 31897   0077FA  0105               	movlb	5	; () banked
 31898   0077FC  6F97               	movwf	_timedResponseAllServicesFlag& (0+255),b
 31899   0077FE                     
 31900                           ; BSR set to: 5
 31901                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = 0;
 31902   0077FE  6B98               	clrf	_timedResponseServiceIndex& (0+255),b
 31903                           
 31904                           ;../../VLCBlib_PIC/timedResponse.c: 99:     } else {
 31905   007800  EF19  F03C         	goto	l8145
 31906   007804                     l1872:
 31907                           
 31908                           ;../../VLCBlib_PIC/timedResponse.c: 100:         timedResponseAllServicesFlag = 0;
 31909   007804  0105               	movlb	5	; () banked
 31910   007806  6B97               	clrf	_timedResponseAllServicesFlag& (0+255),b
 31911   007808                     
 31912                           ; BSR set to: 5
 31913                           ;../../VLCBlib_PIC/timedResponse.c: 101:         if ((serviceIndex < 1) || (serviceIndex
      +                           > 6)) {
 31914   007808  5005               	movf	startTimedResponse@serviceIndex^(0+1280),w,c
 31915   00780A  B4D8               	btfsc	status,2,c
 31916   00780C  EF0A  F03C         	goto	u5591
 31917   007810  EF0C  F03C         	goto	u5590
 31918   007814                     u5591:
 31919   007814  EF14  F03C         	goto	l1876
 31920   007818                     u5590:
 31921   007818                     
 31922                           ; BSR set to: 5
 31923   007818  0E06               	movlw	6
 31924   00781A  6405               	cpfsgt	startTimedResponse@serviceIndex^(0+1280),c
 31925   00781C  EF12  F03C         	goto	u5601
 31926   007820  EF14  F03C         	goto	u5600
 31927   007824                     u5601:
 31928   007824  EF17  F03C         	goto	l8143
 31929   007828                     u5600:
 31930   007828                     l1876:
 31931                           
 31932                           ; BSR set to: 5
 31933                           ;../../VLCBlib_PIC/timedResponse.c: 103:             timedResponseType = 0xFF;
 31934   007828  6996               	setf	_timedResponseType& (0+255),b
 31935                           
 31936                           ;../../VLCBlib_PIC/timedResponse.c: 104:             return;
 31937   00782A  EF1E  F03C         	goto	l1877
 31938   00782E                     l8143:
 31939                           
 31940                           ; BSR set to: 5
 31941                           ;../../VLCBlib_PIC/timedResponse.c: 106:         timedResponseServiceIndex = (uint8_t)se
      +                          rviceIndex-1;
 31942   00782E  0405               	decf	startTimedResponse@serviceIndex^(0+1280),w,c
 31943   007830  6F98               	movwf	_timedResponseServiceIndex& (0+255),b
 31944   007832                     l8145:
 31945                           
 31946                           ; BSR set to: 5
 31947                           ;../../VLCBlib_PIC/timedResponse.c: 108:     timedResponseStep = 0;
 31948   007832  6B95               	clrf	_timedResponseStep& (0+255),b
 31949                           
 31950                           ;../../VLCBlib_PIC/timedResponse.c: 109:     timedResponseCallback = callback;
 31951   007834  C506  F587         	movff	startTimedResponse@callback,_timedResponseCallback
 31952   007838  C507  F588         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 31953   00783C                     l1877:
 31954                           
 31955                           ; BSR set to: 5
 31956   00783C  0012               	return		;funcret
 31957   00783E                     __end_of_startTimedResponse:
 31958                           	callstack 0
 31959                           
 31960 ;; *************** function _sendMessage6 *****************
 31961 ;; Defined at:
 31962 ;;		line 1207 in file "../../VLCBlib_PIC/vlcb.c"
 31963 ;; Parameters:    Size  Location     Type
 31964 ;;  opc             1    wreg     enum E22928
 31965 ;;  data1           1   37[COMRAM] unsigned char 
 31966 ;;  data2           1   38[COMRAM] unsigned char 
 31967 ;;  data3           1   39[COMRAM] unsigned char 
 31968 ;;  data4           1   40[COMRAM] unsigned char 
 31969 ;;  data5           1   41[COMRAM] unsigned char 
 31970 ;;  data6           1   42[COMRAM] unsigned char 
 31971 ;; Auto vars:     Size  Location     Type
 31972 ;;  opc             1   43[COMRAM] enum E22928
 31973 ;; Return value:  Size  Location     Type
 31974 ;;                  1    wreg      void 
 31975 ;; Registers used:
 31976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31977 ;; Tracked objects:
 31978 ;;		On entry : 0/0
 31979 ;;		On exit  : 0/0
 31980 ;;		Unchanged: 0/0
 31981 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31982 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31985 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31986 ;;Total ram usage:        7 bytes
 31987 ;; Hardware stack levels used: 1
 31988 ;; Hardware stack levels required when called: 5
 31989 ;; This function calls:
 31990 ;;		_sendMessage
 31991 ;; This function is called by:
 31992 ;;		_doReqev
 31993 ;;		_reqevCallback
 31994 ;;		_mnsProcessMessage
 31995 ;;		_mnsTRallDiagnosticsCallback
 31996 ;; This function uses a non-reentrant model
 31997 ;;
 31998                           
 31999                           	psect	text62
 32000   007F50                     __ptext62:
 32001                           	callstack 0
 32002   007F50                     _sendMessage6:
 32003                           	callstack 118
 32004                           
 32005                           ; BSR set to: 5
 32006                           ;incstack = 0
 32007                           ;sendMessage6@opc stored from wreg
 32008   007F50  6E2C               	movwf	sendMessage6@opc^(0+1280),c
 32009   007F52                     
 32010                           ;../../VLCBlib_PIC/vlcb.c: 1208:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 32011   007F52  0E07               	movlw	7
 32012   007F54  6E1B               	movwf	sendMessage@len^(0+1280),c
 32013   007F56  C526  F51C         	movff	sendMessage6@data1,sendMessage@data1
 32014   007F5A  C527  F51D         	movff	sendMessage6@data2,sendMessage@data2
 32015   007F5E  C528  F51E         	movff	sendMessage6@data3,sendMessage@data3
 32016   007F62  C529  F51F         	movff	sendMessage6@data4,sendMessage@data4
 32017   007F66  C52A  F520         	movff	sendMessage6@data5,sendMessage@data5
 32018   007F6A  C52B  F521         	movff	sendMessage6@data6,sendMessage@data6
 32019   007F6E  0E00               	movlw	0
 32020   007F70  6E22               	movwf	sendMessage@data7^(0+1280),c
 32021   007F72  502C               	movf	sendMessage6@opc^(0+1280),w,c
 32022   007F74  ECDF  F035         	call	_sendMessage
 32023   007F78  0012               	return		;funcret
 32024   007F7A                     __end_of_sendMessage6:
 32025                           	callstack 0
 32026                           
 32027 ;; *************** function _sendMessage4 *****************
 32028 ;; Defined at:
 32029 ;;		line 1180 in file "../../VLCBlib_PIC/vlcb.c"
 32030 ;; Parameters:    Size  Location     Type
 32031 ;;  opc             1    wreg     enum E22928
 32032 ;;  data1           1   37[COMRAM] unsigned char 
 32033 ;;  data2           1   38[COMRAM] unsigned char 
 32034 ;;  data3           1   39[COMRAM] unsigned char 
 32035 ;;  data4           1   40[COMRAM] unsigned char 
 32036 ;; Auto vars:     Size  Location     Type
 32037 ;;  opc             1   41[COMRAM] enum E22928
 32038 ;; Return value:  Size  Location     Type
 32039 ;;                  1    wreg      void 
 32040 ;; Registers used:
 32041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32042 ;; Tracked objects:
 32043 ;;		On entry : 0/0
 32044 ;;		On exit  : 0/0
 32045 ;;		Unchanged: 0/0
 32046 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32047 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32048 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32050 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32051 ;;Total ram usage:        5 bytes
 32052 ;; Hardware stack levels used: 1
 32053 ;; Hardware stack levels required when called: 5
 32054 ;; This function calls:
 32055 ;;		_sendMessage
 32056 ;; This function is called by:
 32057 ;;		_mnsProcessMessage
 32058 ;;		_mnsTRrqnpnCallback
 32059 ;;		_nvProcessMessage
 32060 ;;		_nvTRnvrdCallback
 32061 ;; This function uses a non-reentrant model
 32062 ;;
 32063                           
 32064                           	psect	text63
 32065   007F7A                     __ptext63:
 32066                           	callstack 0
 32067   007F7A                     _sendMessage4:
 32068                           	callstack 118
 32069                           
 32070                           ;incstack = 0
 32071                           ;sendMessage4@opc stored from wreg
 32072   007F7A  6E2A               	movwf	sendMessage4@opc^(0+1280),c
 32073   007F7C                     
 32074                           ;../../VLCBlib_PIC/vlcb.c: 1181:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 32075   007F7C  0E05               	movlw	5
 32076   007F7E  6E1B               	movwf	sendMessage@len^(0+1280),c
 32077   007F80  C526  F51C         	movff	sendMessage4@data1,sendMessage@data1
 32078   007F84  C527  F51D         	movff	sendMessage4@data2,sendMessage@data2
 32079   007F88  C528  F51E         	movff	sendMessage4@data3,sendMessage@data3
 32080   007F8C  C529  F51F         	movff	sendMessage4@data4,sendMessage@data4
 32081   007F90  0E00               	movlw	0
 32082   007F92  6E20               	movwf	sendMessage@data5^(0+1280),c
 32083   007F94  0E00               	movlw	0
 32084   007F96  6E21               	movwf	sendMessage@data6^(0+1280),c
 32085   007F98  0E00               	movlw	0
 32086   007F9A  6E22               	movwf	sendMessage@data7^(0+1280),c
 32087   007F9C  502A               	movf	sendMessage4@opc^(0+1280),w,c
 32088   007F9E  ECDF  F035         	call	_sendMessage
 32089   007FA2  0012               	return		;funcret
 32090   007FA4                     __end_of_sendMessage4:
 32091                           	callstack 0
 32092                           
 32093 ;; *************** function _sendMessage3 *****************
 32094 ;; Defined at:
 32095 ;;		line 1168 in file "../../VLCBlib_PIC/vlcb.c"
 32096 ;; Parameters:    Size  Location     Type
 32097 ;;  opc             1    wreg     enum E22928
 32098 ;;  data1           1   37[COMRAM] unsigned char 
 32099 ;;  data2           1   38[COMRAM] unsigned char 
 32100 ;;  data3           1   39[COMRAM] unsigned char 
 32101 ;; Auto vars:     Size  Location     Type
 32102 ;;  opc             1   40[COMRAM] enum E22928
 32103 ;; Return value:  Size  Location     Type
 32104 ;;                  1    wreg      void 
 32105 ;; Registers used:
 32106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32107 ;; Tracked objects:
 32108 ;;		On entry : 0/0
 32109 ;;		On exit  : 0/0
 32110 ;;		Unchanged: 0/0
 32111 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32112 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32115 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32116 ;;Total ram usage:        4 bytes
 32117 ;; Hardware stack levels used: 1
 32118 ;; Hardware stack levels required when called: 5
 32119 ;; This function calls:
 32120 ;;		_sendMessage
 32121 ;; This function is called by:
 32122 ;;		_teachProcessMessage
 32123 ;;		_doNnevn
 32124 ;;		_doNenrd
 32125 ;;		_doRqevn
 32126 ;;		_doEvlrn
 32127 ;;		_doReval
 32128 ;;		_doEvuln
 32129 ;;		_doReqev
 32130 ;;		_mnsProcessMessage
 32131 ;;		_nvProcessMessage
 32132 ;; This function uses a non-reentrant model
 32133 ;;
 32134                           
 32135                           	psect	text64
 32136   007FA4                     __ptext64:
 32137                           	callstack 0
 32138   007FA4                     _sendMessage3:
 32139                           	callstack 119
 32140                           
 32141                           ;incstack = 0
 32142                           ;sendMessage3@opc stored from wreg
 32143   007FA4  6E29               	movwf	sendMessage3@opc^(0+1280),c
 32144   007FA6                     
 32145                           ;../../VLCBlib_PIC/vlcb.c: 1169:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 32146   007FA6  0E04               	movlw	4
 32147   007FA8  6E1B               	movwf	sendMessage@len^(0+1280),c
 32148   007FAA  C526  F51C         	movff	sendMessage3@data1,sendMessage@data1
 32149   007FAE  C527  F51D         	movff	sendMessage3@data2,sendMessage@data2
 32150   007FB2  C528  F51E         	movff	sendMessage3@data3,sendMessage@data3
 32151   007FB6  0E00               	movlw	0
 32152   007FB8  6E1F               	movwf	sendMessage@data4^(0+1280),c
 32153   007FBA  0E00               	movlw	0
 32154   007FBC  6E20               	movwf	sendMessage@data5^(0+1280),c
 32155   007FBE  0E00               	movlw	0
 32156   007FC0  6E21               	movwf	sendMessage@data6^(0+1280),c
 32157   007FC2  0E00               	movlw	0
 32158   007FC4  6E22               	movwf	sendMessage@data7^(0+1280),c
 32159   007FC6  5029               	movf	sendMessage3@opc^(0+1280),w,c
 32160   007FC8  ECDF  F035         	call	_sendMessage
 32161   007FCC  0012               	return		;funcret
 32162   007FCE                     __end_of_sendMessage3:
 32163                           	callstack 0
 32164                           
 32165 ;; *************** function _getParameter *****************
 32166 ;; Defined at:
 32167 ;;		line 838 in file "../../VLCBlib_PIC/mns.c"
 32168 ;; Parameters:    Size  Location     Type
 32169 ;;  idx             1    wreg     unsigned char 
 32170 ;; Auto vars:     Size  Location     Type
 32171 ;;  idx             1    8[COMRAM] unsigned char 
 32172 ;;  i               1    0        unsigned char 
 32173 ;; Return value:  Size  Location     Type
 32174 ;;                  1    wreg      unsigned char 
 32175 ;; Registers used:
 32176 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32177 ;; Tracked objects:
 32178 ;;		On entry : 0/0
 32179 ;;		On exit  : 0/0
 32180 ;;		Unchanged: 0/0
 32181 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32184 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32185 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32186 ;;Total ram usage:        4 bytes
 32187 ;; Hardware stack levels used: 1
 32188 ;; Hardware stack levels required when called: 3
 32189 ;; This function calls:
 32190 ;;		_getParameterFlags
 32191 ;;		_have
 32192 ;; This function is called by:
 32193 ;;		_mnsProcessMessage
 32194 ;;		_mnsTRrqnpnCallback
 32195 ;; This function uses a non-reentrant model
 32196 ;;
 32197                           
 32198                           	psect	text65
 32199   0049A6                     __ptext65:
 32200                           	callstack 0
 32201   0049A6                     _getParameter:
 32202                           	callstack 120
 32203                           
 32204                           ;incstack = 0
 32205                           ;getParameter@idx stored from wreg
 32206   0049A6  6E09               	movwf	getParameter@idx^(0+1280),c
 32207   0049A8                     
 32208                           ;../../VLCBlib_PIC/mns.c: 839:     uint8_t i;;../../VLCBlib_PIC/mns.c: 840:     switch(i
      +                          dx) {
 32209   0049A8  EF3E  F025         	goto	l8289
 32210   0049AC                     l8193:
 32211                           
 32212                           ;../../VLCBlib_PIC/mns.c: 842:         return 20;
 32213   0049AC  0E14               	movlw	20
 32214   0049AE  EF95  F025         	goto	l1447
 32215   0049B2                     l8197:
 32216                           
 32217                           ;../../VLCBlib_PIC/mns.c: 844:         return MANU_MERG;
 32218   0049B2  0EA5               	movlw	165
 32219   0049B4  EF95  F025         	goto	l1447
 32220   0049B8                     l8201:
 32221                           
 32222                           ;../../VLCBlib_PIC/mns.c: 846:         return 'a';
 32223   0049B8  0E61               	movlw	97
 32224   0049BA  EF95  F025         	goto	l1447
 32225   0049BE                     l8205:
 32226                           
 32227                           ;../../VLCBlib_PIC/mns.c: 848:         return MTYP_CANARGB;
 32228   0049BE  0E57               	movlw	87
 32229   0049C0  EF95  F025         	goto	l1447
 32230   0049C4                     l8209:
 32231                           
 32232                           ;../../VLCBlib_PIC/mns.c: 850:         return 255;
 32233   0049C4  0EFF               	movlw	255
 32234   0049C6  EF95  F025         	goto	l1447
 32235   0049CA                     l8213:
 32236                           
 32237                           ;../../VLCBlib_PIC/mns.c: 852:         return 252;
 32238   0049CA  0EFC               	movlw	252
 32239   0049CC  EF95  F025         	goto	l1447
 32240   0049D0                     l8217:
 32241                           
 32242                           ;../../VLCBlib_PIC/mns.c: 854:         return 49;
 32243   0049D0  0E31               	movlw	49
 32244   0049D2  EF95  F025         	goto	l1447
 32245   0049D6                     l8221:
 32246                           
 32247                           ;../../VLCBlib_PIC/mns.c: 856:         return 1;
 32248   0049D6  0E01               	movlw	1
 32249   0049D8  EF95  F025         	goto	l1447
 32250   0049DC                     l8225:
 32251                           
 32252                           ;../../VLCBlib_PIC/mns.c: 858:         return getParameterFlags();
 32253   0049DC  ECFB  F036         	call	_getParameterFlags	;wreg free
 32254   0049E0  EF95  F025         	goto	l1447
 32255   0049E4                     l8229:
 32256                           
 32257                           ;../../VLCBlib_PIC/mns.c: 860:         return P18F27Q83;
 32258   0049E4  0E17               	movlw	23
 32259   0049E6  EF95  F025         	goto	l1447
 32260   0049EA                     l8233:
 32261                           
 32262                           ;../../VLCBlib_PIC/mns.c: 862:         if (have(SERVICE_ID_CAN)) {
 32263   0049EA  0E03               	movlw	3
 32264   0049EC  ECB5  F036         	call	_have
 32265   0049F0  0900               	iorlw	0
 32266   0049F2  B4D8               	btfsc	status,2,c
 32267   0049F4  EFFE  F024         	goto	u5641
 32268   0049F8  EF00  F025         	goto	u5640
 32269   0049FC                     u5641:
 32270   0049FC  EF02  F025         	goto	l8239
 32271   004A00                     u5640:
 32272   004A00  EFEB  F024         	goto	l8221
 32273   004A04                     l8239:
 32274                           
 32275                           ;../../VLCBlib_PIC/mns.c: 865:         return 0;
 32276   004A04  0E00               	movlw	0
 32277   004A06  EF95  F025         	goto	l1447
 32278   004A0A                     l8247:
 32279                           
 32280                           ;../../VLCBlib_PIC/mns.c: 869:         return 0x08;
 32281   004A0A  0E08               	movlw	8
 32282   004A0C  EF95  F025         	goto	l1447
 32283   004A10                     l8259:
 32284                           
 32285                           ;../../VLCBlib_PIC/mns.c: 876:         return *(const uint8_t*)0x3FFFFC;
 32286   004A10  0EFC               	movlw	252
 32287   004A12  6EF6               	movwf	tblptrl,c
 32288   004A14                     	if	1	;There is more than 1 active tblptr byte
 32289   004A14  0EFF               	movlw	255
 32290   004A16  6EF7               	movwf	tblptrh,c
 32291   004A18                     	endif
 32292   004A18                     	if	1	;There are 3 active tblptr bytes
 32293   004A18  0E00               	movlw	0
 32294   004A1A  6EF8               	movwf	tblptru,c
 32295   004A1C                     	endif
 32296   004A1C  0008               	tblrd		*
 32297   004A1E  50F5               	movf	tablat,w,c
 32298   004A20  EF95  F025         	goto	l1447
 32299   004A24                     l8263:
 32300                           
 32301                           ;../../VLCBlib_PIC/mns.c: 878:         return *(const uint8_t*)0x3FFFFD;
 32302   004A24  0EFD               	movlw	253
 32303   004A26  6EF6               	movwf	tblptrl,c
 32304   004A28                     	if	1	;There is more than 1 active tblptr byte
 32305   004A28  0EFF               	movlw	255
 32306   004A2A  6EF7               	movwf	tblptrh,c
 32307   004A2C                     	endif
 32308   004A2C                     	if	1	;There are 3 active tblptr bytes
 32309   004A2C  0E00               	movlw	0
 32310   004A2E  6EF8               	movwf	tblptru,c
 32311   004A30                     	endif
 32312   004A30  0008               	tblrd		*
 32313   004A32  50F5               	movf	tablat,w,c
 32314   004A34  EF95  F025         	goto	l1447
 32315   004A38                     l8267:
 32316                           
 32317                           ;../../VLCBlib_PIC/mns.c: 881:         return *(const uint8_t*)0x3FFFFE;
 32318   004A38  0EFE               	movlw	254
 32319   004A3A  6EF6               	movwf	tblptrl,c
 32320   004A3C                     	if	1	;There is more than 1 active tblptr byte
 32321   004A3C  0EFF               	movlw	255
 32322   004A3E  6EF7               	movwf	tblptrh,c
 32323   004A40                     	endif
 32324   004A40                     	if	1	;There are 3 active tblptr bytes
 32325   004A40  0E00               	movlw	0
 32326   004A42  6EF8               	movwf	tblptru,c
 32327   004A44                     	endif
 32328   004A44  0008               	tblrd		*
 32329   004A46  50F5               	movf	tablat,w,c
 32330   004A48  EF95  F025         	goto	l1447
 32331   004A4C                     l8271:
 32332                           
 32333                           ;../../VLCBlib_PIC/mns.c: 883:         return *(const uint8_t*)0x3FFFFF;
 32334   004A4C  0EFF               	movlw	255
 32335   004A4E  6E06               	movwf	??_getParameter^(0+1280),c
 32336   004A50  0EFF               	movlw	255
 32337   004A52  6E07               	movwf	(??_getParameter+1)^(0+1280),c
 32338   004A54  0E00               	movlw	0
 32339   004A56  6E08               	movwf	(??_getParameter+2)^(0+1280),c
 32340   004A58  C506  F4F6         	movff	??_getParameter,tblptrl
 32341   004A5C  C507  F4F7         	movff	??_getParameter+1,tblptrh
 32342   004A60  5008               	movf	(??_getParameter+2)^(0+1280),w,c
 32343   004A62  BEE8               	btfsc	wreg,7,c
 32344   004A64  D004               	bra	u5657
 32345   004A66  6EF8               	movwf	tblptru,c
 32346   004A68  0008               	tblrd		*
 32347   004A6A  50F5               	movf	tablat,w,c
 32348   004A6C  D005               	bra	u5650
 32349   004A6E                     u5657:
 32350   004A6E  C4F6 F4E1          	movff	tblptrl,fsr1l
 32351   004A72  C4F7 F4E2          	movff	tblptrh,fsr1h
 32352   004A76  50E7               	movf	indf1,w,c
 32353   004A78                     u5650:
 32354   004A78  EF95  F025         	goto	l1447
 32355   004A7C                     l8289:
 32356   004A7C  5009               	movf	getParameter@idx^(0+1280),w,c
 32357                           
 32358                           ; Switch size 1, requested type "simple"
 32359                           ; Number of cases is 21, Range of values is 0 to 20
 32360                           ; switch strategies available:
 32361                           ; Name         Instructions Cycles
 32362                           ; simple_byte           64    33 (average)
 32363                           ;	Chosen strategy is simple_byte
 32364   004A7E  0A00               	xorlw	0	; case 0
 32365   004A80  B4D8               	btfsc	status,2,c
 32366   004A82  EFD6  F024         	goto	l8193
 32367   004A86  0A01               	xorlw	1	; case 1
 32368   004A88  B4D8               	btfsc	status,2,c
 32369   004A8A  EFD9  F024         	goto	l8197
 32370   004A8E  0A03               	xorlw	3	; case 2
 32371   004A90  B4D8               	btfsc	status,2,c
 32372   004A92  EFDC  F024         	goto	l8201
 32373   004A96  0A01               	xorlw	1	; case 3
 32374   004A98  B4D8               	btfsc	status,2,c
 32375   004A9A  EFDF  F024         	goto	l8205
 32376   004A9E  0A07               	xorlw	7	; case 4
 32377   004AA0  B4D8               	btfsc	status,2,c
 32378   004AA2  EFE2  F024         	goto	l8209
 32379   004AA6  0A01               	xorlw	1	; case 5
 32380   004AA8  B4D8               	btfsc	status,2,c
 32381   004AAA  EFE5  F024         	goto	l8213
 32382   004AAE  0A03               	xorlw	3	; case 6
 32383   004AB0  B4D8               	btfsc	status,2,c
 32384   004AB2  EFE8  F024         	goto	l8217
 32385   004AB6  0A01               	xorlw	1	; case 7
 32386   004AB8  B4D8               	btfsc	status,2,c
 32387   004ABA  EFEB  F024         	goto	l8221
 32388   004ABE  0A0F               	xorlw	15	; case 8
 32389   004AC0  B4D8               	btfsc	status,2,c
 32390   004AC2  EFEE  F024         	goto	l8225
 32391   004AC6  0A01               	xorlw	1	; case 9
 32392   004AC8  B4D8               	btfsc	status,2,c
 32393   004ACA  EFF2  F024         	goto	l8229
 32394   004ACE  0A03               	xorlw	3	; case 10
 32395   004AD0  B4D8               	btfsc	status,2,c
 32396   004AD2  EFF5  F024         	goto	l8233
 32397   004AD6  0A01               	xorlw	1	; case 11
 32398   004AD8  B4D8               	btfsc	status,2,c
 32399   004ADA  EF02  F025         	goto	l8239
 32400   004ADE  0A07               	xorlw	7	; case 12
 32401   004AE0  B4D8               	btfsc	status,2,c
 32402   004AE2  EF05  F025         	goto	l8247
 32403   004AE6  0A01               	xorlw	1	; case 13
 32404   004AE8  B4D8               	btfsc	status,2,c
 32405   004AEA  EF02  F025         	goto	l8239
 32406   004AEE  0A03               	xorlw	3	; case 14
 32407   004AF0  B4D8               	btfsc	status,2,c
 32408   004AF2  EF02  F025         	goto	l8239
 32409   004AF6  0A01               	xorlw	1	; case 15
 32410   004AF8  B4D8               	btfsc	status,2,c
 32411   004AFA  EF08  F025         	goto	l8259
 32412   004AFE  0A1F               	xorlw	31	; case 16
 32413   004B00  B4D8               	btfsc	status,2,c
 32414   004B02  EF12  F025         	goto	l8263
 32415   004B06  0A01               	xorlw	1	; case 17
 32416   004B08  B4D8               	btfsc	status,2,c
 32417   004B0A  EF1C  F025         	goto	l8267
 32418   004B0E  0A03               	xorlw	3	; case 18
 32419   004B10  B4D8               	btfsc	status,2,c
 32420   004B12  EF26  F025         	goto	l8271
 32421   004B16  0A01               	xorlw	1	; case 19
 32422   004B18  B4D8               	btfsc	status,2,c
 32423   004B1A  EFEB  F024         	goto	l8221
 32424   004B1E  0A07               	xorlw	7	; case 20
 32425   004B20  B4D8               	btfsc	status,2,c
 32426   004B22  EFEB  F024         	goto	l8221
 32427   004B26  EF02  F025         	goto	l8239
 32428   004B2A                     l1447:
 32429   004B2A  0012               	return		;funcret
 32430   004B2C                     __end_of_getParameter:
 32431                           	callstack 0
 32432                           
 32433 ;; *************** function _getParameterFlags *****************
 32434 ;; Defined at:
 32435 ;;		line 609 in file "../../VLCBlib_PIC/mns.c"
 32436 ;; Parameters:    Size  Location     Type
 32437 ;;		None
 32438 ;; Auto vars:     Size  Location     Type
 32439 ;;  flags           1    4[COMRAM] unsigned char 
 32440 ;; Return value:  Size  Location     Type
 32441 ;;                  1    wreg      unsigned char 
 32442 ;; Registers used:
 32443 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32444 ;; Tracked objects:
 32445 ;;		On entry : 0/0
 32446 ;;		On exit  : 0/0
 32447 ;;		Unchanged: 0/0
 32448 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32452 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32453 ;;Total ram usage:        1 bytes
 32454 ;; Hardware stack levels used: 1
 32455 ;; Hardware stack levels required when called: 2
 32456 ;; This function calls:
 32457 ;;		_have
 32458 ;; This function is called by:
 32459 ;;		_mnsProcessMessage
 32460 ;;		_getParameter
 32461 ;; This function uses a non-reentrant model
 32462 ;;
 32463                           
 32464                           	psect	text66
 32465   006DF6                     __ptext66:
 32466                           	callstack 0
 32467   006DF6                     _getParameterFlags:
 32468                           	callstack 120
 32469   006DF6                     
 32470                           ;../../VLCBlib_PIC/mns.c: 610:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 611:     flag
      +                          s = 0;
 32471   006DF6  6A05               	clrf	getParameterFlags@flags^(0+1280),c
 32472   006DF8                     
 32473                           ;../../VLCBlib_PIC/mns.c: 612:     if (have(SERVICE_ID_CONSUMER)) {
 32474   006DF8  0E06               	movlw	6
 32475   006DFA  ECB5  F036         	call	_have
 32476   006DFE  0900               	iorlw	0
 32477   006E00  B4D8               	btfsc	status,2,c
 32478   006E02  EF05  F037         	goto	u5201
 32479   006E06  EF07  F037         	goto	u5200
 32480   006E0A                     u5201:
 32481   006E0A  EF08  F037         	goto	l7827
 32482   006E0E                     u5200:
 32483   006E0E                     
 32484                           ;../../VLCBlib_PIC/mns.c: 613:         flags |= 1;
 32485   006E0E  8005               	bsf	getParameterFlags@flags^(0+1280),0,c
 32486   006E10                     l7827:
 32487                           
 32488                           ;../../VLCBlib_PIC/mns.c: 615:     if (have(SERVICE_ID_PRODUCER)) {
 32489   006E10  0E05               	movlw	5
 32490   006E12  ECB5  F036         	call	_have
 32491   006E16  0900               	iorlw	0
 32492   006E18  B4D8               	btfsc	status,2,c
 32493   006E1A  EF11  F037         	goto	u5211
 32494   006E1E  EF13  F037         	goto	u5210
 32495   006E22                     u5211:
 32496   006E22  EF14  F037         	goto	l7831
 32497   006E26                     u5210:
 32498   006E26                     
 32499                           ;../../VLCBlib_PIC/mns.c: 616:         flags |= 2;
 32500   006E26  8205               	bsf	getParameterFlags@flags^(0+1280),1,c
 32501   006E28                     l7831:
 32502                           
 32503                           ;../../VLCBlib_PIC/mns.c: 618:     if (flags == (2 | 1)) flags |= 16;
 32504   006E28  0E03               	movlw	3
 32505   006E2A  1805               	xorwf	getParameterFlags@flags^(0+1280),w,c
 32506   006E2C  A4D8               	btfss	status,2,c
 32507   006E2E  EF1B  F037         	goto	u5221
 32508   006E32  EF1D  F037         	goto	u5220
 32509   006E36                     u5221:
 32510   006E36  EF1E  F037         	goto	l7835
 32511   006E3A                     u5220:
 32512   006E3A  8805               	bsf	getParameterFlags@flags^(0+1280),4,c
 32513   006E3C                     l7835:
 32514                           
 32515                           ;../../VLCBlib_PIC/mns.c: 619:     if (have(SERVICE_ID_BOOT)) {
 32516   006E3C  0E0A               	movlw	10
 32517   006E3E  ECB5  F036         	call	_have
 32518   006E42  0900               	iorlw	0
 32519   006E44  B4D8               	btfsc	status,2,c
 32520   006E46  EF27  F037         	goto	u5231
 32521   006E4A  EF29  F037         	goto	u5230
 32522   006E4E                     u5231:
 32523   006E4E  EF2A  F037         	goto	l7839
 32524   006E52                     u5230:
 32525   006E52                     
 32526                           ;../../VLCBlib_PIC/mns.c: 620:         flags |= 8;
 32527   006E52  8605               	bsf	getParameterFlags@flags^(0+1280),3,c
 32528   006E54                     l7839:
 32529                           
 32530                           ;../../VLCBlib_PIC/mns.c: 622:     if (mode_flags & 1) {
 32531   006E54  0105               	movlb	5	; () banked
 32532   006E56  A1A4               	btfss	_mode_flags& (0+255),0,b
 32533   006E58  EF30  F037         	goto	u5241
 32534   006E5C  EF32  F037         	goto	u5240
 32535   006E60                     u5241:
 32536   006E60  EF33  F037         	goto	l7843
 32537   006E64                     u5240:
 32538   006E64                     
 32539                           ; BSR set to: 5
 32540                           ;../../VLCBlib_PIC/mns.c: 623:         flags |= 32;
 32541   006E64  8A05               	bsf	getParameterFlags@flags^(0+1280),5,c
 32542   006E66                     l7843:
 32543                           
 32544                           ; BSR set to: 5
 32545                           ;../../VLCBlib_PIC/mns.c: 625:     if (mode_state == MODE_NORMAL) {
 32546   006E66  05A1               	decf	_mode_state& (0+255),w,b
 32547   006E68  A4D8               	btfss	status,2,c
 32548   006E6A  EF39  F037         	goto	u5251
 32549   006E6E  EF3B  F037         	goto	u5250
 32550   006E72                     u5251:
 32551   006E72  EF3C  F037         	goto	l1391
 32552   006E76                     u5250:
 32553   006E76                     
 32554                           ; BSR set to: 5
 32555                           ;../../VLCBlib_PIC/mns.c: 626:         flags |= 4;
 32556   006E76  8405               	bsf	getParameterFlags@flags^(0+1280),2,c
 32557   006E78                     l1391:
 32558                           
 32559                           ; BSR set to: 5
 32560                           ;../../VLCBlib_PIC/mns.c: 629:     flags |= 64;
 32561   006E78  8C05               	bsf	getParameterFlags@flags^(0+1280),6,c
 32562   006E7A                     
 32563                           ; BSR set to: 5
 32564                           ;../../VLCBlib_PIC/mns.c: 631:     return flags;
 32565   006E7A  5005               	movf	getParameterFlags@flags^(0+1280),w,c
 32566   006E7C                     
 32567                           ; BSR set to: 5
 32568   006E7C  0012               	return		;funcret
 32569   006E7E                     __end_of_getParameterFlags:
 32570                           	callstack 0
 32571                           
 32572 ;; *************** function _findServiceIndex *****************
 32573 ;; Defined at:
 32574 ;;		line 833 in file "../../VLCBlib_PIC/vlcb.c"
 32575 ;; Parameters:    Size  Location     Type
 32576 ;;  serviceType     1    wreg     unsigned char 
 32577 ;; Auto vars:     Size  Location     Type
 32578 ;;  serviceType     1    2[COMRAM] unsigned char 
 32579 ;;  i               1    3[COMRAM] unsigned char 
 32580 ;; Return value:  Size  Location     Type
 32581 ;;                  1    wreg      unsigned char 
 32582 ;; Registers used:
 32583 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 32584 ;; Tracked objects:
 32585 ;;		On entry : 0/0
 32586 ;;		On exit  : 0/0
 32587 ;;		Unchanged: 0/0
 32588 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32590 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32591 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32592 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32593 ;;Total ram usage:        4 bytes
 32594 ;; Hardware stack levels used: 1
 32595 ;; Hardware stack levels required when called: 1
 32596 ;; This function calls:
 32597 ;;		Nothing
 32598 ;; This function is called by:
 32599 ;;		_doNerd
 32600 ;;		_doReval
 32601 ;;		_doReqev
 32602 ;;		_mnsProcessMessage
 32603 ;;		_nvProcessMessage
 32604 ;; This function uses a non-reentrant model
 32605 ;;
 32606                           
 32607                           	psect	text67
 32608   006CDE                     __ptext67:
 32609                           	callstack 0
 32610   006CDE                     _findServiceIndex:
 32611                           	callstack 122
 32612                           
 32613                           ; BSR set to: 5
 32614                           ;incstack = 0
 32615                           ;findServiceIndex@serviceType stored from wreg
 32616   006CDE  6E03               	movwf	findServiceIndex@serviceType^(0+1280),c
 32617   006CE0                     
 32618                           ;../../VLCBlib_PIC/vlcb.c: 834:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 835:     for (i
      +                          =0; i<6; i++) {
 32619   006CE0  6A04               	clrf	findServiceIndex@i^(0+1280),c
 32620   006CE2                     l8115:
 32621                           
 32622                           ;../../VLCBlib_PIC/vlcb.c: 836:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 32623   006CE2  5004               	movf	findServiceIndex@i^(0+1280),w,c
 32624   006CE4  0D02               	mullw	2
 32625   006CE6  0E89               	movlw	low _services
 32626   006CE8  24F3               	addwf	243,w,c
 32627   006CEA  6EF6               	movwf	tblptrl,c
 32628   006CEC  0EFF               	movlw	high _services
 32629   006CEE  20F4               	addwfc	244,w,c
 32630   006CF0  6EF7               	movwf	tblptrh,c
 32631   006CF2                     	if	1	;There are 3 active tblptr bytes
 32632   006CF2  6AF8               	clrf	tblptru,c
 32633   006CF4  0E00               	movlw	low (__mediumconst shr (0+16))
 32634   006CF6  22F8               	addwfc	tblptru,f,c
 32635   006CF8                     	endif
 32636   006CF8  0009               	tblrd		*+
 32637   006CFA  50F5               	movf	tablat,w,c
 32638   006CFC  0009               	tblrd		*+
 32639   006CFE  10F5               	iorwf	tablat,w,c
 32640   006D00  B4D8               	btfsc	status,2,c
 32641   006D02  EF85  F036         	goto	u5551
 32642   006D06  EF87  F036         	goto	u5550
 32643   006D0A                     u5551:
 32644   006D0A  EFAA  F036         	goto	l8123
 32645   006D0E                     u5550:
 32646   006D0E  5004               	movf	findServiceIndex@i^(0+1280),w,c
 32647   006D10  0D02               	mullw	2
 32648   006D12  0E89               	movlw	low _services
 32649   006D14  24F3               	addwf	243,w,c
 32650   006D16  6EF6               	movwf	tblptrl,c
 32651   006D18  0EFF               	movlw	high _services
 32652   006D1A  20F4               	addwfc	244,w,c
 32653   006D1C  6EF7               	movwf	tblptrh,c
 32654   006D1E                     	if	1	;There are 3 active tblptr bytes
 32655   006D1E  6AF8               	clrf	tblptru,c
 32656   006D20  0E00               	movlw	low (__mediumconst shr (0+16))
 32657   006D22  22F8               	addwfc	tblptru,f,c
 32658   006D24                     	endif
 32659   006D24  0009               	tblrd		*+
 32660   006D26  C4F5 F501          	movff	tablat,??_findServiceIndex
 32661   006D2A  0009               	tblrd		*+
 32662   006D2C  C4F5 F502          	movff	tablat,??_findServiceIndex+1
 32663   006D30  C501  F4F6         	movff	??_findServiceIndex,tblptrl
 32664   006D34  C502  F4F7         	movff	??_findServiceIndex+1,tblptrh
 32665   006D38                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32666   006D38  6AF8               	clrf	tblptru,c
 32667   006D3A                     	endif
 32668   006D3A                     	if	0	;tblptru may be non-zero
 32669   006D3A                     	endif
 32670   006D3A  0008               	tblrd		*
 32671   006D3C  50F5               	movf	tablat,w,c
 32672   006D3E  1803               	xorwf	findServiceIndex@serviceType^(0+1280),w,c
 32673   006D40  A4D8               	btfss	status,2,c
 32674   006D42  EFA5  F036         	goto	u5561
 32675   006D46  EFA7  F036         	goto	u5560
 32676   006D4A                     u5561:
 32677   006D4A  EFAA  F036         	goto	l8123
 32678   006D4E                     u5560:
 32679   006D4E                     
 32680                           ;../../VLCBlib_PIC/vlcb.c: 837:             return i;
 32681   006D4E  5004               	movf	findServiceIndex@i^(0+1280),w,c
 32682   006D50  EFB4  F036         	goto	l1983
 32683   006D54                     l8123:
 32684                           
 32685                           ;../../VLCBlib_PIC/vlcb.c: 839:     }
 32686   006D54  2A04               	incf	findServiceIndex@i^(0+1280),f,c
 32687   006D56  0E05               	movlw	5
 32688   006D58  6404               	cpfsgt	findServiceIndex@i^(0+1280),c
 32689   006D5A  EFB1  F036         	goto	u5571
 32690   006D5E  EFB3  F036         	goto	u5570
 32691   006D62                     u5571:
 32692   006D62  EF71  F036         	goto	l8115
 32693   006D66                     u5570:
 32694   006D66                     
 32695                           ;../../VLCBlib_PIC/vlcb.c: 840:     return 0xFF;
 32696   006D66  0EFF               	movlw	255
 32697   006D68                     l1983:
 32698   006D68  0012               	return		;funcret
 32699   006D6A                     __end_of_findServiceIndex:
 32700                           	callstack 0
 32701                           
 32702 ;; *************** function _canWaitForTxQueueToDrain *****************
 32703 ;; Defined at:
 32704 ;;		line 671 in file "../../VLCBlib_PIC/can18_can_2.c"
 32705 ;; Parameters:    Size  Location     Type
 32706 ;;		None
 32707 ;; Auto vars:     Size  Location     Type
 32708 ;;		None
 32709 ;; Return value:  Size  Location     Type
 32710 ;;                  1    wreg      void 
 32711 ;; Registers used:
 32712 ;;		None
 32713 ;; Tracked objects:
 32714 ;;		On entry : 0/0
 32715 ;;		On exit  : 0/0
 32716 ;;		Unchanged: 0/0
 32717 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32722 ;;Total ram usage:        0 bytes
 32723 ;; Hardware stack levels used: 1
 32724 ;; Hardware stack levels required when called: 1
 32725 ;; This function calls:
 32726 ;;		Nothing
 32727 ;; This function is called by:
 32728 ;;		_mnsProcessMessage
 32729 ;; This function uses a non-reentrant model
 32730 ;;
 32731                           
 32732                           	psect	text68
 32733   0081EE                     __ptext68:
 32734                           	callstack 0
 32735   0081EE                     _canWaitForTxQueueToDrain:
 32736                           	callstack 123
 32737   0081EE                     l682:
 32738                           
 32739                           ;../../VLCBlib_PIC/can18_can_2.c: 672:     while (C1FIFOCON2H & 0x2) {
 32740   0081EE  0101               	movlb	1	; () banked
 32741   0081F0  B369               	btfsc	105,1,b	;volatile
 32742   0081F2  EFFD  F040         	goto	u5961
 32743   0081F6  EFFF  F040         	goto	u5960
 32744   0081FA                     u5961:
 32745   0081FA  EFF7  F040         	goto	l682
 32746   0081FE                     u5960:
 32747   0081FE                     
 32748                           ; BSR set to: 1
 32749   0081FE  0012               	return		;funcret
 32750   008200                     __end_of_canWaitForTxQueueToDrain:
 32751                           	callstack 0
 32752                           
 32753 ;; *************** function _canPoll *****************
 32754 ;; Defined at:
 32755 ;;		line 443 in file "../../VLCBlib_PIC/can18_can_2.c"
 32756 ;; Parameters:    Size  Location     Type
 32757 ;;		None
 32758 ;; Auto vars:     Size  Location     Type
 32759 ;;  t8              1    0        unsigned char 
 32760 ;; Return value:  Size  Location     Type
 32761 ;;                  1    wreg      void 
 32762 ;; Registers used:
 32763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32764 ;; Tracked objects:
 32765 ;;		On entry : 0/0
 32766 ;;		On exit  : 0/0
 32767 ;;		Unchanged: 0/0
 32768 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32773 ;;Total ram usage:        0 bytes
 32774 ;; Hardware stack levels used: 1
 32775 ;; Hardware stack levels required when called: 8
 32776 ;; This function calls:
 32777 ;;		_processEnumeration
 32778 ;; This function is called by:
 32779 ;;		_poll
 32780 ;; This function uses a non-reentrant model
 32781 ;;
 32782                           
 32783                           	psect	text69
 32784   008236                     __ptext69:
 32785                           	callstack 0
 32786   008236                     _canPoll:
 32787                           	callstack 117
 32788   008236                     
 32789                           ;../../VLCBlib_PIC/can18_can_2.c: 444:     uint8_t t8;;../../VLCBlib_PIC/can18_can_2.c: 
      +                          446:     processEnumeration();
 32790   008236  EC0F  F023         	call	_processEnumeration	;wreg free
 32791   00823A  0012               	return		;funcret
 32792   00823C                     __end_of_canPoll:
 32793                           	callstack 0
 32794                           
 32795 ;; *************** function _mnsPoll *****************
 32796 ;; Defined at:
 32797 ;;		line 650 in file "../../VLCBlib_PIC/mns.c"
 32798 ;; Parameters:    Size  Location     Type
 32799 ;;		None
 32800 ;; Auto vars:     Size  Location     Type
 32801 ;;		None
 32802 ;; Return value:  Size  Location     Type
 32803 ;;                  1    wreg      void 
 32804 ;; Registers used:
 32805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32806 ;; Tracked objects:
 32807 ;;		On entry : 0/0
 32808 ;;		On exit  : 0/0
 32809 ;;		Unchanged: 0/0
 32810 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32813 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32814 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32815 ;;Total ram usage:        4 bytes
 32816 ;; Hardware stack levels used: 1
 32817 ;; Hardware stack levels required when called: 6
 32818 ;; This function calls:
 32819 ;;		_sendMessage2
 32820 ;;		_sendMessage5
 32821 ;;		_setLEDsByMode
 32822 ;;		_tickGet
 32823 ;;		_writeNVM
 32824 ;; This function is called by:
 32825 ;;		_poll
 32826 ;; This function uses a non-reentrant model
 32827 ;;
 32828                           
 32829                           	psect	text70
 32830   002600                     __ptext70:
 32831                           	callstack 0
 32832   002600                     _mnsPoll:
 32833                           	callstack 119
 32834   002600                     
 32835                           ;../../VLCBlib_PIC/mns.c: 653:     if (mode_state == MODE_NORMAL) {
 32836   002600  0105               	movlb	5	; () banked
 32837   002602  05A1               	decf	_mode_state& (0+255),w,b
 32838   002604  A4D8               	btfss	status,2,c
 32839   002606  EF07  F013         	goto	u7771
 32840   00260A  EF09  F013         	goto	u7770
 32841   00260E                     u7771:
 32842   00260E  EF51  F013         	goto	l10493
 32843   002612                     u7770:
 32844   002612                     
 32845                           ; BSR set to: 5
 32846                           ;../../VLCBlib_PIC/mns.c: 654:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 32847   002612  EC75  F039         	call	_tickGet	;wreg free
 32848   002616  0105               	movlb	5	; () banked
 32849   002618  516C               	movf	_heartbeatTimer& (0+255),w,b
 32850   00261A  5C01               	subwf	?_tickGet^(0+1280),w,c
 32851   00261C  6E2C               	movwf	??_mnsPoll^(0+1280),c
 32852   00261E  516D               	movf	(_heartbeatTimer+1)& (0+255),w,b
 32853   002620  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 32854   002622  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 32855   002624  516E               	movf	(_heartbeatTimer+2)& (0+255),w,b
 32856   002626  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 32857   002628  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 32858   00262A  516F               	movf	(_heartbeatTimer+3)& (0+255),w,b
 32859   00262C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 32860   00262E  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 32861   002630  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 32862   002632  E10D               	bnz	u7780
 32863   002634  0EB5               	movlw	181
 32864   002636  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 32865   002638  0EC4               	movlw	196
 32866   00263A  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 32867   00263C  0E04               	movlw	4
 32868   00263E  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 32869   002640  A0D8               	btfss	status,0,c
 32870   002642  EF25  F013         	goto	u7781
 32871   002646  EF27  F013         	goto	u7780
 32872   00264A                     u7781:
 32873   00264A  EF51  F013         	goto	l10493
 32874   00264E                     u7780:
 32875   00264E                     
 32876                           ; BSR set to: 5
 32877                           ;../../VLCBlib_PIC/mns.c: 655:             if (mode_flags & 4) {
 32878   00264E  A5A4               	btfss	_mode_flags& (0+255),2,b
 32879   002650  EF2C  F013         	goto	u7791
 32880   002654  EF2E  F013         	goto	u7790
 32881   002658                     u7791:
 32882   002658  EF3D  F013         	goto	l10487
 32883   00265C                     u7790:
 32884   00265C                     
 32885                           ; BSR set to: 5
 32886                           ;../../VLCBlib_PIC/mns.c: 656:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x01].asBytes.lo,0);
 32887   00265C  C590  F526         	movff	_nn+1,sendMessage5@data1
 32888   002660  C58F  F527         	movff	_nn,sendMessage5@data2
 32889   002664  C59C  F528         	movff	_heartbeatSequence,sendMessage5@data3
 32890   002668  C5AF  F529         	movff	_mnsDiagnostics+2,sendMessage5@data4
 32891   00266C  0E00               	movlw	0
 32892   00266E  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 32893   002670  0EAB               	movlw	171
 32894   002672  EC11  F040         	call	_sendMessage5
 32895   002676  0105               	movlb	5	; () banked
 32896   002678  2B9C               	incf	_heartbeatSequence& (0+255),f,b
 32897   00267A                     l10487:
 32898                           
 32899                           ; BSR set to: 5
 32900                           ;../../VLCBlib_PIC/mns.c: 658:             heartbeatTimer.val = tickGet();
 32901   00267A  EC75  F039         	call	_tickGet	;wreg free
 32902   00267E  C501  F56C         	movff	?_tickGet,_heartbeatTimer
 32903   002682  C502  F56D         	movff	?_tickGet+1,_heartbeatTimer+1
 32904   002686  C503  F56E         	movff	?_tickGet+2,_heartbeatTimer+2
 32905   00268A  C504  F56F         	movff	?_tickGet+3,_heartbeatTimer+3
 32906   00268E                     
 32907                           ;../../VLCBlib_PIC/mns.c: 659:             if (mnsDiagnostics[0x01].asBytes.lo > 0) {
 32908   00268E  0105               	movlb	5	; () banked
 32909   002690  51AF               	movf	(_mnsDiagnostics+2)& (0+255),w,b
 32910   002692  B4D8               	btfsc	status,2,c
 32911   002694  EF4E  F013         	goto	u7801
 32912   002698  EF50  F013         	goto	u7800
 32913   00269C                     u7801:
 32914   00269C  EF51  F013         	goto	l10493
 32915   0026A0                     u7800:
 32916   0026A0                     
 32917                           ; BSR set to: 5
 32918                           ;../../VLCBlib_PIC/mns.c: 660:                 mnsDiagnostics[0x01].asBytes.lo--;
 32919   0026A0  07AF               	decf	(_mnsDiagnostics+2)& (0+255),f,b
 32920   0026A2                     l10493:
 32921                           
 32922                           ; BSR set to: 5
 32923                           ;../../VLCBlib_PIC/mns.c: 667:     if (mode_flags != last_mode_flags) {
 32924   0026A2  519F               	movf	_last_mode_flags& (0+255),w,b
 32925   0026A4  19A4               	xorwf	_mode_flags& (0+255),w,b
 32926   0026A6  B4D8               	btfsc	status,2,c
 32927   0026A8  EF58  F013         	goto	u7811
 32928   0026AC  EF5A  F013         	goto	u7810
 32929   0026B0                     u7811:
 32930   0026B0  EF67  F013         	goto	l10499
 32931   0026B4                     u7810:
 32932   0026B4                     
 32933                           ; BSR set to: 5
 32934                           ;../../VLCBlib_PIC/mns.c: 668:         writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 32935   0026B4  0EF9               	movlw	249
 32936   0026B6  6E0E               	movwf	writeNVM@index^(0+1280),c
 32937   0026B8  0E03               	movlw	3
 32938   0026BA  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 32939   0026BC  0E00               	movlw	0
 32940   0026BE  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 32941   0026C0  C5A4  F511         	movff	_mode_flags,writeNVM@value
 32942   0026C4  0E00               	movlw	0
 32943   0026C6  EC91  F03B         	call	_writeNVM
 32944   0026CA                     
 32945                           ;../../VLCBlib_PIC/mns.c: 669:         last_mode_flags = mode_flags;
 32946   0026CA  C5A4  F59F         	movff	_mode_flags,_last_mode_flags
 32947   0026CE                     l10499:
 32948                           
 32949                           ;../../VLCBlib_PIC/mns.c: 671:     if (mode_state != last_mode_state) {
 32950   0026CE  0105               	movlb	5	; () banked
 32951   0026D0  51A0               	movf	_last_mode_state& (0+255),w,b
 32952   0026D2  19A1               	xorwf	_mode_state& (0+255),w,b
 32953   0026D4  B4D8               	btfsc	status,2,c
 32954   0026D6  EF6F  F013         	goto	u7821
 32955   0026DA  EF71  F013         	goto	u7820
 32956   0026DE                     u7821:
 32957   0026DE  EF8E  F013         	goto	l10509
 32958   0026E2                     u7820:
 32959   0026E2                     
 32960                           ; BSR set to: 5
 32961                           ;../../VLCBlib_PIC/mns.c: 673:         if ((mode_state == MODE_UNINITIALISED) || (mode_s
      +                          tate == MODE_NORMAL)) {
 32962   0026E2  29A1               	incf	_mode_state& (0+255),w,b
 32963   0026E4  B4D8               	btfsc	status,2,c
 32964   0026E6  EF77  F013         	goto	u7831
 32965   0026EA  EF79  F013         	goto	u7830
 32966   0026EE                     u7831:
 32967   0026EE  EF81  F013         	goto	l10505
 32968   0026F2                     u7830:
 32969   0026F2                     
 32970                           ; BSR set to: 5
 32971   0026F2  05A1               	decf	_mode_state& (0+255),w,b
 32972   0026F4  A4D8               	btfss	status,2,c
 32973   0026F6  EF7F  F013         	goto	u7841
 32974   0026FA  EF81  F013         	goto	u7840
 32975   0026FE                     u7841:
 32976   0026FE  EF8C  F013         	goto	l10507
 32977   002702                     u7840:
 32978   002702                     l10505:
 32979                           
 32980                           ; BSR set to: 5
 32981                           ;../../VLCBlib_PIC/mns.c: 674:             writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 32982   002702  0EFB               	movlw	251
 32983   002704  6E0E               	movwf	writeNVM@index^(0+1280),c
 32984   002706  0E03               	movlw	3
 32985   002708  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 32986   00270A  0E00               	movlw	0
 32987   00270C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 32988   00270E  C5A1  F511         	movff	_mode_state,writeNVM@value
 32989   002712  0E00               	movlw	0
 32990   002714  EC91  F03B         	call	_writeNVM
 32991   002718                     l10507:
 32992                           
 32993                           ;../../VLCBlib_PIC/mns.c: 676:         last_mode_state = mode_state;
 32994   002718  C5A1  F5A0         	movff	_mode_state,_last_mode_state
 32995   00271C                     l10509:
 32996                           
 32997                           ;../../VLCBlib_PIC/mns.c: 680:     if ((tickGet() - uptimeTimer.val) > 62500) {
 32998   00271C  EC75  F039         	call	_tickGet	;wreg free
 32999   002720  0105               	movlb	5	; () banked
 33000   002722  5168               	movf	_uptimeTimer& (0+255),w,b
 33001   002724  5C01               	subwf	?_tickGet^(0+1280),w,c
 33002   002726  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33003   002728  5169               	movf	(_uptimeTimer+1)& (0+255),w,b
 33004   00272A  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33005   00272C  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33006   00272E  516A               	movf	(_uptimeTimer+2)& (0+255),w,b
 33007   002730  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33008   002732  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33009   002734  516B               	movf	(_uptimeTimer+3)& (0+255),w,b
 33010   002736  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33011   002738  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33012   00273A  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33013   00273C  102E               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 33014   00273E  E10B               	bnz	u7850
 33015   002740  0E25               	movlw	37
 33016   002742  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33017   002744  0EF4               	movlw	244
 33018   002746  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33019   002748  A0D8               	btfss	status,0,c
 33020   00274A  EFA9  F013         	goto	u7851
 33021   00274E  EFAB  F013         	goto	u7850
 33022   002752                     u7851:
 33023   002752  EF3F  F015         	goto	l10597
 33024   002756                     u7850:
 33025   002756                     
 33026                           ; BSR set to: 5
 33027                           ;../../VLCBlib_PIC/mns.c: 681:         uptimeTimer.val = tickGet();
 33028   002756  EC75  F039         	call	_tickGet	;wreg free
 33029   00275A  C501  F568         	movff	?_tickGet,_uptimeTimer
 33030   00275E  C502  F569         	movff	?_tickGet+1,_uptimeTimer+1
 33031   002762  C503  F56A         	movff	?_tickGet+2,_uptimeTimer+2
 33032   002766  C504  F56B         	movff	?_tickGet+3,_uptimeTimer+3
 33033   00276A                     
 33034                           ;../../VLCBlib_PIC/mns.c: 682:         mnsDiagnostics[0x03].asUint++;
 33035   00276A  0105               	movlb	5	; () banked
 33036   00276C  4BB3               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 33037   00276E  2BB4               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 33038   002770                     
 33039                           ; BSR set to: 5
 33040                           ;../../VLCBlib_PIC/mns.c: 683:         if (mnsDiagnostics[0x03].asUint == 0) {
 33041   002770  51B3               	movf	(_mnsDiagnostics+6)& (0+255),w,b
 33042   002772  11B4               	iorwf	(_mnsDiagnostics+7)& (0+255),w,b
 33043   002774  A4D8               	btfss	status,2,c
 33044   002776  EFBF  F013         	goto	u7861
 33045   00277A  EFC1  F013         	goto	u7860
 33046   00277E                     u7861:
 33047   00277E  EF3F  F015         	goto	l10597
 33048   002782                     u7860:
 33049   002782                     
 33050                           ; BSR set to: 5
 33051                           ;../../VLCBlib_PIC/mns.c: 684:             mnsDiagnostics[0x02].asUint++;
 33052   002782  4BB1               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 33053   002784  2BB2               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 33054   002786  EF3F  F015         	goto	l10597
 33055   00278A                     l1411:
 33056                           
 33057                           ; BSR set to: 5
 33058                           ;../../VLCBlib_PIC/mns.c: 693:             if ((!(PORTAbits.RA2)) == 0) {
 33059   00278A  A4CE               	btfss	206,2,c	;volatile
 33060   00278C  EFCA  F013         	goto	u7871
 33061   002790  EFCC  F013         	goto	u7870
 33062   002794                     u7871:
 33063   002794  EFD8  F013         	goto	l10521
 33064   002798                     u7870:
 33065   002798                     l10519:
 33066                           
 33067                           ;../../VLCBlib_PIC/mns.c: 695:                 pbTimer.val = tickGet();
 33068   002798  EC75  F039         	call	_tickGet	;wreg free
 33069   00279C  C501  F570         	movff	?_tickGet,_pbTimer
 33070   0027A0  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 33071   0027A4  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 33072   0027A8  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 33073                           
 33074                           ;../../VLCBlib_PIC/mns.c: 696:             } else {
 33075   0027AC  EF4E  F015         	goto	l1429
 33076   0027B0                     l10521:
 33077                           
 33078                           ; BSR set to: 5
 33079                           ;../../VLCBlib_PIC/mns.c: 698:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 33080   0027B0  EC75  F039         	call	_tickGet	;wreg free
 33081   0027B4  0105               	movlb	5	; () banked
 33082   0027B6  5170               	movf	_pbTimer& (0+255),w,b
 33083   0027B8  5C01               	subwf	?_tickGet^(0+1280),w,c
 33084   0027BA  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33085   0027BC  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33086   0027BE  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33087   0027C0  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33088   0027C2  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33089   0027C4  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33090   0027C6  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33091   0027C8  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33092   0027CA  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33093   0027CC  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33094   0027CE  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33095   0027D0  E10D               	bnz	u7880
 33096   0027D2  0E91               	movlw	145
 33097   0027D4  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33098   0027D6  0ED0               	movlw	208
 33099   0027D8  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33100   0027DA  0E03               	movlw	3
 33101   0027DC  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33102   0027DE  A0D8               	btfss	status,0,c
 33103   0027E0  EFF4  F013         	goto	u7881
 33104   0027E4  EFF6  F013         	goto	u7880
 33105   0027E8                     u7881:
 33106   0027E8  EF4E  F015         	goto	l1429
 33107   0027EC                     u7880:
 33108   0027EC                     
 33109                           ; BSR set to: 5
 33110                           ;../../VLCBlib_PIC/mns.c: 700:                     mode_state = 0xFD;
 33111   0027EC  0EFD               	movlw	253
 33112   0027EE  6FA1               	movwf	_mode_state& (0+255),b
 33113   0027F0                     
 33114                           ; BSR set to: 5
 33115                           ;../../VLCBlib_PIC/mns.c: 701:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 33116   0027F0  699E               	setf	_setupModePreviousMode& (0+255),b
 33117   0027F2                     
 33118                           ; BSR set to: 5
 33119                           ;../../VLCBlib_PIC/mns.c: 702:                     setLEDsByMode();
 33120   0027F2  EC88  F03D         	call	_setLEDsByMode	;wreg free
 33121   0027F6  EF4E  F015         	goto	l1429
 33122   0027FA                     l1416:
 33123                           
 33124                           ; BSR set to: 5
 33125                           ;../../VLCBlib_PIC/mns.c: 707:             if ((!(PORTAbits.RA2)) == 0) {
 33126   0027FA  A4CE               	btfss	206,2,c	;volatile
 33127   0027FC  EF02  F014         	goto	u7891
 33128   002800  EF04  F014         	goto	u7890
 33129   002804                     u7891:
 33130   002804  EFCC  F013         	goto	l10519
 33131   002808                     u7890:
 33132   002808                     
 33133                           ; BSR set to: 5
 33134                           ;../../VLCBlib_PIC/mns.c: 711:                 mode_state = MODE_SETUP;
 33135   002808  6BA1               	clrf	_mode_state& (0+255),b
 33136                           
 33137                           ;../../VLCBlib_PIC/mns.c: 712:                 setupModePreviousMode = MODE_UNINITIALISE
      +                          D;
 33138   00280A  699E               	setf	_setupModePreviousMode& (0+255),b
 33139   00280C                     
 33140                           ; BSR set to: 5
 33141                           ;../../VLCBlib_PIC/mns.c: 713:                 pbTimer.val = tickGet();
 33142   00280C  EC75  F039         	call	_tickGet	;wreg free
 33143   002810  C501  F570         	movff	?_tickGet,_pbTimer
 33144   002814  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 33145   002818  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 33146   00281C  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 33147   002820                     
 33148                           ;../../VLCBlib_PIC/mns.c: 715:                 sendMessage2(OPC_RQNN, nn.bytes.hi, nn.by
      +                          tes.lo);
 33149   002820  C590  F526         	movff	_nn+1,sendMessage2@data1
 33150   002824  C58F  F527         	movff	_nn,sendMessage2@data2
 33151   002828  0E50               	movlw	80
 33152   00282A  ECE7  F03F         	call	_sendMessage2
 33153   00282E                     
 33154                           ;../../VLCBlib_PIC/mns.c: 716:                 setLEDsByMode();
 33155   00282E  EC88  F03D         	call	_setLEDsByMode	;wreg free
 33156   002832  EFCC  F013         	goto	l10519
 33157   002836                     l1418:
 33158                           
 33159                           ; BSR set to: 5
 33160                           ;../../VLCBlib_PIC/mns.c: 721:             if ((!(PORTAbits.RA2)) == 0) {
 33161   002836  A4CE               	btfss	206,2,c	;volatile
 33162   002838  EF20  F014         	goto	u7901
 33163   00283C  EF22  F014         	goto	u7900
 33164   002840                     u7901:
 33165   002840  EFA6  F014         	goto	l10563
 33166   002844                     u7900:
 33167   002844                     
 33168                           ; BSR set to: 5
 33169                           ;../../VLCBlib_PIC/mns.c: 724:                 if (((tickGet() - pbTimer.val) > (62500/1
      +                          0)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 33170   002844  EC75  F039         	call	_tickGet	;wreg free
 33171   002848  0105               	movlb	5	; () banked
 33172   00284A  5170               	movf	_pbTimer& (0+255),w,b
 33173   00284C  5C01               	subwf	?_tickGet^(0+1280),w,c
 33174   00284E  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33175   002850  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33176   002852  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33177   002854  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33178   002856  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33179   002858  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33180   00285A  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33181   00285C  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33182   00285E  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33183   002860  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33184   002862  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33185   002864  102E               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 33186   002866  E10B               	bnz	u7910
 33187   002868  0E6B               	movlw	107
 33188   00286A  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33189   00286C  0E18               	movlw	24
 33190   00286E  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33191   002870  A0D8               	btfss	status,0,c
 33192   002872  EF3D  F014         	goto	u7911
 33193   002876  EF3F  F014         	goto	u7910
 33194   00287A                     u7911:
 33195   00287A  EF77  F014         	goto	l10555
 33196   00287E                     u7910:
 33197   00287E                     
 33198                           ; BSR set to: 5
 33199   00287E  EC75  F039         	call	_tickGet	;wreg free
 33200   002882  0105               	movlb	5	; () banked
 33201   002884  5170               	movf	_pbTimer& (0+255),w,b
 33202   002886  5C01               	subwf	?_tickGet^(0+1280),w,c
 33203   002888  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33204   00288A  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33205   00288C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33206   00288E  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33207   002890  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33208   002892  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33209   002894  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33210   002896  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33211   002898  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33212   00289A  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33213   00289C  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33214   00289E  E10B               	bnz	u7921
 33215   0028A0  0E48               	movlw	72
 33216   0028A2  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33217   0028A4  0EE8               	movlw	232
 33218   0028A6  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33219   0028A8  0E01               	movlw	1
 33220   0028AA  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33221   0028AC  B0D8               	btfsc	status,0,c
 33222   0028AE  EF5B  F014         	goto	u7921
 33223   0028B2  EF5D  F014         	goto	u7920
 33224   0028B6                     u7921:
 33225   0028B6  EF77  F014         	goto	l10555
 33226   0028BA                     u7920:
 33227   0028BA                     
 33228                           ; BSR set to: 5
 33229                           ;../../VLCBlib_PIC/mns.c: 726:                     mode_state = setupModePreviousMode;
 33230   0028BA  C59E  F5A1         	movff	_setupModePreviousMode,_mode_state
 33231   0028BE                     
 33232                           ; BSR set to: 5
 33233                           ;../../VLCBlib_PIC/mns.c: 727:                     if (mode_state == MODE_NORMAL) {
 33234   0028BE  05A1               	decf	_mode_state& (0+255),w,b
 33235   0028C0  A4D8               	btfss	status,2,c
 33236   0028C2  EF65  F014         	goto	u7931
 33237   0028C6  EF67  F014         	goto	u7930
 33238   0028CA                     u7931:
 33239   0028CA  EF75  F014         	goto	l10553
 33240   0028CE                     u7930:
 33241   0028CE                     
 33242                           ; BSR set to: 5
 33243                           ;../../VLCBlib_PIC/mns.c: 729:                         nn.word = previousNN.word;
 33244   0028CE  C58D  F58F         	movff	_previousNN,_nn
 33245   0028D2  C58E  F590         	movff	_previousNN+1,_nn+1
 33246   0028D6                     
 33247                           ; BSR set to: 5
 33248                           ;../../VLCBlib_PIC/mns.c: 730:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 33249   0028D6  C590  F526         	movff	_nn+1,sendMessage2@data1
 33250   0028DA  C58F  F527         	movff	_nn,sendMessage2@data2
 33251   0028DE  0E52               	movlw	82
 33252   0028E0  ECE7  F03F         	call	_sendMessage2
 33253   0028E4                     
 33254                           ;../../VLCBlib_PIC/mns.c: 732:                         mnsDiagnostics[0x05].asUint++;
 33255   0028E4  0105               	movlb	5	; () banked
 33256   0028E6  4BB7               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 33257   0028E8  2BB8               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 33258   0028EA                     l10553:
 33259                           
 33260                           ; BSR set to: 5
 33261                           ;../../VLCBlib_PIC/mns.c: 735:                     setLEDsByMode();
 33262   0028EA  EC88  F03D         	call	_setLEDsByMode	;wreg free
 33263   0028EE                     l10555:
 33264                           
 33265                           ;../../VLCBlib_PIC/mns.c: 737:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 33266   0028EE  EC75  F039         	call	_tickGet	;wreg free
 33267   0028F2  0105               	movlb	5	; () banked
 33268   0028F4  5170               	movf	_pbTimer& (0+255),w,b
 33269   0028F6  5C01               	subwf	?_tickGet^(0+1280),w,c
 33270   0028F8  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33271   0028FA  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33272   0028FC  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33273   0028FE  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33274   002900  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33275   002902  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33276   002904  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33277   002906  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33278   002908  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33279   00290A  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33280   00290C  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33281   00290E  E10D               	bnz	u7940
 33282   002910  0E91               	movlw	145
 33283   002912  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33284   002914  0ED0               	movlw	208
 33285   002916  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33286   002918  0E03               	movlw	3
 33287   00291A  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33288   00291C  A0D8               	btfss	status,0,c
 33289   00291E  EF93  F014         	goto	u7941
 33290   002922  EF95  F014         	goto	u7940
 33291   002926                     u7941:
 33292   002926  EF98  F014         	goto	l1422
 33293   00292A                     u7940:
 33294   00292A                     
 33295                           ; BSR set to: 5
 33296                           ;../../VLCBlib_PIC/mns.c: 738:                     mode_state = MODE_UNINITIALISED;
 33297   00292A  69A1               	setf	_mode_state& (0+255),b
 33298   00292C                     l10559:
 33299                           
 33300                           ;../../VLCBlib_PIC/mns.c: 739:                     setLEDsByMode();
 33301   00292C  EC88  F03D         	call	_setLEDsByMode	;wreg free
 33302   002930                     l1422:
 33303                           
 33304                           ;../../VLCBlib_PIC/mns.c: 741:                 pbTimer.val = tickGet();
 33305   002930  EC75  F039         	call	_tickGet	;wreg free
 33306   002934  C501  F570         	movff	?_tickGet,_pbTimer
 33307   002938  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 33308   00293C  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 33309   002940  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 33310   002944                     
 33311                           ;../../VLCBlib_PIC/mns.c: 742:                 pbWasPushed = FALSE;
 33312   002944  0105               	movlb	5	; () banked
 33313   002946  6B9D               	clrf	_pbWasPushed& (0+255),b
 33314                           
 33315                           ;../../VLCBlib_PIC/mns.c: 743:             } else {
 33316   002948  EF4E  F015         	goto	l1429
 33317   00294C                     l10563:
 33318                           
 33319                           ; BSR set to: 5
 33320                           ;../../VLCBlib_PIC/mns.c: 744:                 pbWasPushed = TRUE;
 33321   00294C  0E01               	movlw	1
 33322   00294E  6F9D               	movwf	_pbWasPushed& (0+255),b
 33323   002950  EF4E  F015         	goto	l1429
 33324   002954                     l1424:
 33325                           
 33326                           ; BSR set to: 5
 33327                           ;../../VLCBlib_PIC/mns.c: 749:             if ((!(PORTAbits.RA2)) == 0) {
 33328   002954  A4CE               	btfss	206,2,c	;volatile
 33329   002956  EFAF  F014         	goto	u7951
 33330   00295A  EFB1  F014         	goto	u7950
 33331   00295E                     u7951:
 33332   00295E  EFA6  F014         	goto	l10563
 33333   002962                     u7950:
 33334   002962                     
 33335                           ; BSR set to: 5
 33336                           ;../../VLCBlib_PIC/mns.c: 751:                 if (pbWasPushed && ((tickGet() - pbTimer.
      +                          val) > (62500/10)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 33337   002962  519D               	movf	_pbWasPushed& (0+255),w,b
 33338   002964  B4D8               	btfsc	status,2,c
 33339   002966  EFB7  F014         	goto	u7961
 33340   00296A  EFB9  F014         	goto	u7960
 33341   00296E                     u7961:
 33342   00296E  EF06  F015         	goto	l10579
 33343   002972                     u7960:
 33344   002972                     
 33345                           ; BSR set to: 5
 33346   002972  EC75  F039         	call	_tickGet	;wreg free
 33347   002976  0105               	movlb	5	; () banked
 33348   002978  5170               	movf	_pbTimer& (0+255),w,b
 33349   00297A  5C01               	subwf	?_tickGet^(0+1280),w,c
 33350   00297C  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33351   00297E  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33352   002980  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33353   002982  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33354   002984  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33355   002986  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33356   002988  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33357   00298A  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33358   00298C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33359   00298E  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33360   002990  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33361   002992  102E               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 33362   002994  E10B               	bnz	u7970
 33363   002996  0E6B               	movlw	107
 33364   002998  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33365   00299A  0E18               	movlw	24
 33366   00299C  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33367   00299E  A0D8               	btfss	status,0,c
 33368   0029A0  EFD4  F014         	goto	u7971
 33369   0029A4  EFD6  F014         	goto	u7970
 33370   0029A8                     u7971:
 33371   0029A8  EF06  F015         	goto	l10579
 33372   0029AC                     u7970:
 33373   0029AC                     
 33374                           ; BSR set to: 5
 33375   0029AC  EC75  F039         	call	_tickGet	;wreg free
 33376   0029B0  0105               	movlb	5	; () banked
 33377   0029B2  5170               	movf	_pbTimer& (0+255),w,b
 33378   0029B4  5C01               	subwf	?_tickGet^(0+1280),w,c
 33379   0029B6  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33380   0029B8  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33381   0029BA  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33382   0029BC  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33383   0029BE  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33384   0029C0  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33385   0029C2  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33386   0029C4  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33387   0029C6  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33388   0029C8  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33389   0029CA  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33390   0029CC  E10B               	bnz	u7981
 33391   0029CE  0E48               	movlw	72
 33392   0029D0  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33393   0029D2  0EE8               	movlw	232
 33394   0029D4  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33395   0029D6  0E01               	movlw	1
 33396   0029D8  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33397   0029DA  B0D8               	btfsc	status,0,c
 33398   0029DC  EFF2  F014         	goto	u7981
 33399   0029E0  EFF4  F014         	goto	u7980
 33400   0029E4                     u7981:
 33401   0029E4  EF06  F015         	goto	l10579
 33402   0029E8                     u7980:
 33403   0029E8                     
 33404                           ; BSR set to: 5
 33405                           ;../../VLCBlib_PIC/mns.c: 753:                     previousNN.word = nn.word;
 33406   0029E8  C58F  F58D         	movff	_nn,_previousNN
 33407   0029EC  C590  F58E         	movff	_nn+1,_previousNN+1
 33408                           
 33409                           ;../../VLCBlib_PIC/mns.c: 754:                     nn.bytes.lo = nn.bytes.hi = 0;
 33410   0029F0  6B90               	clrf	(_nn+1)& (0+255),b
 33411   0029F2  6B8F               	clrf	_nn& (0+255),b
 33412                           
 33413                           ;../../VLCBlib_PIC/mns.c: 756:                     mode_state = MODE_SETUP;
 33414   0029F4  6BA1               	clrf	_mode_state& (0+255),b
 33415   0029F6                     
 33416                           ; BSR set to: 5
 33417                           ;../../VLCBlib_PIC/mns.c: 757:                     setupModePreviousMode = MODE_NORMAL;
 33418   0029F6  0E01               	movlw	1
 33419   0029F8  6F9E               	movwf	_setupModePreviousMode& (0+255),b
 33420   0029FA                     
 33421                           ; BSR set to: 5
 33422                           ;../../VLCBlib_PIC/mns.c: 759:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 33423   0029FA  C58E  F526         	movff	_previousNN+1,sendMessage2@data1
 33424   0029FE  C58D  F527         	movff	_previousNN,sendMessage2@data2
 33425   002A02  0E50               	movlw	80
 33426   002A04  ECE7  F03F         	call	_sendMessage2
 33427   002A08                     
 33428                           ;../../VLCBlib_PIC/mns.c: 760:                     setLEDsByMode();
 33429   002A08  EC88  F03D         	call	_setLEDsByMode	;wreg free
 33430   002A0C                     l10579:
 33431                           
 33432                           ;../../VLCBlib_PIC/mns.c: 762:                 if (pbWasPushed &&((tickGet() - pbTimer.v
      +                          al) >= 4*62500)) {
 33433   002A0C  0105               	movlb	5	; () banked
 33434   002A0E  519D               	movf	_pbWasPushed& (0+255),w,b
 33435   002A10  B4D8               	btfsc	status,2,c
 33436   002A12  EF0D  F015         	goto	u7991
 33437   002A16  EF0F  F015         	goto	u7990
 33438   002A1A                     u7991:
 33439   002A1A  EF98  F014         	goto	l1422
 33440   002A1E                     u7990:
 33441   002A1E                     
 33442                           ; BSR set to: 5
 33443   002A1E  EC75  F039         	call	_tickGet	;wreg free
 33444   002A22  0105               	movlb	5	; () banked
 33445   002A24  5170               	movf	_pbTimer& (0+255),w,b
 33446   002A26  5C01               	subwf	?_tickGet^(0+1280),w,c
 33447   002A28  6E2C               	movwf	??_mnsPoll^(0+1280),c
 33448   002A2A  5171               	movf	(_pbTimer+1)& (0+255),w,b
 33449   002A2C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 33450   002A2E  6E2D               	movwf	(??_mnsPoll+1)^(0+1280),c
 33451   002A30  5172               	movf	(_pbTimer+2)& (0+255),w,b
 33452   002A32  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 33453   002A34  6E2E               	movwf	(??_mnsPoll+2)^(0+1280),c
 33454   002A36  5173               	movf	(_pbTimer+3)& (0+255),w,b
 33455   002A38  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 33456   002A3A  6E2F               	movwf	(??_mnsPoll+3)^(0+1280),c
 33457   002A3C  502F               	movf	(??_mnsPoll+3)^(0+1280),w,c
 33458   002A3E  E10D               	bnz	u8000
 33459   002A40  0E90               	movlw	144
 33460   002A42  5C2C               	subwf	??_mnsPoll^(0+1280),w,c
 33461   002A44  0ED0               	movlw	208
 33462   002A46  582D               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 33463   002A48  0E03               	movlw	3
 33464   002A4A  582E               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 33465   002A4C  A0D8               	btfss	status,0,c
 33466   002A4E  EF2B  F015         	goto	u8001
 33467   002A52  EF2D  F015         	goto	u8000
 33468   002A56                     u8001:
 33469   002A56  EF98  F014         	goto	l1422
 33470   002A5A                     u8000:
 33471   002A5A                     
 33472                           ; BSR set to: 5
 33473                           ;../../VLCBlib_PIC/mns.c: 764:                     previousNN.word = nn.word;
 33474   002A5A  C58F  F58D         	movff	_nn,_previousNN
 33475   002A5E  C590  F58E         	movff	_nn+1,_previousNN+1
 33476                           
 33477                           ;../../VLCBlib_PIC/mns.c: 765:                     nn.bytes.lo = nn.bytes.hi = 0;
 33478   002A62  6B90               	clrf	(_nn+1)& (0+255),b
 33479   002A64  6B8F               	clrf	_nn& (0+255),b
 33480                           
 33481                           ;../../VLCBlib_PIC/mns.c: 767:                     mode_state = MODE_UNINITIALISED;
 33482   002A66  69A1               	setf	_mode_state& (0+255),b
 33483   002A68                     
 33484                           ; BSR set to: 5
 33485                           ;../../VLCBlib_PIC/mns.c: 768:                     setupModePreviousMode = MODE_NORMAL;
 33486   002A68  0E01               	movlw	1
 33487   002A6A  6F9E               	movwf	_setupModePreviousMode& (0+255),b
 33488   002A6C                     
 33489                           ; BSR set to: 5
 33490                           ;../../VLCBlib_PIC/mns.c: 770:                     sendMessage2(OPC_NNREL, previousNN.by
      +                          tes.hi, previousNN.bytes.lo);
 33491   002A6C  C58E  F526         	movff	_previousNN+1,sendMessage2@data1
 33492   002A70  C58D  F527         	movff	_previousNN,sendMessage2@data2
 33493   002A74  0E51               	movlw	81
 33494   002A76  ECE7  F03F         	call	_sendMessage2
 33495   002A7A  EF96  F014         	goto	l10559
 33496   002A7E                     l10597:
 33497                           
 33498                           ; BSR set to: 5
 33499   002A7E  51A1               	movf	_mode_state& (0+255),w,b
 33500                           
 33501                           ; Switch size 1, requested type "simple"
 33502                           ; Number of cases is 3, Range of values is 0 to 255
 33503                           ; switch strategies available:
 33504                           ; Name         Instructions Cycles
 33505                           ; simple_byte           10     6 (average)
 33506                           ;	Chosen strategy is simple_byte
 33507   002A80  0A00               	xorlw	0	; case 0
 33508   002A82  B4D8               	btfsc	status,2,c
 33509   002A84  EF1B  F014         	goto	l1418
 33510   002A88  0AFD               	xorlw	253	; case 253
 33511   002A8A  B4D8               	btfsc	status,2,c
 33512   002A8C  EFFD  F013         	goto	l1416
 33513   002A90  0A02               	xorlw	2	; case 255
 33514   002A92  B4D8               	btfsc	status,2,c
 33515   002A94  EFC5  F013         	goto	l1411
 33516   002A98  EFAA  F014         	goto	l1424
 33517   002A9C                     l1429:
 33518   002A9C  0012               	return		;funcret
 33519   002A9E                     __end_of_mnsPoll:
 33520                           	callstack 0
 33521                           
 33522 ;; *************** function _setLEDsByMode *****************
 33523 ;; Defined at:
 33524 ;;		line 818 in file "../../VLCBlib_PIC/mns.c"
 33525 ;; Parameters:    Size  Location     Type
 33526 ;;		None
 33527 ;; Auto vars:     Size  Location     Type
 33528 ;;		None
 33529 ;; Return value:  Size  Location     Type
 33530 ;;                  1    wreg      void 
 33531 ;; Registers used:
 33532 ;;		wreg, status,2, status,0, cstack
 33533 ;; Tracked objects:
 33534 ;;		On entry : 0/0
 33535 ;;		On exit  : 0/0
 33536 ;;		Unchanged: 0/0
 33537 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33542 ;;Total ram usage:        0 bytes
 33543 ;; Hardware stack levels used: 1
 33544 ;; Hardware stack levels required when called: 2
 33545 ;; This function calls:
 33546 ;;		_showStatus
 33547 ;; This function is called by:
 33548 ;;		_mnsPowerUp
 33549 ;;		_mnsProcessMessage
 33550 ;;		_mnsPoll
 33551 ;; This function uses a non-reentrant model
 33552 ;;
 33553                           
 33554                           	psect	text71
 33555   007B10                     __ptext71:
 33556                           	callstack 0
 33557   007B10                     _setLEDsByMode:
 33558                           	callstack 122
 33559   007B10                     
 33560                           ;../../VLCBlib_PIC/mns.c: 819:        switch (mode_state) {
 33561   007B10  EF99  F03D         	goto	l8929
 33562   007B14                     l8921:
 33563                           
 33564                           ; BSR set to: 5
 33565                           ;../../VLCBlib_PIC/mns.c: 821:             showStatus(STATUS_UNINITIALISED);
 33566   007B14  0E01               	movlw	1
 33567   007B16  ECB1  F027         	call	_showStatus
 33568                           
 33569                           ;../../VLCBlib_PIC/mns.c: 822:             break;
 33570   007B1A  EFA9  F03D         	goto	l1442
 33571   007B1E                     l8923:
 33572                           
 33573                           ; BSR set to: 5
 33574                           ;../../VLCBlib_PIC/mns.c: 825:             showStatus(STATUS_SETUP);
 33575   007B1E  0E02               	movlw	2
 33576   007B20  ECB1  F027         	call	_showStatus
 33577                           
 33578                           ;../../VLCBlib_PIC/mns.c: 826:             break;
 33579   007B24  EFA9  F03D         	goto	l1442
 33580   007B28                     l8925:
 33581                           
 33582                           ; BSR set to: 5
 33583                           ;../../VLCBlib_PIC/mns.c: 828:             showStatus(STATUS_NORMAL);
 33584   007B28  0E03               	movlw	3
 33585   007B2A  ECB1  F027         	call	_showStatus
 33586                           
 33587                           ;../../VLCBlib_PIC/mns.c: 829:             break;
 33588   007B2E  EFA9  F03D         	goto	l1442
 33589   007B32                     l8929:
 33590   007B32  0105               	movlb	5	; () banked
 33591   007B34  51A1               	movf	_mode_state& (0+255),w,b
 33592                           
 33593                           ; Switch size 1, requested type "simple"
 33594                           ; Number of cases is 3, Range of values is 0 to 255
 33595                           ; switch strategies available:
 33596                           ; Name         Instructions Cycles
 33597                           ; simple_byte           10     6 (average)
 33598                           ;	Chosen strategy is simple_byte
 33599   007B36  0A00               	xorlw	0	; case 0
 33600   007B38  B4D8               	btfsc	status,2,c
 33601   007B3A  EF8F  F03D         	goto	l8923
 33602   007B3E  0AFD               	xorlw	253	; case 253
 33603   007B40  B4D8               	btfsc	status,2,c
 33604   007B42  EF8F  F03D         	goto	l8923
 33605   007B46  0A02               	xorlw	2	; case 255
 33606   007B48  B4D8               	btfsc	status,2,c
 33607   007B4A  EF8A  F03D         	goto	l8921
 33608   007B4E  EF94  F03D         	goto	l8925
 33609   007B52                     l1442:
 33610   007B52  0012               	return		;funcret
 33611   007B54                     __end_of_setLEDsByMode:
 33612                           	callstack 0
 33613                           
 33614 ;; *************** function _sendMessage2 *****************
 33615 ;; Defined at:
 33616 ;;		line 1157 in file "../../VLCBlib_PIC/vlcb.c"
 33617 ;; Parameters:    Size  Location     Type
 33618 ;;  opc             1    wreg     enum E22928
 33619 ;;  data1           1   37[COMRAM] unsigned char 
 33620 ;;  data2           1   38[COMRAM] unsigned char 
 33621 ;; Auto vars:     Size  Location     Type
 33622 ;;  opc             1   39[COMRAM] enum E22928
 33623 ;; Return value:  Size  Location     Type
 33624 ;;                  1    wreg      void 
 33625 ;; Registers used:
 33626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33627 ;; Tracked objects:
 33628 ;;		On entry : 0/0
 33629 ;;		On exit  : 0/0
 33630 ;;		Unchanged: 0/0
 33631 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33635 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33636 ;;Total ram usage:        3 bytes
 33637 ;; Hardware stack levels used: 1
 33638 ;; Hardware stack levels required when called: 5
 33639 ;; This function calls:
 33640 ;;		_sendMessage
 33641 ;; This function is called by:
 33642 ;;		_doNnclr
 33643 ;;		_doEvlrn
 33644 ;;		_doEvuln
 33645 ;;		_mnsProcessMessage
 33646 ;;		_mnsPoll
 33647 ;;		_nvProcessMessage
 33648 ;; This function uses a non-reentrant model
 33649 ;;
 33650                           
 33651                           	psect	text72
 33652   007FCE                     __ptext72:
 33653                           	callstack 0
 33654   007FCE                     _sendMessage2:
 33655                           	callstack 118
 33656                           
 33657                           ;incstack = 0
 33658                           ;sendMessage2@opc stored from wreg
 33659   007FCE  6E28               	movwf	sendMessage2@opc^(0+1280),c
 33660   007FD0                     
 33661                           ;../../VLCBlib_PIC/vlcb.c: 1158:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 33662   007FD0  0E03               	movlw	3
 33663   007FD2  6E1B               	movwf	sendMessage@len^(0+1280),c
 33664   007FD4  C526  F51C         	movff	sendMessage2@data1,sendMessage@data1
 33665   007FD8  C527  F51D         	movff	sendMessage2@data2,sendMessage@data2
 33666   007FDC  0E00               	movlw	0
 33667   007FDE  6E1E               	movwf	sendMessage@data3^(0+1280),c
 33668   007FE0  0E00               	movlw	0
 33669   007FE2  6E1F               	movwf	sendMessage@data4^(0+1280),c
 33670   007FE4  0E00               	movlw	0
 33671   007FE6  6E20               	movwf	sendMessage@data5^(0+1280),c
 33672   007FE8  0E00               	movlw	0
 33673   007FEA  6E21               	movwf	sendMessage@data6^(0+1280),c
 33674   007FEC  0E00               	movlw	0
 33675   007FEE  6E22               	movwf	sendMessage@data7^(0+1280),c
 33676   007FF0  5028               	movf	sendMessage2@opc^(0+1280),w,c
 33677   007FF2  ECDF  F035         	call	_sendMessage
 33678   007FF6  0012               	return		;funcret
 33679   007FF8                     __end_of_sendMessage2:
 33680                           	callstack 0
 33681                           
 33682 ;; *************** function _sendMessage7 *****************
 33683 ;; Defined at:
 33684 ;;		line 1222 in file "../../VLCBlib_PIC/vlcb.c"
 33685 ;; Parameters:    Size  Location     Type
 33686 ;;  opc             1    wreg     enum E22928
 33687 ;;  data1           1   37[COMRAM] unsigned char 
 33688 ;;  data2           1   38[COMRAM] unsigned char 
 33689 ;;  data3           1   39[COMRAM] unsigned char 
 33690 ;;  data4           1   40[COMRAM] unsigned char 
 33691 ;;  data5           1   41[COMRAM] unsigned char 
 33692 ;;  data6           1   42[COMRAM] unsigned char 
 33693 ;;  data7           1   43[COMRAM] unsigned char 
 33694 ;; Auto vars:     Size  Location     Type
 33695 ;;  opc             1   44[COMRAM] enum E22928
 33696 ;; Return value:  Size  Location     Type
 33697 ;;                  1    wreg      void 
 33698 ;; Registers used:
 33699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33700 ;; Tracked objects:
 33701 ;;		On entry : 0/0
 33702 ;;		On exit  : 0/0
 33703 ;;		Unchanged: 0/0
 33704 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33705 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33708 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33709 ;;Total ram usage:        8 bytes
 33710 ;; Hardware stack levels used: 1
 33711 ;; Hardware stack levels required when called: 5
 33712 ;; This function calls:
 33713 ;;		_sendMessage
 33714 ;; This function is called by:
 33715 ;;		_consumerProcessMessage
 33716 ;;		_nerdCallback
 33717 ;;		_mnsProcessMessage
 33718 ;; This function uses a non-reentrant model
 33719 ;;
 33720                           
 33721                           	psect	text73
 33722   007FF8                     __ptext73:
 33723                           	callstack 0
 33724   007FF8                     _sendMessage7:
 33725                           	callstack 118
 33726                           
 33727                           ;incstack = 0
 33728                           ;sendMessage7@opc stored from wreg
 33729   007FF8  6E2D               	movwf	sendMessage7@opc^(0+1280),c
 33730   007FFA                     
 33731                           ;../../VLCBlib_PIC/vlcb.c: 1223:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 33732   007FFA  0E08               	movlw	8
 33733   007FFC  6E1B               	movwf	sendMessage@len^(0+1280),c
 33734   007FFE  C526  F51C         	movff	sendMessage7@data1,sendMessage@data1
 33735   008002  C527  F51D         	movff	sendMessage7@data2,sendMessage@data2
 33736   008006  C528  F51E         	movff	sendMessage7@data3,sendMessage@data3
 33737   00800A  C529  F51F         	movff	sendMessage7@data4,sendMessage@data4
 33738   00800E  C52A  F520         	movff	sendMessage7@data5,sendMessage@data5
 33739   008012  C52B  F521         	movff	sendMessage7@data6,sendMessage@data6
 33740   008016  C52C  F522         	movff	sendMessage7@data7,sendMessage@data7
 33741   00801A  502D               	movf	sendMessage7@opc^(0+1280),w,c
 33742   00801C  ECDF  F035         	call	_sendMessage
 33743   008020  0012               	return		;funcret
 33744   008022                     __end_of_sendMessage7:
 33745                           	callstack 0
 33746                           
 33747 ;; *************** function _isConsumedEvent *****************
 33748 ;; Defined at:
 33749 ;;		line 208 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 33750 ;; Parameters:    Size  Location     Type
 33751 ;;  eventIndex      1    wreg     unsigned char 
 33752 ;; Auto vars:     Size  Location     Type
 33753 ;;  eventIndex      1    0[COMRAM] unsigned char 
 33754 ;; Return value:  Size  Location     Type
 33755 ;;                  1    wreg      unsigned char 
 33756 ;; Registers used:
 33757 ;;		wreg, status,2, cstack
 33758 ;; Tracked objects:
 33759 ;;		On entry : 0/0
 33760 ;;		On exit  : 0/0
 33761 ;;		Unchanged: 0/0
 33762 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33767 ;;Total ram usage:        1 bytes
 33768 ;; Hardware stack levels used: 1
 33769 ;; Hardware stack levels required when called: 2
 33770 ;; This function calls:
 33771 ;;		_APP_isConsumedEvent
 33772 ;; This function is called by:
 33773 ;;		_consumerProcessMessage
 33774 ;; This function uses a non-reentrant model
 33775 ;;
 33776                           
 33777                           	psect	text74
 33778   00820A                     __ptext74:
 33779                           	callstack 0
 33780   00820A                     _isConsumedEvent:
 33781                           	callstack 122
 33782                           
 33783                           ;incstack = 0
 33784                           ;isConsumedEvent@eventIndex stored from wreg
 33785   00820A  6E01               	movwf	isConsumedEvent@eventIndex^(0+1280),c
 33786   00820C                     
 33787                           ;../../VLCBlib_PIC/event_consumer_simple.c: 209:     return APP_isConsumedEvent(eventInd
      +                          ex);
 33788   00820C  5001               	movf	isConsumedEvent@eventIndex^(0+1280),w,c
 33789   00820E  EC2B  F041         	call	_APP_isConsumedEvent
 33790   008212  0012               	return		;funcret
 33791   008214                     __end_of_isConsumedEvent:
 33792                           	callstack 0
 33793                           
 33794 ;; *************** function _APP_isConsumedEvent *****************
 33795 ;; Defined at:
 33796 ;;		line 64 in file "../canargb_events.c"
 33797 ;; Parameters:    Size  Location     Type
 33798 ;;  tableIndex      1    wreg     unsigned char 
 33799 ;; Auto vars:     Size  Location     Type
 33800 ;;  tableIndex      1    0[COMRAM] unsigned char 
 33801 ;; Return value:  Size  Location     Type
 33802 ;;                  1    wreg      unsigned char 
 33803 ;; Registers used:
 33804 ;;		wreg
 33805 ;; Tracked objects:
 33806 ;;		On entry : 0/0
 33807 ;;		On exit  : 0/0
 33808 ;;		Unchanged: 0/0
 33809 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33814 ;;Total ram usage:        0 bytes
 33815 ;; Hardware stack levels used: 1
 33816 ;; Hardware stack levels required when called: 1
 33817 ;; This function calls:
 33818 ;;		Nothing
 33819 ;; This function is called by:
 33820 ;;		_isConsumedEvent
 33821 ;; This function uses a non-reentrant model
 33822 ;;
 33823                           
 33824                           	psect	text75
 33825   008256                     __ptext75:
 33826                           	callstack 0
 33827   008256                     _APP_isConsumedEvent:
 33828                           	callstack 122
 33829   008256                     
 33830                           ;../canargb_events.c: 65:     return TRUE;
 33831   008256  0E01               	movlw	1
 33832   008258  0012               	return		;funcret
 33833   00825A                     __end_of_APP_isConsumedEvent:
 33834                           	callstack 0
 33835                           
 33836 ;; *************** function _findEvent *****************
 33837 ;; Defined at:
 33838 ;;		line 808 in file "../../VLCBlib_PIC/event_teach_simple.c"
 33839 ;; Parameters:    Size  Location     Type
 33840 ;;  nodeNumber      2   33[COMRAM] unsigned short 
 33841 ;;  eventNumber     2   35[COMRAM] unsigned short 
 33842 ;; Auto vars:     Size  Location     Type
 33843 ;;  en              2   41[COMRAM] unsigned short 
 33844 ;;  nn              2   39[COMRAM] unsigned short 
 33845 ;;  tableIndex      1   45[COMRAM] unsigned char 
 33846 ;;  chainIdx        1   44[COMRAM] unsigned char 
 33847 ;;  hash            1   43[COMRAM] unsigned char 
 33848 ;; Return value:  Size  Location     Type
 33849 ;;                  1    wreg      unsigned char 
 33850 ;; Registers used:
 33851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33852 ;; Tracked objects:
 33853 ;;		On entry : 0/0
 33854 ;;		On exit  : 0/0
 33855 ;;		Unchanged: 0/0
 33856 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33857 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33858 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33859 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33860 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33861 ;;Total ram usage:       13 bytes
 33862 ;; Hardware stack levels used: 1
 33863 ;; Hardware stack levels required when called: 4
 33864 ;; This function calls:
 33865 ;;		_getEN
 33866 ;;		_getHash
 33867 ;;		_getNN
 33868 ;; This function is called by:
 33869 ;;		_consumerProcessMessage
 33870 ;;		_doReqev
 33871 ;;		_removeEvent
 33872 ;;		_addEvent
 33873 ;; This function uses a non-reentrant model
 33874 ;;
 33875                           
 33876                           	psect	text76
 33877   0062E0                     __ptext76:
 33878                           	callstack 0
 33879   0062E0                     _findEvent:
 33880                           	callstack 119
 33881   0062E0                     
 33882                           ;../../VLCBlib_PIC/event_teach_simple.c: 810:     uint8_t hash = getHash(nodeNumber, eve
      +                          ntNumber);
 33883   0062E0  C522  F51C         	movff	findEvent@nodeNumber,getHash@nn
 33884   0062E4  C523  F51D         	movff	findEvent@nodeNumber+1,getHash@nn+1
 33885   0062E8  C524  F51E         	movff	findEvent@eventNumber,getHash@en
 33886   0062EC  C525  F51F         	movff	findEvent@eventNumber+1,getHash@en+1
 33887   0062F0  EC91  F040         	call	_getHash	;wreg free
 33888   0062F4  6E2C               	movwf	findEvent@hash^(0+1280),c
 33889   0062F6                     
 33890                           ;../../VLCBlib_PIC/event_teach_simple.c: 811:     uint8_t chainIdx;;../../VLCBlib_PIC/ev
      +                          ent_teach_simple.c: 812:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 33891   0062F6  6A2D               	clrf	findEvent@chainIdx^(0+1280),c
 33892   0062F8                     l7645:
 33893                           
 33894                           ;../../VLCBlib_PIC/event_teach_simple.c: 813:         uint8_t tableIndex = eventChains[h
      +                          ash][chainIdx];
 33895   0062F8  502C               	movf	findEvent@hash^(0+1280),w,c
 33896   0062FA  0D14               	mullw	20
 33897   0062FC  0EFC               	movlw	low _eventChains
 33898   0062FE  24F3               	addwf	243,w,c
 33899   006300  6E26               	movwf	??_findEvent^(0+1280),c
 33900   006302  0E08               	movlw	high _eventChains
 33901   006304  20F4               	addwfc	prodh,w,c
 33902   006306  6E27               	movwf	(??_findEvent+1)^(0+1280),c
 33903   006308  502D               	movf	findEvent@chainIdx^(0+1280),w,c
 33904   00630A  2426               	addwf	??_findEvent^(0+1280),w,c
 33905   00630C  6ED9               	movwf	fsr2l,c
 33906   00630E  0E00               	movlw	0
 33907   006310  2027               	addwfc	(??_findEvent+1)^(0+1280),w,c
 33908   006312  6EDA               	movwf	fsr2h,c
 33909   006314  50DF               	movf	indf2,w,c
 33910   006316  6E2E               	movwf	findEvent@tableIndex^(0+1280),c
 33911   006318                     
 33912                           ;../../VLCBlib_PIC/event_teach_simple.c: 814:         uint16_t nn, en;;../../VLCBlib_PIC
      +                          /event_teach_simple.c: 815:         if (tableIndex == 0xff) return 0xff;
 33913   006318  282E               	incf	findEvent@tableIndex^(0+1280),w,c
 33914   00631A  A4D8               	btfss	status,2,c
 33915   00631C  EF92  F031         	goto	u5011
 33916   006320  EF94  F031         	goto	u5010
 33917   006324                     u5011:
 33918   006324  EF97  F031         	goto	l7653
 33919   006328                     u5010:
 33920   006328                     l7649:
 33921   006328  0EFF               	movlw	255
 33922   00632A  EFCB  F031         	goto	l1127
 33923   00632E                     l7653:
 33924                           
 33925                           ;../../VLCBlib_PIC/event_teach_simple.c: 816:         nn = getNN(tableIndex);
 33926   00632E  502E               	movf	findEvent@tableIndex^(0+1280),w,c
 33927   006330  ECF0  F028         	call	_getNN
 33928   006334  C50D  F528         	movff	?_getNN,findEvent@nn
 33929   006338  C50E  F529         	movff	?_getNN+1,findEvent@nn+1
 33930                           
 33931                           ;../../VLCBlib_PIC/event_teach_simple.c: 817:         en = getEN(tableIndex);
 33932   00633C  502E               	movf	findEvent@tableIndex^(0+1280),w,c
 33933   00633E  EC1E  F033         	call	_getEN
 33934   006342  C50D  F52A         	movff	?_getEN,findEvent@en
 33935   006346  C50E  F52B         	movff	?_getEN+1,findEvent@en+1
 33936   00634A                     
 33937                           ;../../VLCBlib_PIC/event_teach_simple.c: 818:         if ((nn == nodeNumber) && (en == e
      +                          ventNumber)) {
 33938   00634A  5022               	movf	findEvent@nodeNumber^(0+1280),w,c
 33939   00634C  1828               	xorwf	findEvent@nn^(0+1280),w,c
 33940   00634E  E107               	bnz	u5021
 33941   006350  5023               	movf	(findEvent@nodeNumber+1)^(0+1280),w,c
 33942   006352  1829               	xorwf	(findEvent@nn+1)^(0+1280),w,c
 33943   006354  A4D8               	btfss	status,2,c
 33944   006356  EFAF  F031         	goto	u5021
 33945   00635A  EFB1  F031         	goto	u5020
 33946   00635E                     u5021:
 33947   00635E  EFC0  F031         	goto	l7663
 33948   006362                     u5020:
 33949   006362  5024               	movf	findEvent@eventNumber^(0+1280),w,c
 33950   006364  182A               	xorwf	findEvent@en^(0+1280),w,c
 33951   006366  E107               	bnz	u5031
 33952   006368  5025               	movf	(findEvent@eventNumber+1)^(0+1280),w,c
 33953   00636A  182B               	xorwf	(findEvent@en+1)^(0+1280),w,c
 33954   00636C  A4D8               	btfss	status,2,c
 33955   00636E  EFBB  F031         	goto	u5031
 33956   006372  EFBD  F031         	goto	u5030
 33957   006376                     u5031:
 33958   006376  EFC0  F031         	goto	l7663
 33959   00637A                     u5030:
 33960   00637A                     
 33961                           ;../../VLCBlib_PIC/event_teach_simple.c: 819:             return tableIndex;
 33962   00637A  502E               	movf	findEvent@tableIndex^(0+1280),w,c
 33963   00637C  EFCB  F031         	goto	l1127
 33964   006380                     l7663:
 33965                           
 33966                           ;../../VLCBlib_PIC/event_teach_simple.c: 821:     }
 33967   006380  2A2D               	incf	findEvent@chainIdx^(0+1280),f,c
 33968   006382  0E13               	movlw	19
 33969   006384  642D               	cpfsgt	findEvent@chainIdx^(0+1280),c
 33970   006386  EFC7  F031         	goto	u5041
 33971   00638A  EFC9  F031         	goto	u5040
 33972   00638E                     u5041:
 33973   00638E  EF7C  F031         	goto	l7645
 33974   006392                     u5040:
 33975   006392  EF94  F031         	goto	l7649
 33976   006396                     l1127:
 33977   006396  0012               	return		;funcret
 33978   006398                     __end_of_findEvent:
 33979                           	callstack 0
 33980                           
 33981 ;; *************** function _consumerEventCheckLen *****************
 33982 ;; Defined at:
 33983 ;;		line 248 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 33984 ;; Parameters:    Size  Location     Type
 33985 ;;  m               2   48[COMRAM] PTR struct Message
 33986 ;;		 -> poll@m(9), 
 33987 ;;  needed          1   50[COMRAM] unsigned char 
 33988 ;; Auto vars:     Size  Location     Type
 33989 ;;		None
 33990 ;; Return value:  Size  Location     Type
 33991 ;;                  1    wreg      enum E23340
 33992 ;; Registers used:
 33993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33994 ;; Tracked objects:
 33995 ;;		On entry : 0/0
 33996 ;;		On exit  : 0/0
 33997 ;;		Unchanged: 0/0
 33998 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33999 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34002 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34003 ;;Total ram usage:        3 bytes
 34004 ;; Hardware stack levels used: 1
 34005 ;; Hardware stack levels required when called: 7
 34006 ;; This function calls:
 34007 ;;		_checkLen
 34008 ;; This function is called by:
 34009 ;;		_consumerProcessMessage
 34010 ;; This function uses a non-reentrant model
 34011 ;;
 34012                           
 34013                           	psect	text77
 34014   0081C2                     __ptext77:
 34015                           	callstack 0
 34016   0081C2                     _consumerEventCheckLen:
 34017                           	callstack 117
 34018   0081C2                     
 34019                           ;../../VLCBlib_PIC/event_consumer_simple.c: 249:     return checkLen(m, needed, SERVICE_
      +                          ID_CONSUMER);
 34020   0081C2  C531  F52C         	movff	consumerEventCheckLen@m,checkLen@m
 34021   0081C6  C532  F52D         	movff	consumerEventCheckLen@m+1,checkLen@m+1
 34022   0081CA  C533  F52E         	movff	consumerEventCheckLen@needed,checkLen@needed
 34023   0081CE  0E06               	movlw	6
 34024   0081D0  6E2F               	movwf	checkLen@service^(0+1280),c
 34025   0081D2  ECC3  F033         	call	_checkLen	;wreg free
 34026   0081D6  0012               	return		;funcret
 34027   0081D8                     __end_of_consumerEventCheckLen:
 34028                           	callstack 0
 34029                           
 34030 ;; *************** function _checkLen *****************
 34031 ;; Defined at:
 34032 ;;		line 1108 in file "../../VLCBlib_PIC/vlcb.c"
 34033 ;; Parameters:    Size  Location     Type
 34034 ;;  m               2   43[COMRAM] PTR struct Message
 34035 ;;		 -> poll@m(9), 
 34036 ;;  needed          1   45[COMRAM] unsigned char 
 34037 ;;  service         1   46[COMRAM] unsigned char 
 34038 ;; Auto vars:     Size  Location     Type
 34039 ;;		None
 34040 ;; Return value:  Size  Location     Type
 34041 ;;                  1    wreg      enum E23340
 34042 ;; Registers used:
 34043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 34044 ;; Tracked objects:
 34045 ;;		On entry : 0/0
 34046 ;;		On exit  : 0/0
 34047 ;;		Unchanged: 0/0
 34048 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34049 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34052 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34053 ;;Total ram usage:        5 bytes
 34054 ;; Hardware stack levels used: 1
 34055 ;; Hardware stack levels required when called: 6
 34056 ;; This function calls:
 34057 ;;		_sendMessage5
 34058 ;; This function is called by:
 34059 ;;		_consumerEventCheckLen
 34060 ;;		_teachCheckLen
 34061 ;; This function uses a non-reentrant model
 34062 ;;
 34063                           
 34064                           	psect	text78
 34065   006786                     __ptext78:
 34066                           	callstack 0
 34067   006786                     _checkLen:
 34068                           	callstack 117
 34069   006786                     
 34070                           ;../../VLCBlib_PIC/vlcb.c: 1109:     if (m->len < needed) {
 34071   006786  C52C  F4D9         	movff	checkLen@m,fsr2l
 34072   00678A  C52D  F4DA         	movff	checkLen@m+1,fsr2h
 34073   00678E  502E               	movf	checkLen@needed^(0+1280),w,c
 34074   006790  5CDE               	subwf	postinc2,w,c
 34075   006792  B0D8               	btfsc	status,0,c
 34076   006794  EFCE  F033         	goto	u5501
 34077   006798  EFD0  F033         	goto	u5500
 34078   00679C                     u5501:
 34079   00679C  EF11  F034         	goto	l8093
 34080   0067A0                     u5500:
 34081   0067A0                     
 34082                           ;../../VLCBlib_PIC/vlcb.c: 1111:         if (m->len > 2) {
 34083   0067A0  C52C  F4D9         	movff	checkLen@m,fsr2l
 34084   0067A4  C52D  F4DA         	movff	checkLen@m+1,fsr2h
 34085   0067A8  0E02               	movlw	2
 34086   0067AA  64DF               	cpfsgt	indf2,c
 34087   0067AC  EFDA  F033         	goto	u5511
 34088   0067B0  EFDC  F033         	goto	u5510
 34089   0067B4                     u5511:
 34090   0067B4  EF0E  F034         	goto	l8089
 34091   0067B8                     u5510:
 34092   0067B8                     
 34093                           ;../../VLCBlib_PIC/vlcb.c: 1112:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 34094   0067B8  EE20 F002          	lfsr	2,2
 34095   0067BC  502C               	movf	checkLen@m^(0+1280),w,c
 34096   0067BE  26D9               	addwf	fsr2l,f,c
 34097   0067C0  502D               	movf	(checkLen@m+1)^(0+1280),w,c
 34098   0067C2  22DA               	addwfc	fsr2h,f,c
 34099   0067C4  50DE               	movf	postinc2,w,c
 34100   0067C6  0105               	movlb	5	; () banked
 34101   0067C8  1990               	xorwf	(_nn+1)& (0+255),w,b
 34102   0067CA  A4D8               	btfss	status,2,c
 34103   0067CC  EFEA  F033         	goto	u5521
 34104   0067D0  EFEC  F033         	goto	u5520
 34105   0067D4                     u5521:
 34106   0067D4  EF0E  F034         	goto	l8089
 34107   0067D8                     u5520:
 34108   0067D8                     
 34109                           ; BSR set to: 5
 34110   0067D8  EE20 F003          	lfsr	2,3
 34111   0067DC  502C               	movf	checkLen@m^(0+1280),w,c
 34112   0067DE  26D9               	addwf	fsr2l,f,c
 34113   0067E0  502D               	movf	(checkLen@m+1)^(0+1280),w,c
 34114   0067E2  22DA               	addwfc	fsr2h,f,c
 34115   0067E4  518F               	movf	_nn& (0+255),w,b
 34116   0067E6  18DE               	xorwf	postinc2,w,c
 34117   0067E8  A4D8               	btfss	status,2,c
 34118   0067EA  EFF9  F033         	goto	u5531
 34119   0067EE  EFFB  F033         	goto	u5530
 34120   0067F2                     u5531:
 34121   0067F2  EF0E  F034         	goto	l8089
 34122   0067F6                     u5530:
 34123   0067F6                     
 34124                           ; BSR set to: 5
 34125                           ;../../VLCBlib_PIC/vlcb.c: 1113:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, (uint8_t)(m->opc), service, CMDERR_INV_CMD);
 34126   0067F6  C590  F526         	movff	_nn+1,sendMessage5@data1
 34127   0067FA  C58F  F527         	movff	_nn,sendMessage5@data2
 34128   0067FE  EE20 F001          	lfsr	2,1
 34129   006802  502C               	movf	checkLen@m^(0+1280),w,c
 34130   006804  26D9               	addwf	fsr2l,f,c
 34131   006806  502D               	movf	(checkLen@m+1)^(0+1280),w,c
 34132   006808  22DA               	addwfc	fsr2h,f,c
 34133   00680A  50DF               	movf	indf2,w,c
 34134   00680C  6E28               	movwf	sendMessage5@data3^(0+1280),c
 34135   00680E  C52F  F529         	movff	checkLen@service,sendMessage5@data4
 34136   006812  0E01               	movlw	1
 34137   006814  6E2A               	movwf	sendMessage5@data5^(0+1280),c
 34138   006816  0EAF               	movlw	175
 34139   006818  EC11  F040         	call	_sendMessage5
 34140   00681C                     l8089:
 34141                           
 34142                           ;../../VLCBlib_PIC/vlcb.c: 1117:         return PROCESSED;
 34143   00681C  0E01               	movlw	1
 34144   00681E  EF12  F034         	goto	l2054
 34145   006822                     l8093:
 34146                           
 34147                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return NOT_PROCESSED;
 34148   006822  0E00               	movlw	0
 34149   006824                     l2054:
 34150   006824  0012               	return		;funcret
 34151   006826                     __end_of_checkLen:
 34152                           	callstack 0
 34153                           
 34154 ;; *************** function _APP_processConsumedEvent *****************
 34155 ;; Defined at:
 34156 ;;		line 105 in file "../canargb_events.c"
 34157 ;; Parameters:    Size  Location     Type
 34158 ;;  tableIndex      1    wreg     unsigned char 
 34159 ;;  m               2   27[COMRAM] PTR struct Message
 34160 ;;		 -> poll@m(9), 
 34161 ;; Auto vars:     Size  Location     Type
 34162 ;;  tableIndex      1   29[COMRAM] unsigned char 
 34163 ;;  colourPixelI    1   34[COMRAM] struct PaletteIndex
 34164 ;;  end_ledno       1   33[COMRAM] unsigned char 
 34165 ;;  start_ledno     1   32[COMRAM] unsigned char 
 34166 ;;  action          1   31[COMRAM] unsigned char 
 34167 ;;  ev              1   35[COMRAM] unsigned char 
 34168 ;;  onOff           1   30[COMRAM] unsigned char 
 34169 ;; Return value:  Size  Location     Type
 34170 ;;                  1    wreg      enum E23290
 34171 ;; Registers used:
 34172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34173 ;; Tracked objects:
 34174 ;;		On entry : 0/0
 34175 ;;		On exit  : 0/0
 34176 ;;		Unchanged: 0/0
 34177 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34179 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34181 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34182 ;;Total ram usage:        9 bytes
 34183 ;; Hardware stack levels used: 1
 34184 ;; Hardware stack levels required when called: 4
 34185 ;; This function calls:
 34186 ;;		_getEVs
 34187 ;;		_updateLedRange
 34188 ;;		_updateRGB
 34189 ;; This function is called by:
 34190 ;;		_consumerProcessMessage
 34191 ;; This function uses a non-reentrant model
 34192 ;;
 34193                           
 34194                           	psect	text79
 34195   005918                     __ptext79:
 34196                           	callstack 0
 34197   005918                     _APP_processConsumedEvent:
 34198                           	callstack 120
 34199                           
 34200                           ;incstack = 0
 34201                           ;APP_processConsumedEvent@tableIndex stored from wreg
 34202   005918  6E1E               	movwf	APP_processConsumedEvent@tableIndex^(0+1280),c
 34203   00591A                     
 34204                           ;../canargb_events.c: 106:     uint8_t ev;;../canargb_events.c: 107:     uint8_t onOff;;
      +                          ../canargb_events.c: 109:     onOff = !(m->opc & 1);
 34205   00591A  EE20 F001          	lfsr	2,1
 34206   00591E  501C               	movf	APP_processConsumedEvent@m^(0+1280),w,c
 34207   005920  26D9               	addwf	fsr2l,f,c
 34208   005922  501D               	movf	(APP_processConsumedEvent@m+1)^(0+1280),w,c
 34209   005924  22DA               	addwfc	fsr2h,f,c
 34210   005926  A0DF               	btfss	indf2,0,c
 34211   005928  EF98  F02C         	goto	u5731
 34212   00592C  EF9B  F02C         	goto	u5730
 34213   005930                     u5731:
 34214   005930  0E01               	movlw	1
 34215   005932  EF9C  F02C         	goto	u5740
 34216   005936                     u5730:
 34217   005936  0E00               	movlw	0
 34218   005938                     u5740:
 34219   005938  6E1F               	movwf	APP_processConsumedEvent@onOff^(0+1280),c
 34220   00593A                     
 34221                           ;../canargb_events.c: 110:     if (getEVs(tableIndex)) {
 34222   00593A  501E               	movf	APP_processConsumedEvent@tableIndex^(0+1280),w,c
 34223   00593C  ECB1  F034         	call	_getEVs
 34224   005940  0900               	iorlw	0
 34225   005942  B4D8               	btfsc	status,2,c
 34226   005944  EFA6  F02C         	goto	u5751
 34227   005948  EFA8  F02C         	goto	u5750
 34228   00594C                     u5751:
 34229   00594C  EFAB  F02C         	goto	l116
 34230   005950                     u5750:
 34231   005950                     l8451:
 34232                           
 34233                           ;../canargb_events.c: 112:         return PROCESSED;
 34234   005950  0E01               	movlw	1
 34235   005952  EF06  F02D         	goto	l117
 34236   005956                     l116:
 34237                           
 34238                           ;../canargb_events.c: 115:     for(ev=0; ev<248; ev+=4) {
 34239   005956  6A24               	clrf	APP_processConsumedEvent@ev^(0+1280),c
 34240   005958                     l8459:
 34241                           
 34242                           ;../canargb_events.c: 116:         uint8_t action;;../canargb_events.c: 117:         uin
      +                          t8_t start_ledno;;../canargb_events.c: 118:         uint8_t end_ledno;;../canargb_events
      +                          .c: 119:         PaletteIndex colourPixelIndexPair;;../canargb_events.c: 121:         ac
      +                          tion = evs[ev];
 34243   005958  0E00               	movlw	low _evs
 34244   00595A  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34245   00595C  6ED9               	movwf	fsr2l,c
 34246   00595E  6ADA               	clrf	fsr2h,c
 34247   005960  0E08               	movlw	high _evs
 34248   005962  22DA               	addwfc	fsr2h,f,c
 34249   005964  50DF               	movf	indf2,w,c
 34250   005966  6E20               	movwf	APP_processConsumedEvent@action^(0+1280),c
 34251                           
 34252                           ;../canargb_events.c: 122:         start_ledno = evs[ev+1];
 34253   005968  0E01               	movlw	low (_evs+1)
 34254   00596A  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34255   00596C  6ED9               	movwf	fsr2l,c
 34256   00596E  6ADA               	clrf	fsr2h,c
 34257   005970  0E08               	movlw	high (_evs+1)
 34258   005972  22DA               	addwfc	fsr2h,f,c
 34259   005974  50DF               	movf	indf2,w,c
 34260   005976  6E21               	movwf	APP_processConsumedEvent@start_ledno^(0+1280),c
 34261                           
 34262                           ;../canargb_events.c: 123:         end_ledno = evs[ev+2];
 34263   005978  0E02               	movlw	low (_evs+2)
 34264   00597A  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34265   00597C  6ED9               	movwf	fsr2l,c
 34266   00597E  6ADA               	clrf	fsr2h,c
 34267   005980  0E08               	movlw	high (_evs+2)
 34268   005982  22DA               	addwfc	fsr2h,f,c
 34269   005984  50DF               	movf	indf2,w,c
 34270   005986  6E22               	movwf	APP_processConsumedEvent@end_ledno^(0+1280),c
 34271                           
 34272                           ;../canargb_events.c: 124:         colourPixelIndexPair.asByte = evs[ev+3];
 34273   005988  0E03               	movlw	low (_evs+3)
 34274   00598A  2424               	addwf	APP_processConsumedEvent@ev^(0+1280),w,c
 34275   00598C  6ED9               	movwf	fsr2l,c
 34276   00598E  6ADA               	clrf	fsr2h,c
 34277   005990  0E08               	movlw	high (_evs+3)
 34278   005992  22DA               	addwfc	fsr2h,f,c
 34279   005994  50DF               	movf	indf2,w,c
 34280   005996  6E23               	movwf	APP_processConsumedEvent@colourPixelIndexPair^(0+1280),c
 34281   005998                     
 34282                           ;../canargb_events.c: 126:         if (onOff && (action & 0x01)) {
 34283   005998  501F               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 34284   00599A  B4D8               	btfsc	status,2,c
 34285   00599C  EFD2  F02C         	goto	u5761
 34286   0059A0  EFD4  F02C         	goto	u5760
 34287   0059A4                     u5761:
 34288   0059A4  EFE2  F02C         	goto	l8467
 34289   0059A8                     u5760:
 34290   0059A8  A020               	btfss	APP_processConsumedEvent@action^(0+1280),0,c
 34291   0059AA  EFD9  F02C         	goto	u5771
 34292   0059AE  EFDB  F02C         	goto	u5770
 34293   0059B2                     u5771:
 34294   0059B2  EFE2  F02C         	goto	l8467
 34295   0059B6                     u5770:
 34296   0059B6                     
 34297                           ;../canargb_events.c: 127:             updateLedRange(start_ledno, end_ledno, colourPixe
      +                          lIndexPair);
 34298   0059B6  C522  F501         	movff	APP_processConsumedEvent@end_ledno,updateLedRange@end_ledno
 34299   0059BA  C523  F502         	movff	APP_processConsumedEvent@colourPixelIndexPair,updateLedRange@colourIndexPair
 34300   0059BE  5021               	movf	APP_processConsumedEvent@start_ledno^(0+1280),w,c
 34301   0059C0  ECCC  F03D         	call	_updateLedRange
 34302   0059C4                     l8467:
 34303                           
 34304                           ;../canargb_events.c: 129:         if (!onOff && (action & 0x02)) {
 34305   0059C4  501F               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 34306   0059C6  A4D8               	btfss	status,2,c
 34307   0059C8  EFE8  F02C         	goto	u5781
 34308   0059CC  EFEA  F02C         	goto	u5780
 34309   0059D0                     u5781:
 34310   0059D0  EFF8  F02C         	goto	l8473
 34311   0059D4                     u5780:
 34312   0059D4  A220               	btfss	APP_processConsumedEvent@action^(0+1280),1,c
 34313   0059D6  EFEF  F02C         	goto	u5791
 34314   0059DA  EFF1  F02C         	goto	u5790
 34315   0059DE                     u5791:
 34316   0059DE  EFF8  F02C         	goto	l8473
 34317   0059E2                     u5790:
 34318   0059E2                     
 34319                           ;../canargb_events.c: 130:             updateLedRange(start_ledno, end_ledno, colourPixe
      +                          lIndexPair);
 34320   0059E2  C522  F501         	movff	APP_processConsumedEvent@end_ledno,updateLedRange@end_ledno
 34321   0059E6  C523  F502         	movff	APP_processConsumedEvent@colourPixelIndexPair,updateLedRange@colourIndexPair
 34322   0059EA  5021               	movf	APP_processConsumedEvent@start_ledno^(0+1280),w,c
 34323   0059EC  ECCC  F03D         	call	_updateLedRange
 34324   0059F0                     l8473:
 34325                           
 34326                           ;../canargb_events.c: 132:     }
 34327   0059F0  0E04               	movlw	4
 34328   0059F2  2624               	addwf	APP_processConsumedEvent@ev^(0+1280),f,c
 34329   0059F4  0EF7               	movlw	247
 34330   0059F6  6424               	cpfsgt	APP_processConsumedEvent@ev^(0+1280),c
 34331   0059F8  EF00  F02D         	goto	u5801
 34332   0059FC  EF02  F02D         	goto	u5800
 34333   005A00                     u5801:
 34334   005A00  EFAC  F02C         	goto	l8459
 34335   005A04                     u5800:
 34336   005A04                     
 34337                           ;../canargb_events.c: 133:     updateRGB();
 34338   005A04  EC0E  F041         	call	_updateRGB	;wreg free
 34339   005A08  EFA8  F02C         	goto	l8451
 34340   005A0C                     l117:
 34341   005A0C  0012               	return		;funcret
 34342   005A0E                     __end_of_APP_processConsumedEvent:
 34343                           	callstack 0
 34344                           
 34345 ;; *************** function _updateRGB *****************
 34346 ;; Defined at:
 34347 ;;		line 274 in file "../canargb_leds.c"
 34348 ;; Parameters:    Size  Location     Type
 34349 ;;		None
 34350 ;; Auto vars:     Size  Location     Type
 34351 ;;		None
 34352 ;; Return value:  Size  Location     Type
 34353 ;;                  1    wreg      void 
 34354 ;; Registers used:
 34355 ;;		wreg, status,2
 34356 ;; Tracked objects:
 34357 ;;		On entry : 0/0
 34358 ;;		On exit  : 0/0
 34359 ;;		Unchanged: 0/0
 34360 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34365 ;;Total ram usage:        0 bytes
 34366 ;; Hardware stack levels used: 1
 34367 ;; Hardware stack levels required when called: 1
 34368 ;; This function calls:
 34369 ;;		Nothing
 34370 ;; This function is called by:
 34371 ;;		_APP_processConsumedEvent
 34372 ;; This function uses a non-reentrant model
 34373 ;;
 34374                           
 34375                           	psect	text80
 34376   00821C                     __ptext80:
 34377                           	callstack 0
 34378   00821C                     _updateRGB:
 34379                           	callstack 122
 34380   00821C                     
 34381                           ;../canargb_leds.c: 275:     refreshRequired = 1;
 34382   00821C  0E01               	movlw	1
 34383   00821E  0105               	movlb	5	; () banked
 34384   008220  6FAB               	movwf	_refreshRequired& (0+255),b
 34385   008222                     
 34386                           ; BSR set to: 5
 34387   008222  0012               	return		;funcret
 34388   008224                     __end_of_updateRGB:
 34389                           	callstack 0
 34390                           
 34391 ;; *************** function _getEVs *****************
 34392 ;; Defined at:
 34393 ;;		line 895 in file "../../VLCBlib_PIC/event_teach_simple.c"
 34394 ;; Parameters:    Size  Location     Type
 34395 ;;  tableIndex      1    wreg     unsigned char 
 34396 ;; Auto vars:     Size  Location     Type
 34397 ;;  tableIndex      1   25[COMRAM] unsigned char 
 34398 ;;  evIdx           1   26[COMRAM] unsigned char 
 34399 ;; Return value:  Size  Location     Type
 34400 ;;                  1    wreg      unsigned char 
 34401 ;; Registers used:
 34402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34403 ;; Tracked objects:
 34404 ;;		On entry : 0/0
 34405 ;;		On exit  : 0/0
 34406 ;;		Unchanged: 0/0
 34407 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34409 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34410 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34411 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34412 ;;Total ram usage:       15 bytes
 34413 ;; Hardware stack levels used: 1
 34414 ;; Hardware stack levels required when called: 3
 34415 ;; This function calls:
 34416 ;;		_readNVM
 34417 ;; This function is called by:
 34418 ;;		_APP_processConsumedEvent
 34419 ;; This function uses a non-reentrant model
 34420 ;;
 34421                           
 34422                           	psect	text81
 34423   006962                     __ptext81:
 34424                           	callstack 0
 34425   006962                     _getEVs:
 34426                           	callstack 120
 34427                           
 34428                           ; BSR set to: 5
 34429                           ;incstack = 0
 34430                           ;getEVs@tableIndex stored from wreg
 34431   006962  6E1A               	movwf	getEVs@tableIndex^(0+1280),c
 34432   006964                     
 34433                           ;../../VLCBlib_PIC/event_teach_simple.c: 897:     uint8_t evIdx;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 898:     if (tableIndex >= 255) {
 34434   006964  281A               	incf	getEVs@tableIndex^(0+1280),w,c
 34435   006966  A4D8               	btfss	status,2,c
 34436   006968  EFB8  F034         	goto	u5401
 34437   00696C  EFBA  F034         	goto	u5400
 34438   006970                     u5401:
 34439   006970  EFBD  F034         	goto	l1146
 34440   006974                     u5400:
 34441   006974                     
 34442                           ;../../VLCBlib_PIC/event_teach_simple.c: 899:         return CMDERR_INV_EN_IDX;
 34443   006974  0E08               	movlw	8
 34444   006976  EFFE  F034         	goto	l1147
 34445   00697A                     l1146:
 34446                           
 34447                           ;../../VLCBlib_PIC/event_teach_simple.c: 902:     for (evIdx=0; evIdx < 252; evIdx++) {
 34448   00697A  6A1B               	clrf	getEVs@evIdx^(0+1280),c
 34449   00697C                     l7963:
 34450                           
 34451                           ;../../VLCBlib_PIC/event_teach_simple.c: 903:         evs[evIdx] = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+5 +evIdx);
 34452   00697C  501B               	movf	getEVs@evIdx^(0+1280),w,c
 34453   00697E  6E0D               	movwf	??_getEVs^(0+1280),c
 34454   006980  6A0E               	clrf	(??_getEVs+1)^(0+1280),c
 34455   006982  6A0F               	clrf	(??_getEVs+2)^(0+1280),c
 34456   006984  501A               	movf	getEVs@tableIndex^(0+1280),w,c
 34457   006986  6E10               	movwf	(??_getEVs+3)^(0+1280),c
 34458   006988  6A11               	clrf	(??_getEVs+4)^(0+1280),c
 34459   00698A  0E01               	movlw	1
 34460   00698C  0210               	mulwf	(??_getEVs+3)^(0+1280),c
 34461   00698E  C4F3 F512          	movff	prodl,??_getEVs+5
 34462   006992  C4F4 F513          	movff	prodh,??_getEVs+6
 34463   006996  0211               	mulwf	(??_getEVs+4)^(0+1280),c
 34464   006998  50F3               	movf	prodl,w,c
 34465   00699A  2613               	addwf	(??_getEVs+6)^(0+1280),f,c
 34466   00699C  0E01               	movlw	1
 34467   00699E  0210               	mulwf	(??_getEVs+3)^(0+1280),c
 34468   0069A0  50F3               	movf	prodl,w,c
 34469   0069A2  2613               	addwf	(??_getEVs+6)^(0+1280),f,c
 34470   0069A4  C512  F514         	movff	??_getEVs+5,??_getEVs+7
 34471   0069A8  C513  F515         	movff	??_getEVs+6,??_getEVs+8
 34472   0069AC  6A16               	clrf	(??_getEVs+9)^(0+1280),c
 34473   0069AE  500D               	movf	??_getEVs^(0+1280),w,c
 34474   0069B0  2414               	addwf	(??_getEVs+7)^(0+1280),w,c
 34475   0069B2  6E17               	movwf	(??_getEVs+10)^(0+1280),c
 34476   0069B4  500E               	movf	(??_getEVs+1)^(0+1280),w,c
 34477   0069B6  2015               	addwfc	(??_getEVs+8)^(0+1280),w,c
 34478   0069B8  6E18               	movwf	(??_getEVs+11)^(0+1280),c
 34479   0069BA  500F               	movf	(??_getEVs+2)^(0+1280),w,c
 34480   0069BC  2016               	addwfc	(??_getEVs+9)^(0+1280),w,c
 34481   0069BE  6E19               	movwf	(??_getEVs+12)^(0+1280),c
 34482   0069C0  0E05               	movlw	5
 34483   0069C2  2417               	addwf	(??_getEVs+10)^(0+1280),w,c
 34484   0069C4  6E07               	movwf	readNVM@index^(0+1280),c
 34485   0069C6  0E00               	movlw	0
 34486   0069C8  2018               	addwfc	(??_getEVs+11)^(0+1280),w,c
 34487   0069CA  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 34488   0069CC  0E01               	movlw	1
 34489   0069CE  2019               	addwfc	(??_getEVs+12)^(0+1280),w,c
 34490   0069D0  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 34491   0069D2  0E01               	movlw	1
 34492   0069D4  ECEA  F039         	call	_readNVM
 34493   0069D8  0E00               	movlw	low _evs
 34494   0069DA  241B               	addwf	getEVs@evIdx^(0+1280),w,c
 34495   0069DC  6ED9               	movwf	fsr2l,c
 34496   0069DE  6ADA               	clrf	fsr2h,c
 34497   0069E0  0E08               	movlw	high _evs
 34498   0069E2  22DA               	addwfc	fsr2h,f,c
 34499   0069E4  C507  F4DF         	movff	?_readNVM,indf2
 34500   0069E8                     
 34501                           ;../../VLCBlib_PIC/event_teach_simple.c: 904:     }
 34502   0069E8  2A1B               	incf	getEVs@evIdx^(0+1280),f,c
 34503   0069EA  0EFB               	movlw	251
 34504   0069EC  641B               	cpfsgt	getEVs@evIdx^(0+1280),c
 34505   0069EE  EFFB  F034         	goto	u5411
 34506   0069F2  EFFD  F034         	goto	u5410
 34507   0069F6                     u5411:
 34508   0069F6  EFBE  F034         	goto	l7963
 34509   0069FA                     u5410:
 34510   0069FA                     
 34511                           ;../../VLCBlib_PIC/event_teach_simple.c: 905:     return 0;
 34512   0069FA  0E00               	movlw	0
 34513   0069FC                     l1147:
 34514   0069FC  0012               	return		;funcret
 34515   0069FE                     __end_of_getEVs:
 34516                           	callstack 0
 34517                           
 34518 ;; *************** function _canReceiveMessage *****************
 34519 ;; Defined at:
 34520 ;;		line 700 in file "../../VLCBlib_PIC/can18_can_2.c"
 34521 ;; Parameters:    Size  Location     Type
 34522 ;;  m               2   15[COMRAM] PTR struct Message
 34523 ;;		 -> poll@m(9), 
 34524 ;; Auto vars:     Size  Location     Type
 34525 ;;  rxFifoObj       2   23[COMRAM] PTR unsigned char 
 34526 ;;		 -> RAM(16383), 
 34527 ;;  temp            2   21[COMRAM] unsigned short 
 34528 ;;  mp              2   19[COMRAM] PTR struct Message
 34529 ;;		 -> rxBuffers(72), NULL(0), 
 34530 ;;  incomingCanI    1   18[COMRAM] unsigned char 
 34531 ;; Return value:  Size  Location     Type
 34532 ;;                  1    wreg      enum E23614
 34533 ;; Registers used:
 34534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34535 ;; Tracked objects:
 34536 ;;		On entry : 0/0
 34537 ;;		On exit  : 0/0
 34538 ;;		Unchanged: 0/0
 34539 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34541 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34542 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34543 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34544 ;;Total ram usage:       10 bytes
 34545 ;; Hardware stack levels used: 1
 34546 ;; Hardware stack levels required when called: 3
 34547 ;; This function calls:
 34548 ;;		_getNumRxBuffersInUse
 34549 ;;		_handleSelfEnumeration
 34550 ;;		_memcpy
 34551 ;;		_pop
 34552 ;; This function is called by:
 34553 ;;		_poll
 34554 ;; This function uses a non-reentrant model
 34555 ;;
 34556                           
 34557                           	psect	text82
 34558   00423E                     __ptext82:
 34559                           	callstack 0
 34560   00423E                     _canReceiveMessage:
 34561                           	callstack 122
 34562   00423E                     
 34563                           ;../../VLCBlib_PIC/can18_can_2.c: 701:     Message * mp;;../../VLCBlib_PIC/can18_can_2.c
      +                          : 702:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18_can_2.c: 703:     uint8_t* rxF
      +                          ifoObj;;../../VLCBlib_PIC/can18_can_2.c: 705:     uint16_t temp;;../../VLCBlib_PIC/can18
      +                          _can_2.c: 709:     mp = pop(&rxQueue);
 34564   00423E  0EC7               	movlw	low _rxQueue
 34565   004240  6E01               	movwf	pop@q^(0+1280),c
 34566   004242  0E05               	movlw	high _rxQueue
 34567   004244  6E02               	movwf	(pop@q+1)^(0+1280),c
 34568   004246  ECB3  F030         	call	_pop	;wreg free
 34569   00424A  C501  F514         	movff	?_pop,canReceiveMessage@mp
 34570   00424E  C502  F515         	movff	?_pop+1,canReceiveMessage@mp+1
 34571   004252                     
 34572                           ;../../VLCBlib_PIC/can18_can_2.c: 710:     if (mp != ((void*)0)) {
 34573   004252  5014               	movf	canReceiveMessage@mp^(0+1280),w,c
 34574   004254  1015               	iorwf	(canReceiveMessage@mp+1)^(0+1280),w,c
 34575   004256  B4D8               	btfsc	status,2,c
 34576   004258  EF30  F021         	goto	u6841
 34577   00425C  EF32  F021         	goto	u6840
 34578   004260                     u6841:
 34579   004260  EF43  F021         	goto	l691
 34580   004264                     u6840:
 34581   004264                     
 34582                           ;../../VLCBlib_PIC/can18_can_2.c: 711:         memcpy(m, mp, sizeof(Message));
 34583   004264  C510  F501         	movff	canReceiveMessage@m,memcpy@d1
 34584   004268  C511  F502         	movff	canReceiveMessage@m+1,memcpy@d1+1
 34585   00426C  C514  F503         	movff	canReceiveMessage@mp,memcpy@s1
 34586   004270  C515  F504         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 34587   004274  0E00               	movlw	0
 34588   004276  6E06               	movwf	(memcpy@n+1)^(0+1280),c
 34589   004278  0E09               	movlw	9
 34590   00427A  6E05               	movwf	memcpy@n^(0+1280),c
 34591   00427C  ECC9  F03C         	call	_memcpy	;wreg free
 34592   004280                     l9625:
 34593                           
 34594                           ;../../VLCBlib_PIC/can18_can_2.c: 712:         return RECEIVED;
 34595   004280  0E01               	movlw	1
 34596   004282  EF19  F022         	goto	l692
 34597   004286                     l691:
 34598                           
 34599                           ;../../VLCBlib_PIC/can18_can_2.c: 714:         if (! C1FIFOSTA3Lbits.TFNRFNIF) {
 34600   004286  0101               	movlb	1	; () banked
 34601   004288  B178               	btfsc	120,0,b	;volatile
 34602   00428A  EF49  F021         	goto	u6851
 34603   00428E  EF4B  F021         	goto	u6850
 34604   004292                     u6851:
 34605   004292  EF4E  F021         	goto	l9635
 34606   004296                     u6850:
 34607   004296                     l9631:
 34608                           
 34609                           ; BSR set to: 1
 34610                           ;../../VLCBlib_PIC/can18_can_2.c: 716:             return NOT_RECEIVED;
 34611   004296  0E00               	movlw	0
 34612   004298  EF19  F022         	goto	l692
 34613   00429C                     l9635:
 34614                           
 34615                           ; BSR set to: 1
 34616                           ;../../VLCBlib_PIC/can18_can_2.c: 720:         temp = getNumRxBuffersInUse();
 34617   00429C  ECB0  F039         	call	_getNumRxBuffersInUse	;wreg free
 34618   0042A0  6E12               	movwf	??_canReceiveMessage^(0+1280),c
 34619   0042A2  5012               	movf	??_canReceiveMessage^(0+1280),w,c
 34620   0042A4  6E16               	movwf	canReceiveMessage@temp^(0+1280),c
 34621   0042A6  6A17               	clrf	(canReceiveMessage@temp+1)^(0+1280),c
 34622   0042A8                     
 34623                           ;../../VLCBlib_PIC/can18_can_2.c: 721:         if (temp > canDiagnostics[0x12].asUint) {
 34624   0042A8  5016               	movf	canReceiveMessage@temp^(0+1280),w,c
 34625   0042AA  0106               	movlb	6	; () banked
 34626   0042AC  5DB2               	subwf	(_canDiagnostics+36)& (0+255),w,b
 34627   0042AE  5017               	movf	(canReceiveMessage@temp+1)^(0+1280),w,c
 34628   0042B0  59B3               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 34629   0042B2  B0D8               	btfsc	status,0,c
 34630   0042B4  EF5E  F021         	goto	u6861
 34631   0042B8  EF60  F021         	goto	u6860
 34632   0042BC                     u6861:
 34633   0042BC  EF64  F021         	goto	l9641
 34634   0042C0                     u6860:
 34635   0042C0                     
 34636                           ; BSR set to: 6
 34637                           ;../../VLCBlib_PIC/can18_can_2.c: 722:             canDiagnostics[0x12].asUint = temp;
 34638   0042C0  C516  F6B2         	movff	canReceiveMessage@temp,_canDiagnostics+36
 34639   0042C4  C517  F6B3         	movff	canReceiveMessage@temp+1,_canDiagnostics+37
 34640   0042C8                     l9641:
 34641                           
 34642                           ; BSR set to: 6
 34643                           ;../../VLCBlib_PIC/can18_can_2.c: 726:         rxFifoObj = (uint8_t*) C1FIFOUA3;
 34644   0042C8  C17C F518          	movff	380,canReceiveMessage@rxFifoObj	;volatile
 34645   0042CC  C17D F519          	movff	381,canReceiveMessage@rxFifoObj+1	;volatile
 34646   0042D0                     
 34647                           ; BSR set to: 6
 34648                           ;../../VLCBlib_PIC/can18_can_2.c: 727:         incomingCanId = rxFifoObj[0] & 0x7F;
 34649   0042D0  C518  F4D9         	movff	canReceiveMessage@rxFifoObj,fsr2l
 34650   0042D4  C519  F4DA         	movff	canReceiveMessage@rxFifoObj+1,fsr2h
 34651   0042D8  50DF               	movf	indf2,w,c
 34652   0042DA  0B7F               	andlw	127
 34653   0042DC  6E13               	movwf	canReceiveMessage@incomingCanId^(0+1280),c
 34654   0042DE                     
 34655                           ; BSR set to: 6
 34656                           ;../../VLCBlib_PIC/can18_can_2.c: 728:         handleSelfEnumeration(incomingCanId);
 34657   0042DE  5013               	movf	canReceiveMessage@incomingCanId^(0+1280),w,c
 34658   0042E0  EC23  F032         	call	_handleSelfEnumeration
 34659   0042E4                     
 34660                           ;../../VLCBlib_PIC/can18_can_2.c: 731:         canDiagnostics[0x09].asUint++;
 34661   0042E4  0106               	movlb	6	; () banked
 34662   0042E6  4BA0               	infsnz	(_canDiagnostics+18)& (0+255),f,b
 34663   0042E8  2BA1               	incf	(_canDiagnostics+19)& (0+255),f,b
 34664   0042EA                     
 34665                           ; BSR set to: 6
 34666                           ;../../VLCBlib_PIC/can18_can_2.c: 734:         if (rxFifoObj[4] & 0x20) {
 34667   0042EA  EE20 F004          	lfsr	2,4
 34668   0042EE  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34669   0042F0  26D9               	addwf	fsr2l,f,c
 34670   0042F2  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34671   0042F4  22DA               	addwfc	fsr2h,f,c
 34672   0042F6  AADF               	btfss	indf2,5,c
 34673   0042F8  EF80  F021         	goto	u6871
 34674   0042FC  EF82  F021         	goto	u6870
 34675   004300                     u6871:
 34676   004300  EF88  F021         	goto	l9659
 34677   004304                     u6870:
 34678   004304                     
 34679                           ; BSR set to: 6
 34680                           ;../../VLCBlib_PIC/can18_can_2.c: 736:             C1FIFOCON1H |= (0x2 | 0x1);
 34681   004304  0E03               	movlw	3
 34682   004306  0101               	movlb	1	; () banked
 34683   004308  135D               	iorwf	93,f,b	;volatile
 34684   00430A                     
 34685                           ; BSR set to: 1
 34686                           ;../../VLCBlib_PIC/can18_can_2.c: 737:             C1FIFOCON3Hbits.UINC = 1;
 34687   00430A  8175               	bsf	117,0,b	;volatile
 34688   00430C  EF4B  F021         	goto	l9631
 34689   004310                     l9659:
 34690                           
 34691                           ; BSR set to: 6
 34692                           ;../../VLCBlib_PIC/can18_can_2.c: 740:         m->len = (rxFifoObj[4] & 0x0F);
 34693   004310  EE20 F004          	lfsr	2,4
 34694   004314  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34695   004316  26D9               	addwf	fsr2l,f,c
 34696   004318  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34697   00431A  22DA               	addwfc	fsr2h,f,c
 34698   00431C  50DF               	movf	indf2,w,c
 34699   00431E  0B0F               	andlw	15
 34700   004320  C510  F4D9         	movff	canReceiveMessage@m,fsr2l
 34701   004324  C511  F4DA         	movff	canReceiveMessage@m+1,fsr2h
 34702   004328  6EDF               	movwf	indf2,c
 34703   00432A                     
 34704                           ; BSR set to: 6
 34705                           ;../../VLCBlib_PIC/can18_can_2.c: 741:         if (m->len == 0) {
 34706   00432A  C510  F4D9         	movff	canReceiveMessage@m,fsr2l
 34707   00432E  C511  F4DA         	movff	canReceiveMessage@m+1,fsr2h
 34708   004332  50DF               	movf	indf2,w,c
 34709   004334  A4D8               	btfss	status,2,c
 34710   004336  EF9F  F021         	goto	u6881
 34711   00433A  EFA1  F021         	goto	u6880
 34712   00433E                     u6881:
 34713   00433E  EFA5  F021         	goto	l9669
 34714   004342                     u6880:
 34715   004342                     
 34716                           ; BSR set to: 6
 34717                           ;../../VLCBlib_PIC/can18_can_2.c: 743:             C1FIFOCON3Hbits.UINC = 1;
 34718   004342  0101               	movlb	1	; () banked
 34719   004344  8175               	bsf	117,0,b	;volatile
 34720   004346  EF4B  F021         	goto	l9631
 34721   00434A                     l9669:
 34722                           
 34723                           ; BSR set to: 6
 34724                           ;../../VLCBlib_PIC/can18_can_2.c: 746:         m->opc = rxFifoObj[8];
 34725   00434A  EE20 F008          	lfsr	2,8
 34726   00434E  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34727   004350  26D9               	addwf	fsr2l,f,c
 34728   004352  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34729   004354  22DA               	addwfc	fsr2h,f,c
 34730   004356  EE10 F001          	lfsr	1,1
 34731   00435A  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34732   00435C  26E1               	addwf	fsr1l,f,c
 34733   00435E  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34734   004360  22E2               	addwfc	fsr1h,f,c
 34735   004362  C4DF F4E7          	movff	indf2,indf1
 34736                           
 34737                           ;../../VLCBlib_PIC/can18_can_2.c: 747:         m->bytes[0] = rxFifoObj[9];
 34738   004366  EE20 F009          	lfsr	2,9
 34739   00436A  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34740   00436C  26D9               	addwf	fsr2l,f,c
 34741   00436E  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34742   004370  22DA               	addwfc	fsr2h,f,c
 34743   004372  EE10 F002          	lfsr	1,2
 34744   004376  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34745   004378  26E1               	addwf	fsr1l,f,c
 34746   00437A  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34747   00437C  22E2               	addwfc	fsr1h,f,c
 34748   00437E  C4DF F4E7          	movff	indf2,indf1
 34749                           
 34750                           ;../../VLCBlib_PIC/can18_can_2.c: 748:         m->bytes[1] = rxFifoObj[10];
 34751   004382  EE20 F00A          	lfsr	2,10
 34752   004386  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34753   004388  26D9               	addwf	fsr2l,f,c
 34754   00438A  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34755   00438C  22DA               	addwfc	fsr2h,f,c
 34756   00438E  EE10 F003          	lfsr	1,3
 34757   004392  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34758   004394  26E1               	addwf	fsr1l,f,c
 34759   004396  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34760   004398  22E2               	addwfc	fsr1h,f,c
 34761   00439A  C4DF F4E7          	movff	indf2,indf1
 34762                           
 34763                           ;../../VLCBlib_PIC/can18_can_2.c: 749:         m->bytes[2] = rxFifoObj[11];
 34764   00439E  EE20 F00B          	lfsr	2,11
 34765   0043A2  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34766   0043A4  26D9               	addwf	fsr2l,f,c
 34767   0043A6  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34768   0043A8  22DA               	addwfc	fsr2h,f,c
 34769   0043AA  EE10 F004          	lfsr	1,4
 34770   0043AE  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34771   0043B0  26E1               	addwf	fsr1l,f,c
 34772   0043B2  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34773   0043B4  22E2               	addwfc	fsr1h,f,c
 34774   0043B6  C4DF F4E7          	movff	indf2,indf1
 34775                           
 34776                           ;../../VLCBlib_PIC/can18_can_2.c: 750:         m->bytes[3] = rxFifoObj[12];
 34777   0043BA  EE20 F00C          	lfsr	2,12
 34778   0043BE  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34779   0043C0  26D9               	addwf	fsr2l,f,c
 34780   0043C2  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34781   0043C4  22DA               	addwfc	fsr2h,f,c
 34782   0043C6  EE10 F005          	lfsr	1,5
 34783   0043CA  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34784   0043CC  26E1               	addwf	fsr1l,f,c
 34785   0043CE  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34786   0043D0  22E2               	addwfc	fsr1h,f,c
 34787   0043D2  C4DF F4E7          	movff	indf2,indf1
 34788                           
 34789                           ;../../VLCBlib_PIC/can18_can_2.c: 751:         m->bytes[4] = rxFifoObj[13];
 34790   0043D6  EE20 F00D          	lfsr	2,13
 34791   0043DA  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34792   0043DC  26D9               	addwf	fsr2l,f,c
 34793   0043DE  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34794   0043E0  22DA               	addwfc	fsr2h,f,c
 34795   0043E2  EE10 F006          	lfsr	1,6
 34796   0043E6  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34797   0043E8  26E1               	addwf	fsr1l,f,c
 34798   0043EA  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34799   0043EC  22E2               	addwfc	fsr1h,f,c
 34800   0043EE  C4DF F4E7          	movff	indf2,indf1
 34801                           
 34802                           ;../../VLCBlib_PIC/can18_can_2.c: 752:         m->bytes[5] = rxFifoObj[14];
 34803   0043F2  EE20 F00E          	lfsr	2,14
 34804   0043F6  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34805   0043F8  26D9               	addwf	fsr2l,f,c
 34806   0043FA  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34807   0043FC  22DA               	addwfc	fsr2h,f,c
 34808   0043FE  EE10 F007          	lfsr	1,7
 34809   004402  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34810   004404  26E1               	addwf	fsr1l,f,c
 34811   004406  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34812   004408  22E2               	addwfc	fsr1h,f,c
 34813   00440A  C4DF F4E7          	movff	indf2,indf1
 34814                           
 34815                           ;../../VLCBlib_PIC/can18_can_2.c: 753:         m->bytes[6] = rxFifoObj[15];
 34816   00440E  EE20 F00F          	lfsr	2,15
 34817   004412  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 34818   004414  26D9               	addwf	fsr2l,f,c
 34819   004416  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 34820   004418  22DA               	addwfc	fsr2h,f,c
 34821   00441A  EE10 F008          	lfsr	1,8
 34822   00441E  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 34823   004420  26E1               	addwf	fsr1l,f,c
 34824   004422  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 34825   004424  22E2               	addwfc	fsr1h,f,c
 34826   004426  C4DF F4E7          	movff	indf2,indf1
 34827   00442A                     
 34828                           ; BSR set to: 6
 34829                           ;../../VLCBlib_PIC/can18_can_2.c: 755:         C1FIFOCON3Hbits.UINC = 1;
 34830   00442A  0101               	movlb	1	; () banked
 34831   00442C  8175               	bsf	117,0,b	;volatile
 34832   00442E  EF40  F021         	goto	l9625
 34833   004432                     l692:
 34834   004432  0012               	return		;funcret
 34835   004434                     __end_of_canReceiveMessage:
 34836                           	callstack 0
 34837                           
 34838 ;; *************** function _pop *****************
 34839 ;; Defined at:
 34840 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 34841 ;; Parameters:    Size  Location     Type
 34842 ;;  q               2    0[COMRAM] PTR struct MessageQueue
 34843 ;;		 -> rxQueue(5), 
 34844 ;; Auto vars:     Size  Location     Type
 34845 ;;  ret             2    7[COMRAM] PTR struct Message
 34846 ;;		 -> rxBuffers(72), 
 34847 ;; Return value:  Size  Location     Type
 34848 ;;                  2    0[COMRAM] PTR struct Message
 34849 ;; Registers used:
 34850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34851 ;; Tracked objects:
 34852 ;;		On entry : 0/0
 34853 ;;		On exit  : 0/0
 34854 ;;		Unchanged: 0/0
 34855 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34856 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34857 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34858 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34859 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34860 ;;Total ram usage:        9 bytes
 34861 ;; Hardware stack levels used: 1
 34862 ;; Hardware stack levels required when called: 1
 34863 ;; This function calls:
 34864 ;;		Nothing
 34865 ;; This function is called by:
 34866 ;;		_canReceiveMessage
 34867 ;; This function uses a non-reentrant model
 34868 ;;
 34869                           
 34870                           	psect	text83
 34871   006166                     __ptext83:
 34872                           	callstack 0
 34873   006166                     _pop:
 34874                           	callstack 123
 34875   006166                     
 34876                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 34877   006166  EE20 F002          	lfsr	2,2
 34878   00616A  5001               	movf	pop@q^(0+1280),w,c
 34879   00616C  26D9               	addwf	fsr2l,f,c
 34880   00616E  5002               	movf	(pop@q+1)^(0+1280),w,c
 34881   006170  22DA               	addwfc	fsr2h,f,c
 34882   006172  EE10 F003          	lfsr	1,3
 34883   006176  5001               	movf	pop@q^(0+1280),w,c
 34884   006178  26E1               	addwf	fsr1l,f,c
 34885   00617A  5002               	movf	(pop@q+1)^(0+1280),w,c
 34886   00617C  22E2               	addwfc	fsr1h,f,c
 34887   00617E  50DE               	movf	postinc2,w,c
 34888   006180  18E6               	xorwf	postinc1,w,c
 34889   006182  A4D8               	btfss	status,2,c
 34890   006184  EFC6  F030         	goto	u5971
 34891   006188  EFC8  F030         	goto	u5970
 34892   00618C                     u5971:
 34893   00618C  EFCE  F030         	goto	l8607
 34894   006190                     u5970:
 34895   006190                     
 34896                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 34897   006190  0E00               	movlw	0
 34898   006192  6E01               	movwf	?_pop^(0+1280),c
 34899   006194  0E00               	movlw	0
 34900   006196  6E02               	movwf	(?_pop+1)^(0+1280),c
 34901   006198  EF11  F031         	goto	l1193
 34902   00619C                     l8607:
 34903                           
 34904                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 34905   00619C  EE20 F002          	lfsr	2,2
 34906   0061A0  5001               	movf	pop@q^(0+1280),w,c
 34907   0061A2  26D9               	addwf	fsr2l,f,c
 34908   0061A4  5002               	movf	(pop@q+1)^(0+1280),w,c
 34909   0061A6  22DA               	addwfc	fsr2h,f,c
 34910   0061A8  50DF               	movf	indf2,w,c
 34911   0061AA  6E03               	movwf	??_pop^(0+1280),c
 34912   0061AC  5003               	movf	??_pop^(0+1280),w,c
 34913   0061AE  0D09               	mullw	9
 34914   0061B0  C4F3 F504          	movff	prodl,??_pop+1
 34915   0061B4  C4F4 F505          	movff	prodh,??_pop+2
 34916   0061B8  C501  F4D9         	movff	pop@q,fsr2l
 34917   0061BC  C502  F4DA         	movff	pop@q+1,fsr2h
 34918   0061C0  C4DE F506          	movff	postinc2,??_pop+3
 34919   0061C4  C4DD F507          	movff	postdec2,??_pop+4
 34920   0061C8  5004               	movf	(??_pop+1)^(0+1280),w,c
 34921   0061CA  2406               	addwf	(??_pop+3)^(0+1280),w,c
 34922   0061CC  6E08               	movwf	pop@ret^(0+1280),c
 34923   0061CE  5005               	movf	(??_pop+2)^(0+1280),w,c
 34924   0061D0  2007               	addwfc	(??_pop+4)^(0+1280),w,c
 34925   0061D2  6E09               	movwf	(pop@ret+1)^(0+1280),c
 34926   0061D4  EE20 F002          	lfsr	2,2
 34927   0061D8  5001               	movf	pop@q^(0+1280),w,c
 34928   0061DA  26D9               	addwf	fsr2l,f,c
 34929   0061DC  5002               	movf	(pop@q+1)^(0+1280),w,c
 34930   0061DE  22DA               	addwfc	fsr2h,f,c
 34931   0061E0  2ADF               	incf	indf2,f,c
 34932   0061E2                     
 34933                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 34934   0061E2  EE20 F004          	lfsr	2,4
 34935   0061E6  5001               	movf	pop@q^(0+1280),w,c
 34936   0061E8  26D9               	addwf	fsr2l,f,c
 34937   0061EA  5002               	movf	(pop@q+1)^(0+1280),w,c
 34938   0061EC  22DA               	addwfc	fsr2h,f,c
 34939   0061EE  EE10 F002          	lfsr	1,2
 34940   0061F2  5001               	movf	pop@q^(0+1280),w,c
 34941   0061F4  26E1               	addwf	fsr1l,f,c
 34942   0061F6  5002               	movf	(pop@q+1)^(0+1280),w,c
 34943   0061F8  22E2               	addwfc	fsr1h,f,c
 34944   0061FA  50DE               	movf	postinc2,w,c
 34945   0061FC  5CE6               	subwf	postinc1,w,c
 34946   0061FE  A0D8               	btfss	status,0,c
 34947   006200  EF04  F031         	goto	u5981
 34948   006204  EF06  F031         	goto	u5980
 34949   006208                     u5981:
 34950   006208  EF0D  F031         	goto	l8615
 34951   00620C                     u5980:
 34952   00620C  EE20 F002          	lfsr	2,2
 34953   006210  5001               	movf	pop@q^(0+1280),w,c
 34954   006212  26D9               	addwf	fsr2l,f,c
 34955   006214  5002               	movf	(pop@q+1)^(0+1280),w,c
 34956   006216  22DA               	addwfc	fsr2h,f,c
 34957   006218  6ADF               	clrf	indf2,c
 34958   00621A                     l8615:
 34959                           
 34960                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 34961   00621A  C508  F501         	movff	pop@ret,?_pop
 34962   00621E  C509  F502         	movff	pop@ret+1,?_pop+1
 34963   006222                     l1193:
 34964   006222  0012               	return		;funcret
 34965   006224                     __end_of_pop:
 34966                           	callstack 0
 34967                           
 34968 ;; *************** function _memcpy *****************
 34969 ;; Defined at:
 34970 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 34971 ;; Parameters:    Size  Location     Type
 34972 ;;  d1              2    0[COMRAM] PTR void 
 34973 ;;		 -> poll@m(9), 
 34974 ;;  s1              2    2[COMRAM] PTR const void 
 34975 ;;		 -> rxBuffers(72), NULL(0), 
 34976 ;;  n               2    4[COMRAM] unsigned int 
 34977 ;; Auto vars:     Size  Location     Type
 34978 ;;  s               2    8[COMRAM] PTR const unsigned char 
 34979 ;;		 -> rxBuffers(72), NULL(0), 
 34980 ;;  d               2    6[COMRAM] PTR unsigned char 
 34981 ;;		 -> poll@m(9), 
 34982 ;;  tmp             1   10[COMRAM] unsigned char 
 34983 ;; Return value:  Size  Location     Type
 34984 ;;                  2    0[COMRAM] PTR void 
 34985 ;; Registers used:
 34986 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34987 ;; Tracked objects:
 34988 ;;		On entry : 0/0
 34989 ;;		On exit  : 0/0
 34990 ;;		Unchanged: 0/0
 34991 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34992 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34993 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34995 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34996 ;;Total ram usage:       11 bytes
 34997 ;; Hardware stack levels used: 1
 34998 ;; Hardware stack levels required when called: 1
 34999 ;; This function calls:
 35000 ;;		Nothing
 35001 ;; This function is called by:
 35002 ;;		_canReceiveMessage
 35003 ;; This function uses a non-reentrant model
 35004 ;;
 35005                           
 35006                           	psect	text84
 35007   007992                     __ptext84:
 35008                           	callstack 0
 35009   007992                     _memcpy:
 35010                           	callstack 123
 35011   007992  C503  F509         	movff	memcpy@s1,memcpy@s
 35012   007996  C504  F50A         	movff	memcpy@s1+1,memcpy@s+1
 35013   00799A  C501  F507         	movff	memcpy@d1,memcpy@d
 35014   00799E  C502  F508         	movff	memcpy@d1+1,memcpy@d+1
 35015   0079A2  EFE3  F03C         	goto	l8629
 35016   0079A6                     l8621:
 35017   0079A6  C509  F4D9         	movff	memcpy@s,fsr2l
 35018   0079AA  C50A  F4DA         	movff	memcpy@s+1,fsr2h
 35019   0079AE  50DF               	movf	indf2,w,c
 35020   0079B0  6E0B               	movwf	memcpy@tmp^(0+1280),c
 35021   0079B2  4A09               	infsnz	memcpy@s^(0+1280),f,c
 35022   0079B4  2A0A               	incf	(memcpy@s+1)^(0+1280),f,c
 35023   0079B6  C507  F4D9         	movff	memcpy@d,fsr2l
 35024   0079BA  C508  F4DA         	movff	memcpy@d+1,fsr2h
 35025   0079BE  C50B  F4DF         	movff	memcpy@tmp,indf2
 35026   0079C2  4A07               	infsnz	memcpy@d^(0+1280),f,c
 35027   0079C4  2A08               	incf	(memcpy@d+1)^(0+1280),f,c
 35028   0079C6                     l8629:
 35029   0079C6  0605               	decf	memcpy@n^(0+1280),f,c
 35030   0079C8  A0D8               	btfss	status,0,c
 35031   0079CA  0606               	decf	(memcpy@n+1)^(0+1280),f,c
 35032   0079CC  2805               	incf	memcpy@n^(0+1280),w,c
 35033   0079CE  E106               	bnz	u5991
 35034   0079D0  2806               	incf	(memcpy@n+1)^(0+1280),w,c
 35035   0079D2  A4D8               	btfss	status,2,c
 35036   0079D4  EFEE  F03C         	goto	u5991
 35037   0079D8  EFF0  F03C         	goto	u5990
 35038   0079DC                     u5991:
 35039   0079DC  EFD3  F03C         	goto	l8621
 35040   0079E0                     u5990:
 35041   0079E0  0012               	return		;funcret
 35042   0079E2                     __end_of_memcpy:
 35043                           	callstack 0
 35044                           
 35045 ;; *************** function _handleSelfEnumeration *****************
 35046 ;; Defined at:
 35047 ;;		line 800 in file "../../VLCBlib_PIC/can18_can_2.c"
 35048 ;; Parameters:    Size  Location     Type
 35049 ;;  receivedCanI    1    wreg     unsigned char 
 35050 ;; Auto vars:     Size  Location     Type
 35051 ;;  receivedCanI    1   14[COMRAM] unsigned char 
 35052 ;; Return value:  Size  Location     Type
 35053 ;;                  1    wreg      void 
 35054 ;; Registers used:
 35055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35056 ;; Tracked objects:
 35057 ;;		On entry : 0/0
 35058 ;;		On exit  : 0/0
 35059 ;;		Unchanged: 0/0
 35060 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35063 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35064 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35065 ;;Total ram usage:        5 bytes
 35066 ;; Hardware stack levels used: 1
 35067 ;; Hardware stack levels required when called: 2
 35068 ;; This function calls:
 35069 ;;		_tickGet
 35070 ;; This function is called by:
 35071 ;;		_canReceiveMessage
 35072 ;; This function uses a non-reentrant model
 35073 ;;
 35074                           
 35075                           	psect	text85
 35076   006446                     __ptext85:
 35077                           	callstack 0
 35078   006446                     _handleSelfEnumeration:
 35079                           	callstack 122
 35080                           
 35081                           ;incstack = 0
 35082                           ;handleSelfEnumeration@receivedCanId stored from wreg
 35083   006446  6E0F               	movwf	handleSelfEnumeration@receivedCanId^(0+1280),c
 35084   006448                     
 35085                           ;../../VLCBlib_PIC/can18_can_2.c: 802:     switch (enumerationState) {
 35086   006448  EF5D  F032         	goto	l8645
 35087   00644C                     l8633:
 35088                           
 35089                           ; BSR set to: 5
 35090                           ;../../VLCBlib_PIC/can18_can_2.c: 805:             ( enumerationResults[receivedCanId>>3
      +                          ] |= ( 1<<(receivedCanId & 0x07) ) );
 35091   00644C  C50F  F50B         	movff	handleSelfEnumeration@receivedCanId,??_handleSelfEnumeration
 35092   006450  0E07               	movlw	7
 35093   006452  160B               	andwf	??_handleSelfEnumeration^(0+1280),f,c
 35094   006454  0E01               	movlw	1
 35095   006456  6E0C               	movwf	(??_handleSelfEnumeration+1)^(0+1280),c
 35096   006458  2A0B               	incf	??_handleSelfEnumeration^(0+1280),f,c
 35097   00645A  EF31  F032         	goto	u6004
 35098   00645E                     u6005:
 35099   00645E  90D8               	bcf	status,0,c
 35100   006460  360C               	rlcf	(??_handleSelfEnumeration+1)^(0+1280),f,c
 35101   006462                     u6004:
 35102   006462  2E0B               	decfsz	??_handleSelfEnumeration^(0+1280),f,c
 35103   006464  EF2F  F032         	goto	u6005
 35104   006468  380F               	swapf	handleSelfEnumeration@receivedCanId^(0+1280),w,c
 35105   00646A  46E8               	rlncf	wreg,f,c
 35106   00646C  0B1F               	andlw	31
 35107   00646E  6E0D               	movwf	(??_handleSelfEnumeration+2)^(0+1280),c
 35108   006470  6A0E               	clrf	(??_handleSelfEnumeration+3)^(0+1280),c
 35109   006472  0E32               	movlw	low _enumerationResults
 35110   006474  240D               	addwf	(??_handleSelfEnumeration+2)^(0+1280),w,c
 35111   006476  6ED9               	movwf	fsr2l,c
 35112   006478  0E06               	movlw	high _enumerationResults
 35113   00647A  200E               	addwfc	(??_handleSelfEnumeration+3)^(0+1280),w,c
 35114   00647C  6EDA               	movwf	fsr2h,c
 35115   00647E  500C               	movf	(??_handleSelfEnumeration+1)^(0+1280),w,c
 35116   006480  12DF               	iorwf	indf2,f,c
 35117                           
 35118                           ;../../VLCBlib_PIC/can18_can_2.c: 806:             break;
 35119   006482  EF77  F032         	goto	l716
 35120   006486                     l8635:
 35121                           
 35122                           ; BSR set to: 5
 35123                           ;../../VLCBlib_PIC/can18_can_2.c: 808:             if (receivedCanId == canId) {
 35124   006486  51A8               	movf	_canId& (0+255),w,b
 35125   006488  180F               	xorwf	handleSelfEnumeration@receivedCanId^(0+1280),w,c
 35126   00648A  A4D8               	btfss	status,2,c
 35127   00648C  EF4A  F032         	goto	u6011
 35128   006490  EF4C  F032         	goto	u6010
 35129   006494                     u6011:
 35130   006494  EF77  F032         	goto	l716
 35131   006498                     u6010:
 35132   006498                     
 35133                           ; BSR set to: 5
 35134                           ;../../VLCBlib_PIC/can18_can_2.c: 811:                 enumerationState = ENUMERATION_RE
      +                          QUIRED;
 35135   006498  0E01               	movlw	1
 35136   00649A  6FA5               	movwf	_enumerationState& (0+255),b
 35137   00649C                     
 35138                           ; BSR set to: 5
 35139                           ;../../VLCBlib_PIC/can18_can_2.c: 813:                 canDiagnostics[0x0E].asUint++;
 35140   00649C  0106               	movlb	6	; () banked
 35141   00649E  4BAA               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 35142   0064A0  2BAB               	incf	(_canDiagnostics+29)& (0+255),f,b
 35143   0064A2                     
 35144                           ; BSR set to: 6
 35145                           ;../../VLCBlib_PIC/can18_can_2.c: 815:                 enumerationStartTime.val = tickGe
      +                          t();
 35146   0064A2  EC75  F039         	call	_tickGet	;wreg free
 35147   0064A6  C501  F574         	movff	?_tickGet,_enumerationStartTime
 35148   0064AA  C502  F575         	movff	?_tickGet+1,_enumerationStartTime+1
 35149   0064AE  C503  F576         	movff	?_tickGet+2,_enumerationStartTime+2
 35150   0064B2  C504  F577         	movff	?_tickGet+3,_enumerationStartTime+3
 35151   0064B6  EF77  F032         	goto	l716
 35152   0064BA                     l8645:
 35153   0064BA  0105               	movlb	5	; () banked
 35154   0064BC  51A5               	movf	_enumerationState& (0+255),w,b
 35155   0064BE  6E0B               	movwf	??_handleSelfEnumeration^(0+1280),c
 35156   0064C0  6A0C               	clrf	(??_handleSelfEnumeration+1)^(0+1280),c
 35157                           
 35158                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35159                           ; Switch size 1, requested type "simple"
 35160                           ; Number of cases is 1, Range of values is 0 to 0
 35161                           ; switch strategies available:
 35162                           ; Name         Instructions Cycles
 35163                           ; simple_byte            4     3 (average)
 35164                           ;	Chosen strategy is simple_byte
 35165   0064C2  500C               	movf	(??_handleSelfEnumeration+1)^(0+1280),w,c
 35166   0064C4  0A00               	xorlw	0	; case 0
 35167   0064C6  B4D8               	btfsc	status,2,c
 35168   0064C8  EF68  F032         	goto	l11607
 35169   0064CC  EF77  F032         	goto	l716
 35170   0064D0                     l11607:
 35171                           
 35172                           ; BSR set to: 5
 35173                           ; Switch size 1, requested type "simple"
 35174                           ; Number of cases is 3, Range of values is 0 to 3
 35175                           ; switch strategies available:
 35176                           ; Name         Instructions Cycles
 35177                           ; simple_byte           10     6 (average)
 35178                           ;	Chosen strategy is simple_byte
 35179   0064D0  500B               	movf	??_handleSelfEnumeration^(0+1280),w,c
 35180   0064D2  0A00               	xorlw	0	; case 0
 35181   0064D4  B4D8               	btfsc	status,2,c
 35182   0064D6  EF43  F032         	goto	l8635
 35183   0064DA  0A02               	xorlw	2	; case 2
 35184   0064DC  B4D8               	btfsc	status,2,c
 35185   0064DE  EF26  F032         	goto	l8633
 35186   0064E2  0A01               	xorlw	1	; case 3
 35187   0064E4  B4D8               	btfsc	status,2,c
 35188   0064E6  EF26  F032         	goto	l8633
 35189   0064EA  EF77  F032         	goto	l716
 35190   0064EE                     l716:
 35191   0064EE  0012               	return		;funcret
 35192   0064F0                     __end_of_handleSelfEnumeration:
 35193                           	callstack 0
 35194                           
 35195 ;; *************** function _sendMessage5 *****************
 35196 ;; Defined at:
 35197 ;;		line 1193 in file "../../VLCBlib_PIC/vlcb.c"
 35198 ;; Parameters:    Size  Location     Type
 35199 ;;  opc             1    wreg     enum E22928
 35200 ;;  data1           1   37[COMRAM] unsigned char 
 35201 ;;  data2           1   38[COMRAM] unsigned char 
 35202 ;;  data3           1   39[COMRAM] unsigned char 
 35203 ;;  data4           1   40[COMRAM] unsigned char 
 35204 ;;  data5           1   41[COMRAM] unsigned char 
 35205 ;; Auto vars:     Size  Location     Type
 35206 ;;  opc             1   42[COMRAM] enum E22928
 35207 ;; Return value:  Size  Location     Type
 35208 ;;                  1    wreg      void 
 35209 ;; Registers used:
 35210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 35211 ;; Tracked objects:
 35212 ;;		On entry : 0/0
 35213 ;;		On exit  : 0/0
 35214 ;;		Unchanged: 0/0
 35215 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35216 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35219 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35220 ;;Total ram usage:        6 bytes
 35221 ;; Hardware stack levels used: 1
 35222 ;; Hardware stack levels required when called: 5
 35223 ;; This function calls:
 35224 ;;		_sendMessage
 35225 ;; This function is called by:
 35226 ;;		_canProcessMessage
 35227 ;;		_teachProcessMessage
 35228 ;;		_teachCheckLen
 35229 ;;		_doNenrd
 35230 ;;		_doNnclr
 35231 ;;		_doEvlrn
 35232 ;;		_doReval
 35233 ;;		_doEvuln
 35234 ;;		_doReqev
 35235 ;;		_reqevCallback
 35236 ;;		_mnsProcessMessage
 35237 ;;		_mnsPoll
 35238 ;;		_mnsTRserviceDiscoveryCallback
 35239 ;;		_nvProcessMessage
 35240 ;;		_checkLen
 35241 ;; This function uses a non-reentrant model
 35242 ;;
 35243                           
 35244                           	psect	text86
 35245   008022                     __ptext86:
 35246                           	callstack 0
 35247   008022                     _sendMessage5:
 35248                           	callstack 118
 35249                           
 35250                           ;incstack = 0
 35251                           ;sendMessage5@opc stored from wreg
 35252   008022  6E2B               	movwf	sendMessage5@opc^(0+1280),c
 35253   008024                     
 35254                           ;../../VLCBlib_PIC/vlcb.c: 1194:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 35255   008024  0E06               	movlw	6
 35256   008026  6E1B               	movwf	sendMessage@len^(0+1280),c
 35257   008028  C526  F51C         	movff	sendMessage5@data1,sendMessage@data1
 35258   00802C  C527  F51D         	movff	sendMessage5@data2,sendMessage@data2
 35259   008030  C528  F51E         	movff	sendMessage5@data3,sendMessage@data3
 35260   008034  C529  F51F         	movff	sendMessage5@data4,sendMessage@data4
 35261   008038  C52A  F520         	movff	sendMessage5@data5,sendMessage@data5
 35262   00803C  0E00               	movlw	0
 35263   00803E  6E21               	movwf	sendMessage@data6^(0+1280),c
 35264   008040  0E00               	movlw	0
 35265   008042  6E22               	movwf	sendMessage@data7^(0+1280),c
 35266   008044  502B               	movf	sendMessage5@opc^(0+1280),w,c
 35267   008046  ECDF  F035         	call	_sendMessage
 35268   00804A  0012               	return		;funcret
 35269   00804C                     __end_of_sendMessage5:
 35270                           	callstack 0
 35271                           
 35272 ;; *************** function _sendMessage *****************
 35273 ;; Defined at:
 35274 ;;		line 1238 in file "../../VLCBlib_PIC/vlcb.c"
 35275 ;; Parameters:    Size  Location     Type
 35276 ;;  opc             1    wreg     enum E22928
 35277 ;;  len             1   26[COMRAM] unsigned char 
 35278 ;;  data1           1   27[COMRAM] unsigned char 
 35279 ;;  data2           1   28[COMRAM] unsigned char 
 35280 ;;  data3           1   29[COMRAM] unsigned char 
 35281 ;;  data4           1   30[COMRAM] unsigned char 
 35282 ;;  data5           1   31[COMRAM] unsigned char 
 35283 ;;  data6           1   32[COMRAM] unsigned char 
 35284 ;;  data7           1   33[COMRAM] unsigned char 
 35285 ;; Auto vars:     Size  Location     Type
 35286 ;;  opc             1   36[COMRAM] enum E22928
 35287 ;; Return value:  Size  Location     Type
 35288 ;;                  1    wreg      void 
 35289 ;; Registers used:
 35290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 35291 ;; Tracked objects:
 35292 ;;		On entry : 0/0
 35293 ;;		On exit  : 0/0
 35294 ;;		Unchanged: 0/0
 35295 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35296 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35297 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35298 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35299 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35300 ;;Total ram usage:       11 bytes
 35301 ;; Hardware stack levels used: 1
 35302 ;; Hardware stack levels required when called: 4
 35303 ;; This function calls:
 35304 ;;		_canSendMessage
 35305 ;; This function is called by:
 35306 ;;		_sendMessage2
 35307 ;;		_sendMessage3
 35308 ;;		_sendMessage4
 35309 ;;		_sendMessage5
 35310 ;;		_sendMessage6
 35311 ;;		_sendMessage7
 35312 ;;		_sendMessage0
 35313 ;;		_sendMessage1
 35314 ;; This function uses a non-reentrant model
 35315 ;;
 35316                           
 35317                           	psect	text87
 35318   006BBE                     __ptext87:
 35319                           	callstack 0
 35320   006BBE                     _sendMessage:
 35321                           	callstack 118
 35322                           
 35323                           ;incstack = 0
 35324                           ;sendMessage@opc stored from wreg
 35325   006BBE  6E25               	movwf	sendMessage@opc^(0+1280),c
 35326   006BC0                     
 35327                           ;../../VLCBlib_PIC/vlcb.c: 1239:     tmpMessage.opc = opc;
 35328   006BC0  C525  F6B5         	movff	sendMessage@opc,_tmpMessage+1
 35329   006BC4                     
 35330                           ;../../VLCBlib_PIC/vlcb.c: 1240:     tmpMessage.len = len;
 35331   006BC4  C51B  F6B4         	movff	sendMessage@len,_tmpMessage
 35332   006BC8                     
 35333                           ;../../VLCBlib_PIC/vlcb.c: 1241:     tmpMessage.bytes[0] = data1;
 35334   006BC8  C51C  F6B6         	movff	sendMessage@data1,_tmpMessage+2
 35335   006BCC                     
 35336                           ;../../VLCBlib_PIC/vlcb.c: 1242:     tmpMessage.bytes[1] = data2;
 35337   006BCC  C51D  F6B7         	movff	sendMessage@data2,_tmpMessage+3
 35338   006BD0                     
 35339                           ;../../VLCBlib_PIC/vlcb.c: 1243:     tmpMessage.bytes[2] = data3;
 35340   006BD0  C51E  F6B8         	movff	sendMessage@data3,_tmpMessage+4
 35341   006BD4                     
 35342                           ;../../VLCBlib_PIC/vlcb.c: 1244:     tmpMessage.bytes[3] = data4;
 35343   006BD4  C51F  F6B9         	movff	sendMessage@data4,_tmpMessage+5
 35344   006BD8                     
 35345                           ;../../VLCBlib_PIC/vlcb.c: 1245:     tmpMessage.bytes[4] = data5;
 35346   006BD8  C520  F6BA         	movff	sendMessage@data5,_tmpMessage+6
 35347   006BDC                     
 35348                           ;../../VLCBlib_PIC/vlcb.c: 1246:     tmpMessage.bytes[5] = data6;
 35349   006BDC  C521  F6BB         	movff	sendMessage@data6,_tmpMessage+7
 35350   006BE0                     
 35351                           ;../../VLCBlib_PIC/vlcb.c: 1247:     tmpMessage.bytes[6] = data7;
 35352   006BE0  C522  F6BC         	movff	sendMessage@data7,_tmpMessage+8
 35353   006BE4                     
 35354                           ;../../VLCBlib_PIC/vlcb.c: 1248:     if (transport != ((void*)0)) {
 35355   006BE4  0105               	movlb	5	; () banked
 35356   006BE6  5191               	movf	_transport& (0+255),w,b
 35357   006BE8  1192               	iorwf	(_transport+1)& (0+255),w,b
 35358   006BEA  B4D8               	btfsc	status,2,c
 35359   006BEC  EFFA  F035         	goto	u5081
 35360   006BF0  EFFC  F035         	goto	u5080
 35361   006BF4                     u5081:
 35362   006BF4  EF27  F036         	goto	l2088
 35363   006BF8                     u5080:
 35364   006BF8                     
 35365                           ; BSR set to: 5
 35366                           ;../../VLCBlib_PIC/vlcb.c: 1249:         if (transport->sendMessage != ((void*)0)) {
 35367   006BF8  C591  F4F6         	movff	_transport,tblptrl
 35368   006BFC  C592  F4F7         	movff	_transport+1,tblptrh
 35369   006C00                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35370   006C00  6AF8               	clrf	tblptru,c
 35371   006C02                     	endif
 35372   006C02                     	if	0	;tblptru may be non-zero
 35373   006C02                     	endif
 35374   006C02  0009               	tblrd		*+
 35375   006C04  50F5               	movf	tablat,w,c
 35376   006C06  0009               	tblrd		*+
 35377   006C08  10F5               	iorwf	tablat,w,c
 35378   006C0A  B4D8               	btfsc	status,2,c
 35379   006C0C  EF0A  F036         	goto	u5091
 35380   006C10  EF0C  F036         	goto	u5090
 35381   006C14                     u5091:
 35382   006C14  EF27  F036         	goto	l2088
 35383   006C18                     u5090:
 35384   006C18                     
 35385                           ; BSR set to: 5
 35386                           ;../../VLCBlib_PIC/vlcb.c: 1250:             transport->sendMessage(&tmpMessage);
 35387   006C18  0EB4               	movlw	low _tmpMessage
 35388   006C1A  6E0D               	movwf	canSendMessage@mp^(0+1280),c
 35389   006C1C  0E06               	movlw	high _tmpMessage
 35390   006C1E  6E0E               	movwf	(canSendMessage@mp+1)^(0+1280),c
 35391   006C20  C591  F4F6         	movff	_transport,tblptrl
 35392   006C24  C592  F4F7         	movff	_transport+1,tblptrh
 35393   006C28                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35394   006C28  6AF8               	clrf	tblptru,c
 35395   006C2A                     	endif
 35396   006C2A                     	if	0	;tblptru may be non-zero
 35397   006C2A                     	endif
 35398   006C2A  0009               	tblrd		*+
 35399   006C2C  C4F5 F523          	movff	tablat,??_sendMessage
 35400   006C30  0009               	tblrd		*+
 35401   006C32  C4F5 F524          	movff	tablat,??_sendMessage+1
 35402   006C36  D802               	call	u5108
 35403   006C38  EF27  F036         	goto	u5109
 35404   006C3C                     u5108:
 35405   006C3C  0005               	push	
 35406   006C3E  6EFA               	movwf	pclath,c
 35407   006C40  5023               	movf	??_sendMessage^(0+1280),w,c
 35408   006C42  6EFD               	movwf	tosl,c
 35409   006C44  5024               	movf	(??_sendMessage+1)^(0+1280),w,c
 35410   006C46  6EFE               	movwf	tosh,c
 35411   006C48  6AFF               	clrf	tosu,c
 35412   006C4A  50FA               	movf	pclath,w,c
 35413   006C4C  0012               	return		;indir
 35414   006C4E                     u5109:
 35415   006C4E                     l2088:
 35416   006C4E  0012               	return		;funcret
 35417   006C50                     __end_of_sendMessage:
 35418                           	callstack 0
 35419                           
 35420 ;; *************** function _canSendMessage *****************
 35421 ;; Defined at:
 35422 ;;		line 570 in file "../../VLCBlib_PIC/can18_can_2.c"
 35423 ;; Parameters:    Size  Location     Type
 35424 ;;  mp              2   12[COMRAM] PTR struct Message
 35425 ;;		 -> tmpMessage(9), 
 35426 ;; Auto vars:     Size  Location     Type
 35427 ;;  txFifoObj       2   24[COMRAM] PTR unsigned char 
 35428 ;;		 -> RAM(16383), 
 35429 ;;  m               2   22[COMRAM] PTR struct Message
 35430 ;;		 -> rxBuffers(72), NULL(0), 
 35431 ;;  temp            2   20[COMRAM] unsigned short 
 35432 ;;  i               1    0        unsigned char 
 35433 ;; Return value:  Size  Location     Type
 35434 ;;                  1    wreg      enum E23618
 35435 ;; Registers used:
 35436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35437 ;; Tracked objects:
 35438 ;;		On entry : 0/0
 35439 ;;		On exit  : 0/0
 35440 ;;		Unchanged: 0/0
 35441 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35443 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35444 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35445 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35446 ;;Total ram usage:       14 bytes
 35447 ;; Hardware stack levels used: 1
 35448 ;; Hardware stack levels required when called: 3
 35449 ;; This function calls:
 35450 ;;		_getNextWriteMessage
 35451 ;;		_getNumRxBuffersInUse
 35452 ;;		_getNumTxBuffersInUse
 35453 ;;		_have
 35454 ;;		_isEvent
 35455 ;;		_startEnumeration
 35456 ;;		_updateModuleErrorStatus
 35457 ;; This function is called by:
 35458 ;;		_sendMessage
 35459 ;; This function uses a non-reentrant model
 35460 ;;
 35461                           
 35462                           	psect	text88
 35463   002A9E                     __ptext88:
 35464                           	callstack 0
 35465   002A9E                     _canSendMessage:
 35466                           	callstack 118
 35467   002A9E                     
 35468                           ;../../VLCBlib_PIC/can18_can_2.c: 571:     uint8_t i;;../../VLCBlib_PIC/can18_can_2.c: 5
      +                          72:     uint8_t* txFifoObj;;../../VLCBlib_PIC/can18_can_2.c: 574:     uint16_t temp;;../
      +                          ../VLCBlib_PIC/can18_can_2.c: 577:     Message * m;;../../VLCBlib_PIC/can18_can_2.c: 581
      +                          :     if (isEvent((uint8_t)(mp->opc))) {
 35469   002A9E  EE20 F001          	lfsr	2,1
 35470   002AA2  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35471   002AA4  26D9               	addwf	fsr2l,f,c
 35472   002AA6  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35473   002AA8  22DA               	addwfc	fsr2h,f,c
 35474   002AAA  50DF               	movf	indf2,w,c
 35475   002AAC  EC65  F03E         	call	_isEvent
 35476   002AB0  0900               	iorlw	0
 35477   002AB2  B4D8               	btfsc	status,2,c
 35478   002AB4  EF5E  F015         	goto	u4851
 35479   002AB8  EF60  F015         	goto	u4850
 35480   002ABC                     u4851:
 35481   002ABC  EF15  F016         	goto	l668
 35482   002AC0                     u4850:
 35483   002AC0                     
 35484                           ;../../VLCBlib_PIC/can18_can_2.c: 582:         if (have(SERVICE_ID_CONSUME_OWN_EVENTS)) 
      +                          {
 35485   002AC0  0E08               	movlw	8
 35486   002AC2  ECB5  F036         	call	_have
 35487   002AC6  0900               	iorlw	0
 35488   002AC8  B4D8               	btfsc	status,2,c
 35489   002ACA  EF69  F015         	goto	u4861
 35490   002ACE  EF6B  F015         	goto	u4860
 35491   002AD2                     u4861:
 35492   002AD2  EF15  F016         	goto	l668
 35493   002AD6                     u4860:
 35494   002AD6                     
 35495                           ;../../VLCBlib_PIC/can18_can_2.c: 584:             m = getNextWriteMessage(&rxQueue);
 35496   002AD6  0EC7               	movlw	low _rxQueue
 35497   002AD8  6E01               	movwf	getNextWriteMessage@q^(0+1280),c
 35498   002ADA  0E05               	movlw	high _rxQueue
 35499   002ADC  6E02               	movwf	(getNextWriteMessage@q+1)^(0+1280),c
 35500   002ADE  EC10  F02C         	call	_getNextWriteMessage	;wreg free
 35501   002AE2  C501  F517         	movff	?_getNextWriteMessage,canSendMessage@m
 35502   002AE6  C502  F518         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 35503   002AEA                     
 35504                           ;../../VLCBlib_PIC/can18_can_2.c: 585:             if (m == ((void*)0)) {
 35505   002AEA  5017               	movf	canSendMessage@m^(0+1280),w,c
 35506   002AEC  1018               	iorwf	(canSendMessage@m+1)^(0+1280),w,c
 35507   002AEE  A4D8               	btfss	status,2,c
 35508   002AF0  EF7C  F015         	goto	u4871
 35509   002AF4  EF7E  F015         	goto	u4870
 35510   002AF8                     u4871:
 35511   002AF8  EF85  F015         	goto	l7505
 35512   002AFC                     u4870:
 35513   002AFC                     
 35514                           ;../../VLCBlib_PIC/can18_can_2.c: 587:                 canDiagnostics[0x08].asUint++;
 35515   002AFC  0106               	movlb	6	; () banked
 35516   002AFE  4B9E               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 35517   002B00  2B9F               	incf	(_canDiagnostics+17)& (0+255),f,b
 35518   002B02                     
 35519                           ; BSR set to: 6
 35520                           ;../../VLCBlib_PIC/can18_can_2.c: 588:                 updateModuleErrorStatus();
 35521   002B02  ECEC  F040         	call	_updateModuleErrorStatus	;wreg free
 35522                           
 35523                           ;../../VLCBlib_PIC/can18_can_2.c: 590:             } else {
 35524   002B06  EFFF  F015         	goto	l7523
 35525   002B0A                     l7505:
 35526                           
 35527                           ;../../VLCBlib_PIC/can18_can_2.c: 592:                 m->opc = mp->opc;
 35528   002B0A  EE20 F001          	lfsr	2,1
 35529   002B0E  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35530   002B10  26D9               	addwf	fsr2l,f,c
 35531   002B12  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35532   002B14  22DA               	addwfc	fsr2h,f,c
 35533   002B16  EE10 F001          	lfsr	1,1
 35534   002B1A  5017               	movf	canSendMessage@m^(0+1280),w,c
 35535   002B1C  26E1               	addwf	fsr1l,f,c
 35536   002B1E  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35537   002B20  22E2               	addwfc	fsr1h,f,c
 35538   002B22  C4DF F4E7          	movff	indf2,indf1
 35539   002B26                     
 35540                           ;../../VLCBlib_PIC/can18_can_2.c: 593:                 m->len = mp->len;
 35541   002B26  C50D  F4D9         	movff	canSendMessage@mp,fsr2l
 35542   002B2A  C50E  F4DA         	movff	canSendMessage@mp+1,fsr2h
 35543   002B2E  C517  F4E1         	movff	canSendMessage@m,fsr1l
 35544   002B32  C518  F4E2         	movff	canSendMessage@m+1,fsr1h
 35545   002B36  C4DF F4E7          	movff	indf2,indf1
 35546   002B3A                     
 35547                           ;../../VLCBlib_PIC/can18_can_2.c: 594:                 m->bytes[0] = mp->bytes[0];
 35548   002B3A  EE20 F002          	lfsr	2,2
 35549   002B3E  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35550   002B40  26D9               	addwf	fsr2l,f,c
 35551   002B42  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35552   002B44  22DA               	addwfc	fsr2h,f,c
 35553   002B46  EE10 F002          	lfsr	1,2
 35554   002B4A  5017               	movf	canSendMessage@m^(0+1280),w,c
 35555   002B4C  26E1               	addwf	fsr1l,f,c
 35556   002B4E  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35557   002B50  22E2               	addwfc	fsr1h,f,c
 35558   002B52  C4DF F4E7          	movff	indf2,indf1
 35559   002B56                     
 35560                           ;../../VLCBlib_PIC/can18_can_2.c: 595:                 m->bytes[1] = mp->bytes[1];
 35561   002B56  EE20 F003          	lfsr	2,3
 35562   002B5A  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35563   002B5C  26D9               	addwf	fsr2l,f,c
 35564   002B5E  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35565   002B60  22DA               	addwfc	fsr2h,f,c
 35566   002B62  EE10 F003          	lfsr	1,3
 35567   002B66  5017               	movf	canSendMessage@m^(0+1280),w,c
 35568   002B68  26E1               	addwf	fsr1l,f,c
 35569   002B6A  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35570   002B6C  22E2               	addwfc	fsr1h,f,c
 35571   002B6E  C4DF F4E7          	movff	indf2,indf1
 35572   002B72                     
 35573                           ;../../VLCBlib_PIC/can18_can_2.c: 596:                 m->bytes[2] = mp->bytes[2];
 35574   002B72  EE20 F004          	lfsr	2,4
 35575   002B76  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35576   002B78  26D9               	addwf	fsr2l,f,c
 35577   002B7A  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35578   002B7C  22DA               	addwfc	fsr2h,f,c
 35579   002B7E  EE10 F004          	lfsr	1,4
 35580   002B82  5017               	movf	canSendMessage@m^(0+1280),w,c
 35581   002B84  26E1               	addwf	fsr1l,f,c
 35582   002B86  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35583   002B88  22E2               	addwfc	fsr1h,f,c
 35584   002B8A  C4DF F4E7          	movff	indf2,indf1
 35585   002B8E                     
 35586                           ;../../VLCBlib_PIC/can18_can_2.c: 597:                 m->bytes[3] = mp->bytes[3];
 35587   002B8E  EE20 F005          	lfsr	2,5
 35588   002B92  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35589   002B94  26D9               	addwf	fsr2l,f,c
 35590   002B96  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35591   002B98  22DA               	addwfc	fsr2h,f,c
 35592   002B9A  EE10 F005          	lfsr	1,5
 35593   002B9E  5017               	movf	canSendMessage@m^(0+1280),w,c
 35594   002BA0  26E1               	addwf	fsr1l,f,c
 35595   002BA2  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35596   002BA4  22E2               	addwfc	fsr1h,f,c
 35597   002BA6  C4DF F4E7          	movff	indf2,indf1
 35598   002BAA                     
 35599                           ;../../VLCBlib_PIC/can18_can_2.c: 598:                 m->bytes[4] = mp->bytes[4];
 35600   002BAA  EE20 F006          	lfsr	2,6
 35601   002BAE  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35602   002BB0  26D9               	addwf	fsr2l,f,c
 35603   002BB2  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35604   002BB4  22DA               	addwfc	fsr2h,f,c
 35605   002BB6  EE10 F006          	lfsr	1,6
 35606   002BBA  5017               	movf	canSendMessage@m^(0+1280),w,c
 35607   002BBC  26E1               	addwf	fsr1l,f,c
 35608   002BBE  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35609   002BC0  22E2               	addwfc	fsr1h,f,c
 35610   002BC2  C4DF F4E7          	movff	indf2,indf1
 35611   002BC6                     
 35612                           ;../../VLCBlib_PIC/can18_can_2.c: 599:                 m->bytes[5] = mp->bytes[5];
 35613   002BC6  EE20 F007          	lfsr	2,7
 35614   002BCA  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35615   002BCC  26D9               	addwf	fsr2l,f,c
 35616   002BCE  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35617   002BD0  22DA               	addwfc	fsr2h,f,c
 35618   002BD2  EE10 F007          	lfsr	1,7
 35619   002BD6  5017               	movf	canSendMessage@m^(0+1280),w,c
 35620   002BD8  26E1               	addwf	fsr1l,f,c
 35621   002BDA  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35622   002BDC  22E2               	addwfc	fsr1h,f,c
 35623   002BDE  C4DF F4E7          	movff	indf2,indf1
 35624   002BE2                     
 35625                           ;../../VLCBlib_PIC/can18_can_2.c: 600:                 m->bytes[6] = mp->bytes[6];
 35626   002BE2  EE20 F008          	lfsr	2,8
 35627   002BE6  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35628   002BE8  26D9               	addwf	fsr2l,f,c
 35629   002BEA  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35630   002BEC  22DA               	addwfc	fsr2h,f,c
 35631   002BEE  EE10 F008          	lfsr	1,8
 35632   002BF2  5017               	movf	canSendMessage@m^(0+1280),w,c
 35633   002BF4  26E1               	addwf	fsr1l,f,c
 35634   002BF6  5018               	movf	(canSendMessage@m+1)^(0+1280),w,c
 35635   002BF8  22E2               	addwfc	fsr1h,f,c
 35636   002BFA  C4DF F4E7          	movff	indf2,indf1
 35637   002BFE                     l7523:
 35638                           
 35639                           ;../../VLCBlib_PIC/can18_can_2.c: 603:             temp = getNumRxBuffersInUse();
 35640   002BFE  ECB0  F039         	call	_getNumRxBuffersInUse	;wreg free
 35641   002C02  6E0F               	movwf	??_canSendMessage^(0+1280),c
 35642   002C04  500F               	movf	??_canSendMessage^(0+1280),w,c
 35643   002C06  6E15               	movwf	canSendMessage@temp^(0+1280),c
 35644   002C08  6A16               	clrf	(canSendMessage@temp+1)^(0+1280),c
 35645   002C0A                     
 35646                           ;../../VLCBlib_PIC/can18_can_2.c: 604:             if (temp > canDiagnostics[0x12].asUin
      +                          t) {
 35647   002C0A  5015               	movf	canSendMessage@temp^(0+1280),w,c
 35648   002C0C  0106               	movlb	6	; () banked
 35649   002C0E  5DB2               	subwf	(_canDiagnostics+36)& (0+255),w,b
 35650   002C10  5016               	movf	(canSendMessage@temp+1)^(0+1280),w,c
 35651   002C12  59B3               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 35652   002C14  B0D8               	btfsc	status,0,c
 35653   002C16  EF0F  F016         	goto	u4881
 35654   002C1A  EF11  F016         	goto	u4880
 35655   002C1E                     u4881:
 35656   002C1E  EF15  F016         	goto	l668
 35657   002C22                     u4880:
 35658   002C22                     
 35659                           ; BSR set to: 6
 35660                           ;../../VLCBlib_PIC/can18_can_2.c: 605:                 canDiagnostics[0x12].asUint = tem
      +                          p;
 35661   002C22  C515  F6B2         	movff	canSendMessage@temp,_canDiagnostics+36
 35662   002C26  C516  F6B3         	movff	canSendMessage@temp+1,_canDiagnostics+37
 35663   002C2A                     l668:
 35664                           
 35665                           ;../../VLCBlib_PIC/can18_can_2.c: 612:     if (!C1FIFOSTA2Lbits.TFNRFNIF) {
 35666   002C2A  0101               	movlb	1	; () banked
 35667   002C2C  B16C               	btfsc	108,0,b	;volatile
 35668   002C2E  EF1B  F016         	goto	u4891
 35669   002C32  EF1D  F016         	goto	u4890
 35670   002C36                     u4891:
 35671   002C36  EF24  F016         	goto	l673
 35672   002C3A                     u4890:
 35673   002C3A                     
 35674                           ; BSR set to: 1
 35675                           ;../../VLCBlib_PIC/can18_can_2.c: 614:         canDiagnostics[0x05].asUint++;
 35676   002C3A  0106               	movlb	6	; () banked
 35677   002C3C  4B98               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 35678   002C3E  2B99               	incf	(_canDiagnostics+11)& (0+255),f,b
 35679   002C40                     
 35680                           ; BSR set to: 6
 35681                           ;../../VLCBlib_PIC/can18_can_2.c: 615:         updateModuleErrorStatus();
 35682   002C40  ECEC  F040         	call	_updateModuleErrorStatus	;wreg free
 35683   002C44  EF62  F017         	goto	l674
 35684   002C48                     l673:
 35685                           
 35686                           ; BSR set to: 1
 35687                           ;../../VLCBlib_PIC/can18_can_2.c: 623:     if (C1FIFOSTA2Lbits.TXLARB == 1) {
 35688   002C48  AD6C               	btfss	108,6,b	;volatile
 35689   002C4A  EF29  F016         	goto	u4901
 35690   002C4E  EF2B  F016         	goto	u4900
 35691   002C52                     u4901:
 35692   002C52  EF2E  F016         	goto	l7537
 35693   002C56                     u4900:
 35694   002C56                     
 35695                           ; BSR set to: 1
 35696                           ;../../VLCBlib_PIC/can18_can_2.c: 624:         canDiagnostics[0x0C].asUint++;
 35697   002C56  0106               	movlb	6	; () banked
 35698   002C58  4BA6               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 35699   002C5A  2BA7               	incf	(_canDiagnostics+25)& (0+255),f,b
 35700   002C5C                     l7537:
 35701                           
 35702                           ;../../VLCBlib_PIC/can18_can_2.c: 629:     if ((canId == 0) && (enumerationState == NO_E
      +                          NUMERATION)) {
 35703   002C5C  0105               	movlb	5	; () banked
 35704   002C5E  51A8               	movf	_canId& (0+255),w,b
 35705   002C60  A4D8               	btfss	status,2,c
 35706   002C62  EF35  F016         	goto	u4911
 35707   002C66  EF37  F016         	goto	u4910
 35708   002C6A                     u4911:
 35709   002C6A  EF43  F016         	goto	l7543
 35710   002C6E                     u4910:
 35711   002C6E                     
 35712                           ; BSR set to: 5
 35713   002C6E  51A5               	movf	_enumerationState& (0+255),w,b
 35714   002C70  A4D8               	btfss	status,2,c
 35715   002C72  EF3D  F016         	goto	u4921
 35716   002C76  EF3F  F016         	goto	u4920
 35717   002C7A                     u4921:
 35718   002C7A  EF43  F016         	goto	l7543
 35719   002C7E                     u4920:
 35720   002C7E                     
 35721                           ; BSR set to: 5
 35722                           ;../../VLCBlib_PIC/can18_can_2.c: 630:         enumerationState = ENUMERATION_REQUIRED;
 35723   002C7E  0E01               	movlw	1
 35724   002C80  6FA5               	movwf	_enumerationState& (0+255),b
 35725                           
 35726                           ;../../VLCBlib_PIC/can18_can_2.c: 631:         canId = 1;
 35727   002C82  0E01               	movlw	1
 35728   002C84  6FA8               	movwf	_canId& (0+255),b
 35729   002C86                     l7543:
 35730                           
 35731                           ; BSR set to: 5
 35732                           ;../../VLCBlib_PIC/can18_can_2.c: 635:     txFifoObj = (uint8_t*) C1FIFOUA2;
 35733   002C86  C170 F519          	movff	368,canSendMessage@txFifoObj	;volatile
 35734   002C8A  C171 F51A          	movff	369,canSendMessage@txFifoObj+1	;volatile
 35735   002C8E                     
 35736                           ; BSR set to: 5
 35737                           ;../../VLCBlib_PIC/can18_can_2.c: 636:     txFifoObj[0] = (uint8_t)((canPri[priorities[m
      +                          p->opc]] & 1) << 7) | (canId & 0x7F);
 35738   002C8E  C5A8  F50F         	movff	_canId,??_canSendMessage
 35739   002C92  0E7F               	movlw	127
 35740   002C94  160F               	andwf	??_canSendMessage^(0+1280),f,c
 35741   002C96  EE20 F001          	lfsr	2,1
 35742   002C9A  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35743   002C9C  26D9               	addwf	fsr2l,f,c
 35744   002C9E  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35745   002CA0  22DA               	addwfc	fsr2h,f,c
 35746   002CA2  50DF               	movf	indf2,w,c
 35747   002CA4  6E10               	movwf	(??_canSendMessage+1)^(0+1280),c
 35748   002CA6  6A11               	clrf	(??_canSendMessage+2)^(0+1280),c
 35749   002CA8  0E59               	movlw	low _priorities
 35750   002CAA  2410               	addwf	(??_canSendMessage+1)^(0+1280),w,c
 35751   002CAC  6EF6               	movwf	tblptrl,c
 35752   002CAE  0EFE               	movlw	high _priorities
 35753   002CB0  2011               	addwfc	(??_canSendMessage+2)^(0+1280),w,c
 35754   002CB2  6EF7               	movwf	tblptrh,c
 35755   002CB4                     	if	1	;There are 3 active tblptr bytes
 35756   002CB4  6AF8               	clrf	tblptru,c
 35757   002CB6  0E00               	movlw	low (__mediumconst shr (0+16))
 35758   002CB8  22F8               	addwfc	tblptru,f,c
 35759   002CBA                     	endif
 35760   002CBA  0008               	tblrd		*
 35761   002CBC  50F5               	movf	tablat,w,c
 35762   002CBE  6E12               	movwf	(??_canSendMessage+3)^(0+1280),c
 35763   002CC0  6A13               	clrf	(??_canSendMessage+4)^(0+1280),c
 35764   002CC2  0EA0               	movlw	low _canPri
 35765   002CC4  2412               	addwf	(??_canSendMessage+3)^(0+1280),w,c
 35766   002CC6  6EF6               	movwf	tblptrl,c
 35767   002CC8  0EFF               	movlw	high _canPri
 35768   002CCA  2013               	addwfc	(??_canSendMessage+4)^(0+1280),w,c
 35769   002CCC  6EF7               	movwf	tblptrh,c
 35770   002CCE                     	if	1	;There are 3 active tblptr bytes
 35771   002CCE  6AF8               	clrf	tblptru,c
 35772   002CD0  0E00               	movlw	low (__mediumconst shr (0+16))
 35773   002CD2  22F8               	addwfc	tblptru,f,c
 35774   002CD4                     	endif
 35775   002CD4  0008               	tblrd		*
 35776   002CD6  C4F5 F514          	movff	tablat,??_canSendMessage+5
 35777   002CDA  0E01               	movlw	1
 35778   002CDC  1614               	andwf	(??_canSendMessage+5)^(0+1280),f,c
 35779   002CDE  0E00               	movlw	0
 35780   002CE0  B014               	btfsc	(??_canSendMessage+5)^(0+1280),0,c
 35781   002CE2  0E80               	movlw	128
 35782   002CE4  6E14               	movwf	(??_canSendMessage+5)^(0+1280),c
 35783   002CE6  5014               	movf	(??_canSendMessage+5)^(0+1280),w,c
 35784   002CE8  100F               	iorwf	??_canSendMessage^(0+1280),w,c
 35785   002CEA  C519  F4D9         	movff	canSendMessage@txFifoObj,fsr2l
 35786   002CEE  C51A  F4DA         	movff	canSendMessage@txFifoObj+1,fsr2h
 35787   002CF2  6EDF               	movwf	indf2,c
 35788   002CF4                     
 35789                           ; BSR set to: 5
 35790                           ;../../VLCBlib_PIC/can18_can_2.c: 637:     txFifoObj[1] = canPri[priorities[mp->opc]] >>
      +                           1;
 35791   002CF4  EE20 F001          	lfsr	2,1
 35792   002CF8  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35793   002CFA  26D9               	addwf	fsr2l,f,c
 35794   002CFC  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35795   002CFE  22DA               	addwfc	fsr2h,f,c
 35796   002D00  EE10 F001          	lfsr	1,1
 35797   002D04  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35798   002D06  26E1               	addwf	fsr1l,f,c
 35799   002D08  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35800   002D0A  22E2               	addwfc	fsr1h,f,c
 35801   002D0C  50E7               	movf	indf1,w,c
 35802   002D0E  6E0F               	movwf	??_canSendMessage^(0+1280),c
 35803   002D10  6A10               	clrf	(??_canSendMessage+1)^(0+1280),c
 35804   002D12  0E59               	movlw	low _priorities
 35805   002D14  240F               	addwf	??_canSendMessage^(0+1280),w,c
 35806   002D16  6EF6               	movwf	tblptrl,c
 35807   002D18  0EFE               	movlw	high _priorities
 35808   002D1A  2010               	addwfc	(??_canSendMessage+1)^(0+1280),w,c
 35809   002D1C  6EF7               	movwf	tblptrh,c
 35810   002D1E                     	if	1	;There are 3 active tblptr bytes
 35811   002D1E  6AF8               	clrf	tblptru,c
 35812   002D20  0E00               	movlw	low (__mediumconst shr (0+16))
 35813   002D22  22F8               	addwfc	tblptru,f,c
 35814   002D24                     	endif
 35815   002D24  0008               	tblrd		*
 35816   002D26  50F5               	movf	tablat,w,c
 35817   002D28  6E11               	movwf	(??_canSendMessage+2)^(0+1280),c
 35818   002D2A  6A12               	clrf	(??_canSendMessage+3)^(0+1280),c
 35819   002D2C  0EA0               	movlw	low _canPri
 35820   002D2E  2411               	addwf	(??_canSendMessage+2)^(0+1280),w,c
 35821   002D30  6EF6               	movwf	tblptrl,c
 35822   002D32  0EFF               	movlw	high _canPri
 35823   002D34  2012               	addwfc	(??_canSendMessage+3)^(0+1280),w,c
 35824   002D36  6EF7               	movwf	tblptrh,c
 35825   002D38                     	if	1	;There are 3 active tblptr bytes
 35826   002D38  6AF8               	clrf	tblptru,c
 35827   002D3A  0E00               	movlw	low (__mediumconst shr (0+16))
 35828   002D3C  22F8               	addwfc	tblptru,f,c
 35829   002D3E                     	endif
 35830   002D3E  0008               	tblrd		*
 35831   002D40  C4F5 F513          	movff	tablat,??_canSendMessage+4
 35832   002D44  90D8               	bcf	status,0,c
 35833   002D46  3013               	rrcf	(??_canSendMessage+4)^(0+1280),w,c
 35834   002D48  6EDF               	movwf	indf2,c
 35835   002D4A                     
 35836                           ; BSR set to: 5
 35837                           ;../../VLCBlib_PIC/can18_can_2.c: 638:     txFifoObj[4] = (mp->len&0xF);
 35838   002D4A  EE20 F004          	lfsr	2,4
 35839   002D4E  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35840   002D50  26D9               	addwf	fsr2l,f,c
 35841   002D52  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35842   002D54  22DA               	addwfc	fsr2h,f,c
 35843   002D56  C50D  F4E1         	movff	canSendMessage@mp,fsr1l
 35844   002D5A  C50E  F4E2         	movff	canSendMessage@mp+1,fsr1h
 35845   002D5E  50E7               	movf	indf1,w,c
 35846   002D60  0B0F               	andlw	15
 35847   002D62  6EDF               	movwf	indf2,c
 35848   002D64                     
 35849                           ; BSR set to: 5
 35850                           ;../../VLCBlib_PIC/can18_can_2.c: 639:     txFifoObj[5] = 0;
 35851   002D64  EE20 F005          	lfsr	2,5
 35852   002D68  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35853   002D6A  26D9               	addwf	fsr2l,f,c
 35854   002D6C  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35855   002D6E  22DA               	addwfc	fsr2h,f,c
 35856   002D70  6ADF               	clrf	indf2,c
 35857   002D72                     
 35858                           ; BSR set to: 5
 35859                           ;../../VLCBlib_PIC/can18_can_2.c: 640:     txFifoObj[6] = 0;
 35860   002D72  EE20 F006          	lfsr	2,6
 35861   002D76  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35862   002D78  26D9               	addwf	fsr2l,f,c
 35863   002D7A  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35864   002D7C  22DA               	addwfc	fsr2h,f,c
 35865   002D7E  6ADF               	clrf	indf2,c
 35866   002D80                     
 35867                           ; BSR set to: 5
 35868                           ;../../VLCBlib_PIC/can18_can_2.c: 641:     txFifoObj[7] = 0;
 35869   002D80  EE20 F007          	lfsr	2,7
 35870   002D84  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35871   002D86  26D9               	addwf	fsr2l,f,c
 35872   002D88  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35873   002D8A  22DA               	addwfc	fsr2h,f,c
 35874   002D8C  6ADF               	clrf	indf2,c
 35875   002D8E                     
 35876                           ; BSR set to: 5
 35877                           ;../../VLCBlib_PIC/can18_can_2.c: 642:     txFifoObj[8] = (uint8_t)(mp->opc);
 35878   002D8E  EE20 F001          	lfsr	2,1
 35879   002D92  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35880   002D94  26D9               	addwf	fsr2l,f,c
 35881   002D96  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35882   002D98  22DA               	addwfc	fsr2h,f,c
 35883   002D9A  EE10 F008          	lfsr	1,8
 35884   002D9E  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35885   002DA0  26E1               	addwf	fsr1l,f,c
 35886   002DA2  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35887   002DA4  22E2               	addwfc	fsr1h,f,c
 35888   002DA6  C4DF F4E7          	movff	indf2,indf1
 35889   002DAA                     
 35890                           ; BSR set to: 5
 35891                           ;../../VLCBlib_PIC/can18_can_2.c: 643:     txFifoObj[9] = mp->bytes[0];
 35892   002DAA  EE20 F002          	lfsr	2,2
 35893   002DAE  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35894   002DB0  26D9               	addwf	fsr2l,f,c
 35895   002DB2  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35896   002DB4  22DA               	addwfc	fsr2h,f,c
 35897   002DB6  EE10 F009          	lfsr	1,9
 35898   002DBA  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35899   002DBC  26E1               	addwf	fsr1l,f,c
 35900   002DBE  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35901   002DC0  22E2               	addwfc	fsr1h,f,c
 35902   002DC2  C4DF F4E7          	movff	indf2,indf1
 35903   002DC6                     
 35904                           ; BSR set to: 5
 35905                           ;../../VLCBlib_PIC/can18_can_2.c: 644:     txFifoObj[10] = mp->bytes[1];
 35906   002DC6  EE20 F003          	lfsr	2,3
 35907   002DCA  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35908   002DCC  26D9               	addwf	fsr2l,f,c
 35909   002DCE  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35910   002DD0  22DA               	addwfc	fsr2h,f,c
 35911   002DD2  EE10 F00A          	lfsr	1,10
 35912   002DD6  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35913   002DD8  26E1               	addwf	fsr1l,f,c
 35914   002DDA  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35915   002DDC  22E2               	addwfc	fsr1h,f,c
 35916   002DDE  C4DF F4E7          	movff	indf2,indf1
 35917   002DE2                     
 35918                           ; BSR set to: 5
 35919                           ;../../VLCBlib_PIC/can18_can_2.c: 645:     txFifoObj[11] = mp->bytes[2];
 35920   002DE2  EE20 F004          	lfsr	2,4
 35921   002DE6  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35922   002DE8  26D9               	addwf	fsr2l,f,c
 35923   002DEA  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35924   002DEC  22DA               	addwfc	fsr2h,f,c
 35925   002DEE  EE10 F00B          	lfsr	1,11
 35926   002DF2  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35927   002DF4  26E1               	addwf	fsr1l,f,c
 35928   002DF6  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35929   002DF8  22E2               	addwfc	fsr1h,f,c
 35930   002DFA  C4DF F4E7          	movff	indf2,indf1
 35931   002DFE                     
 35932                           ; BSR set to: 5
 35933                           ;../../VLCBlib_PIC/can18_can_2.c: 646:     txFifoObj[12] = mp->bytes[3];
 35934   002DFE  EE20 F005          	lfsr	2,5
 35935   002E02  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35936   002E04  26D9               	addwf	fsr2l,f,c
 35937   002E06  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35938   002E08  22DA               	addwfc	fsr2h,f,c
 35939   002E0A  EE10 F00C          	lfsr	1,12
 35940   002E0E  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35941   002E10  26E1               	addwf	fsr1l,f,c
 35942   002E12  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35943   002E14  22E2               	addwfc	fsr1h,f,c
 35944   002E16  C4DF F4E7          	movff	indf2,indf1
 35945   002E1A                     
 35946                           ; BSR set to: 5
 35947                           ;../../VLCBlib_PIC/can18_can_2.c: 647:     txFifoObj[13] = mp->bytes[4];
 35948   002E1A  EE20 F006          	lfsr	2,6
 35949   002E1E  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35950   002E20  26D9               	addwf	fsr2l,f,c
 35951   002E22  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35952   002E24  22DA               	addwfc	fsr2h,f,c
 35953   002E26  EE10 F00D          	lfsr	1,13
 35954   002E2A  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35955   002E2C  26E1               	addwf	fsr1l,f,c
 35956   002E2E  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35957   002E30  22E2               	addwfc	fsr1h,f,c
 35958   002E32  C4DF F4E7          	movff	indf2,indf1
 35959   002E36                     
 35960                           ; BSR set to: 5
 35961                           ;../../VLCBlib_PIC/can18_can_2.c: 648:     txFifoObj[14] = mp->bytes[5];
 35962   002E36  EE20 F007          	lfsr	2,7
 35963   002E3A  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35964   002E3C  26D9               	addwf	fsr2l,f,c
 35965   002E3E  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35966   002E40  22DA               	addwfc	fsr2h,f,c
 35967   002E42  EE10 F00E          	lfsr	1,14
 35968   002E46  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35969   002E48  26E1               	addwf	fsr1l,f,c
 35970   002E4A  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35971   002E4C  22E2               	addwfc	fsr1h,f,c
 35972   002E4E  C4DF F4E7          	movff	indf2,indf1
 35973   002E52                     
 35974                           ; BSR set to: 5
 35975                           ;../../VLCBlib_PIC/can18_can_2.c: 649:     txFifoObj[15] = mp->bytes[6];
 35976   002E52  EE20 F008          	lfsr	2,8
 35977   002E56  500D               	movf	canSendMessage@mp^(0+1280),w,c
 35978   002E58  26D9               	addwf	fsr2l,f,c
 35979   002E5A  500E               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 35980   002E5C  22DA               	addwfc	fsr2h,f,c
 35981   002E5E  EE10 F00F          	lfsr	1,15
 35982   002E62  5019               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 35983   002E64  26E1               	addwf	fsr1l,f,c
 35984   002E66  501A               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 35985   002E68  22E2               	addwfc	fsr1h,f,c
 35986   002E6A  C4DF F4E7          	movff	indf2,indf1
 35987   002E6E                     
 35988                           ; BSR set to: 5
 35989                           ;../../VLCBlib_PIC/can18_can_2.c: 652:     canDiagnostics[0x06].asUint++;
 35990   002E6E  0106               	movlb	6	; () banked
 35991   002E70  4B9A               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 35992   002E72  2B9B               	incf	(_canDiagnostics+13)& (0+255),f,b
 35993   002E74                     
 35994                           ; BSR set to: 6
 35995                           ;../../VLCBlib_PIC/can18_can_2.c: 654:     C1FIFOCON2H |= 0x1;
 35996   002E74  0101               	movlb	1	; () banked
 35997   002E76  8169               	bsf	105,0,b	;volatile
 35998   002E78                     
 35999                           ; BSR set to: 1
 36000                           ;../../VLCBlib_PIC/can18_can_2.c: 656:     temp = getNumTxBuffersInUse();
 36001   002E78  EC84  F038         	call	_getNumTxBuffersInUse	;wreg free
 36002   002E7C  6E0F               	movwf	??_canSendMessage^(0+1280),c
 36003   002E7E  500F               	movf	??_canSendMessage^(0+1280),w,c
 36004   002E80  6E15               	movwf	canSendMessage@temp^(0+1280),c
 36005   002E82  6A16               	clrf	(canSendMessage@temp+1)^(0+1280),c
 36006   002E84                     
 36007                           ;../../VLCBlib_PIC/can18_can_2.c: 657:     if (temp > canDiagnostics[0x11].asUint) {
 36008   002E84  5015               	movf	canSendMessage@temp^(0+1280),w,c
 36009   002E86  0106               	movlb	6	; () banked
 36010   002E88  5DB0               	subwf	(_canDiagnostics+34)& (0+255),w,b
 36011   002E8A  5016               	movf	(canSendMessage@temp+1)^(0+1280),w,c
 36012   002E8C  59B1               	subwfb	(_canDiagnostics+35)& (0+255),w,b
 36013   002E8E  B0D8               	btfsc	status,0,c
 36014   002E90  EF4C  F017         	goto	u4931
 36015   002E94  EF4E  F017         	goto	u4930
 36016   002E98                     u4931:
 36017   002E98  EF52  F017         	goto	l7583
 36018   002E9C                     u4930:
 36019   002E9C                     
 36020                           ; BSR set to: 6
 36021                           ;../../VLCBlib_PIC/can18_can_2.c: 658:         canDiagnostics[0x11].asUint = temp;
 36022   002E9C  C515  F6B0         	movff	canSendMessage@temp,_canDiagnostics+34
 36023   002EA0  C516  F6B1         	movff	canSendMessage@temp+1,_canDiagnostics+35
 36024   002EA4                     l7583:
 36025                           
 36026                           ; BSR set to: 6
 36027                           ;../../VLCBlib_PIC/can18_can_2.c: 661:     if (canId == 0) {
 36028   002EA4  0105               	movlb	5	; () banked
 36029   002EA6  51A8               	movf	_canId& (0+255),w,b
 36030   002EA8  A4D8               	btfss	status,2,c
 36031   002EAA  EF59  F017         	goto	u4941
 36032   002EAE  EF5B  F017         	goto	u4940
 36033   002EB2                     u4941:
 36034   002EB2  EF60  F017         	goto	l7587
 36035   002EB6                     u4940:
 36036   002EB6                     
 36037                           ; BSR set to: 5
 36038                           ;../../VLCBlib_PIC/can18_can_2.c: 663:         startEnumeration(1);
 36039   002EB6  0E01               	movlw	1
 36040   002EB8  EC5B  F03A         	call	_startEnumeration
 36041                           
 36042                           ;../../VLCBlib_PIC/can18_can_2.c: 664:     } else {
 36043   002EBC  EF62  F017         	goto	l674
 36044   002EC0                     l7587:
 36045                           
 36046                           ; BSR set to: 5
 36047                           ;../../VLCBlib_PIC/can18_can_2.c: 666:         C1FIFOCON2H |= 0x2;
 36048   002EC0  0101               	movlb	1	; () banked
 36049   002EC2  8369               	bsf	105,1,b	;volatile
 36050   002EC4                     l674:
 36051   002EC4  0012               	return		;funcret
 36052   002EC6                     __end_of_canSendMessage:
 36053                           	callstack 0
 36054                           
 36055 ;; *************** function _isEvent *****************
 36056 ;; Defined at:
 36057 ;;		line 1130 in file "../../VLCBlib_PIC/vlcb.c"
 36058 ;; Parameters:    Size  Location     Type
 36059 ;;  opc             1    wreg     unsigned char 
 36060 ;; Auto vars:     Size  Location     Type
 36061 ;;  opc             1    1[COMRAM] unsigned char 
 36062 ;; Return value:  Size  Location     Type
 36063 ;;                  1    wreg      enum E23474
 36064 ;; Registers used:
 36065 ;;		wreg, status,2, status,0
 36066 ;; Tracked objects:
 36067 ;;		On entry : 0/0
 36068 ;;		On exit  : 0/0
 36069 ;;		Unchanged: 0/0
 36070 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36072 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36074 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36075 ;;Total ram usage:        2 bytes
 36076 ;; Hardware stack levels used: 1
 36077 ;; Hardware stack levels required when called: 1
 36078 ;; This function calls:
 36079 ;;		Nothing
 36080 ;; This function is called by:
 36081 ;;		_canSendMessage
 36082 ;; This function uses a non-reentrant model
 36083 ;;
 36084                           
 36085                           	psect	text89
 36086   007CCA                     __ptext89:
 36087                           	callstack 0
 36088   007CCA                     _isEvent:
 36089                           	callstack 119
 36090                           
 36091                           ;incstack = 0
 36092                           ;isEvent@opc stored from wreg
 36093   007CCA  6E02               	movwf	isEvent@opc^(0+1280),c
 36094   007CCC                     
 36095                           ;../../VLCBlib_PIC/vlcb.c: 1131:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 36096   007CCC  6A01               	clrf	_isEvent$5805^(0+1280),c
 36097   007CCE  5002               	movf	isEvent@opc^(0+1280),w,c
 36098   007CD0  0B90               	andlw	144
 36099   007CD2  0A90               	xorlw	144
 36100   007CD4  A4D8               	btfss	status,2,c
 36101   007CD6  EF6F  F03E         	goto	u4671
 36102   007CDA  EF71  F03E         	goto	u4670
 36103   007CDE                     u4671:
 36104   007CDE  EF7E  F03E         	goto	l2058
 36105   007CE2                     u4670:
 36106   007CE2  5002               	movf	isEvent@opc^(0+1280),w,c
 36107   007CE4  0AFF               	xorlw	255
 36108   007CE6  0B06               	andlw	6
 36109   007CE8  0A06               	xorlw	6
 36110   007CEA  A4D8               	btfss	status,2,c
 36111   007CEC  EF7A  F03E         	goto	u4681
 36112   007CF0  EF7C  F03E         	goto	u4680
 36113   007CF4                     u4681:
 36114   007CF4  EF7E  F03E         	goto	l2058
 36115   007CF8                     u4680:
 36116   007CF8  0E01               	movlw	1
 36117   007CFA  6E01               	movwf	_isEvent$5805^(0+1280),c
 36118   007CFC                     l2058:
 36119   007CFC  5001               	movf	_isEvent$5805^(0+1280),w,c
 36120   007CFE  0012               	return		;funcret
 36121   007D00                     __end_of_isEvent:
 36122                           	callstack 0
 36123                           
 36124 ;; *************** function _have *****************
 36125 ;; Defined at:
 36126 ;;		line 848 in file "../../VLCBlib_PIC/vlcb.c"
 36127 ;; Parameters:    Size  Location     Type
 36128 ;;  id              1    wreg     unsigned char 
 36129 ;; Auto vars:     Size  Location     Type
 36130 ;;  id              1    2[COMRAM] unsigned char 
 36131 ;;  i               1    3[COMRAM] unsigned char 
 36132 ;; Return value:  Size  Location     Type
 36133 ;;                  1    wreg      enum E23601
 36134 ;; Registers used:
 36135 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 36136 ;; Tracked objects:
 36137 ;;		On entry : 0/0
 36138 ;;		On exit  : 0/0
 36139 ;;		Unchanged: 0/0
 36140 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36142 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36143 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36144 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36145 ;;Total ram usage:        4 bytes
 36146 ;; Hardware stack levels used: 1
 36147 ;; Hardware stack levels required when called: 1
 36148 ;; This function calls:
 36149 ;;		Nothing
 36150 ;; This function is called by:
 36151 ;;		_canSendMessage
 36152 ;;		_getParameterFlags
 36153 ;;		_getParameter
 36154 ;; This function uses a non-reentrant model
 36155 ;;
 36156                           
 36157                           	psect	text90
 36158   006D6A                     __ptext90:
 36159                           	callstack 0
 36160   006D6A                     _have:
 36161                           	callstack 119
 36162                           
 36163                           ;incstack = 0
 36164                           ;have@id stored from wreg
 36165   006D6A  6E03               	movwf	have@id^(0+1280),c
 36166   006D6C                     
 36167                           ;../../VLCBlib_PIC/vlcb.c: 849:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 850:     for (i
      +                          =0; i<6; i++) {
 36168   006D6C  6A04               	clrf	have@i^(0+1280),c
 36169   006D6E                     l7341:
 36170                           
 36171                           ;../../VLCBlib_PIC/vlcb.c: 851:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 36172   006D6E  5004               	movf	have@i^(0+1280),w,c
 36173   006D70  0D02               	mullw	2
 36174   006D72  0E89               	movlw	low _services
 36175   006D74  24F3               	addwf	243,w,c
 36176   006D76  6EF6               	movwf	tblptrl,c
 36177   006D78  0EFF               	movlw	high _services
 36178   006D7A  20F4               	addwfc	244,w,c
 36179   006D7C  6EF7               	movwf	tblptrh,c
 36180   006D7E                     	if	1	;There are 3 active tblptr bytes
 36181   006D7E  6AF8               	clrf	tblptru,c
 36182   006D80  0E00               	movlw	low (__mediumconst shr (0+16))
 36183   006D82  22F8               	addwfc	tblptru,f,c
 36184   006D84                     	endif
 36185   006D84  0009               	tblrd		*+
 36186   006D86  50F5               	movf	tablat,w,c
 36187   006D88  0009               	tblrd		*+
 36188   006D8A  10F5               	iorwf	tablat,w,c
 36189   006D8C  B4D8               	btfsc	status,2,c
 36190   006D8E  EFCB  F036         	goto	u4691
 36191   006D92  EFCD  F036         	goto	u4690
 36192   006D96                     u4691:
 36193   006D96  EFF0  F036         	goto	l7349
 36194   006D9A                     u4690:
 36195   006D9A  5004               	movf	have@i^(0+1280),w,c
 36196   006D9C  0D02               	mullw	2
 36197   006D9E  0E89               	movlw	low _services
 36198   006DA0  24F3               	addwf	243,w,c
 36199   006DA2  6EF6               	movwf	tblptrl,c
 36200   006DA4  0EFF               	movlw	high _services
 36201   006DA6  20F4               	addwfc	244,w,c
 36202   006DA8  6EF7               	movwf	tblptrh,c
 36203   006DAA                     	if	1	;There are 3 active tblptr bytes
 36204   006DAA  6AF8               	clrf	tblptru,c
 36205   006DAC  0E00               	movlw	low (__mediumconst shr (0+16))
 36206   006DAE  22F8               	addwfc	tblptru,f,c
 36207   006DB0                     	endif
 36208   006DB0  0009               	tblrd		*+
 36209   006DB2  C4F5 F501          	movff	tablat,??_have
 36210   006DB6  0009               	tblrd		*+
 36211   006DB8  C4F5 F502          	movff	tablat,??_have+1
 36212   006DBC  C501  F4F6         	movff	??_have,tblptrl
 36213   006DC0  C502  F4F7         	movff	??_have+1,tblptrh
 36214   006DC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36215   006DC4  6AF8               	clrf	tblptru,c
 36216   006DC6                     	endif
 36217   006DC6                     	if	0	;tblptru may be non-zero
 36218   006DC6                     	endif
 36219   006DC6  0008               	tblrd		*
 36220   006DC8  50F5               	movf	tablat,w,c
 36221   006DCA  1803               	xorwf	have@id^(0+1280),w,c
 36222   006DCC  A4D8               	btfss	status,2,c
 36223   006DCE  EFEB  F036         	goto	u4701
 36224   006DD2  EFED  F036         	goto	u4700
 36225   006DD6                     u4701:
 36226   006DD6  EFF0  F036         	goto	l7349
 36227   006DDA                     u4700:
 36228   006DDA                     
 36229                           ;../../VLCBlib_PIC/vlcb.c: 852:             return PRESENT;
 36230   006DDA  0E01               	movlw	1
 36231   006DDC  EFFA  F036         	goto	l1989
 36232   006DE0                     l7349:
 36233                           
 36234                           ;../../VLCBlib_PIC/vlcb.c: 854:     }
 36235   006DE0  2A04               	incf	have@i^(0+1280),f,c
 36236   006DE2  0E05               	movlw	5
 36237   006DE4  6404               	cpfsgt	have@i^(0+1280),c
 36238   006DE6  EFF7  F036         	goto	u4711
 36239   006DEA  EFF9  F036         	goto	u4710
 36240   006DEE                     u4711:
 36241   006DEE  EFB7  F036         	goto	l7341
 36242   006DF2                     u4710:
 36243   006DF2                     
 36244                           ;../../VLCBlib_PIC/vlcb.c: 855:     return NOT_PRESENT;
 36245   006DF2  0E00               	movlw	0
 36246   006DF4                     l1989:
 36247   006DF4  0012               	return		;funcret
 36248   006DF6                     __end_of_have:
 36249                           	callstack 0
 36250                           
 36251 ;; *************** function _getNumTxBuffersInUse *****************
 36252 ;; Defined at:
 36253 ;;		line 532 in file "../../VLCBlib_PIC/can18_can_2.c"
 36254 ;; Parameters:    Size  Location     Type
 36255 ;;		None
 36256 ;; Auto vars:     Size  Location     Type
 36257 ;;  i16             2    4[COMRAM] short 
 36258 ;; Return value:  Size  Location     Type
 36259 ;;                  1    wreg      unsigned char 
 36260 ;; Registers used:
 36261 ;;		wreg, status,2, status,0
 36262 ;; Tracked objects:
 36263 ;;		On entry : 0/0
 36264 ;;		On exit  : 0/0
 36265 ;;		Unchanged: 0/0
 36266 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36268 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36269 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36270 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36271 ;;Total ram usage:        6 bytes
 36272 ;; Hardware stack levels used: 1
 36273 ;; Hardware stack levels required when called: 1
 36274 ;; This function calls:
 36275 ;;		Nothing
 36276 ;; This function is called by:
 36277 ;;		_canGetDiagnostic
 36278 ;;		_canSendMessage
 36279 ;; This function uses a non-reentrant model
 36280 ;;
 36281                           
 36282                           	psect	text91
 36283   007108                     __ptext91:
 36284                           	callstack 0
 36285   007108                     _getNumTxBuffersInUse:
 36286                           	callstack 119
 36287   007108                     
 36288                           ;../../VLCBlib_PIC/can18_can_2.c: 533:     if (! C1FIFOSTA2Lbits.TFNRFNIF) {
 36289   007108  0101               	movlb	1	; () banked
 36290   00710A  B16C               	btfsc	108,0,b	;volatile
 36291   00710C  EF8A  F038         	goto	u4611
 36292   007110  EF8C  F038         	goto	u4610
 36293   007114                     u4611:
 36294   007114  EF8F  F038         	goto	l7301
 36295   007118                     u4610:
 36296   007118                     
 36297                           ; BSR set to: 1
 36298                           ;../../VLCBlib_PIC/can18_can_2.c: 534:         return 32;
 36299   007118  0E20               	movlw	32
 36300   00711A  EFC0  F038         	goto	l657
 36301   00711E                     l7301:
 36302                           
 36303                           ; BSR set to: 1
 36304                           ;../../VLCBlib_PIC/can18_can_2.c: 536:         int16_t i16;;../../VLCBlib_PIC/can18_can_
      +                          2.c: 538:         i16 = (int16_t)((C1FIFOUA2 - ((0x3BB0 +((8 +8)*4))+((8 +8)*1)))/(8+8))
      +                          ;
 36305   00711E  0E00               	movlw	0
 36306   007120  2570               	addwf	112,w,b	;volatile
 36307   007122  6E01               	movwf	??_getNumTxBuffersInUse^(0+1280),c
 36308   007124  0EC4               	movlw	196
 36309   007126  2171               	addwfc	113,w,b	;volatile
 36310   007128  6E02               	movwf	(??_getNumTxBuffersInUse+1)^(0+1280),c
 36311   00712A  0EFF               	movlw	255
 36312   00712C  2172               	addwfc	114,w,b	;volatile
 36313   00712E  6E03               	movwf	(??_getNumTxBuffersInUse+2)^(0+1280),c
 36314   007130  0EFF               	movlw	255
 36315   007132  2173               	addwfc	115,w,b	;volatile
 36316   007134  6E04               	movwf	(??_getNumTxBuffersInUse+3)^(0+1280),c
 36317   007136  0E05               	movlw	5
 36318   007138  EFA3  F038         	goto	u4620
 36319   00713C                     u4625:
 36320   00713C  90D8               	bcf	status,0,c
 36321   00713E  3204               	rrcf	(??_getNumTxBuffersInUse+3)^(0+1280),f,c
 36322   007140  3203               	rrcf	(??_getNumTxBuffersInUse+2)^(0+1280),f,c
 36323   007142  3202               	rrcf	(??_getNumTxBuffersInUse+1)^(0+1280),f,c
 36324   007144  3201               	rrcf	??_getNumTxBuffersInUse^(0+1280),f,c
 36325   007146                     u4620:
 36326   007146  2EE8               	decfsz	wreg,f,c
 36327   007148  EF9E  F038         	goto	u4625
 36328   00714C  C501  F505         	movff	??_getNumTxBuffersInUse,getNumTxBuffersInUse@i16
 36329   007150  C502  F506         	movff	??_getNumTxBuffersInUse+1,getNumTxBuffersInUse@i16+1
 36330                           
 36331                           ;../../VLCBlib_PIC/can18_can_2.c: 539:         i16 = (int16_t)(i16 - C1FIFOSTA2Hbits.FIF
      +                          OCI);
 36332   007154  516D               	movf	109,w,b	;volatile
 36333   007156  0B1F               	andlw	31
 36334   007158  6E01               	movwf	??_getNumTxBuffersInUse^(0+1280),c
 36335   00715A  5001               	movf	??_getNumTxBuffersInUse^(0+1280),w,c
 36336   00715C  5C05               	subwf	getNumTxBuffersInUse@i16^(0+1280),w,c
 36337   00715E  6E05               	movwf	getNumTxBuffersInUse@i16^(0+1280),c
 36338   007160  5006               	movf	(getNumTxBuffersInUse@i16+1)^(0+1280),w,c
 36339   007162  A0D8               	btfss	status,0,c
 36340   007164  0406               	decf	(getNumTxBuffersInUse@i16+1)^(0+1280),w,c
 36341   007166  6E06               	movwf	(getNumTxBuffersInUse@i16+1)^(0+1280),c
 36342                           
 36343                           ;../../VLCBlib_PIC/can18_can_2.c: 540:         if (i16 < 0) i16 += 32;
 36344   007168  BE06               	btfsc	(getNumTxBuffersInUse@i16+1)^(0+1280),7,c
 36345   00716A  EFBB  F038         	goto	u4630
 36346   00716E  EFB9  F038         	goto	u4631
 36347   007172                     u4631:
 36348   007172  EFBF  F038         	goto	l7305
 36349   007176                     u4630:
 36350   007176                     
 36351                           ; BSR set to: 1
 36352   007176  0E20               	movlw	32
 36353   007178  2605               	addwf	getNumTxBuffersInUse@i16^(0+1280),f,c
 36354   00717A  0E00               	movlw	0
 36355   00717C  2206               	addwfc	(getNumTxBuffersInUse@i16+1)^(0+1280),f,c
 36356   00717E                     l7305:
 36357                           
 36358                           ; BSR set to: 1
 36359                           ;../../VLCBlib_PIC/can18_can_2.c: 541:         return (uint8_t)i16;
 36360   00717E  5005               	movf	getNumTxBuffersInUse@i16^(0+1280),w,c
 36361   007180                     l657:
 36362                           
 36363                           ; BSR set to: 1
 36364   007180  0012               	return		;funcret
 36365   007182                     __end_of_getNumTxBuffersInUse:
 36366                           	callstack 0
 36367                           
 36368 ;; *************** function _getNumRxBuffersInUse *****************
 36369 ;; Defined at:
 36370 ;;		line 550 in file "../../VLCBlib_PIC/can18_can_2.c"
 36371 ;; Parameters:    Size  Location     Type
 36372 ;;		None
 36373 ;; Auto vars:     Size  Location     Type
 36374 ;;  i16             2    4[COMRAM] short 
 36375 ;; Return value:  Size  Location     Type
 36376 ;;                  1    wreg      unsigned char 
 36377 ;; Registers used:
 36378 ;;		wreg, status,2, status,0
 36379 ;; Tracked objects:
 36380 ;;		On entry : 0/0
 36381 ;;		On exit  : 0/0
 36382 ;;		Unchanged: 0/0
 36383 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36386 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36387 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36388 ;;Total ram usage:        6 bytes
 36389 ;; Hardware stack levels used: 1
 36390 ;; Hardware stack levels required when called: 1
 36391 ;; This function calls:
 36392 ;;		Nothing
 36393 ;; This function is called by:
 36394 ;;		_canGetDiagnostic
 36395 ;;		_canSendMessage
 36396 ;;		_canReceiveMessage
 36397 ;; This function uses a non-reentrant model
 36398 ;;
 36399                           
 36400                           	psect	text92
 36401   007360                     __ptext92:
 36402                           	callstack 0
 36403   007360                     _getNumRxBuffersInUse:
 36404                           	callstack 119
 36405   007360                     
 36406                           ;../../VLCBlib_PIC/can18_can_2.c: 551:     if (C1FIFOSTA3Lbits.TFERFFIF) {
 36407   007360  0101               	movlb	1	; () banked
 36408   007362  A578               	btfss	120,2,b	;volatile
 36409   007364  EFB6  F039         	goto	u4641
 36410   007368  EFB8  F039         	goto	u4640
 36411   00736C                     u4641:
 36412   00736C  EFBB  F039         	goto	l7317
 36413   007370                     u4640:
 36414   007370                     
 36415                           ; BSR set to: 1
 36416                           ;../../VLCBlib_PIC/can18_can_2.c: 552:         return 32;
 36417   007370  0E20               	movlw	32
 36418   007372  EFE9  F039         	goto	l663
 36419   007376                     l7317:
 36420                           
 36421                           ; BSR set to: 1
 36422                           ;../../VLCBlib_PIC/can18_can_2.c: 554:         int16_t i16;;../../VLCBlib_PIC/can18_can_
      +                          2.c: 556:         i16 = (int16_t)(((((0x3BB0 +((8 +8)*4))+((8 +8)*1))+((8 +8)*32)) - C1F
      +                          IFOUA3)/(8+8));
 36423   007376  517C               	movf	124,w,b	;volatile
 36424   007378  0800               	sublw	0
 36425   00737A  6E01               	movwf	??_getNumRxBuffersInUse^(0+1280),c
 36426   00737C  0E3E               	movlw	62
 36427   00737E  557D               	subfwb	125,w,b	;volatile
 36428   007380  6E02               	movwf	(??_getNumRxBuffersInUse+1)^(0+1280),c
 36429   007382  0E00               	movlw	0
 36430   007384  557E               	subfwb	126,w,b	;volatile
 36431   007386  6E03               	movwf	(??_getNumRxBuffersInUse+2)^(0+1280),c
 36432   007388  0E00               	movlw	0
 36433   00738A  557F               	subfwb	127,w,b	;volatile
 36434   00738C  6E04               	movwf	(??_getNumRxBuffersInUse+3)^(0+1280),c
 36435   00738E  0E05               	movlw	5
 36436   007390  EFCF  F039         	goto	u4650
 36437   007394                     u4655:
 36438   007394  90D8               	bcf	status,0,c
 36439   007396  3204               	rrcf	(??_getNumRxBuffersInUse+3)^(0+1280),f,c
 36440   007398  3203               	rrcf	(??_getNumRxBuffersInUse+2)^(0+1280),f,c
 36441   00739A  3202               	rrcf	(??_getNumRxBuffersInUse+1)^(0+1280),f,c
 36442   00739C  3201               	rrcf	??_getNumRxBuffersInUse^(0+1280),f,c
 36443   00739E                     u4650:
 36444   00739E  2EE8               	decfsz	wreg,f,c
 36445   0073A0  EFCA  F039         	goto	u4655
 36446   0073A4  C501  F505         	movff	??_getNumRxBuffersInUse,getNumRxBuffersInUse@i16
 36447   0073A8  C502  F506         	movff	??_getNumRxBuffersInUse+1,getNumRxBuffersInUse@i16+1
 36448                           
 36449                           ;../../VLCBlib_PIC/can18_can_2.c: 557:         i16 += C1FIFOSTA3Hbits.FIFOCI;
 36450   0073AC  5179               	movf	121,w,b	;volatile
 36451   0073AE  0B1F               	andlw	31
 36452   0073B0  6E01               	movwf	??_getNumRxBuffersInUse^(0+1280),c
 36453   0073B2  5001               	movf	??_getNumRxBuffersInUse^(0+1280),w,c
 36454   0073B4  2605               	addwf	getNumRxBuffersInUse@i16^(0+1280),f,c
 36455   0073B6  0E00               	movlw	0
 36456   0073B8  2206               	addwfc	(getNumRxBuffersInUse@i16+1)^(0+1280),f,c
 36457                           
 36458                           ;../../VLCBlib_PIC/can18_can_2.c: 558:         if (i16 < 0) i16 += 32;
 36459   0073BA  BE06               	btfsc	(getNumRxBuffersInUse@i16+1)^(0+1280),7,c
 36460   0073BC  EFE4  F039         	goto	u4660
 36461   0073C0  EFE2  F039         	goto	u4661
 36462   0073C4                     u4661:
 36463   0073C4  EFE8  F039         	goto	l7321
 36464   0073C8                     u4660:
 36465   0073C8                     
 36466                           ; BSR set to: 1
 36467   0073C8  0E20               	movlw	32
 36468   0073CA  2605               	addwf	getNumRxBuffersInUse@i16^(0+1280),f,c
 36469   0073CC  0E00               	movlw	0
 36470   0073CE  2206               	addwfc	(getNumRxBuffersInUse@i16+1)^(0+1280),f,c
 36471   0073D0                     l7321:
 36472                           
 36473                           ; BSR set to: 1
 36474                           ;../../VLCBlib_PIC/can18_can_2.c: 559:         return (uint8_t) i16;
 36475   0073D0  5005               	movf	getNumRxBuffersInUse@i16^(0+1280),w,c
 36476   0073D2                     l663:
 36477                           
 36478                           ; BSR set to: 1
 36479   0073D2  0012               	return		;funcret
 36480   0073D4                     __end_of_getNumRxBuffersInUse:
 36481                           	callstack 0
 36482                           
 36483 ;; *************** function _getNextWriteMessage *****************
 36484 ;; Defined at:
 36485 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 36486 ;; Parameters:    Size  Location     Type
 36487 ;;  q               2    0[COMRAM] PTR struct MessageQueue
 36488 ;;		 -> rxQueue(5), 
 36489 ;; Auto vars:     Size  Location     Type
 36490 ;;  wr              1   11[COMRAM] unsigned char 
 36491 ;; Return value:  Size  Location     Type
 36492 ;;                  2    0[COMRAM] PTR struct Message
 36493 ;; Registers used:
 36494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36495 ;; Tracked objects:
 36496 ;;		On entry : 0/0
 36497 ;;		On exit  : 0/0
 36498 ;;		Unchanged: 0/0
 36499 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36500 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36502 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36503 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36504 ;;Total ram usage:       12 bytes
 36505 ;; Hardware stack levels used: 1
 36506 ;; Hardware stack levels required when called: 1
 36507 ;; This function calls:
 36508 ;;		Nothing
 36509 ;; This function is called by:
 36510 ;;		_canSendMessage
 36511 ;; This function uses a non-reentrant model
 36512 ;;
 36513                           
 36514                           	psect	text93
 36515   005820                     __ptext93:
 36516                           	callstack 0
 36517   005820                     _getNextWriteMessage:
 36518                           	callstack 119
 36519   005820  EE20 F002          	lfsr	2,2
 36520   005824  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36521   005826  26D9               	addwf	fsr2l,f,c
 36522   005828  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36523   00582A  22DA               	addwfc	fsr2h,f,c
 36524   00582C  50DF               	movf	indf2,w,c
 36525   00582E  6E03               	movwf	??_getNextWriteMessage^(0+1280),c
 36526   005830  6A04               	clrf	(??_getNextWriteMessage+1)^(0+1280),c
 36527   005832  EE20 F004          	lfsr	2,4
 36528   005836  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36529   005838  26D9               	addwf	fsr2l,f,c
 36530   00583A  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36531   00583C  22DA               	addwfc	fsr2h,f,c
 36532   00583E  50DF               	movf	indf2,w,c
 36533   005840  6E05               	movwf	(??_getNextWriteMessage+2)^(0+1280),c
 36534   005842  0EFF               	movlw	255
 36535   005844  2405               	addwf	(??_getNextWriteMessage+2)^(0+1280),w,c
 36536   005846  6E06               	movwf	(??_getNextWriteMessage+3)^(0+1280),c
 36537   005848  6A07               	clrf	(??_getNextWriteMessage+4)^(0+1280),c
 36538   00584A  0EFF               	movlw	255
 36539   00584C  2207               	addwfc	(??_getNextWriteMessage+4)^(0+1280),f,c
 36540   00584E  EE20 F003          	lfsr	2,3
 36541   005852  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36542   005854  26D9               	addwf	fsr2l,f,c
 36543   005856  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36544   005858  22DA               	addwfc	fsr2h,f,c
 36545   00585A  50DF               	movf	indf2,w,c
 36546   00585C  6E08               	movwf	(??_getNextWriteMessage+5)^(0+1280),c
 36547   00585E  6A09               	clrf	(??_getNextWriteMessage+6)^(0+1280),c
 36548   005860  0E01               	movlw	1
 36549   005862  2608               	addwf	(??_getNextWriteMessage+5)^(0+1280),f,c
 36550   005864  0E00               	movlw	0
 36551   005866  2209               	addwfc	(??_getNextWriteMessage+6)^(0+1280),f,c
 36552   005868  5006               	movf	(??_getNextWriteMessage+3)^(0+1280),w,c
 36553   00586A  1408               	andwf	(??_getNextWriteMessage+5)^(0+1280),w,c
 36554   00586C  6E0A               	movwf	(??_getNextWriteMessage+7)^(0+1280),c
 36555   00586E  5007               	movf	(??_getNextWriteMessage+4)^(0+1280),w,c
 36556   005870  1409               	andwf	(??_getNextWriteMessage+6)^(0+1280),w,c
 36557   005872  6E0B               	movwf	(??_getNextWriteMessage+8)^(0+1280),c
 36558   005874  5003               	movf	??_getNextWriteMessage^(0+1280),w,c
 36559   005876  180A               	xorwf	(??_getNextWriteMessage+7)^(0+1280),w,c
 36560   005878  E107               	bnz	u4721
 36561   00587A  5004               	movf	(??_getNextWriteMessage+1)^(0+1280),w,c
 36562   00587C  180B               	xorwf	(??_getNextWriteMessage+8)^(0+1280),w,c
 36563   00587E  A4D8               	btfss	status,2,c
 36564   005880  EF44  F02C         	goto	u4721
 36565   005884  EF46  F02C         	goto	u4720
 36566   005888                     u4721:
 36567   005888  EF4C  F02C         	goto	l7363
 36568   00588C                     u4720:
 36569   00588C  0E00               	movlw	0
 36570   00588E  6E01               	movwf	?_getNextWriteMessage^(0+1280),c
 36571   005890  0E00               	movlw	0
 36572   005892  6E02               	movwf	(?_getNextWriteMessage+1)^(0+1280),c
 36573   005894  EF8B  F02C         	goto	l1188
 36574   005898                     l7363:
 36575   005898  EE20 F003          	lfsr	2,3
 36576   00589C  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36577   00589E  26D9               	addwf	fsr2l,f,c
 36578   0058A0  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36579   0058A2  22DA               	addwfc	fsr2h,f,c
 36580   0058A4  50DF               	movf	indf2,w,c
 36581   0058A6  6E0C               	movwf	getNextWriteMessage@wr^(0+1280),c
 36582   0058A8  EE20 F003          	lfsr	2,3
 36583   0058AC  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36584   0058AE  26D9               	addwf	fsr2l,f,c
 36585   0058B0  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36586   0058B2  22DA               	addwfc	fsr2h,f,c
 36587   0058B4  2ADF               	incf	indf2,f,c
 36588   0058B6  EE20 F004          	lfsr	2,4
 36589   0058BA  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36590   0058BC  26D9               	addwf	fsr2l,f,c
 36591   0058BE  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36592   0058C0  22DA               	addwfc	fsr2h,f,c
 36593   0058C2  EE10 F003          	lfsr	1,3
 36594   0058C6  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36595   0058C8  26E1               	addwf	fsr1l,f,c
 36596   0058CA  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36597   0058CC  22E2               	addwfc	fsr1h,f,c
 36598   0058CE  50DE               	movf	postinc2,w,c
 36599   0058D0  5CE6               	subwf	postinc1,w,c
 36600   0058D2  A0D8               	btfss	status,0,c
 36601   0058D4  EF6E  F02C         	goto	u4731
 36602   0058D8  EF70  F02C         	goto	u4730
 36603   0058DC                     u4731:
 36604   0058DC  EF77  F02C         	goto	l7369
 36605   0058E0                     u4730:
 36606   0058E0  EE20 F003          	lfsr	2,3
 36607   0058E4  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 36608   0058E6  26D9               	addwf	fsr2l,f,c
 36609   0058E8  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 36610   0058EA  22DA               	addwfc	fsr2h,f,c
 36611   0058EC  6ADF               	clrf	indf2,c
 36612   0058EE                     l7369:
 36613   0058EE  500C               	movf	getNextWriteMessage@wr^(0+1280),w,c
 36614   0058F0  0D09               	mullw	9
 36615   0058F2  C4F3 F503          	movff	prodl,??_getNextWriteMessage
 36616   0058F6  C4F4 F504          	movff	prodh,??_getNextWriteMessage+1
 36617   0058FA  C501  F4D9         	movff	getNextWriteMessage@q,fsr2l
 36618   0058FE  C502  F4DA         	movff	getNextWriteMessage@q+1,fsr2h
 36619   005902  C4DE F505          	movff	postinc2,??_getNextWriteMessage+2
 36620   005906  C4DD F506          	movff	postdec2,??_getNextWriteMessage+3
 36621   00590A  5003               	movf	??_getNextWriteMessage^(0+1280),w,c
 36622   00590C  2405               	addwf	(??_getNextWriteMessage+2)^(0+1280),w,c
 36623   00590E  6E01               	movwf	?_getNextWriteMessage^(0+1280),c
 36624   005910  5004               	movf	(??_getNextWriteMessage+1)^(0+1280),w,c
 36625   005912  2006               	addwfc	(??_getNextWriteMessage+3)^(0+1280),w,c
 36626   005914  6E02               	movwf	(?_getNextWriteMessage+1)^(0+1280),c
 36627   005916                     l1188:
 36628   005916  0012               	return		;funcret
 36629   005918                     __end_of_getNextWriteMessage:
 36630                           	callstack 0
 36631                           
 36632 ;; *************** function _processEnumeration *****************
 36633 ;; Defined at:
 36634 ;;		line 828 in file "../../VLCBlib_PIC/can18_can_2.c"
 36635 ;; Parameters:    Size  Location     Type
 36636 ;;		None
 36637 ;; Auto vars:     Size  Location     Type
 36638 ;;  i               1   27[COMRAM] unsigned char 
 36639 ;;  newCanId        1   26[COMRAM] unsigned char 
 36640 ;;  enumResult      1   25[COMRAM] unsigned char 
 36641 ;; Return value:  Size  Location     Type
 36642 ;;                  1    wreg      void 
 36643 ;; Registers used:
 36644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36645 ;; Tracked objects:
 36646 ;;		On entry : 0/0
 36647 ;;		On exit  : 0/0
 36648 ;;		Unchanged: 0/0
 36649 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36651 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36652 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36653 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36654 ;;Total ram usage:        7 bytes
 36655 ;; Hardware stack levels used: 1
 36656 ;; Hardware stack levels required when called: 7
 36657 ;; This function calls:
 36658 ;;		_setNewCanId
 36659 ;;		_startEnumeration
 36660 ;;		_tickGet
 36661 ;;		_updateModuleErrorStatus
 36662 ;; This function is called by:
 36663 ;;		_canPoll
 36664 ;; This function uses a non-reentrant model
 36665 ;;
 36666                           
 36667                           	psect	text94
 36668   00461E                     __ptext94:
 36669                           	callstack 0
 36670   00461E                     _processEnumeration:
 36671                           	callstack 117
 36672   00461E                     
 36673                           ;../../VLCBlib_PIC/can18_can_2.c: 829:     uint8_t i, newCanId, enumResult;;../../VLCBli
      +                          b_PIC/can18_can_2.c: 831:     switch (enumerationState) {
 36674   00461E  EFD6  F023         	goto	l8577
 36675   004622                     l8517:
 36676                           
 36677                           ; BSR set to: 5
 36678                           ;../../VLCBlib_PIC/can18_can_2.c: 834:             if ((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) ) {
 36679   004622  EC75  F039         	call	_tickGet	;wreg free
 36680   004626  0105               	movlb	5	; () banked
 36681   004628  5174               	movf	_enumerationStartTime& (0+255),w,b
 36682   00462A  5C01               	subwf	?_tickGet^(0+1280),w,c
 36683   00462C  6E16               	movwf	??_processEnumeration^(0+1280),c
 36684   00462E  5175               	movf	(_enumerationStartTime+1)& (0+255),w,b
 36685   004630  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 36686   004632  6E17               	movwf	(??_processEnumeration+1)^(0+1280),c
 36687   004634  5176               	movf	(_enumerationStartTime+2)& (0+255),w,b
 36688   004636  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 36689   004638  6E18               	movwf	(??_processEnumeration+2)^(0+1280),c
 36690   00463A  5177               	movf	(_enumerationStartTime+3)& (0+255),w,b
 36691   00463C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 36692   00463E  6E19               	movwf	(??_processEnumeration+3)^(0+1280),c
 36693   004640  5019               	movf	(??_processEnumeration+3)^(0+1280),w,c
 36694   004642  1018               	iorwf	(??_processEnumeration+2)^(0+1280),w,c
 36695   004644  E10B               	bnz	u5860
 36696   004646  0ED5               	movlw	213
 36697   004648  5C16               	subwf	??_processEnumeration^(0+1280),w,c
 36698   00464A  0E30               	movlw	48
 36699   00464C  5817               	subwfb	(??_processEnumeration+1)^(0+1280),w,c
 36700   00464E  A0D8               	btfss	status,0,c
 36701   004650  EF2C  F023         	goto	u5861
 36702   004654  EF2E  F023         	goto	u5860
 36703   004658                     u5861:
 36704   004658  EFF0  F023         	goto	l742
 36705   00465C                     u5860:
 36706   00465C                     
 36707                           ; BSR set to: 5
 36708                           ;../../VLCBlib_PIC/can18_can_2.c: 838:                 startEnumeration(0);
 36709   00465C  0E00               	movlw	0
 36710   00465E  EC5B  F03A         	call	_startEnumeration
 36711   004662  EFF0  F023         	goto	l742
 36712   004666                     l8521:
 36713                           
 36714                           ; BSR set to: 5
 36715                           ;../../VLCBlib_PIC/can18_can_2.c: 846:             if ((tickGet() - enumerationStartTime
      +                          .val) > (62500/10) ) {
 36716   004666  EC75  F039         	call	_tickGet	;wreg free
 36717   00466A  0105               	movlb	5	; () banked
 36718   00466C  5174               	movf	_enumerationStartTime& (0+255),w,b
 36719   00466E  5C01               	subwf	?_tickGet^(0+1280),w,c
 36720   004670  6E16               	movwf	??_processEnumeration^(0+1280),c
 36721   004672  5175               	movf	(_enumerationStartTime+1)& (0+255),w,b
 36722   004674  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 36723   004676  6E17               	movwf	(??_processEnumeration+1)^(0+1280),c
 36724   004678  5176               	movf	(_enumerationStartTime+2)& (0+255),w,b
 36725   00467A  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 36726   00467C  6E18               	movwf	(??_processEnumeration+2)^(0+1280),c
 36727   00467E  5177               	movf	(_enumerationStartTime+3)& (0+255),w,b
 36728   004680  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 36729   004682  6E19               	movwf	(??_processEnumeration+3)^(0+1280),c
 36730   004684  5019               	movf	(??_processEnumeration+3)^(0+1280),w,c
 36731   004686  1018               	iorwf	(??_processEnumeration+2)^(0+1280),w,c
 36732   004688  E10B               	bnz	u5870
 36733   00468A  0E6B               	movlw	107
 36734   00468C  5C16               	subwf	??_processEnumeration^(0+1280),w,c
 36735   00468E  0E18               	movlw	24
 36736   004690  5817               	subwfb	(??_processEnumeration+1)^(0+1280),w,c
 36737   004692  A0D8               	btfss	status,0,c
 36738   004694  EF4E  F023         	goto	u5871
 36739   004698  EF50  F023         	goto	u5870
 36740   00469C                     u5871:
 36741   00469C  EFF0  F023         	goto	l742
 36742   0046A0                     u5870:
 36743   0046A0                     
 36744                           ; BSR set to: 5
 36745                           ;../../VLCBlib_PIC/can18_can_2.c: 851:                 for (i=0; (enumerationResults[i] 
      +                          == 0xFF) && (i < (0x7F/8)+1); i++) {
 36746   0046A0  6A1C               	clrf	processEnumeration@i^(0+1280),c
 36747   0046A2  EF54  F023         	goto	l8527
 36748   0046A6                     l8525:
 36749                           
 36750                           ;../../VLCBlib_PIC/can18_can_2.c: 853:                 }
 36751   0046A6  2A1C               	incf	processEnumeration@i^(0+1280),f,c
 36752   0046A8                     l8527:
 36753   0046A8  0E32               	movlw	low _enumerationResults
 36754   0046AA  241C               	addwf	processEnumeration@i^(0+1280),w,c
 36755   0046AC  6ED9               	movwf	fsr2l,c
 36756   0046AE  6ADA               	clrf	fsr2h,c
 36757   0046B0  0E06               	movlw	high _enumerationResults
 36758   0046B2  22DA               	addwfc	fsr2h,f,c
 36759   0046B4  28DE               	incf	postinc2,w,c
 36760   0046B6  A4D8               	btfss	status,2,c
 36761   0046B8  EF60  F023         	goto	u5881
 36762   0046BC  EF62  F023         	goto	u5880
 36763   0046C0                     u5881:
 36764   0046C0  EF6A  F023         	goto	l8531
 36765   0046C4                     u5880:
 36766   0046C4  0E0F               	movlw	15
 36767   0046C6  641C               	cpfsgt	processEnumeration@i^(0+1280),c
 36768   0046C8  EF68  F023         	goto	u5891
 36769   0046CC  EF6A  F023         	goto	u5890
 36770   0046D0                     u5891:
 36771   0046D0  EF53  F023         	goto	l8525
 36772   0046D4                     u5890:
 36773   0046D4                     l8531:
 36774                           
 36775                           ;../../VLCBlib_PIC/can18_can_2.c: 854:                 if ((enumResult = enumerationResu
      +                          lts[i]) != 0xFF) {
 36776   0046D4  0E32               	movlw	low _enumerationResults
 36777   0046D6  241C               	addwf	processEnumeration@i^(0+1280),w,c
 36778   0046D8  6ED9               	movwf	fsr2l,c
 36779   0046DA  6ADA               	clrf	fsr2h,c
 36780   0046DC  0E06               	movlw	high _enumerationResults
 36781   0046DE  22DA               	addwfc	fsr2h,f,c
 36782   0046E0  50DF               	movf	indf2,w,c
 36783   0046E2  6E1A               	movwf	processEnumeration@enumResult^(0+1280),c
 36784   0046E4  281A               	incf	processEnumeration@enumResult^(0+1280),w,c
 36785   0046E6  B4D8               	btfsc	status,2,c
 36786   0046E8  EF78  F023         	goto	u5901
 36787   0046EC  EF7A  F023         	goto	u5900
 36788   0046F0                     u5901:
 36789   0046F0  EFA2  F023         	goto	l8549
 36790   0046F4                     u5900:
 36791   0046F4                     
 36792                           ;../../VLCBlib_PIC/can18_can_2.c: 855:                     for (newCanId = i*8; (enumRes
      +                          ult & 0x01); newCanId++) {
 36793   0046F4  501C               	movf	processEnumeration@i^(0+1280),w,c
 36794   0046F6  0D08               	mullw	8
 36795   0046F8  C4F3 F51B          	movff	prodl,processEnumeration@newCanId
 36796   0046FC  EF83  F023         	goto	l8539
 36797   004700                     l8535:
 36798                           
 36799                           ;../../VLCBlib_PIC/can18_can_2.c: 856:                         enumResult >>= 1;
 36800   004700  90D8               	bcf	status,0,c
 36801   004702  321A               	rrcf	processEnumeration@enumResult^(0+1280),f,c
 36802   004704                     
 36803                           ;../../VLCBlib_PIC/can18_can_2.c: 857:                     }
 36804   004704  2A1B               	incf	processEnumeration@newCanId^(0+1280),f,c
 36805   004706                     l8539:
 36806   004706  B01A               	btfsc	processEnumeration@enumResult^(0+1280),0,c
 36807   004708  EF88  F023         	goto	u5911
 36808   00470C  EF8A  F023         	goto	u5910
 36809   004710                     u5911:
 36810   004710  EF80  F023         	goto	l8535
 36811   004714                     u5910:
 36812   004714                     
 36813                           ;../../VLCBlib_PIC/can18_can_2.c: 858:                     if ((newCanId >= 1) && (newCa
      +                          nId <= 99)) {
 36814   004714  501B               	movf	processEnumeration@newCanId^(0+1280),w,c
 36815   004716  B4D8               	btfsc	status,2,c
 36816   004718  EF90  F023         	goto	u5921
 36817   00471C  EF92  F023         	goto	u5920
 36818   004720                     u5921:
 36819   004720  EFA2  F023         	goto	l8549
 36820   004724                     u5920:
 36821   004724  0E64               	movlw	100
 36822   004726  601B               	cpfslt	processEnumeration@newCanId^(0+1280),c
 36823   004728  EF98  F023         	goto	u5931
 36824   00472C  EF9A  F023         	goto	u5930
 36825   004730                     u5931:
 36826   004730  EFA2  F023         	goto	l8549
 36827   004734                     u5930:
 36828   004734                     
 36829                           ;../../VLCBlib_PIC/can18_can_2.c: 860:                         canId = newCanId;
 36830   004734  C51B  F5A8         	movff	processEnumeration@newCanId,_canId
 36831   004738                     
 36832                           ;../../VLCBlib_PIC/can18_can_2.c: 861:                         setNewCanId(canId);
 36833   004738  0105               	movlb	5	; () banked
 36834   00473A  51A8               	movf	_canId& (0+255),w,b
 36835   00473C  EC64  F03D         	call	_setNewCanId
 36836                           
 36837                           ;../../VLCBlib_PIC/can18_can_2.c: 862:                     } else {
 36838   004740  EFA7  F023         	goto	l8557
 36839   004744                     l8549:
 36840                           
 36841                           ;../../VLCBlib_PIC/can18_can_2.c: 864:                         canDiagnostics[0x10].asUi
      +                          nt++;
 36842   004744  0106               	movlb	6	; () banked
 36843   004746  4BAE               	infsnz	(_canDiagnostics+32)& (0+255),f,b
 36844   004748  2BAF               	incf	(_canDiagnostics+33)& (0+255),f,b
 36845   00474A                     
 36846                           ; BSR set to: 6
 36847                           ;../../VLCBlib_PIC/can18_can_2.c: 865:                         updateModuleErrorStatus()
      +                          ;
 36848   00474A  ECEC  F040         	call	_updateModuleErrorStatus	;wreg free
 36849   00474E                     l8557:
 36850                           
 36851                           ;../../VLCBlib_PIC/can18_can_2.c: 875:                 if (enumerationState == ENUMERATI
      +                          ON_IN_PROGRESS_TX_WAITING) {
 36852   00474E  0E03               	movlw	3
 36853   004750  0105               	movlb	5	; () banked
 36854   004752  19A5               	xorwf	_enumerationState& (0+255),w,b
 36855   004754  A4D8               	btfss	status,2,c
 36856   004756  EFAF  F023         	goto	u5941
 36857   00475A  EFB1  F023         	goto	u5940
 36858   00475E                     u5941:
 36859   00475E  EFD2  F023         	goto	l8573
 36860   004762                     u5940:
 36861   004762                     
 36862                           ; BSR set to: 5
 36863                           ;../../VLCBlib_PIC/can18_can_2.c: 877:                     for (i=0; i< 32; i++) {
 36864   004762  6A1C               	clrf	processEnumeration@i^(0+1280),c
 36865   004764                     l8565:
 36866                           
 36867                           ; BSR set to: 5
 36868                           ;../../VLCBlib_PIC/can18_can_2.c: 878:                         *((uint8_t*)(((0x3BB0 +((
      +                          8 +8)*4))+((8 +8)*1)) + (i* (8 + 8)))) = canId & 0x7f;
 36869   004764  501C               	movf	processEnumeration@i^(0+1280),w,c
 36870   004766  6E16               	movwf	??_processEnumeration^(0+1280),c
 36871   004768  6A17               	clrf	(??_processEnumeration+1)^(0+1280),c
 36872   00476A  3A16               	swapf	??_processEnumeration^(0+1280),f,c
 36873   00476C  3A17               	swapf	(??_processEnumeration+1)^(0+1280),f,c
 36874   00476E  0EF0               	movlw	240
 36875   004770  1617               	andwf	(??_processEnumeration+1)^(0+1280),f,c
 36876   004772  5016               	movf	??_processEnumeration^(0+1280),w,c
 36877   004774  0B0F               	andlw	15
 36878   004776  1217               	iorwf	(??_processEnumeration+1)^(0+1280),f,c
 36879   004778  0EF0               	movlw	240
 36880   00477A  1616               	andwf	??_processEnumeration^(0+1280),f,c
 36881   00477C  0E00               	movlw	0
 36882   00477E  2416               	addwf	??_processEnumeration^(0+1280),w,c
 36883   004780  6ED9               	movwf	fsr2l,c
 36884   004782  0E3C               	movlw	60
 36885   004784  2017               	addwfc	(??_processEnumeration+1)^(0+1280),w,c
 36886   004786  6EDA               	movwf	fsr2h,c
 36887   004788  51A8               	movf	_canId& (0+255),w,b
 36888   00478A  0B7F               	andlw	127
 36889   00478C  6EDF               	movwf	indf2,c
 36890   00478E                     
 36891                           ; BSR set to: 5
 36892                           ;../../VLCBlib_PIC/can18_can_2.c: 879:                     }
 36893   00478E  2A1C               	incf	processEnumeration@i^(0+1280),f,c
 36894   004790                     
 36895                           ; BSR set to: 5
 36896   004790  0E1F               	movlw	31
 36897   004792  641C               	cpfsgt	processEnumeration@i^(0+1280),c
 36898   004794  EFCE  F023         	goto	u5951
 36899   004798  EFD0  F023         	goto	u5950
 36900   00479C                     u5951:
 36901   00479C  EFB2  F023         	goto	l8565
 36902   0047A0                     u5950:
 36903   0047A0                     
 36904                           ; BSR set to: 5
 36905                           ;../../VLCBlib_PIC/can18_can_2.c: 881:                     C1FIFOCON2H |= 0x2;
 36906   0047A0  0101               	movlb	1	; () banked
 36907   0047A2  8369               	bsf	105,1,b	;volatile
 36908   0047A4                     l8573:
 36909                           
 36910                           ;../../VLCBlib_PIC/can18_can_2.c: 883:                 enumerationState = NO_ENUMERATION
      +                          ;
 36911   0047A4  0105               	movlb	5	; () banked
 36912   0047A6  6BA5               	clrf	_enumerationState& (0+255),b
 36913   0047A8  EFF0  F023         	goto	l742
 36914   0047AC                     l8577:
 36915   0047AC  0105               	movlb	5	; () banked
 36916   0047AE  51A5               	movf	_enumerationState& (0+255),w,b
 36917   0047B0  6E16               	movwf	??_processEnumeration^(0+1280),c
 36918   0047B2  6A17               	clrf	(??_processEnumeration+1)^(0+1280),c
 36919                           
 36920                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36921                           ; Switch size 1, requested type "simple"
 36922                           ; Number of cases is 1, Range of values is 0 to 0
 36923                           ; switch strategies available:
 36924                           ; Name         Instructions Cycles
 36925                           ; simple_byte            4     3 (average)
 36926                           ;	Chosen strategy is simple_byte
 36927   0047B4  5017               	movf	(??_processEnumeration+1)^(0+1280),w,c
 36928   0047B6  0A00               	xorlw	0	; case 0
 36929   0047B8  B4D8               	btfsc	status,2,c
 36930   0047BA  EFE1  F023         	goto	l11609
 36931   0047BE  EFF0  F023         	goto	l742
 36932   0047C2                     l11609:
 36933                           
 36934                           ; BSR set to: 5
 36935                           ; Switch size 1, requested type "simple"
 36936                           ; Number of cases is 3, Range of values is 1 to 3
 36937                           ; switch strategies available:
 36938                           ; Name         Instructions Cycles
 36939                           ; simple_byte           10     6 (average)
 36940                           ;	Chosen strategy is simple_byte
 36941   0047C2  5016               	movf	??_processEnumeration^(0+1280),w,c
 36942   0047C4  0A01               	xorlw	1	; case 1
 36943   0047C6  B4D8               	btfsc	status,2,c
 36944   0047C8  EF11  F023         	goto	l8517
 36945   0047CC  0A03               	xorlw	3	; case 2
 36946   0047CE  B4D8               	btfsc	status,2,c
 36947   0047D0  EF33  F023         	goto	l8521
 36948   0047D4  0A01               	xorlw	1	; case 3
 36949   0047D6  B4D8               	btfsc	status,2,c
 36950   0047D8  EF33  F023         	goto	l8521
 36951   0047DC  EFF0  F023         	goto	l742
 36952   0047E0                     l742:
 36953   0047E0  0012               	return		;funcret
 36954   0047E2                     __end_of_processEnumeration:
 36955                           	callstack 0
 36956                           
 36957 ;; *************** function _startEnumeration *****************
 36958 ;; Defined at:
 36959 ;;		line 777 in file "../../VLCBlib_PIC/can18_can_2.c"
 36960 ;; Parameters:    Size  Location     Type
 36961 ;;  txWaiting       1    wreg     enum E23474
 36962 ;; Auto vars:     Size  Location     Type
 36963 ;;  txWaiting       1   10[COMRAM] enum E23474
 36964 ;;  i               1   11[COMRAM] unsigned char 
 36965 ;; Return value:  Size  Location     Type
 36966 ;;                  1    wreg      void 
 36967 ;; Registers used:
 36968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36969 ;; Tracked objects:
 36970 ;;		On entry : 0/0
 36971 ;;		On exit  : 0/0
 36972 ;;		Unchanged: 0/0
 36973 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36977 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36978 ;;Total ram usage:        2 bytes
 36979 ;; Hardware stack levels used: 1
 36980 ;; Hardware stack levels required when called: 2
 36981 ;; This function calls:
 36982 ;;		_sendRTR
 36983 ;;		_tickGet
 36984 ;; This function is called by:
 36985 ;;		_canSendMessage
 36986 ;;		_processEnumeration
 36987 ;; This function uses a non-reentrant model
 36988 ;;
 36989                           
 36990                           	psect	text95
 36991   0074B6                     __ptext95:
 36992                           	callstack 0
 36993   0074B6                     _startEnumeration:
 36994                           	callstack 118
 36995                           
 36996                           ;incstack = 0
 36997                           ;startEnumeration@txWaiting stored from wreg
 36998   0074B6  6E0B               	movwf	startEnumeration@txWaiting^(0+1280),c
 36999   0074B8                     
 37000                           ;../../VLCBlib_PIC/can18_can_2.c: 778:     uint8_t i;;../../VLCBlib_PIC/can18_can_2.c: 7
      +                          80:     for (i=1; i< (0x7F/8)+1; i++) {
 37001   0074B8  0E01               	movlw	1
 37002   0074BA  6E0C               	movwf	startEnumeration@i^(0+1280),c
 37003   0074BC                     l7379:
 37004                           
 37005                           ;../../VLCBlib_PIC/can18_can_2.c: 781:         enumerationResults[i] = 0;
 37006   0074BC  0E32               	movlw	low _enumerationResults
 37007   0074BE  240C               	addwf	startEnumeration@i^(0+1280),w,c
 37008   0074C0  6ED9               	movwf	fsr2l,c
 37009   0074C2  6ADA               	clrf	fsr2h,c
 37010   0074C4  0E06               	movlw	high _enumerationResults
 37011   0074C6  22DA               	addwfc	fsr2h,f,c
 37012   0074C8  6ADF               	clrf	indf2,c
 37013   0074CA                     
 37014                           ;../../VLCBlib_PIC/can18_can_2.c: 782:     }
 37015   0074CA  2A0C               	incf	startEnumeration@i^(0+1280),f,c
 37016   0074CC  0E0F               	movlw	15
 37017   0074CE  640C               	cpfsgt	startEnumeration@i^(0+1280),c
 37018   0074D0  EF6C  F03A         	goto	u4741
 37019   0074D4  EF6E  F03A         	goto	u4740
 37020   0074D8                     u4741:
 37021   0074D8  EF5E  F03A         	goto	l7379
 37022   0074DC                     u4740:
 37023   0074DC                     
 37024                           ;../../VLCBlib_PIC/can18_can_2.c: 783:     enumerationResults[0] = 1;
 37025   0074DC  0E01               	movlw	1
 37026   0074DE  0106               	movlb	6	; () banked
 37027   0074E0  6F32               	movwf	_enumerationResults& (0+255),b
 37028                           
 37029                           ;../../VLCBlib_PIC/can18_can_2.c: 785:     enumerationState = txWaiting ? ENUMERATION_IN
      +                          _PROGRESS_TX_WAITING : ENUMERATION_IN_PROGRESS;
 37030   0074E2  500B               	movf	startEnumeration@txWaiting^(0+1280),w,c
 37031   0074E4  A4D8               	btfss	status,2,c
 37032   0074E6  EF77  F03A         	goto	u4751
 37033   0074EA  EF79  F03A         	goto	u4750
 37034   0074EE                     u4751:
 37035   0074EE  EF7E  F03A         	goto	l7389
 37036   0074F2                     u4750:
 37037   0074F2                     
 37038                           ; BSR set to: 6
 37039   0074F2  0E02               	movlw	2
 37040   0074F4  0105               	movlb	5	; () banked
 37041   0074F6  6FA5               	movwf	_enumerationState& (0+255),b
 37042   0074F8  EF81  F03A         	goto	l7391
 37043   0074FC                     l7389:
 37044                           
 37045                           ; BSR set to: 6
 37046   0074FC  0E03               	movlw	3
 37047   0074FE  0105               	movlb	5	; () banked
 37048   007500  6FA5               	movwf	_enumerationState& (0+255),b
 37049   007502                     l7391:
 37050                           
 37051                           ; BSR set to: 5
 37052                           ;../../VLCBlib_PIC/can18_can_2.c: 786:     enumerationStartTime.val = tickGet();
 37053   007502  EC75  F039         	call	_tickGet	;wreg free
 37054   007506  C501  F574         	movff	?_tickGet,_enumerationStartTime
 37055   00750A  C502  F575         	movff	?_tickGet+1,_enumerationStartTime+1
 37056   00750E  C503  F576         	movff	?_tickGet+2,_enumerationStartTime+2
 37057   007512  C504  F577         	movff	?_tickGet+3,_enumerationStartTime+3
 37058   007516                     
 37059                           ;../../VLCBlib_PIC/can18_can_2.c: 788:     canDiagnostics[0x0D].asUint++;
 37060   007516  0106               	movlb	6	; () banked
 37061   007518  4BA8               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 37062   00751A  2BA9               	incf	(_canDiagnostics+27)& (0+255),f,b
 37063   00751C                     
 37064                           ; BSR set to: 6
 37065                           ;../../VLCBlib_PIC/can18_can_2.c: 790:     sendRTR();
 37066   00751C  ECAA  F03D         	call	_sendRTR	;wreg free
 37067   007520  0012               	return		;funcret
 37068   007522                     __end_of_startEnumeration:
 37069                           	callstack 0
 37070                           
 37071 ;; *************** function _sendRTR *****************
 37072 ;; Defined at:
 37073 ;;		line 680 in file "../../VLCBlib_PIC/can18_can_2.c"
 37074 ;; Parameters:    Size  Location     Type
 37075 ;;		None
 37076 ;; Auto vars:     Size  Location     Type
 37077 ;;  txFifoObj       2    0[COMRAM] PTR unsigned char 
 37078 ;;		 -> RAM(16383), 
 37079 ;; Return value:  Size  Location     Type
 37080 ;;                  1    wreg      void 
 37081 ;; Registers used:
 37082 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37083 ;; Tracked objects:
 37084 ;;		On entry : 0/0
 37085 ;;		On exit  : 0/0
 37086 ;;		Unchanged: 0/0
 37087 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37089 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37092 ;;Total ram usage:        2 bytes
 37093 ;; Hardware stack levels used: 1
 37094 ;; Hardware stack levels required when called: 1
 37095 ;; This function calls:
 37096 ;;		Nothing
 37097 ;; This function is called by:
 37098 ;;		_startEnumeration
 37099 ;; This function uses a non-reentrant model
 37100 ;;
 37101                           
 37102                           	psect	text96
 37103   007B54                     __ptext96:
 37104                           	callstack 0
 37105   007B54                     _sendRTR:
 37106                           	callstack 118
 37107   007B54                     
 37108                           ;../../VLCBlib_PIC/can18_can_2.c: 681:     uint8_t* txFifoObj = (uint8_t*) C1TXQUA;
 37109   007B54  C158 F501          	movff	344,sendRTR@txFifoObj	;volatile
 37110   007B58  C159 F502          	movff	345,sendRTR@txFifoObj+1	;volatile
 37111   007B5C                     
 37112                           ;../../VLCBlib_PIC/can18_can_2.c: 682:     txFifoObj[0] = (canId & 0x7F);
 37113   007B5C  0105               	movlb	5	; () banked
 37114   007B5E  51A8               	movf	_canId& (0+255),w,b
 37115   007B60  0B7F               	andlw	127
 37116   007B62  C501  F4D9         	movff	sendRTR@txFifoObj,fsr2l
 37117   007B66  C502  F4DA         	movff	sendRTR@txFifoObj+1,fsr2h
 37118   007B6A  6EDF               	movwf	indf2,c
 37119   007B6C                     
 37120                           ; BSR set to: 5
 37121                           ;../../VLCBlib_PIC/can18_can_2.c: 683:     txFifoObj[1] = 0;
 37122   007B6C  EE20 F001          	lfsr	2,1
 37123   007B70  5001               	movf	sendRTR@txFifoObj^(0+1280),w,c
 37124   007B72  26D9               	addwf	fsr2l,f,c
 37125   007B74  5002               	movf	(sendRTR@txFifoObj+1)^(0+1280),w,c
 37126   007B76  22DA               	addwfc	fsr2h,f,c
 37127   007B78  6ADF               	clrf	indf2,c
 37128   007B7A                     
 37129                           ; BSR set to: 5
 37130                           ;../../VLCBlib_PIC/can18_can_2.c: 684:     txFifoObj[4] = 0x20;
 37131   007B7A  EE20 F004          	lfsr	2,4
 37132   007B7E  5001               	movf	sendRTR@txFifoObj^(0+1280),w,c
 37133   007B80  26D9               	addwf	fsr2l,f,c
 37134   007B82  5002               	movf	(sendRTR@txFifoObj+1)^(0+1280),w,c
 37135   007B84  22DA               	addwfc	fsr2h,f,c
 37136   007B86  0E20               	movlw	32
 37137   007B88  6EDF               	movwf	indf2,c
 37138   007B8A                     
 37139                           ; BSR set to: 5
 37140                           ;../../VLCBlib_PIC/can18_can_2.c: 685:     C1TXQCONH |= (0x2 | 0x1);
 37141   007B8A  0E03               	movlw	3
 37142   007B8C  0101               	movlb	1	; () banked
 37143   007B8E  1351               	iorwf	81,f,b	;volatile
 37144   007B90                     
 37145                           ; BSR set to: 1
 37146                           ;../../VLCBlib_PIC/can18_can_2.c: 687:     canDiagnostics[0x06].asUint++;
 37147   007B90  0106               	movlb	6	; () banked
 37148   007B92  4B9A               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 37149   007B94  2B9B               	incf	(_canDiagnostics+13)& (0+255),f,b
 37150   007B96                     
 37151                           ; BSR set to: 6
 37152   007B96  0012               	return		;funcret
 37153   007B98                     __end_of_sendRTR:
 37154                           	callstack 0
 37155                           
 37156 ;; *************** function _setNewCanId *****************
 37157 ;; Defined at:
 37158 ;;		line 896 in file "../../VLCBlib_PIC/can18_can_2.c"
 37159 ;; Parameters:    Size  Location     Type
 37160 ;;  newCanId        1    wreg     unsigned char 
 37161 ;; Auto vars:     Size  Location     Type
 37162 ;;  newCanId        1   20[COMRAM] unsigned char 
 37163 ;; Return value:  Size  Location     Type
 37164 ;;                  1    wreg      enum E23636
 37165 ;; Registers used:
 37166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37167 ;; Tracked objects:
 37168 ;;		On entry : 0/0
 37169 ;;		On exit  : 0/0
 37170 ;;		Unchanged: 0/0
 37171 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37176 ;;Total ram usage:        1 bytes
 37177 ;; Hardware stack levels used: 1
 37178 ;; Hardware stack levels required when called: 6
 37179 ;; This function calls:
 37180 ;;		_prepareSelfEnumResponse
 37181 ;;		_writeNVM
 37182 ;; This function is called by:
 37183 ;;		_processEnumeration
 37184 ;; This function uses a non-reentrant model
 37185 ;;
 37186                           
 37187                           	psect	text97
 37188   007AC8                     __ptext97:
 37189                           	callstack 0
 37190   007AC8                     _setNewCanId:
 37191                           	callstack 117
 37192                           
 37193                           ; BSR set to: 6
 37194                           ;incstack = 0
 37195                           ;setNewCanId@newCanId stored from wreg
 37196   007AC8  6E15               	movwf	setNewCanId@newCanId^(0+1280),c
 37197   007ACA                     
 37198                           ;../../VLCBlib_PIC/can18_can_2.c: 897:     if ((newCanId >= 1) && (newCanId <= 99)) {
 37199   007ACA  5015               	movf	setNewCanId@newCanId^(0+1280),w,c
 37200   007ACC  B4D8               	btfsc	status,2,c
 37201   007ACE  EF6B  F03D         	goto	u5471
 37202   007AD2  EF6D  F03D         	goto	u5470
 37203   007AD6                     u5471:
 37204   007AD6  EF87  F03D         	goto	l746
 37205   007ADA                     u5470:
 37206   007ADA  0E64               	movlw	100
 37207   007ADC  6015               	cpfslt	setNewCanId@newCanId^(0+1280),c
 37208   007ADE  EF73  F03D         	goto	u5481
 37209   007AE2  EF75  F03D         	goto	u5480
 37210   007AE6                     u5481:
 37211   007AE6  EF87  F03D         	goto	l746
 37212   007AEA                     u5480:
 37213   007AEA                     
 37214                           ;../../VLCBlib_PIC/can18_can_2.c: 898:         canId = newCanId;
 37215   007AEA  C515  F5A8         	movff	setNewCanId@newCanId,_canId
 37216   007AEE                     
 37217                           ;../../VLCBlib_PIC/can18_can_2.c: 900:         prepareSelfEnumResponse();
 37218   007AEE  ECFD  F038         	call	_prepareSelfEnumResponse	;wreg free
 37219                           
 37220                           ;../../VLCBlib_PIC/can18_can_2.c: 901:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId
      +                           );
 37221   007AF2  0EFE               	movlw	254
 37222   007AF4  6E0E               	movwf	writeNVM@index^(0+1280),c
 37223   007AF6  0E03               	movlw	3
 37224   007AF8  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 37225   007AFA  0E00               	movlw	0
 37226   007AFC  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 37227   007AFE  C515  F511         	movff	setNewCanId@newCanId,writeNVM@value
 37228   007B02  0E00               	movlw	0
 37229   007B04  EC91  F03B         	call	_writeNVM
 37230   007B08                     
 37231                           ;../../VLCBlib_PIC/can18_can_2.c: 903:         canDiagnostics[0x0F].asUint++;
 37232   007B08  0106               	movlb	6	; () banked
 37233   007B0A  4BAC               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 37234   007B0C  2BAD               	incf	(_canDiagnostics+31)& (0+255),f,b
 37235   007B0E                     l746:
 37236   007B0E  0012               	return		;funcret
 37237   007B10                     __end_of_setNewCanId:
 37238                           	callstack 0
 37239                           
 37240 ;; *************** function _prepareSelfEnumResponse *****************
 37241 ;; Defined at:
 37242 ;;		line 389 in file "../../VLCBlib_PIC/can18_can_2.c"
 37243 ;; Parameters:    Size  Location     Type
 37244 ;;		None
 37245 ;; Auto vars:     Size  Location     Type
 37246 ;;  txFifoObj       2    0[COMRAM] PTR unsigned char 
 37247 ;;		 -> RAM(16383), 
 37248 ;; Return value:  Size  Location     Type
 37249 ;;                  1    wreg      void 
 37250 ;; Registers used:
 37251 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37252 ;; Tracked objects:
 37253 ;;		On entry : 0/0
 37254 ;;		On exit  : 0/0
 37255 ;;		Unchanged: 0/0
 37256 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37258 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37261 ;;Total ram usage:        2 bytes
 37262 ;; Hardware stack levels used: 1
 37263 ;; Hardware stack levels required when called: 1
 37264 ;; This function calls:
 37265 ;;		Nothing
 37266 ;; This function is called by:
 37267 ;;		_canPowerUp
 37268 ;;		_setNewCanId
 37269 ;; This function uses a non-reentrant model
 37270 ;;
 37271                           
 37272                           	psect	text98
 37273   0071FA                     __ptext98:
 37274                           	callstack 0
 37275   0071FA                     _prepareSelfEnumResponse:
 37276                           	callstack 123
 37277   0071FA                     
 37278                           ;../../VLCBlib_PIC/can18_can_2.c: 390:     uint8_t* txFifoObj = (uint8_t*) C1FIFOUA1;
 37279   0071FA  C164 F501          	movff	356,prepareSelfEnumResponse@txFifoObj	;volatile
 37280   0071FE  C165 F502          	movff	357,prepareSelfEnumResponse@txFifoObj+1	;volatile
 37281                           
 37282                           ;../../VLCBlib_PIC/can18_can_2.c: 392:     while (C1FIFOSTA1Lbits.TFNRFNIF == 1) {
 37283   007202  EF30  F039         	goto	l7817
 37284   007206                     l7813:
 37285                           
 37286                           ; BSR set to: 1
 37287                           ;../../VLCBlib_PIC/can18_can_2.c: 394:         txFifoObj[0] = (canId & 0x7F);
 37288   007206  0105               	movlb	5	; () banked
 37289   007208  51A8               	movf	_canId& (0+255),w,b
 37290   00720A  0B7F               	andlw	127
 37291   00720C  C501  F4D9         	movff	prepareSelfEnumResponse@txFifoObj,fsr2l
 37292   007210  C502  F4DA         	movff	prepareSelfEnumResponse@txFifoObj+1,fsr2h
 37293   007214  6EDF               	movwf	indf2,c
 37294                           
 37295                           ;../../VLCBlib_PIC/can18_can_2.c: 395:         txFifoObj[1] = 0;
 37296   007216  EE20 F001          	lfsr	2,1
 37297   00721A  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37298   00721C  26D9               	addwf	fsr2l,f,c
 37299   00721E  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37300   007220  22DA               	addwfc	fsr2h,f,c
 37301   007222  6ADF               	clrf	indf2,c
 37302                           
 37303                           ;../../VLCBlib_PIC/can18_can_2.c: 396:         txFifoObj[4] = 0;
 37304   007224  EE20 F004          	lfsr	2,4
 37305   007228  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37306   00722A  26D9               	addwf	fsr2l,f,c
 37307   00722C  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37308   00722E  22DA               	addwfc	fsr2h,f,c
 37309   007230  6ADF               	clrf	indf2,c
 37310                           
 37311                           ;../../VLCBlib_PIC/can18_can_2.c: 397:         txFifoObj[5] = 0;
 37312   007232  EE20 F005          	lfsr	2,5
 37313   007236  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37314   007238  26D9               	addwf	fsr2l,f,c
 37315   00723A  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37316   00723C  22DA               	addwfc	fsr2h,f,c
 37317   00723E  6ADF               	clrf	indf2,c
 37318                           
 37319                           ;../../VLCBlib_PIC/can18_can_2.c: 398:         txFifoObj[6] = 0;
 37320   007240  EE20 F006          	lfsr	2,6
 37321   007244  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37322   007246  26D9               	addwf	fsr2l,f,c
 37323   007248  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37324   00724A  22DA               	addwfc	fsr2h,f,c
 37325   00724C  6ADF               	clrf	indf2,c
 37326                           
 37327                           ;../../VLCBlib_PIC/can18_can_2.c: 399:         txFifoObj[7] = 0;
 37328   00724E  EE20 F007          	lfsr	2,7
 37329   007252  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 37330   007254  26D9               	addwf	fsr2l,f,c
 37331   007256  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 37332   007258  22DA               	addwfc	fsr2h,f,c
 37333   00725A  6ADF               	clrf	indf2,c
 37334   00725C                     
 37335                           ; BSR set to: 5
 37336                           ;../../VLCBlib_PIC/can18_can_2.c: 400:         C1FIFOCON1Hbits.UINC = 1;
 37337   00725C  0101               	movlb	1	; () banked
 37338   00725E  815D               	bsf	93,0,b	;volatile
 37339   007260                     l7817:
 37340                           
 37341                           ;../../VLCBlib_PIC/can18_can_2.c: 392:     while (C1FIFOSTA1Lbits.TFNRFNIF == 1) {
 37342   007260  0101               	movlb	1	; () banked
 37343   007262  B160               	btfsc	96,0,b	;volatile
 37344   007264  EF36  F039         	goto	u5191
 37345   007268  EF38  F039         	goto	u5190
 37346   00726C                     u5191:
 37347   00726C  EF03  F039         	goto	l7813
 37348   007270                     u5190:
 37349   007270                     
 37350                           ; BSR set to: 1
 37351   007270  0012               	return		;funcret
 37352   007272                     __end_of_prepareSelfEnumResponse:
 37353                           	callstack 0
 37354                           
 37355 ;; *************** function _APP_preProcessMessage *****************
 37356 ;; Defined at:
 37357 ;;		line 73 in file "../canargb_events.c"
 37358 ;; Parameters:    Size  Location     Type
 37359 ;;  m               2    0[COMRAM] PTR struct Message
 37360 ;;		 -> poll@m(9), 
 37361 ;; Auto vars:     Size  Location     Type
 37362 ;;		None
 37363 ;; Return value:  Size  Location     Type
 37364 ;;                  1    wreg      enum E23290
 37365 ;; Registers used:
 37366 ;;		wreg
 37367 ;; Tracked objects:
 37368 ;;		On entry : 0/0
 37369 ;;		On exit  : 0/0
 37370 ;;		Unchanged: 0/0
 37371 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37372 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37375 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37376 ;;Total ram usage:        2 bytes
 37377 ;; Hardware stack levels used: 1
 37378 ;; Hardware stack levels required when called: 1
 37379 ;; This function calls:
 37380 ;;		Nothing
 37381 ;; This function is called by:
 37382 ;;		_poll
 37383 ;; This function uses a non-reentrant model
 37384 ;;
 37385                           
 37386                           	psect	text99
 37387   00825A                     __ptext99:
 37388                           	callstack 0
 37389   00825A                     _APP_preProcessMessage:
 37390                           	callstack 124
 37391   00825A                     
 37392                           ;../canargb_events.c: 74:     return NOT_PROCESSED;
 37393   00825A  0E00               	movlw	0
 37394   00825C  0012               	return		;funcret
 37395   00825E                     __end_of_APP_preProcessMessage:
 37396                           	callstack 0
 37397                           
 37398 ;; *************** function _APP_postProcessMessage *****************
 37399 ;; Defined at:
 37400 ;;		line 79 in file "../canargb_events.c"
 37401 ;; Parameters:    Size  Location     Type
 37402 ;;  m               2    0[COMRAM] PTR struct Message
 37403 ;;		 -> poll@m(9), 
 37404 ;; Auto vars:     Size  Location     Type
 37405 ;;		None
 37406 ;; Return value:  Size  Location     Type
 37407 ;;                  1    wreg      enum E23290
 37408 ;; Registers used:
 37409 ;;		wreg
 37410 ;; Tracked objects:
 37411 ;;		On entry : 0/0
 37412 ;;		On exit  : 0/0
 37413 ;;		Unchanged: 0/0
 37414 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37419 ;;Total ram usage:        2 bytes
 37420 ;; Hardware stack levels used: 1
 37421 ;; Hardware stack levels required when called: 1
 37422 ;; This function calls:
 37423 ;;		Nothing
 37424 ;; This function is called by:
 37425 ;;		_poll
 37426 ;; This function uses a non-reentrant model
 37427 ;;
 37428                           
 37429                           	psect	text100
 37430   00825E                     __ptext100:
 37431                           	callstack 0
 37432   00825E                     _APP_postProcessMessage:
 37433                           	callstack 124
 37434   00825E                     
 37435                           ;../canargb_events.c: 80:     return NOT_PROCESSED;
 37436   00825E  0E00               	movlw	0
 37437   008260  0012               	return		;funcret
 37438   008262                     __end_of_APP_postProcessMessage:
 37439                           	callstack 0
 37440                           
 37441 ;; *************** function _loop *****************
 37442 ;; Defined at:
 37443 ;;		line 254 in file "../main.c"
 37444 ;; Parameters:    Size  Location     Type
 37445 ;;		None
 37446 ;; Auto vars:     Size  Location     Type
 37447 ;;		None
 37448 ;; Return value:  Size  Location     Type
 37449 ;;                  1    wreg      void 
 37450 ;; Registers used:
 37451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37452 ;; Tracked objects:
 37453 ;;		On entry : 0/0
 37454 ;;		On exit  : 0/0
 37455 ;;		Unchanged: 0/0
 37456 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37459 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37460 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37461 ;;Total ram usage:        4 bytes
 37462 ;; Hardware stack levels used: 1
 37463 ;; Hardware stack levels required when called: 3
 37464 ;; This function calls:
 37465 ;;		_doFlash
 37466 ;;		_refreshString
 37467 ;;		_tickGet
 37468 ;; This function is called by:
 37469 ;;		_main
 37470 ;; This function uses a non-reentrant model
 37471 ;;
 37472                           
 37473                           	psect	text101
 37474   00783E                     __ptext101:
 37475                           	callstack 0
 37476   00783E                     _loop:
 37477                           	callstack 123
 37478   00783E                     
 37479                           ;../main.c: 256:     if ((tickGet() - flashTime.val) > (62500/2)) {
 37480   00783E  EC75  F039         	call	_tickGet	;wreg free
 37481   007842  0105               	movlb	5	; () banked
 37482   007844  5180               	movf	_flashTime& (0+255),w,b
 37483   007846  5C01               	subwf	?_tickGet^(0+1280),w,c
 37484   007848  6E0B               	movwf	??_loop^(0+1280),c
 37485   00784A  5181               	movf	(_flashTime+1)& (0+255),w,b
 37486   00784C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 37487   00784E  6E0C               	movwf	(??_loop+1)^(0+1280),c
 37488   007850  5182               	movf	(_flashTime+2)& (0+255),w,b
 37489   007852  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 37490   007854  6E0D               	movwf	(??_loop+2)^(0+1280),c
 37491   007856  5183               	movf	(_flashTime+3)& (0+255),w,b
 37492   007858  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 37493   00785A  6E0E               	movwf	(??_loop+3)^(0+1280),c
 37494   00785C  500E               	movf	(??_loop+3)^(0+1280),w,c
 37495   00785E  100D               	iorwf	(??_loop+2)^(0+1280),w,c
 37496   007860  E10B               	bnz	u8300
 37497   007862  0E13               	movlw	19
 37498   007864  5C0B               	subwf	??_loop^(0+1280),w,c
 37499   007866  0E7A               	movlw	122
 37500   007868  580C               	subwfb	(??_loop+1)^(0+1280),w,c
 37501   00786A  A0D8               	btfss	status,0,c
 37502   00786C  EF3A  F03C         	goto	u8301
 37503   007870  EF3C  F03C         	goto	u8300
 37504   007874                     u8301:
 37505   007874  EF48  F03C         	goto	l10891
 37506   007878                     u8300:
 37507   007878                     
 37508                           ; BSR set to: 5
 37509                           ;../main.c: 257:         doFlash();
 37510   007878  EC68  F00F         	call	_doFlash	;wreg free
 37511   00787C                     
 37512                           ;../main.c: 258:         flashTime.val = tickGet();
 37513   00787C  EC75  F039         	call	_tickGet	;wreg free
 37514   007880  C501  F580         	movff	?_tickGet,_flashTime
 37515   007884  C502  F581         	movff	?_tickGet+1,_flashTime+1
 37516   007888  C503  F582         	movff	?_tickGet+2,_flashTime+2
 37517   00788C  C504  F583         	movff	?_tickGet+3,_flashTime+3
 37518   007890                     l10891:
 37519                           
 37520                           ;../main.c: 261:     refreshString();
 37521   007890  EC91  F03F         	call	_refreshString	;wreg free
 37522   007894  0012               	return		;funcret
 37523   007896                     __end_of_loop:
 37524                           	callstack 0
 37525                           
 37526 ;; *************** function _refreshString *****************
 37527 ;; Defined at:
 37528 ;;		line 371 in file "../canargb_leds.c"
 37529 ;; Parameters:    Size  Location     Type
 37530 ;;		None
 37531 ;; Auto vars:     Size  Location     Type
 37532 ;;  offset          2    0        unsigned short 
 37533 ;; Return value:  Size  Location     Type
 37534 ;;                  1    wreg      void 
 37535 ;; Registers used:
 37536 ;;		wreg, status,2
 37537 ;; Tracked objects:
 37538 ;;		On entry : 0/0
 37539 ;;		On exit  : 0/0
 37540 ;;		Unchanged: 0/0
 37541 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37546 ;;Total ram usage:        0 bytes
 37547 ;; Hardware stack levels used: 1
 37548 ;; Hardware stack levels required when called: 1
 37549 ;; This function calls:
 37550 ;;		Nothing
 37551 ;; This function is called by:
 37552 ;;		_loop
 37553 ;; This function uses a non-reentrant model
 37554 ;;
 37555                           
 37556                           	psect	text102
 37557   007F22                     __ptext102:
 37558                           	callstack 0
 37559   007F22                     _refreshString:
 37560                           	callstack 124
 37561   007F22                     
 37562                           ;../canargb_leds.c: 372:     uint16_t offset;;../canargb_leds.c: 377:     if (refreshReq
      +                          uired) {
 37563   007F22  0105               	movlb	5	; () banked
 37564   007F24  51AB               	movf	_refreshRequired& (0+255),w,b
 37565   007F26  B4D8               	btfsc	status,2,c
 37566   007F28  EF98  F03F         	goto	u6691
 37567   007F2C  EF9A  F03F         	goto	u6690
 37568   007F30                     u6691:
 37569   007F30  EFA7  F03F         	goto	l291
 37570   007F34                     u6690:
 37571   007F34                     
 37572                           ; BSR set to: 5
 37573                           ;../canargb_leds.c: 378:         refreshRequired = 0;
 37574   007F34  6BAB               	clrf	_refreshRequired& (0+255),b
 37575   007F36                     
 37576                           ; BSR set to: 5
 37577                           ;../canargb_leds.c: 381:         SPI1TCNT = 3 * 255;
 37578   007F36  0E02               	movlw	2
 37579   007F38  0100               	movlb	0	; () banked
 37580   007F3A  6F83               	movwf	131,b	;volatile
 37581   007F3C  0EFD               	movlw	253
 37582   007F3E  6F82               	movwf	130,b	;volatile
 37583   007F40                     
 37584                           ; BSR set to: 0
 37585                           ;../canargb_leds.c: 382:         DMAnCON0bits.SIRQEN = 1;
 37586   007F40  8DFC               	bsf	252,6,b	;volatile
 37587   007F42                     
 37588                           ; BSR set to: 0
 37589                           ;../canargb_leds.c: 394: LATCbits.LATC6 = flashState;
 37590   007F42  0105               	movlb	5	; () banked
 37591   007F44  B1AC               	btfsc	_flashState& (0+255),0,b
 37592   007F46  D002               	bra	u6705
 37593   007F48  9CC0               	bcf	192,6,c	;volatile
 37594   007F4A  D001               	bra	u6706
 37595   007F4C                     u6705:
 37596   007F4C  8CC0               	bsf	192,6,c	;volatile
 37597   007F4E                     u6706:
 37598   007F4E                     l291:
 37599   007F4E  0012               	return		;funcret
 37600   007F50                     __end_of_refreshString:
 37601                           	callstack 0
 37602                           
 37603 ;; *************** function _doFlash *****************
 37604 ;; Defined at:
 37605 ;;		line 282 in file "../canargb_leds.c"
 37606 ;; Parameters:    Size  Location     Type
 37607 ;;		None
 37608 ;; Auto vars:     Size  Location     Type
 37609 ;;  ledno           1    5[COMRAM] unsigned char 
 37610 ;;  order           1    4[COMRAM] unsigned char 
 37611 ;; Return value:  Size  Location     Type
 37612 ;;                  1    wreg      void 
 37613 ;; Registers used:
 37614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37615 ;; Tracked objects:
 37616 ;;		On entry : 0/0
 37617 ;;		On exit  : 0/0
 37618 ;;		Unchanged: 0/0
 37619 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37621 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37623 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37624 ;;Total ram usage:        2 bytes
 37625 ;; Hardware stack levels used: 1
 37626 ;; Hardware stack levels required when called: 2
 37627 ;; This function calls:
 37628 ;;		_getNV
 37629 ;; This function is called by:
 37630 ;;		_loop
 37631 ;; This function uses a non-reentrant model
 37632 ;;
 37633                           
 37634                           	psect	text103
 37635   001ED0                     __ptext103:
 37636                           	callstack 0
 37637   001ED0                     _doFlash:
 37638                           	callstack 123
 37639   001ED0                     
 37640                           ;../canargb_leds.c: 283:     uint8_t ledno;;../canargb_leds.c: 284:     uint8_t order;;.
      +                          ./canargb_leds.c: 286:     flashState = 1-flashState;
 37641   001ED0  0105               	movlb	5	; () banked
 37642   001ED2  51AC               	movf	_flashState& (0+255),w,b
 37643   001ED4  0801               	sublw	1
 37644   001ED6  6FAC               	movwf	_flashState& (0+255),b
 37645   001ED8                     
 37646                           ; BSR set to: 5
 37647                           ;../canargb_leds.c: 287:     order = (uint8_t)getNV(49);
 37648   001ED8  0E31               	movlw	49
 37649   001EDA  ECA0  F03C         	call	_getNV
 37650   001EDE  5001               	movf	?_getNV^(0+1280),w,c
 37651   001EE0  6E05               	movwf	doFlash@order^(0+1280),c
 37652   001EE2                     
 37653                           ;../canargb_leds.c: 289:     for (ledno=0; ledno < 255; ledno++) {
 37654   001EE2  6A06               	clrf	doFlash@ledno^(0+1280),c
 37655   001EE4                     l9297:
 37656                           
 37657                           ;../canargb_leds.c: 290:         if (flashState) {
 37658   001EE4  0105               	movlb	5	; () banked
 37659   001EE6  51AC               	movf	_flashState& (0+255),w,b
 37660   001EE8  B4D8               	btfsc	status,2,c
 37661   001EEA  EF79  F00F         	goto	u6671
 37662   001EEE  EF7B  F00F         	goto	u6670
 37663   001EF2                     u6671:
 37664   001EF2  EFDC  F012         	goto	l9331
 37665   001EF6                     u6670:
 37666   001EF6  EF21  F011         	goto	l9315
 37667   001EFA                     l9301:
 37668                           
 37669                           ; BSR set to: 5
 37670                           ;../canargb_leds.c: 293:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 37671   001EFA  0E00               	movlw	low _ledPaletteIndexes
 37672   001EFC  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37673   001EFE  6ED9               	movwf	fsr2l,c
 37674   001F00  6ADA               	clrf	fsr2h,c
 37675   001F02  0E07               	movlw	high _ledPaletteIndexes
 37676   001F04  22DA               	addwfc	fsr2h,f,c
 37677   001F06  50DF               	movf	223,w,c
 37678   001F08  0B0F               	andlw	15
 37679   001F0A  0D03               	mullw	3
 37680   001F0C  28F3               	incf	243,w,c
 37681   001F0E  ECA0  F03C         	call	_getNV
 37682   001F12  5006               	movf	doFlash@ledno^(0+1280),w,c
 37683   001F14  0D03               	mullw	3
 37684   001F16  0E7C               	movlw	low _leds
 37685   001F18  24F3               	addwf	243,w,c
 37686   001F1A  6ED9               	movwf	fsr2l,c
 37687   001F1C  0E0B               	movlw	high _leds
 37688   001F1E  20F4               	addwfc	prodh,w,c
 37689   001F20  6EDA               	movwf	fsr2h,c
 37690   001F22  C501  F4DF         	movff	?_getNV,indf2
 37691                           
 37692                           ;../canargb_leds.c: 294:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 37693   001F26  0E00               	movlw	low _ledPaletteIndexes
 37694   001F28  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37695   001F2A  6ED9               	movwf	fsr2l,c
 37696   001F2C  6ADA               	clrf	fsr2h,c
 37697   001F2E  0E07               	movlw	high _ledPaletteIndexes
 37698   001F30  22DA               	addwfc	fsr2h,f,c
 37699   001F32  50DF               	movf	223,w,c
 37700   001F34  0B0F               	andlw	15
 37701   001F36  0D03               	mullw	3
 37702   001F38  50F3               	movf	243,w,c
 37703   001F3A  0F02               	addlw	2
 37704   001F3C  ECA0  F03C         	call	_getNV
 37705   001F40  5006               	movf	doFlash@ledno^(0+1280),w,c
 37706   001F42  0D03               	mullw	3
 37707   001F44  0E7D               	movlw	low (_leds+1)
 37708   001F46  24F3               	addwf	243,w,c
 37709   001F48  6ED9               	movwf	fsr2l,c
 37710   001F4A  0E0B               	movlw	high (_leds+1)
 37711   001F4C  20F4               	addwfc	prodh,w,c
 37712   001F4E  6EDA               	movwf	fsr2h,c
 37713   001F50  C501  F4DF         	movff	?_getNV,indf2
 37714                           
 37715                           ;../canargb_leds.c: 295:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 37716   001F54  0E00               	movlw	low _ledPaletteIndexes
 37717   001F56  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37718   001F58  6ED9               	movwf	fsr2l,c
 37719   001F5A  6ADA               	clrf	fsr2h,c
 37720   001F5C  0E07               	movlw	high _ledPaletteIndexes
 37721   001F5E  22DA               	addwfc	fsr2h,f,c
 37722   001F60  50DF               	movf	223,w,c
 37723   001F62  0B0F               	andlw	15
 37724   001F64  0D03               	mullw	3
 37725   001F66  50F3               	movf	243,w,c
 37726   001F68  0F03               	addlw	3
 37727   001F6A  ECA0  F03C         	call	_getNV
 37728   001F6E  5006               	movf	doFlash@ledno^(0+1280),w,c
 37729   001F70  0D03               	mullw	3
 37730   001F72  0E7E               	movlw	low (_leds+2)
 37731   001F74  24F3               	addwf	243,w,c
 37732   001F76  6ED9               	movwf	fsr2l,c
 37733   001F78  0E0B               	movlw	high (_leds+2)
 37734   001F7A  20F4               	addwfc	prodh,w,c
 37735   001F7C  6EDA               	movwf	fsr2h,c
 37736   001F7E  C501  F4DF         	movff	?_getNV,indf2
 37737                           
 37738                           ;../canargb_leds.c: 296:                     break;
 37739   001F82  EFF3  F012         	goto	l9333
 37740   001F86                     l9303:
 37741                           
 37742                           ; BSR set to: 5
 37743                           ;../canargb_leds.c: 298:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 37744   001F86  0E00               	movlw	low _ledPaletteIndexes
 37745   001F88  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37746   001F8A  6ED9               	movwf	fsr2l,c
 37747   001F8C  6ADA               	clrf	fsr2h,c
 37748   001F8E  0E07               	movlw	high _ledPaletteIndexes
 37749   001F90  22DA               	addwfc	fsr2h,f,c
 37750   001F92  50DF               	movf	223,w,c
 37751   001F94  0B0F               	andlw	15
 37752   001F96  0D03               	mullw	3
 37753   001F98  28F3               	incf	243,w,c
 37754   001F9A  ECA0  F03C         	call	_getNV
 37755   001F9E  5006               	movf	doFlash@ledno^(0+1280),w,c
 37756   001FA0  0D03               	mullw	3
 37757   001FA2  0E7C               	movlw	low _leds
 37758   001FA4  24F3               	addwf	243,w,c
 37759   001FA6  6ED9               	movwf	fsr2l,c
 37760   001FA8  0E0B               	movlw	high _leds
 37761   001FAA  20F4               	addwfc	prodh,w,c
 37762   001FAC  6EDA               	movwf	fsr2h,c
 37763   001FAE  C501  F4DF         	movff	?_getNV,indf2
 37764                           
 37765                           ;../canargb_leds.c: 299:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 37766   001FB2  0E00               	movlw	low _ledPaletteIndexes
 37767   001FB4  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37768   001FB6  6ED9               	movwf	fsr2l,c
 37769   001FB8  6ADA               	clrf	fsr2h,c
 37770   001FBA  0E07               	movlw	high _ledPaletteIndexes
 37771   001FBC  22DA               	addwfc	fsr2h,f,c
 37772   001FBE  50DF               	movf	223,w,c
 37773   001FC0  0B0F               	andlw	15
 37774   001FC2  0D03               	mullw	3
 37775   001FC4  50F3               	movf	243,w,c
 37776   001FC6  0F02               	addlw	2
 37777   001FC8  ECA0  F03C         	call	_getNV
 37778   001FCC  5006               	movf	doFlash@ledno^(0+1280),w,c
 37779   001FCE  0D03               	mullw	3
 37780   001FD0  0E7E               	movlw	low (_leds+2)
 37781   001FD2  24F3               	addwf	243,w,c
 37782   001FD4  6ED9               	movwf	fsr2l,c
 37783   001FD6  0E0B               	movlw	high (_leds+2)
 37784   001FD8  20F4               	addwfc	prodh,w,c
 37785   001FDA  6EDA               	movwf	fsr2h,c
 37786   001FDC  C501  F4DF         	movff	?_getNV,indf2
 37787                           
 37788                           ;../canargb_leds.c: 300:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 37789   001FE0  0E00               	movlw	low _ledPaletteIndexes
 37790   001FE2  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37791   001FE4  6ED9               	movwf	fsr2l,c
 37792   001FE6  6ADA               	clrf	fsr2h,c
 37793   001FE8  0E07               	movlw	high _ledPaletteIndexes
 37794   001FEA  22DA               	addwfc	fsr2h,f,c
 37795   001FEC  50DF               	movf	223,w,c
 37796   001FEE  0B0F               	andlw	15
 37797   001FF0  0D03               	mullw	3
 37798   001FF2  50F3               	movf	243,w,c
 37799   001FF4  0F03               	addlw	3
 37800   001FF6  ECA0  F03C         	call	_getNV
 37801   001FFA  5006               	movf	doFlash@ledno^(0+1280),w,c
 37802   001FFC  0D03               	mullw	3
 37803   001FFE  0E7D               	movlw	low (_leds+1)
 37804   002000  24F3               	addwf	243,w,c
 37805   002002  6ED9               	movwf	fsr2l,c
 37806   002004  0E0B               	movlw	high (_leds+1)
 37807   002006  20F4               	addwfc	prodh,w,c
 37808   002008  6EDA               	movwf	fsr2h,c
 37809   00200A  C501  F4DF         	movff	?_getNV,indf2
 37810                           
 37811                           ;../canargb_leds.c: 301:                     break;
 37812   00200E  EFF3  F012         	goto	l9333
 37813   002012                     l9305:
 37814                           
 37815                           ; BSR set to: 5
 37816                           ;../canargb_leds.c: 303:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 37817   002012  0E00               	movlw	low _ledPaletteIndexes
 37818   002014  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37819   002016  6ED9               	movwf	fsr2l,c
 37820   002018  6ADA               	clrf	fsr2h,c
 37821   00201A  0E07               	movlw	high _ledPaletteIndexes
 37822   00201C  22DA               	addwfc	fsr2h,f,c
 37823   00201E  50DF               	movf	223,w,c
 37824   002020  0B0F               	andlw	15
 37825   002022  0D03               	mullw	3
 37826   002024  28F3               	incf	243,w,c
 37827   002026  ECA0  F03C         	call	_getNV
 37828   00202A  5006               	movf	doFlash@ledno^(0+1280),w,c
 37829   00202C  0D03               	mullw	3
 37830   00202E  0E7E               	movlw	low (_leds+2)
 37831   002030  24F3               	addwf	243,w,c
 37832   002032  6ED9               	movwf	fsr2l,c
 37833   002034  0E0B               	movlw	high (_leds+2)
 37834   002036  20F4               	addwfc	prodh,w,c
 37835   002038  6EDA               	movwf	fsr2h,c
 37836   00203A  C501  F4DF         	movff	?_getNV,indf2
 37837                           
 37838                           ;../canargb_leds.c: 304:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 37839   00203E  0E00               	movlw	low _ledPaletteIndexes
 37840   002040  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37841   002042  6ED9               	movwf	fsr2l,c
 37842   002044  6ADA               	clrf	fsr2h,c
 37843   002046  0E07               	movlw	high _ledPaletteIndexes
 37844   002048  22DA               	addwfc	fsr2h,f,c
 37845   00204A  50DF               	movf	223,w,c
 37846   00204C  0B0F               	andlw	15
 37847   00204E  0D03               	mullw	3
 37848   002050  50F3               	movf	243,w,c
 37849   002052  0F02               	addlw	2
 37850   002054  ECA0  F03C         	call	_getNV
 37851   002058  5006               	movf	doFlash@ledno^(0+1280),w,c
 37852   00205A  0D03               	mullw	3
 37853   00205C  0E7C               	movlw	low _leds
 37854   00205E  24F3               	addwf	243,w,c
 37855   002060  6ED9               	movwf	fsr2l,c
 37856   002062  0E0B               	movlw	high _leds
 37857   002064  20F4               	addwfc	prodh,w,c
 37858   002066  6EDA               	movwf	fsr2h,c
 37859   002068  C501  F4DF         	movff	?_getNV,indf2
 37860                           
 37861                           ;../canargb_leds.c: 305:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 37862   00206C  0E00               	movlw	low _ledPaletteIndexes
 37863   00206E  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37864   002070  6ED9               	movwf	fsr2l,c
 37865   002072  6ADA               	clrf	fsr2h,c
 37866   002074  0E07               	movlw	high _ledPaletteIndexes
 37867   002076  22DA               	addwfc	fsr2h,f,c
 37868   002078  50DF               	movf	223,w,c
 37869   00207A  0B0F               	andlw	15
 37870   00207C  0D03               	mullw	3
 37871   00207E  50F3               	movf	243,w,c
 37872   002080  0F03               	addlw	3
 37873   002082  ECA0  F03C         	call	_getNV
 37874   002086  5006               	movf	doFlash@ledno^(0+1280),w,c
 37875   002088  0D03               	mullw	3
 37876   00208A  0E7D               	movlw	low (_leds+1)
 37877   00208C  24F3               	addwf	243,w,c
 37878   00208E  6ED9               	movwf	fsr2l,c
 37879   002090  0E0B               	movlw	high (_leds+1)
 37880   002092  20F4               	addwfc	prodh,w,c
 37881   002094  6EDA               	movwf	fsr2h,c
 37882   002096  C501  F4DF         	movff	?_getNV,indf2
 37883                           
 37884                           ;../canargb_leds.c: 306:                     break;
 37885   00209A  EFF3  F012         	goto	l9333
 37886   00209E                     l9307:
 37887                           
 37888                           ; BSR set to: 5
 37889                           ;../canargb_leds.c: 308:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 37890   00209E  0E00               	movlw	low _ledPaletteIndexes
 37891   0020A0  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37892   0020A2  6ED9               	movwf	fsr2l,c
 37893   0020A4  6ADA               	clrf	fsr2h,c
 37894   0020A6  0E07               	movlw	high _ledPaletteIndexes
 37895   0020A8  22DA               	addwfc	fsr2h,f,c
 37896   0020AA  50DF               	movf	223,w,c
 37897   0020AC  0B0F               	andlw	15
 37898   0020AE  0D03               	mullw	3
 37899   0020B0  28F3               	incf	243,w,c
 37900   0020B2  ECA0  F03C         	call	_getNV
 37901   0020B6  5006               	movf	doFlash@ledno^(0+1280),w,c
 37902   0020B8  0D03               	mullw	3
 37903   0020BA  0E7D               	movlw	low (_leds+1)
 37904   0020BC  24F3               	addwf	243,w,c
 37905   0020BE  6ED9               	movwf	fsr2l,c
 37906   0020C0  0E0B               	movlw	high (_leds+1)
 37907   0020C2  20F4               	addwfc	prodh,w,c
 37908   0020C4  6EDA               	movwf	fsr2h,c
 37909   0020C6  C501  F4DF         	movff	?_getNV,indf2
 37910                           
 37911                           ;../canargb_leds.c: 309:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 37912   0020CA  0E00               	movlw	low _ledPaletteIndexes
 37913   0020CC  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37914   0020CE  6ED9               	movwf	fsr2l,c
 37915   0020D0  6ADA               	clrf	fsr2h,c
 37916   0020D2  0E07               	movlw	high _ledPaletteIndexes
 37917   0020D4  22DA               	addwfc	fsr2h,f,c
 37918   0020D6  50DF               	movf	223,w,c
 37919   0020D8  0B0F               	andlw	15
 37920   0020DA  0D03               	mullw	3
 37921   0020DC  50F3               	movf	243,w,c
 37922   0020DE  0F02               	addlw	2
 37923   0020E0  ECA0  F03C         	call	_getNV
 37924   0020E4  5006               	movf	doFlash@ledno^(0+1280),w,c
 37925   0020E6  0D03               	mullw	3
 37926   0020E8  0E7E               	movlw	low (_leds+2)
 37927   0020EA  24F3               	addwf	243,w,c
 37928   0020EC  6ED9               	movwf	fsr2l,c
 37929   0020EE  0E0B               	movlw	high (_leds+2)
 37930   0020F0  20F4               	addwfc	prodh,w,c
 37931   0020F2  6EDA               	movwf	fsr2h,c
 37932   0020F4  C501  F4DF         	movff	?_getNV,indf2
 37933                           
 37934                           ;../canargb_leds.c: 310:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 37935   0020F8  0E00               	movlw	low _ledPaletteIndexes
 37936   0020FA  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37937   0020FC  6ED9               	movwf	fsr2l,c
 37938   0020FE  6ADA               	clrf	fsr2h,c
 37939   002100  0E07               	movlw	high _ledPaletteIndexes
 37940   002102  22DA               	addwfc	fsr2h,f,c
 37941   002104  50DF               	movf	223,w,c
 37942   002106  0B0F               	andlw	15
 37943   002108  0D03               	mullw	3
 37944   00210A  50F3               	movf	243,w,c
 37945   00210C  0F03               	addlw	3
 37946   00210E  ECA0  F03C         	call	_getNV
 37947   002112  5006               	movf	doFlash@ledno^(0+1280),w,c
 37948   002114  0D03               	mullw	3
 37949   002116  0E7C               	movlw	low _leds
 37950   002118  24F3               	addwf	243,w,c
 37951   00211A  6ED9               	movwf	fsr2l,c
 37952   00211C  0E0B               	movlw	high _leds
 37953   00211E  20F4               	addwfc	prodh,w,c
 37954   002120  6EDA               	movwf	fsr2h,c
 37955   002122  C501  F4DF         	movff	?_getNV,indf2
 37956                           
 37957                           ;../canargb_leds.c: 311:                     break;
 37958   002126  EFF3  F012         	goto	l9333
 37959   00212A                     l9309:
 37960                           
 37961                           ; BSR set to: 5
 37962                           ;../canargb_leds.c: 313:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 37963   00212A  0E00               	movlw	low _ledPaletteIndexes
 37964   00212C  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37965   00212E  6ED9               	movwf	fsr2l,c
 37966   002130  6ADA               	clrf	fsr2h,c
 37967   002132  0E07               	movlw	high _ledPaletteIndexes
 37968   002134  22DA               	addwfc	fsr2h,f,c
 37969   002136  50DF               	movf	223,w,c
 37970   002138  0B0F               	andlw	15
 37971   00213A  0D03               	mullw	3
 37972   00213C  28F3               	incf	243,w,c
 37973   00213E  ECA0  F03C         	call	_getNV
 37974   002142  5006               	movf	doFlash@ledno^(0+1280),w,c
 37975   002144  0D03               	mullw	3
 37976   002146  0E7E               	movlw	low (_leds+2)
 37977   002148  24F3               	addwf	243,w,c
 37978   00214A  6ED9               	movwf	fsr2l,c
 37979   00214C  0E0B               	movlw	high (_leds+2)
 37980   00214E  20F4               	addwfc	prodh,w,c
 37981   002150  6EDA               	movwf	fsr2h,c
 37982   002152  C501  F4DF         	movff	?_getNV,indf2
 37983                           
 37984                           ;../canargb_leds.c: 314:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 37985   002156  0E00               	movlw	low _ledPaletteIndexes
 37986   002158  2406               	addwf	doFlash@ledno^(0+1280),w,c
 37987   00215A  6ED9               	movwf	fsr2l,c
 37988   00215C  6ADA               	clrf	fsr2h,c
 37989   00215E  0E07               	movlw	high _ledPaletteIndexes
 37990   002160  22DA               	addwfc	fsr2h,f,c
 37991   002162  50DF               	movf	223,w,c
 37992   002164  0B0F               	andlw	15
 37993   002166  0D03               	mullw	3
 37994   002168  50F3               	movf	243,w,c
 37995   00216A  0F02               	addlw	2
 37996   00216C  ECA0  F03C         	call	_getNV
 37997   002170  5006               	movf	doFlash@ledno^(0+1280),w,c
 37998   002172  0D03               	mullw	3
 37999   002174  0E7D               	movlw	low (_leds+1)
 38000   002176  24F3               	addwf	243,w,c
 38001   002178  6ED9               	movwf	fsr2l,c
 38002   00217A  0E0B               	movlw	high (_leds+1)
 38003   00217C  20F4               	addwfc	prodh,w,c
 38004   00217E  6EDA               	movwf	fsr2h,c
 38005   002180  C501  F4DF         	movff	?_getNV,indf2
 38006                           
 38007                           ;../canargb_leds.c: 315:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 38008   002184  0E00               	movlw	low _ledPaletteIndexes
 38009   002186  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38010   002188  6ED9               	movwf	fsr2l,c
 38011   00218A  6ADA               	clrf	fsr2h,c
 38012   00218C  0E07               	movlw	high _ledPaletteIndexes
 38013   00218E  22DA               	addwfc	fsr2h,f,c
 38014   002190  50DF               	movf	223,w,c
 38015   002192  0B0F               	andlw	15
 38016   002194  0D03               	mullw	3
 38017   002196  50F3               	movf	243,w,c
 38018   002198  0F03               	addlw	3
 38019   00219A  ECA0  F03C         	call	_getNV
 38020   00219E  5006               	movf	doFlash@ledno^(0+1280),w,c
 38021   0021A0  0D03               	mullw	3
 38022   0021A2  0E7C               	movlw	low _leds
 38023   0021A4  24F3               	addwf	243,w,c
 38024   0021A6  6ED9               	movwf	fsr2l,c
 38025   0021A8  0E0B               	movlw	high _leds
 38026   0021AA  20F4               	addwfc	prodh,w,c
 38027   0021AC  6EDA               	movwf	fsr2h,c
 38028   0021AE  C501  F4DF         	movff	?_getNV,indf2
 38029                           
 38030                           ;../canargb_leds.c: 316:                     break;
 38031   0021B2  EFF3  F012         	goto	l9333
 38032   0021B6                     l9311:
 38033                           
 38034                           ; BSR set to: 5
 38035                           ;../canargb_leds.c: 318:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 1));
 38036   0021B6  0E00               	movlw	low _ledPaletteIndexes
 38037   0021B8  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38038   0021BA  6ED9               	movwf	fsr2l,c
 38039   0021BC  6ADA               	clrf	fsr2h,c
 38040   0021BE  0E07               	movlw	high _ledPaletteIndexes
 38041   0021C0  22DA               	addwfc	fsr2h,f,c
 38042   0021C2  50DF               	movf	223,w,c
 38043   0021C4  0B0F               	andlw	15
 38044   0021C6  0D03               	mullw	3
 38045   0021C8  28F3               	incf	243,w,c
 38046   0021CA  ECA0  F03C         	call	_getNV
 38047   0021CE  5006               	movf	doFlash@ledno^(0+1280),w,c
 38048   0021D0  0D03               	mullw	3
 38049   0021D2  0E7D               	movlw	low (_leds+1)
 38050   0021D4  24F3               	addwf	243,w,c
 38051   0021D6  6ED9               	movwf	fsr2l,c
 38052   0021D8  0E0B               	movlw	high (_leds+1)
 38053   0021DA  20F4               	addwfc	prodh,w,c
 38054   0021DC  6EDA               	movwf	fsr2h,c
 38055   0021DE  C501  F4DF         	movff	?_getNV,indf2
 38056                           
 38057                           ;../canargb_leds.c: 319:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 2));
 38058   0021E2  0E00               	movlw	low _ledPaletteIndexes
 38059   0021E4  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38060   0021E6  6ED9               	movwf	fsr2l,c
 38061   0021E8  6ADA               	clrf	fsr2h,c
 38062   0021EA  0E07               	movlw	high _ledPaletteIndexes
 38063   0021EC  22DA               	addwfc	fsr2h,f,c
 38064   0021EE  50DF               	movf	223,w,c
 38065   0021F0  0B0F               	andlw	15
 38066   0021F2  0D03               	mullw	3
 38067   0021F4  50F3               	movf	243,w,c
 38068   0021F6  0F02               	addlw	2
 38069   0021F8  ECA0  F03C         	call	_getNV
 38070   0021FC  5006               	movf	doFlash@ledno^(0+1280),w,c
 38071   0021FE  0D03               	mullw	3
 38072   002200  0E7C               	movlw	low _leds
 38073   002202  24F3               	addwf	243,w,c
 38074   002204  6ED9               	movwf	fsr2l,c
 38075   002206  0E0B               	movlw	high _leds
 38076   002208  20F4               	addwfc	prodh,w,c
 38077   00220A  6EDA               	movwf	fsr2h,c
 38078   00220C  C501  F4DF         	movff	?_getNV,indf2
 38079                           
 38080                           ;../canargb_leds.c: 320:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOnPaletteIndex)*3 + 3));
 38081   002210  0E00               	movlw	low _ledPaletteIndexes
 38082   002212  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38083   002214  6ED9               	movwf	fsr2l,c
 38084   002216  6ADA               	clrf	fsr2h,c
 38085   002218  0E07               	movlw	high _ledPaletteIndexes
 38086   00221A  22DA               	addwfc	fsr2h,f,c
 38087   00221C  50DF               	movf	223,w,c
 38088   00221E  0B0F               	andlw	15
 38089   002220  0D03               	mullw	3
 38090   002222  50F3               	movf	243,w,c
 38091   002224  0F03               	addlw	3
 38092   002226  ECA0  F03C         	call	_getNV
 38093   00222A  5006               	movf	doFlash@ledno^(0+1280),w,c
 38094   00222C  0D03               	mullw	3
 38095   00222E  0E7E               	movlw	low (_leds+2)
 38096   002230  24F3               	addwf	243,w,c
 38097   002232  6ED9               	movwf	fsr2l,c
 38098   002234  0E0B               	movlw	high (_leds+2)
 38099   002236  20F4               	addwfc	prodh,w,c
 38100   002238  6EDA               	movwf	fsr2h,c
 38101   00223A  C501  F4DF         	movff	?_getNV,indf2
 38102                           
 38103                           ;../canargb_leds.c: 321:                     break;
 38104   00223E  EFF3  F012         	goto	l9333
 38105   002242                     l9315:
 38106                           
 38107                           ; BSR set to: 5
 38108   002242  5005               	movf	doFlash@order^(0+1280),w,c
 38109                           
 38110                           ; Switch size 1, requested type "simple"
 38111                           ; Number of cases is 5, Range of values is 1 to 6
 38112                           ; switch strategies available:
 38113                           ; Name         Instructions Cycles
 38114                           ; simple_byte           16     9 (average)
 38115                           ;	Chosen strategy is simple_byte
 38116   002244  0A01               	xorlw	1	; case 1
 38117   002246  B4D8               	btfsc	status,2,c
 38118   002248  EF7D  F00F         	goto	l9301
 38119   00224C  0A03               	xorlw	3	; case 2
 38120   00224E  B4D8               	btfsc	status,2,c
 38121   002250  EFC3  F00F         	goto	l9303
 38122   002254  0A06               	xorlw	6	; case 4
 38123   002256  B4D8               	btfsc	status,2,c
 38124   002258  EF09  F010         	goto	l9305
 38125   00225C  0A01               	xorlw	1	; case 5
 38126   00225E  B4D8               	btfsc	status,2,c
 38127   002260  EF95  F010         	goto	l9309
 38128   002264  0A03               	xorlw	3	; case 6
 38129   002266  B4D8               	btfsc	status,2,c
 38130   002268  EF4F  F010         	goto	l9307
 38131   00226C  EFDB  F010         	goto	l9311
 38132   002270                     l9317:
 38133                           
 38134                           ; BSR set to: 5
 38135                           ;../canargb_leds.c: 327:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38136   002270  0E00               	movlw	low _ledPaletteIndexes
 38137   002272  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38138   002274  6ED9               	movwf	fsr2l,c
 38139   002276  6ADA               	clrf	fsr2h,c
 38140   002278  0E07               	movlw	high _ledPaletteIndexes
 38141   00227A  22DA               	addwfc	fsr2h,f,c
 38142   00227C  38DF               	swapf	223,w,c
 38143   00227E  0B0F               	andlw	15
 38144   002280  0D03               	mullw	3
 38145   002282  28F3               	incf	243,w,c
 38146   002284  ECA0  F03C         	call	_getNV
 38147   002288  5006               	movf	doFlash@ledno^(0+1280),w,c
 38148   00228A  0D03               	mullw	3
 38149   00228C  0E7C               	movlw	low _leds
 38150   00228E  24F3               	addwf	243,w,c
 38151   002290  6ED9               	movwf	fsr2l,c
 38152   002292  0E0B               	movlw	high _leds
 38153   002294  20F4               	addwfc	prodh,w,c
 38154   002296  6EDA               	movwf	fsr2h,c
 38155   002298  C501  F4DF         	movff	?_getNV,indf2
 38156                           
 38157                           ;../canargb_leds.c: 328:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38158   00229C  0E00               	movlw	low _ledPaletteIndexes
 38159   00229E  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38160   0022A0  6ED9               	movwf	fsr2l,c
 38161   0022A2  6ADA               	clrf	fsr2h,c
 38162   0022A4  0E07               	movlw	high _ledPaletteIndexes
 38163   0022A6  22DA               	addwfc	fsr2h,f,c
 38164   0022A8  38DF               	swapf	223,w,c
 38165   0022AA  0B0F               	andlw	15
 38166   0022AC  0D03               	mullw	3
 38167   0022AE  50F3               	movf	243,w,c
 38168   0022B0  0F02               	addlw	2
 38169   0022B2  ECA0  F03C         	call	_getNV
 38170   0022B6  5006               	movf	doFlash@ledno^(0+1280),w,c
 38171   0022B8  0D03               	mullw	3
 38172   0022BA  0E7D               	movlw	low (_leds+1)
 38173   0022BC  24F3               	addwf	243,w,c
 38174   0022BE  6ED9               	movwf	fsr2l,c
 38175   0022C0  0E0B               	movlw	high (_leds+1)
 38176   0022C2  20F4               	addwfc	prodh,w,c
 38177   0022C4  6EDA               	movwf	fsr2h,c
 38178   0022C6  C501  F4DF         	movff	?_getNV,indf2
 38179                           
 38180                           ;../canargb_leds.c: 329:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38181   0022CA  0E00               	movlw	low _ledPaletteIndexes
 38182   0022CC  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38183   0022CE  6ED9               	movwf	fsr2l,c
 38184   0022D0  6ADA               	clrf	fsr2h,c
 38185   0022D2  0E07               	movlw	high _ledPaletteIndexes
 38186   0022D4  22DA               	addwfc	fsr2h,f,c
 38187   0022D6  38DF               	swapf	223,w,c
 38188   0022D8  0B0F               	andlw	15
 38189   0022DA  0D03               	mullw	3
 38190   0022DC  50F3               	movf	243,w,c
 38191   0022DE  0F03               	addlw	3
 38192   0022E0  ECA0  F03C         	call	_getNV
 38193   0022E4  5006               	movf	doFlash@ledno^(0+1280),w,c
 38194   0022E6  0D03               	mullw	3
 38195   0022E8  0E7E               	movlw	low (_leds+2)
 38196   0022EA  24F3               	addwf	243,w,c
 38197   0022EC  6ED9               	movwf	fsr2l,c
 38198   0022EE  0E0B               	movlw	high (_leds+2)
 38199   0022F0  20F4               	addwfc	prodh,w,c
 38200   0022F2  6EDA               	movwf	fsr2h,c
 38201   0022F4  C501  F4DF         	movff	?_getNV,indf2
 38202                           
 38203                           ;../canargb_leds.c: 330:                     break;
 38204   0022F8  EFF3  F012         	goto	l9333
 38205   0022FC                     l9319:
 38206                           
 38207                           ; BSR set to: 5
 38208                           ;../canargb_leds.c: 332:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38209   0022FC  0E00               	movlw	low _ledPaletteIndexes
 38210   0022FE  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38211   002300  6ED9               	movwf	fsr2l,c
 38212   002302  6ADA               	clrf	fsr2h,c
 38213   002304  0E07               	movlw	high _ledPaletteIndexes
 38214   002306  22DA               	addwfc	fsr2h,f,c
 38215   002308  38DF               	swapf	223,w,c
 38216   00230A  0B0F               	andlw	15
 38217   00230C  0D03               	mullw	3
 38218   00230E  28F3               	incf	243,w,c
 38219   002310  ECA0  F03C         	call	_getNV
 38220   002314  5006               	movf	doFlash@ledno^(0+1280),w,c
 38221   002316  0D03               	mullw	3
 38222   002318  0E7C               	movlw	low _leds
 38223   00231A  24F3               	addwf	243,w,c
 38224   00231C  6ED9               	movwf	fsr2l,c
 38225   00231E  0E0B               	movlw	high _leds
 38226   002320  20F4               	addwfc	prodh,w,c
 38227   002322  6EDA               	movwf	fsr2h,c
 38228   002324  C501  F4DF         	movff	?_getNV,indf2
 38229                           
 38230                           ;../canargb_leds.c: 333:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38231   002328  0E00               	movlw	low _ledPaletteIndexes
 38232   00232A  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38233   00232C  6ED9               	movwf	fsr2l,c
 38234   00232E  6ADA               	clrf	fsr2h,c
 38235   002330  0E07               	movlw	high _ledPaletteIndexes
 38236   002332  22DA               	addwfc	fsr2h,f,c
 38237   002334  38DF               	swapf	223,w,c
 38238   002336  0B0F               	andlw	15
 38239   002338  0D03               	mullw	3
 38240   00233A  50F3               	movf	243,w,c
 38241   00233C  0F02               	addlw	2
 38242   00233E  ECA0  F03C         	call	_getNV
 38243   002342  5006               	movf	doFlash@ledno^(0+1280),w,c
 38244   002344  0D03               	mullw	3
 38245   002346  0E7E               	movlw	low (_leds+2)
 38246   002348  24F3               	addwf	243,w,c
 38247   00234A  6ED9               	movwf	fsr2l,c
 38248   00234C  0E0B               	movlw	high (_leds+2)
 38249   00234E  20F4               	addwfc	prodh,w,c
 38250   002350  6EDA               	movwf	fsr2h,c
 38251   002352  C501  F4DF         	movff	?_getNV,indf2
 38252                           
 38253                           ;../canargb_leds.c: 334:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38254   002356  0E00               	movlw	low _ledPaletteIndexes
 38255   002358  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38256   00235A  6ED9               	movwf	fsr2l,c
 38257   00235C  6ADA               	clrf	fsr2h,c
 38258   00235E  0E07               	movlw	high _ledPaletteIndexes
 38259   002360  22DA               	addwfc	fsr2h,f,c
 38260   002362  38DF               	swapf	223,w,c
 38261   002364  0B0F               	andlw	15
 38262   002366  0D03               	mullw	3
 38263   002368  50F3               	movf	243,w,c
 38264   00236A  0F03               	addlw	3
 38265   00236C  ECA0  F03C         	call	_getNV
 38266   002370  5006               	movf	doFlash@ledno^(0+1280),w,c
 38267   002372  0D03               	mullw	3
 38268   002374  0E7D               	movlw	low (_leds+1)
 38269   002376  24F3               	addwf	243,w,c
 38270   002378  6ED9               	movwf	fsr2l,c
 38271   00237A  0E0B               	movlw	high (_leds+1)
 38272   00237C  20F4               	addwfc	prodh,w,c
 38273   00237E  6EDA               	movwf	fsr2h,c
 38274   002380  C501  F4DF         	movff	?_getNV,indf2
 38275                           
 38276                           ;../canargb_leds.c: 335:                     break;
 38277   002384  EFF3  F012         	goto	l9333
 38278   002388                     l9321:
 38279                           
 38280                           ; BSR set to: 5
 38281                           ;../canargb_leds.c: 337:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38282   002388  0E00               	movlw	low _ledPaletteIndexes
 38283   00238A  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38284   00238C  6ED9               	movwf	fsr2l,c
 38285   00238E  6ADA               	clrf	fsr2h,c
 38286   002390  0E07               	movlw	high _ledPaletteIndexes
 38287   002392  22DA               	addwfc	fsr2h,f,c
 38288   002394  38DF               	swapf	223,w,c
 38289   002396  0B0F               	andlw	15
 38290   002398  0D03               	mullw	3
 38291   00239A  28F3               	incf	243,w,c
 38292   00239C  ECA0  F03C         	call	_getNV
 38293   0023A0  5006               	movf	doFlash@ledno^(0+1280),w,c
 38294   0023A2  0D03               	mullw	3
 38295   0023A4  0E7E               	movlw	low (_leds+2)
 38296   0023A6  24F3               	addwf	243,w,c
 38297   0023A8  6ED9               	movwf	fsr2l,c
 38298   0023AA  0E0B               	movlw	high (_leds+2)
 38299   0023AC  20F4               	addwfc	prodh,w,c
 38300   0023AE  6EDA               	movwf	fsr2h,c
 38301   0023B0  C501  F4DF         	movff	?_getNV,indf2
 38302                           
 38303                           ;../canargb_leds.c: 338:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38304   0023B4  0E00               	movlw	low _ledPaletteIndexes
 38305   0023B6  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38306   0023B8  6ED9               	movwf	fsr2l,c
 38307   0023BA  6ADA               	clrf	fsr2h,c
 38308   0023BC  0E07               	movlw	high _ledPaletteIndexes
 38309   0023BE  22DA               	addwfc	fsr2h,f,c
 38310   0023C0  38DF               	swapf	223,w,c
 38311   0023C2  0B0F               	andlw	15
 38312   0023C4  0D03               	mullw	3
 38313   0023C6  50F3               	movf	243,w,c
 38314   0023C8  0F02               	addlw	2
 38315   0023CA  ECA0  F03C         	call	_getNV
 38316   0023CE  5006               	movf	doFlash@ledno^(0+1280),w,c
 38317   0023D0  0D03               	mullw	3
 38318   0023D2  0E7C               	movlw	low _leds
 38319   0023D4  24F3               	addwf	243,w,c
 38320   0023D6  6ED9               	movwf	fsr2l,c
 38321   0023D8  0E0B               	movlw	high _leds
 38322   0023DA  20F4               	addwfc	prodh,w,c
 38323   0023DC  6EDA               	movwf	fsr2h,c
 38324   0023DE  C501  F4DF         	movff	?_getNV,indf2
 38325                           
 38326                           ;../canargb_leds.c: 339:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38327   0023E2  0E00               	movlw	low _ledPaletteIndexes
 38328   0023E4  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38329   0023E6  6ED9               	movwf	fsr2l,c
 38330   0023E8  6ADA               	clrf	fsr2h,c
 38331   0023EA  0E07               	movlw	high _ledPaletteIndexes
 38332   0023EC  22DA               	addwfc	fsr2h,f,c
 38333   0023EE  38DF               	swapf	223,w,c
 38334   0023F0  0B0F               	andlw	15
 38335   0023F2  0D03               	mullw	3
 38336   0023F4  50F3               	movf	243,w,c
 38337   0023F6  0F03               	addlw	3
 38338   0023F8  ECA0  F03C         	call	_getNV
 38339   0023FC  5006               	movf	doFlash@ledno^(0+1280),w,c
 38340   0023FE  0D03               	mullw	3
 38341   002400  0E7D               	movlw	low (_leds+1)
 38342   002402  24F3               	addwf	243,w,c
 38343   002404  6ED9               	movwf	fsr2l,c
 38344   002406  0E0B               	movlw	high (_leds+1)
 38345   002408  20F4               	addwfc	prodh,w,c
 38346   00240A  6EDA               	movwf	fsr2h,c
 38347   00240C  C501  F4DF         	movff	?_getNV,indf2
 38348                           
 38349                           ;../canargb_leds.c: 340:                     break;
 38350   002410  EFF3  F012         	goto	l9333
 38351   002414                     l9323:
 38352                           
 38353                           ; BSR set to: 5
 38354                           ;../canargb_leds.c: 342:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38355   002414  0E00               	movlw	low _ledPaletteIndexes
 38356   002416  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38357   002418  6ED9               	movwf	fsr2l,c
 38358   00241A  6ADA               	clrf	fsr2h,c
 38359   00241C  0E07               	movlw	high _ledPaletteIndexes
 38360   00241E  22DA               	addwfc	fsr2h,f,c
 38361   002420  38DF               	swapf	223,w,c
 38362   002422  0B0F               	andlw	15
 38363   002424  0D03               	mullw	3
 38364   002426  28F3               	incf	243,w,c
 38365   002428  ECA0  F03C         	call	_getNV
 38366   00242C  5006               	movf	doFlash@ledno^(0+1280),w,c
 38367   00242E  0D03               	mullw	3
 38368   002430  0E7D               	movlw	low (_leds+1)
 38369   002432  24F3               	addwf	243,w,c
 38370   002434  6ED9               	movwf	fsr2l,c
 38371   002436  0E0B               	movlw	high (_leds+1)
 38372   002438  20F4               	addwfc	prodh,w,c
 38373   00243A  6EDA               	movwf	fsr2h,c
 38374   00243C  C501  F4DF         	movff	?_getNV,indf2
 38375                           
 38376                           ;../canargb_leds.c: 343:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38377   002440  0E00               	movlw	low _ledPaletteIndexes
 38378   002442  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38379   002444  6ED9               	movwf	fsr2l,c
 38380   002446  6ADA               	clrf	fsr2h,c
 38381   002448  0E07               	movlw	high _ledPaletteIndexes
 38382   00244A  22DA               	addwfc	fsr2h,f,c
 38383   00244C  38DF               	swapf	223,w,c
 38384   00244E  0B0F               	andlw	15
 38385   002450  0D03               	mullw	3
 38386   002452  50F3               	movf	243,w,c
 38387   002454  0F02               	addlw	2
 38388   002456  ECA0  F03C         	call	_getNV
 38389   00245A  5006               	movf	doFlash@ledno^(0+1280),w,c
 38390   00245C  0D03               	mullw	3
 38391   00245E  0E7E               	movlw	low (_leds+2)
 38392   002460  24F3               	addwf	243,w,c
 38393   002462  6ED9               	movwf	fsr2l,c
 38394   002464  0E0B               	movlw	high (_leds+2)
 38395   002466  20F4               	addwfc	prodh,w,c
 38396   002468  6EDA               	movwf	fsr2h,c
 38397   00246A  C501  F4DF         	movff	?_getNV,indf2
 38398                           
 38399                           ;../canargb_leds.c: 344:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38400   00246E  0E00               	movlw	low _ledPaletteIndexes
 38401   002470  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38402   002472  6ED9               	movwf	fsr2l,c
 38403   002474  6ADA               	clrf	fsr2h,c
 38404   002476  0E07               	movlw	high _ledPaletteIndexes
 38405   002478  22DA               	addwfc	fsr2h,f,c
 38406   00247A  38DF               	swapf	223,w,c
 38407   00247C  0B0F               	andlw	15
 38408   00247E  0D03               	mullw	3
 38409   002480  50F3               	movf	243,w,c
 38410   002482  0F03               	addlw	3
 38411   002484  ECA0  F03C         	call	_getNV
 38412   002488  5006               	movf	doFlash@ledno^(0+1280),w,c
 38413   00248A  0D03               	mullw	3
 38414   00248C  0E7C               	movlw	low _leds
 38415   00248E  24F3               	addwf	243,w,c
 38416   002490  6ED9               	movwf	fsr2l,c
 38417   002492  0E0B               	movlw	high _leds
 38418   002494  20F4               	addwfc	prodh,w,c
 38419   002496  6EDA               	movwf	fsr2h,c
 38420   002498  C501  F4DF         	movff	?_getNV,indf2
 38421                           
 38422                           ;../canargb_leds.c: 345:                     break;
 38423   00249C  EFF3  F012         	goto	l9333
 38424   0024A0                     l9325:
 38425                           
 38426                           ; BSR set to: 5
 38427                           ;../canargb_leds.c: 347:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38428   0024A0  0E00               	movlw	low _ledPaletteIndexes
 38429   0024A2  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38430   0024A4  6ED9               	movwf	fsr2l,c
 38431   0024A6  6ADA               	clrf	fsr2h,c
 38432   0024A8  0E07               	movlw	high _ledPaletteIndexes
 38433   0024AA  22DA               	addwfc	fsr2h,f,c
 38434   0024AC  38DF               	swapf	223,w,c
 38435   0024AE  0B0F               	andlw	15
 38436   0024B0  0D03               	mullw	3
 38437   0024B2  28F3               	incf	243,w,c
 38438   0024B4  ECA0  F03C         	call	_getNV
 38439   0024B8  5006               	movf	doFlash@ledno^(0+1280),w,c
 38440   0024BA  0D03               	mullw	3
 38441   0024BC  0E7E               	movlw	low (_leds+2)
 38442   0024BE  24F3               	addwf	243,w,c
 38443   0024C0  6ED9               	movwf	fsr2l,c
 38444   0024C2  0E0B               	movlw	high (_leds+2)
 38445   0024C4  20F4               	addwfc	prodh,w,c
 38446   0024C6  6EDA               	movwf	fsr2h,c
 38447   0024C8  C501  F4DF         	movff	?_getNV,indf2
 38448                           
 38449                           ;../canargb_leds.c: 348:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38450   0024CC  0E00               	movlw	low _ledPaletteIndexes
 38451   0024CE  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38452   0024D0  6ED9               	movwf	fsr2l,c
 38453   0024D2  6ADA               	clrf	fsr2h,c
 38454   0024D4  0E07               	movlw	high _ledPaletteIndexes
 38455   0024D6  22DA               	addwfc	fsr2h,f,c
 38456   0024D8  38DF               	swapf	223,w,c
 38457   0024DA  0B0F               	andlw	15
 38458   0024DC  0D03               	mullw	3
 38459   0024DE  50F3               	movf	243,w,c
 38460   0024E0  0F02               	addlw	2
 38461   0024E2  ECA0  F03C         	call	_getNV
 38462   0024E6  5006               	movf	doFlash@ledno^(0+1280),w,c
 38463   0024E8  0D03               	mullw	3
 38464   0024EA  0E7D               	movlw	low (_leds+1)
 38465   0024EC  24F3               	addwf	243,w,c
 38466   0024EE  6ED9               	movwf	fsr2l,c
 38467   0024F0  0E0B               	movlw	high (_leds+1)
 38468   0024F2  20F4               	addwfc	prodh,w,c
 38469   0024F4  6EDA               	movwf	fsr2h,c
 38470   0024F6  C501  F4DF         	movff	?_getNV,indf2
 38471                           
 38472                           ;../canargb_leds.c: 349:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38473   0024FA  0E00               	movlw	low _ledPaletteIndexes
 38474   0024FC  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38475   0024FE  6ED9               	movwf	fsr2l,c
 38476   002500  6ADA               	clrf	fsr2h,c
 38477   002502  0E07               	movlw	high _ledPaletteIndexes
 38478   002504  22DA               	addwfc	fsr2h,f,c
 38479   002506  38DF               	swapf	223,w,c
 38480   002508  0B0F               	andlw	15
 38481   00250A  0D03               	mullw	3
 38482   00250C  50F3               	movf	243,w,c
 38483   00250E  0F03               	addlw	3
 38484   002510  ECA0  F03C         	call	_getNV
 38485   002514  5006               	movf	doFlash@ledno^(0+1280),w,c
 38486   002516  0D03               	mullw	3
 38487   002518  0E7C               	movlw	low _leds
 38488   00251A  24F3               	addwf	243,w,c
 38489   00251C  6ED9               	movwf	fsr2l,c
 38490   00251E  0E0B               	movlw	high _leds
 38491   002520  20F4               	addwfc	prodh,w,c
 38492   002522  6EDA               	movwf	fsr2h,c
 38493   002524  C501  F4DF         	movff	?_getNV,indf2
 38494                           
 38495                           ;../canargb_leds.c: 350:                     break;
 38496   002528  EFF3  F012         	goto	l9333
 38497   00252C                     l9327:
 38498                           
 38499                           ; BSR set to: 5
 38500                           ;../canargb_leds.c: 352:                     leds[ledno].g = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 1));
 38501   00252C  0E00               	movlw	low _ledPaletteIndexes
 38502   00252E  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38503   002530  6ED9               	movwf	fsr2l,c
 38504   002532  6ADA               	clrf	fsr2h,c
 38505   002534  0E07               	movlw	high _ledPaletteIndexes
 38506   002536  22DA               	addwfc	fsr2h,f,c
 38507   002538  38DF               	swapf	223,w,c
 38508   00253A  0B0F               	andlw	15
 38509   00253C  0D03               	mullw	3
 38510   00253E  28F3               	incf	243,w,c
 38511   002540  ECA0  F03C         	call	_getNV
 38512   002544  5006               	movf	doFlash@ledno^(0+1280),w,c
 38513   002546  0D03               	mullw	3
 38514   002548  0E7D               	movlw	low (_leds+1)
 38515   00254A  24F3               	addwf	243,w,c
 38516   00254C  6ED9               	movwf	fsr2l,c
 38517   00254E  0E0B               	movlw	high (_leds+1)
 38518   002550  20F4               	addwfc	prodh,w,c
 38519   002552  6EDA               	movwf	fsr2h,c
 38520   002554  C501  F4DF         	movff	?_getNV,indf2
 38521                           
 38522                           ;../canargb_leds.c: 353:                     leds[ledno].r = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 2));
 38523   002558  0E00               	movlw	low _ledPaletteIndexes
 38524   00255A  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38525   00255C  6ED9               	movwf	fsr2l,c
 38526   00255E  6ADA               	clrf	fsr2h,c
 38527   002560  0E07               	movlw	high _ledPaletteIndexes
 38528   002562  22DA               	addwfc	fsr2h,f,c
 38529   002564  38DF               	swapf	223,w,c
 38530   002566  0B0F               	andlw	15
 38531   002568  0D03               	mullw	3
 38532   00256A  50F3               	movf	243,w,c
 38533   00256C  0F02               	addlw	2
 38534   00256E  ECA0  F03C         	call	_getNV
 38535   002572  5006               	movf	doFlash@ledno^(0+1280),w,c
 38536   002574  0D03               	mullw	3
 38537   002576  0E7C               	movlw	low _leds
 38538   002578  24F3               	addwf	243,w,c
 38539   00257A  6ED9               	movwf	fsr2l,c
 38540   00257C  0E0B               	movlw	high _leds
 38541   00257E  20F4               	addwfc	prodh,w,c
 38542   002580  6EDA               	movwf	fsr2h,c
 38543   002582  C501  F4DF         	movff	?_getNV,indf2
 38544                           
 38545                           ;../canargb_leds.c: 354:                     leds[ledno].b = ((uint8_t)getNV((ledPalette
      +                          Indexes[ledno].asNibbles.flashOffPaletteIndex)*3 + 3));
 38546   002586  0E00               	movlw	low _ledPaletteIndexes
 38547   002588  2406               	addwf	doFlash@ledno^(0+1280),w,c
 38548   00258A  6ED9               	movwf	fsr2l,c
 38549   00258C  6ADA               	clrf	fsr2h,c
 38550   00258E  0E07               	movlw	high _ledPaletteIndexes
 38551   002590  22DA               	addwfc	fsr2h,f,c
 38552   002592  38DF               	swapf	223,w,c
 38553   002594  0B0F               	andlw	15
 38554   002596  0D03               	mullw	3
 38555   002598  50F3               	movf	243,w,c
 38556   00259A  0F03               	addlw	3
 38557   00259C  ECA0  F03C         	call	_getNV
 38558   0025A0  5006               	movf	doFlash@ledno^(0+1280),w,c
 38559   0025A2  0D03               	mullw	3
 38560   0025A4  0E7E               	movlw	low (_leds+2)
 38561   0025A6  24F3               	addwf	243,w,c
 38562   0025A8  6ED9               	movwf	fsr2l,c
 38563   0025AA  0E0B               	movlw	high (_leds+2)
 38564   0025AC  20F4               	addwfc	prodh,w,c
 38565   0025AE  6EDA               	movwf	fsr2h,c
 38566   0025B0  C501  F4DF         	movff	?_getNV,indf2
 38567                           
 38568                           ;../canargb_leds.c: 355:                     break;
 38569   0025B4  EFF3  F012         	goto	l9333
 38570   0025B8                     l9331:
 38571                           
 38572                           ; BSR set to: 5
 38573   0025B8  5005               	movf	doFlash@order^(0+1280),w,c
 38574                           
 38575                           ; Switch size 1, requested type "simple"
 38576                           ; Number of cases is 5, Range of values is 1 to 6
 38577                           ; switch strategies available:
 38578                           ; Name         Instructions Cycles
 38579                           ; simple_byte           16     9 (average)
 38580                           ;	Chosen strategy is simple_byte
 38581   0025BA  0A01               	xorlw	1	; case 1
 38582   0025BC  B4D8               	btfsc	status,2,c
 38583   0025BE  EF38  F011         	goto	l9317
 38584   0025C2  0A03               	xorlw	3	; case 2
 38585   0025C4  B4D8               	btfsc	status,2,c
 38586   0025C6  EF7E  F011         	goto	l9319
 38587   0025CA  0A06               	xorlw	6	; case 4
 38588   0025CC  B4D8               	btfsc	status,2,c
 38589   0025CE  EFC4  F011         	goto	l9321
 38590   0025D2  0A01               	xorlw	1	; case 5
 38591   0025D4  B4D8               	btfsc	status,2,c
 38592   0025D6  EF50  F012         	goto	l9325
 38593   0025DA  0A03               	xorlw	3	; case 6
 38594   0025DC  B4D8               	btfsc	status,2,c
 38595   0025DE  EF0A  F012         	goto	l9323
 38596   0025E2  EF96  F012         	goto	l9327
 38597   0025E6                     l9333:
 38598                           
 38599                           ;../canargb_leds.c: 359:     }
 38600   0025E6  2A06               	incf	doFlash@ledno^(0+1280),f,c
 38601   0025E8  2806               	incf	doFlash@ledno^(0+1280),w,c
 38602   0025EA  A4D8               	btfss	status,2,c
 38603   0025EC  EFFA  F012         	goto	u6681
 38604   0025F0  EFFC  F012         	goto	u6680
 38605   0025F4                     u6681:
 38606   0025F4  EF72  F00F         	goto	l9297
 38607   0025F8                     u6680:
 38608   0025F8                     
 38609                           ;../canargb_leds.c: 360:     refreshRequired = 1;
 38610   0025F8  0E01               	movlw	1
 38611   0025FA  0105               	movlb	5	; () banked
 38612   0025FC  6FAB               	movwf	_refreshRequired& (0+255),b
 38613   0025FE                     
 38614                           ; BSR set to: 5
 38615   0025FE  0012               	return		;funcret
 38616   002600                     __end_of_doFlash:
 38617                           	callstack 0
 38618                           
 38619 ;; *************** function _getNV *****************
 38620 ;; Defined at:
 38621 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 38622 ;; Parameters:    Size  Location     Type
 38623 ;;  index           1    wreg     unsigned char 
 38624 ;; Auto vars:     Size  Location     Type
 38625 ;;  index           1    3[COMRAM] unsigned char 
 38626 ;; Return value:  Size  Location     Type
 38627 ;;                  2    0[COMRAM] short 
 38628 ;; Registers used:
 38629 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38630 ;; Tracked objects:
 38631 ;;		On entry : 0/0
 38632 ;;		On exit  : 0/0
 38633 ;;		Unchanged: 0/0
 38634 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38636 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38637 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38638 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38639 ;;Total ram usage:        4 bytes
 38640 ;; Hardware stack levels used: 1
 38641 ;; Hardware stack levels required when called: 1
 38642 ;; This function calls:
 38643 ;;		Nothing
 38644 ;; This function is called by:
 38645 ;;		_doFlash
 38646 ;;		_nvProcessMessage
 38647 ;;		_nvTRnvrdCallback
 38648 ;; This function uses a non-reentrant model
 38649 ;;
 38650                           
 38651                           	psect	text104
 38652   007940                     __ptext104:
 38653                           	callstack 0
 38654   007940                     _getNV:
 38655                           	callstack 122
 38656                           
 38657                           ; BSR set to: 5
 38658                           ;incstack = 0
 38659                           ;getNV@index stored from wreg
 38660   007940  6E04               	movwf	getNV@index^(0+1280),c
 38661   007942                     
 38662                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return 49;
 38663   007942  5004               	movf	getNV@index^(0+1280),w,c
 38664   007944  A4D8               	btfss	status,2,c
 38665   007946  EFA7  F03C         	goto	u5421
 38666   00794A  EFA9  F03C         	goto	u5420
 38667   00794E                     u5421:
 38668   00794E  EFAF  F03C         	goto	l7981
 38669   007952                     u5420:
 38670   007952  0E00               	movlw	0
 38671   007954  6E02               	movwf	(?_getNV+1)^(0+1280),c
 38672   007956  0E31               	movlw	49
 38673   007958  6E01               	movwf	?_getNV^(0+1280),c
 38674   00795A  EFC8  F03C         	goto	l1554
 38675   00795E                     l7981:
 38676                           
 38677                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > 49) return -CMDERR_INV_NV_IDX;
 38678   00795E  0E31               	movlw	49
 38679   007960  6404               	cpfsgt	getNV@index^(0+1280),c
 38680   007962  EFB5  F03C         	goto	u5431
 38681   007966  EFB7  F03C         	goto	u5430
 38682   00796A                     u5431:
 38683   00796A  EFBD  F03C         	goto	l7987
 38684   00796E                     u5430:
 38685   00796E  0EFF               	movlw	255
 38686   007970  6E02               	movwf	(?_getNV+1)^(0+1280),c
 38687   007972  0EF6               	movlw	246
 38688   007974  6E01               	movwf	?_getNV^(0+1280),c
 38689   007976  EFC8  F03C         	goto	l1554
 38690   00797A                     l7987:
 38691                           
 38692                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 38693   00797A  0E00               	movlw	low _nvCache
 38694   00797C  2404               	addwf	getNV@index^(0+1280),w,c
 38695   00797E  6ED9               	movwf	fsr2l,c
 38696   007980  6ADA               	clrf	fsr2h,c
 38697   007982  0E06               	movlw	high _nvCache
 38698   007984  22DA               	addwfc	fsr2h,f,c
 38699   007986  50DF               	movf	indf2,w,c
 38700   007988  6E03               	movwf	??_getNV^(0+1280),c
 38701   00798A  5003               	movf	??_getNV^(0+1280),w,c
 38702   00798C  6E01               	movwf	?_getNV^(0+1280),c
 38703   00798E  6A02               	clrf	(?_getNV+1)^(0+1280),c
 38704   007990                     l1554:
 38705   007990  0012               	return		;funcret
 38706   007992                     __end_of_getNV:
 38707                           	callstack 0
 38708                           
 38709 ;; *************** function _initRomOps *****************
 38710 ;; Defined at:
 38711 ;;		line 156 in file "../../VLCBlib_PIC/nvm.c"
 38712 ;; Parameters:    Size  Location     Type
 38713 ;;		None
 38714 ;; Auto vars:     Size  Location     Type
 38715 ;;		None
 38716 ;; Return value:  Size  Location     Type
 38717 ;;                  1    wreg      void 
 38718 ;; Registers used:
 38719 ;;		wreg, status,2
 38720 ;; Tracked objects:
 38721 ;;		On entry : 0/0
 38722 ;;		On exit  : 0/0
 38723 ;;		Unchanged: 0/0
 38724 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38729 ;;Total ram usage:        0 bytes
 38730 ;; Hardware stack levels used: 1
 38731 ;; Hardware stack levels required when called: 1
 38732 ;; This function calls:
 38733 ;;		Nothing
 38734 ;; This function is called by:
 38735 ;;		_main
 38736 ;; This function uses a non-reentrant model
 38737 ;;
 38738                           
 38739                           	psect	text105
 38740   0081AA                     __ptext105:
 38741                           	callstack 0
 38742   0081AA                     _initRomOps:
 38743                           	callstack 125
 38744   0081AA                     
 38745                           ;../../VLCBlib_PIC/nvm.c: 157:     flashFlags.asByte = 0;
 38746   0081AA  0105               	movlb	5	; () banked
 38747   0081AC  6B9B               	clrf	_flashFlags& (0+255),b
 38748   0081AE                     
 38749                           ; BSR set to: 5
 38750                           ;../../VLCBlib_PIC/nvm.c: 158:     flashBlock = 0x0800;
 38751   0081AE  0E00               	movlw	0
 38752   0081B0  6F84               	movwf	_flashBlock& (0+255),b
 38753   0081B2  0E08               	movlw	8
 38754   0081B4  6F85               	movwf	(_flashBlock+1)& (0+255),b
 38755   0081B6  0E00               	movlw	0
 38756   0081B8  6F86               	movwf	(_flashBlock+2)& (0+255),b
 38757   0081BA                     
 38758                           ; BSR set to: 5
 38759                           ;../../VLCBlib_PIC/nvm.c: 160:     TBLPTRU = 0;
 38760   0081BA  6AF8               	clrf	248,c	;volatile
 38761   0081BC                     
 38762                           ; BSR set to: 5
 38763                           ;../../VLCBlib_PIC/nvm.c: 162:     NVMCON1bits.WRERR = 0;
 38764   0081BC  0100               	movlb	0	; () banked
 38765   0081BE  9F41               	bcf	65,7,b	;volsfr
 38766   0081C0                     
 38767                           ; BSR set to: 0
 38768   0081C0  0012               	return		;funcret
 38769   0081C2                     __end_of_initRomOps:
 38770                           	callstack 0
 38771                           
 38772 ;; *************** function _checkPowerOnPb *****************
 38773 ;; Defined at:
 38774 ;;		line 966 in file "../../VLCBlib_PIC/vlcb.c"
 38775 ;; Parameters:    Size  Location     Type
 38776 ;;		None
 38777 ;; Auto vars:     Size  Location     Type
 38778 ;;  i               1   59[COMRAM] unsigned char 
 38779 ;; Return value:  Size  Location     Type
 38780 ;;                  1    wreg      void 
 38781 ;; Registers used:
 38782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38783 ;; Tracked objects:
 38784 ;;		On entry : 0/0
 38785 ;;		On exit  : 0/0
 38786 ;;		Unchanged: 0/0
 38787 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38792 ;;Total ram usage:        1 bytes
 38793 ;; Hardware stack levels used: 1
 38794 ;; Hardware stack levels required when called: 11
 38795 ;; This function calls:
 38796 ;;		_APP_testMode
 38797 ;;		_factoryReset
 38798 ;;		_pbDownTimer
 38799 ;;		_pbUpTimer
 38800 ;;		_showStatus
 38801 ;; This function is called by:
 38802 ;;		_main
 38803 ;; This function uses a non-reentrant model
 38804 ;;
 38805                           
 38806                           	psect	text106
 38807   006596                     __ptext106:
 38808                           	callstack 0
 38809   006596                     _checkPowerOnPb:
 38810                           	callstack 115
 38811   006596                     
 38812                           ;../../VLCBlib_PIC/vlcb.c: 967:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 970:     if ((!
      +                          (PORTAbits.RA2))) {
 38813   006596  B4CE               	btfsc	206,2,c	;volatile
 38814   006598  EFD0  F032         	goto	u8351
 38815   00659C  EFD2  F032         	goto	u8350
 38816   0065A0                     u8351:
 38817   0065A0  EF1D  F033         	goto	l2023
 38818   0065A4                     u8350:
 38819   0065A4                     
 38820                           ;../../VLCBlib_PIC/vlcb.c: 972:         i = pbDownTimer(28);
 38821   0065A4  0E1C               	movlw	28
 38822   0065A6  EC91  F02F         	call	_pbDownTimer
 38823   0065AA  6E3C               	movwf	checkPowerOnPb@i^(0+1280),c
 38824   0065AC                     
 38825                           ;../../VLCBlib_PIC/vlcb.c: 973:         if (i == 0) {
 38826   0065AC  503C               	movf	checkPowerOnPb@i^(0+1280),w,c
 38827   0065AE  A4D8               	btfss	status,2,c
 38828   0065B0  EFDC  F032         	goto	u8361
 38829   0065B4  EFDE  F032         	goto	u8360
 38830   0065B8                     u8361:
 38831   0065B8  EFE2  F032         	goto	l10935
 38832   0065BC                     u8360:
 38833   0065BC  EF1D  F033         	goto	l2023
 38834   0065C0                     l10931:
 38835                           
 38836                           ;../../VLCBlib_PIC/vlcb.c: 975:             return;
 38837   0065C0  EF1D  F033         	goto	l2023
 38838   0065C4                     l10935:
 38839   0065C4  0E04               	movlw	4
 38840   0065C6  603C               	cpfslt	checkPowerOnPb@i^(0+1280),c
 38841   0065C8  EFE8  F032         	goto	u8371
 38842   0065CC  EFEA  F032         	goto	u8370
 38843   0065D0                     u8371:
 38844   0065D0  EFEE  F032         	goto	l10939
 38845   0065D4                     u8370:
 38846   0065D4                     
 38847                           ;../../VLCBlib_PIC/vlcb.c: 977:             APP_testMode();
 38848   0065D4  ECCF  F01F         	call	_APP_testMode	;wreg free
 38849                           
 38850                           ;../../VLCBlib_PIC/vlcb.c: 978:         } else if (i >= 8) {
 38851   0065D8  EF1D  F033         	goto	l2023
 38852   0065DC                     l10939:
 38853   0065DC  0E07               	movlw	7
 38854   0065DE  643C               	cpfsgt	checkPowerOnPb@i^(0+1280),c
 38855   0065E0  EFF4  F032         	goto	u8381
 38856   0065E4  EFF6  F032         	goto	u8380
 38857   0065E8                     u8381:
 38858   0065E8  EF1D  F033         	goto	l2023
 38859   0065EC                     u8380:
 38860   0065EC                     
 38861                           ;../../VLCBlib_PIC/vlcb.c: 979:             showStatus(STATUS_RESET_WARNING);
 38862   0065EC  0E04               	movlw	4
 38863   0065EE  ECB1  F027         	call	_showStatus
 38864                           
 38865                           ;../../VLCBlib_PIC/vlcb.c: 981:             i = pbUpTimer(5);
 38866   0065F2  0E05               	movlw	5
 38867   0065F4  EC30  F02F         	call	_pbUpTimer
 38868   0065F8  6E3C               	movwf	checkPowerOnPb@i^(0+1280),c
 38869   0065FA                     
 38870                           ;../../VLCBlib_PIC/vlcb.c: 982:             if (i == 0) {
 38871   0065FA  503C               	movf	checkPowerOnPb@i^(0+1280),w,c
 38872   0065FC  A4D8               	btfss	status,2,c
 38873   0065FE  EF03  F033         	goto	u8391
 38874   006602  EF05  F033         	goto	u8390
 38875   006606                     u8391:
 38876   006606  EF07  F033         	goto	l10947
 38877   00660A                     u8390:
 38878   00660A  EF1D  F033         	goto	l2023
 38879   00660E                     l10947:
 38880                           
 38881                           ;../../VLCBlib_PIC/vlcb.c: 986:             i = pbDownTimer(5);
 38882   00660E  0E05               	movlw	5
 38883   006610  EC91  F02F         	call	_pbDownTimer
 38884   006614  6E3C               	movwf	checkPowerOnPb@i^(0+1280),c
 38885   006616                     
 38886                           ;../../VLCBlib_PIC/vlcb.c: 987:             if ((i>=2) && (i < 4)) {
 38887   006616  0E01               	movlw	1
 38888   006618  643C               	cpfsgt	checkPowerOnPb@i^(0+1280),c
 38889   00661A  EF11  F033         	goto	u8401
 38890   00661E  EF13  F033         	goto	u8400
 38891   006622                     u8401:
 38892   006622  EFE0  F032         	goto	l10931
 38893   006626                     u8400:
 38894   006626  0E04               	movlw	4
 38895   006628  603C               	cpfslt	checkPowerOnPb@i^(0+1280),c
 38896   00662A  EF19  F033         	goto	u8411
 38897   00662E  EF1B  F033         	goto	u8410
 38898   006632                     u8411:
 38899   006632  EFE0  F032         	goto	l10931
 38900   006636                     u8410:
 38901   006636                     
 38902                           ;../../VLCBlib_PIC/vlcb.c: 988:                 factoryReset();
 38903   006636  EC97  F02A         	call	_factoryReset	;wreg free
 38904   00663A                     l2023:
 38905   00663A  0012               	return		;funcret
 38906   00663C                     __end_of_checkPowerOnPb:
 38907                           	callstack 0
 38908                           
 38909 ;; *************** function _showStatus *****************
 38910 ;; Defined at:
 38911 ;;		line 235 in file "../../VLCBlib_PIC/statusLeds2.c"
 38912 ;; Parameters:    Size  Location     Type
 38913 ;;  s               1    wreg     enum E23436
 38914 ;; Auto vars:     Size  Location     Type
 38915 ;;  s               1    2[COMRAM] enum E23436
 38916 ;; Return value:  Size  Location     Type
 38917 ;;                  1    wreg      void 
 38918 ;; Registers used:
 38919 ;;		wreg, status,2, status,0
 38920 ;; Tracked objects:
 38921 ;;		On entry : 0/0
 38922 ;;		On exit  : 0/0
 38923 ;;		Unchanged: 0/0
 38924 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38927 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38928 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38929 ;;Total ram usage:        3 bytes
 38930 ;; Hardware stack levels used: 1
 38931 ;; Hardware stack levels required when called: 1
 38932 ;; This function calls:
 38933 ;;		Nothing
 38934 ;; This function is called by:
 38935 ;;		_setLEDsByMode
 38936 ;;		_checkPowerOnPb
 38937 ;;		_poll
 38938 ;; This function uses a non-reentrant model
 38939 ;;
 38940                           
 38941                           	psect	text107
 38942   004F62                     __ptext107:
 38943                           	callstack 0
 38944   004F62                     _showStatus:
 38945                           	callstack 122
 38946                           
 38947                           ;incstack = 0
 38948                           ;showStatus@s stored from wreg
 38949   004F62  6E03               	movwf	showStatus@s^(0+1280),c
 38950   004F64                     
 38951                           ;../../VLCBlib_PIC/statusLeds2.c: 236:     switch (s) {
 38952   004F64  EF10  F028         	goto	l8335
 38953   004F68                     l1796:
 38954                           
 38955                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[0] = LED_OFF;
 38956   004F68  0105               	movlb	5	; () banked
 38957   004F6A  6B8B               	clrf	_ledState& (0+255),b
 38958                           
 38959                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             ledState[1] = LED_OFF;
 38960   004F6C  6B8C               	clrf	(_ledState+1)& (0+255),b
 38961                           
 38962                           ;../../VLCBlib_PIC/statusLeds2.c: 240:             break;
 38963   004F6E  EF51  F028         	goto	l1816
 38964   004F72                     l8305:
 38965                           
 38966                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[0] = LED_ON;
 38967   004F72  0E01               	movlw	1
 38968   004F74  0105               	movlb	5	; () banked
 38969   004F76  6F8B               	movwf	_ledState& (0+255),b
 38970   004F78                     
 38971                           ; BSR set to: 5
 38972                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             ledState[1] = LED_OFF;
 38973   004F78  6B8C               	clrf	(_ledState+1)& (0+255),b
 38974                           
 38975                           ;../../VLCBlib_PIC/statusLeds2.c: 244:             break;
 38976   004F7A  EF51  F028         	goto	l1816
 38977   004F7E                     l1799:
 38978                           
 38979                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[0] = LED_OFF;
 38980   004F7E  0105               	movlb	5	; () banked
 38981   004F80  6B8B               	clrf	_ledState& (0+255),b
 38982   004F82                     
 38983                           ; BSR set to: 5
 38984                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             ledState[1] = LED_FLASH_50_1HZ;
 38985   004F82  0E03               	movlw	3
 38986   004F84  6F8C               	movwf	(_ledState+1)& (0+255),b
 38987                           
 38988                           ;../../VLCBlib_PIC/statusLeds2.c: 248:             break;
 38989   004F86  EF51  F028         	goto	l1816
 38990   004F8A                     l1802:
 38991   004F8A                     l1804:
 38992                           
 38993                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[0] = LED_OFF;
 38994   004F8A  0105               	movlb	5	; () banked
 38995   004F8C  6B8B               	clrf	_ledState& (0+255),b
 38996   004F8E                     
 38997                           ; BSR set to: 5
 38998                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             ledState[1] = LED_ON;
 38999   004F8E  0E01               	movlw	1
 39000   004F90  6F8C               	movwf	(_ledState+1)& (0+255),b
 39001                           
 39002                           ;../../VLCBlib_PIC/statusLeds2.c: 256:             break;
 39003   004F92  EF51  F028         	goto	l1816
 39004   004F96                     l1805:
 39005                           
 39006                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[1] = 0;
 39007   004F96  0105               	movlb	5	; () banked
 39008   004F98  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39009   004F9A                     
 39010                           ; BSR set to: 5
 39011                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             flashCounter[0] = 25;
 39012   004F9A  0E19               	movlw	25
 39013   004F9C  6F89               	movwf	_flashCounter& (0+255),b
 39014                           
 39015                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[0] = LED_FLASH_50_2HZ;
 39016   004F9E  0E02               	movlw	2
 39017   004FA0  6F8B               	movwf	_ledState& (0+255),b
 39018                           
 39019                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             ledState[1] = LED_FLASH_50_2HZ;
 39020   004FA2  0E02               	movlw	2
 39021   004FA4  6F8C               	movwf	(_ledState+1)& (0+255),b
 39022                           
 39023                           ;../../VLCBlib_PIC/statusLeds2.c: 262:             break;
 39024   004FA6  EF51  F028         	goto	l1816
 39025   004FAA                     l8315:
 39026                           
 39027                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 39028   004FAA  0105               	movlb	5	; () banked
 39029   004FAC  29A1               	incf	_mode_state& (0+255),w,b
 39030   004FAE  A4D8               	btfss	status,2,c
 39031   004FB0  EFDC  F027         	goto	u5671
 39032   004FB4  EFDE  F027         	goto	u5670
 39033   004FB8                     u5671:
 39034   004FB8  EFE2  F027         	goto	l8319
 39035   004FBC                     u5670:
 39036   004FBC                     
 39037                           ; BSR set to: 5
 39038                           ;../../VLCBlib_PIC/statusLeds2.c: 265:                 ledState[1] = LED_SINGLE_FLICKER_
      +                          ON;
 39039   004FBC  0E06               	movlw	6
 39040   004FBE  6F8C               	movwf	(_ledState+1)& (0+255),b
 39041                           
 39042                           ;../../VLCBlib_PIC/statusLeds2.c: 266:             } else if (mode_state == MODE_NORMAL)
      +                           {
 39043   004FC0  EF51  F028         	goto	l1816
 39044   004FC4                     l8319:
 39045                           
 39046                           ; BSR set to: 5
 39047   004FC4  05A1               	decf	_mode_state& (0+255),w,b
 39048   004FC6  A4D8               	btfss	status,2,c
 39049   004FC8  EFE8  F027         	goto	u5681
 39050   004FCC  EFEA  F027         	goto	u5680
 39051   004FD0                     u5681:
 39052   004FD0  EF51  F028         	goto	l1816
 39053   004FD4                     u5680:
 39054   004FD4                     
 39055                           ; BSR set to: 5
 39056                           ;../../VLCBlib_PIC/statusLeds2.c: 267:                 ledState[0] = LED_SINGLE_FLICKER_
      +                          ON;
 39057   004FD4  0E06               	movlw	6
 39058   004FD6  6F8B               	movwf	_ledState& (0+255),b
 39059   004FD8  EF51  F028         	goto	l1816
 39060   004FDC                     l8323:
 39061                           
 39062                           ;../../VLCBlib_PIC/statusLeds2.c: 271:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 39063   004FDC  0105               	movlb	5	; () banked
 39064   004FDE  29A1               	incf	_mode_state& (0+255),w,b
 39065   004FE0  A4D8               	btfss	status,2,c
 39066   004FE2  EFF5  F027         	goto	u5691
 39067   004FE6  EFF7  F027         	goto	u5690
 39068   004FEA                     u5691:
 39069   004FEA  EFFB  F027         	goto	l8327
 39070   004FEE                     u5690:
 39071   004FEE                     
 39072                           ; BSR set to: 5
 39073                           ;../../VLCBlib_PIC/statusLeds2.c: 272:                 ledState[1] = LED_LONG_FLICKER_ON
      +                          ;
 39074   004FEE  0E08               	movlw	8
 39075   004FF0  6F8C               	movwf	(_ledState+1)& (0+255),b
 39076                           
 39077                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             } else if (mode_state == MODE_NORMAL)
      +                           {
 39078   004FF2  EF51  F028         	goto	l1816
 39079   004FF6                     l8327:
 39080                           
 39081                           ; BSR set to: 5
 39082   004FF6  05A1               	decf	_mode_state& (0+255),w,b
 39083   004FF8  A4D8               	btfss	status,2,c
 39084   004FFA  EF01  F028         	goto	u5701
 39085   004FFE  EF03  F028         	goto	u5700
 39086   005002                     u5701:
 39087   005002  EF51  F028         	goto	l1816
 39088   005006                     u5700:
 39089   005006                     
 39090                           ; BSR set to: 5
 39091                           ;../../VLCBlib_PIC/statusLeds2.c: 274:                 ledState[0] = LED_LONG_FLICKER_ON
      +                          ;
 39092   005006  0E08               	movlw	8
 39093   005008  6F8B               	movwf	_ledState& (0+255),b
 39094   00500A  EF51  F028         	goto	l1816
 39095   00500E                     l1815:
 39096                           
 39097                           ;../../VLCBlib_PIC/statusLeds2.c: 279:             flashCounter[1] = 0;
 39098   00500E  0105               	movlb	5	; () banked
 39099   005010  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39100                           
 39101                           ;../../VLCBlib_PIC/statusLeds2.c: 280:             flashCounter[0] = 0;
 39102   005012  6B89               	clrf	_flashCounter& (0+255),b
 39103   005014                     
 39104                           ; BSR set to: 5
 39105                           ;../../VLCBlib_PIC/statusLeds2.c: 281:             ledState[0] = LED_FLASH_50_2HZ;
 39106   005014  0E02               	movlw	2
 39107   005016  6F8B               	movwf	_ledState& (0+255),b
 39108                           
 39109                           ;../../VLCBlib_PIC/statusLeds2.c: 282:             ledState[1] = LED_FLASH_50_2HZ;
 39110   005018  0E02               	movlw	2
 39111   00501A  6F8C               	movwf	(_ledState+1)& (0+255),b
 39112                           
 39113                           ;../../VLCBlib_PIC/statusLeds2.c: 283:             break;
 39114   00501C  EF51  F028         	goto	l1816
 39115   005020                     l8335:
 39116   005020  5003               	movf	showStatus@s^(0+1280),w,c
 39117   005022  6E01               	movwf	??_showStatus^(0+1280),c
 39118   005024  6A02               	clrf	(??_showStatus+1)^(0+1280),c
 39119                           
 39120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39121                           ; Switch size 1, requested type "simple"
 39122                           ; Number of cases is 1, Range of values is 0 to 0
 39123                           ; switch strategies available:
 39124                           ; Name         Instructions Cycles
 39125                           ; simple_byte            4     3 (average)
 39126                           ;	Chosen strategy is simple_byte
 39127   005026  5002               	movf	(??_showStatus+1)^(0+1280),w,c
 39128   005028  0A00               	xorlw	0	; case 0
 39129   00502A  B4D8               	btfsc	status,2,c
 39130   00502C  EF1A  F028         	goto	l11611
 39131   005030  EF51  F028         	goto	l1816
 39132   005034                     l11611:
 39133                           
 39134                           ; Switch size 1, requested type "simple"
 39135                           ; Number of cases is 13, Range of values is 0 to 12
 39136                           ; switch strategies available:
 39137                           ; Name         Instructions Cycles
 39138                           ; simple_byte           40    21 (average)
 39139                           ;	Chosen strategy is simple_byte
 39140   005034  5001               	movf	??_showStatus^(0+1280),w,c
 39141   005036  0A00               	xorlw	0	; case 0
 39142   005038  B4D8               	btfsc	status,2,c
 39143   00503A  EFB4  F027         	goto	l1796
 39144   00503E  0A01               	xorlw	1	; case 1
 39145   005040  B4D8               	btfsc	status,2,c
 39146   005042  EFB9  F027         	goto	l8305
 39147   005046  0A03               	xorlw	3	; case 2
 39148   005048  B4D8               	btfsc	status,2,c
 39149   00504A  EFBF  F027         	goto	l1799
 39150   00504E  0A01               	xorlw	1	; case 3
 39151   005050  B4D8               	btfsc	status,2,c
 39152   005052  EFC5  F027         	goto	l1802
 39153   005056  0A07               	xorlw	7	; case 4
 39154   005058  B4D8               	btfsc	status,2,c
 39155   00505A  EFCB  F027         	goto	l1805
 39156   00505E  0A01               	xorlw	1	; case 5
 39157   005060  B4D8               	btfsc	status,2,c
 39158   005062  EFC5  F027         	goto	l1804
 39159   005066  0A03               	xorlw	3	; case 6
 39160   005068  B4D8               	btfsc	status,2,c
 39161   00506A  EFC5  F027         	goto	l1804
 39162   00506E  0A01               	xorlw	1	; case 7
 39163   005070  B4D8               	btfsc	status,2,c
 39164   005072  EFD5  F027         	goto	l8315
 39165   005076  0A0F               	xorlw	15	; case 8
 39166   005078  B4D8               	btfsc	status,2,c
 39167   00507A  EFEE  F027         	goto	l8323
 39168   00507E  0A01               	xorlw	1	; case 9
 39169   005080  B4D8               	btfsc	status,2,c
 39170   005082  EFC5  F027         	goto	l1804
 39171   005086  0A03               	xorlw	3	; case 10
 39172   005088  B4D8               	btfsc	status,2,c
 39173   00508A  EFC5  F027         	goto	l1804
 39174   00508E  0A01               	xorlw	1	; case 11
 39175   005090  B4D8               	btfsc	status,2,c
 39176   005092  EF07  F028         	goto	l1815
 39177   005096  0A07               	xorlw	7	; case 12
 39178   005098  B4D8               	btfsc	status,2,c
 39179   00509A  EF07  F028         	goto	l1815
 39180   00509E  EF51  F028         	goto	l1816
 39181   0050A2                     l1816:
 39182   0050A2  0012               	return		;funcret
 39183   0050A4                     __end_of_showStatus:
 39184                           	callstack 0
 39185                           
 39186 ;; *************** function _pbUpTimer *****************
 39187 ;; Defined at:
 39188 ;;		line 941 in file "../../VLCBlib_PIC/vlcb.c"
 39189 ;; Parameters:    Size  Location     Type
 39190 ;;  timeout         1    wreg     unsigned char 
 39191 ;; Auto vars:     Size  Location     Type
 39192 ;;  timeout         1   27[COMRAM] unsigned char 
 39193 ;; Return value:  Size  Location     Type
 39194 ;;                  1    wreg      unsigned char 
 39195 ;; Registers used:
 39196 ;;		wreg, status,2, status,0, cstack
 39197 ;; Tracked objects:
 39198 ;;		On entry : 0/0
 39199 ;;		On exit  : 0/0
 39200 ;;		Unchanged: 0/0
 39201 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39204 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39205 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39206 ;;Total ram usage:        5 bytes
 39207 ;; Hardware stack levels used: 1
 39208 ;; Hardware stack levels required when called: 3
 39209 ;; This function calls:
 39210 ;;		___lldiv
 39211 ;;		___lmul
 39212 ;;		_leds_poll
 39213 ;;		_tickGet
 39214 ;; This function is called by:
 39215 ;;		_checkPowerOnPb
 39216 ;; This function uses a non-reentrant model
 39217 ;;
 39218                           
 39219                           	psect	text108
 39220   005E60                     __ptext108:
 39221                           	callstack 0
 39222   005E60                     _pbUpTimer:
 39223                           	callstack 122
 39224                           
 39225                           ;incstack = 0
 39226                           ;pbUpTimer@timeout stored from wreg
 39227   005E60  6E1C               	movwf	pbUpTimer@timeout^(0+1280),c
 39228   005E62                     
 39229                           ;../../VLCBlib_PIC/vlcb.c: 943:     pbTimer.val = tickGet();
 39230   005E62  EC75  F039         	call	_tickGet	;wreg free
 39231   005E66  C501  F570         	movff	?_tickGet,_pbTimer
 39232   005E6A  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 39233   005E6E  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 39234   005E72  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 39235                           
 39236                           ;../../VLCBlib_PIC/vlcb.c: 944:     while (! ((!(PORTAbits.RA2)))) {
 39237   005E76  EF6F  F02F         	goto	l2014
 39238   005E7A                     l10857:
 39239                           
 39240                           ;../../VLCBlib_PIC/vlcb.c: 945:         leds_poll();
 39241   005E7A  EC22  F01B         	call	_leds_poll	;wreg free
 39242                           
 39243                           ;../../VLCBlib_PIC/vlcb.c: 946:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 39244   005E7E  EC75  F039         	call	_tickGet	;wreg free
 39245   005E82  0105               	movlb	5	; () banked
 39246   005E84  5170               	movf	_pbTimer& (0+255),w,b
 39247   005E86  5C01               	subwf	?_tickGet^(0+1280),w,c
 39248   005E88  6E18               	movwf	??_pbUpTimer^(0+1280),c
 39249   005E8A  5171               	movf	(_pbTimer+1)& (0+255),w,b
 39250   005E8C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39251   005E8E  6E19               	movwf	(??_pbUpTimer+1)^(0+1280),c
 39252   005E90  5172               	movf	(_pbTimer+2)& (0+255),w,b
 39253   005E92  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39254   005E94  6E1A               	movwf	(??_pbUpTimer+2)^(0+1280),c
 39255   005E96  5173               	movf	(_pbTimer+3)& (0+255),w,b
 39256   005E98  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39257   005E9A  6E1B               	movwf	(??_pbUpTimer+3)^(0+1280),c
 39258   005E9C  501C               	movf	pbUpTimer@timeout^(0+1280),w,c
 39259   005E9E  6E01               	movwf	___lmul@multiplier^(0+1280),c
 39260   005EA0  6A02               	clrf	(___lmul@multiplier+1)^(0+1280),c
 39261   005EA2  6A03               	clrf	(___lmul@multiplier+2)^(0+1280),c
 39262   005EA4  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 39263   005EA6  0E24               	movlw	36
 39264   005EA8  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 39265   005EAA  0EF4               	movlw	244
 39266   005EAC  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 39267   005EAE  0E00               	movlw	0
 39268   005EB0  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 39269   005EB2  0E00               	movlw	0
 39270   005EB4  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 39271   005EB6  ECC7  F03A         	call	___lmul	;wreg free
 39272   005EBA  5018               	movf	??_pbUpTimer^(0+1280),w,c
 39273   005EBC  5C01               	subwf	?___lmul^(0+1280),w,c
 39274   005EBE  5019               	movf	(??_pbUpTimer+1)^(0+1280),w,c
 39275   005EC0  5802               	subwfb	(?___lmul+1)^(0+1280),w,c
 39276   005EC2  501A               	movf	(??_pbUpTimer+2)^(0+1280),w,c
 39277   005EC4  5803               	subwfb	(?___lmul+2)^(0+1280),w,c
 39278   005EC6  501B               	movf	(??_pbUpTimer+3)^(0+1280),w,c
 39279   005EC8  5804               	subwfb	(?___lmul+3)^(0+1280),w,c
 39280   005ECA  B0D8               	btfsc	status,0,c
 39281   005ECC  EF6A  F02F         	goto	u8281
 39282   005ED0  EF6C  F02F         	goto	u8280
 39283   005ED4                     u8281:
 39284   005ED4  EF6F  F02F         	goto	l2014
 39285   005ED8                     u8280:
 39286   005ED8                     
 39287                           ;../../VLCBlib_PIC/vlcb.c: 947:             return 0;
 39288   005ED8  0E00               	movlw	0
 39289   005EDA  EF90  F02F         	goto	l2017
 39290   005EDE                     l2014:
 39291                           
 39292                           ;../../VLCBlib_PIC/vlcb.c: 944:     while (! ((!(PORTAbits.RA2)))) {
 39293   005EDE  B4CE               	btfsc	206,2,c	;volatile
 39294   005EE0  EF74  F02F         	goto	u8291
 39295   005EE4  EF76  F02F         	goto	u8290
 39296   005EE8                     u8291:
 39297   005EE8  EF3D  F02F         	goto	l10857
 39298   005EEC                     u8290:
 39299   005EEC                     
 39300                           ;../../VLCBlib_PIC/vlcb.c: 951:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 39301   005EEC  EC75  F039         	call	_tickGet	;wreg free
 39302   005EF0  0105               	movlb	5	; () banked
 39303   005EF2  5170               	movf	_pbTimer& (0+255),w,b
 39304   005EF4  5C01               	subwf	?_tickGet^(0+1280),w,c
 39305   005EF6  6E0B               	movwf	___lldiv@dividend^(0+1280),c
 39306   005EF8  5171               	movf	(_pbTimer+1)& (0+255),w,b
 39307   005EFA  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39308   005EFC  6E0C               	movwf	(___lldiv@dividend+1)^(0+1280),c
 39309   005EFE  5172               	movf	(_pbTimer+2)& (0+255),w,b
 39310   005F00  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39311   005F02  6E0D               	movwf	(___lldiv@dividend+2)^(0+1280),c
 39312   005F04  5173               	movf	(_pbTimer+3)& (0+255),w,b
 39313   005F06  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39314   005F08  6E0E               	movwf	(___lldiv@dividend+3)^(0+1280),c
 39315   005F0A  0E24               	movlw	36
 39316   005F0C  6E0F               	movwf	___lldiv@divisor^(0+1280),c
 39317   005F0E  0EF4               	movlw	244
 39318   005F10  6E10               	movwf	(___lldiv@divisor+1)^(0+1280),c
 39319   005F12  0E00               	movlw	0
 39320   005F14  6E11               	movwf	(___lldiv@divisor+2)^(0+1280),c
 39321   005F16  0E00               	movlw	0
 39322   005F18  6E12               	movwf	(___lldiv@divisor+3)^(0+1280),c
 39323   005F1A  EC71  F033         	call	___lldiv	;wreg free
 39324   005F1E  500B               	movf	?___lldiv^(0+1280),w,c
 39325   005F20                     l2017:
 39326   005F20  0012               	return		;funcret
 39327   005F22                     __end_of_pbUpTimer:
 39328                           	callstack 0
 39329                           
 39330 ;; *************** function _pbDownTimer *****************
 39331 ;; Defined at:
 39332 ;;		line 922 in file "../../VLCBlib_PIC/vlcb.c"
 39333 ;; Parameters:    Size  Location     Type
 39334 ;;  timeout         1    wreg     unsigned char 
 39335 ;; Auto vars:     Size  Location     Type
 39336 ;;  timeout         1   27[COMRAM] unsigned char 
 39337 ;; Return value:  Size  Location     Type
 39338 ;;                  1    wreg      unsigned char 
 39339 ;; Registers used:
 39340 ;;		wreg, status,2, status,0, cstack
 39341 ;; Tracked objects:
 39342 ;;		On entry : 0/0
 39343 ;;		On exit  : 0/0
 39344 ;;		Unchanged: 0/0
 39345 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39348 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39349 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39350 ;;Total ram usage:        5 bytes
 39351 ;; Hardware stack levels used: 1
 39352 ;; Hardware stack levels required when called: 3
 39353 ;; This function calls:
 39354 ;;		___lldiv
 39355 ;;		___lmul
 39356 ;;		_leds_poll
 39357 ;;		_tickGet
 39358 ;; This function is called by:
 39359 ;;		_checkPowerOnPb
 39360 ;; This function uses a non-reentrant model
 39361 ;;
 39362                           
 39363                           	psect	text109
 39364   005F22                     __ptext109:
 39365                           	callstack 0
 39366   005F22                     _pbDownTimer:
 39367                           	callstack 122
 39368                           
 39369                           ;incstack = 0
 39370                           ;pbDownTimer@timeout stored from wreg
 39371   005F22  6E1C               	movwf	pbDownTimer@timeout^(0+1280),c
 39372   005F24                     
 39373                           ;../../VLCBlib_PIC/vlcb.c: 924:     pbTimer.val = tickGet();
 39374   005F24  EC75  F039         	call	_tickGet	;wreg free
 39375   005F28  C501  F570         	movff	?_tickGet,_pbTimer
 39376   005F2C  C502  F571         	movff	?_tickGet+1,_pbTimer+1
 39377   005F30  C503  F572         	movff	?_tickGet+2,_pbTimer+2
 39378   005F34  C504  F573         	movff	?_tickGet+3,_pbTimer+3
 39379                           
 39380                           ;../../VLCBlib_PIC/vlcb.c: 925:     while ((!(PORTAbits.RA2))) {
 39381   005F38  EFD0  F02F         	goto	l2007
 39382   005F3C                     l10845:
 39383                           
 39384                           ;../../VLCBlib_PIC/vlcb.c: 926:         leds_poll();
 39385   005F3C  EC22  F01B         	call	_leds_poll	;wreg free
 39386                           
 39387                           ;../../VLCBlib_PIC/vlcb.c: 927:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 39388   005F40  EC75  F039         	call	_tickGet	;wreg free
 39389   005F44  0105               	movlb	5	; () banked
 39390   005F46  5170               	movf	_pbTimer& (0+255),w,b
 39391   005F48  5C01               	subwf	?_tickGet^(0+1280),w,c
 39392   005F4A  6E18               	movwf	??_pbDownTimer^(0+1280),c
 39393   005F4C  5171               	movf	(_pbTimer+1)& (0+255),w,b
 39394   005F4E  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39395   005F50  6E19               	movwf	(??_pbDownTimer+1)^(0+1280),c
 39396   005F52  5172               	movf	(_pbTimer+2)& (0+255),w,b
 39397   005F54  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39398   005F56  6E1A               	movwf	(??_pbDownTimer+2)^(0+1280),c
 39399   005F58  5173               	movf	(_pbTimer+3)& (0+255),w,b
 39400   005F5A  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39401   005F5C  6E1B               	movwf	(??_pbDownTimer+3)^(0+1280),c
 39402   005F5E  501C               	movf	pbDownTimer@timeout^(0+1280),w,c
 39403   005F60  6E01               	movwf	___lmul@multiplier^(0+1280),c
 39404   005F62  6A02               	clrf	(___lmul@multiplier+1)^(0+1280),c
 39405   005F64  6A03               	clrf	(___lmul@multiplier+2)^(0+1280),c
 39406   005F66  6A04               	clrf	(___lmul@multiplier+3)^(0+1280),c
 39407   005F68  0E24               	movlw	36
 39408   005F6A  6E05               	movwf	___lmul@multiplicand^(0+1280),c
 39409   005F6C  0EF4               	movlw	244
 39410   005F6E  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 39411   005F70  0E00               	movlw	0
 39412   005F72  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 39413   005F74  0E00               	movlw	0
 39414   005F76  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 39415   005F78  ECC7  F03A         	call	___lmul	;wreg free
 39416   005F7C  5018               	movf	??_pbDownTimer^(0+1280),w,c
 39417   005F7E  5C01               	subwf	?___lmul^(0+1280),w,c
 39418   005F80  5019               	movf	(??_pbDownTimer+1)^(0+1280),w,c
 39419   005F82  5802               	subwfb	(?___lmul+1)^(0+1280),w,c
 39420   005F84  501A               	movf	(??_pbDownTimer+2)^(0+1280),w,c
 39421   005F86  5803               	subwfb	(?___lmul+2)^(0+1280),w,c
 39422   005F88  501B               	movf	(??_pbDownTimer+3)^(0+1280),w,c
 39423   005F8A  5804               	subwfb	(?___lmul+3)^(0+1280),w,c
 39424   005F8C  B0D8               	btfsc	status,0,c
 39425   005F8E  EFCB  F02F         	goto	u8261
 39426   005F92  EFCD  F02F         	goto	u8260
 39427   005F96                     u8261:
 39428   005F96  EFD0  F02F         	goto	l2007
 39429   005F9A                     u8260:
 39430   005F9A                     
 39431                           ;../../VLCBlib_PIC/vlcb.c: 928:             return 0;
 39432   005F9A  0E00               	movlw	0
 39433   005F9C  EFF1  F02F         	goto	l2010
 39434   005FA0                     l2007:
 39435                           
 39436                           ;../../VLCBlib_PIC/vlcb.c: 925:     while ((!(PORTAbits.RA2))) {
 39437   005FA0  A4CE               	btfss	206,2,c	;volatile
 39438   005FA2  EFD5  F02F         	goto	u8271
 39439   005FA6  EFD7  F02F         	goto	u8270
 39440   005FAA                     u8271:
 39441   005FAA  EF9E  F02F         	goto	l10845
 39442   005FAE                     u8270:
 39443   005FAE                     
 39444                           ;../../VLCBlib_PIC/vlcb.c: 932:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 39445   005FAE  EC75  F039         	call	_tickGet	;wreg free
 39446   005FB2  0105               	movlb	5	; () banked
 39447   005FB4  5170               	movf	_pbTimer& (0+255),w,b
 39448   005FB6  5C01               	subwf	?_tickGet^(0+1280),w,c
 39449   005FB8  6E0B               	movwf	___lldiv@dividend^(0+1280),c
 39450   005FBA  5171               	movf	(_pbTimer+1)& (0+255),w,b
 39451   005FBC  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39452   005FBE  6E0C               	movwf	(___lldiv@dividend+1)^(0+1280),c
 39453   005FC0  5172               	movf	(_pbTimer+2)& (0+255),w,b
 39454   005FC2  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39455   005FC4  6E0D               	movwf	(___lldiv@dividend+2)^(0+1280),c
 39456   005FC6  5173               	movf	(_pbTimer+3)& (0+255),w,b
 39457   005FC8  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39458   005FCA  6E0E               	movwf	(___lldiv@dividend+3)^(0+1280),c
 39459   005FCC  0E24               	movlw	36
 39460   005FCE  6E0F               	movwf	___lldiv@divisor^(0+1280),c
 39461   005FD0  0EF4               	movlw	244
 39462   005FD2  6E10               	movwf	(___lldiv@divisor+1)^(0+1280),c
 39463   005FD4  0E00               	movlw	0
 39464   005FD6  6E11               	movwf	(___lldiv@divisor+2)^(0+1280),c
 39465   005FD8  0E00               	movlw	0
 39466   005FDA  6E12               	movwf	(___lldiv@divisor+3)^(0+1280),c
 39467   005FDC  EC71  F033         	call	___lldiv	;wreg free
 39468   005FE0  500B               	movf	?___lldiv^(0+1280),w,c
 39469   005FE2                     l2010:
 39470   005FE2  0012               	return		;funcret
 39471   005FE4                     __end_of_pbDownTimer:
 39472                           	callstack 0
 39473                           
 39474 ;; *************** function _leds_poll *****************
 39475 ;; Defined at:
 39476 ;;		line 89 in file "../../VLCBlib_PIC/statusLeds2.c"
 39477 ;; Parameters:    Size  Location     Type
 39478 ;;		None
 39479 ;; Auto vars:     Size  Location     Type
 39480 ;;		None
 39481 ;; Return value:  Size  Location     Type
 39482 ;;                  1    wreg      void 
 39483 ;; Registers used:
 39484 ;;		wreg, status,2, status,0, cstack
 39485 ;; Tracked objects:
 39486 ;;		On entry : 0/0
 39487 ;;		On exit  : 0/0
 39488 ;;		Unchanged: 0/0
 39489 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39492 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39493 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39494 ;;Total ram usage:        4 bytes
 39495 ;; Hardware stack levels used: 1
 39496 ;; Hardware stack levels required when called: 2
 39497 ;; This function calls:
 39498 ;;		___awdiv
 39499 ;;		_tickGet
 39500 ;; This function is called by:
 39501 ;;		_pbDownTimer
 39502 ;;		_pbUpTimer
 39503 ;;		_poll
 39504 ;; This function uses a non-reentrant model
 39505 ;;
 39506                           
 39507                           	psect	text110
 39508   003644                     __ptext110:
 39509                           	callstack 0
 39510   003644                     _leds_poll:
 39511                           	callstack 123
 39512   003644                     
 39513                           ;../../VLCBlib_PIC/statusLeds2.c: 90:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 39514   003644  EC75  F039         	call	_tickGet	;wreg free
 39515   003648  0105               	movlb	5	; () banked
 39516   00364A  5164               	movf	_ledTimer& (0+255),w,b
 39517   00364C  5C01               	subwf	?_tickGet^(0+1280),w,c
 39518   00364E  6E0B               	movwf	??_leds_poll^(0+1280),c
 39519   003650  5165               	movf	(_ledTimer+1)& (0+255),w,b
 39520   003652  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 39521   003654  6E0C               	movwf	(??_leds_poll+1)^(0+1280),c
 39522   003656  5166               	movf	(_ledTimer+2)& (0+255),w,b
 39523   003658  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 39524   00365A  6E0D               	movwf	(??_leds_poll+2)^(0+1280),c
 39525   00365C  5167               	movf	(_ledTimer+3)& (0+255),w,b
 39526   00365E  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 39527   003660  6E0E               	movwf	(??_leds_poll+3)^(0+1280),c
 39528   003662  500E               	movf	(??_leds_poll+3)^(0+1280),w,c
 39529   003664  100D               	iorwf	(??_leds_poll+2)^(0+1280),w,c
 39530   003666  E10B               	bnz	u6390
 39531   003668  0E72               	movlw	114
 39532   00366A  5C0B               	subwf	??_leds_poll^(0+1280),w,c
 39533   00366C  0E02               	movlw	2
 39534   00366E  580C               	subwfb	(??_leds_poll+1)^(0+1280),w,c
 39535   003670  A0D8               	btfss	status,0,c
 39536   003672  EF3D  F01B         	goto	u6391
 39537   003676  EF3F  F01B         	goto	u6390
 39538   00367A                     u6391:
 39539   00367A  EFE6  F01B         	goto	l9117
 39540   00367E                     u6390:
 39541   00367E                     
 39542                           ; BSR set to: 5
 39543                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[0]++;
 39544   00367E  2B89               	incf	_flashCounter& (0+255),f,b
 39545                           
 39546                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         flashCounter[1]++;
 39547   003680  2B8A               	incf	(_flashCounter+1)& (0+255),f,b
 39548   003682                     
 39549                           ; BSR set to: 5
 39550                           ;../../VLCBlib_PIC/statusLeds2.c: 93:         ledTimer.val = tickGet();
 39551   003682  EC75  F039         	call	_tickGet	;wreg free
 39552   003686  C501  F564         	movff	?_tickGet,_ledTimer
 39553   00368A  C502  F565         	movff	?_tickGet+1,_ledTimer+1
 39554   00368E  C503  F566         	movff	?_tickGet+2,_ledTimer+2
 39555   003692  C504  F567         	movff	?_tickGet+3,_ledTimer+3
 39556   003696  EFE6  F01B         	goto	l9117
 39557   00369A                     l1753:
 39558                           
 39559                           ; BSR set to: 5
 39560                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             (LATBbits.LATB6=1);
 39561   00369A  8CBF               	bsf	191,6,c	;volatile
 39562                           
 39563                           ;../../VLCBlib_PIC/statusLeds2.c: 99:             flashCounter[1] = 0;
 39564   00369C  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39565                           
 39566                           ;../../VLCBlib_PIC/statusLeds2.c: 100:             break;
 39567   00369E  EFB2  F01C         	goto	l9165
 39568   0036A2                     l1755:
 39569                           
 39570                           ; BSR set to: 5
 39571                           ;../../VLCBlib_PIC/statusLeds2.c: 102:             (LATBbits.LATB6=0);
 39572   0036A2  9CBF               	bcf	191,6,c	;volatile
 39573                           
 39574                           ;../../VLCBlib_PIC/statusLeds2.c: 103:             flashCounter[1] = 0;
 39575   0036A4  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39576                           
 39577                           ;../../VLCBlib_PIC/statusLeds2.c: 104:             break;
 39578   0036A6  EFB2  F01C         	goto	l9165
 39579   0036AA                     l9071:
 39580                           
 39581                           ; BSR set to: 5
 39582                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             (LATBbits.LATB6=flashCounter[1]/25);
 39583   0036AA  C58A  F501         	movff	_flashCounter+1,___awdiv@dividend
 39584   0036AE  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39585   0036B0  0E00               	movlw	0
 39586   0036B2  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39587   0036B4  0E19               	movlw	25
 39588   0036B6  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39589   0036B8  ECF2  F02F         	call	___awdiv	;wreg free
 39590   0036BC  3A01               	swapf	?___awdiv^(0+1280),f,c
 39591   0036BE  4601               	rlncf	?___awdiv^(0+1280),f,c
 39592   0036C0  4601               	rlncf	?___awdiv^(0+1280),f,c
 39593   0036C2  50BF               	movf	191,w,c	;volatile
 39594   0036C4  1801               	xorwf	?___awdiv^(0+1280),w,c
 39595   0036C6  0BBF               	andlw	-65
 39596   0036C8  1801               	xorwf	?___awdiv^(0+1280),w,c
 39597   0036CA  6EBF               	movwf	191,c	;volatile
 39598   0036CC                     
 39599                           ;../../VLCBlib_PIC/statusLeds2.c: 108:             if (flashCounter[1] >= 50) {
 39600   0036CC  0E31               	movlw	49
 39601   0036CE  0105               	movlb	5	; () banked
 39602   0036D0  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39603   0036D2  EF6D  F01B         	goto	u6401
 39604   0036D6  EF6F  F01B         	goto	u6400
 39605   0036DA                     u6401:
 39606   0036DA  EFB2  F01C         	goto	l9165
 39607   0036DE                     u6400:
 39608   0036DE                     l9075:
 39609                           
 39610                           ; BSR set to: 5
 39611                           ;../../VLCBlib_PIC/statusLeds2.c: 109:                 flashCounter[1] = 0;
 39612   0036DE  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39613   0036E0  EFB2  F01C         	goto	l9165
 39614   0036E4                     l9077:
 39615                           
 39616                           ; BSR set to: 5
 39617                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             (LATBbits.LATB6=flashCounter[1]/50);
 39618   0036E4  C58A  F501         	movff	_flashCounter+1,___awdiv@dividend
 39619   0036E8  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39620   0036EA  0E00               	movlw	0
 39621   0036EC  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39622   0036EE  0E32               	movlw	50
 39623   0036F0  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39624   0036F2  ECF2  F02F         	call	___awdiv	;wreg free
 39625   0036F6  3A01               	swapf	?___awdiv^(0+1280),f,c
 39626   0036F8  4601               	rlncf	?___awdiv^(0+1280),f,c
 39627   0036FA  4601               	rlncf	?___awdiv^(0+1280),f,c
 39628   0036FC  50BF               	movf	191,w,c	;volatile
 39629   0036FE  1801               	xorwf	?___awdiv^(0+1280),w,c
 39630   003700  0BBF               	andlw	-65
 39631   003702  1801               	xorwf	?___awdiv^(0+1280),w,c
 39632   003704  6EBF               	movwf	191,c	;volatile
 39633   003706                     
 39634                           ;../../VLCBlib_PIC/statusLeds2.c: 115:             if (flashCounter[1] >= 100) {
 39635   003706  0E63               	movlw	99
 39636   003708  0105               	movlb	5	; () banked
 39637   00370A  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39638   00370C  EF8A  F01B         	goto	u6411
 39639   003710  EF8C  F01B         	goto	u6410
 39640   003714                     u6411:
 39641   003714  EFB2  F01C         	goto	l9165
 39642   003718                     u6410:
 39643   003718  EF6F  F01B         	goto	l9075
 39644   00371C                     l9083:
 39645                           
 39646                           ; BSR set to: 5
 39647                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             (LATBbits.LATB6=flashCounter[1]/100);
 39648   00371C  C58A  F501         	movff	_flashCounter+1,___awdiv@dividend
 39649   003720  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39650   003722  0E00               	movlw	0
 39651   003724  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39652   003726  0E64               	movlw	100
 39653   003728  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39654   00372A  ECF2  F02F         	call	___awdiv	;wreg free
 39655   00372E  3A01               	swapf	?___awdiv^(0+1280),f,c
 39656   003730  4601               	rlncf	?___awdiv^(0+1280),f,c
 39657   003732  4601               	rlncf	?___awdiv^(0+1280),f,c
 39658   003734  50BF               	movf	191,w,c	;volatile
 39659   003736  1801               	xorwf	?___awdiv^(0+1280),w,c
 39660   003738  0BBF               	andlw	-65
 39661   00373A  1801               	xorwf	?___awdiv^(0+1280),w,c
 39662   00373C  6EBF               	movwf	191,c	;volatile
 39663   00373E                     
 39664                           ;../../VLCBlib_PIC/statusLeds2.c: 121:             if (flashCounter[1] >= 200) {
 39665   00373E  0EC7               	movlw	199
 39666   003740  0105               	movlb	5	; () banked
 39667   003742  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39668   003744  EFA6  F01B         	goto	u6421
 39669   003748  EFA8  F01B         	goto	u6420
 39670   00374C                     u6421:
 39671   00374C  EFB2  F01C         	goto	l9165
 39672   003750                     u6420:
 39673   003750  EF6F  F01B         	goto	l9075
 39674   003754                     l1762:
 39675                           
 39676                           ; BSR set to: 5
 39677                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             (LATBbits.LATB6=1);
 39678   003754  8CBF               	bsf	191,6,c	;volatile
 39679   003756                     
 39680                           ; BSR set to: 5
 39681                           ;../../VLCBlib_PIC/statusLeds2.c: 127:             if (flashCounter[1] >= 25) {
 39682   003756  0E18               	movlw	24
 39683   003758  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39684   00375A  EFB1  F01B         	goto	u6431
 39685   00375E  EFB3  F01B         	goto	u6430
 39686   003762                     u6431:
 39687   003762  EFB2  F01C         	goto	l9165
 39688   003766                     u6430:
 39689   003766                     l9091:
 39690                           
 39691                           ; BSR set to: 5
 39692                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 flashCounter[1] = 0;
 39693   003766  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39694                           
 39695                           ;../../VLCBlib_PIC/statusLeds2.c: 129:                 ledState[1] = LED_OFF;
 39696   003768  6B8C               	clrf	(_ledState+1)& (0+255),b
 39697   00376A  EFB2  F01C         	goto	l9165
 39698   00376E                     l1764:
 39699                           
 39700                           ; BSR set to: 5
 39701                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             (LATBbits.LATB6=0);
 39702   00376E  9CBF               	bcf	191,6,c	;volatile
 39703   003770                     
 39704                           ; BSR set to: 5
 39705                           ;../../VLCBlib_PIC/statusLeds2.c: 134:             if (flashCounter[1] >= 25) {
 39706   003770  0E18               	movlw	24
 39707   003772  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39708   003774  EFBE  F01B         	goto	u6441
 39709   003778  EFC0  F01B         	goto	u6440
 39710   00377C                     u6441:
 39711   00377C  EFB2  F01C         	goto	l9165
 39712   003780                     u6440:
 39713   003780                     l9095:
 39714                           
 39715                           ; BSR set to: 5
 39716                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 flashCounter[1] = 0;
 39717   003780  6B8A               	clrf	(_flashCounter+1)& (0+255),b
 39718   003782                     
 39719                           ; BSR set to: 5
 39720                           ;../../VLCBlib_PIC/statusLeds2.c: 136:                 ledState[1] = LED_ON;
 39721   003782  0E01               	movlw	1
 39722   003784  6F8C               	movwf	(_ledState+1)& (0+255),b
 39723   003786  EFB2  F01C         	goto	l9165
 39724   00378A                     l1766:
 39725                           
 39726                           ; BSR set to: 5
 39727                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             (LATBbits.LATB6=1);
 39728   00378A  8CBF               	bsf	191,6,c	;volatile
 39729   00378C                     
 39730                           ; BSR set to: 5
 39731                           ;../../VLCBlib_PIC/statusLeds2.c: 141:             if (flashCounter[1] >= 50) {
 39732   00378C  0E31               	movlw	49
 39733   00378E  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39734   003790  EFCC  F01B         	goto	u6451
 39735   003794  EFCE  F01B         	goto	u6450
 39736   003798                     u6451:
 39737   003798  EFB2  F01C         	goto	l9165
 39738   00379C                     u6450:
 39739   00379C  EFB3  F01B         	goto	l9091
 39740   0037A0                     l1768:
 39741                           
 39742                           ; BSR set to: 5
 39743                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             (LATBbits.LATB6=0);
 39744   0037A0  9CBF               	bcf	191,6,c	;volatile
 39745   0037A2                     
 39746                           ; BSR set to: 5
 39747                           ;../../VLCBlib_PIC/statusLeds2.c: 148:             if (flashCounter[1] >= 50) {
 39748   0037A2  0E31               	movlw	49
 39749   0037A4  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39750   0037A6  EFD7  F01B         	goto	u6461
 39751   0037AA  EFD9  F01B         	goto	u6460
 39752   0037AE                     u6461:
 39753   0037AE  EFB2  F01C         	goto	l9165
 39754   0037B2                     u6460:
 39755   0037B2  EFC0  F01B         	goto	l9095
 39756   0037B6                     l1770:
 39757                           
 39758                           ; BSR set to: 5
 39759                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             (LATBbits.LATB6=0);
 39760   0037B6  9CBF               	bcf	191,6,c	;volatile
 39761   0037B8                     
 39762                           ; BSR set to: 5
 39763                           ;../../VLCBlib_PIC/statusLeds2.c: 155:             if (flashCounter[1] >= 100) {
 39764   0037B8  0E63               	movlw	99
 39765   0037BA  658A               	cpfsgt	(_flashCounter+1)& (0+255),b
 39766   0037BC  EFE2  F01B         	goto	u6471
 39767   0037C0  EFE4  F01B         	goto	u6470
 39768   0037C4                     u6471:
 39769   0037C4  EFB2  F01C         	goto	l9165
 39770   0037C8                     u6470:
 39771   0037C8  EFC0  F01B         	goto	l9095
 39772   0037CC                     l9117:
 39773   0037CC  0105               	movlb	5	; () banked
 39774   0037CE  518C               	movf	(_ledState+1)& (0+255),w,b
 39775   0037D0  6E0B               	movwf	??_leds_poll^(0+1280),c
 39776   0037D2  6A0C               	clrf	(??_leds_poll+1)^(0+1280),c
 39777                           
 39778                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39779                           ; Switch size 1, requested type "simple"
 39780                           ; Number of cases is 1, Range of values is 0 to 0
 39781                           ; switch strategies available:
 39782                           ; Name         Instructions Cycles
 39783                           ; simple_byte            4     3 (average)
 39784                           ;	Chosen strategy is simple_byte
 39785   0037D4  500C               	movf	(??_leds_poll+1)^(0+1280),w,c
 39786   0037D6  0A00               	xorlw	0	; case 0
 39787   0037D8  B4D8               	btfsc	status,2,c
 39788   0037DA  EFF1  F01B         	goto	l11613
 39789   0037DE  EFB2  F01C         	goto	l9165
 39790   0037E2                     l11613:
 39791                           
 39792                           ; BSR set to: 5
 39793                           ; Switch size 1, requested type "simple"
 39794                           ; Number of cases is 10, Range of values is 0 to 9
 39795                           ; switch strategies available:
 39796                           ; Name         Instructions Cycles
 39797                           ; simple_byte           31    16 (average)
 39798                           ;	Chosen strategy is simple_byte
 39799   0037E2  500B               	movf	??_leds_poll^(0+1280),w,c
 39800   0037E4  0A00               	xorlw	0	; case 0
 39801   0037E6  B4D8               	btfsc	status,2,c
 39802   0037E8  EF51  F01B         	goto	l1755
 39803   0037EC  0A01               	xorlw	1	; case 1
 39804   0037EE  B4D8               	btfsc	status,2,c
 39805   0037F0  EF4D  F01B         	goto	l1753
 39806   0037F4  0A03               	xorlw	3	; case 2
 39807   0037F6  B4D8               	btfsc	status,2,c
 39808   0037F8  EF55  F01B         	goto	l9071
 39809   0037FC  0A01               	xorlw	1	; case 3
 39810   0037FE  B4D8               	btfsc	status,2,c
 39811   003800  EF72  F01B         	goto	l9077
 39812   003804  0A07               	xorlw	7	; case 4
 39813   003806  B4D8               	btfsc	status,2,c
 39814   003808  EF8E  F01B         	goto	l9083
 39815   00380C  0A01               	xorlw	1	; case 5
 39816   00380E  B4D8               	btfsc	status,2,c
 39817   003810  EFB7  F01B         	goto	l1764
 39818   003814  0A03               	xorlw	3	; case 6
 39819   003816  B4D8               	btfsc	status,2,c
 39820   003818  EFAA  F01B         	goto	l1762
 39821   00381C  0A01               	xorlw	1	; case 7
 39822   00381E  B4D8               	btfsc	status,2,c
 39823   003820  EFD0  F01B         	goto	l1768
 39824   003824  0A0F               	xorlw	15	; case 8
 39825   003826  B4D8               	btfsc	status,2,c
 39826   003828  EFC5  F01B         	goto	l1766
 39827   00382C  0A01               	xorlw	1	; case 9
 39828   00382E  B4D8               	btfsc	status,2,c
 39829   003830  EFDB  F01B         	goto	l1770
 39830   003834  EFB2  F01C         	goto	l9165
 39831   003838                     l1773:
 39832                           
 39833                           ; BSR set to: 5
 39834                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             (LATBbits.LATB7=1);
 39835   003838  8EBF               	bsf	191,7,c	;volatile
 39836                           
 39837                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             flashCounter[0] = 0;
 39838   00383A  6B89               	clrf	_flashCounter& (0+255),b
 39839                           
 39840                           ;../../VLCBlib_PIC/statusLeds2.c: 166:             break;
 39841   00383C  EFE7  F01C         	goto	l1792
 39842   003840                     l1775:
 39843                           
 39844                           ; BSR set to: 5
 39845                           ;../../VLCBlib_PIC/statusLeds2.c: 168:             (LATBbits.LATB7=0);
 39846   003840  9EBF               	bcf	191,7,c	;volatile
 39847                           
 39848                           ;../../VLCBlib_PIC/statusLeds2.c: 169:             flashCounter[0] = 0;
 39849   003842  6B89               	clrf	_flashCounter& (0+255),b
 39850                           
 39851                           ;../../VLCBlib_PIC/statusLeds2.c: 170:             break;
 39852   003844  EFE7  F01C         	goto	l1792
 39853   003848                     l9119:
 39854                           
 39855                           ; BSR set to: 5
 39856                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             (LATBbits.LATB7=flashCounter[0]/25);
 39857   003848  C589  F501         	movff	_flashCounter,___awdiv@dividend
 39858   00384C  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39859   00384E  0E00               	movlw	0
 39860   003850  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39861   003852  0E19               	movlw	25
 39862   003854  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39863   003856  ECF2  F02F         	call	___awdiv	;wreg free
 39864   00385A  3201               	rrcf	?___awdiv^(0+1280),f,c
 39865   00385C  3201               	rrcf	?___awdiv^(0+1280),f,c
 39866   00385E  50BF               	movf	191,w,c	;volatile
 39867   003860  1801               	xorwf	?___awdiv^(0+1280),w,c
 39868   003862  0B7F               	andlw	-129
 39869   003864  1801               	xorwf	?___awdiv^(0+1280),w,c
 39870   003866  6EBF               	movwf	191,c	;volatile
 39871   003868                     
 39872                           ;../../VLCBlib_PIC/statusLeds2.c: 174:             if (flashCounter[0] >= 50) {
 39873   003868  0E31               	movlw	49
 39874   00386A  0105               	movlb	5	; () banked
 39875   00386C  6589               	cpfsgt	_flashCounter& (0+255),b
 39876   00386E  EF3B  F01C         	goto	u6481
 39877   003872  EF3D  F01C         	goto	u6480
 39878   003876                     u6481:
 39879   003876  EFE7  F01C         	goto	l1792
 39880   00387A                     u6480:
 39881   00387A                     l9123:
 39882                           
 39883                           ; BSR set to: 5
 39884                           ;../../VLCBlib_PIC/statusLeds2.c: 175:                 flashCounter[0] = 0;
 39885   00387A  6B89               	clrf	_flashCounter& (0+255),b
 39886   00387C  EFE7  F01C         	goto	l1792
 39887   003880                     l9125:
 39888                           
 39889                           ; BSR set to: 5
 39890                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             (LATBbits.LATB7=flashCounter[0]/50);
 39891   003880  C589  F501         	movff	_flashCounter,___awdiv@dividend
 39892   003884  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39893   003886  0E00               	movlw	0
 39894   003888  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39895   00388A  0E32               	movlw	50
 39896   00388C  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39897   00388E  ECF2  F02F         	call	___awdiv	;wreg free
 39898   003892  3201               	rrcf	?___awdiv^(0+1280),f,c
 39899   003894  3201               	rrcf	?___awdiv^(0+1280),f,c
 39900   003896  50BF               	movf	191,w,c	;volatile
 39901   003898  1801               	xorwf	?___awdiv^(0+1280),w,c
 39902   00389A  0B7F               	andlw	-129
 39903   00389C  1801               	xorwf	?___awdiv^(0+1280),w,c
 39904   00389E  6EBF               	movwf	191,c	;volatile
 39905   0038A0                     
 39906                           ;../../VLCBlib_PIC/statusLeds2.c: 181:             if (flashCounter[0] >= 100) {
 39907   0038A0  0E63               	movlw	99
 39908   0038A2  0105               	movlb	5	; () banked
 39909   0038A4  6589               	cpfsgt	_flashCounter& (0+255),b
 39910   0038A6  EF57  F01C         	goto	u6491
 39911   0038AA  EF59  F01C         	goto	u6490
 39912   0038AE                     u6491:
 39913   0038AE  EFE7  F01C         	goto	l1792
 39914   0038B2                     u6490:
 39915   0038B2  EF3D  F01C         	goto	l9123
 39916   0038B6                     l9131:
 39917                           
 39918                           ; BSR set to: 5
 39919                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             (LATBbits.LATB7=flashCounter[0]/100);
 39920   0038B6  C589  F501         	movff	_flashCounter,___awdiv@dividend
 39921   0038BA  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 39922   0038BC  0E00               	movlw	0
 39923   0038BE  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 39924   0038C0  0E64               	movlw	100
 39925   0038C2  6E03               	movwf	___awdiv@divisor^(0+1280),c
 39926   0038C4  ECF2  F02F         	call	___awdiv	;wreg free
 39927   0038C8  3201               	rrcf	?___awdiv^(0+1280),f,c
 39928   0038CA  3201               	rrcf	?___awdiv^(0+1280),f,c
 39929   0038CC  50BF               	movf	191,w,c	;volatile
 39930   0038CE  1801               	xorwf	?___awdiv^(0+1280),w,c
 39931   0038D0  0B7F               	andlw	-129
 39932   0038D2  1801               	xorwf	?___awdiv^(0+1280),w,c
 39933   0038D4  6EBF               	movwf	191,c	;volatile
 39934   0038D6                     
 39935                           ;../../VLCBlib_PIC/statusLeds2.c: 187:             if (flashCounter[0] >= 200) {
 39936   0038D6  0EC7               	movlw	199
 39937   0038D8  0105               	movlb	5	; () banked
 39938   0038DA  6589               	cpfsgt	_flashCounter& (0+255),b
 39939   0038DC  EF72  F01C         	goto	u6501
 39940   0038E0  EF74  F01C         	goto	u6500
 39941   0038E4                     u6501:
 39942   0038E4  EFE7  F01C         	goto	l1792
 39943   0038E8                     u6500:
 39944   0038E8  EF3D  F01C         	goto	l9123
 39945   0038EC                     l1782:
 39946                           
 39947                           ; BSR set to: 5
 39948                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             (LATBbits.LATB7=1);
 39949   0038EC  8EBF               	bsf	191,7,c	;volatile
 39950   0038EE                     
 39951                           ; BSR set to: 5
 39952                           ;../../VLCBlib_PIC/statusLeds2.c: 193:             if (flashCounter[0] >= 25) {
 39953   0038EE  0E18               	movlw	24
 39954   0038F0  6589               	cpfsgt	_flashCounter& (0+255),b
 39955   0038F2  EF7D  F01C         	goto	u6511
 39956   0038F6  EF7F  F01C         	goto	u6510
 39957   0038FA                     u6511:
 39958   0038FA  EFE7  F01C         	goto	l1792
 39959   0038FE                     u6510:
 39960   0038FE                     l9139:
 39961                           
 39962                           ; BSR set to: 5
 39963                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 flashCounter[0] = 0;
 39964   0038FE  6B89               	clrf	_flashCounter& (0+255),b
 39965                           
 39966                           ;../../VLCBlib_PIC/statusLeds2.c: 195:                 ledState[0] = LED_OFF;
 39967   003900  6B8B               	clrf	_ledState& (0+255),b
 39968   003902  EFE7  F01C         	goto	l1792
 39969   003906                     l1784:
 39970                           
 39971                           ; BSR set to: 5
 39972                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             (LATBbits.LATB7=0);
 39973   003906  9EBF               	bcf	191,7,c	;volatile
 39974   003908                     
 39975                           ; BSR set to: 5
 39976                           ;../../VLCBlib_PIC/statusLeds2.c: 200:             if (flashCounter[0] >= 25) {
 39977   003908  0E18               	movlw	24
 39978   00390A  6589               	cpfsgt	_flashCounter& (0+255),b
 39979   00390C  EF8A  F01C         	goto	u6521
 39980   003910  EF8C  F01C         	goto	u6520
 39981   003914                     u6521:
 39982   003914  EFE7  F01C         	goto	l1792
 39983   003918                     u6520:
 39984   003918                     l9143:
 39985                           
 39986                           ; BSR set to: 5
 39987                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 flashCounter[0] = 0;
 39988   003918  6B89               	clrf	_flashCounter& (0+255),b
 39989   00391A                     
 39990                           ; BSR set to: 5
 39991                           ;../../VLCBlib_PIC/statusLeds2.c: 202:                 ledState[0] = LED_ON;
 39992   00391A  0E01               	movlw	1
 39993   00391C  6F8B               	movwf	_ledState& (0+255),b
 39994   00391E  EFE7  F01C         	goto	l1792
 39995   003922                     l1786:
 39996                           
 39997                           ; BSR set to: 5
 39998                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             (LATBbits.LATB7=1);
 39999   003922  8EBF               	bsf	191,7,c	;volatile
 40000   003924                     
 40001                           ; BSR set to: 5
 40002                           ;../../VLCBlib_PIC/statusLeds2.c: 207:             if (flashCounter[0] >= 50) {
 40003   003924  0E31               	movlw	49
 40004   003926  6589               	cpfsgt	_flashCounter& (0+255),b
 40005   003928  EF98  F01C         	goto	u6531
 40006   00392C  EF9A  F01C         	goto	u6530
 40007   003930                     u6531:
 40008   003930  EFE7  F01C         	goto	l1792
 40009   003934                     u6530:
 40010   003934  EF7F  F01C         	goto	l9139
 40011   003938                     l1788:
 40012                           
 40013                           ; BSR set to: 5
 40014                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             (LATBbits.LATB7=0);
 40015   003938  9EBF               	bcf	191,7,c	;volatile
 40016   00393A                     
 40017                           ; BSR set to: 5
 40018                           ;../../VLCBlib_PIC/statusLeds2.c: 214:             if (flashCounter[0] >= 50) {
 40019   00393A  0E31               	movlw	49
 40020   00393C  6589               	cpfsgt	_flashCounter& (0+255),b
 40021   00393E  EFA3  F01C         	goto	u6541
 40022   003942  EFA5  F01C         	goto	u6540
 40023   003946                     u6541:
 40024   003946  EFE7  F01C         	goto	l1792
 40025   00394A                     u6540:
 40026   00394A  EF8C  F01C         	goto	l9143
 40027   00394E                     l1790:
 40028                           
 40029                           ; BSR set to: 5
 40030                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             (LATBbits.LATB7=0);
 40031   00394E  9EBF               	bcf	191,7,c	;volatile
 40032   003950                     
 40033                           ; BSR set to: 5
 40034                           ;../../VLCBlib_PIC/statusLeds2.c: 221:             if (flashCounter[0] >= 100) {
 40035   003950  0E63               	movlw	99
 40036   003952  6589               	cpfsgt	_flashCounter& (0+255),b
 40037   003954  EFAE  F01C         	goto	u6551
 40038   003958  EFB0  F01C         	goto	u6550
 40039   00395C                     u6551:
 40040   00395C  EFE7  F01C         	goto	l1792
 40041   003960                     u6550:
 40042   003960  EF8C  F01C         	goto	l9143
 40043   003964                     l9165:
 40044                           
 40045                           ; BSR set to: 5
 40046   003964  518B               	movf	_ledState& (0+255),w,b
 40047   003966  6E0B               	movwf	??_leds_poll^(0+1280),c
 40048   003968  6A0C               	clrf	(??_leds_poll+1)^(0+1280),c
 40049                           
 40050                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40051                           ; Switch size 1, requested type "simple"
 40052                           ; Number of cases is 1, Range of values is 0 to 0
 40053                           ; switch strategies available:
 40054                           ; Name         Instructions Cycles
 40055                           ; simple_byte            4     3 (average)
 40056                           ;	Chosen strategy is simple_byte
 40057   00396A  500C               	movf	(??_leds_poll+1)^(0+1280),w,c
 40058   00396C  0A00               	xorlw	0	; case 0
 40059   00396E  B4D8               	btfsc	status,2,c
 40060   003970  EFBC  F01C         	goto	l11615
 40061   003974  EFE7  F01C         	goto	l1792
 40062   003978                     l11615:
 40063                           
 40064                           ; BSR set to: 5
 40065                           ; Switch size 1, requested type "simple"
 40066                           ; Number of cases is 10, Range of values is 0 to 9
 40067                           ; switch strategies available:
 40068                           ; Name         Instructions Cycles
 40069                           ; simple_byte           31    16 (average)
 40070                           ;	Chosen strategy is simple_byte
 40071   003978  500B               	movf	??_leds_poll^(0+1280),w,c
 40072   00397A  0A00               	xorlw	0	; case 0
 40073   00397C  B4D8               	btfsc	status,2,c
 40074   00397E  EF20  F01C         	goto	l1775
 40075   003982  0A01               	xorlw	1	; case 1
 40076   003984  B4D8               	btfsc	status,2,c
 40077   003986  EF1C  F01C         	goto	l1773
 40078   00398A  0A03               	xorlw	3	; case 2
 40079   00398C  B4D8               	btfsc	status,2,c
 40080   00398E  EF24  F01C         	goto	l9119
 40081   003992  0A01               	xorlw	1	; case 3
 40082   003994  B4D8               	btfsc	status,2,c
 40083   003996  EF40  F01C         	goto	l9125
 40084   00399A  0A07               	xorlw	7	; case 4
 40085   00399C  B4D8               	btfsc	status,2,c
 40086   00399E  EF5B  F01C         	goto	l9131
 40087   0039A2  0A01               	xorlw	1	; case 5
 40088   0039A4  B4D8               	btfsc	status,2,c
 40089   0039A6  EF83  F01C         	goto	l1784
 40090   0039AA  0A03               	xorlw	3	; case 6
 40091   0039AC  B4D8               	btfsc	status,2,c
 40092   0039AE  EF76  F01C         	goto	l1782
 40093   0039B2  0A01               	xorlw	1	; case 7
 40094   0039B4  B4D8               	btfsc	status,2,c
 40095   0039B6  EF9C  F01C         	goto	l1788
 40096   0039BA  0A0F               	xorlw	15	; case 8
 40097   0039BC  B4D8               	btfsc	status,2,c
 40098   0039BE  EF91  F01C         	goto	l1786
 40099   0039C2  0A01               	xorlw	1	; case 9
 40100   0039C4  B4D8               	btfsc	status,2,c
 40101   0039C6  EFA7  F01C         	goto	l1790
 40102   0039CA  EFE7  F01C         	goto	l1792
 40103   0039CE                     l1792:
 40104                           
 40105                           ; BSR set to: 5
 40106   0039CE  0012               	return		;funcret
 40107   0039D0                     __end_of_leds_poll:
 40108                           	callstack 0
 40109                           
 40110 ;; *************** function ___lmul *****************
 40111 ;; Defined at:
 40112 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
 40113 ;; Parameters:    Size  Location     Type
 40114 ;;  multiplier      4    0[COMRAM] unsigned long 
 40115 ;;  multiplicand    4    4[COMRAM] unsigned long 
 40116 ;; Auto vars:     Size  Location     Type
 40117 ;;  product         4    8[COMRAM] unsigned long 
 40118 ;; Return value:  Size  Location     Type
 40119 ;;                  4    0[COMRAM] unsigned long 
 40120 ;; Registers used:
 40121 ;;		wreg, status,2, status,0
 40122 ;; Tracked objects:
 40123 ;;		On entry : 0/0
 40124 ;;		On exit  : 0/0
 40125 ;;		Unchanged: 0/0
 40126 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40127 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40128 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40130 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40131 ;;Total ram usage:       12 bytes
 40132 ;; Hardware stack levels used: 1
 40133 ;; Hardware stack levels required when called: 1
 40134 ;; This function calls:
 40135 ;;		Nothing
 40136 ;; This function is called by:
 40137 ;;		_pbDownTimer
 40138 ;;		_pbUpTimer
 40139 ;;		_poll
 40140 ;; This function uses a non-reentrant model
 40141 ;;
 40142                           
 40143                           	psect	text111
 40144   00758E                     __ptext111:
 40145                           	callstack 0
 40146   00758E                     ___lmul:
 40147                           	callstack 124
 40148   00758E  0E00               	movlw	0
 40149   007590  6E09               	movwf	___lmul@product^(0+1280),c
 40150   007592  0E00               	movlw	0
 40151   007594  6E0A               	movwf	(___lmul@product+1)^(0+1280),c
 40152   007596  0E00               	movlw	0
 40153   007598  6E0B               	movwf	(___lmul@product+2)^(0+1280),c
 40154   00759A  0E00               	movlw	0
 40155   00759C  6E0C               	movwf	(___lmul@product+3)^(0+1280),c
 40156   00759E                     l9181:
 40157   00759E  A001               	btfss	___lmul@multiplier^(0+1280),0,c
 40158   0075A0  EFD4  F03A         	goto	u6561
 40159   0075A4  EFD6  F03A         	goto	u6560
 40160   0075A8                     u6561:
 40161   0075A8  EFDE  F03A         	goto	l9185
 40162   0075AC                     u6560:
 40163   0075AC  5005               	movf	___lmul@multiplicand^(0+1280),w,c
 40164   0075AE  2609               	addwf	___lmul@product^(0+1280),f,c
 40165   0075B0  5006               	movf	(___lmul@multiplicand+1)^(0+1280),w,c
 40166   0075B2  220A               	addwfc	(___lmul@product+1)^(0+1280),f,c
 40167   0075B4  5007               	movf	(___lmul@multiplicand+2)^(0+1280),w,c
 40168   0075B6  220B               	addwfc	(___lmul@product+2)^(0+1280),f,c
 40169   0075B8  5008               	movf	(___lmul@multiplicand+3)^(0+1280),w,c
 40170   0075BA  220C               	addwfc	(___lmul@product+3)^(0+1280),f,c
 40171   0075BC                     l9185:
 40172   0075BC  90D8               	bcf	status,0,c
 40173   0075BE  3605               	rlcf	___lmul@multiplicand^(0+1280),f,c
 40174   0075C0  3606               	rlcf	(___lmul@multiplicand+1)^(0+1280),f,c
 40175   0075C2  3607               	rlcf	(___lmul@multiplicand+2)^(0+1280),f,c
 40176   0075C4  3608               	rlcf	(___lmul@multiplicand+3)^(0+1280),f,c
 40177   0075C6  90D8               	bcf	status,0,c
 40178   0075C8  3204               	rrcf	(___lmul@multiplier+3)^(0+1280),f,c
 40179   0075CA  3203               	rrcf	(___lmul@multiplier+2)^(0+1280),f,c
 40180   0075CC  3202               	rrcf	(___lmul@multiplier+1)^(0+1280),f,c
 40181   0075CE  3201               	rrcf	___lmul@multiplier^(0+1280),f,c
 40182   0075D0  5001               	movf	___lmul@multiplier^(0+1280),w,c
 40183   0075D2  1002               	iorwf	(___lmul@multiplier+1)^(0+1280),w,c
 40184   0075D4  1003               	iorwf	(___lmul@multiplier+2)^(0+1280),w,c
 40185   0075D6  1004               	iorwf	(___lmul@multiplier+3)^(0+1280),w,c
 40186   0075D8  A4D8               	btfss	status,2,c
 40187   0075DA  EFF1  F03A         	goto	u6571
 40188   0075DE  EFF3  F03A         	goto	u6570
 40189   0075E2                     u6571:
 40190   0075E2  EFCF  F03A         	goto	l9181
 40191   0075E6                     u6570:
 40192   0075E6  C509  F501         	movff	___lmul@product,?___lmul
 40193   0075EA  C50A  F502         	movff	___lmul@product+1,?___lmul+1
 40194   0075EE  C50B  F503         	movff	___lmul@product+2,?___lmul+2
 40195   0075F2  C50C  F504         	movff	___lmul@product+3,?___lmul+3
 40196   0075F6  0012               	return		;funcret
 40197   0075F8                     __end_of___lmul:
 40198                           	callstack 0
 40199                           
 40200 ;; *************** function ___lldiv *****************
 40201 ;; Defined at:
 40202 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
 40203 ;; Parameters:    Size  Location     Type
 40204 ;;  dividend        4   10[COMRAM] unsigned long 
 40205 ;;  divisor         4   14[COMRAM] unsigned long 
 40206 ;; Auto vars:     Size  Location     Type
 40207 ;;  quotient        4   18[COMRAM] unsigned long 
 40208 ;;  counter         1   22[COMRAM] unsigned char 
 40209 ;; Return value:  Size  Location     Type
 40210 ;;                  4   10[COMRAM] unsigned long 
 40211 ;; Registers used:
 40212 ;;		wreg, status,2, status,0
 40213 ;; Tracked objects:
 40214 ;;		On entry : 0/0
 40215 ;;		On exit  : 0/0
 40216 ;;		Unchanged: 0/0
 40217 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40218 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40219 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40221 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40222 ;;Total ram usage:       13 bytes
 40223 ;; Hardware stack levels used: 1
 40224 ;; Hardware stack levels required when called: 1
 40225 ;; This function calls:
 40226 ;;		Nothing
 40227 ;; This function is called by:
 40228 ;;		_pbDownTimer
 40229 ;;		_pbUpTimer
 40230 ;; This function uses a non-reentrant model
 40231 ;;
 40232                           
 40233                           	psect	text112
 40234   0066E2                     __ptext112:
 40235                           	callstack 0
 40236   0066E2                     ___lldiv:
 40237                           	callstack 123
 40238   0066E2  0E00               	movlw	0
 40239   0066E4  6E13               	movwf	___lldiv@quotient^(0+1280),c
 40240   0066E6  0E00               	movlw	0
 40241   0066E8  6E14               	movwf	(___lldiv@quotient+1)^(0+1280),c
 40242   0066EA  0E00               	movlw	0
 40243   0066EC  6E15               	movwf	(___lldiv@quotient+2)^(0+1280),c
 40244   0066EE  0E00               	movlw	0
 40245   0066F0  6E16               	movwf	(___lldiv@quotient+3)^(0+1280),c
 40246   0066F2  500F               	movf	___lldiv@divisor^(0+1280),w,c
 40247   0066F4  1010               	iorwf	(___lldiv@divisor+1)^(0+1280),w,c
 40248   0066F6  1011               	iorwf	(___lldiv@divisor+2)^(0+1280),w,c
 40249   0066F8  1012               	iorwf	(___lldiv@divisor+3)^(0+1280),w,c
 40250   0066FA  B4D8               	btfsc	status,2,c
 40251   0066FC  EF82  F033         	goto	u6581
 40252   006700  EF84  F033         	goto	u6580
 40253   006704                     u6581:
 40254   006704  EFBA  F033         	goto	l2141
 40255   006708                     u6580:
 40256   006708  0E01               	movlw	1
 40257   00670A  6E17               	movwf	___lldiv@counter^(0+1280),c
 40258   00670C  EF8E  F033         	goto	l9197
 40259   006710                     l9195:
 40260   006710  90D8               	bcf	status,0,c
 40261   006712  360F               	rlcf	___lldiv@divisor^(0+1280),f,c
 40262   006714  3610               	rlcf	(___lldiv@divisor+1)^(0+1280),f,c
 40263   006716  3611               	rlcf	(___lldiv@divisor+2)^(0+1280),f,c
 40264   006718  3612               	rlcf	(___lldiv@divisor+3)^(0+1280),f,c
 40265   00671A  2A17               	incf	___lldiv@counter^(0+1280),f,c
 40266   00671C                     l9197:
 40267   00671C  AE12               	btfss	(___lldiv@divisor+3)^(0+1280),7,c
 40268   00671E  EF93  F033         	goto	u6591
 40269   006722  EF95  F033         	goto	u6590
 40270   006726                     u6591:
 40271   006726  EF88  F033         	goto	l9195
 40272   00672A                     u6590:
 40273   00672A                     l9199:
 40274   00672A  90D8               	bcf	status,0,c
 40275   00672C  3613               	rlcf	___lldiv@quotient^(0+1280),f,c
 40276   00672E  3614               	rlcf	(___lldiv@quotient+1)^(0+1280),f,c
 40277   006730  3615               	rlcf	(___lldiv@quotient+2)^(0+1280),f,c
 40278   006732  3616               	rlcf	(___lldiv@quotient+3)^(0+1280),f,c
 40279   006734  500F               	movf	___lldiv@divisor^(0+1280),w,c
 40280   006736  5C0B               	subwf	___lldiv@dividend^(0+1280),w,c
 40281   006738  5010               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 40282   00673A  580C               	subwfb	(___lldiv@dividend+1)^(0+1280),w,c
 40283   00673C  5011               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 40284   00673E  580D               	subwfb	(___lldiv@dividend+2)^(0+1280),w,c
 40285   006740  5012               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 40286   006742  580E               	subwfb	(___lldiv@dividend+3)^(0+1280),w,c
 40287   006744  A0D8               	btfss	status,0,c
 40288   006746  EFA7  F033         	goto	u6601
 40289   00674A  EFA9  F033         	goto	u6600
 40290   00674E                     u6601:
 40291   00674E  EFB2  F033         	goto	l9207
 40292   006752                     u6600:
 40293   006752  500F               	movf	___lldiv@divisor^(0+1280),w,c
 40294   006754  5E0B               	subwf	___lldiv@dividend^(0+1280),f,c
 40295   006756  5010               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 40296   006758  5A0C               	subwfb	(___lldiv@dividend+1)^(0+1280),f,c
 40297   00675A  5011               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 40298   00675C  5A0D               	subwfb	(___lldiv@dividend+2)^(0+1280),f,c
 40299   00675E  5012               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 40300   006760  5A0E               	subwfb	(___lldiv@dividend+3)^(0+1280),f,c
 40301   006762  8013               	bsf	___lldiv@quotient^(0+1280),0,c
 40302   006764                     l9207:
 40303   006764  90D8               	bcf	status,0,c
 40304   006766  3212               	rrcf	(___lldiv@divisor+3)^(0+1280),f,c
 40305   006768  3211               	rrcf	(___lldiv@divisor+2)^(0+1280),f,c
 40306   00676A  3210               	rrcf	(___lldiv@divisor+1)^(0+1280),f,c
 40307   00676C  320F               	rrcf	___lldiv@divisor^(0+1280),f,c
 40308   00676E  2E17               	decfsz	___lldiv@counter^(0+1280),f,c
 40309   006770  EF95  F033         	goto	l9199
 40310   006774                     l2141:
 40311   006774  C513  F50B         	movff	___lldiv@quotient,?___lldiv
 40312   006778  C514  F50C         	movff	___lldiv@quotient+1,?___lldiv+1
 40313   00677C  C515  F50D         	movff	___lldiv@quotient+2,?___lldiv+2
 40314   006780  C516  F50E         	movff	___lldiv@quotient+3,?___lldiv+3
 40315   006784  0012               	return		;funcret
 40316   006786                     __end_of___lldiv:
 40317                           	callstack 0
 40318                           
 40319 ;; *************** function _factoryReset *****************
 40320 ;; Defined at:
 40321 ;;		line 867 in file "../../VLCBlib_PIC/vlcb.c"
 40322 ;; Parameters:    Size  Location     Type
 40323 ;;		None
 40324 ;; Auto vars:     Size  Location     Type
 40325 ;;  i               1   58[COMRAM] unsigned char 
 40326 ;; Return value:  Size  Location     Type
 40327 ;;                  1    wreg      void 
 40328 ;; Registers used:
 40329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40330 ;; Tracked objects:
 40331 ;;		On entry : 0/0
 40332 ;;		On exit  : 0/0
 40333 ;;		Unchanged: 0/0
 40334 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40336 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40337 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40338 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40339 ;;Total ram usage:        5 bytes
 40340 ;; Hardware stack levels used: 1
 40341 ;; Hardware stack levels required when called: 10
 40342 ;; This function calls:
 40343 ;;		NULL
 40344 ;;		_APP_factoryReset
 40345 ;;		_canFactoryReset
 40346 ;;		_mnsFactoryReset
 40347 ;;		_nvFactoryReset
 40348 ;;		_teachFactoryReset
 40349 ;;		_writeNVM
 40350 ;; This function is called by:
 40351 ;;		_checkPowerOnPb
 40352 ;;		_main
 40353 ;; This function uses a non-reentrant model
 40354 ;;
 40355                           
 40356                           	psect	text113
 40357   00552E                     __ptext113:
 40358                           	callstack 0
 40359   00552E                     _factoryReset:
 40360                           	callstack 116
 40361   00552E                     
 40362                           ;../../VLCBlib_PIC/vlcb.c: 868:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 870:     for (i
      +                          =0; i<6; i++) {
 40363   00552E  6A3B               	clrf	factoryReset@i^(0+1280),c
 40364   005530                     l10829:
 40365                           
 40366                           ;../../VLCBlib_PIC/vlcb.c: 871:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 40367   005530  503B               	movf	factoryReset@i^(0+1280),w,c
 40368   005532  0D02               	mullw	2
 40369   005534  0E89               	movlw	low _services
 40370   005536  24F3               	addwf	243,w,c
 40371   005538  6EF6               	movwf	tblptrl,c
 40372   00553A  0EFF               	movlw	high _services
 40373   00553C  20F4               	addwfc	244,w,c
 40374   00553E  6EF7               	movwf	tblptrh,c
 40375   005540                     	if	1	;There are 3 active tblptr bytes
 40376   005540  6AF8               	clrf	tblptru,c
 40377   005542  0E00               	movlw	low (__mediumconst shr (0+16))
 40378   005544  22F8               	addwfc	tblptru,f,c
 40379   005546                     	endif
 40380   005546  0009               	tblrd		*+
 40381   005548  50F5               	movf	tablat,w,c
 40382   00554A  0009               	tblrd		*+
 40383   00554C  10F5               	iorwf	tablat,w,c
 40384   00554E  B4D8               	btfsc	status,2,c
 40385   005550  EFAC  F02A         	goto	u8221
 40386   005554  EFAE  F02A         	goto	u8220
 40387   005558                     u8221:
 40388   005558  EFFF  F02A         	goto	l10835
 40389   00555C                     u8220:
 40390   00555C  503B               	movf	factoryReset@i^(0+1280),w,c
 40391   00555E  0D02               	mullw	2
 40392   005560  0E89               	movlw	low _services
 40393   005562  24F3               	addwf	243,w,c
 40394   005564  6EF6               	movwf	tblptrl,c
 40395   005566  0EFF               	movlw	high _services
 40396   005568  20F4               	addwfc	244,w,c
 40397   00556A  6EF7               	movwf	tblptrh,c
 40398   00556C                     	if	1	;There are 3 active tblptr bytes
 40399   00556C  6AF8               	clrf	tblptru,c
 40400   00556E  0E00               	movlw	low (__mediumconst shr (0+16))
 40401   005570  22F8               	addwfc	tblptru,f,c
 40402   005572                     	endif
 40403   005572  0009               	tblrd		*+
 40404   005574  C4F5 F537          	movff	tablat,??_factoryReset
 40405   005578  0009               	tblrd		*+
 40406   00557A  C4F5 F538          	movff	tablat,??_factoryReset+1
 40407   00557E  0E02               	movlw	2
 40408   005580  2637               	addwf	??_factoryReset^(0+1280),f,c
 40409   005582  0E00               	movlw	0
 40410   005584  2238               	addwfc	(??_factoryReset+1)^(0+1280),f,c
 40411   005586  C537  F4F6         	movff	??_factoryReset,tblptrl
 40412   00558A  C538  F4F7         	movff	??_factoryReset+1,tblptrh
 40413   00558E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40414   00558E  6AF8               	clrf	tblptru,c
 40415   005590                     	endif
 40416   005590                     	if	0	;tblptru may be non-zero
 40417   005590                     	endif
 40418   005590  0009               	tblrd		*+
 40419   005592  50F5               	movf	tablat,w,c
 40420   005594  0009               	tblrd		*+
 40421   005596  10F5               	iorwf	tablat,w,c
 40422   005598  B4D8               	btfsc	status,2,c
 40423   00559A  EFD1  F02A         	goto	u8231
 40424   00559E  EFD3  F02A         	goto	u8230
 40425   0055A2                     u8231:
 40426   0055A2  EFFF  F02A         	goto	l10835
 40427   0055A6                     u8230:
 40428   0055A6                     
 40429                           ;../../VLCBlib_PIC/vlcb.c: 872:             services[i]->factoryReset();
 40430   0055A6  503B               	movf	factoryReset@i^(0+1280),w,c
 40431   0055A8  0D02               	mullw	2
 40432   0055AA  0E89               	movlw	low _services
 40433   0055AC  24F3               	addwf	243,w,c
 40434   0055AE  6EF6               	movwf	tblptrl,c
 40435   0055B0  0EFF               	movlw	high _services
 40436   0055B2  20F4               	addwfc	244,w,c
 40437   0055B4  6EF7               	movwf	tblptrh,c
 40438   0055B6                     	if	1	;There are 3 active tblptr bytes
 40439   0055B6  6AF8               	clrf	tblptru,c
 40440   0055B8  0E00               	movlw	low (__mediumconst shr (0+16))
 40441   0055BA  22F8               	addwfc	tblptru,f,c
 40442   0055BC                     	endif
 40443   0055BC  0009               	tblrd		*+
 40444   0055BE  C4F5 F537          	movff	tablat,??_factoryReset
 40445   0055C2  0009               	tblrd		*+
 40446   0055C4  C4F5 F538          	movff	tablat,??_factoryReset+1
 40447   0055C8  0E02               	movlw	2
 40448   0055CA  2637               	addwf	??_factoryReset^(0+1280),f,c
 40449   0055CC  0E00               	movlw	0
 40450   0055CE  2238               	addwfc	(??_factoryReset+1)^(0+1280),f,c
 40451   0055D0  C537  F4F6         	movff	??_factoryReset,tblptrl
 40452   0055D4  C538  F4F7         	movff	??_factoryReset+1,tblptrh
 40453   0055D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40454   0055D8  6AF8               	clrf	tblptru,c
 40455   0055DA                     	endif
 40456   0055DA                     	if	0	;tblptru may be non-zero
 40457   0055DA                     	endif
 40458   0055DA  0009               	tblrd		*+
 40459   0055DC  C4F5 F539          	movff	tablat,??_factoryReset+2
 40460   0055E0  0009               	tblrd		*+
 40461   0055E2  C4F5 F53A          	movff	tablat,??_factoryReset+3
 40462   0055E6  D802               	call	u8248
 40463   0055E8  EFFF  F02A         	goto	u8249
 40464   0055EC                     u8248:
 40465   0055EC  0005               	push	
 40466   0055EE  6EFA               	movwf	pclath,c
 40467   0055F0  5039               	movf	(??_factoryReset+2)^(0+1280),w,c
 40468   0055F2  6EFD               	movwf	tosl,c
 40469   0055F4  503A               	movf	(??_factoryReset+3)^(0+1280),w,c
 40470   0055F6  6EFE               	movwf	tosh,c
 40471   0055F8  6AFF               	clrf	tosu,c
 40472   0055FA  50FA               	movf	pclath,w,c
 40473   0055FC  0012               	return		;indir
 40474   0055FE                     u8249:
 40475   0055FE                     l10835:
 40476                           
 40477                           ;../../VLCBlib_PIC/vlcb.c: 874:     }
 40478   0055FE  2A3B               	incf	factoryReset@i^(0+1280),f,c
 40479   005600  0E05               	movlw	5
 40480   005602  643B               	cpfsgt	factoryReset@i^(0+1280),c
 40481   005604  EF06  F02B         	goto	u8251
 40482   005608  EF08  F02B         	goto	u8250
 40483   00560C                     u8251:
 40484   00560C  EF98  F02A         	goto	l10829
 40485   005610                     u8250:
 40486   005610                     
 40487                           ;../../VLCBlib_PIC/vlcb.c: 876:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, 1);
 40488   005610  0EFA               	movlw	250
 40489   005612  6E0E               	movwf	writeNVM@index^(0+1280),c
 40490   005614  0E03               	movlw	3
 40491   005616  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40492   005618  0E00               	movlw	0
 40493   00561A  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40494   00561C  0E01               	movlw	1
 40495   00561E  6E11               	movwf	writeNVM@value^(0+1280),c
 40496   005620  0E00               	movlw	0
 40497   005622  EC91  F03B         	call	_writeNVM
 40498   005626                     
 40499                           ;../../VLCBlib_PIC/vlcb.c: 878:     APP_factoryReset();
 40500   005626  EC21  F041         	call	_APP_factoryReset	;wreg free
 40501   00562A  0012               	return		;funcret
 40502   00562C                     __end_of_factoryReset:
 40503                           	callstack 0
 40504                           
 40505 ;; *************** function _nvFactoryReset *****************
 40506 ;; Defined at:
 40507 ;;		line 126 in file "../../VLCBlib_PIC/nv.c"
 40508 ;; Parameters:    Size  Location     Type
 40509 ;;		None
 40510 ;; Auto vars:     Size  Location     Type
 40511 ;;  i               1   22[COMRAM] unsigned char 
 40512 ;; Return value:  Size  Location     Type
 40513 ;;                  1    wreg      void 
 40514 ;; Registers used:
 40515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40516 ;; Tracked objects:
 40517 ;;		On entry : 0/0
 40518 ;;		On exit  : 0/0
 40519 ;;		Unchanged: 0/0
 40520 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40524 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40525 ;;Total ram usage:        3 bytes
 40526 ;; Hardware stack levels used: 1
 40527 ;; Hardware stack levels required when called: 6
 40528 ;; This function calls:
 40529 ;;		_APP_nvDefault
 40530 ;;		_writeNVM
 40531 ;; This function is called by:
 40532 ;;		_factoryReset
 40533 ;; This function uses a non-reentrant model
 40534 ;;
 40535                           
 40536                           	psect	text114
 40537   007BDC                     __ptext114:
 40538                           	callstack 0
 40539   007BDC                     _nvFactoryReset:
 40540                           	callstack 119
 40541   007BDC                     
 40542                           ;../../VLCBlib_PIC/nv.c: 127:     uint8_t i;;../../VLCBlib_PIC/nv.c: 128:     for (i=1; 
      +                          i<= 49; i++) {
 40543   007BDC  0E01               	movlw	1
 40544   007BDE  6E17               	movwf	nvFactoryReset@i^(0+1280),c
 40545   007BE0                     l8983:
 40546                           
 40547                           ;../../VLCBlib_PIC/nv.c: 129:         writeNVM(EEPROM_NVM_TYPE, 0x200 +i, APP_nvDefault(
      +                          i));
 40548   007BE0  0E00               	movlw	0
 40549   007BE2  2417               	addwf	nvFactoryReset@i^(0+1280),w,c
 40550   007BE4  6E15               	movwf	??_nvFactoryReset^(0+1280),c
 40551   007BE6  6A16               	clrf	(??_nvFactoryReset+1)^(0+1280),c
 40552   007BE8  0E02               	movlw	2
 40553   007BEA  2216               	addwfc	(??_nvFactoryReset+1)^(0+1280),f,c
 40554   007BEC  C515  F50E         	movff	??_nvFactoryReset,writeNVM@index
 40555   007BF0  C516  F50F         	movff	??_nvFactoryReset+1,writeNVM@index+1
 40556   007BF4  6A10               	clrf	(writeNVM@index+2)^(0+1280),c
 40557   007BF6  BE0F               	btfsc	(writeNVM@index+1)^(0+1280),7,c
 40558   007BF8  0610               	decf	(writeNVM@index+2)^(0+1280),f,c
 40559   007BFA  5017               	movf	nvFactoryReset@i^(0+1280),w,c
 40560   007BFC  EC52  F028         	call	_APP_nvDefault
 40561   007C00  6E11               	movwf	writeNVM@value^(0+1280),c
 40562   007C02  0E00               	movlw	0
 40563   007C04  EC91  F03B         	call	_writeNVM
 40564   007C08                     
 40565                           ;../../VLCBlib_PIC/nv.c: 130:     }
 40566   007C08  2A17               	incf	nvFactoryReset@i^(0+1280),f,c
 40567   007C0A  0E31               	movlw	49
 40568   007C0C  6417               	cpfsgt	nvFactoryReset@i^(0+1280),c
 40569   007C0E  EF0B  F03E         	goto	u6321
 40570   007C12  EF0D  F03E         	goto	u6320
 40571   007C16                     u6321:
 40572   007C16  EFF0  F03D         	goto	l8983
 40573   007C1A                     u6320:
 40574   007C1A  0012               	return		;funcret
 40575   007C1C                     __end_of_nvFactoryReset:
 40576                           	callstack 0
 40577                           
 40578 ;; *************** function _mnsFactoryReset *****************
 40579 ;; Defined at:
 40580 ;;		line 279 in file "../../VLCBlib_PIC/mns.c"
 40581 ;; Parameters:    Size  Location     Type
 40582 ;;		None
 40583 ;; Auto vars:     Size  Location     Type
 40584 ;;		None
 40585 ;; Return value:  Size  Location     Type
 40586 ;;                  1    wreg      void 
 40587 ;; Registers used:
 40588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40589 ;; Tracked objects:
 40590 ;;		On entry : 0/0
 40591 ;;		On exit  : 0/0
 40592 ;;		Unchanged: 0/0
 40593 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40598 ;;Total ram usage:        0 bytes
 40599 ;; Hardware stack levels used: 1
 40600 ;; Hardware stack levels required when called: 6
 40601 ;; This function calls:
 40602 ;;		_writeNVM
 40603 ;; This function is called by:
 40604 ;;		_factoryReset
 40605 ;; This function uses a non-reentrant model
 40606 ;;
 40607                           
 40608                           	psect	text115
 40609   007522                     __ptext115:
 40610                           	callstack 0
 40611   007522                     _mnsFactoryReset:
 40612                           	callstack 119
 40613   007522                     
 40614                           ;../../VLCBlib_PIC/mns.c: 280:     nn.bytes.hi = 0;
 40615   007522  0105               	movlb	5	; () banked
 40616   007524  6B90               	clrf	(_nn+1)& (0+255),b
 40617                           
 40618                           ;../../VLCBlib_PIC/mns.c: 281:     nn.bytes.lo = 0;
 40619   007526  6B8F               	clrf	_nn& (0+255),b
 40620   007528                     
 40621                           ; BSR set to: 5
 40622                           ;../../VLCBlib_PIC/mns.c: 282:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.hi);
 40623   007528  0EFD               	movlw	253
 40624   00752A  6E0E               	movwf	writeNVM@index^(0+1280),c
 40625   00752C  0E03               	movlw	3
 40626   00752E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40627   007530  0E00               	movlw	0
 40628   007532  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40629   007534  C590  F511         	movff	_nn+1,writeNVM@value
 40630   007538  0E00               	movlw	0
 40631   00753A  EC91  F03B         	call	_writeNVM
 40632                           
 40633                           ;../../VLCBlib_PIC/mns.c: 283:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.lo);
 40634   00753E  0EFC               	movlw	252
 40635   007540  6E0E               	movwf	writeNVM@index^(0+1280),c
 40636   007542  0E03               	movlw	3
 40637   007544  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40638   007546  0E00               	movlw	0
 40639   007548  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40640   00754A  C58F  F511         	movff	_nn,writeNVM@value
 40641   00754E  0E00               	movlw	0
 40642   007550  EC91  F03B         	call	_writeNVM
 40643   007554                     
 40644                           ;../../VLCBlib_PIC/mns.c: 285:     last_mode_state = mode_state = MODE_UNINITIALISED;
 40645   007554  0105               	movlb	5	; () banked
 40646   007556  69A1               	setf	_mode_state& (0+255),b
 40647   007558  69A0               	setf	_last_mode_state& (0+255),b
 40648                           
 40649                           ;../../VLCBlib_PIC/mns.c: 286:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 40650   00755A  0EFB               	movlw	251
 40651   00755C  6E0E               	movwf	writeNVM@index^(0+1280),c
 40652   00755E  0E03               	movlw	3
 40653   007560  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40654   007562  0E00               	movlw	0
 40655   007564  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40656   007566  C5A1  F511         	movff	_mode_state,writeNVM@value
 40657   00756A  0E00               	movlw	0
 40658   00756C  EC91  F03B         	call	_writeNVM
 40659   007570                     
 40660                           ;../../VLCBlib_PIC/mns.c: 288:     last_mode_flags = mode_flags = 0;
 40661   007570  0105               	movlb	5	; () banked
 40662   007572  6BA4               	clrf	_mode_flags& (0+255),b
 40663   007574  6B9F               	clrf	_last_mode_flags& (0+255),b
 40664                           
 40665                           ;../../VLCBlib_PIC/mns.c: 289:     writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 40666   007576  0EF9               	movlw	249
 40667   007578  6E0E               	movwf	writeNVM@index^(0+1280),c
 40668   00757A  0E03               	movlw	3
 40669   00757C  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40670   00757E  0E00               	movlw	0
 40671   007580  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40672   007582  C5A4  F511         	movff	_mode_flags,writeNVM@value
 40673   007586  0E00               	movlw	0
 40674   007588  EC91  F03B         	call	_writeNVM
 40675   00758C  0012               	return		;funcret
 40676   00758E                     __end_of_mnsFactoryReset:
 40677                           	callstack 0
 40678                           
 40679 ;; *************** function _canFactoryReset *****************
 40680 ;; Defined at:
 40681 ;;		line 210 in file "../../VLCBlib_PIC/can18_can_2.c"
 40682 ;; Parameters:    Size  Location     Type
 40683 ;;		None
 40684 ;; Auto vars:     Size  Location     Type
 40685 ;;		None
 40686 ;; Return value:  Size  Location     Type
 40687 ;;                  1    wreg      void 
 40688 ;; Registers used:
 40689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40690 ;; Tracked objects:
 40691 ;;		On entry : 0/0
 40692 ;;		On exit  : 0/0
 40693 ;;		Unchanged: 0/0
 40694 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40699 ;;Total ram usage:        0 bytes
 40700 ;; Hardware stack levels used: 1
 40701 ;; Hardware stack levels required when called: 6
 40702 ;; This function calls:
 40703 ;;		_writeNVM
 40704 ;; This function is called by:
 40705 ;;		_factoryReset
 40706 ;; This function uses a non-reentrant model
 40707 ;;
 40708                           
 40709                           	psect	text116
 40710   00815C                     __ptext116:
 40711                           	callstack 0
 40712   00815C                     _canFactoryReset:
 40713                           	callstack 119
 40714   00815C                     
 40715                           ;../../VLCBlib_PIC/can18_can_2.c: 211:     canId = 0;
 40716   00815C  0105               	movlb	5	; () banked
 40717   00815E  6BA8               	clrf	_canId& (0+255),b
 40718   008160                     
 40719                           ; BSR set to: 5
 40720                           ;../../VLCBlib_PIC/can18_can_2.c: 212:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 40721   008160  0EFE               	movlw	254
 40722   008162  6E0E               	movwf	writeNVM@index^(0+1280),c
 40723   008164  0E03               	movlw	3
 40724   008166  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 40725   008168  0E00               	movlw	0
 40726   00816A  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 40727   00816C  C5A8  F511         	movff	_canId,writeNVM@value
 40728   008170  0E00               	movlw	0
 40729   008172  EC91  F03B         	call	_writeNVM
 40730   008176  0012               	return		;funcret
 40731   008178                     __end_of_canFactoryReset:
 40732                           	callstack 0
 40733                           
 40734 ;; *************** function _teachFactoryReset *****************
 40735 ;; Defined at:
 40736 ;;		line 190 in file "../../VLCBlib_PIC/event_teach_simple.c"
 40737 ;; Parameters:    Size  Location     Type
 40738 ;;		None
 40739 ;; Auto vars:     Size  Location     Type
 40740 ;;		None
 40741 ;; Return value:  Size  Location     Type
 40742 ;;                  1    wreg      void 
 40743 ;; Registers used:
 40744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40745 ;; Tracked objects:
 40746 ;;		On entry : 0/0
 40747 ;;		On exit  : 0/0
 40748 ;;		Unchanged: 0/0
 40749 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40754 ;;Total ram usage:        0 bytes
 40755 ;; Hardware stack levels used: 1
 40756 ;; Hardware stack levels required when called: 8
 40757 ;; This function calls:
 40758 ;;		_clearAllEvents
 40759 ;; This function is called by:
 40760 ;;		_factoryReset
 40761 ;; This function uses a non-reentrant model
 40762 ;;
 40763                           
 40764                           	psect	text117
 40765   00823C                     __ptext117:
 40766                           	callstack 0
 40767   00823C                     _teachFactoryReset:
 40768                           	callstack 117
 40769   00823C                     
 40770                           ;../../VLCBlib_PIC/event_teach_simple.c: 191:     clearAllEvents();
 40771   00823C  EC81  F040         	call	_clearAllEvents	;wreg free
 40772   008240  0012               	return		;funcret
 40773   008242                     __end_of_teachFactoryReset:
 40774                           	callstack 0
 40775                           
 40776 ;; *************** function _APP_nvDefault *****************
 40777 ;; Defined at:
 40778 ;;		line 70 in file "../canargb_nvs.c"
 40779 ;; Parameters:    Size  Location     Type
 40780 ;;  index           1    wreg     unsigned char 
 40781 ;; Auto vars:     Size  Location     Type
 40782 ;;  index           1   10[COMRAM] unsigned char 
 40783 ;; Return value:  Size  Location     Type
 40784 ;;                  1    wreg      unsigned char 
 40785 ;; Registers used:
 40786 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40787 ;; Tracked objects:
 40788 ;;		On entry : 0/0
 40789 ;;		On exit  : 0/0
 40790 ;;		Unchanged: 0/0
 40791 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40793 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40794 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40795 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40796 ;;Total ram usage:        3 bytes
 40797 ;; Hardware stack levels used: 1
 40798 ;; Hardware stack levels required when called: 2
 40799 ;; This function calls:
 40800 ;;		___awdiv
 40801 ;;		___awmod
 40802 ;; This function is called by:
 40803 ;;		_nvFactoryReset
 40804 ;; This function uses a non-reentrant model
 40805 ;;
 40806                           
 40807                           	psect	text118
 40808   0050A4                     __ptext118:
 40809                           	callstack 0
 40810   0050A4                     _APP_nvDefault:
 40811                           	callstack 122
 40812                           
 40813                           ;incstack = 0
 40814                           ;APP_nvDefault@index stored from wreg
 40815   0050A4  6E0B               	movwf	APP_nvDefault@index^(0+1280),c
 40816   0050A6                     
 40817                           ;../canargb_nvs.c: 71:     if (index == 49) {
 40818   0050A6  0E31               	movlw	49
 40819   0050A8  180B               	xorwf	APP_nvDefault@index^(0+1280),w,c
 40820   0050AA  A4D8               	btfss	status,2,c
 40821   0050AC  EF5A  F028         	goto	u5441
 40822   0050B0  EF5C  F028         	goto	u5440
 40823   0050B4                     u5441:
 40824   0050B4  EF5F  F028         	goto	l7997
 40825   0050B8                     u5440:
 40826   0050B8                     
 40827                           ;../canargb_nvs.c: 72:         return 3;
 40828   0050B8  0E03               	movlw	3
 40829   0050BA  EFEF  F028         	goto	l297
 40830   0050BE                     l7997:
 40831                           
 40832                           ;../canargb_nvs.c: 74:     index--;
 40833   0050BE  060B               	decf	APP_nvDefault@index^(0+1280),f,c
 40834   0050C0                     
 40835                           ;../canargb_nvs.c: 75:     if (index < 49) {
 40836   0050C0  0E31               	movlw	49
 40837   0050C2  600B               	cpfslt	APP_nvDefault@index^(0+1280),c
 40838   0050C4  EF66  F028         	goto	u5451
 40839   0050C8  EF68  F028         	goto	u5450
 40840   0050CC                     u5451:
 40841   0050CC  EFEE  F028         	goto	l8019
 40842   0050D0                     u5450:
 40843   0050D0  EFCF  F028         	goto	l8017
 40844   0050D4                     l8003:
 40845                           
 40846                           ;../canargb_nvs.c: 78:                 return defaultColours[index/3].red;
 40847   0050D4  C50B  F501         	movff	APP_nvDefault@index,___awdiv@dividend
 40848   0050D8  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 40849   0050DA  0E00               	movlw	0
 40850   0050DC  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 40851   0050DE  0E03               	movlw	3
 40852   0050E0  6E03               	movwf	___awdiv@divisor^(0+1280),c
 40853   0050E2  ECF2  F02F         	call	___awdiv	;wreg free
 40854   0050E6  0E03               	movlw	3
 40855   0050E8  0201               	mulwf	?___awdiv^(0+1280),c
 40856   0050EA  C4F3 F509          	movff	prodl,??_APP_nvDefault
 40857   0050EE  C4F4 F50A          	movff	prodh,??_APP_nvDefault+1
 40858   0050F2  0202               	mulwf	(?___awdiv+1)^(0+1280),c
 40859   0050F4  50F3               	movf	prodl,w,c
 40860   0050F6  260A               	addwf	(??_APP_nvDefault+1)^(0+1280),f,c
 40861   0050F8  0E59               	movlw	low _defaultColours
 40862   0050FA  2409               	addwf	??_APP_nvDefault^(0+1280),w,c
 40863   0050FC  6EF6               	movwf	tblptrl,c
 40864   0050FE  0EFF               	movlw	high _defaultColours
 40865   005100  200A               	addwfc	(??_APP_nvDefault+1)^(0+1280),w,c
 40866   005102  6EF7               	movwf	tblptrh,c
 40867   005104                     	if	1	;There are 3 active tblptr bytes
 40868   005104  6AF8               	clrf	tblptru,c
 40869   005106  0E00               	movlw	low (__mediumconst shr (0+16))
 40870   005108  22F8               	addwfc	tblptru,f,c
 40871   00510A                     	endif
 40872   00510A  0008               	tblrd		*
 40873   00510C  50F5               	movf	tablat,w,c
 40874   00510E  EFEF  F028         	goto	l297
 40875   005112                     l8007:
 40876                           
 40877                           ;../canargb_nvs.c: 80:                 return defaultColours[index/3].green;
 40878   005112  C50B  F501         	movff	APP_nvDefault@index,___awdiv@dividend
 40879   005116  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 40880   005118  0E00               	movlw	0
 40881   00511A  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 40882   00511C  0E03               	movlw	3
 40883   00511E  6E03               	movwf	___awdiv@divisor^(0+1280),c
 40884   005120  ECF2  F02F         	call	___awdiv	;wreg free
 40885   005124  0E03               	movlw	3
 40886   005126  0201               	mulwf	?___awdiv^(0+1280),c
 40887   005128  C4F3 F509          	movff	prodl,??_APP_nvDefault
 40888   00512C  C4F4 F50A          	movff	prodh,??_APP_nvDefault+1
 40889   005130  0202               	mulwf	(?___awdiv+1)^(0+1280),c
 40890   005132  50F3               	movf	prodl,w,c
 40891   005134  260A               	addwf	(??_APP_nvDefault+1)^(0+1280),f,c
 40892   005136  0E01               	movlw	1
 40893   005138  2609               	addwf	??_APP_nvDefault^(0+1280),f,c
 40894   00513A  0E00               	movlw	0
 40895   00513C  220A               	addwfc	(??_APP_nvDefault+1)^(0+1280),f,c
 40896   00513E  0E59               	movlw	low _defaultColours
 40897   005140  2409               	addwf	??_APP_nvDefault^(0+1280),w,c
 40898   005142  6EF6               	movwf	tblptrl,c
 40899   005144  0EFF               	movlw	high _defaultColours
 40900   005146  200A               	addwfc	(??_APP_nvDefault+1)^(0+1280),w,c
 40901   005148  6EF7               	movwf	tblptrh,c
 40902   00514A                     	if	1	;There are 3 active tblptr bytes
 40903   00514A  6AF8               	clrf	tblptru,c
 40904   00514C  0E00               	movlw	low (__mediumconst shr (0+16))
 40905   00514E  22F8               	addwfc	tblptru,f,c
 40906   005150                     	endif
 40907   005150  0008               	tblrd		*
 40908   005152  50F5               	movf	tablat,w,c
 40909   005154  EFEF  F028         	goto	l297
 40910   005158                     l8011:
 40911                           
 40912                           ;../canargb_nvs.c: 82:                 return defaultColours[index/3].blue;
 40913   005158  C50B  F501         	movff	APP_nvDefault@index,___awdiv@dividend
 40914   00515C  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 40915   00515E  0E00               	movlw	0
 40916   005160  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 40917   005162  0E03               	movlw	3
 40918   005164  6E03               	movwf	___awdiv@divisor^(0+1280),c
 40919   005166  ECF2  F02F         	call	___awdiv	;wreg free
 40920   00516A  0E03               	movlw	3
 40921   00516C  0201               	mulwf	?___awdiv^(0+1280),c
 40922   00516E  C4F3 F509          	movff	prodl,??_APP_nvDefault
 40923   005172  C4F4 F50A          	movff	prodh,??_APP_nvDefault+1
 40924   005176  0202               	mulwf	(?___awdiv+1)^(0+1280),c
 40925   005178  50F3               	movf	prodl,w,c
 40926   00517A  260A               	addwf	(??_APP_nvDefault+1)^(0+1280),f,c
 40927   00517C  0E02               	movlw	2
 40928   00517E  2609               	addwf	??_APP_nvDefault^(0+1280),f,c
 40929   005180  0E00               	movlw	0
 40930   005182  220A               	addwfc	(??_APP_nvDefault+1)^(0+1280),f,c
 40931   005184  0E59               	movlw	low _defaultColours
 40932   005186  2409               	addwf	??_APP_nvDefault^(0+1280),w,c
 40933   005188  6EF6               	movwf	tblptrl,c
 40934   00518A  0EFF               	movlw	high _defaultColours
 40935   00518C  200A               	addwfc	(??_APP_nvDefault+1)^(0+1280),w,c
 40936   00518E  6EF7               	movwf	tblptrh,c
 40937   005190                     	if	1	;There are 3 active tblptr bytes
 40938   005190  6AF8               	clrf	tblptru,c
 40939   005192  0E00               	movlw	low (__mediumconst shr (0+16))
 40940   005194  22F8               	addwfc	tblptru,f,c
 40941   005196                     	endif
 40942   005196  0008               	tblrd		*
 40943   005198  50F5               	movf	tablat,w,c
 40944   00519A  EFEF  F028         	goto	l297
 40945   00519E                     l8017:
 40946   00519E  C50B  F501         	movff	APP_nvDefault@index,___awmod@dividend
 40947   0051A2  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
 40948   0051A4  0E00               	movlw	0
 40949   0051A6  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
 40950   0051A8  0E03               	movlw	3
 40951   0051AA  6E03               	movwf	___awmod@divisor^(0+1280),c
 40952   0051AC  ECCC  F031         	call	___awmod	;wreg free
 40953                           
 40954                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40955                           ; Switch size 1, requested type "simple"
 40956                           ; Number of cases is 1, Range of values is 0 to 0
 40957                           ; switch strategies available:
 40958                           ; Name         Instructions Cycles
 40959                           ; simple_byte            4     3 (average)
 40960                           ;	Chosen strategy is simple_byte
 40961   0051B0  5002               	movf	(?___awmod+1)^(0+1280),w,c
 40962   0051B2  0A00               	xorlw	0	; case 0
 40963   0051B4  B4D8               	btfsc	status,2,c
 40964   0051B6  EFDF  F028         	goto	l11617
 40965   0051BA  EFEE  F028         	goto	l8019
 40966   0051BE                     l11617:
 40967                           
 40968                           ; Switch size 1, requested type "simple"
 40969                           ; Number of cases is 3, Range of values is 0 to 2
 40970                           ; switch strategies available:
 40971                           ; Name         Instructions Cycles
 40972                           ; simple_byte           10     6 (average)
 40973                           ;	Chosen strategy is simple_byte
 40974   0051BE  5001               	movf	?___awmod^(0+1280),w,c
 40975   0051C0  0A00               	xorlw	0	; case 0
 40976   0051C2  B4D8               	btfsc	status,2,c
 40977   0051C4  EF6A  F028         	goto	l8003
 40978   0051C8  0A01               	xorlw	1	; case 1
 40979   0051CA  B4D8               	btfsc	status,2,c
 40980   0051CC  EF89  F028         	goto	l8007
 40981   0051D0  0A03               	xorlw	3	; case 2
 40982   0051D2  B4D8               	btfsc	status,2,c
 40983   0051D4  EFAC  F028         	goto	l8011
 40984   0051D8  EFEE  F028         	goto	l8019
 40985   0051DC                     l8019:
 40986                           
 40987                           ;../canargb_nvs.c: 85:     return 0;
 40988   0051DC  0E00               	movlw	0
 40989   0051DE                     l297:
 40990   0051DE  0012               	return		;funcret
 40991   0051E0                     __end_of_APP_nvDefault:
 40992                           	callstack 0
 40993                           
 40994 ;; *************** function ___awmod *****************
 40995 ;; Defined at:
 40996 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 40997 ;; Parameters:    Size  Location     Type
 40998 ;;  dividend        2    0[COMRAM] int 
 40999 ;;  divisor         2    2[COMRAM] int 
 41000 ;; Auto vars:     Size  Location     Type
 41001 ;;  sign            1    5[COMRAM] unsigned char 
 41002 ;;  counter         1    4[COMRAM] unsigned char 
 41003 ;; Return value:  Size  Location     Type
 41004 ;;                  2    0[COMRAM] int 
 41005 ;; Registers used:
 41006 ;;		wreg, status,2, status,0
 41007 ;; Tracked objects:
 41008 ;;		On entry : 0/0
 41009 ;;		On exit  : 0/0
 41010 ;;		Unchanged: 0/0
 41011 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41012 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41013 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41015 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41016 ;;Total ram usage:        6 bytes
 41017 ;; Hardware stack levels used: 1
 41018 ;; Hardware stack levels required when called: 1
 41019 ;; This function calls:
 41020 ;;		Nothing
 41021 ;; This function is called by:
 41022 ;;		_APP_nvDefault
 41023 ;; This function uses a non-reentrant model
 41024 ;;
 41025                           
 41026                           	psect	text119
 41027   006398                     __ptext119:
 41028                           	callstack 0
 41029   006398                     ___awmod:
 41030                           	callstack 122
 41031   006398  6A06               	clrf	___awmod@sign^(0+1280),c
 41032   00639A  BE02               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
 41033   00639C  EFD4  F031         	goto	u5320
 41034   0063A0  EFD2  F031         	goto	u5321
 41035   0063A4                     u5321:
 41036   0063A4  EFDA  F031         	goto	l7903
 41037   0063A8                     u5320:
 41038   0063A8  6C01               	negf	___awmod@dividend^(0+1280),c
 41039   0063AA  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
 41040   0063AC  B0D8               	btfsc	status,0,c
 41041   0063AE  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
 41042   0063B0  0E01               	movlw	1
 41043   0063B2  6E06               	movwf	___awmod@sign^(0+1280),c
 41044   0063B4                     l7903:
 41045   0063B4  BE04               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
 41046   0063B6  EFE1  F031         	goto	u5330
 41047   0063BA  EFDF  F031         	goto	u5331
 41048   0063BE                     u5331:
 41049   0063BE  EFE5  F031         	goto	l7907
 41050   0063C2                     u5330:
 41051   0063C2  6C03               	negf	___awmod@divisor^(0+1280),c
 41052   0063C4  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
 41053   0063C6  B0D8               	btfsc	status,0,c
 41054   0063C8  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
 41055   0063CA                     l7907:
 41056   0063CA  5003               	movf	___awmod@divisor^(0+1280),w,c
 41057   0063CC  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
 41058   0063CE  B4D8               	btfsc	status,2,c
 41059   0063D0  EFEC  F031         	goto	u5341
 41060   0063D4  EFEE  F031         	goto	u5340
 41061   0063D8                     u5341:
 41062   0063D8  EF12  F032         	goto	l7923
 41063   0063DC                     u5340:
 41064   0063DC  0E01               	movlw	1
 41065   0063DE  6E05               	movwf	___awmod@counter^(0+1280),c
 41066   0063E0  EFF6  F031         	goto	l7913
 41067   0063E4                     l7911:
 41068   0063E4  90D8               	bcf	status,0,c
 41069   0063E6  3603               	rlcf	___awmod@divisor^(0+1280),f,c
 41070   0063E8  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
 41071   0063EA  2A05               	incf	___awmod@counter^(0+1280),f,c
 41072   0063EC                     l7913:
 41073   0063EC  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
 41074   0063EE  EFFB  F031         	goto	u5351
 41075   0063F2  EFFD  F031         	goto	u5350
 41076   0063F6                     u5351:
 41077   0063F6  EFF2  F031         	goto	l7911
 41078   0063FA                     u5350:
 41079   0063FA                     l7915:
 41080   0063FA  5003               	movf	___awmod@divisor^(0+1280),w,c
 41081   0063FC  5C01               	subwf	___awmod@dividend^(0+1280),w,c
 41082   0063FE  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
 41083   006400  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
 41084   006402  A0D8               	btfss	status,0,c
 41085   006404  EF06  F032         	goto	u5361
 41086   006408  EF08  F032         	goto	u5360
 41087   00640C                     u5361:
 41088   00640C  EF0C  F032         	goto	l7919
 41089   006410                     u5360:
 41090   006410  5003               	movf	___awmod@divisor^(0+1280),w,c
 41091   006412  5E01               	subwf	___awmod@dividend^(0+1280),f,c
 41092   006414  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
 41093   006416  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
 41094   006418                     l7919:
 41095   006418  90D8               	bcf	status,0,c
 41096   00641A  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
 41097   00641C  3203               	rrcf	___awmod@divisor^(0+1280),f,c
 41098   00641E  2E05               	decfsz	___awmod@counter^(0+1280),f,c
 41099   006420  EFFD  F031         	goto	l7915
 41100   006424                     l7923:
 41101   006424  5006               	movf	___awmod@sign^(0+1280),w,c
 41102   006426  B4D8               	btfsc	status,2,c
 41103   006428  EF18  F032         	goto	u5371
 41104   00642C  EF1A  F032         	goto	u5370
 41105   006430                     u5371:
 41106   006430  EF1E  F032         	goto	l7927
 41107   006434                     u5370:
 41108   006434  6C01               	negf	___awmod@dividend^(0+1280),c
 41109   006436  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
 41110   006438  B0D8               	btfsc	status,0,c
 41111   00643A  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
 41112   00643C                     l7927:
 41113   00643C  C501  F501         	movff	___awmod@dividend,?___awmod
 41114   006440  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
 41115   006444  0012               	return		;funcret
 41116   006446                     __end_of___awmod:
 41117                           	callstack 0
 41118                           
 41119 ;; *************** function ___awdiv *****************
 41120 ;; Defined at:
 41121 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 41122 ;; Parameters:    Size  Location     Type
 41123 ;;  dividend        2    0[COMRAM] int 
 41124 ;;  divisor         2    2[COMRAM] int 
 41125 ;; Auto vars:     Size  Location     Type
 41126 ;;  quotient        2    6[COMRAM] int 
 41127 ;;  sign            1    5[COMRAM] unsigned char 
 41128 ;;  counter         1    4[COMRAM] unsigned char 
 41129 ;; Return value:  Size  Location     Type
 41130 ;;                  2    0[COMRAM] int 
 41131 ;; Registers used:
 41132 ;;		wreg, status,2, status,0
 41133 ;; Tracked objects:
 41134 ;;		On entry : 0/0
 41135 ;;		On exit  : 0/0
 41136 ;;		Unchanged: 0/0
 41137 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41138 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41139 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41141 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41142 ;;Total ram usage:        8 bytes
 41143 ;; Hardware stack levels used: 1
 41144 ;; Hardware stack levels required when called: 1
 41145 ;; This function calls:
 41146 ;;		Nothing
 41147 ;; This function is called by:
 41148 ;;		_APP_nvDefault
 41149 ;;		_leds_poll
 41150 ;; This function uses a non-reentrant model
 41151 ;;
 41152                           
 41153                           	psect	text120
 41154   005FE4                     __ptext120:
 41155                           	callstack 0
 41156   005FE4                     ___awdiv:
 41157                           	callstack 123
 41158   005FE4  6A06               	clrf	___awdiv@sign^(0+1280),c
 41159   005FE6  BE04               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
 41160   005FE8  EFFA  F02F         	goto	u5260
 41161   005FEC  EFF8  F02F         	goto	u5261
 41162   005FF0                     u5261:
 41163   005FF0  EF00  F030         	goto	l7859
 41164   005FF4                     u5260:
 41165   005FF4  6C03               	negf	___awdiv@divisor^(0+1280),c
 41166   005FF6  1E04               	comf	(___awdiv@divisor+1)^(0+1280),f,c
 41167   005FF8  B0D8               	btfsc	status,0,c
 41168   005FFA  2A04               	incf	(___awdiv@divisor+1)^(0+1280),f,c
 41169   005FFC  0E01               	movlw	1
 41170   005FFE  6E06               	movwf	___awdiv@sign^(0+1280),c
 41171   006000                     l7859:
 41172   006000  BE02               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
 41173   006002  EF07  F030         	goto	u5270
 41174   006006  EF05  F030         	goto	u5271
 41175   00600A                     u5271:
 41176   00600A  EF0D  F030         	goto	l7865
 41177   00600E                     u5270:
 41178   00600E  6C01               	negf	___awdiv@dividend^(0+1280),c
 41179   006010  1E02               	comf	(___awdiv@dividend+1)^(0+1280),f,c
 41180   006012  B0D8               	btfsc	status,0,c
 41181   006014  2A02               	incf	(___awdiv@dividend+1)^(0+1280),f,c
 41182   006016  0E01               	movlw	1
 41183   006018  1A06               	xorwf	___awdiv@sign^(0+1280),f,c
 41184   00601A                     l7865:
 41185   00601A  0E00               	movlw	0
 41186   00601C  6E08               	movwf	(___awdiv@quotient+1)^(0+1280),c
 41187   00601E  0E00               	movlw	0
 41188   006020  6E07               	movwf	___awdiv@quotient^(0+1280),c
 41189   006022  5003               	movf	___awdiv@divisor^(0+1280),w,c
 41190   006024  1004               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
 41191   006026  B4D8               	btfsc	status,2,c
 41192   006028  EF18  F030         	goto	u5281
 41193   00602C  EF1A  F030         	goto	u5280
 41194   006030                     u5281:
 41195   006030  EF42  F030         	goto	l7887
 41196   006034                     u5280:
 41197   006034  0E01               	movlw	1
 41198   006036  6E05               	movwf	___awdiv@counter^(0+1280),c
 41199   006038  EF22  F030         	goto	l7873
 41200   00603C                     l7871:
 41201   00603C  90D8               	bcf	status,0,c
 41202   00603E  3603               	rlcf	___awdiv@divisor^(0+1280),f,c
 41203   006040  3604               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
 41204   006042  2A05               	incf	___awdiv@counter^(0+1280),f,c
 41205   006044                     l7873:
 41206   006044  AE04               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
 41207   006046  EF27  F030         	goto	u5291
 41208   00604A  EF29  F030         	goto	u5290
 41209   00604E                     u5291:
 41210   00604E  EF1E  F030         	goto	l7871
 41211   006052                     u5290:
 41212   006052                     l7875:
 41213   006052  90D8               	bcf	status,0,c
 41214   006054  3607               	rlcf	___awdiv@quotient^(0+1280),f,c
 41215   006056  3608               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
 41216   006058  5003               	movf	___awdiv@divisor^(0+1280),w,c
 41217   00605A  5C01               	subwf	___awdiv@dividend^(0+1280),w,c
 41218   00605C  5004               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 41219   00605E  5802               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
 41220   006060  A0D8               	btfss	status,0,c
 41221   006062  EF35  F030         	goto	u5301
 41222   006066  EF37  F030         	goto	u5300
 41223   00606A                     u5301:
 41224   00606A  EF3C  F030         	goto	l7883
 41225   00606E                     u5300:
 41226   00606E  5003               	movf	___awdiv@divisor^(0+1280),w,c
 41227   006070  5E01               	subwf	___awdiv@dividend^(0+1280),f,c
 41228   006072  5004               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 41229   006074  5A02               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
 41230   006076  8007               	bsf	___awdiv@quotient^(0+1280),0,c
 41231   006078                     l7883:
 41232   006078  90D8               	bcf	status,0,c
 41233   00607A  3204               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
 41234   00607C  3203               	rrcf	___awdiv@divisor^(0+1280),f,c
 41235   00607E  2E05               	decfsz	___awdiv@counter^(0+1280),f,c
 41236   006080  EF29  F030         	goto	l7875
 41237   006084                     l7887:
 41238   006084  5006               	movf	___awdiv@sign^(0+1280),w,c
 41239   006086  B4D8               	btfsc	status,2,c
 41240   006088  EF48  F030         	goto	u5311
 41241   00608C  EF4A  F030         	goto	u5310
 41242   006090                     u5311:
 41243   006090  EF4E  F030         	goto	l7891
 41244   006094                     u5310:
 41245   006094  6C07               	negf	___awdiv@quotient^(0+1280),c
 41246   006096  1E08               	comf	(___awdiv@quotient+1)^(0+1280),f,c
 41247   006098  B0D8               	btfsc	status,0,c
 41248   00609A  2A08               	incf	(___awdiv@quotient+1)^(0+1280),f,c
 41249   00609C                     l7891:
 41250   00609C  C507  F501         	movff	___awdiv@quotient,?___awdiv
 41251   0060A0  C508  F502         	movff	___awdiv@quotient+1,?___awdiv+1
 41252   0060A4  0012               	return		;funcret
 41253   0060A6                     __end_of___awdiv:
 41254                           	callstack 0
 41255                           
 41256 ;; *************** function _APP_factoryReset *****************
 41257 ;; Defined at:
 41258 ;;		line 125 in file "../main.c"
 41259 ;; Parameters:    Size  Location     Type
 41260 ;;		None
 41261 ;; Auto vars:     Size  Location     Type
 41262 ;;  io              1    0        unsigned char 
 41263 ;; Return value:  Size  Location     Type
 41264 ;;                  1    wreg      void 
 41265 ;; Registers used:
 41266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41267 ;; Tracked objects:
 41268 ;;		On entry : 0/0
 41269 ;;		On exit  : 0/0
 41270 ;;		Unchanged: 0/0
 41271 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41276 ;;Total ram usage:        0 bytes
 41277 ;; Hardware stack levels used: 1
 41278 ;; Hardware stack levels required when called: 9
 41279 ;; This function calls:
 41280 ;;		_factoryResetGlobalEvents
 41281 ;; This function is called by:
 41282 ;;		_factoryReset
 41283 ;; This function uses a non-reentrant model
 41284 ;;
 41285                           
 41286                           	psect	text121
 41287   008242                     __ptext121:
 41288                           	callstack 0
 41289   008242                     _APP_factoryReset:
 41290                           	callstack 116
 41291   008242                     
 41292                           ;../main.c: 126:     uint8_t io;;../main.c: 128:     factoryResetGlobalEvents();
 41293   008242  EC24  F041         	call	_factoryResetGlobalEvents	;wreg free
 41294   008246  0012               	return		;funcret
 41295   008248                     __end_of_APP_factoryReset:
 41296                           	callstack 0
 41297                           
 41298 ;; *************** function _factoryResetGlobalEvents *****************
 41299 ;; Defined at:
 41300 ;;		line 53 in file "../canargb_events.c"
 41301 ;; Parameters:    Size  Location     Type
 41302 ;;		None
 41303 ;; Auto vars:     Size  Location     Type
 41304 ;;		None
 41305 ;; Return value:  Size  Location     Type
 41306 ;;                  1    wreg      void 
 41307 ;; Registers used:
 41308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41309 ;; Tracked objects:
 41310 ;;		On entry : 0/0
 41311 ;;		On exit  : 0/0
 41312 ;;		Unchanged: 0/0
 41313 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41318 ;;Total ram usage:        0 bytes
 41319 ;; Hardware stack levels used: 1
 41320 ;; Hardware stack levels required when called: 8
 41321 ;; This function calls:
 41322 ;;		_clearAllEvents
 41323 ;; This function is called by:
 41324 ;;		_APP_factoryReset
 41325 ;; This function uses a non-reentrant model
 41326 ;;
 41327                           
 41328                           	psect	text122
 41329   008248                     __ptext122:
 41330                           	callstack 0
 41331   008248                     _factoryResetGlobalEvents:
 41332                           	callstack 116
 41333   008248                     
 41334                           ;../canargb_events.c: 55:     clearAllEvents();
 41335   008248  EC81  F040         	call	_clearAllEvents	;wreg free
 41336   00824C  0012               	return		;funcret
 41337   00824E                     __end_of_factoryResetGlobalEvents:
 41338                           	callstack 0
 41339                           
 41340 ;; *************** function _clearAllEvents *****************
 41341 ;; Defined at:
 41342 ;;		line 397 in file "../../VLCBlib_PIC/event_teach_simple.c"
 41343 ;; Parameters:    Size  Location     Type
 41344 ;;		None
 41345 ;; Auto vars:     Size  Location     Type
 41346 ;;  tableIndex      1   53[COMRAM] unsigned char 
 41347 ;; Return value:  Size  Location     Type
 41348 ;;                  1    wreg      void 
 41349 ;; Registers used:
 41350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41351 ;; Tracked objects:
 41352 ;;		On entry : 0/0
 41353 ;;		On exit  : 0/0
 41354 ;;		Unchanged: 0/0
 41355 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41360 ;;Total ram usage:        1 bytes
 41361 ;; Hardware stack levels used: 1
 41362 ;; Hardware stack levels required when called: 7
 41363 ;; This function calls:
 41364 ;;		_rebuildHashtable
 41365 ;;		_removeTableEntry
 41366 ;; This function is called by:
 41367 ;;		_factoryResetGlobalEvents
 41368 ;;		_teachFactoryReset
 41369 ;;		_doNnclr
 41370 ;; This function uses a non-reentrant model
 41371 ;;
 41372                           
 41373                           	psect	text123
 41374   008102                     __ptext123:
 41375                           	callstack 0
 41376   008102                     _clearAllEvents:
 41377                           	callstack 116
 41378   008102                     
 41379                           ;../../VLCBlib_PIC/event_teach_simple.c: 398:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 400:     for (tableIndex=0; tableIndex<255; tableIndex++) {
 41380   008102  6A36               	clrf	clearAllEvents@tableIndex^(0+1280),c
 41381   008104                     l7741:
 41382                           
 41383                           ;../../VLCBlib_PIC/event_teach_simple.c: 401:         removeTableEntry(tableIndex);
 41384   008104  5036               	movf	clearAllEvents@tableIndex^(0+1280),w,c
 41385   008106  EC1A  F022         	call	_removeTableEntry
 41386   00810A                     
 41387                           ;../../VLCBlib_PIC/event_teach_simple.c: 402:     }
 41388   00810A  2A36               	incf	clearAllEvents@tableIndex^(0+1280),f,c
 41389   00810C  2836               	incf	clearAllEvents@tableIndex^(0+1280),w,c
 41390   00810E  A4D8               	btfss	status,2,c
 41391   008110  EF8C  F040         	goto	u5111
 41392   008114  EF8E  F040         	goto	u5110
 41393   008118                     u5111:
 41394   008118  EF82  F040         	goto	l7741
 41395   00811C                     u5110:
 41396   00811C                     
 41397                           ;../../VLCBlib_PIC/event_teach_simple.c: 404:     rebuildHashtable();
 41398   00811C  EC16  F02B         	call	_rebuildHashtable	;wreg free
 41399   008120  0012               	return		;funcret
 41400   008122                     __end_of_clearAllEvents:
 41401                           	callstack 0
 41402                           
 41403 ;; *************** function _removeTableEntry *****************
 41404 ;; Defined at:
 41405 ;;		line 718 in file "../../VLCBlib_PIC/event_teach_simple.c"
 41406 ;; Parameters:    Size  Location     Type
 41407 ;;  tableIndex      1    wreg     unsigned char 
 41408 ;; Auto vars:     Size  Location     Type
 41409 ;;  tableIndex      1   52[COMRAM] unsigned char 
 41410 ;;  i               1   51[COMRAM] unsigned char 
 41411 ;; Return value:  Size  Location     Type
 41412 ;;                  1    wreg      unsigned char 
 41413 ;; Registers used:
 41414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41415 ;; Tracked objects:
 41416 ;;		On entry : 0/0
 41417 ;;		On exit  : 0/0
 41418 ;;		Unchanged: 0/0
 41419 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41422 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41423 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41424 ;;Total ram usage:       14 bytes
 41425 ;; Hardware stack levels used: 1
 41426 ;; Hardware stack levels required when called: 6
 41427 ;; This function calls:
 41428 ;;		_flushFlashBlock
 41429 ;;		_rebuildHashtable
 41430 ;;		_writeNVM
 41431 ;; This function is called by:
 41432 ;;		_clearAllEvents
 41433 ;;		_removeEvent
 41434 ;; This function uses a non-reentrant model
 41435 ;;
 41436                           
 41437                           	psect	text124
 41438   004434                     __ptext124:
 41439                           	callstack 0
 41440   004434                     _removeTableEntry:
 41441                           	callstack 116
 41442                           
 41443                           ;incstack = 0
 41444                           ;removeTableEntry@tableIndex stored from wreg
 41445   004434  6E35               	movwf	removeTableEntry@tableIndex^(0+1280),c
 41446   004436                     
 41447                           ;../../VLCBlib_PIC/event_teach_simple.c: 719:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 724:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (sizeof(Event) + 1 + 252)*table
      +                          Index + 0, 0x00);
 41448   004436  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41449   004438  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41450   00443A  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41451   00443C  0E01               	movlw	1
 41452   00443E  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41453   004440  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41454   004444  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41455   004448  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41456   00444A  50F3               	movf	prodl,w,c
 41457   00444C  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41458   00444E  0E01               	movlw	1
 41459   004450  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41460   004452  50F3               	movf	prodl,w,c
 41461   004454  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41462   004456  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41463   00445A  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41464   00445E  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41465   004460  0E00               	movlw	0
 41466   004462  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41467   004464  6E0E               	movwf	writeNVM@index^(0+1280),c
 41468   004466  0E00               	movlw	0
 41469   004468  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41470   00446A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41471   00446C  0E01               	movlw	1
 41472   00446E  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41473   004470  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41474   004472  0E00               	movlw	0
 41475   004474  6E11               	movwf	writeNVM@value^(0+1280),c
 41476   004476  0E01               	movlw	1
 41477   004478  EC91  F03B         	call	_writeNVM
 41478                           
 41479                           ;../../VLCBlib_PIC/event_teach_simple.c: 725:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 1, 0x00);
 41480   00447C  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41481   00447E  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41482   004480  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41483   004482  0E01               	movlw	1
 41484   004484  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41485   004486  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41486   00448A  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41487   00448E  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41488   004490  50F3               	movf	prodl,w,c
 41489   004492  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41490   004494  0E01               	movlw	1
 41491   004496  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41492   004498  50F3               	movf	prodl,w,c
 41493   00449A  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41494   00449C  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41495   0044A0  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41496   0044A4  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41497   0044A6  0E01               	movlw	1
 41498   0044A8  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41499   0044AA  6E0E               	movwf	writeNVM@index^(0+1280),c
 41500   0044AC  0E00               	movlw	0
 41501   0044AE  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41502   0044B0  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41503   0044B2  0E01               	movlw	1
 41504   0044B4  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41505   0044B6  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41506   0044B8  0E00               	movlw	0
 41507   0044BA  6E11               	movwf	writeNVM@value^(0+1280),c
 41508   0044BC  0E01               	movlw	1
 41509   0044BE  EC91  F03B         	call	_writeNVM
 41510                           
 41511                           ;../../VLCBlib_PIC/event_teach_simple.c: 726:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 2, 0x00);
 41512   0044C2  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41513   0044C4  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41514   0044C6  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41515   0044C8  0E01               	movlw	1
 41516   0044CA  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41517   0044CC  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41518   0044D0  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41519   0044D4  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41520   0044D6  50F3               	movf	prodl,w,c
 41521   0044D8  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41522   0044DA  0E01               	movlw	1
 41523   0044DC  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41524   0044DE  50F3               	movf	prodl,w,c
 41525   0044E0  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41526   0044E2  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41527   0044E6  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41528   0044EA  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41529   0044EC  0E02               	movlw	2
 41530   0044EE  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41531   0044F0  6E0E               	movwf	writeNVM@index^(0+1280),c
 41532   0044F2  0E00               	movlw	0
 41533   0044F4  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41534   0044F6  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41535   0044F8  0E01               	movlw	1
 41536   0044FA  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41537   0044FC  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41538   0044FE  0E00               	movlw	0
 41539   004500  6E11               	movwf	writeNVM@value^(0+1280),c
 41540   004502  0E01               	movlw	1
 41541   004504  EC91  F03B         	call	_writeNVM
 41542                           
 41543                           ;../../VLCBlib_PIC/event_teach_simple.c: 727:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 3, 0x00);
 41544   004508  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41545   00450A  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41546   00450C  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41547   00450E  0E01               	movlw	1
 41548   004510  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41549   004512  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41550   004516  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41551   00451A  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41552   00451C  50F3               	movf	prodl,w,c
 41553   00451E  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41554   004520  0E01               	movlw	1
 41555   004522  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41556   004524  50F3               	movf	prodl,w,c
 41557   004526  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41558   004528  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41559   00452C  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41560   004530  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41561   004532  0E03               	movlw	3
 41562   004534  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41563   004536  6E0E               	movwf	writeNVM@index^(0+1280),c
 41564   004538  0E00               	movlw	0
 41565   00453A  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41566   00453C  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41567   00453E  0E01               	movlw	1
 41568   004540  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41569   004542  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41570   004544  0E00               	movlw	0
 41571   004546  6E11               	movwf	writeNVM@value^(0+1280),c
 41572   004548  0E01               	movlw	1
 41573   00454A  EC91  F03B         	call	_writeNVM
 41574                           
 41575                           ;../../VLCBlib_PIC/event_teach_simple.c: 728:     writeNVM(FLASH_NVM_TYPE, 0x10000 + (si
      +                          zeof(Event) + 1 + 252)*tableIndex + 4, 0x00);
 41576   00454E  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41577   004550  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41578   004552  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41579   004554  0E01               	movlw	1
 41580   004556  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41581   004558  C4F3 F52A          	movff	prodl,??_removeTableEntry+2
 41582   00455C  C4F4 F52B          	movff	prodh,??_removeTableEntry+3
 41583   004560  0229               	mulwf	(??_removeTableEntry+1)^(0+1280),c
 41584   004562  50F3               	movf	prodl,w,c
 41585   004564  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41586   004566  0E01               	movlw	1
 41587   004568  0228               	mulwf	??_removeTableEntry^(0+1280),c
 41588   00456A  50F3               	movf	prodl,w,c
 41589   00456C  262B               	addwf	(??_removeTableEntry+3)^(0+1280),f,c
 41590   00456E  C52A  F52C         	movff	??_removeTableEntry+2,??_removeTableEntry+4
 41591   004572  C52B  F52D         	movff	??_removeTableEntry+3,??_removeTableEntry+5
 41592   004576  6A2E               	clrf	(??_removeTableEntry+6)^(0+1280),c
 41593   004578  0E04               	movlw	4
 41594   00457A  242C               	addwf	(??_removeTableEntry+4)^(0+1280),w,c
 41595   00457C  6E0E               	movwf	writeNVM@index^(0+1280),c
 41596   00457E  0E00               	movlw	0
 41597   004580  202D               	addwfc	(??_removeTableEntry+5)^(0+1280),w,c
 41598   004582  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41599   004584  0E01               	movlw	1
 41600   004586  202E               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 41601   004588  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41602   00458A  0E00               	movlw	0
 41603   00458C  6E11               	movwf	writeNVM@value^(0+1280),c
 41604   00458E  0E01               	movlw	1
 41605   004590  EC91  F03B         	call	_writeNVM
 41606   004594                     
 41607                           ;../../VLCBlib_PIC/event_teach_simple.c: 730:     for (i=0; i<252; i++) {
 41608   004594  6A34               	clrf	removeTableEntry@i^(0+1280),c
 41609   004596                     l7679:
 41610                           
 41611                           ;../../VLCBlib_PIC/event_teach_simple.c: 731:         writeNVM(FLASH_NVM_TYPE, 0x10000 +
      +                           (sizeof(Event) + 1 + 252)*tableIndex + (5 + i), 0x00);
 41612   004596  5034               	movf	removeTableEntry@i^(0+1280),w,c
 41613   004598  6E28               	movwf	??_removeTableEntry^(0+1280),c
 41614   00459A  6A29               	clrf	(??_removeTableEntry+1)^(0+1280),c
 41615   00459C  0E05               	movlw	5
 41616   00459E  2628               	addwf	??_removeTableEntry^(0+1280),f,c
 41617   0045A0  0E00               	movlw	0
 41618   0045A2  2229               	addwfc	(??_removeTableEntry+1)^(0+1280),f,c
 41619   0045A4  5035               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 41620   0045A6  6E2A               	movwf	(??_removeTableEntry+2)^(0+1280),c
 41621   0045A8  6A2B               	clrf	(??_removeTableEntry+3)^(0+1280),c
 41622   0045AA  0E01               	movlw	1
 41623   0045AC  022A               	mulwf	(??_removeTableEntry+2)^(0+1280),c
 41624   0045AE  C4F3 F52C          	movff	prodl,??_removeTableEntry+4
 41625   0045B2  C4F4 F52D          	movff	prodh,??_removeTableEntry+5
 41626   0045B6  022B               	mulwf	(??_removeTableEntry+3)^(0+1280),c
 41627   0045B8  50F3               	movf	prodl,w,c
 41628   0045BA  262D               	addwf	(??_removeTableEntry+5)^(0+1280),f,c
 41629   0045BC  0E01               	movlw	1
 41630   0045BE  022A               	mulwf	(??_removeTableEntry+2)^(0+1280),c
 41631   0045C0  50F3               	movf	prodl,w,c
 41632   0045C2  262D               	addwf	(??_removeTableEntry+5)^(0+1280),f,c
 41633   0045C4  C52C  F52E         	movff	??_removeTableEntry+4,??_removeTableEntry+6
 41634   0045C8  C52D  F52F         	movff	??_removeTableEntry+5,??_removeTableEntry+7
 41635   0045CC  6A30               	clrf	(??_removeTableEntry+8)^(0+1280),c
 41636   0045CE  5028               	movf	??_removeTableEntry^(0+1280),w,c
 41637   0045D0  242E               	addwf	(??_removeTableEntry+6)^(0+1280),w,c
 41638   0045D2  6E31               	movwf	(??_removeTableEntry+9)^(0+1280),c
 41639   0045D4  5029               	movf	(??_removeTableEntry+1)^(0+1280),w,c
 41640   0045D6  202F               	addwfc	(??_removeTableEntry+7)^(0+1280),w,c
 41641   0045D8  6E32               	movwf	(??_removeTableEntry+10)^(0+1280),c
 41642   0045DA  0E00               	movlw	0
 41643   0045DC  BE29               	btfsc	(??_removeTableEntry+1)^(0+1280),7,c
 41644   0045DE  0EFF               	movlw	255
 41645   0045E0  2030               	addwfc	(??_removeTableEntry+8)^(0+1280),w,c
 41646   0045E2  6E33               	movwf	(??_removeTableEntry+11)^(0+1280),c
 41647   0045E4  0E00               	movlw	0
 41648   0045E6  2431               	addwf	(??_removeTableEntry+9)^(0+1280),w,c
 41649   0045E8  6E0E               	movwf	writeNVM@index^(0+1280),c
 41650   0045EA  0E00               	movlw	0
 41651   0045EC  2032               	addwfc	(??_removeTableEntry+10)^(0+1280),w,c
 41652   0045EE  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 41653   0045F0  0E01               	movlw	1
 41654   0045F2  2033               	addwfc	(??_removeTableEntry+11)^(0+1280),w,c
 41655   0045F4  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 41656   0045F6  0E00               	movlw	0
 41657   0045F8  6E11               	movwf	writeNVM@value^(0+1280),c
 41658   0045FA  0E01               	movlw	1
 41659   0045FC  EC91  F03B         	call	_writeNVM
 41660   004600                     
 41661                           ;../../VLCBlib_PIC/event_teach_simple.c: 732:     }
 41662   004600  2A34               	incf	removeTableEntry@i^(0+1280),f,c
 41663   004602  0EFB               	movlw	251
 41664   004604  6434               	cpfsgt	removeTableEntry@i^(0+1280),c
 41665   004606  EF07  F023         	goto	u5051
 41666   00460A  EF09  F023         	goto	u5050
 41667   00460E                     u5051:
 41668   00460E  EFCB  F022         	goto	l7679
 41669   004612                     u5050:
 41670   004612                     
 41671                           ;../../VLCBlib_PIC/event_teach_simple.c: 733:     flushFlashBlock();
 41672   004612  EC62  F034         	call	_flushFlashBlock	;wreg free
 41673   004616                     
 41674                           ;../../VLCBlib_PIC/event_teach_simple.c: 735:     rebuildHashtable();
 41675   004616  EC16  F02B         	call	_rebuildHashtable	;wreg free
 41676   00461A                     
 41677                           ;../../VLCBlib_PIC/event_teach_simple.c: 737:     return 0;
 41678   00461A  0E00               	movlw	0
 41679   00461C  0012               	return		;funcret
 41680   00461E                     __end_of_removeTableEntry:
 41681                           	callstack 0
 41682                           
 41683 ;; *************** function _writeNVM *****************
 41684 ;; Defined at:
 41685 ;;		line 553 in file "../../VLCBlib_PIC/nvm.c"
 41686 ;; Parameters:    Size  Location     Type
 41687 ;;  type            1    wreg     enum E23276
 41688 ;;  index           3   13[COMRAM] unsigned um
 41689 ;;  value           1   16[COMRAM] unsigned char 
 41690 ;; Auto vars:     Size  Location     Type
 41691 ;;  type            1   19[COMRAM] enum E23276
 41692 ;; Return value:  Size  Location     Type
 41693 ;;                  1    wreg      unsigned char 
 41694 ;; Registers used:
 41695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41696 ;; Tracked objects:
 41697 ;;		On entry : 0/0
 41698 ;;		On exit  : 0/0
 41699 ;;		Unchanged: 0/0
 41700 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41701 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41703 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41704 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41705 ;;Total ram usage:        7 bytes
 41706 ;; Hardware stack levels used: 1
 41707 ;; Hardware stack levels required when called: 5
 41708 ;; This function calls:
 41709 ;;		_EEPROM_Write
 41710 ;;		_FLASH_Write
 41711 ;; This function is called by:
 41712 ;;		_bootProcessMessage
 41713 ;;		_canFactoryReset
 41714 ;;		_setNewCanId
 41715 ;;		_removeTableEntry
 41716 ;;		_addEvent
 41717 ;;		_writeEv
 41718 ;;		_mnsFactoryReset
 41719 ;;		_mnsProcessMessage
 41720 ;;		_mnsPoll
 41721 ;;		_nvFactoryReset
 41722 ;;		_setNV
 41723 ;;		_factoryReset
 41724 ;;		_saveNV
 41725 ;; This function uses a non-reentrant model
 41726 ;;
 41727                           
 41728                           	psect	text125
 41729   007722                     __ptext125:
 41730                           	callstack 0
 41731   007722                     _writeNVM:
 41732                           	callstack 116
 41733                           
 41734                           ;incstack = 0
 41735                           ;writeNVM@type stored from wreg
 41736   007722  6E14               	movwf	writeNVM@type^(0+1280),c
 41737   007724                     
 41738                           ;../../VLCBlib_PIC/nvm.c: 554:     switch(type) {
 41739   007724  EFAC  F03B         	goto	l7487
 41740   007728                     l7477:
 41741                           
 41742                           ;../../VLCBlib_PIC/nvm.c: 556:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 41743   007728  C50E  F509         	movff	writeNVM@index,EEPROM_Write@index
 41744   00772C  C50F  F50A         	movff	writeNVM@index+1,EEPROM_Write@index+1
 41745   007730  C510  F50B         	movff	writeNVM@index+2,EEPROM_Write@index+2
 41746   007734  C511  F50C         	movff	writeNVM@value,EEPROM_Write@value
 41747   007738  ECC2  F03B         	call	_EEPROM_Write	;wreg free
 41748   00773C  EFC1  F03B         	goto	l1714
 41749   007740                     l7481:
 41750                           
 41751                           ;../../VLCBlib_PIC/nvm.c: 558:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 41752   007740  C50E  F506         	movff	writeNVM@index,FLASH_Write@index
 41753   007744  C50F  F507         	movff	writeNVM@index+1,FLASH_Write@index+1
 41754   007748  C510  F508         	movff	writeNVM@index+2,FLASH_Write@index+2
 41755   00774C  C511  F509         	movff	writeNVM@value,FLASH_Write@value
 41756   007750  EC0F  F02A         	call	_FLASH_Write	;wreg free
 41757   007754  EFC1  F03B         	goto	l1714
 41758   007758                     l7487:
 41759   007758  5014               	movf	writeNVM@type^(0+1280),w,c
 41760   00775A  6E12               	movwf	??_writeNVM^(0+1280),c
 41761   00775C  6A13               	clrf	(??_writeNVM+1)^(0+1280),c
 41762                           
 41763                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41764                           ; Switch size 1, requested type "simple"
 41765                           ; Number of cases is 1, Range of values is 0 to 0
 41766                           ; switch strategies available:
 41767                           ; Name         Instructions Cycles
 41768                           ; simple_byte            4     3 (average)
 41769                           ;	Chosen strategy is simple_byte
 41770   00775E  5013               	movf	(??_writeNVM+1)^(0+1280),w,c
 41771   007760  0A00               	xorlw	0	; case 0
 41772   007762  B4D8               	btfsc	status,2,c
 41773   007764  EFB6  F03B         	goto	l11619
 41774   007768  EFC1  F03B         	goto	l1714
 41775   00776C                     l11619:
 41776                           
 41777                           ; Switch size 1, requested type "simple"
 41778                           ; Number of cases is 2, Range of values is 0 to 1
 41779                           ; switch strategies available:
 41780                           ; Name         Instructions Cycles
 41781                           ; simple_byte            7     4 (average)
 41782                           ;	Chosen strategy is simple_byte
 41783   00776C  5012               	movf	??_writeNVM^(0+1280),w,c
 41784   00776E  0A00               	xorlw	0	; case 0
 41785   007770  B4D8               	btfsc	status,2,c
 41786   007772  EF94  F03B         	goto	l7477
 41787   007776  0A01               	xorlw	1	; case 1
 41788   007778  B4D8               	btfsc	status,2,c
 41789   00777A  EFA0  F03B         	goto	l7481
 41790   00777E  EFC1  F03B         	goto	l1714
 41791   007782                     l1714:
 41792   007782  0012               	return		;funcret
 41793   007784                     __end_of_writeNVM:
 41794                           	callstack 0
 41795                           
 41796 ;; *************** function _FLASH_Write *****************
 41797 ;; Defined at:
 41798 ;;		line 507 in file "../../VLCBlib_PIC/nvm.c"
 41799 ;; Parameters:    Size  Location     Type
 41800 ;;  index           3    5[COMRAM] unsigned um
 41801 ;;  value           1    8[COMRAM] unsigned char 
 41802 ;; Auto vars:     Size  Location     Type
 41803 ;;  oldValue        1    0        unsigned char 
 41804 ;; Return value:  Size  Location     Type
 41805 ;;                  1    wreg      unsigned char 
 41806 ;; Registers used:
 41807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41808 ;; Tracked objects:
 41809 ;;		On entry : 0/0
 41810 ;;		On exit  : 0/0
 41811 ;;		Unchanged: 0/0
 41812 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41815 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41816 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41817 ;;Total ram usage:        8 bytes
 41818 ;; Hardware stack levels used: 1
 41819 ;; Hardware stack levels required when called: 4
 41820 ;; This function calls:
 41821 ;;		_eraseFlashBlock
 41822 ;;		_flushFlashBlock
 41823 ;;		_loadFlashBlock
 41824 ;; This function is called by:
 41825 ;;		_writeNVM
 41826 ;; This function uses a non-reentrant model
 41827 ;;
 41828                           
 41829                           	psect	text126
 41830   00541E                     __ptext126:
 41831                           	callstack 0
 41832   00541E                     _FLASH_Write:
 41833                           	callstack 116
 41834   00541E                     
 41835                           ;../../VLCBlib_PIC/nvm.c: 508:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 523:     i
      +                          f ((index&(~((flash_address_t)(256U)-1))) != flashBlock) {
 41836   00541E  0E00               	movlw	0
 41837   005420  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 41838   005422  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 41839   005424  0EFF               	movlw	255
 41840   005426  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 41841   005428  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 41842   00542A  0EFF               	movlw	255
 41843   00542C  1408               	andwf	(FLASH_Write@index+2)^(0+1280),w,c
 41844   00542E  6E0C               	movwf	(??_FLASH_Write+2)^(0+1280),c
 41845   005430  0105               	movlb	5	; () banked
 41846   005432  5184               	movf	_flashBlock& (0+255),w,b
 41847   005434  180A               	xorwf	??_FLASH_Write^(0+1280),w,c
 41848   005436  E10C               	bnz	u4790
 41849   005438  5185               	movf	(_flashBlock+1)& (0+255),w,b
 41850   00543A  180B               	xorwf	(??_FLASH_Write+1)^(0+1280),w,c
 41851   00543C  E109               	bnz	u4790
 41852   00543E  5186               	movf	(_flashBlock+2)& (0+255),w,b
 41853   005440  180C               	xorwf	(??_FLASH_Write+2)^(0+1280),w,c
 41854   005442  B4D8               	btfsc	status,2,c
 41855   005444  EF26  F02A         	goto	u4791
 41856   005448  EF28  F02A         	goto	u4790
 41857   00544C                     u4791:
 41858   00544C  EF4B  F02A         	goto	l7463
 41859   005450                     u4790:
 41860   005450                     
 41861                           ; BSR set to: 5
 41862                           ;../../VLCBlib_PIC/nvm.c: 524:         if (flashBlock != 0) {
 41863   005450  5184               	movf	_flashBlock& (0+255),w,b
 41864   005452  1185               	iorwf	(_flashBlock+1)& (0+255),w,b
 41865   005454  1186               	iorwf	(_flashBlock+2)& (0+255),w,b
 41866   005456  B4D8               	btfsc	status,2,c
 41867   005458  EF30  F02A         	goto	u4801
 41868   00545C  EF32  F02A         	goto	u4800
 41869   005460                     u4801:
 41870   005460  EF3F  F02A         	goto	l7459
 41871   005464                     u4800:
 41872   005464                     
 41873                           ; BSR set to: 5
 41874                           ;../../VLCBlib_PIC/nvm.c: 526:             if (flashFlags.eraseNeeded) {
 41875   005464  A39B               	btfss	_flashFlags& (0+255),1,b
 41876   005466  EF37  F02A         	goto	u4811
 41877   00546A  EF39  F02A         	goto	u4810
 41878   00546E                     u4811:
 41879   00546E  EF3D  F02A         	goto	l1707
 41880   005472                     u4810:
 41881   005472                     
 41882                           ; BSR set to: 5
 41883                           ;../../VLCBlib_PIC/nvm.c: 527:                 eraseFlashBlock();
 41884   005472  EC3F  F037         	call	_eraseFlashBlock	;wreg free
 41885   005476                     
 41886                           ;../../VLCBlib_PIC/nvm.c: 528:                 flashFlags.eraseNeeded = 0;
 41887   005476  0105               	movlb	5	; () banked
 41888   005478  939B               	bcf	_flashFlags& (0+255),1,b
 41889   00547A                     l1707:
 41890                           
 41891                           ; BSR set to: 5
 41892                           ;../../VLCBlib_PIC/nvm.c: 531:             flushFlashBlock();
 41893   00547A  EC62  F034         	call	_flushFlashBlock	;wreg free
 41894   00547E                     l7459:
 41895                           
 41896                           ;../../VLCBlib_PIC/nvm.c: 535:         flashBlock = (index&(~((flash_address_t)(256U)-1)
      +                          ));
 41897   00547E  0E00               	movlw	0
 41898   005480  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 41899   005482  0105               	movlb	5	; () banked
 41900   005484  6F84               	movwf	_flashBlock& (0+255),b
 41901   005486  0EFF               	movlw	255
 41902   005488  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 41903   00548A  6F85               	movwf	(_flashBlock+1)& (0+255),b
 41904   00548C  0EFF               	movlw	255
 41905   00548E  1408               	andwf	(FLASH_Write@index+2)^(0+1280),w,c
 41906   005490  6F86               	movwf	(_flashBlock+2)& (0+255),b
 41907   005492                     
 41908                           ; BSR set to: 5
 41909                           ;../../VLCBlib_PIC/nvm.c: 536:         loadFlashBlock();
 41910   005492  EC76  F03C         	call	_loadFlashBlock	;wreg free
 41911   005496                     l7463:
 41912                           
 41913                           ;../../VLCBlib_PIC/nvm.c: 538:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&((256U)-1))])?1:0;
 41914   005496  0EFF               	movlw	255
 41915   005498  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 41916   00549A  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 41917   00549C  0E00               	movlw	0
 41918   00549E  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 41919   0054A0  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 41920   0054A2  0E00               	movlw	0
 41921   0054A4  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 41922   0054A6  6ED9               	movwf	fsr2l,c
 41923   0054A8  0E37               	movlw	55
 41924   0054AA  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 41925   0054AC  6EDA               	movwf	fsr2h,c
 41926   0054AE  50DF               	movf	indf2,w,c
 41927   0054B0  0AFF               	xorlw	255
 41928   0054B2  1409               	andwf	FLASH_Write@value^(0+1280),w,c
 41929   0054B4  0900               	iorlw	0
 41930   0054B6  A4D8               	btfss	status,2,c
 41931   0054B8  EF60  F02A         	goto	u4821
 41932   0054BC  EF64  F02A         	goto	u4820
 41933   0054C0                     u4821:
 41934   0054C0  6A0C               	clrf	(??_FLASH_Write+2)^(0+1280),c
 41935   0054C2  2A0C               	incf	(??_FLASH_Write+2)^(0+1280),f,c
 41936   0054C4  EF65  F02A         	goto	u4838
 41937   0054C8                     u4820:
 41938   0054C8  6A0C               	clrf	(??_FLASH_Write+2)^(0+1280),c
 41939   0054CA                     u4838:
 41940   0054CA  0105               	movlb	5	; () banked
 41941   0054CC  319B               	rrcf	_flashFlags& (0+255),w,b
 41942   0054CE  0B01               	andlw	1
 41943   0054D0  6E0D               	movwf	(??_FLASH_Write+3)^(0+1280),c
 41944   0054D2  500C               	movf	(??_FLASH_Write+2)^(0+1280),w,c
 41945   0054D4  120D               	iorwf	(??_FLASH_Write+3)^(0+1280),f,c
 41946   0054D6  360D               	rlcf	(??_FLASH_Write+3)^(0+1280),f,c
 41947   0054D8  519B               	movf	_flashFlags& (0+255),w,b
 41948   0054DA  180D               	xorwf	(??_FLASH_Write+3)^(0+1280),w,c
 41949   0054DC  0BFD               	andlw	-3
 41950   0054DE  180D               	xorwf	(??_FLASH_Write+3)^(0+1280),w,c
 41951   0054E0  6F9B               	movwf	_flashFlags& (0+255),b
 41952   0054E2                     
 41953                           ; BSR set to: 5
 41954                           ;../../VLCBlib_PIC/nvm.c: 539:     if (flashBuffer[(index&((256U)-1))] != value) {
 41955   0054E2  0EFF               	movlw	255
 41956   0054E4  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 41957   0054E6  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 41958   0054E8  0E00               	movlw	0
 41959   0054EA  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 41960   0054EC  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 41961   0054EE  0E00               	movlw	0
 41962   0054F0  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 41963   0054F2  6ED9               	movwf	fsr2l,c
 41964   0054F4  0E37               	movlw	55
 41965   0054F6  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 41966   0054F8  6EDA               	movwf	fsr2h,c
 41967   0054FA  5009               	movf	FLASH_Write@value^(0+1280),w,c
 41968   0054FC  18DE               	xorwf	postinc2,w,c
 41969   0054FE  B4D8               	btfsc	status,2,c
 41970   005500  EF84  F02A         	goto	u4841
 41971   005504  EF86  F02A         	goto	u4840
 41972   005508                     u4841:
 41973   005508  EF95  F02A         	goto	l7471
 41974   00550C                     u4840:
 41975   00550C                     
 41976                           ; BSR set to: 5
 41977                           ;../../VLCBlib_PIC/nvm.c: 540:         flashFlags.writeNeeded = 1;
 41978   00550C  819B               	bsf	_flashFlags& (0+255),0,b
 41979   00550E                     
 41980                           ; BSR set to: 5
 41981                           ;../../VLCBlib_PIC/nvm.c: 541:         flashBuffer[(index&((256U)-1))] = value;
 41982   00550E  0EFF               	movlw	255
 41983   005510  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 41984   005512  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 41985   005514  0E00               	movlw	0
 41986   005516  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 41987   005518  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 41988   00551A  0E00               	movlw	0
 41989   00551C  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 41990   00551E  6ED9               	movwf	fsr2l,c
 41991   005520  0E37               	movlw	55
 41992   005522  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 41993   005524  6EDA               	movwf	fsr2h,c
 41994   005526  C509  F4DF         	movff	FLASH_Write@value,indf2
 41995   00552A                     l7471:
 41996                           
 41997                           ; BSR set to: 5
 41998                           ;../../VLCBlib_PIC/nvm.c: 543:     return GRSP_OK;
 41999   00552A  0E00               	movlw	0
 42000   00552C                     
 42001                           ; BSR set to: 5
 42002   00552C  0012               	return		;funcret
 42003   00552E                     __end_of_FLASH_Write:
 42004                           	callstack 0
 42005                           
 42006 ;; *************** function _loadFlashBlock *****************
 42007 ;; Defined at:
 42008 ;;		line 469 in file "../../VLCBlib_PIC/nvm.c"
 42009 ;; Parameters:    Size  Location     Type
 42010 ;;		None
 42011 ;; Auto vars:     Size  Location     Type
 42012 ;;		None
 42013 ;; Return value:  Size  Location     Type
 42014 ;;                  1    wreg      void 
 42015 ;; Registers used:
 42016 ;;		wreg, status,2
 42017 ;; Tracked objects:
 42018 ;;		On entry : 0/0
 42019 ;;		On exit  : 0/0
 42020 ;;		Unchanged: 0/0
 42021 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42024 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42025 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42026 ;;Total ram usage:        3 bytes
 42027 ;; Hardware stack levels used: 1
 42028 ;; Hardware stack levels required when called: 1
 42029 ;; This function calls:
 42030 ;;		Nothing
 42031 ;; This function is called by:
 42032 ;;		_FLASH_Write
 42033 ;; This function uses a non-reentrant model
 42034 ;;
 42035                           
 42036                           	psect	text127
 42037   0078EC                     __ptext127:
 42038                           	callstack 0
 42039   0078EC                     _loadFlashBlock:
 42040                           	callstack 118
 42041   0078EC                     l1696:
 42042                           
 42043                           ;../../VLCBlib_PIC/nvm.c: 484:     while (NVMCON0bits.GO)
 42044   0078EC  0100               	movlb	0	; () banked
 42045   0078EE  B140               	btfsc	64,0,b	;volatile
 42046   0078F0  EF7C  F03C         	goto	u4591
 42047   0078F4  EF7E  F03C         	goto	u4590
 42048   0078F8                     u4591:
 42049   0078F8  EF76  F03C         	goto	l1696
 42050   0078FC                     u4590:
 42051   0078FC                     
 42052                           ; BSR set to: 0
 42053                           ;../../VLCBlib_PIC/nvm.c: 487:     NVMADRU = (uint8_t) (flashBlock >> 16);
 42054   0078FC  C586  F045         	movff	_flashBlock+2,69	;volatile
 42055   007900                     
 42056                           ; BSR set to: 0
 42057                           ;../../VLCBlib_PIC/nvm.c: 488:     NVMADRH = (uint8_t) (flashBlock >> 8);
 42058   007900  C584  F501         	movff	_flashBlock,??_loadFlashBlock
 42059   007904  C585  F502         	movff	_flashBlock+1,??_loadFlashBlock+1
 42060   007908  C586  F503         	movff	_flashBlock+2,??_loadFlashBlock+2
 42061   00790C  C502  F501         	movff	??_loadFlashBlock+1,??_loadFlashBlock
 42062   007910  C503  F502         	movff	??_loadFlashBlock+2,??_loadFlashBlock+1
 42063   007914  6A03               	clrf	(??_loadFlashBlock+2)^(0+1280),c
 42064   007916  5001               	movf	??_loadFlashBlock^(0+1280),w,c
 42065   007918  6F44               	movwf	68,b	;volatile
 42066   00791A                     
 42067                           ; BSR set to: 0
 42068                           ;../../VLCBlib_PIC/nvm.c: 489:     NVMADRL = (uint8_t) flashBlock;
 42069   00791A  C584  F043         	movff	_flashBlock,67	;volatile
 42070                           
 42071                           ;../../VLCBlib_PIC/nvm.c: 490:     NVMCON1bits.NVMCMD = 0x02;
 42072   00791E  5141               	movf	65,w,b	;volsfr
 42073   007920  0BF8               	andlw	-8
 42074   007922  0902               	iorlw	2
 42075   007924  6F41               	movwf	65,b	;volsfr
 42076   007926                     
 42077                           ; BSR set to: 0
 42078                           ;../../VLCBlib_PIC/nvm.c: 491:     NVMCON0bits.GO = 1;
 42079   007926  8140               	bsf	64,0,b	;volatile
 42080   007928                     l1699:
 42081                           
 42082                           ; BSR set to: 0
 42083                           ;../../VLCBlib_PIC/nvm.c: 492:     while (NVMCON0bits.GO)
 42084   007928  B140               	btfsc	64,0,b	;volatile
 42085   00792A  EF99  F03C         	goto	u4601
 42086   00792E  EF9B  F03C         	goto	u4600
 42087   007932                     u4601:
 42088   007932  EF94  F03C         	goto	l1699
 42089   007936                     u4600:
 42090   007936                     
 42091                           ; BSR set to: 0
 42092                           ;../../VLCBlib_PIC/nvm.c: 494:     NVMCON1bits.NVMCMD = 0x07;
 42093   007936  0E07               	movlw	7
 42094   007938  1341               	iorwf	65,f,b	;volsfr
 42095   00793A                     
 42096                           ; BSR set to: 0
 42097                           ;../../VLCBlib_PIC/nvm.c: 496:     flashFlags.asByte = 0;
 42098   00793A  0105               	movlb	5	; () banked
 42099   00793C  6B9B               	clrf	_flashFlags& (0+255),b
 42100   00793E                     
 42101                           ; BSR set to: 5
 42102   00793E  0012               	return		;funcret
 42103   007940                     __end_of_loadFlashBlock:
 42104                           	callstack 0
 42105                           
 42106 ;; *************** function _flushFlashBlock *****************
 42107 ;; Defined at:
 42108 ;;		line 395 in file "../../VLCBlib_PIC/nvm.c"
 42109 ;; Parameters:    Size  Location     Type
 42110 ;;		None
 42111 ;; Auto vars:     Size  Location     Type
 42112 ;;  interruptEna    1    4[COMRAM] unsigned char 
 42113 ;; Return value:  Size  Location     Type
 42114 ;;                  1    wreg      void 
 42115 ;; Registers used:
 42116 ;;		wreg, status,2, cstack
 42117 ;; Tracked objects:
 42118 ;;		On entry : 0/0
 42119 ;;		On exit  : 0/0
 42120 ;;		Unchanged: 0/0
 42121 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42123 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42125 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42126 ;;Total ram usage:        1 bytes
 42127 ;; Hardware stack levels used: 1
 42128 ;; Hardware stack levels required when called: 3
 42129 ;; This function calls:
 42130 ;;		_APP_isSuitableTimeToWriteFlash
 42131 ;;		_eraseFlashBlock
 42132 ;; This function is called by:
 42133 ;;		_removeTableEntry
 42134 ;;		_addEvent
 42135 ;;		_FLASH_Write
 42136 ;;		_poll
 42137 ;; This function uses a non-reentrant model
 42138 ;;
 42139                           
 42140                           	psect	text128
 42141   0068C4                     __ptext128:
 42142                           	callstack 0
 42143   0068C4                     _flushFlashBlock:
 42144                           	callstack 116
 42145   0068C4                     
 42146                           ;../../VLCBlib_PIC/nvm.c: 396:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 40
      +                          4:     if (! flashFlags.writeNeeded) return;
 42147   0068C4  0105               	movlb	5	; () banked
 42148   0068C6  B19B               	btfsc	_flashFlags& (0+255),0,b
 42149   0068C8  EF68  F034         	goto	u4511
 42150   0068CC  EF6A  F034         	goto	u4510
 42151   0068D0                     u4511:
 42152   0068D0  EF6C  F034         	goto	l7251
 42153   0068D4                     u4510:
 42154   0068D4  EFB0  F034         	goto	l1682
 42155   0068D8                     l7251:
 42156                           
 42157                           ;../../VLCBlib_PIC/nvm.c: 407:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 42158   0068D8  ECBC  F040         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42159   0068DC  0900               	iorlw	0
 42160   0068DE  B4D8               	btfsc	status,2,c
 42161   0068E0  EF74  F034         	goto	u4521
 42162   0068E4  EF76  F034         	goto	u4520
 42163   0068E8                     u4521:
 42164   0068E8  EF6C  F034         	goto	l7251
 42165   0068EC                     u4520:
 42166   0068EC                     
 42167                           ;../../VLCBlib_PIC/nvm.c: 410:     if (flashFlags.eraseNeeded) {
 42168   0068EC  0105               	movlb	5	; () banked
 42169   0068EE  A39B               	btfss	_flashFlags& (0+255),1,b
 42170   0068F0  EF7C  F034         	goto	u4531
 42171   0068F4  EF7E  F034         	goto	u4530
 42172   0068F8                     u4531:
 42173   0068F8  EF80  F034         	goto	l7255
 42174   0068FC                     u4530:
 42175   0068FC                     
 42176                           ; BSR set to: 5
 42177                           ;../../VLCBlib_PIC/nvm.c: 411:         eraseFlashBlock();
 42178   0068FC  EC3F  F037         	call	_eraseFlashBlock	;wreg free
 42179   006900                     l7255:
 42180                           
 42181                           ;../../VLCBlib_PIC/nvm.c: 414:     interruptEnabled = (INTCON0bits.GIE);
 42182   006900  0E00               	movlw	0
 42183   006902  BED6               	btfsc	214,7,c	;volatile
 42184   006904  0E01               	movlw	1
 42185   006906  6E05               	movwf	flushFlashBlock@interruptEnabled^(0+1280),c
 42186   006908                     
 42187                           ;../../VLCBlib_PIC/nvm.c: 415:     {INTCON0bits.GIE = 0;};
 42188   006908  9ED6               	bcf	214,7,c	;volatile
 42189   00690A                     l1687:
 42190                           
 42191                           ;../../VLCBlib_PIC/nvm.c: 441:     while (NVMCON0bits.GO)
 42192   00690A  0100               	movlb	0	; () banked
 42193   00690C  B140               	btfsc	64,0,b	;volatile
 42194   00690E  EF8B  F034         	goto	u4541
 42195   006912  EF8D  F034         	goto	u4540
 42196   006916                     u4541:
 42197   006916  EF85  F034         	goto	l1687
 42198   00691A                     u4540:
 42199   00691A                     
 42200                           ; BSR set to: 0
 42201                           ;../../VLCBlib_PIC/nvm.c: 447:     NVMADR = flashBlock;
 42202   00691A  C584  F043         	movff	_flashBlock,67	;volatile
 42203   00691E  C585  F044         	movff	_flashBlock+1,68	;volatile
 42204   006922  C586  F045         	movff	_flashBlock+2,69	;volatile
 42205   006926                     
 42206                           ; BSR set to: 0
 42207                           ;../../VLCBlib_PIC/nvm.c: 449:     NVMCON1bits.NVMCMD = 0x05;
 42208   006926  5141               	movf	65,w,b	;volsfr
 42209   006928  0BF8               	andlw	-8
 42210   00692A  0905               	iorlw	5
 42211   00692C  6F41               	movwf	65,b	;volsfr
 42212                           
 42213                           ;../../VLCBlib_PIC/nvm.c: 451:     NVMLOCK = 0x55;
 42214   00692E  0E55               	movlw	85
 42215   006930  6F42               	movwf	66,b	;volatile
 42216                           
 42217                           ;../../VLCBlib_PIC/nvm.c: 452:     NVMLOCK = 0xAA;
 42218   006932  0EAA               	movlw	170
 42219   006934  6F42               	movwf	66,b	;volatile
 42220   006936                     
 42221                           ; BSR set to: 0
 42222                           ;../../VLCBlib_PIC/nvm.c: 453:     NVMCON0bits.GO = 1;
 42223   006936  8140               	bsf	64,0,b	;volatile
 42224   006938                     l1690:
 42225                           
 42226                           ; BSR set to: 0
 42227                           ;../../VLCBlib_PIC/nvm.c: 454:     while (NVMCON0bits.GO)
 42228   006938  B140               	btfsc	64,0,b	;volatile
 42229   00693A  EFA1  F034         	goto	u4551
 42230   00693E  EFA3  F034         	goto	u4550
 42231   006942                     u4551:
 42232   006942  EF9C  F034         	goto	l1690
 42233   006946                     u4550:
 42234   006946                     
 42235                           ; BSR set to: 0
 42236                           ;../../VLCBlib_PIC/nvm.c: 457:     NVMCON1bits.NVMCMD = 0x07;
 42237   006946  0E07               	movlw	7
 42238   006948  1341               	iorwf	65,f,b	;volsfr
 42239                           
 42240                           ;../../VLCBlib_PIC/nvm.c: 460:     if (interruptEnabled) {
 42241   00694A  5005               	movf	flushFlashBlock@interruptEnabled^(0+1280),w,c
 42242   00694C  B4D8               	btfsc	status,2,c
 42243   00694E  EFAB  F034         	goto	u4561
 42244   006952  EFAD  F034         	goto	u4560
 42245   006956                     u4561:
 42246   006956  EFAE  F034         	goto	l1693
 42247   00695A                     u4560:
 42248   00695A                     
 42249                           ; BSR set to: 0
 42250                           ;../../VLCBlib_PIC/nvm.c: 461:         {INTCON0bits.GIE = 1;};
 42251   00695A  8ED6               	bsf	214,7,c	;volatile
 42252   00695C                     l1693:
 42253                           
 42254                           ; BSR set to: 0
 42255                           ;../../VLCBlib_PIC/nvm.c: 463:     flashFlags.asByte = 0;
 42256   00695C  0105               	movlb	5	; () banked
 42257   00695E  6B9B               	clrf	_flashFlags& (0+255),b
 42258   006960                     l1682:
 42259                           
 42260                           ; BSR set to: 5
 42261   006960  0012               	return		;funcret
 42262   006962                     __end_of_flushFlashBlock:
 42263                           	callstack 0
 42264                           
 42265 ;; *************** function _eraseFlashBlock *****************
 42266 ;; Defined at:
 42267 ;;		line 344 in file "../../VLCBlib_PIC/nvm.c"
 42268 ;; Parameters:    Size  Location     Type
 42269 ;;		None
 42270 ;; Auto vars:     Size  Location     Type
 42271 ;;  interruptEna    1    3[COMRAM] unsigned char 
 42272 ;; Return value:  Size  Location     Type
 42273 ;;                  1    wreg      void 
 42274 ;; Registers used:
 42275 ;;		wreg, status,2, cstack
 42276 ;; Tracked objects:
 42277 ;;		On entry : 0/0
 42278 ;;		On exit  : 0/0
 42279 ;;		Unchanged: 0/0
 42280 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42282 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42283 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42284 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42285 ;;Total ram usage:        4 bytes
 42286 ;; Hardware stack levels used: 1
 42287 ;; Hardware stack levels required when called: 2
 42288 ;; This function calls:
 42289 ;;		_APP_isSuitableTimeToWriteFlash
 42290 ;; This function is called by:
 42291 ;;		_flushFlashBlock
 42292 ;;		_FLASH_Write
 42293 ;; This function uses a non-reentrant model
 42294 ;;
 42295                           
 42296                           	psect	text129
 42297   006E7E                     __ptext129:
 42298                           	callstack 0
 42299   006E7E                     _eraseFlashBlock:
 42300                           	callstack 116
 42301   006E7E                     l7165:
 42302                           
 42303                           ;../../VLCBlib_PIC/nvm.c: 348:     while (! APP_isSuitableTimeToWriteFlash())
 42304   006E7E  ECBC  F040         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42305   006E82  0900               	iorlw	0
 42306   006E84  B4D8               	btfsc	status,2,c
 42307   006E86  EF47  F037         	goto	u4431
 42308   006E8A  EF49  F037         	goto	u4430
 42309   006E8E                     u4431:
 42310   006E8E  EF3F  F037         	goto	l7165
 42311   006E92                     u4430:
 42312   006E92                     
 42313                           ;../../VLCBlib_PIC/nvm.c: 351:     interruptEnabled = (INTCON0bits.GIE);
 42314   006E92  0E00               	movlw	0
 42315   006E94  BED6               	btfsc	214,7,c	;volatile
 42316   006E96  0E01               	movlw	1
 42317   006E98  6E04               	movwf	eraseFlashBlock@interruptEnabled^(0+1280),c
 42318   006E9A                     l1671:
 42319                           
 42320                           ;../../VLCBlib_PIC/nvm.c: 369:     while (NVMCON0bits.GO)
 42321   006E9A  0100               	movlb	0	; () banked
 42322   006E9C  B140               	btfsc	64,0,b	;volatile
 42323   006E9E  EF53  F037         	goto	u4441
 42324   006EA2  EF55  F037         	goto	u4440
 42325   006EA6                     u4441:
 42326   006EA6  EF4D  F037         	goto	l1671
 42327   006EAA                     u4440:
 42328   006EAA                     
 42329                           ; BSR set to: 0
 42330                           ;../../VLCBlib_PIC/nvm.c: 372:     NVMADRU = (uint8_t) (flashBlock >> 16);
 42331   006EAA  C586  F045         	movff	_flashBlock+2,69	;volatile
 42332   006EAE                     
 42333                           ; BSR set to: 0
 42334                           ;../../VLCBlib_PIC/nvm.c: 373:     NVMADRH = (uint8_t) (flashBlock >> 8);
 42335   006EAE  C584  F501         	movff	_flashBlock,??_eraseFlashBlock
 42336   006EB2  C585  F502         	movff	_flashBlock+1,??_eraseFlashBlock+1
 42337   006EB6  C586  F503         	movff	_flashBlock+2,??_eraseFlashBlock+2
 42338   006EBA  C502  F501         	movff	??_eraseFlashBlock+1,??_eraseFlashBlock
 42339   006EBE  C503  F502         	movff	??_eraseFlashBlock+2,??_eraseFlashBlock+1
 42340   006EC2  6A03               	clrf	(??_eraseFlashBlock+2)^(0+1280),c
 42341   006EC4  5001               	movf	??_eraseFlashBlock^(0+1280),w,c
 42342   006EC6  6F44               	movwf	68,b	;volatile
 42343                           
 42344                           ;../../VLCBlib_PIC/nvm.c: 375:     NVMCON1bits.NVMCMD = 0x06;
 42345   006EC8  5141               	movf	65,w,b	;volsfr
 42346   006ECA  0BF8               	andlw	-8
 42347   006ECC  0906               	iorlw	6
 42348   006ECE  6F41               	movwf	65,b	;volsfr
 42349   006ED0                     
 42350                           ; BSR set to: 0
 42351                           ;../../VLCBlib_PIC/nvm.c: 376:     {INTCON0bits.GIE = 0;};
 42352   006ED0  9ED6               	bcf	214,7,c	;volatile
 42353                           
 42354                           ;../../VLCBlib_PIC/nvm.c: 378:     NVMLOCK = 0x55;
 42355   006ED2  0E55               	movlw	85
 42356   006ED4  6F42               	movwf	66,b	;volatile
 42357                           
 42358                           ;../../VLCBlib_PIC/nvm.c: 379:     NVMLOCK = 0xAA;
 42359   006ED6  0EAA               	movlw	170
 42360   006ED8  6F42               	movwf	66,b	;volatile
 42361   006EDA                     
 42362                           ; BSR set to: 0
 42363                           ;../../VLCBlib_PIC/nvm.c: 380:     NVMCON0bits.GO = 1;
 42364   006EDA  8140               	bsf	64,0,b	;volatile
 42365   006EDC                     l1674:
 42366                           
 42367                           ; BSR set to: 0
 42368                           ;../../VLCBlib_PIC/nvm.c: 381:     while (NVMCON0bits.GO)
 42369   006EDC  B140               	btfsc	64,0,b	;volatile
 42370   006EDE  EF73  F037         	goto	u4451
 42371   006EE2  EF75  F037         	goto	u4450
 42372   006EE6                     u4451:
 42373   006EE6  EF6E  F037         	goto	l1674
 42374   006EEA                     u4450:
 42375   006EEA                     
 42376                           ; BSR set to: 0
 42377                           ;../../VLCBlib_PIC/nvm.c: 383:     NVMCON1bits.NVMCMD = 0x07;
 42378   006EEA  0E07               	movlw	7
 42379   006EEC  1341               	iorwf	65,f,b	;volsfr
 42380                           
 42381                           ;../../VLCBlib_PIC/nvm.c: 385:     if (interruptEnabled) {
 42382   006EEE  5004               	movf	eraseFlashBlock@interruptEnabled^(0+1280),w,c
 42383   006EF0  B4D8               	btfsc	status,2,c
 42384   006EF2  EF7D  F037         	goto	u4461
 42385   006EF6  EF7F  F037         	goto	u4460
 42386   006EFA                     u4461:
 42387   006EFA  EF80  F037         	goto	l1678
 42388   006EFE                     u4460:
 42389   006EFE                     
 42390                           ; BSR set to: 0
 42391                           ;../../VLCBlib_PIC/nvm.c: 386:         {INTCON0bits.GIE = 1;};
 42392   006EFE  8ED6               	bsf	214,7,c	;volatile
 42393   006F00                     l1678:
 42394                           
 42395                           ; BSR set to: 0
 42396   006F00  0012               	return		;funcret
 42397   006F02                     __end_of_eraseFlashBlock:
 42398                           	callstack 0
 42399                           
 42400 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 42401 ;; Defined at:
 42402 ;;		line 275 in file "../main.c"
 42403 ;; Parameters:    Size  Location     Type
 42404 ;;		None
 42405 ;; Auto vars:     Size  Location     Type
 42406 ;;		None
 42407 ;; Return value:  Size  Location     Type
 42408 ;;                  1    wreg      enum E23231
 42409 ;; Registers used:
 42410 ;;		wreg
 42411 ;; Tracked objects:
 42412 ;;		On entry : 0/0
 42413 ;;		On exit  : 0/0
 42414 ;;		Unchanged: 0/0
 42415 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42420 ;;Total ram usage:        0 bytes
 42421 ;; Hardware stack levels used: 1
 42422 ;; Hardware stack levels required when called: 1
 42423 ;; This function calls:
 42424 ;;		Nothing
 42425 ;; This function is called by:
 42426 ;;		_eraseFlashBlock
 42427 ;;		_flushFlashBlock
 42428 ;; This function uses a non-reentrant model
 42429 ;;
 42430                           
 42431                           	psect	text130
 42432   008178                     __ptext130:
 42433                           	callstack 0
 42434   008178                     _APP_isSuitableTimeToWriteFlash:
 42435                           	callstack 116
 42436   008178                     
 42437                           ;../main.c: 277:     if (DMAnCON0bits.DGO) return BAD_TIME;
 42438   008178  0100               	movlb	0	; () banked
 42439   00817A  ABFC               	btfss	252,5,b	;volatile
 42440   00817C  EFC2  F040         	goto	u4391
 42441   008180  EFC4  F040         	goto	u4390
 42442   008184                     u4391:
 42443   008184  EFC7  F040         	goto	l7133
 42444   008188                     u4390:
 42445   008188                     
 42446                           ; BSR set to: 0
 42447   008188  0E00               	movlw	0
 42448   00818A  EFC8  F040         	goto	l86
 42449   00818E                     l7133:
 42450                           
 42451                           ; BSR set to: 0
 42452                           ;../main.c: 279:     return GOOD_TIME;
 42453   00818E  0E01               	movlw	1
 42454   008190                     l86:
 42455                           
 42456                           ; BSR set to: 0
 42457   008190  0012               	return		;funcret
 42458   008192                     __end_of_APP_isSuitableTimeToWriteFlash:
 42459                           	callstack 0
 42460                           
 42461 ;; *************** function _EEPROM_Write *****************
 42462 ;; Defined at:
 42463 ;;		line 218 in file "../../VLCBlib_PIC/nvm.c"
 42464 ;; Parameters:    Size  Location     Type
 42465 ;;  index           3    8[COMRAM] unsigned um
 42466 ;;  value           1   11[COMRAM] unsigned char 
 42467 ;; Auto vars:     Size  Location     Type
 42468 ;;  interruptEna    1    0        unsigned char 
 42469 ;; Return value:  Size  Location     Type
 42470 ;;                  1    wreg      unsigned char 
 42471 ;; Registers used:
 42472 ;;		wreg, status,2, status,0, cstack
 42473 ;; Tracked objects:
 42474 ;;		On entry : 0/0
 42475 ;;		On exit  : 0/0
 42476 ;;		Unchanged: 0/0
 42477 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42478 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42481 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42482 ;;Total ram usage:        4 bytes
 42483 ;; Hardware stack levels used: 1
 42484 ;; Hardware stack levels required when called: 2
 42485 ;; This function calls:
 42486 ;;		_EEPROM_Read
 42487 ;;		_EEPROM_WriteNoVerify
 42488 ;;		_updateModuleErrorStatus
 42489 ;; This function is called by:
 42490 ;;		_writeNVM
 42491 ;; This function uses a non-reentrant model
 42492 ;;
 42493                           
 42494                           	psect	text131
 42495   007784                     __ptext131:
 42496                           	callstack 0
 42497   007784                     _EEPROM_Write:
 42498                           	callstack 118
 42499   007784  50D6               	movf	214,w,c	;volatile
 42500   007786                     l7433:
 42501                           
 42502                           ;../../VLCBlib_PIC/nvm.c: 223:         EEPROM_WriteNoVerify(index, value);
 42503   007786  C509  F501         	movff	EEPROM_Write@index,EEPROM_WriteNoVerify@index
 42504   00778A  C50A  F502         	movff	EEPROM_Write@index+1,EEPROM_WriteNoVerify@index+1
 42505   00778E  C50B  F503         	movff	EEPROM_Write@index+2,EEPROM_WriteNoVerify@index+2
 42506   007792  C50C  F504         	movff	EEPROM_Write@value,EEPROM_WriteNoVerify@value
 42507   007796  ECFC  F03A         	call	_EEPROM_WriteNoVerify	;wreg free
 42508   00779A                     
 42509                           ;../../VLCBlib_PIC/nvm.c: 226:         if (EEPROM_Read(index) == value) {
 42510   00779A  C509  F501         	movff	EEPROM_Write@index,EEPROM_Read@index
 42511   00779E  C50A  F502         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 42512   0077A2  C50B  F503         	movff	EEPROM_Write@index+2,EEPROM_Read@index+2
 42513   0077A6  ECF1  F03C         	call	_EEPROM_Read	;wreg free
 42514   0077AA  180C               	xorwf	EEPROM_Write@value^(0+1280),w,c
 42515   0077AC  A4D8               	btfss	status,2,c
 42516   0077AE  EFDB  F03B         	goto	u4781
 42517   0077B2  EFDD  F03B         	goto	u4780
 42518   0077B6                     u4781:
 42519   0077B6  EFDF  F03B         	goto	l7439
 42520   0077BA                     u4780:
 42521   0077BA  EFE6  F03B         	goto	l7443
 42522   0077BE                     l7439:
 42523                           
 42524                           ;../../VLCBlib_PIC/nvm.c: 230:         mnsDiagnostics[0x04].asUint++;
 42525   0077BE  0105               	movlb	5	; () banked
 42526   0077C0  4BB5               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 42527   0077C2  2BB6               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 42528   0077C4                     
 42529                           ; BSR set to: 5
 42530                           ;../../VLCBlib_PIC/nvm.c: 231:         updateModuleErrorStatus();
 42531   0077C4  ECEC  F040         	call	_updateModuleErrorStatus	;wreg free
 42532                           
 42533                           ;../../VLCBlib_PIC/nvm.c: 233:     } while (1);
 42534   0077C8  EFC3  F03B         	goto	l7433
 42535   0077CC                     l7443:
 42536                           
 42537                           ;../../VLCBlib_PIC/nvm.c: 236:     NVMCON1bits.NVMCMD = 0x07;
 42538   0077CC  0E07               	movlw	7
 42539   0077CE  0100               	movlb	0	; () banked
 42540   0077D0  1341               	iorwf	65,f,b	;volsfr
 42541                           
 42542                           ;../../VLCBlib_PIC/nvm.c: 237:     NVMADR = 0;
 42543   0077D2  0E00               	movlw	0
 42544   0077D4  6F43               	movwf	67,b	;volatile
 42545   0077D6  0E00               	movlw	0
 42546   0077D8  6F44               	movwf	68,b	;volatile
 42547   0077DA  0E00               	movlw	0
 42548   0077DC  6F45               	movwf	69,b	;volatile
 42549   0077DE                     
 42550                           ; BSR set to: 0
 42551                           ;../../VLCBlib_PIC/nvm.c: 239:     return GRSP_OK;
 42552   0077DE  0E00               	movlw	0
 42553   0077E0                     
 42554                           ; BSR set to: 0
 42555   0077E0  0012               	return		;funcret
 42556   0077E2                     __end_of_EEPROM_Write:
 42557                           	callstack 0
 42558                           
 42559 ;; *************** function _updateModuleErrorStatus *****************
 42560 ;; Defined at:
 42561 ;;		line 639 in file "../../VLCBlib_PIC/mns.c"
 42562 ;; Parameters:    Size  Location     Type
 42563 ;;		None
 42564 ;; Auto vars:     Size  Location     Type
 42565 ;;		None
 42566 ;; Return value:  Size  Location     Type
 42567 ;;                  1    wreg      void 
 42568 ;; Registers used:
 42569 ;;		wreg, status,2, status,0
 42570 ;; Tracked objects:
 42571 ;;		On entry : 0/0
 42572 ;;		On exit  : 0/0
 42573 ;;		Unchanged: 0/0
 42574 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42579 ;;Total ram usage:        0 bytes
 42580 ;; Hardware stack levels used: 1
 42581 ;; Hardware stack levels required when called: 1
 42582 ;; This function calls:
 42583 ;;		Nothing
 42584 ;; This function is called by:
 42585 ;;		_canSendMessage
 42586 ;;		_processEnumeration
 42587 ;;		_EEPROM_Write
 42588 ;; This function uses a non-reentrant model
 42589 ;;
 42590                           
 42591                           	psect	text132
 42592   0081D8                     __ptext132:
 42593                           	callstack 0
 42594   0081D8                     _updateModuleErrorStatus:
 42595                           	callstack 119
 42596   0081D8                     
 42597                           ;../../VLCBlib_PIC/mns.c: 640:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 42598   0081D8  0105               	movlb	5	; () banked
 42599   0081DA  29AF               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 42600   0081DC  B4D8               	btfsc	status,2,c
 42601   0081DE  EFF3  F040         	goto	u4501
 42602   0081E2  EFF5  F040         	goto	u4500
 42603   0081E6                     u4501:
 42604   0081E6  EFF6  F040         	goto	l1396
 42605   0081EA                     u4500:
 42606   0081EA                     
 42607                           ; BSR set to: 5
 42608                           ;../../VLCBlib_PIC/mns.c: 641:         mnsDiagnostics[0x01].asBytes.lo++;
 42609   0081EA  2BAF               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 42610   0081EC                     l1396:
 42611                           
 42612                           ; BSR set to: 5
 42613   0081EC  0012               	return		;funcret
 42614   0081EE                     __end_of_updateModuleErrorStatus:
 42615                           	callstack 0
 42616                           
 42617 ;; *************** function _EEPROM_WriteNoVerify *****************
 42618 ;; Defined at:
 42619 ;;		line 248 in file "../../VLCBlib_PIC/nvm.c"
 42620 ;; Parameters:    Size  Location     Type
 42621 ;;  index           3    0[COMRAM] unsigned um
 42622 ;;  value           1    3[COMRAM] unsigned char 
 42623 ;; Auto vars:     Size  Location     Type
 42624 ;;  interruptEna    1    7[COMRAM] unsigned char 
 42625 ;; Return value:  Size  Location     Type
 42626 ;;                  1    wreg      unsigned char 
 42627 ;; Registers used:
 42628 ;;		wreg, status,2
 42629 ;; Tracked objects:
 42630 ;;		On entry : 0/0
 42631 ;;		On exit  : 0/0
 42632 ;;		Unchanged: 0/0
 42633 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42635 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42636 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42637 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42638 ;;Total ram usage:        8 bytes
 42639 ;; Hardware stack levels used: 1
 42640 ;; Hardware stack levels required when called: 1
 42641 ;; This function calls:
 42642 ;;		Nothing
 42643 ;; This function is called by:
 42644 ;;		_EEPROM_Write
 42645 ;; This function uses a non-reentrant model
 42646 ;;
 42647                           
 42648                           	psect	text133
 42649   0075F8                     __ptext133:
 42650                           	callstack 0
 42651   0075F8                     _EEPROM_WriteNoVerify:
 42652                           	callstack 118
 42653   0075F8                     
 42654                           ;../../VLCBlib_PIC/nvm.c: 249:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 25
      +                          0:     interruptEnabled = (INTCON0bits.GIE);
 42655   0075F8  0E00               	movlw	0
 42656   0075FA  BED6               	btfsc	214,7,c	;volatile
 42657   0075FC  0E01               	movlw	1
 42658   0075FE  6E08               	movwf	EEPROM_WriteNoVerify@interruptEnabled^(0+1280),c
 42659   007600                     l1656:
 42660                           
 42661                           ;../../VLCBlib_PIC/nvm.c: 276:     while (NVMCON0bits.GO)
 42662   007600  0100               	movlb	0	; () banked
 42663   007602  B140               	btfsc	64,0,b	;volatile
 42664   007604  EF06  F03B         	goto	u4571
 42665   007608  EF08  F03B         	goto	u4570
 42666   00760C                     u4571:
 42667   00760C  EF00  F03B         	goto	l1656
 42668   007610                     u4570:
 42669   007610                     
 42670                           ; BSR set to: 0
 42671                           ;../../VLCBlib_PIC/nvm.c: 279:     NVMADRU = 0x38;
 42672   007610  0E38               	movlw	56
 42673   007612  6F45               	movwf	69,b	;volatile
 42674                           
 42675                           ;../../VLCBlib_PIC/nvm.c: 280:     NVMADRH = (uint8_t) (index >> 8);
 42676   007614  C501  F505         	movff	EEPROM_WriteNoVerify@index,??_EEPROM_WriteNoVerify
 42677   007618  C502  F506         	movff	EEPROM_WriteNoVerify@index+1,??_EEPROM_WriteNoVerify+1
 42678   00761C  C503  F507         	movff	EEPROM_WriteNoVerify@index+2,??_EEPROM_WriteNoVerify+2
 42679   007620  C506  F505         	movff	??_EEPROM_WriteNoVerify+1,??_EEPROM_WriteNoVerify
 42680   007624  C507  F506         	movff	??_EEPROM_WriteNoVerify+2,??_EEPROM_WriteNoVerify+1
 42681   007628  6A07               	clrf	(??_EEPROM_WriteNoVerify+2)^(0+1280),c
 42682   00762A  5005               	movf	??_EEPROM_WriteNoVerify^(0+1280),w,c
 42683   00762C  6F44               	movwf	68,b	;volatile
 42684   00762E                     
 42685                           ; BSR set to: 0
 42686                           ;../../VLCBlib_PIC/nvm.c: 281:     NVMADRL = (uint8_t) index;
 42687   00762E  C501  F043         	movff	EEPROM_WriteNoVerify@index,67	;volatile
 42688   007632                     
 42689                           ; BSR set to: 0
 42690                           ;../../VLCBlib_PIC/nvm.c: 284:     NVMDATL = value;
 42691   007632  C504  F046         	movff	EEPROM_WriteNoVerify@value,70	;volatile
 42692                           
 42693                           ;../../VLCBlib_PIC/nvm.c: 287:     NVMCON1bits.NVMCMD = 0x03;
 42694   007636  5141               	movf	65,w,b	;volsfr
 42695   007638  0BF8               	andlw	-8
 42696   00763A  0903               	iorlw	3
 42697   00763C  6F41               	movwf	65,b	;volsfr
 42698   00763E                     
 42699                           ; BSR set to: 0
 42700                           ;../../VLCBlib_PIC/nvm.c: 290:     {INTCON0bits.GIE = 0;};
 42701   00763E  9ED6               	bcf	214,7,c	;volatile
 42702                           
 42703                           ;../../VLCBlib_PIC/nvm.c: 293:     NVMLOCK = 0x55;
 42704   007640  0E55               	movlw	85
 42705   007642  6F42               	movwf	66,b	;volatile
 42706                           
 42707                           ;../../VLCBlib_PIC/nvm.c: 294:     NVMLOCK = 0xAA;
 42708   007644  0EAA               	movlw	170
 42709   007646  6F42               	movwf	66,b	;volatile
 42710   007648                     
 42711                           ; BSR set to: 0
 42712                           ;../../VLCBlib_PIC/nvm.c: 297:     NVMCON0bits.GO = 1;
 42713   007648  8140               	bsf	64,0,b	;volatile
 42714                           
 42715                           ;../../VLCBlib_PIC/nvm.c: 299:     if (interruptEnabled) {
 42716   00764A  5008               	movf	EEPROM_WriteNoVerify@interruptEnabled^(0+1280),w,c
 42717   00764C  B4D8               	btfsc	status,2,c
 42718   00764E  EF2B  F03B         	goto	u4581
 42719   007652  EF2D  F03B         	goto	u4580
 42720   007656                     u4581:
 42721   007656  EF2E  F03B         	goto	l1660
 42722   00765A                     u4580:
 42723   00765A                     
 42724                           ; BSR set to: 0
 42725                           ;../../VLCBlib_PIC/nvm.c: 301:         {INTCON0bits.GIE = 1;};
 42726   00765A  8ED6               	bsf	214,7,c	;volatile
 42727   00765C                     l1660:
 42728                           
 42729                           ; BSR set to: 0
 42730   00765C  0012               	return		;funcret
 42731   00765E                     __end_of_EEPROM_WriteNoVerify:
 42732                           	callstack 0
 42733                           
 42734 ;; *************** function _rebuildHashtable *****************
 42735 ;; Defined at:
 42736 ;;		line 1007 in file "../../VLCBlib_PIC/event_teach_simple.c"
 42737 ;; Parameters:    Size  Location     Type
 42738 ;;		None
 42739 ;; Auto vars:     Size  Location     Type
 42740 ;;  ev              2    0        short 
 42741 ;;  a               2    0        int 
 42742 ;;  chainIdx        1   38[COMRAM] unsigned char 
 42743 ;;  tableIndex      1   37[COMRAM] unsigned char 
 42744 ;;  hash            1   36[COMRAM] unsigned char 
 42745 ;; Return value:  Size  Location     Type
 42746 ;;                  1    wreg      void 
 42747 ;; Registers used:
 42748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42749 ;; Tracked objects:
 42750 ;;		On entry : 0/0
 42751 ;;		On exit  : 0/0
 42752 ;;		Unchanged: 0/0
 42753 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42755 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42756 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42757 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42758 ;;Total ram usage:        6 bytes
 42759 ;; Hardware stack levels used: 1
 42760 ;; Hardware stack levels required when called: 4
 42761 ;; This function calls:
 42762 ;;		_getEN
 42763 ;;		_getHash
 42764 ;;		_getNN
 42765 ;; This function is called by:
 42766 ;;		_teachPowerUp
 42767 ;;		_clearAllEvents
 42768 ;;		_removeTableEntry
 42769 ;;		_addEvent
 42770 ;;		_mnsProcessMessage
 42771 ;; This function uses a non-reentrant model
 42772 ;;
 42773                           
 42774                           	psect	text134
 42775   00562C                     __ptext134:
 42776                           	callstack 0
 42777   00562C                     _rebuildHashtable:
 42778                           	callstack 120
 42779   00562C                     
 42780                           ;../../VLCBlib_PIC/event_teach_simple.c: 1009:     uint8_t hash;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 1010:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach_simple.c: 101
      +                          1:     uint8_t tableIndex;;../../VLCBlib_PIC/event_teach_simple.c: 1012:     int a;;../.
      +                          ./VLCBlib_PIC/event_teach_simple.c: 1014:     for (hash=0; hash<32; hash++) {
 42781   00562C  6A25               	clrf	rebuildHashtable@hash^(0+1280),c
 42782   00562E                     l1169:
 42783                           
 42784                           ;../../VLCBlib_PIC/event_teach_simple.c: 1015:         for (chainIdx=0; chainIdx < 20; c
      +                          hainIdx++) {
 42785   00562E  6A27               	clrf	rebuildHashtable@chainIdx^(0+1280),c
 42786   005630                     l7601:
 42787                           
 42788                           ;../../VLCBlib_PIC/event_teach_simple.c: 1016:             eventChains[hash][chainIdx] =
      +                           0xff;
 42789   005630  5025               	movf	rebuildHashtable@hash^(0+1280),w,c
 42790   005632  0D14               	mullw	20
 42791   005634  0EFC               	movlw	low _eventChains
 42792   005636  24F3               	addwf	243,w,c
 42793   005638  6E22               	movwf	??_rebuildHashtable^(0+1280),c
 42794   00563A  0E08               	movlw	high _eventChains
 42795   00563C  20F4               	addwfc	prodh,w,c
 42796   00563E  6E23               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 42797   005640  5027               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 42798   005642  2422               	addwf	??_rebuildHashtable^(0+1280),w,c
 42799   005644  6ED9               	movwf	fsr2l,c
 42800   005646  0E00               	movlw	0
 42801   005648  2023               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 42802   00564A  6EDA               	movwf	fsr2h,c
 42803   00564C  0EFF               	movlw	255
 42804   00564E  6EDF               	movwf	indf2,c
 42805   005650                     
 42806                           ;../../VLCBlib_PIC/event_teach_simple.c: 1017:         }
 42807   005650  2A27               	incf	rebuildHashtable@chainIdx^(0+1280),f,c
 42808   005652  0E13               	movlw	19
 42809   005654  6427               	cpfsgt	rebuildHashtable@chainIdx^(0+1280),c
 42810   005656  EF2F  F02B         	goto	u4951
 42811   00565A  EF31  F02B         	goto	u4950
 42812   00565E                     u4951:
 42813   00565E  EF18  F02B         	goto	l7601
 42814   005662                     u4950:
 42815   005662                     
 42816                           ;../../VLCBlib_PIC/event_teach_simple.c: 1018:     }
 42817   005662  2A25               	incf	rebuildHashtable@hash^(0+1280),f,c
 42818   005664  0E1F               	movlw	31
 42819   005666  6425               	cpfsgt	rebuildHashtable@hash^(0+1280),c
 42820   005668  EF38  F02B         	goto	u4961
 42821   00566C  EF3A  F02B         	goto	u4960
 42822   005670                     u4961:
 42823   005670  EF17  F02B         	goto	l1169
 42824   005674                     u4960:
 42825   005674                     
 42826                           ;../../VLCBlib_PIC/event_teach_simple.c: 1020:     for (tableIndex=0; tableIndex<255; ta
      +                          bleIndex++) {
 42827   005674  6A26               	clrf	rebuildHashtable@tableIndex^(0+1280),c
 42828   005676                     l7615:
 42829                           
 42830                           ;../../VLCBlib_PIC/event_teach_simple.c: 1021:         if (getEN(tableIndex) != 0) {
 42831   005676  5026               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 42832   005678  EC1E  F033         	call	_getEN
 42833   00567C  500D               	movf	?_getEN^(0+1280),w,c
 42834   00567E  100E               	iorwf	(?_getEN+1)^(0+1280),w,c
 42835   005680  B4D8               	btfsc	status,2,c
 42836   005682  EF45  F02B         	goto	u4971
 42837   005686  EF47  F02B         	goto	u4970
 42838   00568A                     u4971:
 42839   00568A  EF8A  F02B         	goto	l7633
 42840   00568E                     u4970:
 42841   00568E                     
 42842                           ;../../VLCBlib_PIC/event_teach_simple.c: 1022:             int16_t ev;;../../VLCBlib_PIC
      +                          /event_teach_simple.c: 1025:             hash = getHash(getNN(tableIndex), getEN(tableIn
      +                          dex));
 42843   00568E  5026               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 42844   005690  ECF0  F028         	call	_getNN
 42845   005694  C50D  F51C         	movff	?_getNN,getHash@nn
 42846   005698  C50E  F51D         	movff	?_getNN+1,getHash@nn+1
 42847   00569C  5026               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 42848   00569E  EC1E  F033         	call	_getEN
 42849   0056A2  C50D  F51E         	movff	?_getEN,getHash@en
 42850   0056A6  C50E  F51F         	movff	?_getEN+1,getHash@en+1
 42851   0056AA  EC91  F040         	call	_getHash	;wreg free
 42852   0056AE  6E25               	movwf	rebuildHashtable@hash^(0+1280),c
 42853   0056B0                     
 42854                           ;../../VLCBlib_PIC/event_teach_simple.c: 1026:             for (chainIdx=0; chainIdx<20;
      +                           chainIdx++) {
 42855   0056B0  6A27               	clrf	rebuildHashtable@chainIdx^(0+1280),c
 42856   0056B2                     l7625:
 42857                           
 42858                           ;../../VLCBlib_PIC/event_teach_simple.c: 1027:                 if (eventChains[hash][cha
      +                          inIdx] == 0xff) {
 42859   0056B2  5025               	movf	rebuildHashtable@hash^(0+1280),w,c
 42860   0056B4  0D14               	mullw	20
 42861   0056B6  0EFC               	movlw	low _eventChains
 42862   0056B8  24F3               	addwf	243,w,c
 42863   0056BA  6E22               	movwf	??_rebuildHashtable^(0+1280),c
 42864   0056BC  0E08               	movlw	high _eventChains
 42865   0056BE  20F4               	addwfc	prodh,w,c
 42866   0056C0  6E23               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 42867   0056C2  5027               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 42868   0056C4  2422               	addwf	??_rebuildHashtable^(0+1280),w,c
 42869   0056C6  6ED9               	movwf	fsr2l,c
 42870   0056C8  0E00               	movlw	0
 42871   0056CA  2023               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 42872   0056CC  6EDA               	movwf	fsr2h,c
 42873   0056CE  28DE               	incf	postinc2,w,c
 42874   0056D0  A4D8               	btfss	status,2,c
 42875   0056D2  EF6D  F02B         	goto	u4981
 42876   0056D6  EF6F  F02B         	goto	u4980
 42877   0056DA                     u4981:
 42878   0056DA  EF81  F02B         	goto	l7629
 42879   0056DE                     u4980:
 42880   0056DE                     
 42881                           ;../../VLCBlib_PIC/event_teach_simple.c: 1029:                     eventChains[hash][cha
      +                          inIdx] = tableIndex;
 42882   0056DE  5025               	movf	rebuildHashtable@hash^(0+1280),w,c
 42883   0056E0  0D14               	mullw	20
 42884   0056E2  0EFC               	movlw	low _eventChains
 42885   0056E4  24F3               	addwf	243,w,c
 42886   0056E6  6E22               	movwf	??_rebuildHashtable^(0+1280),c
 42887   0056E8  0E08               	movlw	high _eventChains
 42888   0056EA  20F4               	addwfc	prodh,w,c
 42889   0056EC  6E23               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 42890   0056EE  5027               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 42891   0056F0  2422               	addwf	??_rebuildHashtable^(0+1280),w,c
 42892   0056F2  6ED9               	movwf	fsr2l,c
 42893   0056F4  0E00               	movlw	0
 42894   0056F6  2023               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 42895   0056F8  6EDA               	movwf	fsr2h,c
 42896   0056FA  C526  F4DF         	movff	rebuildHashtable@tableIndex,indf2
 42897                           
 42898                           ;../../VLCBlib_PIC/event_teach_simple.c: 1030:                     break;
 42899   0056FE  EF8A  F02B         	goto	l7633
 42900   005702                     l7629:
 42901                           
 42902                           ;../../VLCBlib_PIC/event_teach_simple.c: 1032:             }
 42903   005702  2A27               	incf	rebuildHashtable@chainIdx^(0+1280),f,c
 42904   005704  0E13               	movlw	19
 42905   005706  6427               	cpfsgt	rebuildHashtable@chainIdx^(0+1280),c
 42906   005708  EF88  F02B         	goto	u4991
 42907   00570C  EF8A  F02B         	goto	u4990
 42908   005710                     u4991:
 42909   005710  EF59  F02B         	goto	l7625
 42910   005714                     u4990:
 42911   005714                     l7633:
 42912                           
 42913                           ;../../VLCBlib_PIC/event_teach_simple.c: 1034:     }
 42914   005714  2A26               	incf	rebuildHashtable@tableIndex^(0+1280),f,c
 42915   005716  2826               	incf	rebuildHashtable@tableIndex^(0+1280),w,c
 42916   005718  A4D8               	btfss	status,2,c
 42917   00571A  EF91  F02B         	goto	u5001
 42918   00571E  EF93  F02B         	goto	u5000
 42919   005722                     u5001:
 42920   005722  EF3B  F02B         	goto	l7615
 42921   005726                     u5000:
 42922   005726  0012               	return		;funcret
 42923   005728                     __end_of_rebuildHashtable:
 42924                           	callstack 0
 42925                           
 42926 ;; *************** function _getNN *****************
 42927 ;; Defined at:
 42928 ;;		line 915 in file "../../VLCBlib_PIC/event_teach_simple.c"
 42929 ;; Parameters:    Size  Location     Type
 42930 ;;  tableIndex      1    wreg     unsigned char 
 42931 ;; Auto vars:     Size  Location     Type
 42932 ;;  tableIndex      1   26[COMRAM] unsigned char 
 42933 ;;  lo              2   23[COMRAM] unsigned short 
 42934 ;;  hi              2   21[COMRAM] unsigned short 
 42935 ;;  flags           1   25[COMRAM] unsigned char 
 42936 ;; Return value:  Size  Location     Type
 42937 ;;                  2   12[COMRAM] unsigned short 
 42938 ;; Registers used:
 42939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42940 ;; Tracked objects:
 42941 ;;		On entry : 0/0
 42942 ;;		On exit  : 0/0
 42943 ;;		Unchanged: 0/0
 42944 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42945 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42946 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42947 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42948 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42949 ;;Total ram usage:       15 bytes
 42950 ;; Hardware stack levels used: 1
 42951 ;; Hardware stack levels required when called: 3
 42952 ;; This function calls:
 42953 ;;		_readNVM
 42954 ;; This function is called by:
 42955 ;;		_nerdCallback
 42956 ;;		_doNenrd
 42957 ;;		_reqevCallback
 42958 ;;		_findEvent
 42959 ;;		_rebuildHashtable
 42960 ;; This function uses a non-reentrant model
 42961 ;;
 42962                           
 42963                           	psect	text135
 42964   0051E0                     __ptext135:
 42965                           	callstack 0
 42966   0051E0                     _getNN:
 42967                           	callstack 120
 42968                           
 42969                           ;incstack = 0
 42970                           ;getNN@tableIndex stored from wreg
 42971   0051E0  6E1B               	movwf	getNN@tableIndex^(0+1280),c
 42972   0051E2                     
 42973                           ;../../VLCBlib_PIC/event_teach_simple.c: 916:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_simple.c: 917:     uint16_t lo;;../../VLCBlib_PIC/event_teach_simple.c: 918:     ui
      +                          nt8_t flags;;../../VLCBlib_PIC/event_teach_simple.c: 919:     if (tableIndex >= 255) {
 42974   0051E2  281B               	incf	getNN@tableIndex^(0+1280),w,c
 42975   0051E4  A4D8               	btfss	status,2,c
 42976   0051E6  EFF7  F028         	goto	u4761
 42977   0051EA  EFF9  F028         	goto	u4760
 42978   0051EE                     u4761:
 42979   0051EE  EFFF  F028         	goto	l7409
 42980   0051F2                     u4760:
 42981   0051F2                     
 42982                           ;../../VLCBlib_PIC/event_teach_simple.c: 920:         return CMDERR_INV_EN_IDX;
 42983   0051F2  0E00               	movlw	0
 42984   0051F4  6E0E               	movwf	(?_getNN+1)^(0+1280),c
 42985   0051F6  0E08               	movlw	8
 42986   0051F8  6E0D               	movwf	?_getNN^(0+1280),c
 42987   0051FA  EF80  F029         	goto	l1153
 42988   0051FE                     l7409:
 42989                           
 42990                           ;../../VLCBlib_PIC/event_teach_simple.c: 923:     flags = (uint8_t)readNVM(FLASH_NVM_TYP
      +                          E, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+4);
 42991   0051FE  501B               	movf	getNN@tableIndex^(0+1280),w,c
 42992   005200  6E0F               	movwf	??_getNN^(0+1280),c
 42993   005202  6A10               	clrf	(??_getNN+1)^(0+1280),c
 42994   005204  0E01               	movlw	1
 42995   005206  020F               	mulwf	??_getNN^(0+1280),c
 42996   005208  C4F3 F511          	movff	prodl,??_getNN+2
 42997   00520C  C4F4 F512          	movff	prodh,??_getNN+3
 42998   005210  0210               	mulwf	(??_getNN+1)^(0+1280),c
 42999   005212  50F3               	movf	prodl,w,c
 43000   005214  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43001   005216  0E01               	movlw	1
 43002   005218  020F               	mulwf	??_getNN^(0+1280),c
 43003   00521A  50F3               	movf	prodl,w,c
 43004   00521C  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43005   00521E  C511  F513         	movff	??_getNN+2,??_getNN+4
 43006   005222  C512  F514         	movff	??_getNN+3,??_getNN+5
 43007   005226  6A15               	clrf	(??_getNN+6)^(0+1280),c
 43008   005228  0E04               	movlw	4
 43009   00522A  2413               	addwf	(??_getNN+4)^(0+1280),w,c
 43010   00522C  6E07               	movwf	readNVM@index^(0+1280),c
 43011   00522E  0E00               	movlw	0
 43012   005230  2014               	addwfc	(??_getNN+5)^(0+1280),w,c
 43013   005232  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43014   005234  0E01               	movlw	1
 43015   005236  2015               	addwfc	(??_getNN+6)^(0+1280),w,c
 43016   005238  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43017   00523A  0E01               	movlw	1
 43018   00523C  ECEA  F039         	call	_readNVM
 43019   005240  5007               	movf	?_readNVM^(0+1280),w,c
 43020   005242  6E1A               	movwf	getNN@flags^(0+1280),c
 43021   005244                     
 43022                           ;../../VLCBlib_PIC/event_teach_simple.c: 924:     if (flags & 1) {
 43023   005244  A01A               	btfss	getNN@flags^(0+1280),0,c
 43024   005246  EF27  F029         	goto	u4771
 43025   00524A  EF29  F029         	goto	u4770
 43026   00524E                     u4771:
 43027   00524E  EF2F  F029         	goto	l7415
 43028   005252                     u4770:
 43029   005252                     
 43030                           ;../../VLCBlib_PIC/event_teach_simple.c: 925:         return nn.word;
 43031   005252  C58F  F50D         	movff	_nn,?_getNN
 43032   005256  C590  F50E         	movff	_nn+1,?_getNN+1
 43033   00525A  EF80  F029         	goto	l1153
 43034   00525E                     l7415:
 43035                           
 43036                           ;../../VLCBlib_PIC/event_teach_simple.c: 927:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+1);
 43037   00525E  501B               	movf	getNN@tableIndex^(0+1280),w,c
 43038   005260  6E0F               	movwf	??_getNN^(0+1280),c
 43039   005262  6A10               	clrf	(??_getNN+1)^(0+1280),c
 43040   005264  0E01               	movlw	1
 43041   005266  020F               	mulwf	??_getNN^(0+1280),c
 43042   005268  C4F3 F511          	movff	prodl,??_getNN+2
 43043   00526C  C4F4 F512          	movff	prodh,??_getNN+3
 43044   005270  0210               	mulwf	(??_getNN+1)^(0+1280),c
 43045   005272  50F3               	movf	prodl,w,c
 43046   005274  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43047   005276  0E01               	movlw	1
 43048   005278  020F               	mulwf	??_getNN^(0+1280),c
 43049   00527A  50F3               	movf	prodl,w,c
 43050   00527C  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43051   00527E  C511  F513         	movff	??_getNN+2,??_getNN+4
 43052   005282  C512  F514         	movff	??_getNN+3,??_getNN+5
 43053   005286  6A15               	clrf	(??_getNN+6)^(0+1280),c
 43054   005288  0E01               	movlw	1
 43055   00528A  2413               	addwf	(??_getNN+4)^(0+1280),w,c
 43056   00528C  6E07               	movwf	readNVM@index^(0+1280),c
 43057   00528E  0E00               	movlw	0
 43058   005290  2014               	addwfc	(??_getNN+5)^(0+1280),w,c
 43059   005292  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43060   005294  0E01               	movlw	1
 43061   005296  2015               	addwfc	(??_getNN+6)^(0+1280),w,c
 43062   005298  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43063   00529A  0E01               	movlw	1
 43064   00529C  ECEA  F039         	call	_readNVM
 43065   0052A0  5007               	movf	?_readNVM^(0+1280),w,c
 43066   0052A2  6E18               	movwf	getNN@lo^(0+1280),c
 43067   0052A4  6A19               	clrf	(getNN@lo+1)^(0+1280),c
 43068                           
 43069                           ;../../VLCBlib_PIC/event_teach_simple.c: 928:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+0);
 43070   0052A6  501B               	movf	getNN@tableIndex^(0+1280),w,c
 43071   0052A8  6E0F               	movwf	??_getNN^(0+1280),c
 43072   0052AA  6A10               	clrf	(??_getNN+1)^(0+1280),c
 43073   0052AC  0E01               	movlw	1
 43074   0052AE  020F               	mulwf	??_getNN^(0+1280),c
 43075   0052B0  C4F3 F511          	movff	prodl,??_getNN+2
 43076   0052B4  C4F4 F512          	movff	prodh,??_getNN+3
 43077   0052B8  0210               	mulwf	(??_getNN+1)^(0+1280),c
 43078   0052BA  50F3               	movf	prodl,w,c
 43079   0052BC  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43080   0052BE  0E01               	movlw	1
 43081   0052C0  020F               	mulwf	??_getNN^(0+1280),c
 43082   0052C2  50F3               	movf	prodl,w,c
 43083   0052C4  2612               	addwf	(??_getNN+3)^(0+1280),f,c
 43084   0052C6  C511  F513         	movff	??_getNN+2,??_getNN+4
 43085   0052CA  C512  F514         	movff	??_getNN+3,??_getNN+5
 43086   0052CE  6A15               	clrf	(??_getNN+6)^(0+1280),c
 43087   0052D0  0E00               	movlw	0
 43088   0052D2  2413               	addwf	(??_getNN+4)^(0+1280),w,c
 43089   0052D4  6E07               	movwf	readNVM@index^(0+1280),c
 43090   0052D6  0E00               	movlw	0
 43091   0052D8  2014               	addwfc	(??_getNN+5)^(0+1280),w,c
 43092   0052DA  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43093   0052DC  0E01               	movlw	1
 43094   0052DE  2015               	addwfc	(??_getNN+6)^(0+1280),w,c
 43095   0052E0  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43096   0052E2  0E01               	movlw	1
 43097   0052E4  ECEA  F039         	call	_readNVM
 43098   0052E8  5007               	movf	?_readNVM^(0+1280),w,c
 43099   0052EA  6E16               	movwf	getNN@hi^(0+1280),c
 43100   0052EC  6A17               	clrf	(getNN@hi+1)^(0+1280),c
 43101   0052EE                     
 43102                           ;../../VLCBlib_PIC/event_teach_simple.c: 929:     return lo | (hi << 8);
 43103   0052EE  5016               	movf	getNN@hi^(0+1280),w,c
 43104   0052F0  6E10               	movwf	(??_getNN+1)^(0+1280),c
 43105   0052F2  6A0F               	clrf	??_getNN^(0+1280),c
 43106   0052F4  5018               	movf	getNN@lo^(0+1280),w,c
 43107   0052F6  100F               	iorwf	??_getNN^(0+1280),w,c
 43108   0052F8  6E0D               	movwf	?_getNN^(0+1280),c
 43109   0052FA  5019               	movf	(getNN@lo+1)^(0+1280),w,c
 43110   0052FC  1010               	iorwf	(??_getNN+1)^(0+1280),w,c
 43111   0052FE  6E0E               	movwf	(?_getNN+1)^(0+1280),c
 43112   005300                     l1153:
 43113   005300  0012               	return		;funcret
 43114   005302                     __end_of_getNN:
 43115                           	callstack 0
 43116                           
 43117 ;; *************** function _getHash *****************
 43118 ;; Defined at:
 43119 ;;		line 993 in file "../../VLCBlib_PIC/event_teach_simple.c"
 43120 ;; Parameters:    Size  Location     Type
 43121 ;;  nn              2   27[COMRAM] unsigned short 
 43122 ;;  en              2   29[COMRAM] unsigned short 
 43123 ;; Auto vars:     Size  Location     Type
 43124 ;;  hash            1   32[COMRAM] unsigned char 
 43125 ;; Return value:  Size  Location     Type
 43126 ;;                  1    wreg      unsigned char 
 43127 ;; Registers used:
 43128 ;;		wreg, status,2, status,0, prodl, prodh
 43129 ;; Tracked objects:
 43130 ;;		On entry : 0/0
 43131 ;;		On exit  : 0/0
 43132 ;;		Unchanged: 0/0
 43133 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43134 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43136 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43137 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43138 ;;Total ram usage:        6 bytes
 43139 ;; Hardware stack levels used: 1
 43140 ;; Hardware stack levels required when called: 1
 43141 ;; This function calls:
 43142 ;;		Nothing
 43143 ;; This function is called by:
 43144 ;;		_findEvent
 43145 ;;		_rebuildHashtable
 43146 ;; This function uses a non-reentrant model
 43147 ;;
 43148                           
 43149                           	psect	text136
 43150   008122                     __ptext136:
 43151                           	callstack 0
 43152   008122                     _getHash:
 43153                           	callstack 122
 43154   008122                     
 43155                           ;../../VLCBlib_PIC/event_teach_simple.c: 994:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_simple.c: 996:     hash = (uint8_t)(nn ^ (nn >> 8U));
 43156   008122  501D               	movf	(getHash@nn+1)^(0+1280),w,c
 43157   008124  181C               	xorwf	getHash@nn^(0+1280),w,c
 43158   008126  6E21               	movwf	getHash@hash^(0+1280),c
 43159   008128                     
 43160                           ;../../VLCBlib_PIC/event_teach_simple.c: 997:     hash = (uint8_t)(7U*hash + (en ^ (en>>
      +                          8U)));
 43161   008128  501F               	movf	(getHash@en+1)^(0+1280),w,c
 43162   00812A  181E               	xorwf	getHash@en^(0+1280),w,c
 43163   00812C  6E20               	movwf	??_getHash^(0+1280),c
 43164   00812E  5021               	movf	getHash@hash^(0+1280),w,c
 43165   008130  0D07               	mullw	7
 43166   008132  50F3               	movf	243,w,c
 43167   008134  2420               	addwf	??_getHash^(0+1280),w,c
 43168   008136  6E21               	movwf	getHash@hash^(0+1280),c
 43169   008138                     
 43170                           ;../../VLCBlib_PIC/event_teach_simple.c: 999:     hash %= 32;
 43171   008138  0E1F               	movlw	31
 43172   00813A  1621               	andwf	getHash@hash^(0+1280),f,c
 43173   00813C                     
 43174                           ;../../VLCBlib_PIC/event_teach_simple.c: 1000:     return hash;
 43175   00813C  5021               	movf	getHash@hash^(0+1280),w,c
 43176   00813E  0012               	return		;funcret
 43177   008140                     __end_of_getHash:
 43178                           	callstack 0
 43179                           
 43180 ;; *************** function _getEN *****************
 43181 ;; Defined at:
 43182 ;;		line 939 in file "../../VLCBlib_PIC/event_teach_simple.c"
 43183 ;; Parameters:    Size  Location     Type
 43184 ;;  tableIndex      1    wreg     unsigned char 
 43185 ;; Auto vars:     Size  Location     Type
 43186 ;;  tableIndex      1   25[COMRAM] unsigned char 
 43187 ;;  lo              2   23[COMRAM] unsigned short 
 43188 ;;  hi              2   21[COMRAM] unsigned short 
 43189 ;; Return value:  Size  Location     Type
 43190 ;;                  2   12[COMRAM] unsigned short 
 43191 ;; Registers used:
 43192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43193 ;; Tracked objects:
 43194 ;;		On entry : 0/0
 43195 ;;		On exit  : 0/0
 43196 ;;		Unchanged: 0/0
 43197 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43198 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43199 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43200 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43201 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43202 ;;Total ram usage:       14 bytes
 43203 ;; Hardware stack levels used: 1
 43204 ;; Hardware stack levels required when called: 3
 43205 ;; This function calls:
 43206 ;;		_readNVM
 43207 ;; This function is called by:
 43208 ;;		_doNnevn
 43209 ;;		_nerdCallback
 43210 ;;		_doNenrd
 43211 ;;		_doRqevn
 43212 ;;		_reqevCallback
 43213 ;;		_addEvent
 43214 ;;		_findEvent
 43215 ;;		_rebuildHashtable
 43216 ;; This function uses a non-reentrant model
 43217 ;;
 43218                           
 43219                           	psect	text137
 43220   00663C                     __ptext137:
 43221                           	callstack 0
 43222   00663C                     _getEN:
 43223                           	callstack 120
 43224                           
 43225                           ;incstack = 0
 43226                           ;getEN@tableIndex stored from wreg
 43227   00663C  6E1A               	movwf	getEN@tableIndex^(0+1280),c
 43228   00663E                     
 43229                           ;../../VLCBlib_PIC/event_teach_simple.c: 940:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_simple.c: 941:     uint16_t lo;;../../VLCBlib_PIC/event_teach_simple.c: 943:     lo
      +                           = (uint8_t)readNVM(FLASH_NVM_TYPE, 0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+3);
 43230   00663E  501A               	movf	getEN@tableIndex^(0+1280),w,c
 43231   006640  6E0F               	movwf	??_getEN^(0+1280),c
 43232   006642  6A10               	clrf	(??_getEN+1)^(0+1280),c
 43233   006644  0E01               	movlw	1
 43234   006646  020F               	mulwf	??_getEN^(0+1280),c
 43235   006648  C4F3 F511          	movff	prodl,??_getEN+2
 43236   00664C  C4F4 F512          	movff	prodh,??_getEN+3
 43237   006650  0210               	mulwf	(??_getEN+1)^(0+1280),c
 43238   006652  50F3               	movf	prodl,w,c
 43239   006654  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 43240   006656  0E01               	movlw	1
 43241   006658  020F               	mulwf	??_getEN^(0+1280),c
 43242   00665A  50F3               	movf	prodl,w,c
 43243   00665C  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 43244   00665E  C511  F513         	movff	??_getEN+2,??_getEN+4
 43245   006662  C512  F514         	movff	??_getEN+3,??_getEN+5
 43246   006666  6A15               	clrf	(??_getEN+6)^(0+1280),c
 43247   006668  0E03               	movlw	3
 43248   00666A  2413               	addwf	(??_getEN+4)^(0+1280),w,c
 43249   00666C  6E07               	movwf	readNVM@index^(0+1280),c
 43250   00666E  0E00               	movlw	0
 43251   006670  2014               	addwfc	(??_getEN+5)^(0+1280),w,c
 43252   006672  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43253   006674  0E01               	movlw	1
 43254   006676  2015               	addwfc	(??_getEN+6)^(0+1280),w,c
 43255   006678  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43256   00667A  0E01               	movlw	1
 43257   00667C  ECEA  F039         	call	_readNVM
 43258   006680  5007               	movf	?_readNVM^(0+1280),w,c
 43259   006682  6E18               	movwf	getEN@lo^(0+1280),c
 43260   006684  6A19               	clrf	(getEN@lo+1)^(0+1280),c
 43261                           
 43262                           ;../../VLCBlib_PIC/event_teach_simple.c: 944:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x10000 + (sizeof(Event) + 1 + 252)*tableIndex+2);
 43263   006686  501A               	movf	getEN@tableIndex^(0+1280),w,c
 43264   006688  6E0F               	movwf	??_getEN^(0+1280),c
 43265   00668A  6A10               	clrf	(??_getEN+1)^(0+1280),c
 43266   00668C  0E01               	movlw	1
 43267   00668E  020F               	mulwf	??_getEN^(0+1280),c
 43268   006690  C4F3 F511          	movff	prodl,??_getEN+2
 43269   006694  C4F4 F512          	movff	prodh,??_getEN+3
 43270   006698  0210               	mulwf	(??_getEN+1)^(0+1280),c
 43271   00669A  50F3               	movf	prodl,w,c
 43272   00669C  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 43273   00669E  0E01               	movlw	1
 43274   0066A0  020F               	mulwf	??_getEN^(0+1280),c
 43275   0066A2  50F3               	movf	prodl,w,c
 43276   0066A4  2612               	addwf	(??_getEN+3)^(0+1280),f,c
 43277   0066A6  C511  F513         	movff	??_getEN+2,??_getEN+4
 43278   0066AA  C512  F514         	movff	??_getEN+3,??_getEN+5
 43279   0066AE  6A15               	clrf	(??_getEN+6)^(0+1280),c
 43280   0066B0  0E02               	movlw	2
 43281   0066B2  2413               	addwf	(??_getEN+4)^(0+1280),w,c
 43282   0066B4  6E07               	movwf	readNVM@index^(0+1280),c
 43283   0066B6  0E00               	movlw	0
 43284   0066B8  2014               	addwfc	(??_getEN+5)^(0+1280),w,c
 43285   0066BA  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 43286   0066BC  0E01               	movlw	1
 43287   0066BE  2015               	addwfc	(??_getEN+6)^(0+1280),w,c
 43288   0066C0  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 43289   0066C2  0E01               	movlw	1
 43290   0066C4  ECEA  F039         	call	_readNVM
 43291   0066C8  5007               	movf	?_readNVM^(0+1280),w,c
 43292   0066CA  6E16               	movwf	getEN@hi^(0+1280),c
 43293   0066CC  6A17               	clrf	(getEN@hi+1)^(0+1280),c
 43294   0066CE                     
 43295                           ;../../VLCBlib_PIC/event_teach_simple.c: 945:     return lo | (hi << 8);
 43296   0066CE  5016               	movf	getEN@hi^(0+1280),w,c
 43297   0066D0  6E10               	movwf	(??_getEN+1)^(0+1280),c
 43298   0066D2  6A0F               	clrf	??_getEN^(0+1280),c
 43299   0066D4  5018               	movf	getEN@lo^(0+1280),w,c
 43300   0066D6  100F               	iorwf	??_getEN^(0+1280),w,c
 43301   0066D8  6E0D               	movwf	?_getEN^(0+1280),c
 43302   0066DA  5019               	movf	(getEN@lo+1)^(0+1280),w,c
 43303   0066DC  1010               	iorwf	(??_getEN+1)^(0+1280),w,c
 43304   0066DE  6E0E               	movwf	(?_getEN+1)^(0+1280),c
 43305   0066E0  0012               	return		;funcret
 43306   0066E2                     __end_of_getEN:
 43307                           	callstack 0
 43308                           
 43309 ;; *************** function _readNVM *****************
 43310 ;; Defined at:
 43311 ;;		line 570 in file "../../VLCBlib_PIC/nvm.c"
 43312 ;; Parameters:    Size  Location     Type
 43313 ;;  type            1    wreg     enum E23276
 43314 ;;  index           3    6[COMRAM] unsigned um
 43315 ;; Auto vars:     Size  Location     Type
 43316 ;;  type            1   11[COMRAM] enum E23276
 43317 ;; Return value:  Size  Location     Type
 43318 ;;                  2    6[COMRAM] short 
 43319 ;; Registers used:
 43320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43321 ;; Tracked objects:
 43322 ;;		On entry : 0/0
 43323 ;;		On exit  : 0/0
 43324 ;;		Unchanged: 0/0
 43325 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43326 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43328 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43329 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43330 ;;Total ram usage:        6 bytes
 43331 ;; Hardware stack levels used: 1
 43332 ;; Hardware stack levels required when called: 2
 43333 ;; This function calls:
 43334 ;;		_EEPROM_Read
 43335 ;;		_FLASH_Read
 43336 ;; This function is called by:
 43337 ;;		_bootPowerUp
 43338 ;;		_canPowerUp
 43339 ;;		_getEv
 43340 ;;		_getEVs
 43341 ;;		_getNN
 43342 ;;		_getEN
 43343 ;;		_mnsPowerUp
 43344 ;;		_loadNvCache
 43345 ;;		_main
 43346 ;; This function uses a non-reentrant model
 43347 ;;
 43348                           
 43349                           	psect	text138
 43350   0073D4                     __ptext138:
 43351                           	callstack 0
 43352   0073D4                     _readNVM:
 43353                           	callstack 124
 43354                           
 43355                           ;incstack = 0
 43356                           ;readNVM@type stored from wreg
 43357   0073D4  6E0C               	movwf	readNVM@type^(0+1280),c
 43358   0073D6                     
 43359                           ;../../VLCBlib_PIC/nvm.c: 571:     switch(type) {
 43360   0073D6  EF0E  F03A         	goto	l7225
 43361   0073DA                     l7211:
 43362                           
 43363                           ;../../VLCBlib_PIC/nvm.c: 573:             return EEPROM_Read((uint16_t)index);
 43364   0073DA  C507  F501         	movff	readNVM@index,EEPROM_Read@index
 43365   0073DE  C508  F502         	movff	readNVM@index+1,EEPROM_Read@index+1
 43366   0073E2  6A03               	clrf	(EEPROM_Read@index+2)^(0+1280),c
 43367   0073E4  ECF1  F03C         	call	_EEPROM_Read	;wreg free
 43368   0073E8  6E0A               	movwf	??_readNVM^(0+1280),c
 43369   0073EA  500A               	movf	??_readNVM^(0+1280),w,c
 43370   0073EC  6E07               	movwf	?_readNVM^(0+1280),c
 43371   0073EE  6A08               	clrf	(?_readNVM+1)^(0+1280),c
 43372   0073F0  EF23  F03A         	goto	l1722
 43373   0073F4                     l7215:
 43374                           
 43375                           ;../../VLCBlib_PIC/nvm.c: 579:             return FLASH_Read(index);
 43376   0073F4  C507  F501         	movff	readNVM@index,FLASH_Read@address
 43377   0073F8  C508  F502         	movff	readNVM@index+1,FLASH_Read@address+1
 43378   0073FC  C509  F503         	movff	readNVM@index+2,FLASH_Read@address+2
 43379   007400  EC39  F039         	call	_FLASH_Read	;wreg free
 43380   007404  6E0A               	movwf	??_readNVM^(0+1280),c
 43381   007406  500A               	movf	??_readNVM^(0+1280),w,c
 43382   007408  6E07               	movwf	?_readNVM^(0+1280),c
 43383   00740A  6A08               	clrf	(?_readNVM+1)^(0+1280),c
 43384   00740C  EF23  F03A         	goto	l1722
 43385   007410                     l7219:
 43386                           
 43387                           ;../../VLCBlib_PIC/nvm.c: 582:             return -GRSP_UNKNOWN_NVM_TYPE;
 43388   007410  0EFF               	movlw	255
 43389   007412  6E08               	movwf	(?_readNVM+1)^(0+1280),c
 43390   007414  0E02               	movlw	2
 43391   007416  6E07               	movwf	?_readNVM^(0+1280),c
 43392   007418  EF23  F03A         	goto	l1722
 43393   00741C                     l7225:
 43394   00741C  500C               	movf	readNVM@type^(0+1280),w,c
 43395   00741E  6E0A               	movwf	??_readNVM^(0+1280),c
 43396   007420  6A0B               	clrf	(??_readNVM+1)^(0+1280),c
 43397                           
 43398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 43399                           ; Switch size 1, requested type "simple"
 43400                           ; Number of cases is 1, Range of values is 0 to 0
 43401                           ; switch strategies available:
 43402                           ; Name         Instructions Cycles
 43403                           ; simple_byte            4     3 (average)
 43404                           ;	Chosen strategy is simple_byte
 43405   007422  500B               	movf	(??_readNVM+1)^(0+1280),w,c
 43406   007424  0A00               	xorlw	0	; case 0
 43407   007426  B4D8               	btfsc	status,2,c
 43408   007428  EF18  F03A         	goto	l11621
 43409   00742C  EF08  F03A         	goto	l7219
 43410   007430                     l11621:
 43411                           
 43412                           ; Switch size 1, requested type "simple"
 43413                           ; Number of cases is 2, Range of values is 0 to 1
 43414                           ; switch strategies available:
 43415                           ; Name         Instructions Cycles
 43416                           ; simple_byte            7     4 (average)
 43417                           ;	Chosen strategy is simple_byte
 43418   007430  500A               	movf	??_readNVM^(0+1280),w,c
 43419   007432  0A00               	xorlw	0	; case 0
 43420   007434  B4D8               	btfsc	status,2,c
 43421   007436  EFED  F039         	goto	l7211
 43422   00743A  0A01               	xorlw	1	; case 1
 43423   00743C  B4D8               	btfsc	status,2,c
 43424   00743E  EFFA  F039         	goto	l7215
 43425   007442  EF08  F03A         	goto	l7219
 43426   007446                     l1722:
 43427   007446  0012               	return		;funcret
 43428   007448                     __end_of_readNVM:
 43429                           	callstack 0
 43430                           
 43431 ;; *************** function _FLASH_Read *****************
 43432 ;; Defined at:
 43433 ;;		line 315 in file "../../VLCBlib_PIC/nvm.c"
 43434 ;; Parameters:    Size  Location     Type
 43435 ;;  address         3    0[COMRAM] unsigned um
 43436 ;; Auto vars:     Size  Location     Type
 43437 ;;		None
 43438 ;; Return value:  Size  Location     Type
 43439 ;;                  1    wreg      unsigned char 
 43440 ;; Registers used:
 43441 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43442 ;; Tracked objects:
 43443 ;;		On entry : 0/0
 43444 ;;		On exit  : 0/0
 43445 ;;		Unchanged: 0/0
 43446 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43447 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43449 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43450 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43451 ;;Total ram usage:        6 bytes
 43452 ;; Hardware stack levels used: 1
 43453 ;; Hardware stack levels required when called: 1
 43454 ;; This function calls:
 43455 ;;		Nothing
 43456 ;; This function is called by:
 43457 ;;		_readNVM
 43458 ;; This function uses a non-reentrant model
 43459 ;;
 43460                           
 43461                           	psect	text139
 43462   007272                     __ptext139:
 43463                           	callstack 0
 43464   007272                     _FLASH_Read:
 43465                           	callstack 124
 43466   007272                     
 43467                           ;../../VLCBlib_PIC/nvm.c: 317:     if ((address&(~((flash_address_t)(256U)-1))) == flash
      +                          Block) {
 43468   007272  0E00               	movlw	0
 43469   007274  1401               	andwf	FLASH_Read@address^(0+1280),w,c
 43470   007276  6E04               	movwf	??_FLASH_Read^(0+1280),c
 43471   007278  0EFF               	movlw	255
 43472   00727A  1402               	andwf	(FLASH_Read@address+1)^(0+1280),w,c
 43473   00727C  6E05               	movwf	(??_FLASH_Read+1)^(0+1280),c
 43474   00727E  0EFF               	movlw	255
 43475   007280  1403               	andwf	(FLASH_Read@address+2)^(0+1280),w,c
 43476   007282  6E06               	movwf	(??_FLASH_Read+2)^(0+1280),c
 43477   007284  0105               	movlb	5	; () banked
 43478   007286  5184               	movf	_flashBlock& (0+255),w,b
 43479   007288  1804               	xorwf	??_FLASH_Read^(0+1280),w,c
 43480   00728A  E10A               	bnz	u4421
 43481   00728C  5185               	movf	(_flashBlock+1)& (0+255),w,b
 43482   00728E  1805               	xorwf	(??_FLASH_Read+1)^(0+1280),w,c
 43483   007290  E107               	bnz	u4421
 43484   007292  5186               	movf	(_flashBlock+2)& (0+255),w,b
 43485   007294  1806               	xorwf	(??_FLASH_Read+2)^(0+1280),w,c
 43486   007296  A4D8               	btfss	status,2,c
 43487   007298  EF50  F039         	goto	u4421
 43488   00729C  EF52  F039         	goto	u4420
 43489   0072A0                     u4421:
 43490   0072A0  EF61  F039         	goto	l1663
 43491   0072A4                     u4420:
 43492   0072A4                     
 43493                           ; BSR set to: 5
 43494                           ;../../VLCBlib_PIC/nvm.c: 319:         return flashBuffer[(address&((256U)-1))];
 43495   0072A4  0EFF               	movlw	255
 43496   0072A6  1401               	andwf	FLASH_Read@address^(0+1280),w,c
 43497   0072A8  6E04               	movwf	??_FLASH_Read^(0+1280),c
 43498   0072AA  0E00               	movlw	0
 43499   0072AC  1402               	andwf	(FLASH_Read@address+1)^(0+1280),w,c
 43500   0072AE  6E05               	movwf	(??_FLASH_Read+1)^(0+1280),c
 43501   0072B0  0E00               	movlw	0
 43502   0072B2  2404               	addwf	??_FLASH_Read^(0+1280),w,c
 43503   0072B4  6ED9               	movwf	fsr2l,c
 43504   0072B6  0E37               	movlw	55
 43505   0072B8  2005               	addwfc	(??_FLASH_Read+1)^(0+1280),w,c
 43506   0072BA  6EDA               	movwf	fsr2h,c
 43507   0072BC  50DF               	movf	indf2,w,c
 43508   0072BE  EF74  F039         	goto	l1664
 43509   0072C2                     l1663:
 43510                           
 43511                           ; BSR set to: 5
 43512                           ;../../VLCBlib_PIC/nvm.c: 329:         TBLPTRU = (uint8_t) (address >> 16);
 43513   0072C2  C503  F4F8         	movff	FLASH_Read@address+2,tblptru	;volatile
 43514   0072C6                     
 43515                           ; BSR set to: 5
 43516                           ;../../VLCBlib_PIC/nvm.c: 330:         TBLPTRH = (uint8_t) (address >> 8);
 43517   0072C6  C501  F504         	movff	FLASH_Read@address,??_FLASH_Read
 43518   0072CA  C502  F505         	movff	FLASH_Read@address+1,??_FLASH_Read+1
 43519   0072CE  C503  F506         	movff	FLASH_Read@address+2,??_FLASH_Read+2
 43520   0072D2  C505  F504         	movff	??_FLASH_Read+1,??_FLASH_Read
 43521   0072D6  C506  F505         	movff	??_FLASH_Read+2,??_FLASH_Read+1
 43522   0072DA  6A06               	clrf	(??_FLASH_Read+2)^(0+1280),c
 43523   0072DC  5004               	movf	??_FLASH_Read^(0+1280),w,c
 43524   0072DE  6EF7               	movwf	247,c	;volatile
 43525   0072E0                     
 43526                           ; BSR set to: 5
 43527                           ;../../VLCBlib_PIC/nvm.c: 331:         TBLPTRL = (uint8_t) address;
 43528   0072E0  C501  F4F6         	movff	FLASH_Read@address,tblptrl	;volatile
 43529   0072E4  0008               	tblrd		*	;# 
 43530                           
 43531                           ;../../VLCBlib_PIC/nvm.c: 335:         return TABLAT;
 43532   0072E6  50F5               	movf	245,w,c	;volatile
 43533   0072E8                     l1664:
 43534   0072E8  0012               	return		;funcret
 43535   0072EA                     __end_of_FLASH_Read:
 43536                           	callstack 0
 43537                           
 43538 ;; *************** function _EEPROM_Read *****************
 43539 ;; Defined at:
 43540 ;;		line 171 in file "../../VLCBlib_PIC/nvm.c"
 43541 ;; Parameters:    Size  Location     Type
 43542 ;;  index           3    0[COMRAM] unsigned um
 43543 ;; Auto vars:     Size  Location     Type
 43544 ;;		None
 43545 ;; Return value:  Size  Location     Type
 43546 ;;                  1    wreg      unsigned char 
 43547 ;; Registers used:
 43548 ;;		wreg, status,2
 43549 ;; Tracked objects:
 43550 ;;		On entry : 0/0
 43551 ;;		On exit  : 0/0
 43552 ;;		Unchanged: 0/0
 43553 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43554 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43556 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43557 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43558 ;;Total ram usage:        6 bytes
 43559 ;; Hardware stack levels used: 1
 43560 ;; Hardware stack levels required when called: 1
 43561 ;; This function calls:
 43562 ;;		Nothing
 43563 ;; This function is called by:
 43564 ;;		_EEPROM_Write
 43565 ;;		_readNVM
 43566 ;; This function uses a non-reentrant model
 43567 ;;
 43568                           
 43569                           	psect	text140
 43570   0079E2                     __ptext140:
 43571                           	callstack 0
 43572   0079E2                     _EEPROM_Read:
 43573                           	callstack 124
 43574   0079E2                     l1641:
 43575                           
 43576                           ;../../VLCBlib_PIC/nvm.c: 191:     while (NVMCON0bits.GO)
 43577   0079E2  0100               	movlb	0	; () banked
 43578   0079E4  B140               	btfsc	64,0,b	;volatile
 43579   0079E6  EFF7  F03C         	goto	u4401
 43580   0079EA  EFF9  F03C         	goto	u4400
 43581   0079EE                     u4401:
 43582   0079EE  EFF1  F03C         	goto	l1641
 43583   0079F2                     u4400:
 43584   0079F2                     
 43585                           ; BSR set to: 0
 43586                           ;../../VLCBlib_PIC/nvm.c: 194:     NVMADRU = 0x38;
 43587   0079F2  0E38               	movlw	56
 43588   0079F4  6F45               	movwf	69,b	;volatile
 43589                           
 43590                           ;../../VLCBlib_PIC/nvm.c: 195:     NVMADRH = (uint8_t) (index >> 8);
 43591   0079F6  C501  F504         	movff	EEPROM_Read@index,??_EEPROM_Read
 43592   0079FA  C502  F505         	movff	EEPROM_Read@index+1,??_EEPROM_Read+1
 43593   0079FE  C503  F506         	movff	EEPROM_Read@index+2,??_EEPROM_Read+2
 43594   007A02  C505  F504         	movff	??_EEPROM_Read+1,??_EEPROM_Read
 43595   007A06  C506  F505         	movff	??_EEPROM_Read+2,??_EEPROM_Read+1
 43596   007A0A  6A06               	clrf	(??_EEPROM_Read+2)^(0+1280),c
 43597   007A0C  5004               	movf	??_EEPROM_Read^(0+1280),w,c
 43598   007A0E  6F44               	movwf	68,b	;volatile
 43599   007A10                     
 43600                           ; BSR set to: 0
 43601                           ;../../VLCBlib_PIC/nvm.c: 196:     NVMADRL = (uint8_t) index;
 43602   007A10  C501  F043         	movff	EEPROM_Read@index,67	;volatile
 43603                           
 43604                           ;../../VLCBlib_PIC/nvm.c: 199:     NVMCON1bits.NVMCMD = 0x00;
 43605   007A14  0EF8               	movlw	-8
 43606   007A16  1741               	andwf	65,f,b	;volsfr
 43607   007A18                     
 43608                           ; BSR set to: 0
 43609                           ;../../VLCBlib_PIC/nvm.c: 202:     NVMCON0bits.GO = 1;
 43610   007A18  8140               	bsf	64,0,b	;volatile
 43611   007A1A                     l1644:
 43612                           
 43613                           ; BSR set to: 0
 43614                           ;../../VLCBlib_PIC/nvm.c: 203:     while (NVMCON0bits.GO)
 43615   007A1A  B140               	btfsc	64,0,b	;volatile
 43616   007A1C  EF12  F03D         	goto	u4411
 43617   007A20  EF14  F03D         	goto	u4410
 43618   007A24                     u4411:
 43619   007A24  EF0D  F03D         	goto	l1644
 43620   007A28                     u4410:
 43621   007A28                     
 43622                           ; BSR set to: 0
 43623                           ;../../VLCBlib_PIC/nvm.c: 207:     NVMCON1bits.NVMCMD = 0x07;
 43624   007A28  0E07               	movlw	7
 43625   007A2A  1341               	iorwf	65,f,b	;volsfr
 43626                           
 43627                           ;../../VLCBlib_PIC/nvm.c: 208:     return NVMDATL;
 43628   007A2C  5146               	movf	70,w,b	;volatile
 43629   007A2E                     
 43630                           ; BSR set to: 0
 43631   007A2E  0012               	return		;funcret
 43632   007A30                     __end_of_EEPROM_Read:
 43633                           	callstack 0
 43634                           
 43635 ;; *************** function _APP_testMode *****************
 43636 ;; Defined at:
 43637 ;;		line 138 in file "../main.c"
 43638 ;; Parameters:    Size  Location     Type
 43639 ;;		None
 43640 ;; Auto vars:     Size  Location     Type
 43641 ;;  i               1   16[COMRAM] unsigned char 
 43642 ;;  step            1   15[COMRAM] unsigned char 
 43643 ;;  c               1   14[COMRAM] unsigned char 
 43644 ;; Return value:  Size  Location     Type
 43645 ;;                  1    wreg      void 
 43646 ;; Registers used:
 43647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43648 ;; Tracked objects:
 43649 ;;		On entry : 0/0
 43650 ;;		On exit  : 0/0
 43651 ;;		Unchanged: 0/0
 43652 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43654 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43655 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43656 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43657 ;;Total ram usage:        7 bytes
 43658 ;; Hardware stack levels used: 1
 43659 ;; Hardware stack levels required when called: 2
 43660 ;; This function calls:
 43661 ;;		_initARGB
 43662 ;;		_tickGet
 43663 ;;		_updateLedRange
 43664 ;; This function is called by:
 43665 ;;		_checkPowerOnPb
 43666 ;; This function uses a non-reentrant model
 43667 ;;
 43668                           
 43669                           	psect	text141
 43670   003F9E                     __ptext141:
 43671                           	callstack 0
 43672   003F9E                     _APP_testMode:
 43673                           	callstack 123
 43674   003F9E                     
 43675                           ;../main.c: 139:     uint8_t step;;../main.c: 140:     uint8_t i,c;;../main.c: 142:     
      +                          initARGB();
 43676   003F9E  ECF1  F023         	call	_initARGB	;wreg free
 43677   003FA2                     
 43678                           ;../main.c: 143:     ANSELA = 0x00;
 43679   003FA2  0104               	movlb	4	; () banked
 43680   003FA4  6B00               	clrf	0,b	;volatile
 43681   003FA6                     
 43682                           ; BSR set to: 4
 43683                           ;../main.c: 144:     ANSELB = 0x00;
 43684   003FA6  6B08               	clrf	8,b	;volatile
 43685   003FA8                     
 43686                           ; BSR set to: 4
 43687                           ;../main.c: 145:     ANSELC = 0x00;
 43688   003FA8  6B10               	clrf	16,b	;volatile
 43689   003FAA                     
 43690                           ; BSR set to: 4
 43691                           ;../main.c: 148:     (INTCON0bits.GIE = 1);
 43692   003FAA  8ED6               	bsf	214,7,c	;volatile
 43693   003FAC                     
 43694                           ; BSR set to: 4
 43695                           ;../main.c: 150:     testTime.val = tickGet();
 43696   003FAC  EC75  F039         	call	_tickGet	;wreg free
 43697   003FB0  C501  F57C         	movff	?_tickGet,_testTime
 43698   003FB4  C502  F57D         	movff	?_tickGet+1,_testTime+1
 43699   003FB8  C503  F57E         	movff	?_tickGet+2,_testTime+2
 43700   003FBC  C504  F57F         	movff	?_tickGet+3,_testTime+3
 43701   003FC0                     
 43702                           ;../main.c: 152:     step = 0;
 43703   003FC0  6A10               	clrf	APP_testMode@step^(0+1280),c
 43704   003FC2                     l9225:
 43705                           
 43706                           ;../main.c: 154:         if ((tickGet() - testTime.val) > (4 * 62500)) {
 43707   003FC2  EC75  F039         	call	_tickGet	;wreg free
 43708   003FC6  0105               	movlb	5	; () banked
 43709   003FC8  517C               	movf	_testTime& (0+255),w,b
 43710   003FCA  5C01               	subwf	?_tickGet^(0+1280),w,c
 43711   003FCC  6E0B               	movwf	??_APP_testMode^(0+1280),c
 43712   003FCE  517D               	movf	(_testTime+1)& (0+255),w,b
 43713   003FD0  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 43714   003FD2  6E0C               	movwf	(??_APP_testMode+1)^(0+1280),c
 43715   003FD4  517E               	movf	(_testTime+2)& (0+255),w,b
 43716   003FD6  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 43717   003FD8  6E0D               	movwf	(??_APP_testMode+2)^(0+1280),c
 43718   003FDA  517F               	movf	(_testTime+3)& (0+255),w,b
 43719   003FDC  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 43720   003FDE  6E0E               	movwf	(??_APP_testMode+3)^(0+1280),c
 43721   003FE0  500E               	movf	(??_APP_testMode+3)^(0+1280),w,c
 43722   003FE2  E10D               	bnz	u6610
 43723   003FE4  0E91               	movlw	145
 43724   003FE6  5C0B               	subwf	??_APP_testMode^(0+1280),w,c
 43725   003FE8  0ED0               	movlw	208
 43726   003FEA  580C               	subwfb	(??_APP_testMode+1)^(0+1280),w,c
 43727   003FEC  0E03               	movlw	3
 43728   003FEE  580D               	subwfb	(??_APP_testMode+2)^(0+1280),w,c
 43729   003FF0  A0D8               	btfss	status,0,c
 43730   003FF2  EFFD  F01F         	goto	u6611
 43731   003FF6  EFFF  F01F         	goto	u6610
 43732   003FFA                     u6611:
 43733   003FFA  EFE4  F020         	goto	l9275
 43734   003FFE                     u6610:
 43735   003FFE                     
 43736                           ; BSR set to: 5
 43737                           ;../main.c: 155:             testTime.val = tickGet();
 43738   003FFE  EC75  F039         	call	_tickGet	;wreg free
 43739   004002  C501  F57C         	movff	?_tickGet,_testTime
 43740   004006  C502  F57D         	movff	?_tickGet+1,_testTime+1
 43741   00400A  C503  F57E         	movff	?_tickGet+2,_testTime+2
 43742   00400E  C504  F57F         	movff	?_tickGet+3,_testTime+3
 43743   004012                     
 43744                           ;../main.c: 156:             step++;
 43745   004012  2A10               	incf	APP_testMode@step^(0+1280),f,c
 43746   004014                     
 43747                           ;../main.c: 157:             if (step >= 6) step = 0;
 43748   004014  0E05               	movlw	5
 43749   004016  6410               	cpfsgt	APP_testMode@step^(0+1280),c
 43750   004018  EF10  F020         	goto	u6621
 43751   00401C  EF12  F020         	goto	u6620
 43752   004020                     u6621:
 43753   004020  EFC9  F020         	goto	l9273
 43754   004024                     u6620:
 43755   004024  6A10               	clrf	APP_testMode@step^(0+1280),c
 43756   004026  EFC9  F020         	goto	l9273
 43757   00402A                     l9235:
 43758                           
 43759                           ;../main.c: 161:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          x99));
 43760   00402A  0EFE               	movlw	254
 43761   00402C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43762   00402E  0E99               	movlw	153
 43763   004030  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43764   004032  0E00               	movlw	0
 43765   004034  ECCC  F03D         	call	_updateLedRange
 43766                           
 43767                           ;../main.c: 162:                     break;
 43768   004038  EFE4  F020         	goto	l9275
 43769   00403C                     l9237:
 43770                           
 43771                           ;../main.c: 164:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          xAA));
 43772   00403C  0EFE               	movlw	254
 43773   00403E  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43774   004040  0EAA               	movlw	170
 43775   004042  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43776   004044  0E00               	movlw	0
 43777   004046  ECCC  F03D         	call	_updateLedRange
 43778                           
 43779                           ;../main.c: 165:                     break;
 43780   00404A  EFE4  F020         	goto	l9275
 43781   00404E                     l9239:
 43782                           
 43783                           ;../main.c: 167:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          xBB));
 43784   00404E  0EFE               	movlw	254
 43785   004050  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43786   004052  0EBB               	movlw	187
 43787   004054  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43788   004056  0E00               	movlw	0
 43789   004058  ECCC  F03D         	call	_updateLedRange
 43790                           
 43791                           ;../main.c: 168:                     break;
 43792   00405C  EFE4  F020         	goto	l9275
 43793   004060                     l9241:
 43794                           
 43795                           ;../main.c: 170:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          x00));
 43796   004060  0EFE               	movlw	254
 43797   004062  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43798   004064  0E00               	movlw	0
 43799   004066  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43800   004068  0E00               	movlw	0
 43801   00406A  ECCC  F03D         	call	_updateLedRange
 43802   00406E                     
 43803                           ;../main.c: 171:                     for (i=0,c=1; i<255; i++) {
 43804   00406E  6A11               	clrf	APP_testMode@i^(0+1280),c
 43805   004070  0E01               	movlw	1
 43806   004072  6E0F               	movwf	APP_testMode@c^(0+1280),c
 43807   004074                     l9251:
 43808                           
 43809                           ;../main.c: 172:                         ledPaletteIndexes[i].asByte = c;
 43810   004074  0E00               	movlw	low _ledPaletteIndexes
 43811   004076  2411               	addwf	APP_testMode@i^(0+1280),w,c
 43812   004078  6ED9               	movwf	fsr2l,c
 43813   00407A  6ADA               	clrf	fsr2h,c
 43814   00407C  0E07               	movlw	high _ledPaletteIndexes
 43815   00407E  22DA               	addwfc	fsr2h,f,c
 43816   004080  C50F  F4DF         	movff	APP_testMode@c,indf2
 43817   004084                     
 43818                           ;../main.c: 173:                         c++;
 43819   004084  2A0F               	incf	APP_testMode@c^(0+1280),f,c
 43820   004086                     
 43821                           ;../main.c: 174:                         if (c >= 0x10) c=1;
 43822   004086  0E0F               	movlw	15
 43823   004088  640F               	cpfsgt	APP_testMode@c^(0+1280),c
 43824   00408A  EF49  F020         	goto	u6631
 43825   00408E  EF4B  F020         	goto	u6630
 43826   004092                     u6631:
 43827   004092  EF4D  F020         	goto	l9259
 43828   004096                     u6630:
 43829   004096  0E01               	movlw	1
 43830   004098  6E0F               	movwf	APP_testMode@c^(0+1280),c
 43831   00409A                     l9259:
 43832                           
 43833                           ;../main.c: 175:                     }
 43834   00409A  2A11               	incf	APP_testMode@i^(0+1280),f,c
 43835   00409C  2811               	incf	APP_testMode@i^(0+1280),w,c
 43836   00409E  A4D8               	btfss	status,2,c
 43837   0040A0  EF54  F020         	goto	u6641
 43838   0040A4  EF56  F020         	goto	u6640
 43839   0040A8                     u6641:
 43840   0040A8  EF3A  F020         	goto	l9251
 43841   0040AC                     u6640:
 43842   0040AC  EFE4  F020         	goto	l9275
 43843   0040B0                     l9263:
 43844                           
 43845                           ;../main.c: 178:                     updateLedRange(0, 19, (PaletteIndex)((uint8_t)0x0F)
      +                          );
 43846   0040B0  0E13               	movlw	19
 43847   0040B2  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43848   0040B4  0E0F               	movlw	15
 43849   0040B6  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43850   0040B8  0E00               	movlw	0
 43851   0040BA  ECCC  F03D         	call	_updateLedRange
 43852                           
 43853                           ;../main.c: 179:                     updateLedRange(20, 39, (PaletteIndex)((uint8_t)0xF0
      +                          ));
 43854   0040BE  0E27               	movlw	39
 43855   0040C0  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43856   0040C2  0EF0               	movlw	240
 43857   0040C4  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43858   0040C6  0E14               	movlw	20
 43859   0040C8  ECCC  F03D         	call	_updateLedRange
 43860                           
 43861                           ;../main.c: 180:                     updateLedRange(40, 59, (PaletteIndex)((uint8_t)0x0F
      +                          ));
 43862   0040CC  0E3B               	movlw	59
 43863   0040CE  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43864   0040D0  0E0F               	movlw	15
 43865   0040D2  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43866   0040D4  0E28               	movlw	40
 43867   0040D6  ECCC  F03D         	call	_updateLedRange
 43868                           
 43869                           ;../main.c: 181:                     updateLedRange(60, 79, (PaletteIndex)((uint8_t)0xF0
      +                          ));
 43870   0040DA  0E4F               	movlw	79
 43871   0040DC  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43872   0040DE  0EF0               	movlw	240
 43873   0040E0  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43874   0040E2  0E3C               	movlw	60
 43875   0040E4  ECCC  F03D         	call	_updateLedRange
 43876                           
 43877                           ;../main.c: 182:                     updateLedRange(80, 99, (PaletteIndex)((uint8_t)0x0F
      +                          ));
 43878   0040E8  0E63               	movlw	99
 43879   0040EA  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43880   0040EC  0E0F               	movlw	15
 43881   0040EE  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43882   0040F0  0E50               	movlw	80
 43883   0040F2  ECCC  F03D         	call	_updateLedRange
 43884                           
 43885                           ;../main.c: 183:                     updateLedRange(100, 119, (PaletteIndex)((uint8_t)0x
      +                          F0));
 43886   0040F6  0E77               	movlw	119
 43887   0040F8  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43888   0040FA  0EF0               	movlw	240
 43889   0040FC  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43890   0040FE  0E64               	movlw	100
 43891   004100  ECCC  F03D         	call	_updateLedRange
 43892                           
 43893                           ;../main.c: 184:                     updateLedRange(120, 139, (PaletteIndex)((uint8_t)0x
      +                          0F));
 43894   004104  0E8B               	movlw	139
 43895   004106  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43896   004108  0E0F               	movlw	15
 43897   00410A  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43898   00410C  0E78               	movlw	120
 43899   00410E  ECCC  F03D         	call	_updateLedRange
 43900                           
 43901                           ;../main.c: 185:                     updateLedRange(140, 159, (PaletteIndex)((uint8_t)0x
      +                          F0));
 43902   004112  0E9F               	movlw	159
 43903   004114  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43904   004116  0EF0               	movlw	240
 43905   004118  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43906   00411A  0E8C               	movlw	140
 43907   00411C  ECCC  F03D         	call	_updateLedRange
 43908                           
 43909                           ;../main.c: 186:                     updateLedRange(160, 179, (PaletteIndex)((uint8_t)0x
      +                          0F));
 43910   004120  0EB3               	movlw	179
 43911   004122  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43912   004124  0E0F               	movlw	15
 43913   004126  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43914   004128  0EA0               	movlw	160
 43915   00412A  ECCC  F03D         	call	_updateLedRange
 43916                           
 43917                           ;../main.c: 187:                     updateLedRange(180, 199, (PaletteIndex)((uint8_t)0x
      +                          F0));
 43918   00412E  0EC7               	movlw	199
 43919   004130  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43920   004132  0EF0               	movlw	240
 43921   004134  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43922   004136  0EB4               	movlw	180
 43923   004138  ECCC  F03D         	call	_updateLedRange
 43924                           
 43925                           ;../main.c: 188:                     updateLedRange(200, 219, (PaletteIndex)((uint8_t)0x
      +                          0F));
 43926   00413C  0EDB               	movlw	219
 43927   00413E  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43928   004140  0E0F               	movlw	15
 43929   004142  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43930   004144  0EC8               	movlw	200
 43931   004146  ECCC  F03D         	call	_updateLedRange
 43932                           
 43933                           ;../main.c: 189:                     updateLedRange(220, 239, (PaletteIndex)((uint8_t)0x
      +                          F0));
 43934   00414A  0EEF               	movlw	239
 43935   00414C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43936   00414E  0EF0               	movlw	240
 43937   004150  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43938   004152  0EDC               	movlw	220
 43939   004154  ECCC  F03D         	call	_updateLedRange
 43940                           
 43941                           ;../main.c: 190:                     updateLedRange(240, 255 -1, (PaletteIndex)((uint8_t
      +                          )0x0F));
 43942   004158  0EFE               	movlw	254
 43943   00415A  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43944   00415C  0E0F               	movlw	15
 43945   00415E  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43946   004160  0EF0               	movlw	240
 43947   004162  ECCC  F03D         	call	_updateLedRange
 43948                           
 43949                           ;../main.c: 191:                     break;
 43950   004166  EFE4  F020         	goto	l9275
 43951   00416A                     l9265:
 43952                           
 43953                           ;../main.c: 193:                     updateLedRange(0, 255 -1, (PaletteIndex)((uint8_t)0
      +                          x00));
 43954   00416A  0EFE               	movlw	254
 43955   00416C  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 43956   00416E  0E00               	movlw	0
 43957   004170  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 43958   004172  0E00               	movlw	0
 43959   004174  ECCC  F03D         	call	_updateLedRange
 43960   004178                     
 43961                           ;../main.c: 194:                     i=0;
 43962   004178  6A11               	clrf	APP_testMode@i^(0+1280),c
 43963   00417A                     
 43964                           ;../main.c: 195:                     subtestTime.val = tickGet();
 43965   00417A  EC75  F039         	call	_tickGet	;wreg free
 43966   00417E  C501  F578         	movff	?_tickGet,_subtestTime
 43967   004182  C502  F579         	movff	?_tickGet+1,_subtestTime+1
 43968   004186  C503  F57A         	movff	?_tickGet+2,_subtestTime+2
 43969   00418A  C504  F57B         	movff	?_tickGet+3,_subtestTime+3
 43970                           
 43971                           ;../main.c: 196:                     break;
 43972   00418E  EFE4  F020         	goto	l9275
 43973   004192                     l9273:
 43974   004192  5010               	movf	APP_testMode@step^(0+1280),w,c
 43975                           
 43976                           ; Switch size 1, requested type "simple"
 43977                           ; Number of cases is 6, Range of values is 0 to 5
 43978                           ; switch strategies available:
 43979                           ; Name         Instructions Cycles
 43980                           ; simple_byte           19    10 (average)
 43981                           ;	Chosen strategy is simple_byte
 43982   004194  0A00               	xorlw	0	; case 0
 43983   004196  B4D8               	btfsc	status,2,c
 43984   004198  EF15  F020         	goto	l9235
 43985   00419C  0A01               	xorlw	1	; case 1
 43986   00419E  B4D8               	btfsc	status,2,c
 43987   0041A0  EF1E  F020         	goto	l9237
 43988   0041A4  0A03               	xorlw	3	; case 2
 43989   0041A6  B4D8               	btfsc	status,2,c
 43990   0041A8  EF27  F020         	goto	l9239
 43991   0041AC  0A01               	xorlw	1	; case 3
 43992   0041AE  B4D8               	btfsc	status,2,c
 43993   0041B0  EF30  F020         	goto	l9241
 43994   0041B4  0A07               	xorlw	7	; case 4
 43995   0041B6  B4D8               	btfsc	status,2,c
 43996   0041B8  EF58  F020         	goto	l9263
 43997   0041BC  0A01               	xorlw	1	; case 5
 43998   0041BE  B4D8               	btfsc	status,2,c
 43999   0041C0  EFB5  F020         	goto	l9265
 44000   0041C4  EFE4  F020         	goto	l9275
 44001   0041C8                     l9275:
 44002                           
 44003                           ;../main.c: 199:         if (step == 5) {
 44004   0041C8  0E05               	movlw	5
 44005   0041CA  1810               	xorwf	APP_testMode@step^(0+1280),w,c
 44006   0041CC  A4D8               	btfss	status,2,c
 44007   0041CE  EFEB  F020         	goto	u6651
 44008   0041D2  EFED  F020         	goto	u6650
 44009   0041D6                     u6651:
 44010   0041D6  EFE1  F01F         	goto	l9225
 44011   0041DA                     u6650:
 44012   0041DA                     
 44013                           ;../main.c: 200:             if ((tickGet() - subtestTime.val) > (62500/10)) {
 44014   0041DA  EC75  F039         	call	_tickGet	;wreg free
 44015   0041DE  0105               	movlb	5	; () banked
 44016   0041E0  5178               	movf	_subtestTime& (0+255),w,b
 44017   0041E2  5C01               	subwf	?_tickGet^(0+1280),w,c
 44018   0041E4  6E0B               	movwf	??_APP_testMode^(0+1280),c
 44019   0041E6  5179               	movf	(_subtestTime+1)& (0+255),w,b
 44020   0041E8  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 44021   0041EA  6E0C               	movwf	(??_APP_testMode+1)^(0+1280),c
 44022   0041EC  517A               	movf	(_subtestTime+2)& (0+255),w,b
 44023   0041EE  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 44024   0041F0  6E0D               	movwf	(??_APP_testMode+2)^(0+1280),c
 44025   0041F2  517B               	movf	(_subtestTime+3)& (0+255),w,b
 44026   0041F4  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 44027   0041F6  6E0E               	movwf	(??_APP_testMode+3)^(0+1280),c
 44028   0041F8  500E               	movf	(??_APP_testMode+3)^(0+1280),w,c
 44029   0041FA  100D               	iorwf	(??_APP_testMode+2)^(0+1280),w,c
 44030   0041FC  E10B               	bnz	u6660
 44031   0041FE  0E6B               	movlw	107
 44032   004200  5C0B               	subwf	??_APP_testMode^(0+1280),w,c
 44033   004202  0E18               	movlw	24
 44034   004204  580C               	subwfb	(??_APP_testMode+1)^(0+1280),w,c
 44035   004206  A0D8               	btfss	status,0,c
 44036   004208  EF08  F021         	goto	u6661
 44037   00420C  EF0A  F021         	goto	u6660
 44038   004210                     u6661:
 44039   004210  EFE1  F01F         	goto	l9225
 44040   004214                     u6660:
 44041   004214                     
 44042                           ; BSR set to: 5
 44043                           ;../main.c: 201:                 subtestTime.val = tickGet();
 44044   004214  EC75  F039         	call	_tickGet	;wreg free
 44045   004218  C501  F578         	movff	?_tickGet,_subtestTime
 44046   00421C  C502  F579         	movff	?_tickGet+1,_subtestTime+1
 44047   004220  C503  F57A         	movff	?_tickGet+2,_subtestTime+2
 44048   004224  C504  F57B         	movff	?_tickGet+3,_subtestTime+3
 44049   004228                     
 44050                           ;../main.c: 202:                 updateLedRange(i,i, (PaletteIndex)((uint8_t)0xFF));
 44051   004228  C511  F501         	movff	APP_testMode@i,updateLedRange@end_ledno
 44052   00422C  0EFF               	movlw	255
 44053   00422E  6E02               	movwf	updateLedRange@colourIndexPair^(0+1280),c
 44054   004230  5011               	movf	APP_testMode@i^(0+1280),w,c
 44055   004232  ECCC  F03D         	call	_updateLedRange
 44056   004236                     
 44057                           ;../main.c: 203:                 i++;
 44058   004236  2A11               	incf	APP_testMode@i^(0+1280),f,c
 44059   004238  EFE1  F01F         	goto	l9225
 44060   00423C  0012               	return		;funcret
 44061   00423E                     __end_of_APP_testMode:
 44062                           	callstack 0
 44063                           
 44064 ;; *************** function _updateLedRange *****************
 44065 ;; Defined at:
 44066 ;;		line 262 in file "../canargb_leds.c"
 44067 ;; Parameters:    Size  Location     Type
 44068 ;;  start_ledno     1    wreg     unsigned char 
 44069 ;;  end_ledno       1    0[COMRAM] unsigned char 
 44070 ;;  colourIndexP    1    1[COMRAM] struct PaletteIndex
 44071 ;; Auto vars:     Size  Location     Type
 44072 ;;  start_ledno     1    2[COMRAM] unsigned char 
 44073 ;;  ledno           1    3[COMRAM] unsigned char 
 44074 ;; Return value:  Size  Location     Type
 44075 ;;                  1    wreg      void 
 44076 ;; Registers used:
 44077 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44078 ;; Tracked objects:
 44079 ;;		On entry : 0/0
 44080 ;;		On exit  : 0/0
 44081 ;;		Unchanged: 0/0
 44082 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44084 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44086 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44087 ;;Total ram usage:        4 bytes
 44088 ;; Hardware stack levels used: 1
 44089 ;; Hardware stack levels required when called: 1
 44090 ;; This function calls:
 44091 ;;		Nothing
 44092 ;; This function is called by:
 44093 ;;		_APP_testMode
 44094 ;;		_setup
 44095 ;;		_APP_processConsumedEvent
 44096 ;; This function uses a non-reentrant model
 44097 ;;
 44098                           
 44099                           	psect	text142
 44100   007B98                     __ptext142:
 44101                           	callstack 0
 44102   007B98                     _updateLedRange:
 44103                           	callstack 124
 44104                           
 44105                           ;incstack = 0
 44106                           ;updateLedRange@start_ledno stored from wreg
 44107   007B98  6E03               	movwf	updateLedRange@start_ledno^(0+1280),c
 44108   007B9A                     
 44109                           ;../canargb_leds.c: 263:     uint8_t ledno;;../canargb_leds.c: 264:     if (end_ledno >=
      +                           255) end_ledno = 255 -1;
 44110   007B9A  2801               	incf	updateLedRange@end_ledno^(0+1280),w,c
 44111   007B9C  A4D8               	btfss	status,2,c
 44112   007B9E  EFD3  F03D         	goto	u5381
 44113   007BA2  EFD5  F03D         	goto	u5380
 44114   007BA6                     u5381:
 44115   007BA6  EFD7  F03D         	goto	l7937
 44116   007BAA                     u5380:
 44117   007BAA  0EFE               	movlw	254
 44118   007BAC  6E01               	movwf	updateLedRange@end_ledno^(0+1280),c
 44119   007BAE                     l7937:
 44120                           
 44121                           ;../canargb_leds.c: 266:     for(ledno=start_ledno; ledno<=end_ledno; ledno++) {
 44122   007BAE  C503  F504         	movff	updateLedRange@start_ledno,updateLedRange@ledno
 44123   007BB2  EFE4  F03D         	goto	l7943
 44124   007BB6                     l7939:
 44125                           
 44126                           ;../canargb_leds.c: 267:         ledPaletteIndexes[ledno] = colourIndexPair;
 44127   007BB6  0E00               	movlw	low _ledPaletteIndexes
 44128   007BB8  2404               	addwf	updateLedRange@ledno^(0+1280),w,c
 44129   007BBA  6ED9               	movwf	fsr2l,c
 44130   007BBC  6ADA               	clrf	fsr2h,c
 44131   007BBE  0E07               	movlw	high _ledPaletteIndexes
 44132   007BC0  22DA               	addwfc	fsr2h,f,c
 44133   007BC2  C502  F4DF         	movff	updateLedRange@colourIndexPair,indf2
 44134   007BC6                     
 44135                           ;../canargb_leds.c: 268:     }
 44136   007BC6  2A04               	incf	updateLedRange@ledno^(0+1280),f,c
 44137   007BC8                     l7943:
 44138   007BC8  5004               	movf	updateLedRange@ledno^(0+1280),w,c
 44139   007BCA  5C01               	subwf	updateLedRange@end_ledno^(0+1280),w,c
 44140   007BCC  B0D8               	btfsc	status,0,c
 44141   007BCE  EFEB  F03D         	goto	u5391
 44142   007BD2  EFED  F03D         	goto	u5390
 44143   007BD6                     u5391:
 44144   007BD6  EFDB  F03D         	goto	l7939
 44145   007BDA                     u5390:
 44146   007BDA  0012               	return		;funcret
 44147   007BDC                     __end_of_updateLedRange:
 44148                           	callstack 0
 44149                           
 44150 ;; *************** function _tickGet *****************
 44151 ;; Defined at:
 44152 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 44153 ;; Parameters:    Size  Location     Type
 44154 ;;		None
 44155 ;; Auto vars:     Size  Location     Type
 44156 ;;  currentTime     4    6[COMRAM] struct _TickValue
 44157 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 44158 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 44159 ;; Return value:  Size  Location     Type
 44160 ;;                  4    0[COMRAM] unsigned long 
 44161 ;; Registers used:
 44162 ;;		wreg, status,2, status,0
 44163 ;; Tracked objects:
 44164 ;;		On entry : 0/0
 44165 ;;		On exit  : 0/0
 44166 ;;		Unchanged: 0/0
 44167 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44168 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44169 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44171 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44172 ;;Total ram usage:       10 bytes
 44173 ;; Hardware stack levels used: 1
 44174 ;; Hardware stack levels required when called: 1
 44175 ;; This function calls:
 44176 ;;		Nothing
 44177 ;; This function is called by:
 44178 ;;		_APP_testMode
 44179 ;;		_setup
 44180 ;;		_loop
 44181 ;;		_canPowerUp
 44182 ;;		_startEnumeration
 44183 ;;		_handleSelfEnumeration
 44184 ;;		_processEnumeration
 44185 ;;		_mnsPowerUp
 44186 ;;		_mnsPoll
 44187 ;;		_leds_powerUp
 44188 ;;		_leds_poll
 44189 ;;		_pbDownTimer
 44190 ;;		_pbUpTimer
 44191 ;;		_poll
 44192 ;; This function uses a non-reentrant model
 44193 ;;
 44194                           
 44195                           	psect	text143
 44196   0072EA                     __ptext143:
 44197                           	callstack 0
 44198   0072EA                     _tickGet:
 44199                           	callstack 124
 44200   0072EA                     
 44201                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 44202   0072EA  6A09               	clrf	(tickGet@currentTime+2)^(0+1280),c
 44203                           
 44204                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 44205   0072EC  6A0A               	clrf	(tickGet@currentTime+3)^(0+1280),c
 44206                           
 44207                           ;../../VLCBlib_PIC/ticktime.c: 169:     TMR0IE = 0;
 44208   0072EE  9EA1               	bcf	1185,7,c	;volatile
 44209   0072F0                     l7181:
 44210                           
 44211                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = TMR0IF;
 44212   0072F0  0E00               	movlw	0
 44213   0072F2  BEB1               	btfsc	1201,7,c	;volatile
 44214   0072F4  0E01               	movlw	1
 44215   0072F6  6E06               	movwf	tickGet@IntFlag1^(0+1280),c
 44216   0072F8                     
 44217                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 44218   0072F8  C318 F507          	movff	792,tickGet@currentTime	;volatile
 44219   0072FC                     
 44220                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 44221   0072FC  C319 F508          	movff	793,tickGet@currentTime+1	;volatile
 44222                           
 44223                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = TMR0IF;
 44224   007300  0E00               	movlw	0
 44225   007302  BEB1               	btfsc	1201,7,c	;volatile
 44226   007304  0E01               	movlw	1
 44227   007306  6E05               	movwf	tickGet@IntFlag2^(0+1280),c
 44228   007308                     
 44229                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 44230   007308  5005               	movf	tickGet@IntFlag2^(0+1280),w,c
 44231   00730A  1806               	xorwf	tickGet@IntFlag1^(0+1280),w,c
 44232   00730C  A4D8               	btfss	status,2,c
 44233   00730E  EF8B  F039         	goto	u4471
 44234   007312  EF8D  F039         	goto	u4470
 44235   007316                     u4471:
 44236   007316  EF78  F039         	goto	l7181
 44237   00731A                     u4470:
 44238   00731A                     
 44239                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 44240   00731A  5006               	movf	tickGet@IntFlag1^(0+1280),w,c
 44241   00731C  B4D8               	btfsc	status,2,c
 44242   00731E  EF93  F039         	goto	u4481
 44243   007322  EF95  F039         	goto	u4480
 44244   007326                     u4481:
 44245   007326  EFA1  F039         	goto	l7199
 44246   00732A                     u4480:
 44247   00732A                     
 44248                           ;../../VLCBlib_PIC/ticktime.c: 178:         TMR0IF = 0;
 44249   00732A  9EB1               	bcf	1201,7,c	;volatile
 44250   00732C                     
 44251                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 44252   00732C  0105               	movlb	5	; () banked
 44253   00732E  2B9A               	incf	_timerExtension1& (0+255),f,b	;volatile
 44254   007330                     
 44255                           ; BSR set to: 5
 44256                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 44257   007330  519A               	movf	_timerExtension1& (0+255),w,b	;volatile
 44258   007332  A4D8               	btfss	status,2,c
 44259   007334  EF9E  F039         	goto	u4491
 44260   007338  EFA0  F039         	goto	u4490
 44261   00733C                     u4491:
 44262   00733C  EFA1  F039         	goto	l7199
 44263   007340                     u4490:
 44264   007340                     
 44265                           ; BSR set to: 5
 44266                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 44267   007340  2B99               	incf	_timerExtension2& (0+255),f,b	;volatile
 44268   007342                     l7199:
 44269                           
 44270                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 44271   007342  0105               	movlb	5	; () banked
 44272   007344  519A               	movf	_timerExtension1& (0+255),w,b	;volatile
 44273   007346  2609               	addwf	(tickGet@currentTime+2)^(0+1280),f,c
 44274   007348                     
 44275                           ; BSR set to: 5
 44276                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 44277   007348  5199               	movf	_timerExtension2& (0+255),w,b	;volatile
 44278   00734A  260A               	addwf	(tickGet@currentTime+3)^(0+1280),f,c
 44279   00734C                     
 44280                           ; BSR set to: 5
 44281                           ;../../VLCBlib_PIC/ticktime.c: 191:     TMR0IE = 1;
 44282   00734C  8EA1               	bsf	1185,7,c	;volatile
 44283   00734E                     
 44284                           ; BSR set to: 5
 44285                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 44286   00734E  C507  F501         	movff	tickGet@currentTime,?_tickGet
 44287   007352  C508  F502         	movff	tickGet@currentTime+1,?_tickGet+1
 44288   007356  C509  F503         	movff	tickGet@currentTime+2,?_tickGet+2
 44289   00735A  C50A  F504         	movff	tickGet@currentTime+3,?_tickGet+3
 44290   00735E                     
 44291                           ; BSR set to: 5
 44292   00735E  0012               	return		;funcret
 44293   007360                     __end_of_tickGet:
 44294                           	callstack 0
 44295                           
 44296 ;; *************** function _initARGB *****************
 44297 ;; Defined at:
 44298 ;;		line 60 in file "../canargb_leds.c"
 44299 ;; Parameters:    Size  Location     Type
 44300 ;;		None
 44301 ;; Auto vars:     Size  Location     Type
 44302 ;;  ledno           1    0[COMRAM] unsigned char 
 44303 ;; Return value:  Size  Location     Type
 44304 ;;                  1    wreg      void 
 44305 ;; Registers used:
 44306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44307 ;; Tracked objects:
 44308 ;;		On entry : 0/0
 44309 ;;		On exit  : 0/0
 44310 ;;		Unchanged: 0/0
 44311 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44313 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44315 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44316 ;;Total ram usage:        1 bytes
 44317 ;; Hardware stack levels used: 1
 44318 ;; Hardware stack levels required when called: 1
 44319 ;; This function calls:
 44320 ;;		Nothing
 44321 ;; This function is called by:
 44322 ;;		_APP_testMode
 44323 ;;		_setup
 44324 ;; This function uses a non-reentrant model
 44325 ;;
 44326                           
 44327                           	psect	text144
 44328   0047E2                     __ptext144:
 44329                           	callstack 0
 44330   0047E2                     _initARGB:
 44331                           	callstack 124
 44332   0047E2                     
 44333                           ;../canargb_leds.c: 61:     uint8_t ledno;;../canargb_leds.c: 63:     flashState = 0;
 44334   0047E2  0105               	movlb	5	; () banked
 44335   0047E4  6BAC               	clrf	_flashState& (0+255),b
 44336                           
 44337                           ;../canargb_leds.c: 65:     for (ledno=0; ledno <255; ledno++) {
 44338   0047E6  6A01               	clrf	initARGB@ledno^(0+1280),c
 44339   0047E8                     l8359:
 44340                           
 44341                           ;../canargb_leds.c: 66:         leds[ledno].r = 0;
 44342   0047E8  5001               	movf	initARGB@ledno^(0+1280),w,c
 44343   0047EA  0D03               	mullw	3
 44344   0047EC  0E7C               	movlw	low _leds
 44345   0047EE  24F3               	addwf	243,w,c
 44346   0047F0  6ED9               	movwf	fsr2l,c
 44347   0047F2  0E0B               	movlw	high _leds
 44348   0047F4  20F4               	addwfc	prodh,w,c
 44349   0047F6  6EDA               	movwf	fsr2h,c
 44350   0047F8  6ADF               	clrf	indf2,c
 44351                           
 44352                           ;../canargb_leds.c: 67:         leds[ledno].g = 0;
 44353   0047FA  5001               	movf	initARGB@ledno^(0+1280),w,c
 44354   0047FC  0D03               	mullw	3
 44355   0047FE  0E7D               	movlw	low (_leds+1)
 44356   004800  24F3               	addwf	243,w,c
 44357   004802  6ED9               	movwf	fsr2l,c
 44358   004804  0E0B               	movlw	high (_leds+1)
 44359   004806  20F4               	addwfc	prodh,w,c
 44360   004808  6EDA               	movwf	fsr2h,c
 44361   00480A  6ADF               	clrf	indf2,c
 44362                           
 44363                           ;../canargb_leds.c: 68:         leds[ledno].b = 0;
 44364   00480C  5001               	movf	initARGB@ledno^(0+1280),w,c
 44365   00480E  0D03               	mullw	3
 44366   004810  0E7E               	movlw	low (_leds+2)
 44367   004812  24F3               	addwf	243,w,c
 44368   004814  6ED9               	movwf	fsr2l,c
 44369   004816  0E0B               	movlw	high (_leds+2)
 44370   004818  20F4               	addwfc	prodh,w,c
 44371   00481A  6EDA               	movwf	fsr2h,c
 44372   00481C  6ADF               	clrf	indf2,c
 44373   00481E                     
 44374                           ;../canargb_leds.c: 69:         ledPaletteIndexes[ledno].asNibbles.flashOnPaletteIndex =
      +                           0;
 44375   00481E  0E00               	movlw	low _ledPaletteIndexes
 44376   004820  2401               	addwf	initARGB@ledno^(0+1280),w,c
 44377   004822  6ED9               	movwf	fsr2l,c
 44378   004824  6ADA               	clrf	fsr2h,c
 44379   004826  0E07               	movlw	high _ledPaletteIndexes
 44380   004828  22DA               	addwfc	fsr2h,f,c
 44381   00482A  0EF0               	movlw	-16
 44382   00482C  16DF               	andwf	223,f,c
 44383   00482E                     
 44384                           ;../canargb_leds.c: 70:         ledPaletteIndexes[ledno].asNibbles.flashOffPaletteIndex 
      +                          = 0;
 44385   00482E  0E00               	movlw	low _ledPaletteIndexes
 44386   004830  2401               	addwf	initARGB@ledno^(0+1280),w,c
 44387   004832  6ED9               	movwf	fsr2l,c
 44388   004834  6ADA               	clrf	fsr2h,c
 44389   004836  0E07               	movlw	high _ledPaletteIndexes
 44390   004838  22DA               	addwfc	fsr2h,f,c
 44391   00483A  0E0F               	movlw	-241
 44392   00483C  16DF               	andwf	223,f,c
 44393   00483E                     
 44394                           ;../canargb_leds.c: 71:     }
 44395   00483E  2A01               	incf	initARGB@ledno^(0+1280),f,c
 44396   004840  2801               	incf	initARGB@ledno^(0+1280),w,c
 44397   004842  A4D8               	btfss	status,2,c
 44398   004844  EF26  F024         	goto	u5721
 44399   004848  EF28  F024         	goto	u5720
 44400   00484C                     u5721:
 44401   00484C  EFF4  F023         	goto	l8359
 44402   004850                     u5720:
 44403   004850                     
 44404                           ;../canargb_leds.c: 106:     TRISC = 0;
 44405   004850  6AC8               	clrf	200,c	;volatile
 44406   004852                     
 44407                           ;../canargb_leds.c: 107:     RC0PPS = 0x43;
 44408   004852  0E43               	movlw	67
 44409   004854  0102               	movlb	2	; () banked
 44410   004856  6F11               	movwf	17,b	;volatile
 44411                           
 44412                           ;../canargb_leds.c: 108:     RC1PPS = 0x32;
 44413   004858  0E32               	movlw	50
 44414   00485A  6F12               	movwf	18,b	;volatile
 44415                           
 44416                           ;../canargb_leds.c: 109:     RC2PPS = 0x31;
 44417   00485C  0E31               	movlw	49
 44418   00485E  6F13               	movwf	19,b	;volatile
 44419                           
 44420                           ;../canargb_leds.c: 110:     RC3PPS = 0x01;
 44421   004860  0E01               	movlw	1
 44422   004862  6F14               	movwf	20,b	;volatile
 44423                           
 44424                           ;../canargb_leds.c: 111:     RC4PPS = 0x02;
 44425   004864  0E02               	movlw	2
 44426   004866  6F15               	movwf	21,b	;volatile
 44427                           
 44428                           ;../canargb_leds.c: 112:     RC5PPS = 0x04;
 44429   004868  0E04               	movlw	4
 44430   00486A  6F16               	movwf	22,b	;volatile
 44431   00486C                     
 44432                           ; BSR set to: 2
 44433                           ;../canargb_leds.c: 113:     RC6PPS = 0x00;
 44434   00486C  6B17               	clrf	23,b	;volatile
 44435   00486E                     
 44436                           ; BSR set to: 2
 44437                           ;../canargb_leds.c: 116:     {;../canargb_leds.c: 117:         SPI1CON0bits.LSBF=0;
 44438   00486E  0100               	movlb	0	; () banked
 44439   004870  9584               	bcf	132,2,b	;volatile
 44440   004872                     
 44441                           ; BSR set to: 0
 44442                           ;../canargb_leds.c: 118:         SPI1CON0bits.BMODE=1;
 44443   004872  8184               	bsf	132,0,b	;volatile
 44444   004874                     
 44445                           ; BSR set to: 0
 44446                           ;../canargb_leds.c: 119:         SPI1CON0bits.MST=1;
 44447   004874  8384               	bsf	132,1,b	;volatile
 44448                           
 44449                           ;../canargb_leds.c: 121:         SPI1TWIDTHbits.TWIDTH=0;
 44450   004876  0EF8               	movlw	-8
 44451   004878  1788               	andwf	136,f,b	;volatile
 44452                           
 44453                           ;../canargb_leds.c: 122:         SPI1TCNT=0;
 44454   00487A  0E00               	movlw	0
 44455   00487C  6F83               	movwf	131,b	;volatile
 44456   00487E  0E00               	movlw	0
 44457   004880  6F82               	movwf	130,b	;volatile
 44458   004882                     
 44459                           ; BSR set to: 0
 44460                           ;../canargb_leds.c: 124:         SPI1CON1bits.SMP=0;
 44461   004882  9F85               	bcf	133,7,b	;volatile
 44462   004884                     
 44463                           ; BSR set to: 0
 44464                           ;../canargb_leds.c: 125:         SPI1CON1bits.CKE=1;
 44465   004884  8D85               	bsf	133,6,b	;volatile
 44466   004886                     
 44467                           ; BSR set to: 0
 44468                           ;../canargb_leds.c: 126:         SPI1CON1bits.CKP=0;
 44469   004886  9B85               	bcf	133,5,b	;volatile
 44470   004888                     
 44471                           ; BSR set to: 0
 44472                           ;../canargb_leds.c: 127:         SPI1CON1bits.SDIP=1;
 44473   004888  8385               	bsf	133,1,b	;volatile
 44474   00488A                     
 44475                           ; BSR set to: 0
 44476                           ;../canargb_leds.c: 129:         SPI1CON2bits.SSET=0;
 44477   00488A  9586               	bcf	134,2,b	;volatile
 44478   00488C                     
 44479                           ; BSR set to: 0
 44480                           ;../canargb_leds.c: 130:         SPI1CON1bits.SSP=1;
 44481   00488C  8585               	bsf	133,2,b	;volatile
 44482   00488E                     
 44483                           ; BSR set to: 0
 44484                           ;../canargb_leds.c: 131:         SPI1CON2bits.TXR=1;
 44485   00488E  8386               	bsf	134,1,b	;volatile
 44486   004890                     
 44487                           ; BSR set to: 0
 44488                           ;../canargb_leds.c: 132:         SPI1CON2bits.RXR=0;
 44489   004890  9186               	bcf	134,0,b	;volatile
 44490   004892                     
 44491                           ; BSR set to: 0
 44492                           ;../canargb_leds.c: 134:         SPI1CLKbits.CLKSEL=0b00000;
 44493   004892  6B8C               	clrf	140,b	;volatile
 44494                           
 44495                           ;../canargb_leds.c: 138:         SPI1BAUDbits.BAUD = 39;
 44496   004894  0E27               	movlw	39
 44497   004896  6F89               	movwf	137,b	;volatile
 44498   004898                     
 44499                           ; BSR set to: 0
 44500                           ;../canargb_leds.c: 140:         SPI1INTF=0;
 44501   004898  6B8A               	clrf	138,b	;volatile
 44502   00489A                     
 44503                           ; BSR set to: 0
 44504                           ;../canargb_leds.c: 141:         SPI1CON0bits.EN=1;
 44505   00489A  8F84               	bsf	132,7,b	;volatile
 44506   00489C                     
 44507                           ; BSR set to: 0
 44508                           ;../canargb_leds.c: 142:     };../canargb_leds.c: 145:     {;../canargb_leds.c: 146:    
      +                               CLCSELECT = 0;
 44509   00489C  6BD5               	clrf	213,b	;volatile
 44510                           
 44511                           ;../canargb_leds.c: 147:         CLCnCON = 0x82;
 44512   00489E  0E82               	movlw	130
 44513   0048A0  6FD6               	movwf	214,b	;volatile
 44514                           
 44515                           ;../canargb_leds.c: 148:         CLCnPOL = 0x0E;
 44516   0048A2  0E0E               	movlw	14
 44517   0048A4  6FD7               	movwf	215,b	;volatile
 44518                           
 44519                           ;../canargb_leds.c: 149:         CLCnSEL0 = 0x41;
 44520   0048A6  0E41               	movlw	65
 44521   0048A8  6FD8               	movwf	216,b	;volatile
 44522                           
 44523                           ;../canargb_leds.c: 150:         CLCnSEL1 = 0x41;
 44524   0048AA  0E41               	movlw	65
 44525   0048AC  6FD9               	movwf	217,b	;volatile
 44526                           
 44527                           ;../canargb_leds.c: 151:         CLCnSEL2 = 0x41;
 44528   0048AE  0E41               	movlw	65
 44529   0048B0  6FDA               	movwf	218,b	;volatile
 44530                           
 44531                           ;../canargb_leds.c: 152:         CLCnSEL3 = 0x41;
 44532   0048B2  0E41               	movlw	65
 44533   0048B4  6FDB               	movwf	219,b	;volatile
 44534                           
 44535                           ;../canargb_leds.c: 153:         CLCnGLS0 = 1;
 44536   0048B6  0E01               	movlw	1
 44537   0048B8  6FDC               	movwf	220,b	;volatile
 44538   0048BA                     
 44539                           ; BSR set to: 0
 44540                           ;../canargb_leds.c: 154:         CLCnGLS1 = 0;
 44541   0048BA  6BDD               	clrf	221,b	;volatile
 44542   0048BC                     
 44543                           ; BSR set to: 0
 44544                           ;../canargb_leds.c: 155:         CLCnGLS2 = 0;
 44545   0048BC  6BDE               	clrf	222,b	;volatile
 44546   0048BE                     
 44547                           ; BSR set to: 0
 44548                           ;../canargb_leds.c: 156:         CLCnGLS3 = 0;
 44549   0048BE  6BDF               	clrf	223,b	;volatile
 44550   0048C0                     
 44551                           ; BSR set to: 0
 44552                           ;../canargb_leds.c: 157:     };../canargb_leds.c: 160:     {;../canargb_leds.c: 161:    
      +                               T2CON = 0x0;
 44553   0048C0  0103               	movlb	3	; () banked
 44554   0048C2  6B24               	clrf	36,b	;volatile
 44555                           
 44556                           ;../canargb_leds.c: 162:         T2CLKCON = 0x02;
 44557   0048C4  0E02               	movlw	2
 44558   0048C6  6F26               	movwf	38,b	;volatile
 44559                           
 44560                           ;../canargb_leds.c: 163:         T2HLT = 0x11;
 44561   0048C8  0E11               	movlw	17
 44562   0048CA  6F25               	movwf	37,b	;volatile
 44563                           
 44564                           ;../canargb_leds.c: 164:         T2RST = 0x12;
 44565   0048CC  0E12               	movlw	18
 44566   0048CE  6F27               	movwf	39,b	;volatile
 44567                           
 44568                           ;../canargb_leds.c: 168:         T2PR = 51;
 44569   0048D0  0E33               	movlw	51
 44570   0048D2  6F23               	movwf	35,b	;volatile
 44571   0048D4                     
 44572                           ; BSR set to: 3
 44573                           ;../canargb_leds.c: 170:     };../canargb_leds.c: 173:     {;../canargb_leds.c: 174:    
      +                               T4CON = 0x0;
 44574   0048D4  6B30               	clrf	48,b	;volatile
 44575                           
 44576                           ;../canargb_leds.c: 175:         T4CLKCON = 0x02;
 44577   0048D6  0E02               	movlw	2
 44578   0048D8  6F32               	movwf	50,b	;volatile
 44579                           
 44580                           ;../canargb_leds.c: 176:         T4HLT = 0x11;
 44581   0048DA  0E11               	movlw	17
 44582   0048DC  6F31               	movwf	49,b	;volatile
 44583                           
 44584                           ;../canargb_leds.c: 177:         T4RST = 0x12;
 44585   0048DE  0E12               	movlw	18
 44586   0048E0  6F33               	movwf	51,b	;volatile
 44587                           
 44588                           ;../canargb_leds.c: 181:         T4PR = 29;
 44589   0048E2  0E1D               	movlw	29
 44590   0048E4  6F2F               	movwf	47,b	;volatile
 44591                           
 44592                           ;../canargb_leds.c: 183:     };../canargb_leds.c: 187:     {;../canargb_leds.c: 188:    
      +                               CLCSELECT = 1;
 44593   0048E6  0E01               	movlw	1
 44594   0048E8  0100               	movlb	0	; () banked
 44595   0048EA  6FD5               	movwf	213,b	;volatile
 44596                           
 44597                           ;../canargb_leds.c: 189:         CLCnCON = 0x82;
 44598   0048EC  0E82               	movlw	130
 44599   0048EE  6FD6               	movwf	214,b	;volatile
 44600                           
 44601                           ;../canargb_leds.c: 190:         CLCnPOL = 0x8E;
 44602   0048F0  0E8E               	movlw	142
 44603   0048F2  6FD7               	movwf	215,b	;volatile
 44604                           
 44605                           ;../canargb_leds.c: 191:         CLCnSEL0 = 0x14;
 44606   0048F4  0E14               	movlw	20
 44607   0048F6  6FD8               	movwf	216,b	;volatile
 44608                           
 44609                           ;../canargb_leds.c: 192:         CLCnSEL1 = 0x14;
 44610   0048F8  0E14               	movlw	20
 44611   0048FA  6FD9               	movwf	217,b	;volatile
 44612                           
 44613                           ;../canargb_leds.c: 193:         CLCnSEL2 = 0x14;
 44614   0048FC  0E14               	movlw	20
 44615   0048FE  6FDA               	movwf	218,b	;volatile
 44616                           
 44617                           ;../canargb_leds.c: 194:         CLCnSEL3 = 0x14;
 44618   004900  0E14               	movlw	20
 44619   004902  6FDB               	movwf	219,b	;volatile
 44620                           
 44621                           ;../canargb_leds.c: 195:         CLCnGLS0 = 0x01;
 44622   004904  0E01               	movlw	1
 44623   004906  6FDC               	movwf	220,b	;volatile
 44624   004908                     
 44625                           ; BSR set to: 0
 44626                           ;../canargb_leds.c: 196:         CLCnGLS1 = 0x00;
 44627   004908  6BDD               	clrf	221,b	;volatile
 44628   00490A                     
 44629                           ; BSR set to: 0
 44630                           ;../canargb_leds.c: 197:         CLCnGLS2 = 0x00;
 44631   00490A  6BDE               	clrf	222,b	;volatile
 44632   00490C                     
 44633                           ; BSR set to: 0
 44634                           ;../canargb_leds.c: 198:         CLCnGLS3 = 0x00;
 44635   00490C  6BDF               	clrf	223,b	;volatile
 44636                           
 44637                           ;../canargb_leds.c: 199:     };../canargb_leds.c: 203:     {;../canargb_leds.c: 204:    
      +                               CLCSELECT = 3;
 44638   00490E  0E03               	movlw	3
 44639   004910  6FD5               	movwf	213,b	;volatile
 44640                           
 44641                           ;../canargb_leds.c: 205:         CLCnCON = 0x82;
 44642   004912  0E82               	movlw	130
 44643   004914  6FD6               	movwf	214,b	;volatile
 44644                           
 44645                           ;../canargb_leds.c: 206:         CLCnPOL = 0x8E;
 44646   004916  0E8E               	movlw	142
 44647   004918  6FD7               	movwf	215,b	;volatile
 44648                           
 44649                           ;../canargb_leds.c: 207:         CLCnSEL0 = 0x16;
 44650   00491A  0E16               	movlw	22
 44651   00491C  6FD8               	movwf	216,b	;volatile
 44652                           
 44653                           ;../canargb_leds.c: 208:         CLCnSEL1 = 0x16;
 44654   00491E  0E16               	movlw	22
 44655   004920  6FD9               	movwf	217,b	;volatile
 44656                           
 44657                           ;../canargb_leds.c: 209:         CLCnSEL2 = 0x16;
 44658   004922  0E16               	movlw	22
 44659   004924  6FDA               	movwf	218,b	;volatile
 44660                           
 44661                           ;../canargb_leds.c: 210:         CLCnSEL3 = 0x16;
 44662   004926  0E16               	movlw	22
 44663   004928  6FDB               	movwf	219,b	;volatile
 44664                           
 44665                           ;../canargb_leds.c: 211:         CLCnGLS0 = 0x01;
 44666   00492A  0E01               	movlw	1
 44667   00492C  6FDC               	movwf	220,b	;volatile
 44668   00492E                     
 44669                           ; BSR set to: 0
 44670                           ;../canargb_leds.c: 212:         CLCnGLS1 = 0x00;
 44671   00492E  6BDD               	clrf	221,b	;volatile
 44672   004930                     
 44673                           ; BSR set to: 0
 44674                           ;../canargb_leds.c: 213:         CLCnGLS2 = 0x00;
 44675   004930  6BDE               	clrf	222,b	;volatile
 44676   004932                     
 44677                           ; BSR set to: 0
 44678                           ;../canargb_leds.c: 214:         CLCnGLS3 = 0x00;
 44679   004932  6BDF               	clrf	223,b	;volatile
 44680   004934                     
 44681                           ; BSR set to: 0
 44682                           ;../canargb_leds.c: 215:     };../canargb_leds.c: 218:     {;../canargb_leds.c: 219:    
      +                               MD1CON0 = 0;
 44683   004934  6B6A               	clrf	106,b	;volatile
 44684   004936                     
 44685                           ; BSR set to: 0
 44686                           ;../canargb_leds.c: 220:         MD1CON1 = 0x00;
 44687   004936  6B6B               	clrf	107,b	;volatile
 44688                           
 44689                           ;../canargb_leds.c: 221:         MD1CARH = 0x12;
 44690   004938  0E12               	movlw	18
 44691   00493A  6F6E               	movwf	110,b	;volatile
 44692                           
 44693                           ;../canargb_leds.c: 222:         MD1CARL = 0x10;
 44694   00493C  0E10               	movlw	16
 44695   00493E  6F6D               	movwf	109,b	;volatile
 44696                           
 44697                           ;../canargb_leds.c: 223:         MD1SRC = 0x1F;
 44698   004940  0E1F               	movlw	31
 44699   004942  6F6C               	movwf	108,b	;volatile
 44700   004944                     
 44701                           ; BSR set to: 0
 44702                           ;../canargb_leds.c: 224:     };../canargb_leds.c: 229:     {;../canargb_leds.c: 230:    
      +                               DMASELECT=0;
 44703   004944  6BE8               	clrf	232,b	;volatile
 44704                           
 44705                           ;../canargb_leds.c: 231:         DMAnCON1bits.DMODE=0;
 44706   004946  0E3F               	movlw	-193
 44707   004948  17FD               	andwf	253,f,b	;volatile
 44708                           
 44709                           ;../canargb_leds.c: 232:         DMAnCON1bits.SMR=0;
 44710   00494A  0EE7               	movlw	-25
 44711   00494C  17FD               	andwf	253,f,b	;volatile
 44712                           
 44713                           ;../canargb_leds.c: 233:         DMAnCON1bits.SMODE=1;
 44714   00494E  51FD               	movf	253,w,b	;volatile
 44715   004950  0BF9               	andlw	-7
 44716   004952  0902               	iorlw	2
 44717   004954  6FFD               	movwf	253,b	;volatile
 44718   004956                     
 44719                           ; BSR set to: 0
 44720                           ;../canargb_leds.c: 234:         DMAnCON1bits.SSTP=1;
 44721   004956  81FD               	bsf	253,0,b	;volatile
 44722                           
 44723                           ;../canargb_leds.c: 235:         DMAnSSZ=3*255;
 44724   004958  0E02               	movlw	2
 44725   00495A  6FF8               	movwf	248,b	;volatile
 44726   00495C  0EFD               	movlw	253
 44727   00495E  6FF7               	movwf	247,b	;volatile
 44728                           
 44729                           ;../canargb_leds.c: 236:         DMAnSSA=(__uint24)leds;
 44730   004960  0E7C               	movlw	low _leds
 44731   004962  6FF9               	movwf	249,b	;volatile
 44732   004964  0E0B               	movlw	high _leds
 44733   004966  6FFA               	movwf	250,b	;volatile
 44734   004968  0E00               	movlw	low (_leds shr (0+16))
 44735   00496A  6FFB               	movwf	251,b	;volatile
 44736                           
 44737                           ;../canargb_leds.c: 237:         DMAnDSZ=1;
 44738   00496C  0E00               	movlw	0
 44739   00496E  6FEF               	movwf	239,b	;volatile
 44740   004970  0E01               	movlw	1
 44741   004972  6FEE               	movwf	238,b	;volatile
 44742                           
 44743                           ;../canargb_leds.c: 238:         DMAnDSA=(uint16_t)&SPI1TXB;
 44744   004974  0E00               	movlw	0
 44745   004976  6FF1               	movwf	241,b	;volatile
 44746   004978  0E81               	movlw	129
 44747   00497A  6FF0               	movwf	240,b	;volatile
 44748                           
 44749                           ;../canargb_leds.c: 239:         DMAnSIRQ=0x19;
 44750   00497C  0E19               	movlw	25
 44751   00497E  6FFF               	movwf	255,b	;volatile
 44752   004980                     
 44753                           ; BSR set to: 0
 44754                           ;../canargb_leds.c: 240:         DMAnAIRQ=0;
 44755   004980  6BFE               	clrf	254,b	;volatile
 44756                           
 44757                           ;../canargb_leds.c: 242:         DMA1PR = 0x01;
 44758   004982  0E01               	movlw	1
 44759   004984  6FB6               	movwf	182,b	;volatile
 44760                           
 44761                           ;../canargb_leds.c: 243:         PRLOCK = 0x55;
 44762   004986  0E55               	movlw	85
 44763   004988  6FB4               	movwf	180,b	;volatile
 44764                           
 44765                           ;../canargb_leds.c: 244:         PRLOCK = 0xAA;
 44766   00498A  0EAA               	movlw	170
 44767   00498C  6FB4               	movwf	180,b	;volatile
 44768   00498E                     
 44769                           ; BSR set to: 0
 44770                           ;../canargb_leds.c: 245:         PRLOCKbits.PRLOCKED = 1;
 44771   00498E  81B4               	bsf	180,0,b	;volatile
 44772   004990                     
 44773                           ; BSR set to: 0
 44774                           ;../canargb_leds.c: 246:         DMAnCON0bits.SIRQEN = 0;
 44775   004990  9DFC               	bcf	252,6,b	;volatile
 44776   004992                     
 44777                           ; BSR set to: 0
 44778                           ;../canargb_leds.c: 247:         DMAnCON0bits.EN=1;
 44779   004992  8FFC               	bsf	252,7,b	;volatile
 44780   004994                     
 44781                           ; BSR set to: 0
 44782                           ;../canargb_leds.c: 248:     };../canargb_leds.c: 251:     T2CONbits.ON = 1;
 44783   004994  0103               	movlb	3	; () banked
 44784   004996  8F24               	bsf	36,7,b	;volatile
 44785   004998                     
 44786                           ; BSR set to: 3
 44787                           ;../canargb_leds.c: 252:     T4CONbits.ON = 1;
 44788   004998  8F30               	bsf	48,7,b	;volatile
 44789   00499A                     
 44790                           ; BSR set to: 3
 44791                           ;../canargb_leds.c: 253:     MD1CON0bits.EN = 1;
 44792   00499A  0100               	movlb	0	; () banked
 44793   00499C  8F6A               	bsf	106,7,b	;volatile
 44794                           
 44795                           ;../canargb_leds.c: 255:     refreshRequired = 1;
 44796   00499E  0E01               	movlw	1
 44797   0049A0  0105               	movlb	5	; () banked
 44798   0049A2  6FAB               	movwf	_refreshRequired& (0+255),b
 44799   0049A4                     
 44800                           ; BSR set to: 5
 44801   0049A4  0012               	return		;funcret
 44802   0049A6                     __end_of_initARGB:
 44803                           	callstack 0
 44804                           
 44805 ;; *************** function _receiveOverrun *****************
 44806 ;; Defined at:
 44807 ;;		line 370 in file "../../VLCBlib_PIC/can18_can_2.c"
 44808 ;; Parameters:    Size  Location     Type
 44809 ;;		None
 44810 ;; Auto vars:     Size  Location     Type
 44811 ;;		None
 44812 ;; Return value:  Size  Location     Type
 44813 ;;                  1    wreg      void 
 44814 ;; Registers used:
 44815 ;;		status,2, status,0
 44816 ;; Tracked objects:
 44817 ;;		On entry : 0/0
 44818 ;;		On exit  : 0/0
 44819 ;;		Unchanged: 0/0
 44820 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44825 ;;Total ram usage:        0 bytes
 44826 ;; Hardware stack levels used: 1
 44827 ;; This function calls:
 44828 ;;		Nothing
 44829 ;; This function is called by:
 44830 ;;		Interrupt level 2
 44831 ;; This function uses a non-reentrant model
 44832 ;;
 44833                           
 44834                           	psect	text145
 44835   007DD0                     __ptext145:
 44836                           	callstack 0
 44837   007DD0                     _receiveOverrun:
 44838                           	callstack 115
 44839   007DD0                     
 44840                           ;../../VLCBlib_PIC/can18_can_2.c: 371:     if (C1FIFOSTA3Lbits.RXOVIF == 1) {
 44841   007DD0  0101               	movlb	1	; () banked
 44842   007DD2  A778               	btfss	120,3,b	;volatile
 44843   007DD4  EFEE  F03E         	goto	i2u861_41
 44844   007DD8  EFF0  F03E         	goto	i2u861_40
 44845   007DDC                     i2u861_41:
 44846   007DDC  EFF5  F03E         	goto	i2l11033
 44847   007DE0                     i2u861_40:
 44848   007DE0                     
 44849                           ; BSR set to: 1
 44850                           ;../../VLCBlib_PIC/can18_can_2.c: 373:         canDiagnostics[0x08].asUint++;
 44851   007DE0  0106               	movlb	6	; () banked
 44852   007DE2  4B9E               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 44853   007DE4  2B9F               	incf	(_canDiagnostics+17)& (0+255),f,b
 44854   007DE6                     
 44855                           ; BSR set to: 6
 44856                           ;../../VLCBlib_PIC/can18_can_2.c: 375:         C1FIFOSTA3Lbits.RXOVIF = 0;
 44857   007DE6  0101               	movlb	1	; () banked
 44858   007DE8  9778               	bcf	120,3,b	;volatile
 44859   007DEA                     i2l11033:
 44860                           
 44861                           ; BSR set to: 1
 44862                           ;../../VLCBlib_PIC/can18_can_2.c: 377:     if (C1INTHbits.IVMIF == 1) {
 44863   007DEA  AF1D               	btfss	29,7,b	;volatile
 44864   007DEC  EFFA  F03E         	goto	i2u862_41
 44865   007DF0  EFFC  F03E         	goto	i2u862_40
 44866   007DF4                     i2u862_41:
 44867   007DF4  EF01  F03F         	goto	i2l614
 44868   007DF8                     i2u862_40:
 44869   007DF8                     
 44870                           ; BSR set to: 1
 44871                           ;../../VLCBlib_PIC/can18_can_2.c: 379:         canDiagnostics[0x01].asUint++;
 44872   007DF8  0106               	movlb	6	; () banked
 44873   007DFA  4B90               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 44874   007DFC  2B91               	incf	(_canDiagnostics+3)& (0+255),f,b
 44875   007DFE                     
 44876                           ; BSR set to: 6
 44877                           ;../../VLCBlib_PIC/can18_can_2.c: 381:         C1INTHbits.IVMIF = 0;
 44878   007DFE  0101               	movlb	1	; () banked
 44879   007E00  9F1D               	bcf	29,7,b	;volatile
 44880   007E02                     i2l614:
 44881                           
 44882                           ; BSR set to: 1
 44883   007E02  0011               	retfie		f
 44884   007E04                     __end_of_receiveOverrun:
 44885                           	callstack 0
 44886                           
 44887 ;; *************** function _TMR0_ISR *****************
 44888 ;; Defined at:
 44889 ;;		line 201 in file "../../VLCBlib_PIC/ticktime.c"
 44890 ;; Parameters:    Size  Location     Type
 44891 ;;		None
 44892 ;; Auto vars:     Size  Location     Type
 44893 ;;		None
 44894 ;; Return value:  Size  Location     Type
 44895 ;;                  1    wreg      void 
 44896 ;; Registers used:
 44897 ;;		wreg, status,2, status,0
 44898 ;; Tracked objects:
 44899 ;;		On entry : 0/0
 44900 ;;		On exit  : 0/0
 44901 ;;		Unchanged: 0/0
 44902 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44907 ;;Total ram usage:        0 bytes
 44908 ;; Hardware stack levels used: 1
 44909 ;; This function calls:
 44910 ;;		Nothing
 44911 ;; This function is called by:
 44912 ;;		Interrupt level 2
 44913 ;; This function uses a non-reentrant model
 44914 ;;
 44915                           
 44916                           	psect	text146
 44917   008074                     __ptext146:
 44918                           	callstack 0
 44919   008074                     _TMR0_ISR:
 44920                           	callstack 115
 44921   008074                     
 44922                           ;../../VLCBlib_PIC/ticktime.c: 205:     if(TMR0IF) {
 44923   008074  AEB1               	btfss	1201,7,c	;volatile
 44924   008076  EF3F  F040         	goto	i2u863_41
 44925   00807A  EF41  F040         	goto	i2u863_40
 44926   00807E                     i2u863_41:
 44927   00807E  EF4D  F040         	goto	i2l1853
 44928   008082                     i2u863_40:
 44929   008082                     
 44930                           ;../../VLCBlib_PIC/ticktime.c: 207:         TMR0IF = 0;
 44931   008082  9EB1               	bcf	1201,7,c	;volatile
 44932   008084                     
 44933                           ;../../VLCBlib_PIC/ticktime.c: 208:         timerExtension1++;
 44934   008084  0105               	movlb	5	; () banked
 44935   008086  2B9A               	incf	_timerExtension1& (0+255),f,b	;volatile
 44936   008088                     
 44937                           ; BSR set to: 5
 44938                           ;../../VLCBlib_PIC/ticktime.c: 209:         if(timerExtension1 == 0) {
 44939   008088  519A               	movf	_timerExtension1& (0+255),w,b	;volatile
 44940   00808A  A4D8               	btfss	status,2,c
 44941   00808C  EF4A  F040         	goto	i2u864_41
 44942   008090  EF4C  F040         	goto	i2u864_40
 44943   008094                     i2u864_41:
 44944   008094  EF4D  F040         	goto	i2l1853
 44945   008098                     i2u864_40:
 44946   008098                     
 44947                           ; BSR set to: 5
 44948                           ;../../VLCBlib_PIC/ticktime.c: 210:             timerExtension2++;
 44949   008098  2B99               	incf	_timerExtension2& (0+255),f,b	;volatile
 44950   00809A                     i2l1853:
 44951   00809A  0011               	retfie		f
 44952   00809C                     __end_of_TMR0_ISR:
 44953                           	callstack 0
 44954                           
 44955 ;; *************** function _DEFAULT_ISR *****************
 44956 ;; Defined at:
 44957 ;;		line 1369 in file "../../VLCBlib_PIC/vlcb.c"
 44958 ;; Parameters:    Size  Location     Type
 44959 ;;		None
 44960 ;; Auto vars:     Size  Location     Type
 44961 ;;		None
 44962 ;; Return value:  Size  Location     Type
 44963 ;;                  1    wreg      void 
 44964 ;; Registers used:
 44965 ;;		None
 44966 ;; Tracked objects:
 44967 ;;		On entry : 0/0
 44968 ;;		On exit  : 0/0
 44969 ;;		Unchanged: 0/0
 44970 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44975 ;;Total ram usage:        0 bytes
 44976 ;; Hardware stack levels used: 1
 44977 ;; This function calls:
 44978 ;;		Nothing
 44979 ;; This function is called by:
 44980 ;;		Interrupt level 2
 44981 ;; This function uses a non-reentrant model
 44982 ;;
 44983                           
 44984                           	psect	text147
 44985   008268                     __ptext147:
 44986                           	callstack 0
 44987   008268                     _DEFAULT_ISR:
 44988                           	callstack 115
 44989   008268  0011               	retfie		f
 44990   00826A                     __end_of_DEFAULT_ISR:
 44991                           	callstack 0
 44992                           
 44993                           ;
 44994                           ; H/W Interrupt Vector Table @ 0x900
 44995                           ;
 44996                           
 44997                           	psect	ivt0x900
 44998   000900                     __pivt0x900:
 44999                           	callstack 0
 45000   000900                     ivt0x900_base:
 45001                           	callstack 0
 45002                           
 45003                           ; Vector 0 : SWINT
 45004   000900  209A               	dw	_DEFAULT_ISR shr (0+2)
 45005                           
 45006                           ; Vector 1 : HLVD
 45007   000902  209A               	dw	_DEFAULT_ISR shr (0+2)
 45008                           
 45009                           ; Vector 2 : OSF
 45010   000904  209A               	dw	_DEFAULT_ISR shr (0+2)
 45011                           
 45012                           ; Vector 3 : CSW
 45013   000906  209A               	dw	_DEFAULT_ISR shr (0+2)
 45014                           
 45015                           ; Vector 4 : TU16A
 45016   000908  209A               	dw	_DEFAULT_ISR shr (0+2)
 45017                           
 45018                           ; Vector 5 : CLC1
 45019   00090A  209A               	dw	_DEFAULT_ISR shr (0+2)
 45020                           
 45021                           ; Vector 6 : CAN
 45022   00090C  1F74               	dw	_receiveOverrun shr (0+2)
 45023                           
 45024                           ; Vector 7 : IOC
 45025   00090E  209A               	dw	_DEFAULT_ISR shr (0+2)
 45026                           
 45027                           ; Vector 8 : INT0
 45028   000910  209A               	dw	_DEFAULT_ISR shr (0+2)
 45029                           
 45030                           ; Vector 9 : ZCD
 45031   000912  209A               	dw	_DEFAULT_ISR shr (0+2)
 45032                           
 45033                           ; Vector 10 : AD
 45034   000914  209A               	dw	_DEFAULT_ISR shr (0+2)
 45035                           
 45036                           ; Vector 11 : ACT
 45037   000916  209A               	dw	_DEFAULT_ISR shr (0+2)
 45038                           
 45039                           ; Vector 12 : CM1
 45040   000918  209A               	dw	_DEFAULT_ISR shr (0+2)
 45041                           
 45042                           ; Vector 13 : SMT1
 45043   00091A  209A               	dw	_DEFAULT_ISR shr (0+2)
 45044                           
 45045                           ; Vector 14 : SMT1PRA
 45046   00091C  209A               	dw	_DEFAULT_ISR shr (0+2)
 45047                           
 45048                           ; Vector 15 : SMT1PWA
 45049   00091E  209A               	dw	_DEFAULT_ISR shr (0+2)
 45050                           
 45051                           ; Vector 16 : ADCH1
 45052   000920  209A               	dw	_DEFAULT_ISR shr (0+2)
 45053                           
 45054                           ; Vector 17 : ADCH2
 45055   000922  209A               	dw	_DEFAULT_ISR shr (0+2)
 45056                           
 45057                           ; Vector 18 : ADCH3
 45058   000924  209A               	dw	_DEFAULT_ISR shr (0+2)
 45059                           
 45060                           ; Vector 19 : ADCH4
 45061   000926  209A               	dw	_DEFAULT_ISR shr (0+2)
 45062                           
 45063                           ; Vector 20 : DMA1SCNT
 45064   000928  209A               	dw	_DEFAULT_ISR shr (0+2)
 45065                           
 45066                           ; Vector 21 : DMA1DCNT
 45067   00092A  209A               	dw	_DEFAULT_ISR shr (0+2)
 45068                           
 45069                           ; Vector 22 : DMA1OR
 45070   00092C  209A               	dw	_DEFAULT_ISR shr (0+2)
 45071                           
 45072                           ; Vector 23 : DMA1A
 45073   00092E  209A               	dw	_DEFAULT_ISR shr (0+2)
 45074                           
 45075                           ; Vector 24 : SPI1RX
 45076   000930  209A               	dw	_DEFAULT_ISR shr (0+2)
 45077                           
 45078                           ; Vector 25 : SPI1TX
 45079   000932  209A               	dw	_DEFAULT_ISR shr (0+2)
 45080                           
 45081                           ; Vector 26 : SPI1
 45082   000934  209A               	dw	_DEFAULT_ISR shr (0+2)
 45083                           
 45084                           ; Vector 27 : TMR2
 45085   000936  209A               	dw	_DEFAULT_ISR shr (0+2)
 45086                           
 45087                           ; Vector 28 : TMR1
 45088   000938  209A               	dw	_DEFAULT_ISR shr (0+2)
 45089                           
 45090                           ; Vector 29 : TMR1G
 45091   00093A  209A               	dw	_DEFAULT_ISR shr (0+2)
 45092                           
 45093                           ; Vector 30 : CCP1
 45094   00093C  209A               	dw	_DEFAULT_ISR shr (0+2)
 45095                           
 45096                           ; Vector 31 : TMR0
 45097   00093E  201D               	dw	_TMR0_ISR shr (0+2)
 45098                           
 45099                           ; Vector 32 : U1RX
 45100   000940  209A               	dw	_DEFAULT_ISR shr (0+2)
 45101                           
 45102                           ; Vector 33 : U1TX
 45103   000942  209A               	dw	_DEFAULT_ISR shr (0+2)
 45104                           
 45105                           ; Vector 34 : U1E
 45106   000944  209A               	dw	_DEFAULT_ISR shr (0+2)
 45107                           
 45108                           ; Vector 35 : U1
 45109   000946  209A               	dw	_DEFAULT_ISR shr (0+2)
 45110                           
 45111                           ; Vector 36 : CANRX
 45112   000948  209A               	dw	_DEFAULT_ISR shr (0+2)
 45113                           
 45114                           ; Vector 37 : CANTX
 45115   00094A  209A               	dw	_DEFAULT_ISR shr (0+2)
 45116                           
 45117                           ; Vector 38 : PWM1PR
 45118   00094C  209A               	dw	_DEFAULT_ISR shr (0+2)
 45119                           
 45120                           ; Vector 39 : PWM1
 45121   00094E  209A               	dw	_DEFAULT_ISR shr (0+2)
 45122                           
 45123                           ; Vector 40 : SPI2RX
 45124   000950  209A               	dw	_DEFAULT_ISR shr (0+2)
 45125                           
 45126                           ; Vector 41 : SPI2TX
 45127   000952  209A               	dw	_DEFAULT_ISR shr (0+2)
 45128                           
 45129                           ; Vector 42 : SPI2
 45130   000954  209A               	dw	_DEFAULT_ISR shr (0+2)
 45131                           
 45132                           ; Vector 43 : TU16B
 45133   000956  209A               	dw	_DEFAULT_ISR shr (0+2)
 45134                           
 45135                           ; Vector 44 : TMR3
 45136   000958  209A               	dw	_DEFAULT_ISR shr (0+2)
 45137                           
 45138                           ; Vector 45 : TMR3G
 45139   00095A  209A               	dw	_DEFAULT_ISR shr (0+2)
 45140                           
 45141                           ; Vector 46 : PWM2PR
 45142   00095C  209A               	dw	_DEFAULT_ISR shr (0+2)
 45143                           
 45144                           ; Vector 47 : PWM2
 45145   00095E  209A               	dw	_DEFAULT_ISR shr (0+2)
 45146                           
 45147                           ; Vector 48 : INT1
 45148   000960  209A               	dw	_DEFAULT_ISR shr (0+2)
 45149                           
 45150                           ; Vector 49 : CLC2
 45151   000962  209A               	dw	_DEFAULT_ISR shr (0+2)
 45152                           
 45153                           ; Vector 50 : CWG1
 45154   000964  209A               	dw	_DEFAULT_ISR shr (0+2)
 45155                           
 45156                           ; Vector 51 : NCO1
 45157   000966  209A               	dw	_DEFAULT_ISR shr (0+2)
 45158                           
 45159                           ; Vector 52 : DMA2SCNT
 45160   000968  209A               	dw	_DEFAULT_ISR shr (0+2)
 45161                           
 45162                           ; Vector 53 : DMA2DCNT
 45163   00096A  209A               	dw	_DEFAULT_ISR shr (0+2)
 45164                           
 45165                           ; Vector 54 : DMA2OR
 45166   00096C  209A               	dw	_DEFAULT_ISR shr (0+2)
 45167                           
 45168                           ; Vector 55 : DMA2A
 45169   00096E  209A               	dw	_DEFAULT_ISR shr (0+2)
 45170                           
 45171                           ; Vector 56 : I2C1RX
 45172   000970  209A               	dw	_DEFAULT_ISR shr (0+2)
 45173                           
 45174                           ; Vector 57 : I2C1TX
 45175   000972  209A               	dw	_DEFAULT_ISR shr (0+2)
 45176                           
 45177                           ; Vector 58 : I2C1
 45178   000974  209A               	dw	_DEFAULT_ISR shr (0+2)
 45179                           
 45180                           ; Vector 59 : I2C1E
 45181   000976  209A               	dw	_DEFAULT_ISR shr (0+2)
 45182                           
 45183                           ; Vector 60 : Undefined
 45184   000978  0280               	dw	ivt0x900_undefint shr (0+2)
 45185                           
 45186                           ; Vector 61 : CLC3
 45187   00097A  209A               	dw	_DEFAULT_ISR shr (0+2)
 45188                           
 45189                           ; Vector 62 : PWM3PR
 45190   00097C  209A               	dw	_DEFAULT_ISR shr (0+2)
 45191                           
 45192                           ; Vector 63 : PWM3
 45193   00097E  209A               	dw	_DEFAULT_ISR shr (0+2)
 45194                           
 45195                           ; Vector 64 : U2RX
 45196   000980  209A               	dw	_DEFAULT_ISR shr (0+2)
 45197                           
 45198                           ; Vector 65 : U2TX
 45199   000982  209A               	dw	_DEFAULT_ISR shr (0+2)
 45200                           
 45201                           ; Vector 66 : U2E
 45202   000984  209A               	dw	_DEFAULT_ISR shr (0+2)
 45203                           
 45204                           ; Vector 67 : U2
 45205   000986  209A               	dw	_DEFAULT_ISR shr (0+2)
 45206                           
 45207                           ; Vector 68 : TMR5
 45208   000988  209A               	dw	_DEFAULT_ISR shr (0+2)
 45209                           
 45210                           ; Vector 69 : TMR5G
 45211   00098A  209A               	dw	_DEFAULT_ISR shr (0+2)
 45212                           
 45213                           ; Vector 70 : CCP2
 45214   00098C  209A               	dw	_DEFAULT_ISR shr (0+2)
 45215                           
 45216                           ; Vector 71 : SCAN
 45217   00098E  209A               	dw	_DEFAULT_ISR shr (0+2)
 45218                           
 45219                           ; Vector 72 : U3RX
 45220   000990  209A               	dw	_DEFAULT_ISR shr (0+2)
 45221                           
 45222                           ; Vector 73 : U3TX
 45223   000992  209A               	dw	_DEFAULT_ISR shr (0+2)
 45224                           
 45225                           ; Vector 74 : U3E
 45226   000994  209A               	dw	_DEFAULT_ISR shr (0+2)
 45227                           
 45228                           ; Vector 75 : U3
 45229   000996  209A               	dw	_DEFAULT_ISR shr (0+2)
 45230                           
 45231                           ; Vector 76 : Undefined
 45232   000998  0280               	dw	ivt0x900_undefint shr (0+2)
 45233                           
 45234                           ; Vector 77 : CLC4
 45235   00099A  209A               	dw	_DEFAULT_ISR shr (0+2)
 45236                           
 45237                           ; Vector 78 : PWM4PR
 45238   00099C  209A               	dw	_DEFAULT_ISR shr (0+2)
 45239                           
 45240                           ; Vector 79 : PWM4
 45241   00099E  209A               	dw	_DEFAULT_ISR shr (0+2)
 45242                           
 45243                           ; Vector 80 : INT2
 45244   0009A0  209A               	dw	_DEFAULT_ISR shr (0+2)
 45245                           
 45246                           ; Vector 81 : CLC5
 45247   0009A2  209A               	dw	_DEFAULT_ISR shr (0+2)
 45248                           
 45249                           ; Vector 82 : CWG2
 45250   0009A4  209A               	dw	_DEFAULT_ISR shr (0+2)
 45251                           
 45252                           ; Vector 83 : NCO2
 45253   0009A6  209A               	dw	_DEFAULT_ISR shr (0+2)
 45254                           
 45255                           ; Vector 84 : DMA3SCNT
 45256   0009A8  209A               	dw	_DEFAULT_ISR shr (0+2)
 45257                           
 45258                           ; Vector 85 : DMA3DCNT
 45259   0009AA  209A               	dw	_DEFAULT_ISR shr (0+2)
 45260                           
 45261                           ; Vector 86 : DMA3OR
 45262   0009AC  209A               	dw	_DEFAULT_ISR shr (0+2)
 45263                           
 45264                           ; Vector 87 : DMA3A
 45265   0009AE  209A               	dw	_DEFAULT_ISR shr (0+2)
 45266                           
 45267                           ; Vector 88 : CCP3
 45268   0009B0  209A               	dw	_DEFAULT_ISR shr (0+2)
 45269                           
 45270                           ; Vector 89 : CLC6
 45271   0009B2  209A               	dw	_DEFAULT_ISR shr (0+2)
 45272                           
 45273                           ; Vector 90 : CWG3
 45274   0009B4  209A               	dw	_DEFAULT_ISR shr (0+2)
 45275                           
 45276                           ; Vector 91 : TMR4
 45277   0009B6  209A               	dw	_DEFAULT_ISR shr (0+2)
 45278                           
 45279                           ; Vector 92 : DMA4SCNT
 45280   0009B8  209A               	dw	_DEFAULT_ISR shr (0+2)
 45281                           
 45282                           ; Vector 93 : DMA4DCNT
 45283   0009BA  209A               	dw	_DEFAULT_ISR shr (0+2)
 45284                           
 45285                           ; Vector 94 : DMA4OR
 45286   0009BC  209A               	dw	_DEFAULT_ISR shr (0+2)
 45287                           
 45288                           ; Vector 95 : DMA4A
 45289   0009BE  209A               	dw	_DEFAULT_ISR shr (0+2)
 45290                           
 45291                           ; Vector 96 : U4RX
 45292   0009C0  209A               	dw	_DEFAULT_ISR shr (0+2)
 45293                           
 45294                           ; Vector 97 : U4TX
 45295   0009C2  209A               	dw	_DEFAULT_ISR shr (0+2)
 45296                           
 45297                           ; Vector 98 : U4E
 45298   0009C4  209A               	dw	_DEFAULT_ISR shr (0+2)
 45299                           
 45300                           ; Vector 99 : U4
 45301   0009C6  209A               	dw	_DEFAULT_ISR shr (0+2)
 45302                           
 45303                           ; Vector 100 : DMA5SCNT
 45304   0009C8  209A               	dw	_DEFAULT_ISR shr (0+2)
 45305                           
 45306                           ; Vector 101 : DMA5DCNT
 45307   0009CA  209A               	dw	_DEFAULT_ISR shr (0+2)
 45308                           
 45309                           ; Vector 102 : DMA5OR
 45310   0009CC  209A               	dw	_DEFAULT_ISR shr (0+2)
 45311                           
 45312                           ; Vector 103 : DMA5A
 45313   0009CE  209A               	dw	_DEFAULT_ISR shr (0+2)
 45314                           
 45315                           ; Vector 104 : U5RX
 45316   0009D0  209A               	dw	_DEFAULT_ISR shr (0+2)
 45317                           
 45318                           ; Vector 105 : U5TX
 45319   0009D2  209A               	dw	_DEFAULT_ISR shr (0+2)
 45320                           
 45321                           ; Vector 106 : U5E
 45322   0009D4  209A               	dw	_DEFAULT_ISR shr (0+2)
 45323                           
 45324                           ; Vector 107 : U5
 45325   0009D6  209A               	dw	_DEFAULT_ISR shr (0+2)
 45326                           
 45327                           ; Vector 108 : DMA6SCNT
 45328   0009D8  209A               	dw	_DEFAULT_ISR shr (0+2)
 45329                           
 45330                           ; Vector 109 : DMA6DCNT
 45331   0009DA  209A               	dw	_DEFAULT_ISR shr (0+2)
 45332                           
 45333                           ; Vector 110 : DMA6OR
 45334   0009DC  209A               	dw	_DEFAULT_ISR shr (0+2)
 45335                           
 45336                           ; Vector 111 : DMA6A
 45337   0009DE  209A               	dw	_DEFAULT_ISR shr (0+2)
 45338                           
 45339                           ; Vector 112 : Undefined
 45340   0009E0  0280               	dw	ivt0x900_undefint shr (0+2)
 45341                           
 45342                           ; Vector 113 : CLC7
 45343   0009E2  209A               	dw	_DEFAULT_ISR shr (0+2)
 45344                           
 45345                           ; Vector 114 : CM2
 45346   0009E4  209A               	dw	_DEFAULT_ISR shr (0+2)
 45347                           
 45348                           ; Vector 115 : NCO3
 45349   0009E6  209A               	dw	_DEFAULT_ISR shr (0+2)
 45350                           
 45351                           ; Vector 116 : DMA7SCNT
 45352   0009E8  209A               	dw	_DEFAULT_ISR shr (0+2)
 45353                           
 45354                           ; Vector 117 : DMA7DCNT
 45355   0009EA  209A               	dw	_DEFAULT_ISR shr (0+2)
 45356                           
 45357                           ; Vector 118 : DMA7OR
 45358   0009EC  209A               	dw	_DEFAULT_ISR shr (0+2)
 45359                           
 45360                           ; Vector 119 : DMA7A
 45361   0009EE  209A               	dw	_DEFAULT_ISR shr (0+2)
 45362                           
 45363                           ; Vector 120 : NVM
 45364   0009F0  209A               	dw	_DEFAULT_ISR shr (0+2)
 45365                           
 45366                           ; Vector 121 : CLC8
 45367   0009F2  209A               	dw	_DEFAULT_ISR shr (0+2)
 45368                           
 45369                           ; Vector 122 : CRC
 45370   0009F4  209A               	dw	_DEFAULT_ISR shr (0+2)
 45371                           
 45372                           ; Vector 123 : TMR6
 45373   0009F6  209A               	dw	_DEFAULT_ISR shr (0+2)
 45374                           
 45375                           ; Vector 124 : DMA8SCNT
 45376   0009F8  209A               	dw	_DEFAULT_ISR shr (0+2)
 45377                           
 45378                           ; Vector 125 : DMA8DCNT
 45379   0009FA  209A               	dw	_DEFAULT_ISR shr (0+2)
 45380                           
 45381                           ; Vector 126 : DMA8OR
 45382   0009FC  209A               	dw	_DEFAULT_ISR shr (0+2)
 45383                           
 45384                           ; Vector 127 : DMA8A
 45385   0009FE  209A               	dw	_DEFAULT_ISR shr (0+2)
 45386   000A00                     ivt0x900_undefint:
 45387                           	callstack 0
 45388   000A00  00FF               	reset	
 45389                           
 45390                           	psect	rparam
 45391   000001                     ___rparam_used  equ	1
 45392   000000                     ___param_bank   equ	0
 45393   000000                     __Lparam        equ	__Lrparam
 45394   000000                     __Hparam        equ	__Hrparam
 45395                           
 45396                           	psect	config
 45397                           
 45398                           ;Config register CONFIG1 @ 0x300000
 45399                           ;	External Oscillator Selection
 45400                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz
 45401                           ;	Reset Oscillator Selection
 45402                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
 45403   300000                     	org	3145728
 45404   300000  FA                 	db	250
 45405                           
 45406                           ;Config register CONFIG2 @ 0x300001
 45407                           ;	Clock out Enable bit
 45408                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 45409                           ;	PRLOCKED One-Way Set Enable bit
 45410                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 45411                           ;	Clock Switch Enable bit
 45412                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 45413                           ;	JTAG Enable bit
 45414                           ;	JTAGEN = OFF, Disable JTAG Boundary Scan mode, JTAG pins revert to user functions
 45415                           ;	Fail-Safe Clock Monitor Enable bit
 45416                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 45417                           ;	Fail-Safe Clock Monitor -Primary XTAL Enable bit
 45418                           ;	FCMENP = ON, FSCM timer will set FSCMP bit and OSFIF interrupt on Primary XTAL failure
 45419                           ;	Fail-Safe Clock Monitor -Secondary XTAL Enable bit
 45420                           ;	FCMENS = ON, FSCM timer will set FSCMS bit and OSFIF interrupt on Secondary XTAL failu
      +                          re
 45421   300001                     	org	3145729
 45422   300001  EF                 	db	239
 45423                           
 45424                           ;Config register CONFIG3 @ 0x300002
 45425                           ;	MCLR Enable bit
 45426                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 45427                           ;	Power-up timer selection bits
 45428                           ;	PWRTS = PWRT_64, PWRT set at 64ms
 45429                           ;	Multi-vector enable bit
 45430                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 45431                           ;	IVTLOCK bit One-way set enable bit
 45432                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 45433                           ;	Low Power BOR Enable bit
 45434                           ;	LPBOREN = OFF, Low-Power BOR disabled
 45435                           ;	Brown-out Reset Enable bits
 45436                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 45437   300002                     	org	3145730
 45438   300002  FD                 	db	253
 45439                           
 45440                           ;Config register CONFIG4 @ 0x300003
 45441                           ;	Brown-out Reset Voltage Selection bits
 45442                           ;	BORV = VBOR_2P7, Brown-out Reset Voltage (VBOR) set to 2.7V
 45443                           ;	ZCD Disable bit
 45444                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 45445                           ;	PPSLOCK bit One-Way Set Enable bit
 45446                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 45447                           ;	Stack Full/Underflow Reset Enable bit
 45448                           ;	STVREN = ON, Stack full/underflow will cause Reset
 45449                           ;	Low Voltage Programming Enable bit
 45450                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 45451                           ;	Extended Instruction Set Enable bit
 45452                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 45453   300003                     	org	3145731
 45454   300003  FD                 	db	253
 45455                           
 45456                           ;Config register CONFIG5 @ 0x300004
 45457                           ;	WDT Period selection bits
 45458                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 45459                           ;	WDT operating mode
 45460                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 45461   300004                     	org	3145732
 45462   300004  9F                 	db	159
 45463                           
 45464                           ;Config register CONFIG6 @ 0x300005
 45465                           ;	WDT Window Select bits
 45466                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 45467                           ;	WDT input clock selector
 45468                           ;	WDTCCS = SC, Software Control
 45469   300005                     	org	3145733
 45470   300005  FF                 	db	255
 45471                           
 45472                           ;Config register CONFIG7 @ 0x300006
 45473                           ;	Boot Block Size selection bits
 45474                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 45475                           ;	Boot Block enable bit
 45476                           ;	BBEN = ON, Boot block enabled
 45477                           ;	Storage Area Flash enable bit
 45478                           ;	SAFEN = OFF, SAF disabled
 45479                           ;	Background Debugger
 45480                           ;	DEBUG = 0x1, unprogrammed default
 45481   300006                     	org	3145734
 45482   300006  F7                 	db	247
 45483                           
 45484                           ;Config register CONFIG8 @ 0x300007
 45485                           ;	Boot Block Write Protection bit
 45486                           ;	WRTB = ON, Boot Block Write protected
 45487                           ;	Configuration Register Write Protection bit
 45488                           ;	WRTC = ON, Configuration registers Write protected
 45489                           ;	Data EEPROM Write Protection bit
 45490                           ;	WRTD = OFF, Data EEPROM not Write protected
 45491                           ;	SAF Write protection bit
 45492                           ;	WRTSAF = OFF, SAF not Write Protected
 45493                           ;	Application Block write protection bit
 45494                           ;	WRTAPP = OFF, Application Block not write protected
 45495   300007                     	org	3145735
 45496   300007  FC                 	db	252
 45497                           
 45498                           ;Config register CONFIG9 @ 0x300008
 45499                           ;	CRC on boot output pin selection
 45500                           ;	BOOTPINSEL = RC5, CRC on boot output pin is RC5
 45501                           ;	CRC on boot output pin enable bit
 45502                           ;	BPEN = OFF, CRC on boot output pin disabled
 45503                           ;	CRC on boot output pin open drain bit
 45504                           ;	ODCON = OFF, Pin drives both high-going and low-going signals
 45505   300008                     	org	3145736
 45506   300008  FF                 	db	255
 45507                           
 45508                           ;Config register CONFIG10 @ 0x300009
 45509                           ;	PFM and Data EEPROM Code Protection bit
 45510                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 45511   300009                     	org	3145737
 45512   300009  FF                 	db	255
 45513                           
 45514                           ;Config register CONFIG11 @ 0x30000A
 45515                           ;	CRC on boot scan enable for boot area
 45516                           ;	BOOTSCEN = OFF, CRC on boot will not include the boot area of program memory in its ca
      +                          lculation
 45517                           ;	CRC on boot Continue on Error for boot areas bit
 45518                           ;	BOOTCOE = HALT, CRC on boot will stop device if error is detected in boot areas
 45519                           ;	CRC on boot application code scan enable
 45520                           ;	APPSCEN = OFF, CRC on boot will not include the application area of program memory in 
      +                          its calculation
 45521                           ;	CRC on boot SAF area scan enable
 45522                           ;	SAFSCEN = OFF, CRC on boot will not include the SAF area of program memory in its calc
      +                          ulation
 45523                           ;	CRC on boot Data EEPROM scan enable
 45524                           ;	DATASCEN = OFF, CRC on boot will not include data EEPROM in its calculation
 45525                           ;	CRC on boot Config fuses scan enable
 45526                           ;	CFGSCEN = OFF, CRC on boot will not include the configuration fuses in its calculation
 45527                           ;	CRC on boot Continue on Error for non-boot areas bit
 45528                           ;	COE = HALT, CRC on boot will stop device if error is detected in non-boot areas
 45529                           ;	Boot on CRC Enable bit
 45530                           ;	BOOTPOR = OFF, CRC on boot will not run
 45531   30000A                     	org	3145738
 45532   30000A  FF                 	db	255
 45533                           
 45534                           ;Config register CONFIG12 @ 0x30000B
 45535                           ;	Boot Sector Polynomial for CRC on boot bits 31-24
 45536                           ;	BCRCPOLT = hFF, Bits 31:24 of BCRCPOL are 0xFF
 45537   30000B                     	org	3145739
 45538   30000B  FF                 	db	255
 45539                           
 45540                           ;Config register CONFIG13 @ 0x30000C
 45541                           ;	Boot Sector Polynomial for CRC on boot bits 23-16
 45542                           ;	BCRCPOLU = hFF, Bits 23:16 of BCRCPOL are 0xFF
 45543   30000C                     	org	3145740
 45544   30000C  FF                 	db	255
 45545                           
 45546                           ;Config register CONFIG14 @ 0x30000D
 45547                           ;	Boot Sector Polynomial for CRC on boot bits 15-8
 45548                           ;	BCRCPOLH = hFF, Bits 15:8 of BCRCPOL are 0xFF
 45549   30000D                     	org	3145741
 45550   30000D  FF                 	db	255
 45551                           
 45552                           ;Config register CONFIG15 @ 0x30000E
 45553                           ;	Boot Sector Polynomial for CRC on boot bits 7-0
 45554                           ;	BCRCPOLL = hFF, Bits 7:0 of BCRCPOL are 0xFF
 45555   30000E                     	org	3145742
 45556   30000E  FF                 	db	255
 45557                           
 45558                           ;Config register CONFIG16 @ 0x30000F
 45559                           ;	Boot Sector Seed for CRC on boot bits 31-24
 45560                           ;	BCRCSEEDT = hFF, Bits 31:24 of BCRCSEED are 0xFF
 45561   30000F                     	org	3145743
 45562   30000F  FF                 	db	255
 45563                           
 45564                           ;Config register CONFIG17 @ 0x300010
 45565                           ;	Boot Sector Seed for CRC on boot bits 23-16
 45566                           ;	BCRCSEEDU = hFF, Bits 23:16 of BCRCSEED are 0xFF
 45567   300010                     	org	3145744
 45568   300010  FF                 	db	255
 45569                           
 45570                           ;Config register CONFIG18 @ 0x300011
 45571                           ;	Boot Sector Seed for CRC on boot bits 15-8
 45572                           ;	BCRCSEEDH = hFF, Bits 15:8 of BCRCSEED are 0xFF
 45573   300011                     	org	3145745
 45574   300011  FF                 	db	255
 45575                           
 45576                           ;Config register CONFIG19 @ 0x300012
 45577                           ;	Boot Sector Seed for CRC on boot bits 7-0
 45578                           ;	BCRCSEEDL = hFF, Bits 7:0 of BCRCSEED are 0xFF
 45579   300012                     	org	3145746
 45580   300012  FF                 	db	255
 45581                           
 45582                           ;Config register CONFIG20 @ 0x300013
 45583                           ;	Boot Sector Expected Result for CRC on boot bits 31-24
 45584                           ;	BCRCEREST = hFF, Bits 31:24 of BCRCERES are 0xFF
 45585   300013                     	org	3145747
 45586   300013  FF                 	db	255
 45587                           
 45588                           ;Config register CONFIG21 @ 0x300014
 45589                           ;	Boot Sector Expected Result for CRC on boot bits 23-16
 45590                           ;	BCRCERESU = hFF, Bits 23:16 of BCRCERES are 0xFF
 45591   300014                     	org	3145748
 45592   300014  FF                 	db	255
 45593                           
 45594                           ;Config register CONFIG22 @ 0x300015
 45595                           ;	Boot Sector Expected Result for CRC on boot bits 15-8
 45596                           ;	BCRCERESH = hFF, Bits 15:8 of BCRCERES are 0xFF
 45597   300015                     	org	3145749
 45598   300015  FF                 	db	255
 45599                           
 45600                           ;Config register CONFIG23 @ 0x300016
 45601                           ;	Boot Sector Expected Result for CRC on boot bits 7-0
 45602                           ;	BCRCERESL = hFF, Bits 7:0 of BCRCERES are 0xFF
 45603   300016                     	org	3145750
 45604   300016  FF                 	db	255
 45605                           
 45606                           ;Config register CONFIG24 @ 0x300017
 45607                           ;	Non-Boot Sector Polynomial for CRC on boot bits 31-24
 45608                           ;	CRCPOLT = hFF, Bits 31:24 of CRCPOL are 0xFF
 45609   300017                     	org	3145751
 45610   300017  FF                 	db	255
 45611                           
 45612                           ;Config register CONFIG25 @ 0x300018
 45613                           ;	Non-Boot Sector Polynomial for CRC on boot bits 23-16
 45614                           ;	CRCPOLU = hFF, Bits 23:16 of CRCPOL are 0xFF
 45615   300018                     	org	3145752
 45616   300018  FF                 	db	255
 45617                           
 45618                           ;Config register CONFIG26 @ 0x300019
 45619                           ;	Non-Boot Sector Polynomial for CRC on boot bits 15-8
 45620                           ;	CRCPOLH = hFF, Bits 15:8 of CRCPOL are 0xFF
 45621   300019                     	org	3145753
 45622   300019  FF                 	db	255
 45623                           
 45624                           ;Config register CONFIG27 @ 0x30001A
 45625                           ;	Non-Boot Sector Polynomial for CRC on boot bits 7-0
 45626                           ;	CRCPOLL = hFF, Bits 7:0 of CRCPOL are 0xFF
 45627   30001A                     	org	3145754
 45628   30001A  FF                 	db	255
 45629                           
 45630                           ;Config register CONFIG28 @ 0x30001B
 45631                           ;	Non-Boot Sector Seed for CRC on boot bits 31-24
 45632                           ;	CRCSEEDT = hFF, Bits 31:24 of CRCSEED are 0xFF
 45633   30001B                     	org	3145755
 45634   30001B  FF                 	db	255
 45635                           
 45636                           ;Config register CONFIG29 @ 0x30001C
 45637                           ;	Non-Boot Sector Seed for CRC on boot bits 23-16
 45638                           ;	CRCSEEDU = hFF, Bits 23:16 of CRCSEED are 0xFF
 45639   30001C                     	org	3145756
 45640   30001C  FF                 	db	255
 45641                           
 45642                           ;Config register CONFIG30 @ 0x30001D
 45643                           ;	Non-Boot Sector Seed for CRC on boot bits 15-8
 45644                           ;	CRCSEEDH = hFF, Bits 15:8 of CRCSEED are 0xFF
 45645   30001D                     	org	3145757
 45646   30001D  FF                 	db	255
 45647                           
 45648                           ;Config register CONFIG31 @ 0x30001E
 45649                           ;	Non-Boot Sector Seed for CRC on boot bits 7-0
 45650                           ;	CRCSEEDL = hFF, Bits 7:0 of CRCSEED are 0xFF
 45651   30001E                     	org	3145758
 45652   30001E  FF                 	db	255
 45653                           
 45654                           ;Config register CONFIG32 @ 0x30001F
 45655                           ;	Non-Boot Sector Expected Result for CRC on boot bits 31-24
 45656                           ;	CRCEREST = hFF, Bits 31:24 of CRCERES are 0xFF
 45657   30001F                     	org	3145759
 45658   30001F  FF                 	db	255
 45659                           
 45660                           ;Config register CONFIG33 @ 0x300020
 45661                           ;	Non-Boot Sector Expected Result for CRC on boot bits 23-16
 45662                           ;	CRCERESU = hFF, Bits 23:16 of CRCERES are 0xFF
 45663   300020                     	org	3145760
 45664   300020  FF                 	db	255
 45665                           
 45666                           ;Config register CONFIG34 @ 0x300021
 45667                           ;	Non-Boot Sector Expected Result for CRC on boot bits 15-8
 45668                           ;	CRCERESH = hFF, Bits 15:8 of CRCERES are 0xFF
 45669   300021                     	org	3145761
 45670   300021  FF                 	db	255
 45671                           
 45672                           ;Config register CONFIG35 @ 0x300022
 45673                           ;	Non-Boot Sector Expected Result for CRC on boot bits 7-0
 45674                           ;	CRCERESL = hFF, Bits 7:0 of CRCERES are 0xFF
 45675   300022                     	org	3145762
 45676   300022  FF                 	db	255
 45677                           tosu	equ	0x4FF
 45678                           tosh	equ	0x4FE
 45679                           tosl	equ	0x4FD
 45680                           stkptr	equ	0x4FC
 45681                           pclatu	equ	0x4FB
 45682                           pclath	equ	0x4FA
 45683                           pcl	equ	0x4F9
 45684                           tblptru	equ	0x4F8
 45685                           tblptrh	equ	0x4F7
 45686                           tblptrl	equ	0x4F6
 45687                           tablat	equ	0x4F5
 45688                           prodh	equ	0x4F4
 45689                           prodl	equ	0x4F3
 45690                           indf0	equ	0x4EF
 45691                           postinc0	equ	0x4EE
 45692                           postdec0	equ	0x4ED
 45693                           preinc0	equ	0x4EC
 45694                           plusw0	equ	0x4EB
 45695                           fsr0h	equ	0x4EA
 45696                           fsr0l	equ	0x4E9
 45697                           wreg	equ	0x4E8
 45698                           indf1	equ	0x4E7
 45699                           postinc1	equ	0x4E6
 45700                           postdec1	equ	0x4E5
 45701                           preinc1	equ	0x4E4
 45702                           plusw1	equ	0x4E3
 45703                           fsr1h	equ	0x4E2
 45704                           fsr1l	equ	0x4E1
 45705                           bsr	equ	0x4E0
 45706                           indf2	equ	0x4DF
 45707                           postinc2	equ	0x4DE
 45708                           postdec2	equ	0x4DD
 45709                           preinc2	equ	0x4DC
 45710                           plusw2	equ	0x4DB
 45711                           fsr2h	equ	0x4DA
 45712                           fsr2l	equ	0x4D9
 45713                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    422
    Data        2
    BSS         2213
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK5           160     45     159
    BANK6           256      0     189
    BANK7           256      0     255
    BANK8           256      0     252
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0
    BANK37          256      0       0
    BANK38          256      0       0
    BANK39          256      0       0
    BANK40          256      0       0
    BANK41          256      0       0
    BANK42          256      0       0
    BANK43          256      0       0
    BANK44          256      0       0
    BANK45          256      0       0
    BANK46          256      0       0
    BANK47          256      0       0
    BANK48          256      0       0
    BANK49          256      0       0
    BANK50          256      0       0
    BANK51          256      0       0
    BANK52          256      0       0
    BANK53          256      0       0
    BANK54          256      0       0

Pointer List with Targets:

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    APP_processConsumedEvent@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    bootService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    bootService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    canReceiveMessage@rxFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK6[9]), 

    canSendMessage@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    canService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    canService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E23398 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E23402 size(2) Largest target is 1
		 -> canSendMessage(), 

    canTransport$waitForTxQueueToDrain	PTR FTN()void  size(2) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    consumerEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    consumerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    eventConsumerService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    eventConsumerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    eventConsumerService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventConsumerService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    eventConsumerService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    eventTeachService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    flashBuffer	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    getNextWriteMessage@q	PTR struct MessageQueue size(2) Largest target is 5
		 -> rxQueue(BANK5[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    mnsService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    mnsService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    nvService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    nvService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    pop@q	PTR struct MessageQueue size(2) Largest target is 5
		 -> rxQueue(BANK5[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    prepareSelfEnumResponse@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    push@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    S1878MessageQueue$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), 

    S201$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    S201Service$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S201Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    S201Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    S201Service$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    S201Service$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    S201Service$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    S343$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK6[9]), 

    S343$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    S343Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E23398 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    S343Transport$sendMessage	PTR FTN(PTR struct Message,)enum E23402 size(2) Largest target is 1
		 -> canSendMessage(), 

    S343Transport$waitForTxQueueToDrain	PTR FTN()void  size(2) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 

    sendRTR@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    services	const PTR const struct Service[6] size(2) Largest target is 14
		 -> bootService(CODE[14]), canService(CODE[14]), eventConsumerService(CODE[14]), eventTeachService(CODE[14]), 
		 -> mnsService(CODE[14]), nvService(CODE[14]), 

    services$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> teachGetESDdata(), NULL(), 

    services$poll	PTR FTN()void  size(2) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E23291 size(2) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), teachProcessMessage(), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__consumerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 14
		 -> bootService(CODE[14]), canService(CODE[14]), eventConsumerService(CODE[14]), eventTeachService(CODE[14]), 
		 -> mnsService(CODE[14]), nvService(CODE[14]), NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK6[72]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp_S201$7	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E23467 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E23467 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 6
		 -> canTransport(CODE[6]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E23398 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E23402 size(2) Largest target is 1
		 -> canSendMessage(), 

    transport$waitForTxQueueToDrain	PTR FTN()void  size(2) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 


Critical Paths under _main in COMRAM

    _setup->_tickGet
    _powerUp->_teachPowerUp
    _teachPowerUp->_rebuildHashtable
    _nvPowerUp->_loadNvCache
    _loadNvCache->_readNVM
    _mnsPowerUp->_readNVM
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _bootPowerUp->_readNVM
    _poll->_consumerProcessMessage
    _teachProcessMessage->_doEvlrn
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage5
    _doReqev->_findEvent
    _doNnevn->_sendMessage3
    _doNnclr->_clearAllEvents
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _addEvent->_findEvent
    _writeEv->_writeNVM
    _pollTimedResponse->_reqevCallback
    _getEv->_readNVM
    _nerdCallback->_sendMessage7
    _setNV->_writeNVM
    _startTimedResponse->_findServiceIndex
    _sendMessage6->_sendMessage
    _sendMessage4->_sendMessage
    _sendMessage3->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _canGetDiagnostic->_getNumRxBuffersInUse
    _canGetDiagnostic->_getNumTxBuffersInUse
    _mnsPoll->_sendMessage5
    _setLEDsByMode->_showStatus
    _sendMessage2->_sendMessage
    _sendMessage7->_sendMessage
    _findEvent->_getHash
    _consumerEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _APP_processConsumedEvent->_getEVs
    _getEVs->_readNVM
    _canReceiveMessage->_handleSelfEnumeration
    _handleSelfEnumeration->_tickGet
    _sendMessage5->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_getNextWriteMessage
    _canSendMessage->_startEnumeration
    _canPoll->_processEnumeration
    _processEnumeration->_setNewCanId
    _startEnumeration->_tickGet
    _setNewCanId->_writeNVM
    _loop->_tickGet
    _doFlash->_getNV
    _checkPowerOnPb->_factoryReset
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->_tickGet
    ___lldiv->_tickGet
    _teachFactoryReset->_clearAllEvents
    _nvFactoryReset->_writeNVM
    _APP_nvDefault->___awdiv
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _factoryResetGlobalEvents->_clearAllEvents
    _clearAllEvents->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _writeNVM->_FLASH_Write
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_WriteNoVerify
    _rebuildHashtable->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _readNVM->_EEPROM_Read
    _readNVM->_FLASH_Read
    _APP_testMode->_tickGet

Critical Paths under _receiveOverrun in COMRAM

    None.

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    _main->_poll
    _poll->_mnsProcessMessage

Critical Paths under _receiveOverrun in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _receiveOverrun in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _receiveOverrun in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _receiveOverrun in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _receiveOverrun in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _receiveOverrun in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _receiveOverrun in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _receiveOverrun in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _receiveOverrun in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _receiveOverrun in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _receiveOverrun in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _receiveOverrun in BANK16

    None.

Critical Paths under _TMR0_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _receiveOverrun in BANK17

    None.

Critical Paths under _TMR0_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _receiveOverrun in BANK18

    None.

Critical Paths under _TMR0_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _receiveOverrun in BANK19

    None.

Critical Paths under _TMR0_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _receiveOverrun in BANK20

    None.

Critical Paths under _TMR0_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _receiveOverrun in BANK21

    None.

Critical Paths under _TMR0_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _receiveOverrun in BANK22

    None.

Critical Paths under _TMR0_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _receiveOverrun in BANK23

    None.

Critical Paths under _TMR0_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _receiveOverrun in BANK24

    None.

Critical Paths under _TMR0_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _receiveOverrun in BANK25

    None.

Critical Paths under _TMR0_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _receiveOverrun in BANK26

    None.

Critical Paths under _TMR0_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _receiveOverrun in BANK27

    None.

Critical Paths under _TMR0_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _receiveOverrun in BANK28

    None.

Critical Paths under _TMR0_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _receiveOverrun in BANK29

    None.

Critical Paths under _TMR0_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _receiveOverrun in BANK30

    None.

Critical Paths under _TMR0_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _receiveOverrun in BANK31

    None.

Critical Paths under _TMR0_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _receiveOverrun in BANK32

    None.

Critical Paths under _TMR0_ISR in BANK32

    None.

Critical Paths under _DEFAULT_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _receiveOverrun in BANK33

    None.

Critical Paths under _TMR0_ISR in BANK33

    None.

Critical Paths under _DEFAULT_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _receiveOverrun in BANK34

    None.

Critical Paths under _TMR0_ISR in BANK34

    None.

Critical Paths under _DEFAULT_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _receiveOverrun in BANK35

    None.

Critical Paths under _TMR0_ISR in BANK35

    None.

Critical Paths under _DEFAULT_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _receiveOverrun in BANK36

    None.

Critical Paths under _TMR0_ISR in BANK36

    None.

Critical Paths under _DEFAULT_ISR in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _receiveOverrun in BANK37

    None.

Critical Paths under _TMR0_ISR in BANK37

    None.

Critical Paths under _DEFAULT_ISR in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _receiveOverrun in BANK38

    None.

Critical Paths under _TMR0_ISR in BANK38

    None.

Critical Paths under _DEFAULT_ISR in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _receiveOverrun in BANK39

    None.

Critical Paths under _TMR0_ISR in BANK39

    None.

Critical Paths under _DEFAULT_ISR in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _receiveOverrun in BANK40

    None.

Critical Paths under _TMR0_ISR in BANK40

    None.

Critical Paths under _DEFAULT_ISR in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _receiveOverrun in BANK41

    None.

Critical Paths under _TMR0_ISR in BANK41

    None.

Critical Paths under _DEFAULT_ISR in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _receiveOverrun in BANK42

    None.

Critical Paths under _TMR0_ISR in BANK42

    None.

Critical Paths under _DEFAULT_ISR in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _receiveOverrun in BANK43

    None.

Critical Paths under _TMR0_ISR in BANK43

    None.

Critical Paths under _DEFAULT_ISR in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _receiveOverrun in BANK44

    None.

Critical Paths under _TMR0_ISR in BANK44

    None.

Critical Paths under _DEFAULT_ISR in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _receiveOverrun in BANK45

    None.

Critical Paths under _TMR0_ISR in BANK45

    None.

Critical Paths under _DEFAULT_ISR in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _receiveOverrun in BANK46

    None.

Critical Paths under _TMR0_ISR in BANK46

    None.

Critical Paths under _DEFAULT_ISR in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _receiveOverrun in BANK47

    None.

Critical Paths under _TMR0_ISR in BANK47

    None.

Critical Paths under _DEFAULT_ISR in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _receiveOverrun in BANK48

    None.

Critical Paths under _TMR0_ISR in BANK48

    None.

Critical Paths under _DEFAULT_ISR in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _receiveOverrun in BANK49

    None.

Critical Paths under _TMR0_ISR in BANK49

    None.

Critical Paths under _DEFAULT_ISR in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _receiveOverrun in BANK50

    None.

Critical Paths under _TMR0_ISR in BANK50

    None.

Critical Paths under _DEFAULT_ISR in BANK50

    None.

Critical Paths under _main in BANK51

    None.

Critical Paths under _receiveOverrun in BANK51

    None.

Critical Paths under _TMR0_ISR in BANK51

    None.

Critical Paths under _DEFAULT_ISR in BANK51

    None.

Critical Paths under _main in BANK52

    None.

Critical Paths under _receiveOverrun in BANK52

    None.

Critical Paths under _TMR0_ISR in BANK52

    None.

Critical Paths under _DEFAULT_ISR in BANK52

    None.

Critical Paths under _main in BANK53

    None.

Critical Paths under _receiveOverrun in BANK53

    None.

Critical Paths under _TMR0_ISR in BANK53

    None.

Critical Paths under _DEFAULT_ISR in BANK53

    None.

Critical Paths under _main in BANK54

    None.

Critical Paths under _receiveOverrun in BANK54

    None.

Critical Paths under _TMR0_ISR in BANK54

    None.

Critical Paths under _DEFAULT_ISR in BANK54

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  179554
                                             92 COMRAM     3     3      0
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     620
                           _initARGB
              _setTimedResponseDelay
                            _tickGet
                     _updateLedRange
 ---------------------------------------------------------------------------------
 (2) _setTimedResponseDelay                                1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              6     6      0    4604
                                             40 COMRAM     5     5      0
                        _bootPowerUp *
                         _canPowerUp *
                    _consumerPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0    1395
                                             39 COMRAM     1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0     450
                                             17 COMRAM     1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0     382
                                             12 COMRAM     5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0     735
                                             12 COMRAM     3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     211
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           4     4      0      99
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _consumerPowerUp                                      1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                          20    20      0    1037
                                             12 COMRAM     2     2      0
              _CAN1_OperationModeSet
            _prepareSelfEnumResponse
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _CAN1_OperationModeSet                                2     2      0     141
                                              0 COMRAM     2     2      0
              _CAN1_OperationModeGet
 ---------------------------------------------------------------------------------
 (4) _CAN1_OperationModeGet                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bootPowerUp                                          6     6      0     497
                                             12 COMRAM     6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0  147021
                                             30 BANK5     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
                 _bootProcessMessage *
                            _canPoll *
                  _canProcessMessage *
                  _canReceiveMessage *
             _consumerProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2   72439
                                             83 COMRAM     8     6      2
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4    5601
                                             48 COMRAM     5     1      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              4     4      0    2884
                                             41 COMRAM     4     4      0
                              _getEN
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doReval                                              6     5      1    6035
                                             43 COMRAM     6     5      1
                 _evtIdxToTableIndex
                   _findServiceIndex
                              _getEv
                       _sendMessage3
                       _sendMessage5
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5    9898
                                             46 COMRAM     8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              4     4      0    2884
                                             41 COMRAM     4     4      0
                              _getEN
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0    8662
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0     296
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0    6080
                                             43 COMRAM     6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4   11133
                                             58 COMRAM     5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4    3606
                                             53 COMRAM     5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              6     0      6   12637
                                             77 COMRAM     6     0      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                         7     0      7    5104
                                             70 COMRAM     7     0      7
                           _addEvent
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            24    17      7    4989
                                             46 COMRAM    24    17      7
                          _findEvent
                    _flushFlashBlock
                              _getEN
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _writeEv                                             16    14      2     782
                                             20 COMRAM    16    14      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0   21461
                                             60 COMRAM     3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2    6722
                                             45 COMRAM    15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage5
                       _sendMessage6
                 _tableIndexToEvtIdx
 ---------------------------------------------------------------------------------
 (4) _numEv                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _getEv                                               16    14      2     352
                                             12 COMRAM    16    14      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2    2603
                                             45 COMRAM     4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2    3505
                                             45 COMRAM     6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2    2723
                                             45 COMRAM     6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2    2788
                                             45 COMRAM     2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          9     7      2    3097
                                             45 COMRAM     8     6      2
                                NULL *
                   _canGetDiagnostic *
              _consumerGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2   11789
                                             83 COMRAM     6     4      2
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1     946
                                             20 COMRAM     5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   3     1      2       2
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       2     1      1       1
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   38    36      2   19277
                                             83 COMRAM     7     5      2
                                              0 BANK5     30    30      0
                                NULL *
                        _bootEsdData *
                         _canEsdData *
                   _canGetDiagnostic *
           _canWaitForTxQueueToDrain *
                    _consumerEsdData *
              _consumerGetDiagnostic *
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
                   _rebuildHashtable
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   4     1      3     155
                                              4 COMRAM     4     1      3
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6    2463
                                             37 COMRAM     7     1      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _sendMessage4                                         5     1      4    2403
                                             37 COMRAM     5     1      4
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3    2418
                                             37 COMRAM     4     1      3
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         5     5      0     319
                                              5 COMRAM     4     4      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     171
                                              4 COMRAM     1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     141
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (4) _consumerGetDiagnostic                                3     1      2      58
                                              6 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _consumerEsdData                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _canWaitForTxQueueToDrain                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     6     4      2     203
                                              6 COMRAM     4     2      2
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootEsdData                                          1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0    5892
                                             43 COMRAM     4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      29
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2    2361
                                             37 COMRAM     3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _consumerProcessMessage                               9     7      2    8190
                                             83 COMRAM     9     7      2
           _APP_processConsumedEvent
              _consumerEventCheckLen
                          _findEvent
                    _isConsumedEvent
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7    2491
                                             37 COMRAM     8     1      7
                                NULL (ARG) *
                        _bootEsdData (ARG) *
                         _canEsdData (ARG) *
                    _consumerEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _isConsumedEvent                                      1     1      0      29
                                              0 COMRAM     1     1      0
                _APP_isConsumedEvent
 ---------------------------------------------------------------------------------
 (4) _APP_isConsumedEvent                                  1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4    1244
                                             33 COMRAM    13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (3) _consumerEventCheckLen                                3     0      3    2841
                                             48 COMRAM     3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4    2795
                                             43 COMRAM     5     1      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _APP_processConsumedEvent                             9     7      2    1030
                                             27 COMRAM     9     7      2
                             _getEVs
                     _updateLedRange
                          _updateRGB
 ---------------------------------------------------------------------------------
 (4) _updateRGB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getEVs                                              15    15      0     395
                                             12 COMRAM    15    15      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                   10     8      2    1290
                                             15 COMRAM    10     8      2
               _getNumRxBuffersInUse
              _handleSelfEnumeration
                             _memcpy
                                _pop
 ---------------------------------------------------------------------------------
 (3) _pop                                                  9     7      2     200
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     146
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                5     5      0     298
                                             10 COMRAM     5     5      0
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2    2745
                                             83 COMRAM     4     2      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5    2635
                                             37 COMRAM     6     1      5
                  _getParameterFlags (ARG)
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                         11     3      8    2266
                                             26 COMRAM    11     3      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                      15    13      2    1997
                                             12 COMRAM    14    12      2
                _getNextWriteMessage
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
                               _have
                            _isEvent
                   _startEnumeration
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      82
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     119
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNumTxBuffersInUse                                 6     6      0      69
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _getNumRxBuffersInUse                                 6     6      0      47
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 12    10      2     222
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (2) _canPoll                                              1     1      0    1741
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0    1741
                                             21 COMRAM     7     7      0
                        _setNewCanId
                   _startEnumeration
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _startEnumeration                                     2     2      0     375
                                             10 COMRAM     2     2      0
                            _sendRTR
                            _tickGet
 ---------------------------------------------------------------------------------
 (8) _sendRTR                                              2     2      0      67
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0     905
                                             20 COMRAM     1     1      0
            _prepareSelfEnumResponse
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _prepareSelfEnumResponse                              2     2      0     133
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2     722
                                             83 COMRAM     4     2      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                                2     0      2       1
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2       1
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 4     4      0    1973
                                             10 COMRAM     4     4      0
                            _doFlash
                      _refreshString
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _refreshString                                        2     2      0       0
 ---------------------------------------------------------------------------------
 (2) _doFlash                                              2     2      0    1762
                                              4 COMRAM     2     2      0
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _getNV                                                4     2      2      87
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0   14001
                                             59 COMRAM     1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      29
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    1033
                                             23 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    1033
                                             23 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0     529
                                             10 COMRAM     4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8      98
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     166
                                             10 COMRAM    13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (1) _factoryReset                                         5     5      0   10950
                                             54 COMRAM     5     5      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _teachFactoryReset                                    0     0      0    3666
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (2) _nvFactoryReset                                       3     3      0    1538
                                             20 COMRAM     3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _APP_nvDefault                                        3     3      0     792
                                              8 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     318
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _mnsFactoryReset                                      0     0      0     656
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _canFactoryReset                                      0     0      0     656
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _APP_factoryReset                                     1     1      0    3666
           _factoryResetGlobalEvents
 ---------------------------------------------------------------------------------
 (3) _factoryResetGlobalEvents                             0     0      0    3666
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       1     1      0    3666
                                             53 COMRAM     1     1      0
                   _rebuildHashtable
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                    14    14      0    2271
                                             39 COMRAM    14    14      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _writeNVM                                             7     3      4     656
                                             13 COMRAM     7     3      4
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (7) _FLASH_Write                                          9     5      4     247
                                              5 COMRAM     8     4      4
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (8) _loadFlashBlock                                       3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) _flushFlashBlock                                      1     1      0      46
                                              4 COMRAM     1     1      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (9) _eraseFlashBlock                                      4     4      0      23
                                              0 COMRAM     4     4      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (10) _APP_isSuitableTimeToWriteFlash                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EEPROM_Write                                         5     1      4     228
                                              8 COMRAM     4     0      4
                        _EEPROM_Read
               _EEPROM_WriteNoVerify
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EEPROM_WriteNoVerify                                 8     4      4      91
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    10    10      0    1327
                                             33 COMRAM     6     6      0
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               15    13      2     432
                                             12 COMRAM    15    13      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     139
                                             27 COMRAM     6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               14    12      2     351
                                             12 COMRAM    14    12      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _readNVM                                              6     3      3     247
                                              6 COMRAM     6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (2) _FLASH_Read                                           6     3      3     111
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          6     3      3      46
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (4) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         7     7      0     821
                                             10 COMRAM     7     7      0
                           _initARGB
                            _tickGet
                     _updateLedRange
 ---------------------------------------------------------------------------------
 (2) _updateLedRange                                       4     2      2     224
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) _initARGB                                             1     1      0     156
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _receiveOverrun                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DEFAULT_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
       _initARGB
       _tickGet
       _updateLedRange
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
           _clearAllEvents
             _rebuildHashtable
               _getEN
                 _readNVM
                   _EEPROM_Read
                   _FLASH_Read
               _getHash
                 _getEN (ARG)
                 _getNN (ARG)
                   _readNVM
               _getNN
             _removeTableEntry
               _flushFlashBlock
                 _APP_isSuitableTimeToWriteFlash
                 _eraseFlashBlock
                   _APP_isSuitableTimeToWriteFlash
               _rebuildHashtable
               _writeNVM
                 _APP_nvDefault (ARG)
                   ___awdiv
                   ___awmod
                 _EEPROM_Write (ARG)
                   _EEPROM_Read
                   _EEPROM_WriteNoVerify
                   _updateModuleErrorStatus
                 _FLASH_Write (ARG)
                   _eraseFlashBlock
                   _flushFlashBlock
                   _loadFlashBlock
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     _doFlash
       _getNV
     _refreshString
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
     ___lmul *
     _bootProcessMessage *
       _writeNVM
     _canPoll *
       _processEnumeration
         _setNewCanId
           _prepareSelfEnumResponse
           _writeNVM
         _startEnumeration
           _sendRTR
           _tickGet
         _tickGet
         _updateModuleErrorStatus
     _canProcessMessage *
       _sendMessage5
         _getParameterFlags (ARG)
           _have
         _sendMessage (ARG)
           _canSendMessage *
             _getNextWriteMessage
             _getNumRxBuffersInUse
             _getNumTxBuffersInUse
             _have
             _isEvent
             _startEnumeration
             _updateModuleErrorStatus
         _tableIndexToEvtIdx (ARG)
     _canReceiveMessage *
       _getNumRxBuffersInUse
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
     _consumerProcessMessage *
       _APP_processConsumedEvent
         _getEVs
           _readNVM
         _updateLedRange
         _updateRGB
       _consumerEventCheckLen
         _checkLen
           _sendMessage5
       _findEvent
         _getEN
         _getHash
         _getNN
       _isConsumedEvent
         _APP_isConsumedEvent
       _sendMessage7
         NULL(Fake) (ARG) *
         _bootEsdData (ARG) *
         _canEsdData (ARG) *
         _consumerEsdData (ARG) *
         _nvGetESDdata (ARG) *
         _sendMessage (ARG) *
         _tableIndexToEvtIdx (ARG) *
         _teachGetESDdata (ARG) *
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
         _sendMessage
       _sendMessage5
       _setLEDsByMode
         _showStatus
       _tickGet
       _writeNVM
     _mnsProcessMessage *
       NULL(Fake) *
       _bootEsdData *
       _canEsdData *
       _canGetDiagnostic *
         _getNumRxBuffersInUse
         _getNumTxBuffersInUse
       _canWaitForTxQueueToDrain *
       _consumerEsdData *
       _consumerGetDiagnostic *
       _findServiceIndex *
       _getParameter *
         _getParameterFlags
         _have
       _getParameterFlags *
       _mnsGetDiagnostic *
       _nvGetDiagnostic *
       _nvGetESDdata *
       _rebuildHashtable *
       _sendMessage2 *
       _sendMessage3 *
         _sendMessage
       _sendMessage4 *
         _getParameter (ARG)
         _sendMessage (ARG)
       _sendMessage5 *
       _sendMessage6 *
         _numEv (ARG)
         _sendMessage (ARG)
       _sendMessage7 *
       _setLEDsByMode *
       _startTimedResponse *
         _findServiceIndex (ARG)
       _teachGetDiagnostic *
       _teachGetESDdata *
       _writeNVM *
     _nvProcessMessage *
       _findServiceIndex
       _getNV
       _sendMessage2
       _sendMessage3
       _sendMessage4
       _sendMessage5
       _setNV
         _APP_nvValidate
         _APP_nvValueChanged
         _writeNVM
       _startTimedResponse
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _canGetDiagnostic *
         _consumerGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
           _readNVM
         _getNN
         _numEv
         _sendMessage5
         _sendMessage6
         _tableIndexToEvtIdx
     _showStatus *
     _teachProcessMessage *
       _doEvlrn
         _APP_addEvent
           _addEvent
             _findEvent
             _flushFlashBlock
             _getEN
             _rebuildHashtable
             _writeEv
               _writeNVM
             _writeNVM
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doEvuln
         _removeEvent
           _findEvent
           _removeTableEntry
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doNenrd
         _evtIdxToTableIndex
         _getEN
         _getNN
         _sendMessage3
         _sendMessage5
       _doNerd
         _findServiceIndex
         _startTimedResponse
       _doNnclr
         _clearAllEvents
         _sendMessage2
         _sendMessage5
       _doNnevn
         _getEN
         _sendMessage3
       _doReqev
         _findEvent
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _sendMessage6
         _startTimedResponse
       _doReval
         _evtIdxToTableIndex
         _findServiceIndex
         _getEv
         _sendMessage3
         _sendMessage5
         _startTimedResponse
       _doRqevn
         _getEN
         _sendMessage3
       _sendMessage3
       _sendMessage5
       _teachCheckLen
         _checkLen
         _sendMessage5
     _tickGet *
   _powerUp
     _bootPowerUp *
       _readNVM
     _canPowerUp *
       _CAN1_OperationModeSet
         _CAN1_OperationModeGet
       _prepareSelfEnumResponse
       _readNVM
       _tickGet
     _consumerPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
         _readNVM
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _initARGB
     _setTimedResponseDelay
     _tickGet
     _updateLedRange

 _receiveOverrun (ROOT)

 _TMR0_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM           12799      0    1405     11.0%
BITBIGSFR_1       2304      0       0      0.0%
BITBIGSFRlhl       577      0       0      0.0%
BITBANK54          256      0       0      0.0%
BANK54             256      0       0      0.0%
BITBANK53          256      0       0      0.0%
BANK53             256      0       0      0.0%
BITBANK52          256      0       0      0.0%
BANK52             256      0       0      0.0%
BITBANK51          256      0       0      0.0%
BANK51             256      0       0      0.0%
BITBANK50          256      0       0      0.0%
BANK50             256      0       0      0.0%
BITBANK49          256      0       0      0.0%
BANK49             256      0       0      0.0%
BITBANK48          256      0       0      0.0%
BANK48             256      0       0      0.0%
BITBANK47          256      0       0      0.0%
BANK47             256      0       0      0.0%
BITBANK46          256      0       0      0.0%
BANK46             256      0       0      0.0%
BITBANK45          256      0       0      0.0%
BANK45             256      0       0      0.0%
BITBANK44          256      0       0      0.0%
BANK44             256      0       0      0.0%
BITBANK43          256      0       0      0.0%
BANK43             256      0       0      0.0%
BITBANK42          256      0       0      0.0%
BANK42             256      0       0      0.0%
BITBANK41          256      0       0      0.0%
BANK41             256      0       0      0.0%
BITBANK40          256      0       0      0.0%
BANK40             256      0       0      0.0%
BITBANK39          256      0       0      0.0%
BANK39             256      0       0      0.0%
BITBANK38          256      0       0      0.0%
BANK38             256      0       0      0.0%
BITBANK37          256      0       0      0.0%
BANK37             256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0     252     98.4%
BITBANK7           256      0       0      0.0%
BANK7              256      0     255     99.6%
BITBANK6           256      0       0      0.0%
BANK6              256      0     189     73.8%
BITBIGSFRhllh      243      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160     45     159     99.4%
BITBIGSFRhlh       156      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     95      95    100.0%
BITBIGSFRllllll     64      0       0      0.0%
BITBIGSFRhlll       61      0       0      0.0%
BITBIGSFRllhl       43      0       0      0.0%
BITBIGSFRllhh       40      0       0      0.0%
BITBIGSFRlllllh     37      0       0      0.0%
BITBIGSFRlllh       20      0       0      0.0%
BITBIGSFRlhh        11      0       0      0.0%
BITBIGSFRhh          8      0       0      0.0%
BITBIGSFRllllh       1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0    2355      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Apr 25 02:53:33 2025

                      nerdCallback@nodeNumber 0530                           findEvent@tableIndex 052E  
                   __end_of_pollTimedResponse 6166                        ?_handleSelfEnumeration 0501  
                            sendMessage@data1 051C                              sendMessage@data2 051D  
                            sendMessage@data3 051E                              sendMessage@data4 051F  
                            sendMessage@data5 0520                              sendMessage@data6 0521  
                            sendMessage@data7 0522                           findEvent@nodeNumber 0522  
               __end_of_setTimedResponseDelay 821C                                 ?_APP_addEvent 0547  
                        _getNumRxBuffersInUse 7360                                            l53 8246  
                                          l82 7894                                            l86 8190  
                                          l78 7D32                         _timedResponseCallback 0587  
                         _timedResponseOpcode 05A2                                  ___awdiv@sign 0506  
                                          _nn 058F                              ?_flushFlashBlock 0501  
                     __end_of_eraseFlashBlock 6F02                                           l101 824C  
                                         l110 8260                                           l104 8258  
                                         l113 80BC                                           l107 825C  
                                         l116 5956                                           l117 5A0C  
                                         l306 8254                                           l340 5BBA  
                                         l253 4850                                           l261 7BDA  
                                         l309 8264                                           l341 5BDE  
                                         l254 49A4                                           l264 8222  
                                         l345 6B2A                                           l354 7DA2  
                                         l291 7F4E                                           l355 7DCE  
                                         l620 7270                                           l356 7DAA  
                                         l287 25FE                                           l607 4E10  
                      __end_of_updateLedRange 7BDC                                           l640 8100  
                                         l624 5CB6                                           l297 51DE  
                                         l801 3F9C                                           l706 7520  
                                         l810 3DD0                                           l570 4CE2  
                                         l635 823A                                           l716 64EE  
                                         l652 653E                                           l653 654A  
                                         l742 47E0                                           l646 6594  
                                         l567 8176                                           l663 73D2  
                                         l815 3DDC                                           l832 8212  
                                         l648 650E                                           l657 7180  
                                         l673 2C48                                           l841 815A  
                                         l761 8208                                           l746 7B0E  
                                         l674 2EC4                                           l682 81EE  
                                         l754 6F4C                                           l691 4286  
                                         l827 3EEA                                           l668 2C2A  
                                         l692 4432                                           l836 7EC2  
                                         l685 81FE                                           l757 6F80  
                                         l846 81D6                                           l758 6F82  
                                         l688 7B96                                           l952 7C58  
                                         l947 8240                                           l972 1910  
                                         l796 7CC8                                           l958 1ECE  
                                         l975 19A4                                           l984 1AF4  
                             checkPowerOnPb@i 053C                                           l969 185C  
                          _enumerationResults 0632              ??_APP_isSuitableTimeToWriteFlash 0501  
             ?_APP_isSuitableTimeToWriteFlash 0501                                           _evs 0800  
                                         _pop 6166                                 _APP_nvDefault 50A4  
                                ___awmod@sign 0506                                           prod 04F3  
                                         tosl 04FD                                           wreg 04E8  
                tableIndexToEvtIdx@tableIndex 0501                       APP_nvValueChanged@index 0501  
                     APP_nvValueChanged@value 0501                                   _subtestTime 0578  
         __end_of_mnsTRallDiagnosticsCallback 541E                   _mnsTRallDiagnosticsCallback 5302  
                                        l1022 7004                                          l1103 7D66  
                                        l1120 3CB6                                          l2001 581E  
                                        l2010 5FE2                                          l1034 7EF2  
                                        l1027 7E32                                          l1108 461C  
                                        l1052 74B4                                          l1132 6BBC  
                                        l1044 7AA2                                          l1300 4EAC  
                                        l2004 821A                                          l2100 6246  
                                        l1141 8250                                          l1045 7AC6  
                                        l1301 4EE0                                          l2014 5EDE  
                                        l1118 3C5E                                          l1070 5E5E  
                                        l1062 7A56                                          l2102 62BE  
                                        l1039 8120                                          l2007 5FA0  
                                        l2023 663A                                          l1127 6396  
                                        l1063 7A7A                                          l1160 822E  
                                        l1048 81A8                                          l1153 5300  
                                        l2017 5F20                                          l1137 68C2  
                                        l1057 7086                                          l1313 16F6  
                                        l1305 4F60                                          l1170 5674  
                                        l1146 697A                                          l1066 7F20  
                                        l1147 69FC                                          l1411 278A  
                                        l1163 8234                                          l1083 7106  
                                        l1075 5AF6                                          l1323 0CC0  
                                        l1157 66E0                                          l2141 6774  
                                        l2125 75E6                                          l1341 0E58  
                                        l1166 813E                                          l2126 75F6  
                                        l2054 6824                                          l1422 2930  
                                        l1342 0ED4                                          l2071 7FCC  
                                        l1087 4C9E                                          l2039 327A  
                                        l1424 2954                                          l1416 27FA  
                                        l2080 7F78                                          l1096 5D8C  
                                        l2048 3296                                          l1169 562E  
                                        l1193 6222                                          l1433 7E92  
                                        l2058 7CFC                                          l1442 7B52  
                                        l1418 2836                                          l2074 7FA2  
                                        l1179 5726                                          l2059 7CFE  
                                        l2083 8020                                          l1292 758C  
                                        l2148 6784                                          l1188 5916  
                                        l2068 7FF6                                          l1372 15D8  
                                        l2077 804A                                          l1429 2A9C  
                                        l1381 169A                                          l2093 6232  
                                        l1702 793E                                          l1534 7C1A  
                                        l1550 76BE                                          l1391 6E78  
                                        l1447 4B2A                                          l1543 7E62  
                                        l1295 4E44                                          l2095 6240  
                                        l2088 6C4E                                          l1392 6E7C  
                                        l2096 6242                                          l1641 79E2  
                                        l2345 60A4                                          l1297 4E74  
                                        l2097 627E                                          l1722 7446  
                                        l1714 7782                                          l1802 4F8A  
                                        l1554 7990                                          l1562 6CDC  
                                        l1474 6A94                                          l2098 6244  
                                        l1707 547A                                          l1483 7D9A  
                                        l1299 4EA8                                          l1539 7C92  
                                        l1644 7A1A                                          l1660 765C  
                                        l1396 81EC                                          l1804 4F8A  
                                        l1653 77E0                                          l1709 552C  
                                        l1805 4F96                                          l2358 6444  
                                        l1638 81C0                                          l1478 541C  
                                        l1647 7A2E                                          l1663 72C2  
                                        l1671 6E9A                                          l1815 500E  
                                        l1567 3642                                          l1664 72E8  
                                        l1656 7600                                          l1816 50A2  
                                        l1673 6EAA                                          l1753 369A  
                                        l1674 6EDC                                          l1690 6938  
                                        l1682 6960                                          l1770 37B6  
                                        l1762 3754                                          l1594 78EA  
                                        l1755 36A2                                          l1764 376E  
                                        l1588 80DE                                          l1748 8072  
                                        l1693 695C                                          l1685 68EC  
                                        l1773 3838                                          l1846 735E  
                                        l1678 6F00                                          l1790 394E  
                                        l1782 38EC                                          l1766 378A  
                                        l1687 690A                                          l1775 3840  
                                        l1839 7720                                          l1696 78EC  
                                        l1784 3906                                          l1792 39CE  
                                        l1768 37A0                                          l1872 7804  
                                        l1689 691A                                          l1881 6164  
                                        l1698 78FC                                          l1786 3922  
                                        l1866 8228                                          l1699 7928  
                              _bootloaderType 05AA                                          l1788 3938  
                                        l1796 4F68                                          l1876 7828  
                                        l1877 783C                                          l1886 6124  
                                        l1799 4F7E                                          l2791 79E0  
                                        l1983 6D68                                          l7201 7348  
                                        l7203 734C                                          l7211 73DA  
                                        l8011 5158                                          l8003 50D4  
                                        l1995 562A                                          l7205 734E  
                                        l7141 7A10                                          l7133 818E  
                                        l7301 711E                                          l1989 6DF4  
                                        l8101 7ED6                                          l7143 7A18  
                                        l7151 72A4                                          l7215 73F4  
                                        l7231 81D8                                          l7127 8178  
                                        l8007 5112                                          l7311 7370  
                                        l7303 7176                                          l8031 64F2  
                                        l7145 7A28                                          l7137 79E2  
                                        l7225 741C                                          l7209 73D6  
                                        l7233 81EA                                          l7129 8188  
                                        l8017 519E                                          l7241 7B7A  
                                        l7321 73D0                                          l7305 717E  
                                        l8201 49B8                                          l8105 7EE2  
                                        l8033 6502                                          l9001 769C  
                                        l7139 79F2                                          l7219 7410  
                                        l7411 5244                                          l7403 51E2  
                                        l7171 6ED0                                          l7163 6E7E  
                                        l7251 68D8                                          l8019 51DC  
                                        l8051 7ADA                                          l7243 7B8A  
                                        l7235 7B54                                          l7331 7CF8  
                                        l8123 6D54                                          l8115 6CE2  
                                        l8131 77E4                                          l8043 6556  
                                        l8027 8252                                          l9003 76AC  
                                        l7181 72F0                                          l7157 72C6  
                                        l7149 7272                                          l7421 8122  
                                        l7413 5252                                          l7405 51F2  
                                        l7173 6EDA                                          l7165 6E7E  
                                        l7261 6936                                          l7253 68FC  
                                        l8053 7AEA                                          l7245 7B90  
                                        l7237 7B5C                                          l7317 7376  
                                        l7309 7360                                          l7341 6D6E  
                                        l7325 7CCC                                          l7501 2AFC  
                                        l8125 6D56                                          l8117 6D0E  
                                        l8109 6CE0                                          l8221 49D6  
                                        l8213 49CA                                          l8205 49BE  
                                        l8141 7818                                          l8133 77E8  
                                        l8037 651A                                          l8045 6584  
                                        l9021 6CA8                                          l9013 6C68  
                                        l9005 76AE                                          l7191 732A  
                                        l7183 72F8                                          l7159 72E0  
                                        l7423 8128                                          l7415 525E  
                                        l7271 762E                                          l7431 7784  
                                        l7175 6EEA                                          l7167 6E92  
                                        l7263 6946                                          l7255 6900  
                                        l7247 68C4                                          l9103 37A2  
                                        l8311 4F8E                                          l8303 4F64  
                                        l8055 7AEE                                          l7239 7B6C  
                                        l7319 73C8                                          l7351 6DE2  
                                        l7343 6D9A                                          l7335 6D6C  
                                        l7327 7CCE                                          l7511 2B56  
                                        l7503 2B02                                          l8127 6D66  
                                        l8119 6D4E                                          l8143 782E  
                                        l8135 77F8                                          l8039 652C  
                                        l8071 7EA6                                          l9031 80C4  
                                        l9023 6CCC                                          l9015 6C82  
                                        l9007 6C52                                          l8151 822C  
                                        l8063 8200                                          l8401 489C  
                                        l7193 732C                                          l7185 72FC  
                                        l7425 8138                                          l7417 52EE  
                                        l7409 51FE                                          l7601 5630  
                                        l7273 7632                                          l7441 77C4  
                                        l7433 7786                                          l7177 6EFE  
                                        l7169 6EAE                                          l7265 695A  
                                        l7257 6908                                          l7281 78EC  
                                        l9201 6734                                          l9121 3868  
                                        l8321 4FD4                                          l8313 4F9A  
                                        l8305 4F72                                          l8057 7B08  
                                        l8049 7ACA                                          l7353 6DF2  
                                        l7345 6DDA                                          l7329 7CE2  
                                        l7521 2BE2                                          l7513 2B72  
                                        l7505 2B0A                                          l8081 67A0  
                                        l8233 49EA                                          l8225 49DC  
                                        l8217 49D0                                          l8209 49C4  
                                        l8145 7832                                          l8137 77FE  
                                        l9041 80D0                                          l9025 6CDA  
                                        l9009 6C62                                          l8411 48D4  
                                        l8403 48BA                                          l7195 7330  
                                        l7187 7308                                          l7179 72EA  
                                        l9211 3F9E                                          l7427 813C  
                                        l7603 5650                                          l7275 763E  
                                        l7267 75F8                                          l7443 77CC  
                                        l7435 779A                                          l7259 6926  
                                        l7291 793A                                          l7283 7900  
                                        l7451 5450                                          l9203 6752  
                                        l9131 38B6                                          l9123 387A  
                                        l8331 5014                                          l8323 4FDC  
                                        l8315 4FAA                                          l8307 4F78  
                                        l7363 5898                                          l7531 2C40  
                                        l7515 2B8E                                          l7507 2B26  
                                        l7523 2BFE                                          l8083 67B8  
                                        l8067 7FFA                                          l8155 7FD0  
                                        l8139 7808                                          l8075 7EB2  
                                        l9035 80CA                                          l9019 6C88  
                                        l8147 8232                                          l8163 6844  
                                        l9051 78BA                                          l9043 7896  
                                        l8421 4930                                          l8413 4908  
                                        l8405 48BC                                          l7197 7340  
                                        l7189 731A                                          l9221 3FAC  
                                        l9213 3FA2                                          l7605 5652  
                                        l7277 7648                                          l7269 7610  
                                        l7445 77DE                                          l7285 791A  
                                        l7461 5492                                          l7453 5464  
                                        l9205 6762                                          l9141 3908  
                                        l9133 38D6                                          l9125 3880  
                                        l9109 37B8                                          l9117 37CC  
                                        l8325 4FEE                                          l8317 4FBC  
                                        l8309 4F82                                          l9301 1EFA  
                                        l7381 74CA                                          l7373 74B8  
                                        l7365 58B6                                          l7357 5820  
                                        l7293 7108                                          l7349 6DE0  
                                        l7541 2C7E                                          l7525 2C0A  
                                        l7517 2BAA                                          l7509 2B3A  
                                        l8085 67D8                                          l8093 6822  
                                        l8229 49E4                                          l8069 7E96  
                                        l8341 7E36                                          l9029 80C0  
                                        l8165 6854                                          l8157 6828  
                                        l9061 78E8                                          l9045 78A6  
                                        l7701 6B54                                          l8181 7D60  
                                        l8173 7D34                                          l8501 6F1A  
                                        l8431 4956                                          l8423 4932  
                                        l8415 490A                                          l8407 48BE  
                                        l7199 7342                                          l9231 4014  
                                        l9223 3FC0                                          l9215 3FA6  
                                        l7631 5704                                          l7615 5676  
                                        l7607 5662                                          l7279 765A  
                                        l7439 77BE                                          l7287 7926  
                                        l7471 552A                                          l7455 5472  
                                        l7463 5496                                          l8351 8242  
                                        l9207 6764                                          l9151 393A  
                                        l9143 3918                                          l9127 38A0  
                                        l9119 3848                                          l9071 36AA  
                                        l8327 4FF6                                          l8319 4FC4  
                                        l8335 5020                                          l9311 21B6  
                                        l9303 1F86                                          l7391 7502  
                                        l7383 74CC                                          l7367 58E0  
                                        l7359 588C                                          l7295 7118  
                                        l7551 2D64                                          l7543 2C86  
                                        l7535 2C56                                          l7527 2C22  
                                        l7519 2BC6                                          l7711 6BC0  
                                        l8087 67F6                                          l8079 6786  
                                        l8271 4A4C                                          l8263 4A24  
                                        l8247 4A0A                                          l8239 4A04  
                                        l8191 49A8                                          l8343 7E46  
                                        l8159 6838                                          l8175 7D4A  
                                        l8511 6F7C                                          l8503 6F2A  
                                        l8441 4994                                          l8433 4980  
                                        l8425 4934                                          l8417 490C  
                                        l8409 48C0                                          l8361 481E  
                                        l8353 47E2                                          l9241 4060  
                                        l9233 4024                                          l9225 3FC2  
                                        l9217 3FA8                                          l7625 56B2  
                                        l7617 568E                                          l7633 5714  
                                        l7609 5664                                          l7289 7936  
                                        l7465 54E2                                          l7457 5476  
                                        l7449 541E                                          l7481 7740  
                                        l9209 676E                                          l9145 391A  
                                        l9137 38EE                                          l9073 36CC  
                                        l9065 3644                                          l8329 5006  
                                        l9321 2388                                          l9305 2012  
                                        l7393 7516                                          l7385 74DC  
                                        l8521 4666                                          l7369 58EE  
                                        l7561 2DC6                                          l7553 2D72  
                                        l7545 2C8E                                          l7537 2C5C  
                                        l7529 2C3A                                          l7721 6BD4  
                                        l7713 6BC4                                          l8601 6166  
                                        l8089 681C                                          l8193 49AC  
                                        l8097 7FA6                                          l8169 6860  
                                        l8185 824E                                          l9057 78CC  
                                        l9049 78AC                                          l7705 6B5A  
                                        l8177 7D5A                                          l9401 6ABC  
                                        l8505 6F3C                                          l8443 4998  
                                        l8435 498E                                          l8427 4936  
                                        l8419 492E                                          l8371 486C  
                                        l8363 482E                                          l9251 4074  
                                        l9243 406E                                          l9235 402A  
                                        l9227 3FFE                                          l9219 3FAA  
                                        l7635 5716                                          l7627 56DE  
                                        l7619 56B0                                          l7467 550C  
                                        l7459 547E                                          l7475 7724  
                                        l9147 3924                                          l9139 38FE  
                                        l9091 3766                                          l9083 371C  
                                        l9075 36DE                                          l9067 367E  
                                        l9323 2414                                          l9307 209E  
                                        l9315 2242                                          l9331 25B8  
                                        l7811 71FA                                          l7395 751C  
                                        l7387 74F2                                          l7379 74BC  
                                        l8531 46D4                                          l8523 46A0  
                                        l8515 461E                                          l7571 2E52  
                                        l7563 2DE2                                          l7555 2D80  
                                        l7547 2CF4                                          l7539 2C6E  
                                        l7731 6BF8                                          l7723 6BD8  
                                        l7715 6BC8                                          l8611 61E2  
                                        l8603 6190                                          l8451 5950  
                                        l8267 4A38                                          l8259 4A10  
                                        l8291 7F7C                                          l8099 7EC6  
                                        l8347 7E52                                          l9059 78E2  
                                        l7707 6BBA                                          l7803 3CAC  
                                        l8507 6F5A                                          l8445 499A  
                                        l8437 4990                                          l8429 4944  
                                        l8381 4884                                          l8373 486E  
                                        l8365 483E                                          l9261 409C  
                                        l9253 4084                                          l9245 4070  
                                        l9237 403C                                          l9229 4012  
                                        l7397 663E                                          l7629 5702  
                                        l7469 550E                                          l7477 7728  
                                        l7741 8104                                          l7901 63B0  
                                        l9181 759E                                          l9157 3950  
                                        l9093 3770                                          l9085 373E  
                                        l9077 36E4                                          l9165 3964  
                                        l9069 3682                                          l9325 24A0  
                                        l9317 2270                                          l9309 212A  
                                        l9333 25E6                                          l9341 7F34  
                                        l7813 7206                                          l7389 74FC  
                                        l8541 4714                                          l8533 46F4  
                                        l8525 46A6                                          l8517 4622  
                                        l7581 2E9C                                          l7573 2E6E  
                                        l7565 2DFE                                          l7557 2D8E  
                                        l7549 2D4A                                          l7493 2A9E  
                                        l7733 6C18                                          l7725 6BDC  
                                        l7717 6BCC                                          l8621 79A6  
                                        l8613 620C                                          l8461 5998  
                                        l7653 632E                                          l7645 62F8  
                                        l7637 62E0                                          l7821 6DF6  
                                        l8197 49B2                                          l8189 7F52  
                                        l8293 7E66                                          l7805 3CB0  
                                        l8701 5DA0                                          l8509 6F62  
                                        l9501 4DB2                                          l8439 4992  
                                        l8391 488E                                          l8383 4886  
                                        l8375 4872                                          l8367 4840  
                                        l8359 47E8                                          l9263 40B0  
                                        l9255 4086                                          l9239 404E  
                                        l7399 66CE                                          l7591 562C  
                                        l7487 7758                                          l7671 4436  
                                        l7743 810A                                          l7735 8102  
                                        l7911 63E4                                          l7903 63B4  
                                        l9191 66F2                                          l9183 75AC  
                                        l9095 3780                                          l9079 3706  
                                        l9335 25E8                                          l9327 252C  
                                        l9319 22FC                                          l9343 7F36  
                                        l7815 725C                                          l8551 474A  
                                        l8543 4724                                          l8535 4700  
                                        l8527 46A8                                          l8519 465C  
                                        l7583 2EA4                                          l7575 2E74  
                                        l7567 2E1A                                          l7559 2DAA  
                                        l7495 2AC0                                          l7727 6BE0  
                                        l7719 6BD0                                          l8631 6448  
                                        l8623 79B2                                          l8615 621A  
                                        l8607 619C                                          l8471 59E2  
                                        l8463 59A8                                          l8447 591A  
                                        l7663 6380                                          l7655 634A  
                                        l7647 6318                                          l7639 62F6  
                                        l7831 6E28                                          l7823 6DF8  
                                        l8295 7E76                                          l7807 3CB4  
                                        l7751 39E6                                          l9407 6ADE  
                                        l9511 4DB6                                          l9431 4CAE  
                                        l8393 4890                                          l8385 4888  
                                        l8377 4874                                          l8369 4852  
                                        l9281 4228                                          l9265 416A  
                                        l9257 4096                                          l9273 4192  
                                        l7681 4600                                          l7673 4594  
                                        l7745 810C                                          l7921 641E  
                                        l7913 63EC                                          l7905 63C2  
                                        l9193 6708                                          l9185 75BC  
                                        l9097 3782                                          l9089 3756  
                                        l9337 25F8                                          l9345 7F40  
                                        l9353 825E                                          l7817 7260  
                                        l8545 4734                                          l8537 4704  
                                        l8529 46C4                                          l7585 2EB6  
                                        l7577 2E78                                          l7569 2E36  
                                        l7497 2AD6                                          l7729 6BE4  
                                        l8641 64A2                                          l8633 644C  
                                        l8625 79B6                                          l8609 61D4  
                                        l8473 59F0                                          l8465 59B6  
                                        l8449 593A                                          l7665 6382  
                                        l7657 6362                                          l7649 6328  
                                        l7841 6E64                                          l7833 6E3A  
                                        l7825 6E0E                                          l8289 4A7C  
                                        l7761 3A12                                          l7753 39F6  
                                        l8713 5E32                                          l8705 5DD0  
                                        l8721 7088                                          l8801 7A34  
                                        l9409 6AF6                                          l9513 4DBA  
                                        l9433 4CB2                                          l8395 4892  
                                        l8387 488A                                          l8379 4882  
                                        l9283 4236                                          l9267 4178  
                                        l9259 409A                                          l9275 41C8  
                                        l7683 4602                                          l7747 811C  
                                        l7931 8248                                          l7851 5FE4  
                                        l7915 63FA                                          l7923 6424  
                                        l7907 63CA                                          l9195 6710  
                                        l9187 75C6                                          l9179 758E  
                                        l9099 378C                                          l9291 1EE2  
                                        l9347 7F42                                          l9339 7F22  
                                        l8571 47A0                                          l8547 4738  
                                        l8539 4706                                          l7587 2EC0  
                                        l7579 2E84                                          l7499 2AEA  
                                        l7819 8024                                          l8635 6486  
                                        l8627 79C2                                          l8619 7992  
                                        l8475 59F4                                          l8467 59C4  
                                        l8459 5958                                          l7659 637A  
                                        l7843 6E66                                          l7835 6E3C  
                                        l7827 6E10                                          l8299 7E82  
                                        l8491 7DB8                                          l8483 7D9E  
                                        l7771 3BA4                                          l7763 3A20  
                                        l7755 39FC                                          l8715 5E36  
                                        l8707 5DF0                                          l8723 709E  
                                        l8811 7008                                          l8731 4B2C  
                                        l8803 7A42                                          l9419 6AFC  
                                        l9603 5C80                                          l9531 4DCA  
                                        l9515 4DBE                                          l9451 4D24  
                                        l9435 4CCC                                          l9427 4CA0  
                          doEvuln@eventNumber 053D                                          l8397 4898  
                                        l8389 488C                                          l7941 7BC6  
                                        l7933 7B9A                                          l9277 41DA  
                                        l9269 417A                                          l7685 4612  
                                        l7861 600E                                          l7853 5FE6  
                                        l7925 6434                                          l7917 6410  
                                        l7909 63DC                                          l8493 815C  
                                        l9197 671C                                          l9189 66E2  
                                        l9349 825A                                          l8565 4764  
                                        l8573 47A4                                          l8557 474E  
                                        l8549 4744                                          l8637 6498  
                                        l8645 64BA                                          l8629 79C6  
                                        l9621 4252                                          l8477 5A04  
                                        l8469 59D4                                          l8653 81C2  
                                        l7845 6E76                                          l7837 6E52  
                                        l7829 6E26                                          l8485 7DB2  
                                        l8661 8142                                          l8901 5D36  
                                        l7693 6B2E                                          l7781 3C4C  
                                        l7773 3BEA                                          l7765 3A32  
                                        l7757 39FE                                          l7749 39D0  
                                        l8717 5E44                                          l8709 5E02  
                                        l8725 70AE                                          l8821 706C  
                                        l8813 7010                                          l8741 4B92  
                                        l8733 4B42                                          l8805 7A54  
                                        l9701 3D1C                                          l9381 5B54  
                                        l9373 5B0C                                          l9365 5B0A  
                                        l9357 5AF8                                          l9541 4DD4  
                                        l9533 4DCC                                          l9525 4DC4  
                                        l9517 4DC2                                          l9509 4DB6  
                                        l9461 4D44                                          l9453 4D2E  
                                        l9445 4CEE                                          l9437 4CDA  
                                        l9429 4CA6                                          l9285 8216  
                                        ?_pop 0501                                          l8399 489A  
                                        l7943 7BC8                                          l7935 7BAA  
                                        l9279 4214                                          l7687 4616  
                                        l7679 4596                                          l7871 603C  
                                        l7863 6016                                          l7855 5FF4  
                                        l7927 643C                                          l7919 6418  
                                        l8495 8160                                          l8911 7522  
                                        l9199 672A                                          l9287 1ED0  
                                        l8567 478E                                          l8559 4762  
                                        l8639 649C                                          l9631 4296  
                                        l9623 4264                                          l7847 6E7A  
                                        l7839 6E54                                          l8591 80EC  
                                        l8663 8146                                          l8903 5D4A  
                                        l7695 6B3E                                          l7791 3C7E  
                                        l7783 3C4E                                          l7767 3B4A  
                                        l8815 7020                                          l8751 4BEA  
                                        l8735 4B52                                          l8831 5A3E  
                                        l8823 5A10                                          l8807 7A58  
                                        l9703 3D3A                                          l9383 5B58  
                                        l9375 5B28                                          l9367 5B0A  
                                        l9359 5AFE                                          l9551 4DE8  
                                        l9543 4DD6                                          l9535 4DCE  
                                        l9527 4DC4                                          l9463 4D48  
                                        l9455 4D3C                                          l9447 4D04  
                                        l9439 4CE6                                          l7937 7BAE  
                                        l7689 461A                                          l7881 6076  
                                        l7873 6044                                          l7865 601A  
                                        l7857 5FFC                                          l8913 7528  
                                        l9297 1EE4                                          l9289 1ED8  
                                        l8569 4790                                          l8577 47AC  
                                        l9641 42C8                                          l9625 4280  
                                        l7953 6964                                          l7945 8256  
                                        l8657 820C                                          l8921 7B14  
                                        l9617 8236                                          l8585 80E2  
                                        l8673 814C                                          l8905 5D6C  
                                        l7769 3B5A                                          l7785 3C66  
                                        l8729 70DE                                          l8753 4C0C  
                                        l8761 4C3E                                          l8745 4BC2  
                                        l8841 5A6E                                          l8833 5A42  
                                        l8825 5A18                                          l8809 7A68  
                                        l8681 6FAE                                          l9801 16FC  
                                        l9705 3D58                                          l9713 3D5E  
                                        l9721 3D82                                          l8497 6F04  
                                        l9393 5BC6                                          l9385 5B5A  
                                        l9377 5B4E                                          l9561 4E0A  
                                        l9553 4DEC                                          l9545 4DDA  
                                        l9537 4DD0                                          l9529 4DC8  
                                        l9481 4D9C                                          l9465 4D5E  
                                        l9457 4D3E                                          l9449 4D08  
                                        l7939 7BB6                                          l7891 609C  
                                        l7883 6078                                          l7875 6052  
                                        l7867 6022                                          l7859 6000  
                                        l8675 823C                                          l8915 7554  
                                        l9651 4304                                          l9643 42D0  
                                        l9635 429C                                          l9619 423E  
                                        l7963 697C                                          l7955 6974  
                                        l8923 7B1E                                          l8587 80E6  
                                        l8907 5D8A                                          l8931 69FE  
                                        l7699 6B44                                          l7779 3BEC  
                                        l7795 3C84                                          l8819 7050  
                                        l8771 7EF4                                          l8763 4C4C  
                                        l8755 4C12                                          l8747 4BD2  
                                        l8739 4B82                                          l8851 5ADC  
                                        l8835 5A52                                          l8843 5A88  
                                        l8827 5A28                                          l8683 6FBE  
                                        l9811 1764                                          l9803 1720  
                                        l9395 6A96                                          l9731 3DA4  
                                        l9715 3D7C                                          l8499 6F06  
                                        l9387 5B6A                                          l9563 4E0C  
                                        l9555 4E00                                          l9547 4DDE  
                                        l9539 4DD2                                          l9483 4DA0  
                                        l9467 4D70                                          l9459 4D40  
                                        l7885 607E                                          l7877 6058  
                                        l7869 6034                                          l8917 7570  
                                        l7981 795E                                          l9661 432A  
                                        l9653 430A                                          l9645 42DE  
                                        l9637 42A8                                          l7965 69E8  
                                        l7973 821C                                          l8925 7B28  
                                        l8853 7E06                                          l8597 80F2  
                                        l8933 6A0E                                          l7797 3CA2  
                                        l7789 3C6C                                          l7949 809C  
                                        l8773 7EF8                                          l8749 4BDA  
                                        l8845 5A9A                                          l8837 5A5A  
                                        l8685 6FE4                                          l8693 6FF0  
                                        l8677 6F84                                          l9813 176A  
                                        l9397 6AB6                                          l9573 5BFE  
                                        l9733 3DD0                                          l9725 3D88  
                                        l9389 5B7A                                          l9565 4E0E  
                                        l9557 4E04                                          l9493 4DA8  
                                        l9485 4DA4                                          l9477 4D98  
                                        l9469 4D7E                                          l9549 4DE4  
                                        l7879 606E                                          l7887 6084  
                                        l7895 6398                                          l7991 50A6  
                                        l7983 796E                                          l7975 7942  
                                        l9671 442A                                          l9663 4342  
                                        l9647 42E4                                          l9639 42C0  
                                        l7967 69EA                                          l8919 7B10  
                                        l8599 81EE                                          l8863 7E16  
                                        l8855 7E0A                                          l8871 7448  
                                        l8951 5370                                          l8943 5302  
                                        l8775 7F06                                          l8791 7AA4  
                                        l8767 4C80                                          l8759 4C2C  
                                        l8847 5AA8                                          l8839 5A6A  
                                        l8679 6F94                                          l9911 1A68  
                                        l9903 1A20                                          l9807 1726  
                                        l9591 5C62                                          l9567 5BE0  
                                        l9743 3DE0                                          l9559 4E06  
                                        l9495 4DA8                                          l9479 4D98  
                                        l7889 6094                                          l7897 639A  
                                        l7993 50B8                                          l7977 7952  
                                        l9649 42EA                                          l7969 69FA  
                                        l8929 7B32                                          l8881 747E  
                                        l8873 7458                                          l8961 541A  
                                        l8953 53D2                                          l8945 534C  
                                        l8937 6A14                                          l8697 5D8E  
                                        l8777 8192                                          l8793 7AB4  
                                        l8785 7A80                                          l8689 6FEA  
                                        l9825 1798                                          l9809 1746  
                                        l9585 5C44                                          l9569 5BF8  
                                        l9761 3F10                                          l9753 3ED0  
                                        l9745 3E86                                          l9497 4DAA  
                                        l7899 63A8                                          l7987 797A  
                                        l9659 4310                                          l8859 7E10  
                                        l8891 5CC2                                          l8883 748C  
                                        l8971 7D7E                                          l8947 536A  
                                        l8939 6A92                                          l8699 5D90  
                                        l8787 7A8E                                          l8779 7A7C  
                                        l8795 7A30                                          l9931 1AD2  
                                        l9923 1A8A                                          l9827 17B8  
                                        l9819 1770                                          l9579 5C22  
                                        l9771 3F9A                                          l9763 3F6E  
                                        l9747 3EBC                                          l9691 3CB8  
                                        l9499 4DAE                                          l9683 7C98  
                                        l7997 50BE                                          l9669 434A  
                                        l8869 7E1C                                          l8893 5CF4  
                                        l8885 74B2                                          l8877 745E  
                                        l8973 7D98                                          l8965 7D68  
                                        l8789 7AA0                                          l9909 1A48  
                                        l9853 1822                                          l9829 17D6  
                                        l9589 5C4A                                          l9765 3F74  
                                        l9693 3CD6                                          l9781 7C20  
                                        l9685 7CAC                                          l9677 7C94  
                                        l7999 50C0                                          l8983 7BE0  
                                        l8879 746C                                          l8967 7D78  
                                        l8959 53E8                                          l9951 1B62  
                                        l9943 1B32                                          l9871 18E8  
                                        l9855 1846                                          l9839 17F8  
                                        l9847 181A                                          l9767 3F84  
                                        l9759 3EFA                                          l9695 3CF6  
                                        l9791 7C3A                                          l9687 7CAE  
                                        l8985 7C08                                          l8977 7BDC  
                                        l8897 5CFA                                          l8889 5CBA  
                                        l9953 1B82                                          l9945 1B3A  
                                        l9937 1B02                                          l9929 1AB2  
                                        l9881 1924                                          l9865 1870  
                                        l9849 181C                                          l9769 3F94  
                                        l9793 7C4A                                          l9689 7CBE  
                                        l8987 7C0A                                          l8899 5D28  
                                        l9971 1BD4                                          l9699 3CFC  
                                        l8995 7662                                          l9795 7C54  
                                        l9787 7C24                                          l9779 7C1C  
                                        l9973 1BF4                                          l9965 1BAC  
                                        l8997 768A                                          l8989 765E  
                                        l9797 7C56                                          l9789 7C38  
                                        l9991 1C46                                          l9959 1BA4  
                                        l9887 197C                                          l9799 16F8  
                                        l9993 1C66                                          l9985 1C1E  
                                        l9897 19B8                                          l9979 1C16  
                      __end_of_checkPowerOnPb 663C                                          l9999 1C88  
                                        u5000 5726                                          u5001 5722  
                                        u5010 6328                                          _T2PR 0323  
                                        u5011 6324                                          u5020 6362  
                                        u5021 635E                                          u5110 811C  
                                        u5030 637A                                          u5111 8118  
                                        u5031 6376                                          u4400 79F2  
                                        u5040 6392                                          u5200 6E0E  
                                        u5120 39F6                                          u4401 79EE  
                                        u5041 638E                                          u5201 6E0A  
                                        u5121 39F2                                          _IPR5 0367  
                                        u4410 7A28                                          u5050 4612  
                                        u6010 6498                                          u5210 6E26  
                                        u5130 3A0E                                          _T4PR 032F  
                                        u4411 7A24                                          u5051 460E  
                                        u6011 6494                                          u5211 6E22  
                                        u5131 3A0A                                          u4420 72A4  
                                        u4500 81EA                                          u5300 606E  
                                        u5108 6C3C                                          u6004 6462  
                                        u5220 6E3A                                          u5060 6B3E  
                                        u5140 3A32                                          u6100 4BD2  
                                        u6020 6F94                                          u4421 72A0  
                                        u4501 81E6                                          u5301 606A  
                                        u5109 6C4E                                          u6005 645E  
                                        u5221 6E36                                          u5061 6B3A  
                                        u5141 3A2E                                          u6101 4BCE  
                                        u6021 6F90                                          u4430 6E92  
                                        u4510 68D4                                          u5310 6094  
                                        u5230 6E52                                          u5070 6B54  
                                        u5150 3B5A                                          u6110 4BEA  
                                        u6030 6FAE                                          u4431 6E8E  
                                        u4511 68D0                                          u5311 6090  
                                        u5231 6E4E                                          u5071 6B50  
                                        u5151 3B56                                          u6111 4BE6  
                                        u6031 6FAA                                          u4440 6EAA  
                                        u4520 68EC                                          u4600 7936  
                                        u5320 63A8                                          u5080 6BF8  
                                        u5400 6974                                          u5240 6E64  
                                        u5160 3C5E                                          u6120 4C4C  
                                        u6200 5A6A                                          u6040 6FBE  
                                        u7000 3F10                             doEvuln@nodeNumber 053B  
                                        u4441 6EA6                                          u4521 68E8  
                                        u4601 7932                                          u5321 63A4  
                                        u5081 6BF4                                          u5401 6970  
                                        u5241 6E60                                          u5161 3C5A  
                                        u6121 4C48                                          u6201 5A66  
                                        u6041 6FBA                                          u7001 3F0C  
                                        u4450 6EEA                                          u4530 68FC  
                                        u5330 63C2                                          u4610 7118  
                                        u5090 6C18                                          u5410 69FA  
                                        u5250 6E76                                          u5170 3C7E  
                                        u6050 5DA0                                          u6130 7AA0  
                                        u6210 5AA8                                          u7010 3F94  
                                        u4451 6EE6                                          u4531 68F8  
                                        u5331 63BE                                          u4611 7114  
                                        u5091 6C14                                          u5411 69F6  
                                        u5251 6E72                                          u5171 3C7A  
                                        u6051 5D9C                                          u6131 7A9C  
                                        u6211 5AA4                                          u7011 3F90  
                                        u4460 6EFE                                          u4540 691A  
                                        u5260 5FF4                                          u5340 63DC  
                                        u5420 7952                                          u4620 7146  
                                        u4700 6DDA                                          u5500 67A0  
                                        u6220 7458                                          u6300 53E4  
                                        u5180 3CA2                                          u6060 5E02  
                                        u6140 7AB4                                          u7100 1816  
                                        u7020 7C4A                                          u4461 6EFA  
                                        u4541 6916                                          u5261 5FF0  
                                        u5341 63D8                                          u5421 794E  
                                        u4701 6DD6                                          u5501 679C  
                                        u6221 7454                                          u6301 53E0  
                                        u5181 3C9E                                          u6061 5DFE  
                                        u6141 7AB0                                          u7101 1812  
                                        u7021 7C46                                          u4470 731A  
                                        u4390 8188                                          u4550 6946  
                                        u5270 600E                                          u5350 63FA  
                                        u5430 796E                                          u5190 7270  
                                        u4630 7176                                          u4710 6DF2  
                                        u5510 67B8                                          u6230 747E  
                                        u6310 7D78                                          u6070 70AE  
                                        u6150 7A54                                          u7110 1846  
                                        u7030 1720                                          u4471 7316  
                                        u4391 8184                                          u4551 6942  
                                        u5271 600A                                          u5351 63F6  
                                        u5431 796A                                          u5191 726C  
                                        u4631 7172                                          u4711 6DEE  
                                        u5511 67B4                                          u6231 747A  
                                        u6311 7D74                                          u6071 70AA  
                                        u6151 7A50                                          u7111 1842  
                                        u7031 171C                                          u4480 732A  
                                        u4560 695A                                          u4800 5464  
                                        u5280 6034                                          u5360 6410  
                                        u5440 50B8                                          u6320 7C1A  
                                        u6400 36DE                                          u4720 588C  
                                        u4640 7370                                          u5520 67D8  
                                        u8000 2A5A                                          u5600 7828  
                                        u6240 5CF4                                          u6080 4B52  
                                        u6160 7A68                                          u7200 1AAE  
                                        u7120 186C                                          u7040 1746  
                                        u4481 7326                                          u4561 6956  
                                        u4801 5460                                          u5281 6030  
                                        u5361 640C                                          u5441 50B4  
                                        u6321 7C16                                          u6401 36DA  
                                        u4721 5888                                          u4641 736C  
                                        u4625 713C                                          u5521 67D4  
                                        u8001 2A56                                          u5601 7824  
                                        u6241 5CF0                                          u6081 4B4E  
                                        u6161 7A64                                          u7201 1AAA  
                                        u7121 1868                                          u7041 1742  
                                        u4490 7340                                          u4570 7610  
                                        u4810 5472                                          u5290 6052  
                                        u5370 6434                                          u5450 50D0  
                                        u6410 3718                                          u4730 58E0  
                                        u4650 739E                                          u5530 67F6  
                                        u5610 6838                                          u6250 5D36  
                                        u6170 7020                                          u6090 4B92  
                                        u7210 1AD2                                          u7130 190C  
                                        u7050 1764                                          u6330 7698  
                                        u8010 7C84                                          u4491 733C  
                                        u4571 760C                                          u4811 546E  
                                        u5291 604E                                          u5371 6430  
                                        u5451 50CC                                          u6411 3714  
                                        u4731 58DC                                          u5531 67F2  
                                        u5611 6834                                          u6251 5D32  
                                        u6171 701C                                          u6091 4B8E  
                                        u7211 1ACE                                          u7131 1908  
                                        u7051 1760                                          u6331 7694  
                                        u8011 7C80                                          u5380 7BAA  
                                        u4580 765A                                          u4820 54C8  
                                        u6500 38E8                                          u6420 3750  
                                        u5700 5006                                          u4740 74DC  
                                        u4660 73C8                                          u4900 2C56  
                                        u5540 7ED6                                          u5460 6502  
                                        u5620 6854                                          u6260 5D4A  
                                        u6180 5A28                                          u7300 1C42  
                                        u7220 1AF0                                          u7140 1920  
                                        u7060 1794                                          u8100 3490  
                                        u8020 32B0                                          u6340 76BE  
                                        u5381 7BA6                                          u4581 7656  
                                        u4821 54C0                                          u6501 38E4  
                                        u6421 374C                                          u5701 5002  
                                        u4741 74D8                                          u4661 73C4  
                                        u4901 2C52                                          u5541 7ED2  
                                        u5461 64FE                                          u5621 6850  
                                        u6261 5D46                                          u6181 5A24  
                                        u7301 1C3E                                          u7221 1AEC  
                                        u7141 191C                                          u7061 1790  
                                        u8101 348C                                          u8021 32AC  
                                        u6341 76BA                                          u5390 7BDA  
                                        u4590 78FC                                          u6510 38FE  
                                        u6430 3766                                          u5470 7ADA  
                                        u4750 74F2                                          u4670 7CE2  
                                        u4910 2C6E                                          u5550 6D0E  
                                        u5710 7E46                                          u6350 6C62  
                                        u6270 6A0E                                          u5630 7D5A  
                                        u6190 5A52                                          u7310 1C66  
                                        u7230 1B02                                          u7150 19A0  
                                        u7070 17B8                                          u8110 34EA  
                                        u8030 32D6                                          u5391 7BD6  
                                        u4591 78F8                                          u6511 38FA  
                                        u6431 3762                                          u5471 7AD6  
                                        u4751 74EE                                          u4655 7394  
                                        u4671 7CDE                                          u4911 2C6A  
                                        u5551 6D0A                                          u5711 7E42  
                                        u6351 6C5E                                          u6271 6A0A  
                                        u5631 7D56                                          u6191 5A4E  
                                        u7311 1C62                                          u7231 1AFE  
                                        u7151 199C                                          u7071 17B4  
                                        u8111 34E6                                          u8031 32D2  
                                        u5720 4850                                          u4760 51F2  
                                        u4840 550C                                          u6600 6752  
                                        u6520 3918                                          u6440 3780  
                                        u5480 7AEA                                          u4680 7CF8  
                                        u4920 2C7E                                          u5800 5A04  
                                        u5560 6D4E                                          u5640 4A00  
                                        u6360 6C82                                          u6280 534C  
                                        u8200 610E                                          u7320 1C84  
                                        u7240 1B5E                                          u7160 19B4  
                                        u7080 17D6                                          u8120 354C  
                                        u8040 32F8                                          u7400 4E3A  
                                        u5721 484C                                          u4761 51EE  
                                        u4841 5508                                          u6601 674E  
                                        u6521 3914                                          u6441 377C  
                                        u5481 7AE6                                          u4681 7CF4  
                                        u4921 2C7A                                          u5801 5A00  
                                        u5561 6D4A                                          u5641 49FC  
                                        u6361 6C7E                                          u6281 5348  
                                        u8201 610A                                          u7321 1C80  
                                        u7241 1B5A                                          u7161 19B0  
                                        u7081 17D2                                          u8121 3548  
                                        u8041 32F4                                          u7401 4E36  
                                        u6610 3FFE                                          u4770 5252  
                                        u6530 3934                                          u6450 379C  
                                        u4690 6D9A                                          u4930 2E9C  
                                        u4850 2AC0                                          u5730 5936  
                                        u5570 6D66                                          u5650 4A78  
                                        u5490 7EA6                                          u6370 78A6  
                                        u8210 6120                                          u7330 1CB4  
                                        u7250 1B82                                          u7170 1A44  
                                        u7090 17F4                                          u8130 35A4  
                                        u8050 3314                                          u5810 6F1A  
                                        u7410 4E70                                          u6611 3FFA  
                                        u4771 524E                                          u6531 3930  
                                        u6451 3798                                          u4691 6D96  
                                        u4931 2E98                                          u4851 2ABC  
                                        u5731 5930                                          u5571 6D62  
                                        u5491 7EA2                                          u6371 78A2  
                                        u8211 611C                                          u7331 1CB0  
                                        u7251 1B7E                                          u7171 1A40  
                                        u7091 17F0                                          u8131 35A0  
                                        u8051 3310                                          u5811 6F16  
                                        u7411 4E6C                                          u6620 4024  
                                        u4780 77BA                                          u8220 555C  
                                        u6540 394A                                          u6460 37B2  
                                        u8300 7878                                          u5900 46F4  
                                        u4940 2EB6                                          u4860 2AD6  
                                        u5740 5938                                          u5580 77F8  
                                        u5660 7E76                                          u6380 78C8  
                                        u7340 1CD8                                          u7260 1BA0  
                                        u7180 1A68                                          u7500 0D12  
                                        u8060 3374                                          u5820 6F2A  
                                        u8140 76DE                                          u7420 4EA0  
                                        u6621 4020                                          u4781 77B6  
                                        u8221 5558                                          u6541 3946  
                                        u6461 37AE                                          u8301 7874  
                                        u5901 46F0                                          u4941 2EB2  
                                        u4861 2AD2                                          u5581 77F4  
                                        u5661 7E72                                          u6381 78C4  
                                        u7341 1CD4                                          u7261 1B9C  
                                        u7181 1A64                                          u7501 0D0E  
                                        u8061 3370                                          u5821 6F26  
                                        u8141 76DA                                          u7421 4E9C  
                                        u6630 4096                                          u4950 5662  
                                        u4838 54CA                                          u4790 5450  
                                        u8230 55A6                                          u6550 3960  
                                        u6470 37C8                                          u6390 367E  
                                        u5670 4FBC                                          u5910 4714  
                                        u4870 2AFC                                          u5750 5950  
                                        u5590 7818                                          u7350 1CF6  
                                        u7270 1BD0                                          u7190 1A86  
                                        u7510 0D34                                          u8070 33E0  
                                        u5830 6F3C                                          u8150 7710  
                                        u6710 5B4E                                          u7430 4ED8  
                                        u8310 576A                                          u6631 4092  
                                        u4951 565E                                          u4791 544C  
                                        u8231 55A2                                          u6551 395C  
                                        u6471 37C4                                          u6391 367A  
                                        u5671 4FB8                                          u5911 4710  
                                        u4871 2AF8                                          u5751 594C  
                                        u5591 7814                                          u7351 1CF2  
                                        u7271 1BCC                                          u7191 1A82  
                                        u7511 0D30                                          u8071 33DC  
                                        u5831 6F38                                          u8151 770A  
                                        u6711 5B4A                                          u7431 4ED4  
                                        u8311 5766                                          u6640 40AC  
                                        u4960 5674                                          u6560 75AC  
                                        u6480 387A                                          u5680 4FD4  
                                        u8400 6626                                          u5920 4724  
                                        u4880 2C22                                          u5760 59A8  
                                        u7360 1D34                                          u7280 1BF4  
                                        u6800 5BF8                                          u7600 0F28  
                                        u7520 0D56                                          u8080 33FC  
                                        u5840 6F5A                                          u6720 5B6A  
                                        u7440 4F34                                          u8320 57B4  
                                        u6641 40A8                                          u4961 5670  
                                        u6561 75A8                                          u6481 3876  
                                        u5681 4FD0                                          u8401 6622  
                                        u6705 7F4C                                          u5921 4720  
                                        u4881 2C1E                                          u5761 59A4  
                                        u5657 4A6E                                          u7361 1D30  
                                        u7281 1BF0                                          u6801 5BF4  
                                        u7601 0F24                                          u7521 0D52  
                                        u8081 33F8                                          u5841 6F56  
                                        u6721 5B66                                          u7441 4F30  
                                        u8321 57B0                                          u6650 41DA  
                                        u4970 568E                                          u8250 5610  
                                        u6570 75E6                                          u6490 38B2  
                                        u5690 4FEE                                          u8410 6636  
                                        u6706 7F4E                                          u5930 4734  
                                        u4890 2C3A                                          u5770 59B6  
                                        u6298 53B6                                          u8170 60B8  
                                        u7370 1D58                                          u7290 1C12  
                                        u6810 5C1E                                          u7610 0F5A  
                                        u7530 0D72                                          u7450 0A18  
                                        u8090 342E                                          u5850 6F78  
                                        u6730 5B7A                                          u6651 41D6  
                                        u4971 568A                                          u8251 560C  
                                        u6571 75E2                                          u6491 38AE  
                                        u5691 4FEA                                          u8411 6632  
                                        u5931 4730                                          u4891 2C36  
                                        u5771 59B2                                          u6299 53CA  
                                        u8171 60B4                                          u7371 1D54  
                                        u7291 1C0E                                          u6811 5C1A  
                                        u7611 0F56                                          u7531 0D6E  
                                        u7451 0A14                                          u8091 342A  
                                        u5851 6F74                                          u6731 5B76  
                                        u6660 4214                                          u4980 56DE  
                                        u6580 6708                                          u8260 5F9A  
                                        u5940 4762                                          u5860 465C  
                                        u5780 59D4                                          u8180 60CE  
                                        u7380 1D76                                          u6820 5C40  
                                        u6900 3CD6                                          u7620 0FE4  
                                        u7540 0DAC                                          u7460 0A34  
                                        u8420 2F22                                          u6740 5BDE  
                                        u8340 581E                                          u6661 4210  
                                        u4981 56DA                                          u6581 6704  
                                        u8261 5F96                                          u5941 475E  
                                        u5861 4658                                          u5781 59D0  
                                        u8181 60CA                                          u7381 1D72  
                                        u6821 5C3C                                          u6901 3CD2  
                                        u7621 0FE0                                          u7541 0DA8  
                                        u7461 0A30                                          u8421 2F1E  
                                        u8165 7714                                          u6741 5BDA  
                                        u8341 581A                                          u4990 5714  
                                        u6590 672A                                          u8270 5FAE  
                                        u8350 65A4                                          u6670 1EF6  
                                        u5950 47A0                                          u5870 46A0  
                                        u5790 59E2                                          u7390 1DC4  
                                        u6750 6AB6                                          u6830 5C62  
                                        u6910 3CF6                                          u7630 1026  
                                        u7550 0E22                                          u7470 0C18  
                                        u8510 3118                                          u8430 2F82  
                                        u4991 5710                                          u6591 6726  
                                        u8271 5FAA                                          u8351 65A0  
                                        u6671 1EF2                                          u5951 479C  
                                        u5871 469C                                          u5791 59DE  
                                        u7391 1DC0                                          u6751 6AB2  
                                        u6831 5C5E                                          u6911 3CF2  
                                        u7631 1022                                          u7551 0E1E  
                                        u7471 0C14                                          u8511 3114  
                                        u8431 2F7E                                          u8248 55EC  
                                        u8280 5ED8                                          u8360 65BC  
                                        u6680 25F8                                          u5880 46C4  
                                        u6840 4264                                          u7800 26A0  
                                        u5960 81FE                                          u6760 6ADA  
                                        u6920 3D1C                                          u7560 0E3E  
                                        u7480 0C52                                          u8600 328C  
                                        u8520 312A                                          u8440 2FCA  
                                        u8249 55FE                                          u8281 5ED4  
                                        u8361 65B8                                          u6681 25F4  
                                        u5881 46C0                                          u6841 4260  
                                        u7801 269C                                          u5961 81FA  
                                        u6761 6AD6                                          u6921 3D18  
                                        u7561 0E3A                                          u7481 0C4E  
                                        u8601 3288                                          u8521 3126  
                                        u8441 2FC6                                          u8290 5EEC  
                                        u8370 65D4                                          u6690 7F34  
                                        u5890 46D4                                          u5970 6190  
                                        u6850 4296                                          u7810 26B4  
                                        u6930 3D3A                                          u7730 1500  
                                        u7650 10EA                                          u7570 0E8A  
                                        u7490 0C6E                                          u8530 3150  
                                        u8450 3014                                          u6770 4CDA  
                                        u8338 57FA                                          u8291 5EE8  
                                        u8371 65D0                                          u6691 7F30  
                                        u5891 46D0                                          u5971 618C  
                                        u6851 4292                                          u7811 26B0  
                                        u6931 3D36                                          u7731 14FC  
                                        u7651 10E6                                          u7571 0E86  
                                        u7491 0C6A                                          u8531 314C  
                                        u8451 3010                                          u6771 4CD6  
                                        u8339 580C                                          u8380 65EC  
                                        u5980 620C                                          u6860 42C0  
                                        u7900 2844                                          u7820 26E2  
                                        u6940 3D58                                          u7740 154A  
                                        u7708 13CC                                          u7660 116E  
                                        u8540 317E                                          u8508 30F6  
                                        u6780 4D24                                          u8381 65E8  
                                        u5981 6208                                          u6861 42BC  
                                        u7901 2840                                          u7821 26DE  
                                        u6941 3D54                                          u7741 1546  
                                        u7709 13E0                                          u7661 116A  
                                        u8541 317A                                          u8509 3108  
                                        u6781 4D20                                          u8390 660A  
                                        u5990 79E0                                          u6870 4304  
                                        u7910 287E                                          u7830 26F2  
                                        u8198 60DA                                          u6950 3D7C  
                                        u7750 155A                                          u7718 144A  
                                        u7670 11A8                                          u7590 0EEE  
                                        u8550 31C8                                          u8470 3080  
                                        u6790 4D5E                                          u8391 6606  
                                        u5991 79DC                                          u6871 4300  
                                        u7911 287A                                          u7831 26EE  
                                        u8199 60F6                                          u6951 3D78  
                                        u7751 1556                                          u7719 145E  
                                        u7671 11A4                                          u7591 0EEA  
                                        u8551 31C4                                          u8471 307C  
                                        u6791 4D5A                                          u6880 4342  
                                        u7920 28BA                                          u7840 2702  
                                        u6960 3DA0                                          u7760 15D0  
                                        u7728 14C8                                          u7680 11F4  
                                        u7648 10B0                                          u8480 309A  
                                        u6881 433E                                          u7921 28B6  
                                        u7841 26FE                                          u6961 3D9C  
                                        u7761 15CC                                          u7729 14DC  
                                        u7681 11F0                                          u7649 10D0  
                                        u8481 3096                                          u7930 28CE  
                                        u7850 2756                                          u7770 2612  
                                        u6970 3ECC                                          u7690 127C  
                                        u8570 3238                                          u8490 30C6  
                                        u6890 7CBE                                          u8650 6240  
                                        u7931 28CA                                          u7851 2752  
                                        u7771 260E                                          u6971 3EC8  
                                        u7691 1278                                          u8571 3234  
                                        u8491 30C2                                          u6891 7CBA  
                                        u8651 623C                                          u7940 292A  
                                        u7860 2782                                          u7780 264E  
                                        u6980 3EE6                                          u7588 0EC2  
                                        u8580 3256                                          u8468 305A  
                                        u8660 625A                                          u7941 2926  
                                        u7861 277E                                          u7781 264A  
                                        u6981 3EE2                                          u7589 0ED4  
                                        u8581 3252                                          u8469 306C  
                                        u8661 6256                                          u7950 2962  
                                        u7870 2798                                          u7790 265C  
                                        u6990 3EFA                                          u8590 3266  
                                        u8670 626C                                          u7951 295E  
                                        u7871 2794                                          u7791 2658  
                                        u6991 3EF6                                          u8591 3262  
                                        u8671 6268                                          u7960 2972  
                                        u7880 27EC                                          u8568 3216  
                                        u8680 627E                                          u7961 296E  
                                        u7881 27E8                                          u8569 3228  
                                        u8681 627A                                          u7970 29AC  
                                        u7890 2808                                          u8690 62BA  
                                        u7971 29A8                                          u7891 2804  
                                        u8691 62B6                                          u7980 29E8  
                                        u7981 29E4                                          u7990 2A1E  
                                        u7991 2A1A                       getNumTxBuffersInUse@i16 0505  
                                        _have 6D6A                                          _main 6224  
                                        _leds 0B7C                                          _name 0848  
                                        _loop 783E                                          _poll 2EC6  
                  __end_of_mnsTRrqnpnCallback 7D9C                                          fsr1h 04E2  
                                        fsr2h 04DA                                          indf1 04E7  
                                        indf2 04DF                                          fsr1l 04E1  
                                        fsr2l 04D9                             ?_removeTableEntry 0501  
                                        pop@q 0501                                          prodh 04F4  
                                        prodl 04F3                                          start 0A02  
                                ?_loadNvCache 0501                                  bootPowerUp@a 0510  
                                bootPowerUp@b 050D                                  bootPowerUp@i 050F  
                          ??_removeTableEntry 0528                                 ?_APP_testMode 0501  
                             getEN@tableIndex 051A                                  ___param_bank 0000  
                              ??_APP_addEvent 054E                         ?_getNumRxBuffersInUse 0501  
                           findServiceIndex@i 0504                          __end_of_EEPROM_Write 77E2  
                                 _uptimeTimer 0568                                         ??_pop 0503  
                                       l10011 1CB8                                         l10013 1CD8  
                                       l10005 1C90                                         l10101 4F06  
                                       l10031 1D38                                         l10111 4F22  
                                       l10103 4F0A                                         l10033 1D58  
                                       l10025 1D10                                         l10113 4F24  
                                       l10051 1DC8                                         l10019 1CFA  
                                       l10211 0C94                                         l10131 0A88  
                                       l10123 0A1C                                         l11011 3238  
                                       l10115 4F34                                _SPI1TWIDTHbits 0088  
                                       l10045 1DA0                                         l10301 0F78  
                                       l10205 0C8E                                         l10141 0ABC  
                                       l10133 0A9E                                         l10125 0A34  
                                       l11013 3242                                         l11005 3152  
                                       l11021 327A                                         l10117 4F3E  
                                       l10109 4F0E                                         l11101 62CA  
                                       l10039 1D7A                                         l10303 0FE4  
                                       l10231 0D16                                         l10135 0AA4  
                                       l10143 0AC0                                         l10127 0A52  
                                       l10223 0CC4                                         l10119 0A06  
                                       l11023 328C                                         l11015 3246  
                                       l11007 317E                                         l10071 4E2C  
                                       l11103 62CE                                         l10401 15E4  
                                       l10321 1108                                         l10305 100A  
                                       l10225 0CFA                                         l10153 0AEC  
                                       l10137 0AA8                                         l10129 0A72  
                                       l11025 3290                                         l11017 3256  
                                       l11009 31C8                                         l10081 4E78  
                                       l10073 4E3A                                         l11105 62D0  
                                       l10059 1E40                                         l10411 1606  
                                       l10403 15E6                                         l10307 1026  
                                       l10315 1048                                         l10251 0D90  
                                       l10243 0D5A                                         l10219 0C9A  
                                       l10147 0AC6                                         l10139 0AB6  
                                       l11019 3266                                         l10091 4ED8  
                                       l10083 4E92                                         l10075 4E48  
                                       l11107 62D4                                         l10501 26E2  
                                       l10341 11D8                                         l10317 10D8  
                                       l10261 0DF0                                         l10253 0DAC  
                                       l10245 0D72                                         l10237 0D38  
                                       l10181 0C18                                         l10173 0BE0  
                                       l10093 4EE4                                         l10085 4EA0  
                                       l10077 4E62                                         l10069 4E12  
                                       l10511 2756                                         l10503 26F2  
                                       l10343 11F4                                         l10351 1212  
                                       l10335 118C                                         l10327 1156  
                                       l10319 10EA                                         l10263 0E12  
                                       l10191 0C6E                                         l10159 0B74  
                                       l10167 0B94                                         l10095 4EEA  
                                       l10087 4EB0                                         l10521 27B0  
                                       l10513 276A                                         l10505 2702  
                                       l10425 1644                                         l10417 1624  
                                       l10409 1604                                         l10361 14E8  
                                       l10353 127C                                         l10337 11A8  
                                       l10329 116E                                         l10281 0ED6  
                                       l10273 0E60                                         l10265 0E22  
                                       l10193 0C82                                         l10169 0BDA  
                                       l10097 4EEE                                         l10089 4ECA  
                                       l11081 626C                                         l11073 6248  
                                       l10531 280C                                         l10523 27EC  
                                       l10515 2770                                         l10507 2718  
                                       l10427 1646                                         l10419 1626  
                                       l10435 1664                                         l10371 152E  
                                       l10363 1500                                         l10355 12FC  
                                       l10339 11C2                                         l10291 0F28  
                                       l10283 0EEE                                         l10275 0E76  
                                       l10267 0E3E                                         l10259 0DDC  
                                       l10187 0C36                                         l10179 0C00  
                                       l10099 4EF2                                         l10611 7C84  
                                       l11091 6292                                         l11083 626E  
                                       l11075 624A                                         l11059 6224  
                                       l10541 287E                                         l10533 2820  
                                       l10525 27F0                                         l10517 2782  
                                       l10509 271C                                         l10381 1566  
                                       l10373 153A                                         l10293 0F3E  
                                       l10277 0E8A                                         l10189 0C52  
                                       l10621 32B6                                         l10613 7C8E  
                                       l10605 7C5E                                         l11093 6296  
                                       l11085 6282                                         l11077 625A  
                                       l10551 28E4                                         l10543 28BA  
                                       l10535 282E                                         l10527 27F2  
                                       l10519 2798                                         l10391 15D0  
                                       l10383 1574                                         l10375 154A  
                                       l10295 0F5A                                         l10279 0E98  
                                       l10447 16A0                                         l10199 0C88  
                                       l10711 354C                                         l10615 3298  
                                       l10607 7C72                                         l11095 62BA  
                                       l11087 6286                                         l11079 625C  
                                       l10561 2944                                         l10553 28EA  
                                       l10545 28BE                                         l10529 2808  
                                       l10481 264E                                         l10801 60CE  
                                       l11601 6B1C                                         l10393 15DC  
                                       l10385 158E                                         l10377 155A  
                                       l10369 151E                                         l10289 0F0C  
                                       l10721 3596                                         l10633 32FC  
                                       l10617 32B0                                         l10609 7C74  
                                       l11097 62C2                                         l11089 6290  
                                       l11611 5034                                         l10571 29E8  
                                       l10547 28CE                                         l10555 28EE  
                                       l10539 2844                                         l10563 294C  
                                       l10491 26A0                                         l10483 265C  
                                       l10803 60D4                                         l11603 1E60  
                                       l10387 1594                                         l10379 1562  
                                       l10723 35A4                                         l10731 35D8  
                                       l10707 3508                                         l10635 3314  
                                       l10643 334C                                         l10627 32DA  
                                       l11099 62C8                                         l11621 7430  
                                       l11613 37E2                                         l10581 2A1E  
                                       l10573 29F6                                         l10565 2962  
                                       l10557 292A                                         l10549 28D6  
                                       l10485 2676                                         l10493 26A2  
                                       l10477 2600                                         l11605 6146  
                                       l10813 612A                                         l10805 60FC  
                                       l10389 15AA                                         l10733 35FA  
                                       l10709 3532                                         l10661 33E0  
                                       l10645 3366                                         l10637 3340  
                                       l10901 5728                                         l10831 555C  
                                       l10823 552E                                         l11615 3978  
                                       l11607 64D0                                         l10583 2A5A  
                                       l10575 29FA                                         l10567 2972  
                                       l10559 292C                                         l10495 26B4  
                                       l10487 267A                                         l10479 2612  
                                       l10807 610E                                         l10719 357C  
                                       l10671 342E                                         l10663 33FC  
                                       l10647 3374                                         l10655 33A8  
                                       l10639 3346                                         l10903 572E  
                                       l11617 51BE                                         l10841 5626  
                                       l10833 55A6                                         l11609 47C2  
                                       l10585 2A68                                         l10577 2A08  
                                       l10569 29AC                                         l10497 26CA  
                                       l10489 268E                                         l10809 6110  
                                       l10817 6132                                         l10681 3476  
                                       l10657 33AE                                         l10745 3604  
                                       l10753 804C                                         l10921 580C  
                                       l10905 5732                                         l11619 776C  
                                       l10835 55FE                                         l10851 5FAE  
                                       l10843 5F24                                         l10931 65C0  
                                       l10587 2A6C                                         l10579 2A0C  
                                       l10499 26CE                                         l10683 3490  
                                       l10691 34A6                                         l10659 33D0  
                                       l10771 76DE                                         l10755 805E  
                                       l10923 580E                                         l10915 573E  
                                       l10907 5736                                         l10837 5600  
                                       l10829 5530                                         l10845 5F3C  
                                       l10941 65EC                                         l10925 6596  
                                       l10597 2A7E                                         l10669 3416  
                                       l10781 7700                                         l10773 76F2  
                                       l10765 76C8                                         l10757 76C2  
                                       l10917 576A                                         l10909 573C  
                                       l10839 5610                                         l10847 5F9A  
                                       l10863 5EEC                                         l10855 5E62  
                                       l10951 6626                                         l10943 65FA  
                                       l10935 65C4                                         l10927 65A4  
                                       l11591 0BB4                                         l10679 344C  
                                       l10791 771E                                         l10783 7714  
                                       l10775 76F4                                         l10767 76CA  
                                       l10759 76C4                                         l10599 7C5A  
                                       l10919 57B4                                         l10871 7D10  
                                       l10857 5E7A                                         l10953 6636  
                                       l10937 65D4                                         l10929 65AC  
                                       l11593 0CE4                                         l10697 34D2  
                                       l10961 2F3A                                         l10785 7716  
                                       l10777 76FC                                         l10769 76CE  
                                       l10793 8224                                         l10881 7D1E  
                                       l10873 7D14                                         l10859 5ED8  
                                       l10947 660E                                         l10939 65DC  
                                       l10891 7890                                         l10795 60A6  
                                       l11595 16C0                                         l10699 34EA  
                                       l10963 2F82                                         l10955 2EC6  
                                       l10787 7718                                         l10779 76FE  
                                       l10875 7D18                                         l10867 7D00  
                                       l10949 6616                                         l10893 81AA  
                                       l10885 783E                                         l11597 3E00  
                                       l11589 3624                                         l10981 3070  
                                       l10973 2F9E                                         l10965 2F86  
                                       l10957 2F22                                         l10789 771A  
                                       l10877 7D1A                                         l10869 7D0A  
                                       l10895 81AE                                         l10887 7878  
                                       l10799 60BC                                         l11599 5CA0  
                                       l10991 30C6                                         l10983 3080  
                                       l10975 2FCA                                         l10967 2F9A  
                                       l10959 2F26                                         l10879 7D1C  
                                       l10897 81BA                                         l10889 787C  
                                       l10993 3118                                         l10985 3084  
                                       l10977 3014                                         l10899 81BC  
                                       l10995 312A                                         l10987 3088  
                                       l10979 306C                                         l10997 3140  
                                       l10989 309A                                         l10999 3150  
                                       ?_have 0501                                         ?_main 0501  
                              _defaultColours FF59                           processEnumeration@i 051C  
                             __end_of___awdiv 60A6                                         ?_loop 0501  
                             __end_of___awmod 6446                                         ?_poll 0501  
                             __end_of___lldiv 6786                               ___awdiv@divisor 0503  
                                       _T2CON 0324                                         _T4CON 0330  
                                       _T2HLT 0325                               ?_updateLedRange 0501  
                                       _T4HLT 0331                               reqevCallback@ev 0538  
                        __end_of_factoryReset 562C                                         _T2RST 0327  
                           _initTimedResponse 8224                                         _T4RST 0333  
                                       i2l614 7E02                                ?_APP_nvDefault 0501  
                             ___awdiv@counter 0505                               __end_of_canPoll 823C  
                    __end_of_nvTRnvrdCallback 78EC                               __end_of_doFlash 2600  
            __end_of_factoryResetGlobalEvents 824E                                _APP_nvValidate 8252  
                                       _TMR0H 0319                                         _TMR0L 0318  
                                       _TRISC 04C8                               __end_of_doEvlrn 5E60  
                             __end_of_doNenrd 7088                  nvProcessMessage@valueOrError 0558  
                             __end_of_doEvuln 7108                               __end_of_doNnclr 7F22  
                             __end_of_doNnevn 7AC8                               __end_of_doReqev 4CA0  
                             __end_of_doReval 5AF8                               __end_of_doRqevn 7A7C  
                             __end_of_getHash 8140                           ___lmul@multiplicand 0505  
                          ?_initTimedResponse 0501                            __p_paramBlock_text 0820  
                               ?_leds_powerUp 0501                              __end_of_TMR0_ISR 809C  
                             __end_of_isEvent 7D00                APP_processConsumedEvent@action 0520  
                                       _canId 05A8                                         _getEN 663C  
                                       _getNN 51E0                                         _getNV 7940  
                                       _getEv 6826                          _enumerationStartTime 0574  
                             __end_of_readNVM 7448                                         _errno 05A3  
                                       _setNV 6C50                                         _numEv 824E  
                       __end_of_refreshString 7F50                                         have@i 0504  
                       _consumerEventCheckLen 81C2                                         _setup 7D00  
                         canReceiveMessage@mp 0514                               __end_of_sendRTR 7B98  
                __end_of_getNumTxBuffersInUse 7182                                         main@i 055D  
                             __end_of_mnsPoll 2A9E                                 setNV@oldValue 0518  
                      APP_preProcessMessage@m 0501                               __end_of_tickGet 7360  
                             ?_checkPowerOnPb 0501                                         pclath 04FA  
                                       tablat 04F5                           ??_initTimedResponse 0501  
             mnsTRallDiagnosticsCallback@step 052F               mnsTRallDiagnosticsCallback@type 0501  
                                       poll@i 05F3                                         poll@m 05F4  
                             __end_of_powerUp 5820                       reqevCallback@tableIndex 053C  
                                       status 04D8                                 ?_nvGetESDdata 0501  
                     reqevCallback@nodeNumber 053A                               __end_of_writeEv 6BBE  
                    ?_updateModuleErrorStatus 0501                    __end_of_startTimedResponse 783E  
                            ?_nvGetDiagnostic 0507                                ??_APP_testMode 050B  
                processEnumeration@enumResult 051A                               __initialization 7182  
                                __end_of_have 6DF6                                  __end_of_main 62E0  
                                __end_of_name 0850                                  __end_of_loop 7896  
                                __end_of_poll 3298                                 ?_nerdCallback 052E  
                      __end_of_defaultColours FF89                          __end_of_getParameter 4B2C  
                   __end_of_initTimedResponse 822A                        __end_of_APP_nvValidate 8256  
                                      ??_have 0501                                  ?_setNewCanId 0501  
                                      ??_main 055D                              ?_eraseFlashBlock 0501  
                                      ??_loop 050B                                  ?_sendMessage 051B  
                                      ??_poll 05EE                         __end_of_reqevCallback 5D8E  
                               __activetblptr 0003                             ??_consumerEsdData 0501  
                                 readNVM@type 050C                             startEnumeration@i 050C  
                              ??_leds_powerUp 050B              __end_of_canWaitForTxQueueToDrain 8200  
                     APP_postProcessMessage@m 0501                      ??_APP_postProcessMessage 0503  
                                      _C1CONH 0101                                        _C1CONL 0100  
                                      _C1CONT 0103                                        _C1CONU 0102  
                                      ?_getEN 050D                                        ?_getNN 050D  
                                      ?_getNV 0501                                        ?_getEv 050D  
                            __end_of_addEvent 3CB8                                        ?_setNV 0515  
                                      _DMA1PR 00B6                                  _canTransport FFF9  
                                      ?_numEv 0501                              ___awdiv@dividend 0501  
                                      ?_setup 0501                           APP_nvValidate@index 0501  
                           ??_consumerPowerUp 0501                                        _ANSELA 0400  
                                      _ANSELB 0408                                        _ANSELC 0410  
                                      _MD1SRC 006C                           APP_nvValidate@value 0501  
                                      _RC0PPS 0211                                        _RB2PPS 020B  
                                      _RC1PPS 0212                                        _RC2PPS 0213  
                                      _RC3PPS 0214                                        _RC4PPS 0215  
                                      _RC5PPS 0216                              reqevCallback@nEv 0535  
                                      _RC6PPS 0217                                        i2l2111 8268  
                                      i2l1853 809A                                        _TABLAT 04F5  
                     ??_CAN1_OperationModeGet 0501                                ??_nvGetESDdata 0501  
                     ??_CAN1_OperationModeSet 0501                                        _NVMADR 0043  
                                      _TMR0IE 250F                                        _TMR0IF 258F  
                                      _TMR0IP 1B2F                                        _PRLOCK 00B4  
                            __end_of_checkLen 6826                                  ?_removeEvent 0536  
                              _clearAllEvents 8102                      __end_of_APP_factoryReset 8248  
                                 initTicker@i 0504                             ?_findServiceIndex 0501  
                            _rebuildHashtable 562C                             _canProcessMessage 5BE0  
APP_processConsumedEvent@colourPixelIndexPair 0523                                 teachPowerUp@i 0528  
                    reqevCallback@eventNumber 0536                    __end_of_APP_nvValueChanged 8266  
                          ??_findServiceIndex 0501                            _processEnumeration 461E  
                          ?_canProcessMessage 0554                    ??_APP_processConsumedEvent 051E  
                      ??_getNumRxBuffersInUse 0501                                teachCheckLen@m 0531  
                                      ___lmul 758E                      __end_of_mnsGetDiagnostic 7E94  
                        consumerEsdData@index 0501                                ??_nerdCallback 0530  
                                      _canPri FFA0                              __end_of_initARGB 49A6  
                                   ??___awdiv 0505                                        _doNerd 8192  
                                   ??___awmod 0505                         _APP_preProcessMessage 825A  
                                      _getEVs 6962                                     ??___lldiv 0513  
                               _nvDiagnostics 05BB                                     ??_canPoll 051D  
                                   ??_doFlash 0505                               getParameter@idx 0509  
                                      _memcpy 7992                                     ??_doEvlrn 0554  
                                   ??_doNenrd 052C                                     ??_doEvuln 053F  
                                   ??_doNnclr 0537                                        clear_0 71A2  
                                      clear_1 71B4                                        clear_2 71C2  
                                   ??_doNnevn 052A                                        clear_3 71D4  
                                      clear_4 71E0                                     ??_doReqev 0534  
                                   ??_doReval 052D                              ___awdiv@quotient 0507  
                             ___awmod@divisor 0503                                     ??_doRqevn 052A  
                         ?_processEnumeration 0501                                        have@id 0503  
                                   ??_getHash 0520                               ??_APP_nvDefault 0509  
                         ??_canProcessMessage 0556                                        isa$std 0001  
                             ___awmod@counter 0505                               ?_APP_nvValidate 0501  
                                      main@t1 055E                                        main@t2 055F  
                                   ??_isEvent 0501                                     ??_readNVM 050A  
                    nerdCallback@serviceIndex 052E                             _canReceiveMessage 423E  
                  __end_of_teachGetDiagnostic 7EF4                              _nvProcessMessage 3298  
                                   ??_sendRTR 0501                                     ??_mnsPoll 052C  
                                      pop@ret 0508                             ??_mnsFactoryReset 0515  
                                ivt0x900_base 0900                                  __mediumconst FE58  
          APP_processConsumedEvent@tableIndex 051E                                     ??_tickGet 0505  
                            __end_of_services FF95                            _tableIndexToEvtIdx 8230  
                 findServiceIndex@serviceType 0503                                        tblptrh 04F7  
                                      tblptrl 04F6                             doEvlrn@nodeNumber 054E  
                                      tblptru 04F8                                  ??_FLASH_Read 0504  
                           nvProcessMessage@m 0554                        ?_consumerEventCheckLen 0531  
                          ?_canReceiveMessage 0510                                     ??_powerUp 0529  
                      getParameterFlags@flags 0505             mnsTRserviceDiscoveryCallback@step 052F  
           mnsTRserviceDiscoveryCallback@type 0501                       consumerProcessMessage@m 0554  
                        __end_of_APP_addEvent 80BE                                     ??_writeEv 0517  
                                __p_name_text 0848                           addEvent@eventNumber 0531  
                nvTRnvrdCallback@valueOrError 0530                              __end_of_writeNVM 7784  
                         ?_tableIndexToEvtIdx 0501                        __end_of_clearAllEvents 8122  
                       mnsGetDiagnostic@index 0509                          ??_processEnumeration 0516  
                            ??_receiveOverrun 0501                                    __accesstop 0560  
                     __end_of__initialization 71F4                     __end_of_canProcessMessage 5CB8  
               __end_of_consumerGetDiagnostic 7EC4                           ??_canReceiveMessage 0512  
                           EEPROM_Write@index 0509                                nvGetESDdata@id 0501  
                            APP_testMode@step 0510                             EEPROM_Write@value 050C  
                               doEvuln@result 053F                                 ___rparam_used 0001  
                          teachCheckLen@learn 0534                                    _eeBootFlag 0594  
                     ??_handleSelfEnumeration 050B                     ?_factoryResetGlobalEvents 0501  
                               ?_teachPowerUp 0501                              FLASH_Write@index 0506  
                           _getParameterFlags 6DF6                              FLASH_Write@value 0509  
                              __pcstackCOMRAM 0501     mnsTRserviceDiscoveryCallback@serviceIndex 052E  
                                __pidataBANK5 8262                                    _canEsdData 80E0  
                          ?_getParameterFlags 0501                                     ?_TMR0_ISR 0501  
                               __end_of_getEN 66E2                                 __end_of_getNN 5302  
                               __end_of_getNV 7992                                 __end_of_getEv 68C4  
                          __end_of_FLASH_Read 72EA                                 __end_of_setNV 6CDE  
                               __end_of_numEv 8252                                 __end_of_setup 7D34  
                        ??_tableIndexToEvtIdx 0501                             _ledPaletteIndexes 0700  
                        _getNumTxBuffersInUse 7108                     __end_of_canReceiveMessage 4434  
                nvTRnvrdCallback@serviceIndex 052E                    __end_of_bootProcessMessage 6B2C  
                  consumerGetDiagnostic@index 0509                           ??_getParameterFlags 0505  
                                  _canService FFEB                             ??_isConsumedEvent 0501  
                                  addEvent@en 0543                                    _canPowerUp 4CA0  
                   reqevCallback@serviceIndex 052E                          __end_of_APP_testMode 423E  
                  rebuildHashtable@tableIndex 0526                               _refreshRequired 05AB  
                                     ??_getEN 050F                                       ??_getNN 050F  
                                     ??_getNV 0503                                       ??_getEv 050F  
                                     ??_setNV 0516                                 ?_sendMessage2 0526  
                               ?_sendMessage3 0526                                 ?_sendMessage4 0526  
                               ?_sendMessage5 0526                                 ?_sendMessage6 0526  
                               ?_sendMessage7 0526                                       ??_numEv 0501  
                       _setupModePreviousMode 059E                                       ??_setup 050B  
                                canEsdData@id 0501                                  readNVM@index 0507  
                    mnsProcessMessage@newMode 055A                             initTicker@divider 0503  
                                _EEPROM_Write 7784                                    __pbssBANK5 0560  
                                  __pbssBANK6 0600                                    __pbssBANK7 0700  
                                  __pbssBANK8 0800                                  loadNvCache@i 0511  
                             ?_clearAllEvents 0501                    startTimedResponse@callback 0506  
                             canSendMessage@m 0517                    APP_processConsumedEvent@ev 0524  
                         setNewCanId@newCanId 0515                     __end_of_getParameterFlags 6E7E  
                              _loadFlashBlock 78EC                                  _factoryReset 552E  
                              ??_teachPowerUp 0528                                 _setLEDsByMode 7B10  
                                     IVTBASEH 045E                                       IVTBASEL 045D  
                                     IVTBASEU 045F                                 addEvent@evVal 0534  
                               addEvent@evNum 0533                                    __pivt0x900 0900  
                              _canDiagnostics 068E                                   mnsPowerUp@i 050D  
                          mnsProcessMessage@d 0558                            mnsProcessMessage@i 0556  
                          mnsProcessMessage@m 0554                          __end_of_leds_powerUp 8074  
                                  _bl_version FF95                     ?_canWaitForTxQueueToDrain 0501  
                      ?_APP_preProcessMessage 0501                                       ?___lmul 0501  
                           _bootloaderVersion 05A9                                    ??_TMR0_ISR 0501  
                                     ?_doNerd 0501                                       _C1TRECU 0136  
                                     ?_getEVs 0501                              ??_updateLedRange 0503  
                                     _C1TXQUA 0158                                     _C1FIFOUA1 0164  
                                   _C1FIFOUA2 0170                                     _C1FIFOUA3 017C  
                       ?_getNumTxBuffersInUse 0501                                       ?_memcpy 0501  
                               _C1BDIAG0Hbits 0139                                     ?_addEvent 052F  
                          _mnsTRrqnpnCallback 7D68                                ___lmul@product 0509  
                               _C1BDIAG0Lbits 0138                                     _C1NBTCFGH 0105  
                                   _C1NBTCFGL 0104                                     _C1NBTCFGT 0107  
                                   _C1NBTCFGU 0106                         _setTimedResponseDelay 8214  
                                     _MD1CARH 006E                                       _MD1CARL 006D  
                                     _MD1CON0 006A                                       _MD1CON1 006B  
                        __end_of_nvGetESDdata 80E0                                       _CLCnCON 00D6  
                                     _CLCnPOL 00D7                                       _DMAnDSA 00F0  
                                     _DMAnDSZ 00EE                              _canGetDiagnostic 64F0  
                                  _flashBlock 0584                                       _DMAnSSA 00F9  
                                  _flashFlags 059B                                       _DMAnSSZ 00F7  
                               ??_DEFAULT_ISR 0501                                       i2l11031 7DE6  
                                     i2l11033 7DEA                                       i2l11051 8098  
                                     i2l11043 8074                                       i2l11035 7DF8  
                                     i2l11027 7DD0                                       i2l11045 8082  
                                     i2l11037 7DFE                                       i2l11029 7DE0  
                                     i2l11047 8084                                       i2l11049 8088  
                                _DMAnCON0bits 00FC                                     ?_checkLen 052C  
                                _DMAnCON1bits 00FD                                    _flashState 05AC  
                           ?_nvTRnvrdCallback 052E                             reqevCallback@step 052F  
                         ?_mnsTRrqnpnCallback 052E                              ??_checkPowerOnPb 053C  
                                     _IVTLOCK 0459                                       _TBLPTRH 04F7  
                                     _TBLPTRL 04F6                                       _TBLPTRU 04F8  
                                   _C1TXQCONH 0151                                     _C1TXQCONL 0150  
             flushFlashBlock@interruptEnabled 0505                                     _C1TXQCONT 0153  
                                   _C1TXQCONU 0152                                       _NVMADRH 0044  
                                     _NVMADRL 0043                                       _SPI1TXB 0081  
                                     _NVMADRU 0045                                       _NVMDATL 0046  
                          ??_nvTRnvrdCallback 0530                                   _C1FIFOCON1H 015D  
                                 _C1FIFOCON2H 0169                                   _C1FIFOCON1L 015C  
                                 _C1FIFOCON3H 0175                                   _C1FIFOCON2L 0168  
                                 _C1FIFOCON3L 0174                                   _C1FIFOCON1T 015F  
                                 _C1FIFOCON1U 015E                                   _C1FIFOCON2T 016B  
                                 _C1FIFOCON2U 016A                                   _C1FIFOCON3T 0177  
                                 _C1FIFOCON3U 0176                                       _NVMLOCK 0042  
                              ??_sendMessage2 0528                                ??_sendMessage3 0529  
                              ??_sendMessage4 052A                                ??_sendMessage5 052B  
                              ??_sendMessage6 052C                                ??_sendMessage7 052D  
                            _teachDiagnostics 05CC                          __end_of_nerdCallback 74B6  
                   isConsumedEvent@eventIndex 0501                                     ?_initARGB 0501  
                              checkLen@needed 052E                                  _getParameter 49A6  
                      __end_of_loadFlashBlock 7940                               _timerExtension1 059A  
                             _timerExtension2 0599                  __end_of_eventConsumerService FFB3  
                              ?_setLEDsByMode 0501                        mnsTRrqnpnCallback@step 052F  
                      mnsTRrqnpnCallback@type 0501                canReceiveMessage@incomingCanId 0513  
                         _consumerDiagnostics 05C1                                 initARGB@ledno 0501  
                                 poll@handled 05F2                          ??_mnsTRrqnpnCallback 0530  
                           __end_of_findEvent 6398                                       __Hparam 0000  
                 consumerEventCheckLen@needed 0533                                       __Lparam 0000  
                             _consumerEsdData 8140                                     _CLCSELECT 00D5  
                      _APP_postProcessMessage 825E                            pbDownTimer@timeout 051C  
                                 ?_canEsdData 0501                             __end_of_pbUpTimer 5F22  
                                   _DMASELECT 00E8                              pbUpTimer@timeout 051C  
                               APP_testMode@c 050F                                 APP_testMode@i 0511  
                                  _initTicker 76C0                                       ___awdiv 5FE4  
                                  _initRomOps 81AA                                       ___awmod 6398  
                                     ___lldiv 66E2                                       _canPoll 8236  
                                     _doFlash 1ED0                                    ??_addEvent 0536  
                                     _doEvlrn 5D8E                                    _paramBlock 0820  
                                     _doNenrd 7006                            canProcessMessage@m 0554  
                                     _doEvuln 7088                                       _doNnclr 7EF4  
                                     _doNnevn 7A7C                                       _doReqev 4B2C  
                                     _doReval 5A0E                                       __pcinit 7182  
                               _teachCheckLen 6F84                                       _doRqevn 7A30  
                           __end_of_leds_poll 39D0                            _startTimedResponse 77E2  
                                     __ramtop 4000                                       _getHash 8122  
                                   ?_writeNVM 050E                            doEvlrn@eventNumber 0550  
                                     __ptext0 6224                                       __ptext1 7D00  
                                     __ptext2 8214                                       __ptext3 5728  
                                     __ptext4 7C5A                                       __ptext5 4E12  
                                     __ptext6 7C94                                       __ptext7 4CA0  
                                     __ptext8 5AF8                                       __ptext9 7C1C  
                             _consumerPowerUp 7C94                                       _isEvent 7CCA  
                                     _pbTimer 0570                            APP_nvDefault@index 050B  
                             getEv@tableIndex 051C                              _EnumerationState 05A6  
                           ??_canFactoryReset 0515                             _mnsProcessMessage 0A06  
                                     _nvCache 0600                                    _mode_flags 05A4  
                                 ?_canPowerUp 0501                                       _readNVM 73D4  
                   startEnumeration@txWaiting 050B                                    getNN@flags 051A  
                              _nvFactoryReset 7BDC                                       getEN@hi 0516  
                                   _T2CONbits 0324                                       getEN@lo 0518  
                           ??_teachGetESDdata 0501                      __end_of_rebuildHashtable 5728  
                                  ??_checkLen 0530                                       getNN@hi 0516  
                                     getNN@lo 0518                                    _mode_state 05A1  
                            ___awmod@dividend 0501                            doReqev@eventNumber 0531  
                                     _sendRTR 7B54                                       _mnsPoll 2600  
                                   _T4CONbits 0330                            ?_mnsProcessMessage 0554  
                                     _tickGet 72EA                                  _flashCounter 0589  
                           doNenrd@tableIndex 0531                           ?_startTimedResponse 0505  
                                _isEvent$5805 0501                                    getNV@index 0504  
                                     _rxQueue 05C7                             doNenrd@nodeNumber 052C  
                    ??_consumerProcessMessage 0556                                       _powerUp 5728  
                       canReceiveMessage@temp 0516                            doRqevn@eventNumber 052A  
                                  _mnsService FFDD                             __end_of_nvService FFDD  
                                  _mnsPowerUp 4E12                             __end_of_nvPowerUp 7C94  
                         __end_of_DEFAULT_ISR 826A                                       _writeEv 6B2C  
                        end_of_initialization 71F4                                    ??_initARGB 0501  
                         ??_mnsProcessMessage 05D0                                  writeNVM@type 0514  
                                  getEv@evNum 050D              prepareSelfEnumResponse@txFifoObj 0501  
                                     memcpy@d 0507                                       memcpy@n 0505  
                                     memcpy@s 0509                    APP_nvValueChanged@oldValue 0502  
                               ??_EEPROM_Read 0504                               ?_loadFlashBlock 0501  
               __end_of_CAN1_OperationModeGet 820A                 __end_of_CAN1_OperationModeSet 6F84  
                           ?_APP_factoryReset 0501                              _startEnumeration 74B6  
                             ___lldiv@divisor 050F                                  writeEv@evVal 0516  
                    __end_of_nvProcessMessage 3644                                  writeEv@evNum 0515  
                             ___lldiv@counter 0517                          ??_startTimedResponse 0508  
                     pollTimedResponse@result 053F                            ??_APP_factoryReset 0537  
             eraseFlashBlock@interruptEnabled 0504                             __end_of_updateRGB 8224  
                            ??_APP_nvValidate 0502                                 ??_FLASH_Write 050A  
                        nvGetDiagnostic@index 0509                                       postdec1 04E5  
                                     postdec2 04DD                        ??_getNumTxBuffersInUse 0501  
                                     postinc0 04EE                                       postinc1 04E6  
                                     postinc2 04DE                     updateLedRange@start_ledno 0503  
                             _mnsFactoryReset 7522                             ?_mnsGetDiagnostic 0507  
        EEPROM_WriteNoVerify@interruptEnabled 0508                       _prepareSelfEnumResponse 71FA  
                      ?_setTimedResponseDelay 0501                                  _APP_addEvent 809C  
                              ?_teachCheckLen 0531                     __end_of_mnsProcessMessage 16F8  
                          doNnevn@eventNumber 052A                                  doFlash@ledno 0506  
                                  _tmpMessage 06B4                            ??_mnsGetDiagnostic 0509  
                                doFlash@order 0505                startTimedResponse@serviceIndex 0505  
                      __end_of_nvFactoryReset 7C1C                                    ??_writeNVM 0512  
                                  _showStatus 4F62                                     _PORTAbits 04CE  
                                  _previousNN 058D                       ??_consumerEventCheckLen 0534  
                          _APP_nvValueChanged 8264                     _timedResponseServiceIndex 0598  
                                  _priorities FE59                                 ??_pbDownTimer 0518  
                             sendMessage2@opc 0528                          __end_of_teachPowerUp 7C5A  
                             sendMessage3@opc 0529                               sendMessage4@opc 052A  
                             sendMessage5@opc 052B                               sendMessage6@opc 052C  
                             sendMessage7@opc 052D                             _eventTeachService FFB3  
                                   _TRISAbits 04C6                                     _TRISBbits 04C7  
                      _mnsProcessMessage$4475 0557                            _timedResponseDelay 0593  
                                 showStatus@s 0503                               loadNvCache@temp 050F  
                         ?_APP_nvValueChanged 0501                                 ??_bootEsdData 0501  
                                  isEvent@opc 0502                               ??_setLEDsByMode 0504  
                         teachCheckLen@needed 0533                       __end_of_consumerEsdData 815C  
             ??_mnsTRserviceDiscoveryCallback 0530                             ??_flushFlashBlock 0505  
                          _teachGetDiagnostic 7EC4                             _heartbeatSequence 059C  
                         _teachProcessMessage 16F8                            canSendMessage@temp 0515  
                           removeTableEntry@i 0534                                 ??_bootPowerUp 050D  
                                _APP_testMode 3F9E                               _isConsumedEvent 820A  
               __end_of_handleSelfEnumeration 64F0                           __end_of_EEPROM_Read 7A30  
                     __end_of_consumerPowerUp 7CCA                           ?_teachGetDiagnostic 0507  
                           _canTransmitFailed 05A7                                   ?_initTicker 0501  
                                 ?_initRomOps 0501                          ??_APP_nvValueChanged 0503  
                        __end_of_sendMessage2 7FF8                          __end_of_sendMessage3 7FCE  
                        __end_of_sendMessage4 7FA4                          __end_of_sendMessage5 804C  
                        __end_of_sendMessage6 7F7A                          __end_of_sendMessage7 8022  
                              __end_of___lmul 75F8                                __end_of_canPri FFA5  
                              __end_of_doNerd 81AA                    removeTableEntry@tableIndex 0535  
                              __end_of_getEVs 69FE                               ?_nvFactoryReset 0501  
                            _removeTableEntry 4434                                __end_of_memcpy 79E2  
                          canReceiveMessage@m 0510                          ?_teachProcessMessage 0554  
                   __end_of_eventTeachService FFC1                           __end_of_FLASH_Write 552E  
                   consumerProcessMessage@enn 0559                         __end_of_APP_nvDefault 51E0  
                   consumerProcessMessage@ret 055B                          _eventConsumerService FFA5  
                              _canSendMessage 2A9E                                   _DEFAULT_ISR 8268  
                                _name_absaddr 0848                           start_initialization 7182  
                            ??_clearAllEvents 0536                     ?_APP_processConsumedEvent 051C  
                                _leds_powerUp 804C                          ??_teachGetDiagnostic 0509  
                                 __end_of_pop 6224                                 factoryReset@i 053B  
                                 ?_mnsPowerUp 0501                           _APP_isConsumedEvent 8256  
                ?_mnsTRallDiagnosticsCallback 052E                  __end_of_EEPROM_WriteNoVerify 765E  
                               _refreshString 7F22                           __end_of_pbDownTimer 5FE4  
                          _bootProcessMessage 6A96                           _getNextWriteMessage 5820  
                                _nvGetESDdata 80BE                      __end_of_canGetDiagnostic 6596  
                     ??_APP_preProcessMessage 0503                       __end_of_mnsFactoryReset 758E  
                               ??_loadNvCache 050D                         _consumerGetDiagnostic 7E94  
                         __end_of_bootEsdData 7DD0                           ?_bootProcessMessage 0554  
                                doEvlrn@evVal 0553                                  doEvlrn@evNum 0552  
                             numEv@tableIndex 0501                     ??_prepareSelfEnumResponse 0501  
                      startTimedResponse@type 0508                    __end_of_evtIdxToTableIndex 8230  
                    rebuildHashtable@chainIdx 0527                                      ??___lmul 0509  
                             ??_teachCheckLen 0535                                  doNenrd@index 0530  
                        ?_APP_isConsumedEvent 0501                                      ??_doNerd 0509  
                                    ??_getEVs 050D                           bootProcessMessage@m 0554  
                          addEvent@forceOwnNN 0535                                   _MD1CON0bits 006A  
                                _nerdCallback 7448                                   __pdataBANK5 05FD  
                     _updateModuleErrorStatus 81D8                           __end_of_bootService FFCF  
                                    ??_memcpy 0507                           __end_of_bootPowerUp 5BE0  
                      __end_of_canSendMessage 2EC6                                   ?_showStatus 0501  
                        ?_getNextWriteMessage 0501                         ??_teachProcessMessage 0556  
                                 __pbssBIGRAM 08FC                                 _reqevCallback 5CB8  
                        ??_bootProcessMessage 0556                             ??_nvGetDiagnostic 0509  
                            canSendMessage@mp 050D                                 __pcstackBANK5 05D0  
                                  setNV@index 0519                                    setNV@value 0515  
         APP_processConsumedEvent@start_ledno 0521                            addEvent@tableIndex 0546  
                              ?_refreshString 0501                    setTimedResponseDelay@delay 0501  
                                   addEvent@e 0545                            addEvent@nodeNumber 052F  
               ??_mnsTRallDiagnosticsCallback 0530                      _factoryResetGlobalEvents 8248  
                     __end_of_isConsumedEvent 8214                              ?_consumerEsdData 0501  
                                 _EEPROM_Read 79E2                            initTicker@priority 0502  
                     ?_APP_postProcessMessage 0501                             ??_eraseFlashBlock 0501  
                   APP_processConsumedEvent@m 051C                                mnsPowerUp@temp 050E  
                                doNnevn@count 052C                          teachProcessMessage@m 0554  
                             _canFactoryReset 815C         __end_of_mnsTRserviceDiscoveryCallback 6A96  
               _mnsTRserviceDiscoveryCallback 69FE                  mnsTRallDiagnosticsCallback@d 0534  
                                  nvPowerUp@i 0512                               tickGet@IntFlag1 0506  
                             tickGet@IntFlag2 0505                        _consumerProcessMessage 3CB8  
                             _teachGetESDdata 7E04                         ??_APP_isConsumedEvent 0501  
                                ??_canEsdData 0501                                      _C1FIFOBA 014C  
                               __pmediumconst FE58                              ?_consumerPowerUp 0501  
                            getEVs@tableIndex 051A                                      ?___awdiv 0501  
                                   __ptext100 825E                                     __ptext101 783E  
                                   __ptext110 3644                                     __ptext102 7F22  
                                   __ptext111 758E                                     __ptext103 1ED0  
                                   __ptext120 5FE4                                     __ptext112 66E2  
                                   __ptext104 7940                                     __ptext121 8242  
                                   __ptext113 552E                                     __ptext105 81AA  
                                   __ptext130 8178                                     __ptext122 8248  
                                   __ptext114 7BDC                                     __ptext106 6596  
                                   __ptext131 7784                                     __ptext123 8102  
                                   __ptext115 7522                                     __ptext107 4F62  
                                   __ptext140 79E2                                     __ptext132 81D8  
                                   __ptext124 4434                                     __ptext116 815C  
                                   __ptext108 5E60                                     __ptext141 3F9E  
                                   __ptext133 75F8                                     __ptext125 7722  
                                   __ptext117 823C                                     __ptext109 5F22  
                                 _FLASH_Write 541E                                     __ptext142 7B98  
                                   __ptext134 562C                                     __ptext126 541E  
                                   __ptext118 50A4                                     __ptext143 72EA  
                                   __ptext135 51E0                                     __ptext127 78EC  
                                   __ptext119 6398                                     __ptext144 47E2  
                                   __ptext136 8122                                     __ptext128 68C4  
                                   __ptext145 7DD0                                     __ptext137 663C  
                                   __ptext129 6E7E                                     __ptext146 8074  
                                   __ptext138 73D4                                     __ptext147 8268  
                                   __ptext139 7272                                      _C1MASK0H 0191  
                                    ?___awmod 0501                                      _C1MASK0L 0190  
                                    _C1MASK0T 0193                                      _C1MASK0U 0192  
                                   _findEvent 62E0                                      ?___lldiv 050B  
                         __end_of_loadNvCache 76C0                                  doReqev@evVal 0534  
                                doReqev@evNum 0533                               getNN@tableIndex 051B  
                                    ?_canPoll 0501                                  doReval@enNum 052E  
                                    ?_doFlash 0501                                  doReval@evVal 0530  
                                doReval@evNum 052C                                     _flashTime 0580  
                                    ?_doEvlrn 054E                                      ?_doNenrd 0501  
                                    ?_doEvuln 053B                                      ?_doNnclr 0501  
                                    ?_doNnevn 0501                                      ?_doReqev 052F  
                                    ?_doReval 052C                             teachGetESDdata@id 0501  
                                    ?_doRqevn 0501                         ??_getNextWriteMessage 0503  
                                    ?_getHash 051C                                 ??_setNewCanId 0515  
                                   _pbUpTimer 5E60                               ?_canSendMessage 050D  
                               ??_sendMessage 0523                                      ?_isEvent 0501  
                            _findServiceIndex 6CDE                              nerdCallback@step 052F  
                            nerdCallback@type 0501                                ?_reqevCallback 052E  
                                ??_canPowerUp 050D                                _heartbeatTimer 056C  
                                 __smallconst FE58                                      ?_readNVM 0507  
                                  _C1FLTCON0L 0180                      __end_of_startEnumeration 7522  
                                  _C1FLTOBJ0H 018D                                    _C1FLTOBJ0L 018C  
                                  _C1FLTOBJ0T 018F                                    _C1FLTOBJ0U 018E  
                                  _C1CONHbits 0101                                     _leds_poll 3644  
                                    ?_sendRTR 0501                                      ?_mnsPoll 0501  
                           ?_rebuildHashtable 0501               __end_of_prepareSelfEnumResponse 7272  
            CAN1_OperationModeSet@requestMode 0502                                      ?_tickGet 0501  
     mnsTRallDiagnosticsCallback@serviceIndex 052E                                      _CANRXPPS 023D  
                                 _pbDownTimer 5F22                                    _C1CONTbits 0103  
                                  _C1CONUbits 0102                                     checkLen@m 052C  
                            ??_loadFlashBlock 0501                                      ?_powerUp 0501  
                          ??_rebuildHashtable 0522                                      _T2CLKCON 0326  
                                    _CLCnGLS0 00DC                                      _CLCnGLS1 00DD  
                                    _CLCnGLS2 00DE                                      _CLCnGLS3 00DF  
                                    _CLCnSEL0 00D8                                      _CLCnSEL1 00D9  
                                    _CLCnSEL2 00DA                                      _CLCnSEL3 00DB  
                                    ?_writeEv 0515                                      _DMAnAIRQ 00FE  
                                    _T4CLKCON 0332                                    _C1INTHbits 011D  
                                    _DMAnSIRQ 00FF                                   _bootEsdData 7D9C  
                          __end_of_canEsdData 8102                                    _C1INTTbits 011F  
                                  _C1INTUbits 011E                                   _flashBuffer 05FD  
                      consumerEventCheckLen@m 0531                                doReval@evIndex 052D  
              __end_of_APP_postProcessMessage 8262                       getNumRxBuffersInUse@i16 0505  
                                   _nvService FFCF                           consumerPowerUp@temp 0501  
                               ??_removeEvent 053A                                  _SPI1BAUDbits 0089  
                                    _LATBbits 04BF                                      _LATCbits 04C0  
                                   _nvPowerUp 7C5A                             findEvent@chainIdx 052D  
                      ?_consumerGetDiagnostic 0507                      _canWaitForTxQueueToDrain 81EE  
                                    _IPR0bits 0362                                      _PIE0bits 049E  
                        rebuildHashtable@hash 0525                              ?_mnsFactoryReset 0501  
                                   _rxBuffers 0646                                     getHash@en 051E  
                                   getHash@nn 051C                                _flashFlushTime 0642  
                                _SPI1CON0bits 0084                                      _IVTBASEH 045E  
                                    _IVTBASEL 045D                                  _SPI1CON1bits 0085  
                                    _IVTBASEU 045F                                  _SPI1CON2bits 0086  
      __end_of_APP_isSuitableTimeToWriteFlash 8192                _APP_isSuitableTimeToWriteFlash 8178  
                                 _bootService FFC1                            __end_of_canService FFF9  
                                _teachPowerUp 7C1C                                   _bootPowerUp 5AF8  
                                    _PIR0bits 04AE                            __end_of_canPowerUp 4E12  
                           ?_nvProcessMessage 0554                       ??_setTimedResponseDelay 0501  
                           doReqev@tableIndex 0536                                      _SPI1INTF 008A  
                                    i2u861_40 7DE0                                      i2u861_41 7DDC  
                                    i2u862_40 7DF8                                      i2u862_41 7DF4  
                                    i2u863_40 8082                                      _SPI1TCNT 0082  
                                    i2u863_41 807E                                _mnsDiagnostics 05AD  
                                    i2u864_40 8098                                      i2u864_41 8094  
                   ??_updateModuleErrorStatus 0501                              ivt0x900_undefint 0A00  
                           doReqev@nodeNumber 052F                                   _pbWasPushed 059D  
                                    _TMR0_ISR 8074                            ??_nvProcessMessage 0556  
                   EEPROM_WriteNoVerify@index 0501                                    ?_findEvent 0522  
                   EEPROM_WriteNoVerify@value 0504                                     _updateRGB 821C  
                        _EEPROM_WriteNoVerify 75F8              consumerProcessMessage@tableIndex 055C  
               updateLedRange@colourIndexPair 0502                             _teachFactoryReset 823C  
                                  ?_pbUpTimer 0501                                sendMessage@len 051B  
                              sendMessage@opc 0525                             _timedResponseTime 0560  
                           _timedResponseStep 0595                             _timedResponseType 0596  
                            _enumerationState 05A5                                  doRqevn@count 052C  
                                   _transport 0591                            ?_teachFactoryReset 0501  
               APP_processConsumedEvent@onOff 051F                    canReceiveMessage@rxFifoObj 0518  
                                  ?_leds_poll 0501                               _flushFlashBlock 68C4  
               __end_of_consumerEventCheckLen 81D8                               ??_refreshString 0501  
                         __end_of_setNewCanId 7B10                           __end_of_sendMessage 6C50  
                         ??_teachFactoryReset 0537                               checkLen@service 052F  
                                 _INTCON0bits 04D6                            __end_of_bl_version FFA0  
                           ___lmul@multiplier 0501                                  _sendMessage2 7FCE  
                                _sendMessage3 7FA4                                  _sendMessage4 7F7A  
                                _sendMessage5 8022                                  _sendMessage6 7F50  
                                _sendMessage7 7FF8                               nvFactoryReset@i 0517  
                     __end_of_canFactoryReset 8178             APP_processConsumedEvent@end_ledno 0522  
                    __end_of_removeTableEntry 461E                              ?_isConsumedEvent 0501  
                     __end_of_teachGetESDdata 7E34                                    ?_nvPowerUp 0501  
                                 _loadNvCache 765E                                      __Hrparam 0000  
                                 _eventChains 08FC                      evtIdxToTableIndex@evtIdx 0501  
                     APP_addEvent@eventNumber 0549                                     memcpy@tmp 050B  
                       _CAN1_OperationModeGet 8200                                      __Lrparam 0000  
                       _CAN1_OperationModeSet 6F02                             doReval@tableIndex 052F  
                            ??_nvFactoryReset 0515                                  ??_initTicker 0501  
                         __end_of_removeEvent 7D68                                  ??_initRomOps 0501  
                      removeEvent@eventNumber 0538              __end_of_APP_processConsumedEvent 5A0E  
                   __end_of_teachFactoryReset 8242                         ?_EEPROM_WriteNoVerify 0501  
                                    _addEvent 39D0                                    ?_updateRGB 0501  
              ?_mnsTRserviceDiscoveryCallback 052E                               ??_reqevCallback 0530  
                          doNenrd@eventNumber 052E                                  ?_DEFAULT_ISR 0501  
                                    _checkLen 6786                                    _T0CON0bits 031A  
                                  _T0CON1bits 031B               __end_of_updateModuleErrorStatus 81EE  
                                  _FLASH_Read 7272                         getNextWriteMessage@wr 050C  
                                    __ptext10 765E                                      __ptext11 804C  
                                    __ptext20 5BE0                                      __ptext12 8224  
                                    __ptext21 6A96                                      __ptext13 76C0  
                                    __ptext30 7006                                      __ptext22 16F8  
                                    __ptext14 6F02                                      __ptext31 822A  
                                    __ptext23 6F84                                      __ptext15 8200  
                                    __ptext40 69FE                                      __ptext32 7088  
                                    __ptext24 7A30                                      __ptext16 2EC6  
                                    __ptext41 5302                                      __ptext33 7D34  
                                    __ptext25 5A0E                                      __ptext17 3298  
                                    __ptext50 8252                                      __ptext42 7D68  
                                    __ptext34 5D8E                                      __ptext26 4B2C  
                                    __ptext18 0A06                                      __ptext51 80BE  
                                    __ptext43 7448                                      __ptext35 809C  
                                    __ptext27 7A7C                                      __ptext19 3CB8  
                                    __ptext60 7EC4                                      __ptext52 8140  
                                    __ptext44 5CB8                                      __ptext36 39D0  
                                    __ptext28 7EF4                                      __ptext61 77E2  
                                    __ptext53 80E0                                      __ptext45 824E  
                                    __ptext37 6B2C                                      __ptext29 8192  
                                    __ptext70 2600                                      __ptext62 7F50  
                                    __ptext54 7D9C                                      __ptext46 6826  
                                    __ptext38 60A6                                      __ptext71 7B10  
                                    __ptext63 7F7A                                      __ptext55 7E04  
                                    __ptext47 8230                                      __ptext39 7896  
                                    __ptext80 821C                                      __ptext72 7FCE  
                                    __ptext64 7FA4                                      __ptext56 7E34  
                                    __ptext48 6C50                                      __ptext81 6962  
                                    __ptext73 7FF8                                      __ptext65 49A6  
                                    __ptext57 7E64                                      __ptext49 8264  
                                    __ptext90 6D6A                                      __ptext82 423E  
                                    __ptext74 820A                                      __ptext66 6DF6  
                                    __ptext58 7E94                                      __ptext91 7108  
                                    __ptext83 6166                                      __ptext75 8256  
                                    __ptext67 6CDE                                      __ptext59 64F0  
                                    __ptext92 7360                                      __ptext84 7992  
                                    __ptext76 62E0                                      __ptext68 81EE  
                                    __ptext93 5820                                      __ptext85 6446  
                                    __ptext77 81C2                                      __ptext69 8236  
                                    __ptext94 461E                                      __ptext86 8022  
                                    __ptext78 6786                                      __ptext95 74B6  
                                    __ptext87 6BBE                                      __ptext79 5918  
                                    __ptext96 7B54                                      __ptext88 2A9E  
                                    __ptext97 7AC8                                      __ptext89 7CCA  
                                    __ptext98 71FA                                      __ptext99 825A  
                __end_of_getNumRxBuffersInUse 73D4                                  ??_mnsPowerUp 050D  
                                    _ledTimer 0564                                      _ledState 058B  
                               ?_EEPROM_Write 0509                   CAN1_OperationModeSet@status 0501  
                                    _initARGB 47E2                                   _OSCCON1bits 00AD  
                                 _OSCCON3bits 00AF                            __end_of_initTicker 7722  
                          __end_of_initRomOps 81C2                                      doNnevn@i 052D  
                          __end_of_paramBlock 0840                                canPowerUp@temp 050D  
                       __end_of_setLEDsByMode 7B54                                 ?_factoryReset 0501  
                            _nvTRnvrdCallback 7896                                 findEvent@hash 052C  
                                    doRqevn@i 052D                             ?_canGetDiagnostic 0507  
                                 getEVs@evIdx 051B                                   _IVTLOCKbits 0459  
               __end_of_APP_preProcessMessage 825E                            ??_canGetDiagnostic 0509  
                                 _SPI1CLKbits 008C                                      isa$xinst 0000  
                                    _testTime 057C                                      _services FF89  
                              _receiveOverrun 7DD0                      clearAllEvents@tableIndex 0536  
                             _nvGetDiagnostic 7E34                                   ??_findEvent 0526  
                       _handleSelfEnumeration 6446                       canSendMessage@txFifoObj 0519  
                          __end_of_mnsService FFEB                       __end_of_flushFlashBlock 6962  
                           writeEv@tableIndex 0524                            __end_of_mnsPowerUp 4F62  
                                ??_showStatus 0501                                   ??_pbUpTimer 0518  
                                    _writeNVM 7722                              sendRTR@txFifoObj 0501  
                  processEnumeration@newCanId 051B                        APP_addEvent@forceOwnNN 054D  
                                 _setNewCanId 7AC8                                   _sendMessage 6BBE  
          handleSelfEnumeration@receivedCanId 050F                                 writeNVM@index 050E  
                     updateLedRange@end_ledno 0501                                 writeNVM@value 0511  
                                 ??_leds_poll 050B                    ??_factoryResetGlobalEvents 0537  
                          _evtIdxToTableIndex 822A                         canGetDiagnostic@index 050A  
                                 _NVMCON0bits 0040                                   _NVMCON1bits 0041  
                                    memcpy@d1 0501                                      memcpy@s1 0503  
                             _eraseFlashBlock 6E7E                             APP_addEvent@evVal 054C  
                           APP_addEvent@evNum 054B                       teachGetDiagnostic@index 0509  
                              ??_EEPROM_Write 050D                    __end_of_processEnumeration 47E2  
                                 getHash@hash 0521                               _C1FIFOCON1Hbits 015D  
                                    intlevel2 0000                           ?_evtIdxToTableIndex 0501  
                             _C1FIFOCON3Hbits 0175                                 ?_getParameter 0501  
                        getNextWriteMessage@q 0501                              ?_canFactoryReset 0501  
                                ?_EEPROM_Read 0501                              ___lldiv@dividend 050B  
                              ??_factoryReset 0537                                   ??_nvPowerUp 0512  
                       removeEvent@tableIndex 053A                              ?_teachGetESDdata 0501  
                    __end_of_findServiceIndex 6D6A                                   _removeEvent 7D34  
                      APP_addEvent@nodeNumber 0547                       ?_consumerProcessMessage 0554  
                          __end_of_showStatus 50A4                mnsTRrqnpnCallback@serviceIndex 052E  
                       removeEvent@nodeNumber 0536                        ?_CAN1_OperationModeGet 0501  
                      ?_CAN1_OperationModeSet 0501                            _paramBlock_absaddr 0820  
                      __end_of_receiveOverrun 7E04                           updateLedRange@ledno 0504  
                          __end_of_priorities FF59                              ??_canSendMessage 050F  
                 __end_of_teachProcessMessage 1ED0                    __end_of_tableIndexToEvtIdx 8236  
                        __end_of_canTransport FFFF                                  ?_FLASH_Write 0506  
                          tickGet@currentTime 0507                        ??_EEPROM_WriteNoVerify 0505  
                                    powerUp@i 052D                          ??_evtIdxToTableIndex 0501  
                           _pollTimedResponse 60A6                         __end_of_teachCheckLen 7006  
                                 ??_updateRGB 0501                            ?_pollTimedResponse 0501  
                    _APP_processConsumedEvent 5918                             FLASH_Read@address 0501  
                            _APP_factoryReset 8242                       nerdCallback@eventNumber 0532  
                                  _PRLOCKbits 00B4                 APP_isConsumedEvent@tableIndex 0501  
                            ___lldiv@quotient 0513                                _updateLedRange 7B98  
                           ?_startEnumeration 0501                                  ?_pbDownTimer 0501  
                                 findEvent@en 052A                                   findEvent@nn 0528  
                        findEvent@eventNumber 0524                                   ?_FLASH_Read 0501  
                               bootEsdData@id 0501                    ??_canWaitForTxQueueToDrain 0501  
                         ??_pollTimedResponse 053D                              _mnsGetDiagnostic 7E64  
                          ??_startEnumeration 050B                  _timedResponseAllServicesFlag 0597  
                             _C1FIFOSTA2Hbits 016D                       ??_consumerGetDiagnostic 0509  
                             _C1FIFOSTA1Lbits 0160                               _C1FIFOSTA3Hbits 0179  
                              ??_getParameter 0506                               _C1FIFOSTA2Lbits 016C  
                                ?_bootEsdData 0501                               _C1FIFOSTA3Lbits 0178  
                           sendMessage2@data1 0526                             sendMessage2@data2 0527  
                           sendMessage3@data1 0526                             sendMessage3@data2 0527  
                           sendMessage3@data3 0528                             sendMessage4@data1 0526  
                           sendMessage4@data2 0527                             sendMessage4@data3 0528  
                           sendMessage4@data4 0529                             sendMessage5@data1 0526  
                           sendMessage5@data2 0527                             sendMessage5@data3 0528  
                           sendMessage5@data4 0529                             sendMessage5@data5 052A  
                           sendMessage6@data1 0526                             sendMessage6@data2 0527  
                           sendMessage6@data3 0528                             sendMessage6@data4 0529  
                           sendMessage6@data5 052A                             sendMessage6@data6 052B  
                            bootPowerUp@found 050E                               _last_mode_flags 059F  
                           sendMessage7@data1 0526                             sendMessage7@data2 0527  
                           sendMessage7@data3 0528                             sendMessage7@data4 0529  
                           sendMessage7@data5 052A                             sendMessage7@data6 052B  
                           sendMessage7@data7 052C                __end_of_consumerProcessMessage 3F9E  
                              _checkPowerOnPb 6596                              EEPROM_Read@index 0501  
                    ?_prepareSelfEnumResponse 0501                               _last_mode_state 05A0  
                 __end_of_APP_isConsumedEvent 825A                       __end_of_nvGetDiagnostic 7E64  
                                ?_bootPowerUp 0501                               ?_receiveOverrun 0501  
                        nvTRnvrdCallback@step 052F                          nvTRnvrdCallback@type 0501  
                 __end_of_getNextWriteMessage 5918  
